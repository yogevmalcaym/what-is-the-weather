!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,r){!function(e,t){if(!w[e]||!x[e])return;for(var r in x[e]=!1,t)Object.prototype.hasOwnProperty.call(t,r)&&(m[r]=t[r]);0==--h&&0===v&&O()}(e,r),t&&t(e,r)};var r,n=!0,o="5d10a33dc5cf7459fa3a",i={},a=[],l=[];function c(e){var t=P[e];if(!t)return _;var n=function(n){return t.hot.active?(P[n]?-1===P[n].parents.indexOf(e)&&P[n].parents.push(e):(a=[e],r=n),-1===t.children.indexOf(n)&&t.children.push(n)):(console.warn("[HMR] unexpected require("+n+") from disposed module "+e),a=[]),_(n)},o=function(e){return{configurable:!0,enumerable:!0,get:function(){return _[e]},set:function(t){_[e]=t}}};for(var i in _)Object.prototype.hasOwnProperty.call(_,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(n,i,o(i));return n.e=function(e){return"ready"===f&&d("prepare"),v++,_.e(e).then(t,(function(e){throw t(),e}));function t(){v--,"prepare"===f&&(y[e]||S(e),0===v&&0===h&&O())}},n.t=function(e,t){return 1&t&&(e=n(e)),_.t(e,-2&t)},n}function u(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:r!==t,active:!0,accept:function(e,t){if(void 0===e)n._selfAccepted=!0;else if("function"==typeof e)n._selfAccepted=e;else if("object"==typeof e)for(var r=0;r<e.length;r++)n._acceptedDependencies[e[r]]=t||function(){};else n._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)n._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)n._declinedDependencies[e[t]]=!0;else n._declinedDependencies[e]=!0},dispose:function(e){n._disposeHandlers.push(e)},addDisposeHandler:function(e){n._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=n._disposeHandlers.indexOf(e);t>=0&&n._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,f){case"idle":(m={})[t]=e[t],d("ready");break;case"ready":C(t);break;case"prepare":case"check":case"dispose":case"apply":(b=b||[]).push(t)}},check:E,apply:j,status:function(e){if(!e)return f;s.push(e)},addStatusHandler:function(e){s.push(e)},removeStatusHandler:function(e){var t=s.indexOf(e);t>=0&&s.splice(t,1)},data:i[t]};return r=void 0,n}var s=[],f="idle";function d(e){f=e;for(var t=0;t<s.length;t++)s[t].call(null,e)}var p,m,g,b,h=0,v=0,y={},x={},w={};function k(e){return+e+""===e?+e:e}function E(e){if("idle"!==f)throw new Error("check() is only allowed in idle status");return n=e,d("check"),(t=1e4,t=t||1e4,new Promise((function(e,r){if("undefined"==typeof XMLHttpRequest)return r(new Error("No browser support"));try{var n=new XMLHttpRequest,i=_.p+""+o+".hot-update.json";n.open("GET",i,!0),n.timeout=t,n.send(null)}catch(e){return r(e)}n.onreadystatechange=function(){if(4===n.readyState)if(0===n.status)r(new Error("Manifest request to "+i+" timed out."));else if(404===n.status)e();else if(200!==n.status&&304!==n.status)r(new Error("Manifest request to "+i+" failed."));else{try{var t=JSON.parse(n.responseText)}catch(e){return void r(e)}e(t)}}}))).then((function(e){if(!e)return d(T()?"ready":"idle"),null;x={},y={},w=e.c,g=e.h,d("prepare");var t=new Promise((function(e,t){p={resolve:e,reject:t}}));m={};return S(0),"prepare"===f&&0===v&&0===h&&O(),t}));var t}function S(e){w[e]?(x[e]=!0,h++,function(e){var t=document.createElement("script");t.charset="utf-8",t.src=_.p+""+e+"."+o+".hot-update.js",document.head.appendChild(t)}(e)):y[e]=!0}function O(){d("ready");var e=p;if(p=null,e)if(n)Promise.resolve().then((function(){return j(n)})).then((function(t){e.resolve(t)}),(function(t){e.reject(t)}));else{var t=[];for(var r in m)Object.prototype.hasOwnProperty.call(m,r)&&t.push(k(r));e.resolve(t)}}function j(t){if("ready"!==f)throw new Error("apply() is only allowed in ready status");return function t(n){var l,c,u,s,f;function p(e){for(var t=[e],r={},n=t.map((function(e){return{chain:[e],id:e}}));n.length>0;){var o=n.pop(),i=o.id,a=o.chain;if((s=P[i])&&(!s.hot._selfAccepted||s.hot._selfInvalidated)){if(s.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:i};if(s.hot._main)return{type:"unaccepted",chain:a,moduleId:i};for(var l=0;l<s.parents.length;l++){var c=s.parents[l],u=P[c];if(u){if(u.hot._declinedDependencies[i])return{type:"declined",chain:a.concat([c]),moduleId:i,parentId:c};-1===t.indexOf(c)&&(u.hot._acceptedDependencies[i]?(r[c]||(r[c]=[]),h(r[c],[i])):(delete r[c],t.push(c),n.push({chain:a.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:r}}function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];-1===e.indexOf(n)&&e.push(n)}}T();var v={},y=[],x={},E=function(){console.warn("[HMR] unexpected require("+O.moduleId+") to disposed module")};for(var S in m)if(Object.prototype.hasOwnProperty.call(m,S)){var O;f=k(S),O=m[S]?p(f):{type:"disposed",moduleId:S};var j=!1,C=!1,N=!1,M="";switch(O.chain&&(M="\nUpdate propagation: "+O.chain.join(" -> ")),O.type){case"self-declined":n.onDeclined&&n.onDeclined(O),n.ignoreDeclined||(j=new Error("Aborted because of self decline: "+O.moduleId+M));break;case"declined":n.onDeclined&&n.onDeclined(O),n.ignoreDeclined||(j=new Error("Aborted because of declined dependency: "+O.moduleId+" in "+O.parentId+M));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(O),n.ignoreUnaccepted||(j=new Error("Aborted because "+f+" is not accepted"+M));break;case"accepted":n.onAccepted&&n.onAccepted(O),C=!0;break;case"disposed":n.onDisposed&&n.onDisposed(O),N=!0;break;default:throw new Error("Unexception type "+O.type)}if(j)return d("abort"),Promise.reject(j);if(C)for(f in x[f]=m[f],h(y,O.outdatedModules),O.outdatedDependencies)Object.prototype.hasOwnProperty.call(O.outdatedDependencies,f)&&(v[f]||(v[f]=[]),h(v[f],O.outdatedDependencies[f]));N&&(h(y,[O.moduleId]),x[f]=E)}var A,R=[];for(c=0;c<y.length;c++)f=y[c],P[f]&&P[f].hot._selfAccepted&&x[f]!==E&&!P[f].hot._selfInvalidated&&R.push({module:f,parents:P[f].parents.slice(),errorHandler:P[f].hot._selfAccepted});d("dispose"),Object.keys(w).forEach((function(e){!1===w[e]&&function(e){delete installedChunks[e]}(e)}));var z,I,F=y.slice();for(;F.length>0;)if(f=F.pop(),s=P[f]){var D={},L=s.hot._disposeHandlers;for(u=0;u<L.length;u++)(l=L[u])(D);for(i[f]=D,s.hot.active=!1,delete P[f],delete v[f],u=0;u<s.children.length;u++){var U=P[s.children[u]];U&&((A=U.parents.indexOf(f))>=0&&U.parents.splice(A,1))}}for(f in v)if(Object.prototype.hasOwnProperty.call(v,f)&&(s=P[f]))for(I=v[f],u=0;u<I.length;u++)z=I[u],(A=s.children.indexOf(z))>=0&&s.children.splice(A,1);d("apply"),void 0!==g&&(o=g,g=void 0);for(f in m=void 0,x)Object.prototype.hasOwnProperty.call(x,f)&&(e[f]=x[f]);var B=null;for(f in v)if(Object.prototype.hasOwnProperty.call(v,f)&&(s=P[f])){I=v[f];var W=[];for(c=0;c<I.length;c++)if(z=I[c],l=s.hot._acceptedDependencies[z]){if(-1!==W.indexOf(l))continue;W.push(l)}for(c=0;c<W.length;c++){l=W[c];try{l(I)}catch(e){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:f,dependencyId:I[c],error:e}),n.ignoreErrored||B||(B=e)}}}for(c=0;c<R.length;c++){var $=R[c];f=$.module,a=$.parents,r=f;try{_(f)}catch(e){if("function"==typeof $.errorHandler)try{$.errorHandler(e)}catch(t){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:f,error:t,originalError:e}),n.ignoreErrored||B||(B=t),B||(B=e)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:f,error:e}),n.ignoreErrored||B||(B=e)}}if(B)return d("fail"),Promise.reject(B);if(b)return t(n).then((function(e){return y.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e}));return d("idle"),new Promise((function(e){e(y)}))}(t=t||{})}function T(){if(b)return m||(m={}),b.forEach(C),b=void 0,!0}function C(t){Object.prototype.hasOwnProperty.call(m,t)||(m[t]=e[t])}var P={};function _(t){if(P[t])return P[t].exports;var r=P[t]={i:t,l:!1,exports:{},hot:u(t),parents:(l=a,a=[],l),children:[]};return e[t].call(r.exports,r,r.exports,c(t)),r.l=!0,r.exports}_.m=e,_.c=P,_.d=function(e,t,r){_.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},_.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},_.t=function(e,t){if(1&t&&(e=_(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(_.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)_.d(r,n,function(t){return e[t]}.bind(null,n));return r},_.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return _.d(t,"a",t),t},_.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},_.p="",_.h=function(){return o},c(171)(_.s=171)}([function(e,t,r){"use strict";e.exports=r(376)},function(e,t,r){var n=r(5),o=r(25),i=r(17),a=r(18),l=r(26),c=function(e,t,r){var u,s,f,d,p=e&c.F,m=e&c.G,g=e&c.S,b=e&c.P,h=e&c.B,v=m?n:g?n[t]||(n[t]={}):(n[t]||{}).prototype,y=m?o:o[t]||(o[t]={}),x=y.prototype||(y.prototype={});for(u in m&&(r=t),r)f=((s=!p&&v&&void 0!==v[u])?v:r)[u],d=h&&s?l(f,n):b&&"function"==typeof f?l(Function.call,f):f,v&&a(v,u,f,e&c.U),y[u]!=f&&i(y,u,d),b&&x[u]!=f&&(x[u]=f)};n.core=o,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e,t,r){"use strict";(function(e){r.d(t,"a",(function(){return Pe})),r.d(t,"b",(function(){return Re})),r.d(t,"c",(function(){return fe}));var n=r(55),o=r(0),i=r.n(o),a=r(159),l=r.n(a),c=r(160),u=r(161),s=r(111),f=r(56),d=r.n(f);function p(){return(p=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}var m=function(e,t){for(var r=[e[0]],n=0,o=t.length;n<o;n+=1)r.push(t[n],e[n+1]);return r},g=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!Object(n.typeOf)(e)},b=Object.freeze([]),h=Object.freeze({});function v(e){return"function"==typeof e}function y(e){return e.displayName||e.name||"Component"}function x(e){return e&&"string"==typeof e.styledComponentId}var w=void 0!==e&&(e.env.REACT_APP_SC_ATTR||e.env.SC_ATTR)||"data-styled",k="undefined"!=typeof window&&"HTMLElement"in window,E="boolean"==typeof SC_DISABLE_SPEEDY&&SC_DISABLE_SPEEDY||void 0!==e&&(e.env.REACT_APP_SC_DISABLE_SPEEDY||e.env.SC_DISABLE_SPEEDY)||!1,S={},O=function(){return r.nc};function j(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(r.length>0?" Args: "+r.join(", "):""))}var T=function(e){var t=document.head,r=e||t,n=document.createElement("style"),o=function(e){for(var t=e.childNodes,r=t.length;r>=0;r--){var n=t[r];if(n&&1===n.nodeType&&n.hasAttribute(w))return n}}(r),i=void 0!==o?o.nextSibling:null;n.setAttribute(w,"active"),n.setAttribute("data-styled-version","5.2.0");var a=O();return a&&n.setAttribute("nonce",a),r.insertBefore(n,i),n},C=function(){function e(e){var t=this.element=T(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,r=0,n=t.length;r<n;r++){var o=t[r];if(o.ownerNode===e)return o}j(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),P=function(){function e(e){var t=this.element=T(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var r=document.createTextNode(t),n=this.nodes[e];return this.element.insertBefore(r,n||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),_=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),N=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,r=0;r<e;r++)t+=this.groupSizes[r];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var r=this.groupSizes,n=r.length,o=n;e>=o;)(o<<=1)<0&&j(16,""+e);this.groupSizes=new Uint32Array(o),this.groupSizes.set(r),this.length=o;for(var i=n;i<o;i++)this.groupSizes[i]=0}for(var a=this.indexOfGroup(e+1),l=0,c=t.length;l<c;l++)this.tag.insertRule(a,t[l])&&(this.groupSizes[e]++,a++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],r=this.indexOfGroup(e),n=r+t;this.groupSizes[e]=0;for(var o=r;o<n;o++)this.tag.deleteRule(r)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var r=this.groupSizes[e],n=this.indexOfGroup(e),o=n+r,i=n;i<o;i++)t+=this.tag.getRule(i)+"/*!sc*/\n";return t},e}(),M=new Map,A=new Map,R=1,z=function(e){if(M.has(e))return M.get(e);var t=R++;return M.set(e,t),A.set(t,e),t},I=function(e){return A.get(e)},F=function(e,t){t>=R&&(R=t+1),M.set(e,t),A.set(t,e)},D="style["+w+'][data-styled-version="5.2.0"]',L=new RegExp("^"+w+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),U=function(e,t,r){for(var n,o=r.split(","),i=0,a=o.length;i<a;i++)(n=o[i])&&e.registerName(t,n)},B=function(e,t){for(var r=t.innerHTML.split("/*!sc*/\n"),n=[],o=0,i=r.length;o<i;o++){var a=r[o].trim();if(a){var l=a.match(L);if(l){var c=0|parseInt(l[1],10),u=l[2];0!==c&&(F(u,c),U(e,u,l[3]),e.getTag().insertRules(c,n)),n.length=0}else n.push(a)}}},W=k,$={isServer:!k,useCSSOMInjection:!E},H=function(){function e(e,t,r){void 0===e&&(e=$),void 0===t&&(t={}),this.options=p({},$,{},e),this.gs=t,this.names=new Map(r),!this.options.isServer&&k&&W&&(W=!1,function(e){for(var t=document.querySelectorAll(D),r=0,n=t.length;r<n;r++){var o=t[r];o&&"active"!==o.getAttribute(w)&&(B(e,o),o.parentNode&&o.parentNode.removeChild(o))}}(this))}e.registerId=function(e){return z(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,r){return void 0===r&&(r=!0),new e(p({},this.options,{},t),this.gs,r&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(r=(t=this.options).isServer,n=t.useCSSOMInjection,o=t.target,e=r?new _(o):n?new C(o):new P(o),new N(e)));var e,t,r,n,o},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(z(e),this.names.has(e))this.names.get(e).add(t);else{var r=new Set;r.add(t),this.names.set(e,r)}},t.insertRules=function(e,t,r){this.registerName(e,t),this.getTag().insertRules(z(e),r)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(z(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),r=t.length,n="",o=0;o<r;o++){var i=I(o);if(void 0!==i){var a=e.names.get(i),l=t.getGroup(o);if(void 0!==a&&0!==l.length){var c=w+".g"+o+'[id="'+i+'"]',u="";void 0!==a&&a.forEach((function(e){e.length>0&&(u+=e+",")})),n+=""+l+c+'{content:"'+u+'"}/*!sc*/\n'}}}return n}(this)},e}(),V=function(e,t){for(var r=t.length;r;)e=33*e^t.charCodeAt(--r);return e},q=function(e){return V(5381,e)},G=/^\s*\/\/.*$/gm,K=[":","[",".","#"];function Q(e){var t,r,n,o,i=void 0===e?h:e,a=i.options,l=void 0===a?h:a,u=i.plugins,s=void 0===u?b:u,f=new c.a(l),d=[],p=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(r,n,o,i,a,l,c,u,s,f){switch(r){case 1:if(0===s&&64===n.charCodeAt(0))return e(n+";"),"";break;case 2:if(0===u)return n+"/*|*/";break;case 3:switch(u){case 102:case 112:return e(o[0]+n),"";default:return n+(0===f?"/*|*/":"")}case-2:n.split("/*|*/}").forEach(t)}}}((function(e){d.push(e)})),m=function(e,n,i){return 0===n&&K.includes(i[r.length])||i.match(o)?e:"."+t};function g(e,i,a,l){void 0===l&&(l="&");var c=e.replace(G,""),u=i&&a?a+" "+i+" { "+c+" }":c;return t=l,r=i,n=new RegExp("\\"+r+"\\b","g"),o=new RegExp("(\\"+r+"\\b){2,}"),f(a||!i?"":i,u)}return f.use([].concat(s,[function(e,t,o){2===e&&o.length&&o[0].lastIndexOf(r)>0&&(o[0]=o[0].replace(n,m))},p,function(e){if(-2===e){var t=d;return d=[],t}}])),g.hash=s.length?s.reduce((function(e,t){return t.name||j(15),V(e,t.name)}),5381).toString():"",g}var Y=i.a.createContext(),X=(Y.Consumer,i.a.createContext()),J=(X.Consumer,new H),Z=Q();function ee(){return Object(o.useContext)(Y)||J}function te(){return Object(o.useContext)(X)||Z}function re(e){var t=Object(o.useState)(e.stylisPlugins),r=t[0],n=t[1],a=ee(),c=Object(o.useMemo)((function(){var t=a;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),u=Object(o.useMemo)((function(){return Q({options:{prefix:!e.disableVendorPrefixes},plugins:r})}),[e.disableVendorPrefixes,r]);return Object(o.useEffect)((function(){l()(r,e.stylisPlugins)||n(e.stylisPlugins)}),[e.stylisPlugins]),i.a.createElement(Y.Provider,{value:c},i.a.createElement(X.Provider,{value:u},e.children))}var ne=function(){function e(e,t){var r=this;this.inject=function(e,t){void 0===t&&(t=Z);var n=r.name+t.hash;e.hasNameForId(r.id,n)||e.insertRules(r.id,n,t(r.rules,n,"@keyframes"))},this.toString=function(){return j(12,String(r.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=Z),this.name+e.hash},e}(),oe=/([A-Z])/,ie=new RegExp(oe,"g"),ae=/^ms-/,le=function(e){return"-"+e.toLowerCase()};function ce(e){return oe.test(e)?e.replace(ie,le).replace(ae,"-ms-"):e}var ue=function(e){return null==e||!1===e||""===e};function se(e,t,r,n){if(Array.isArray(e)){for(var o,i=[],a=0,l=e.length;a<l;a+=1)""!==(o=se(e[a],t,r,n))&&(Array.isArray(o)?i.push.apply(i,o):i.push(o));return i}return ue(e)?"":x(e)?"."+e.styledComponentId:v(e)?"function"!=typeof(c=e)||c.prototype&&c.prototype.isReactComponent||!t?e:se(e(t),t,r,n):e instanceof ne?r?(e.inject(r,n),e.getName(n)):e:g(e)?function e(t,r){var n,o,i=[];for(var a in t)t.hasOwnProperty(a)&&!ue(t[a])&&(g(t[a])?i.push.apply(i,e(t[a],a)):v(t[a])?i.push(ce(a)+":",t[a],";"):i.push(ce(a)+": "+(n=a,(null==(o=t[a])||"boolean"==typeof o||""===o?"":"number"!=typeof o||0===o||n in u.a?String(o).trim():o+"px")+";")));return r?[r+" {"].concat(i,["}"]):i}(e):e.toString();var c}function fe(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return v(e)||g(e)?se(m(b,[e].concat(r))):0===r.length&&1===e.length&&"string"==typeof e[0]?e:se(m(e,r))}var de=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},pe=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function me(e,t,r){var n=e[r];de(t)&&de(n)?ge(n,t):e[r]=t}function ge(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];for(var o=0,i=r;o<i.length;o++){var a=i[o];if(de(a))for(var l in a)pe(l)&&me(e,a[l],l)}return e}var be=/(a)(d)/gi,he=function(e){return String.fromCharCode(e+(e>25?39:97))};function ve(e){var t,r="";for(t=Math.abs(e);t>52;t=t/52|0)r=he(t%52)+r;return(he(t%52)+r).replace(be,"$1-$2")}function ye(e){for(var t=0;t<e.length;t+=1){var r=e[t];if(v(r)&&!x(r))return!1}return!0}var xe=q("5.2.0"),we=function(){function e(e,t,r){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===r||r.isStatic)&&ye(e),this.componentId=t,this.baseHash=V(xe,t),this.baseStyle=r,H.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,r){var n=this.componentId,o=[];if(this.baseStyle&&o.push(this.baseStyle.generateAndInjectStyles(e,t,r)),this.isStatic&&!r.hash)if(this.staticRulesId&&t.hasNameForId(n,this.staticRulesId))o.push(this.staticRulesId);else{var i=se(this.rules,e,t,r).join(""),a=ve(V(this.baseHash,i.length)>>>0);if(!t.hasNameForId(n,a)){var l=r(i,"."+a,void 0,n);t.insertRules(n,a,l)}o.push(a),this.staticRulesId=a}else{for(var c=this.rules.length,u=V(this.baseHash,r.hash),s="",f=0;f<c;f++){var d=this.rules[f];if("string"==typeof d)s+=d;else if(d){var p=se(d,e,t,r),m=Array.isArray(p)?p.join(""):p;u=V(u,m+f),s+=m}}if(s){var g=ve(u>>>0);if(!t.hasNameForId(n,g)){var b=r(s,"."+g,void 0,n);t.insertRules(n,g,b)}o.push(g)}}return o.join(" ")},e}(),ke=(new Set,function(e,t,r){return void 0===r&&(r=h),e.theme!==r.theme&&e.theme||t||r.theme}),Ee=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,Se=/(^-|-$)/g;function Oe(e){return e.replace(Ee,"-").replace(Se,"")}function je(e){return"string"==typeof e&&!0}var Te=function(e){return ve(q(e)>>>0)},Ce=i.a.createContext();Ce.Consumer;function Pe(e){var t=Object(o.useContext)(Ce),r=Object(o.useMemo)((function(){return function(e,t){return e?v(e)?e(t):Array.isArray(e)||"object"!=typeof e?j(8):t?p({},t,{},e):e:j(14)}(e.theme,t)}),[e.theme,t]);return e.children?i.a.createElement(Ce.Provider,{value:r},e.children):null}var _e={};function Ne(e,t,r){var n=x(e),a=!je(e),l=t.displayName,c=void 0===l?function(e){return je(e)?"styled."+e:"Styled("+y(e)+")"}(e):l,u=t.componentId,f=void 0===u?function(e,t){var r="string"!=typeof e?"sc":Oe(e);_e[r]=(_e[r]||0)+1;var n=r+"-"+Te("5.2.0"+r+_e[r]);return t?t+"-"+n:n}(t.displayName,t.parentComponentId):u,m=t.attrs,g=void 0===m?b:m,w=t.displayName&&t.componentId?Oe(t.displayName)+"-"+t.componentId:t.componentId||f,k=n&&e.attrs?Array.prototype.concat(e.attrs,g).filter(Boolean):g,E=t.shouldForwardProp;n&&e.shouldForwardProp&&(E=E?function(r,n){return e.shouldForwardProp(r,n)&&t.shouldForwardProp(r,n)}:e.shouldForwardProp);var S,O=new we(r,w,n?e.componentStyle:void 0),j=function(e,t){return function(e,t,r){var n=e.attrs,i=e.componentStyle,a=e.defaultProps,l=e.foldedComponentIds,c=e.shouldForwardProp,u=e.styledComponentId,f=e.target,d=function(e,t,r){void 0===e&&(e=h);var n=p({},t,{theme:e}),o={};return r.forEach((function(e){var t,r,i,a=e;for(t in v(a)&&(a=a(n)),a)n[t]=o[t]="className"===t?(r=o[t],i=a[t],r&&i?r+" "+i:r||i):a[t]})),[n,o]}(ke(t,Object(o.useContext)(Ce),a)||h,t,n),m=d[0],g=d[1],b=function(e,t,r,n){var o=ee(),i=te();return e.isStatic&&!t?e.generateAndInjectStyles(h,o,i):e.generateAndInjectStyles(r,o,i)}(i,n.length>0,m),y=r,x=g.$as||t.$as||g.as||t.as||f,w=je(x),k=g!==t?p({},t,{},g):t,E=c||w&&s.a,S={};for(var O in k)"$"!==O[0]&&"as"!==O&&("forwardedAs"===O?S.as=k[O]:E&&!E(O,s.a)||(S[O]=k[O]));return t.style&&g.style!==t.style&&(S.style=p({},t.style,{},g.style)),S.className=Array.prototype.concat(l,u,b!==u?b:null,t.className,g.className).filter(Boolean).join(" "),S.ref=y,Object(o.createElement)(x,S)}(S,e,t)};return j.displayName=c,(S=i.a.forwardRef(j)).attrs=k,S.componentStyle=O,S.displayName=c,S.shouldForwardProp=E,S.foldedComponentIds=n?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):b,S.styledComponentId=w,S.target=n?e.target:e,S.withComponent=function(e){var n=t.componentId,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(t,["componentId"]),i=n&&n+"-"+(je(e)?e:Oe(y(e)));return Ne(e,p({},o,{attrs:k,componentId:i}),r)},Object.defineProperty(S,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=n?ge({},e.defaultProps,t):t}}),S.toString=function(){return"."+S.styledComponentId},a&&d()(S,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,self:!0,styledComponentId:!0,target:!0,withComponent:!0}),S}var Me=function(e){return function e(t,r,o){if(void 0===o&&(o=h),!Object(n.isValidElementType)(r))return j(1,String(r));var i=function(){return t(r,o,fe.apply(void 0,arguments))};return i.withConfig=function(n){return e(t,r,p({},o,{},n))},i.attrs=function(n){return e(t,r,p({},o,{attrs:Array.prototype.concat(o.attrs,n).filter(Boolean)}))},i}(Ne,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","tspan"].forEach((function(e){Me[e]=Me(e)}));var Ae=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=ye(e),H.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,r,n){var o=n(se(this.rules,t,r,n).join(""),""),i=this.componentId+e;r.insertRules(i,i,o)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,r,n){e>2&&H.registerId(this.componentId+e),this.removeStyles(e,r),this.createStyles(e,t,r,n)},e}();function Re(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var a=fe.apply(void 0,[e].concat(r)),l="sc-global-"+Te(JSON.stringify(a)),c=new Ae(a,l);function u(e){var t=ee(),r=te(),n=Object(o.useContext)(Ce),i=Object(o.useRef)(t.allocateGSInstance(l)).current;return Object(o.useLayoutEffect)((function(){return s(i,e,t,n,r),function(){return c.removeStyles(i,t)}}),[i,e,t,n,r]),null}function s(e,t,r,n,o){if(c.isStatic)c.renderStyles(e,S,r,o);else{var i=p({},t,{theme:ke(t,n,u.defaultProps)});c.renderStyles(e,i,r,o)}}return i.a.memo(u)}!function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString(),r=O();return"<style "+[r&&'nonce="'+r+'"',w+'="true"','data-styled-version="5.2.0"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?j(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return j(2);var r=((t={})[w]="",t["data-styled-version"]="5.2.0",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),n=O();return n&&(r.nonce=n),[i.a.createElement("style",p({},r,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new H({isServer:!0}),this.sealed=!1}var t=e.prototype;t.collectStyles=function(e){return this.sealed?j(2):i.a.createElement(re,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return j(3)}}();t.d=Me}).call(this,r(149))},function(e,t,r){"use strict";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}r.d(t,"a",(function(){return n}))},function(e,t,r){var n=r(8);e.exports=function(e){if(!n(e))throw TypeError(e+" is not an object!");return e}},function(e,t){var r=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=r)},function(e,t,r){var n;
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/!function(){"use strict";var r={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)&&n.length){var a=o.apply(null,n);a&&e.push(a)}else if("object"===i)for(var l in n)r.call(n,l)&&n[l]&&e.push(l)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(n=function(){return o}.apply(t,[]))||(e.exports=n)}()},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t,r){var n=r(58)("wks"),o=r(41),i=r(5).Symbol,a="function"==typeof i;(e.exports=function(e){return n[e]||(n[e]=a&&i[e]||(a?i:o)("Symbol."+e))}).store=n},function(e,t,r){e.exports=r(380)()},function(e,t,r){var n=r(28),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t,r){e.exports=!r(7)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(4),o=r(112),i=r(30),a=Object.defineProperty;t.f=r(12)?Object.defineProperty:function(e,t,r){if(n(e),t=i(t,!0),n(r),o)try{return a(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(31);e.exports=function(e){return Object(n(e))}},function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}r.d(t,"a",(function(){return n}))},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e}},function(e,t,r){var n=r(13),o=r(40);e.exports=r(12)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(5),o=r(17),i=r(21),a=r(41)("src"),l=r(175),c=(""+l).split("toString");r(25).inspectSource=function(e){return l.call(e)},(e.exports=function(e,t,r,l){var u="function"==typeof r;u&&(i(r,"name")||o(r,"name",t)),e[t]!==r&&(u&&(i(r,a)||o(r,a,e[t]?""+e[t]:c.join(String(t)))),e===n?e[t]=r:l?e[t]?e[t]=r:o(e,t,r):(delete e[t],o(e,t,r)))})(Function.prototype,"toString",(function(){return"function"==typeof this&&this[a]||l.call(this)}))},function(e,t,r){var n=r(1),o=r(7),i=r(31),a=/"/g,l=function(e,t,r,n){var o=String(i(e)),l="<"+t;return""!==r&&(l+=" "+r+'="'+String(n).replace(a,"&quot;")+'"'),l+">"+o+"</"+t+">"};e.exports=function(e,t){var r={};r[e]=t(l),n(n.P+n.F*o((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3})),"String",r)}},function(e,t,r){"use strict";var n=r(150),o=Object.prototype.toString;function i(e){return"[object Array]"===o.call(e)}function a(e){return void 0===e}function l(e){return null!==e&&"object"==typeof e}function c(e){if("[object Object]"!==o.call(e))return!1;var t=Object.getPrototypeOf(e);return null===t||t===Object.prototype}function u(e){return"[object Function]"===o.call(e)}function s(e,t){if(null!=e)if("object"!=typeof e&&(e=[e]),i(e))for(var r=0,n=e.length;r<n;r++)t.call(null,e[r],r,e);else for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&t.call(null,e[o],o,e)}e.exports={isArray:i,isArrayBuffer:function(e){return"[object ArrayBuffer]"===o.call(e)},isBuffer:function(e){return null!==e&&!a(e)&&null!==e.constructor&&!a(e.constructor)&&"function"==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)},isFormData:function(e){return"undefined"!=typeof FormData&&e instanceof FormData},isArrayBufferView:function(e){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(e):e&&e.buffer&&e.buffer instanceof ArrayBuffer},isString:function(e){return"string"==typeof e},isNumber:function(e){return"number"==typeof e},isObject:l,isPlainObject:c,isUndefined:a,isDate:function(e){return"[object Date]"===o.call(e)},isFile:function(e){return"[object File]"===o.call(e)},isBlob:function(e){return"[object Blob]"===o.call(e)},isFunction:u,isStream:function(e){return l(e)&&u(e.pipe)},isURLSearchParams:function(e){return"undefined"!=typeof URLSearchParams&&e instanceof URLSearchParams},isStandardBrowserEnv:function(){return("undefined"==typeof navigator||"ReactNative"!==navigator.product&&"NativeScript"!==navigator.product&&"NS"!==navigator.product)&&("undefined"!=typeof window&&"undefined"!=typeof document)},forEach:s,merge:function e(){var t={};function r(r,n){c(t[n])&&c(r)?t[n]=e(t[n],r):c(r)?t[n]=e({},r):i(r)?t[n]=r.slice():t[n]=r}for(var n=0,o=arguments.length;n<o;n++)s(arguments[n],r);return t},extend:function(e,t,r){return s(t,(function(t,o){e[o]=r&&"function"==typeof t?n(t,r):t})),e},trim:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")},stripBOM:function(e){return 65279===e.charCodeAt(0)&&(e=e.slice(1)),e}}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(59),o=r(31);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(60),o=r(40),i=r(22),a=r(30),l=r(21),c=r(112),u=Object.getOwnPropertyDescriptor;t.f=r(12)?u:function(e,t){if(e=i(e),t=a(t,!0),c)try{return u(e,t)}catch(e){}if(l(e,t))return o(!n.f.call(e,t),e[t])}},function(e,t,r){var n=r(21),o=r(14),i=r(82)("IE_PROTO"),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,i)?e[i]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t){var r=e.exports={version:"2.6.11"};"number"==typeof __e&&(__e=r)},function(e,t,r){var n=r(16);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){"use strict";var n=r(7);e.exports=function(e,t){return!!e&&n((function(){t?e.call(null,(function(){}),1):e.call(null)}))}},function(e,t,r){var n=r(8);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e}},function(e,t,r){var n=r(1),o=r(25),i=r(7);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],a={};a[e]=t(r),n(n.S+n.F*i((function(){r(1)})),"Object",a)}},function(e,t,r){var n=r(26),o=r(59),i=r(14),a=r(11),l=r(98);e.exports=function(e,t){var r=1==e,c=2==e,u=3==e,s=4==e,f=6==e,d=5==e||f,p=t||l;return function(t,l,m){for(var g,b,h=i(t),v=o(h),y=n(l,m,3),x=a(v.length),w=0,k=r?p(t,x):c?p(t,0):void 0;x>w;w++)if((d||w in v)&&(b=y(g=v[w],w,h),e))if(r)k[w]=b;else if(b)switch(e){case 3:return!0;case 5:return g;case 6:return w;case 2:k.push(g)}else if(s)return!1;return f?-1:u||s?s:k}}},function(e,t,r){"use strict";if(r(12)){var n=r(36),o=r(5),i=r(7),a=r(1),l=r(75),c=r(106),u=r(26),s=r(47),f=r(40),d=r(17),p=r(49),m=r(28),g=r(11),b=r(140),h=r(43),v=r(30),y=r(21),x=r(52),w=r(8),k=r(14),E=r(95),S=r(44),O=r(24),j=r(45).f,T=r(97),C=r(41),P=r(9),_=r(33),N=r(65),M=r(62),A=r(100),R=r(54),z=r(70),I=r(46),F=r(99),D=r(129),L=r(13),U=r(23),B=L.f,W=U.f,$=o.RangeError,H=o.TypeError,V=o.Uint8Array,q=Array.prototype,G=c.ArrayBuffer,K=c.DataView,Q=_(0),Y=_(2),X=_(3),J=_(4),Z=_(5),ee=_(6),te=N(!0),re=N(!1),ne=A.values,oe=A.keys,ie=A.entries,ae=q.lastIndexOf,le=q.reduce,ce=q.reduceRight,ue=q.join,se=q.sort,fe=q.slice,de=q.toString,pe=q.toLocaleString,me=P("iterator"),ge=P("toStringTag"),be=C("typed_constructor"),he=C("def_constructor"),ve=l.CONSTR,ye=l.TYPED,xe=l.VIEW,we=_(1,(function(e,t){return je(M(e,e[he]),t)})),ke=i((function(){return 1===new V(new Uint16Array([1]).buffer)[0]})),Ee=!!V&&!!V.prototype.set&&i((function(){new V(1).set({})})),Se=function(e,t){var r=m(e);if(r<0||r%t)throw $("Wrong offset!");return r},Oe=function(e){if(w(e)&&ye in e)return e;throw H(e+" is not a typed array!")},je=function(e,t){if(!w(e)||!(be in e))throw H("It is not a typed array constructor!");return new e(t)},Te=function(e,t){return Ce(M(e,e[he]),t)},Ce=function(e,t){for(var r=0,n=t.length,o=je(e,n);n>r;)o[r]=t[r++];return o},Pe=function(e,t,r){B(e,t,{get:function(){return this._d[r]}})},_e=function(e){var t,r,n,o,i,a,l=k(e),c=arguments.length,s=c>1?arguments[1]:void 0,f=void 0!==s,d=T(l);if(null!=d&&!E(d)){for(a=d.call(l),n=[],t=0;!(i=a.next()).done;t++)n.push(i.value);l=n}for(f&&c>2&&(s=u(s,arguments[2],2)),t=0,r=g(l.length),o=je(this,r);r>t;t++)o[t]=f?s(l[t],t):l[t];return o},Ne=function(){for(var e=0,t=arguments.length,r=je(this,t);t>e;)r[e]=arguments[e++];return r},Me=!!V&&i((function(){pe.call(new V(1))})),Ae=function(){return pe.apply(Me?fe.call(Oe(this)):Oe(this),arguments)},Re={copyWithin:function(e,t){return D.call(Oe(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return J(Oe(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return F.apply(Oe(this),arguments)},filter:function(e){return Te(this,Y(Oe(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Z(Oe(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return ee(Oe(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){Q(Oe(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return re(Oe(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return te(Oe(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ue.apply(Oe(this),arguments)},lastIndexOf:function(e){return ae.apply(Oe(this),arguments)},map:function(e){return we(Oe(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return le.apply(Oe(this),arguments)},reduceRight:function(e){return ce.apply(Oe(this),arguments)},reverse:function(){for(var e,t=Oe(this).length,r=Math.floor(t/2),n=0;n<r;)e=this[n],this[n++]=this[--t],this[t]=e;return this},some:function(e){return X(Oe(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return se.call(Oe(this),e)},subarray:function(e,t){var r=Oe(this),n=r.length,o=h(e,n);return new(M(r,r[he]))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,g((void 0===t?n:h(t,n))-o))}},ze=function(e,t){return Te(this,fe.call(Oe(this),e,t))},Ie=function(e){Oe(this);var t=Se(arguments[1],1),r=this.length,n=k(e),o=g(n.length),i=0;if(o+t>r)throw $("Wrong length!");for(;i<o;)this[t+i]=n[i++]},Fe={entries:function(){return ie.call(Oe(this))},keys:function(){return oe.call(Oe(this))},values:function(){return ne.call(Oe(this))}},De=function(e,t){return w(e)&&e[ye]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Le=function(e,t){return De(e,t=v(t,!0))?f(2,e[t]):W(e,t)},Ue=function(e,t,r){return!(De(e,t=v(t,!0))&&w(r)&&y(r,"value"))||y(r,"get")||y(r,"set")||r.configurable||y(r,"writable")&&!r.writable||y(r,"enumerable")&&!r.enumerable?B(e,t,r):(e[t]=r.value,e)};ve||(U.f=Le,L.f=Ue),a(a.S+a.F*!ve,"Object",{getOwnPropertyDescriptor:Le,defineProperty:Ue}),i((function(){de.call({})}))&&(de=pe=function(){return ue.call(this)});var Be=p({},Re);p(Be,Fe),d(Be,me,Fe.values),p(Be,{slice:ze,set:Ie,constructor:function(){},toString:de,toLocaleString:Ae}),Pe(Be,"buffer","b"),Pe(Be,"byteOffset","o"),Pe(Be,"byteLength","l"),Pe(Be,"length","e"),B(Be,ge,{get:function(){return this[ye]}}),e.exports=function(e,t,r,c){var u=e+((c=!!c)?"Clamped":"")+"Array",f="get"+e,p="set"+e,m=o[u],h=m||{},v=m&&O(m),y=!m||!l.ABV,k={},E=m&&m.prototype,T=function(e,r){B(e,r,{get:function(){return function(e,r){var n=e._d;return n.v[f](r*t+n.o,ke)}(this,r)},set:function(e){return function(e,r,n){var o=e._d;c&&(n=(n=Math.round(n))<0?0:n>255?255:255&n),o.v[p](r*t+o.o,n,ke)}(this,r,e)},enumerable:!0})};y?(m=r((function(e,r,n,o){s(e,m,u,"_d");var i,a,l,c,f=0,p=0;if(w(r)){if(!(r instanceof G||"ArrayBuffer"==(c=x(r))||"SharedArrayBuffer"==c))return ye in r?Ce(m,r):_e.call(m,r);i=r,p=Se(n,t);var h=r.byteLength;if(void 0===o){if(h%t)throw $("Wrong length!");if((a=h-p)<0)throw $("Wrong length!")}else if((a=g(o)*t)+p>h)throw $("Wrong length!");l=a/t}else l=b(r),i=new G(a=l*t);for(d(e,"_d",{b:i,o:p,l:a,e:l,v:new K(i)});f<l;)T(e,f++)})),E=m.prototype=S(Be),d(E,"constructor",m)):i((function(){m(1)}))&&i((function(){new m(-1)}))&&z((function(e){new m,new m(null),new m(1.5),new m(e)}),!0)||(m=r((function(e,r,n,o){var i;return s(e,m,u),w(r)?r instanceof G||"ArrayBuffer"==(i=x(r))||"SharedArrayBuffer"==i?void 0!==o?new h(r,Se(n,t),o):void 0!==n?new h(r,Se(n,t)):new h(r):ye in r?Ce(m,r):_e.call(m,r):new h(b(r))})),Q(v!==Function.prototype?j(h).concat(j(v)):j(h),(function(e){e in m||d(m,e,h[e])})),m.prototype=E,n||(E.constructor=m));var C=E[me],P=!!C&&("values"==C.name||null==C.name),_=Fe.values;d(m,be,!0),d(E,ye,u),d(E,xe,!0),d(E,he,m),(c?new m(1)[ge]==u:ge in E)||B(E,ge,{get:function(){return u}}),k[u]=m,a(a.G+a.W+a.F*(m!=h),k),a(a.S,u,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*i((function(){h.of.call(m,1)})),u,{from:_e,of:Ne}),"BYTES_PER_ELEMENT"in E||d(E,"BYTES_PER_ELEMENT",t),a(a.P,u,Re),I(u),a(a.P+a.F*Ee,u,{set:Ie}),a(a.P+a.F*!P,u,Fe),n||E.toString==de||(E.toString=de),a(a.P+a.F*i((function(){new m(1).slice()})),u,{slice:ze}),a(a.P+a.F*(i((function(){return[1,2].toLocaleString()!=new m([1,2]).toLocaleString()}))||!i((function(){E.toLocaleString.call([1,2])}))),u,{toLocaleString:Ae}),R[u]=P?C:_,n||P||d(E,me,_)}}else e.exports=function(){}},function(e,t,r){var n=r(135),o=r(1),i=r(58)("metadata"),a=i.store||(i.store=new(r(138))),l=function(e,t,r){var o=a.get(e);if(!o){if(!r)return;a.set(e,o=new n)}var i=o.get(t);if(!i){if(!r)return;o.set(t,i=new n)}return i};e.exports={store:a,map:l,has:function(e,t,r){var n=l(t,r,!1);return void 0!==n&&n.has(e)},get:function(e,t,r){var n=l(t,r,!1);return void 0===n?void 0:n.get(e)},set:function(e,t,r,n){l(r,n,!0).set(e,t)},keys:function(e,t){var r=l(e,t,!1),n=[];return r&&r.forEach((function(e,t){n.push(t)})),n},key:function(e){return void 0===e||"symbol"==typeof e?e:String(e)},exp:function(e){o(o.S,"Reflect",e)}}},function(e,t){e.exports=!1},function(e,t,r){var n=r(41)("meta"),o=r(8),i=r(21),a=r(13).f,l=0,c=Object.isExtensible||function(){return!0},u=!r(7)((function(){return c(Object.preventExtensions({}))})),s=function(e){a(e,n,{value:{i:"O"+ ++l,w:{}}})},f=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,n)){if(!c(e))return"F";if(!t)return"E";s(e)}return e[n].i},getWeak:function(e,t){if(!i(e,n)){if(!c(e))return!0;if(!t)return!1;s(e)}return e[n].w},onFreeze:function(e){return u&&f.NEED&&c(e)&&!i(e,n)&&s(e),e}}},function(e,t,r){var n=r(9)("unscopables"),o=Array.prototype;null==o[n]&&r(17)(o,n,{}),e.exports=function(e){o[n][e]=!0}},function(e,t,r){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=r(377)},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++r+n).toString(36))}},function(e,t,r){var n=r(114),o=r(83);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){var n=r(28),o=Math.max,i=Math.min;e.exports=function(e,t){return(e=n(e))<0?o(e+t,0):i(e,t)}},function(e,t,r){var n=r(4),o=r(115),i=r(83),a=r(82)("IE_PROTO"),l=function(){},c=function(){var e,t=r(80)("iframe"),n=i.length;for(t.style.display="none",r(84).appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),c=e.F;n--;)delete c.prototype[i[n]];return c()};e.exports=Object.create||function(e,t){var r;return null!==e?(l.prototype=n(e),r=new l,l.prototype=null,r[a]=e):r=c(),void 0===t?r:o(r,t)}},function(e,t,r){var n=r(114),o=r(83).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){"use strict";var n=r(5),o=r(13),i=r(12),a=r(9)("species");e.exports=function(e){var t=n[e];i&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e}},function(e,t,r){var n=r(26),o=r(127),i=r(95),a=r(4),l=r(11),c=r(97),u={},s={};(t=e.exports=function(e,t,r,f,d){var p,m,g,b,h=d?function(){return e}:c(e),v=n(r,f,t?2:1),y=0;if("function"!=typeof h)throw TypeError(e+" is not iterable!");if(i(h)){for(p=l(e.length);p>y;y++)if((b=t?v(a(m=e[y])[0],m[1]):v(e[y]))===u||b===s)return b}else for(g=h.call(e);!(m=g.next()).done;)if((b=o(g,v,m.value,t))===u||b===s)return b}).BREAK=u,t.RETURN=s},function(e,t,r){var n=r(18);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t,r){var n=r(8);e.exports=function(e,t){if(!n(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e}},function(e,t,r){var n=r(13).f,o=r(21),i=r(9)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t,r){var n=r(27),o=r(9)("toStringTag"),i="Arguments"==n(function(){return arguments}());e.exports=function(e){var t,r,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),o))?r:i?n(t):"Object"==(a=n(t))&&"function"==typeof t.callee?"Arguments":a}},function(e,t,r){var n=r(1),o=r(31),i=r(7),a=r(86),l="["+a+"]",c=RegExp("^"+l+l+"*"),u=RegExp(l+l+"*$"),s=function(e,t,r){var o={},l=i((function(){return!!a[e]()||"​"!="​"[e]()})),c=o[e]=l?t(f):a[e];r&&(o[r]=c),n(n.P+n.F*l,"String",o)},f=s.trim=function(e,t){return e=String(o(e)),1&t&&(e=e.replace(c,"")),2&t&&(e=e.replace(u,"")),e};e.exports=s},function(e,t){e.exports={}},function(e,t,r){"use strict";e.exports=r(382)},function(e,t,r){"use strict";var n=r(55),o={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},a={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function c(e){return n.isMemo(e)?a:l[e.$$typeof]||o}l[n.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[n.Memo]=a;var u=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,m=Object.prototype;e.exports=function e(t,r,n){if("string"!=typeof r){if(m){var o=p(r);o&&o!==m&&e(t,o,n)}var a=s(r);f&&(a=a.concat(f(r)));for(var l=c(t),g=c(r),b=0;b<a.length;++b){var h=a[b];if(!(i[h]||n&&n[h]||g&&g[h]||l&&l[h])){var v=d(r,h);try{u(t,h,v)}catch(e){}}}}return t}},function(e,t,r){"use strict";e.exports=function(e,t,r,n,o,i,a,l){if(!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[r,n,o,i,a,l],s=0;(c=new Error(t.replace(/%s/g,(function(){return u[s++]})))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,r){var n=r(25),o=r(5),i=o["__core-js_shared__"]||(o["__core-js_shared__"]={});(e.exports=function(e,t){return i[e]||(i[e]=void 0!==t?t:{})})("versions",[]).push({version:n.version,mode:r(36)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,r){var n=r(27);e.exports=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==n(e)?e.split(""):Object(e)}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,r){"use strict";var n=r(4);e.exports=function(){var e=n(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t}},function(e,t,r){var n=r(4),o=r(16),i=r(9)("species");e.exports=function(e,t){var r,a=n(e).constructor;return void 0===a||null==(r=n(a)[i])?t:o(r)}},function(e,t,r){e.exports=r(406)},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t,r){var n=r(22),o=r(11),i=r(43);e.exports=function(e){return function(t,r,a){var l,c=n(t),u=o(c.length),s=i(a,u);if(e&&r!=r){for(;u>s;)if((l=c[s++])!=l)return!0}else for(;u>s;s++)if((e||s in c)&&c[s]===r)return e||s||0;return!e&&-1}}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(27);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){var n=r(28),o=r(31);e.exports=function(e){return function(t,r){var i,a,l=String(o(t)),c=n(r),u=l.length;return c<0||c>=u?e?"":void 0:(i=l.charCodeAt(c))<55296||i>56319||c+1===u||(a=l.charCodeAt(c+1))<56320||a>57343?e?l.charAt(c):i:e?l.slice(c,c+2):a-56320+(i-55296<<10)+65536}}},function(e,t,r){var n=r(8),o=r(27),i=r(9)("match");e.exports=function(e){var t;return n(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,r){var n=r(9)("iterator"),o=!1;try{var i=[7][n]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i=[7],a=i[n]();a.next=function(){return{done:r=!0}},i[n]=function(){return a},e(i)}catch(e){}return r}},function(e,t,r){"use strict";var n=r(52),o=RegExp.prototype.exec;e.exports=function(e,t){var r=e.exec;if("function"==typeof r){var i=r.call(e,t);if("object"!=typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==n(e))throw new TypeError("RegExp#exec called on incompatible receiver");return o.call(e,t)}},function(e,t,r){"use strict";r(131);var n=r(18),o=r(17),i=r(7),a=r(31),l=r(9),c=r(101),u=l("species"),s=!i((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),f=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2===r.length&&"a"===r[0]&&"b"===r[1]}();e.exports=function(e,t,r){var d=l(e),p=!i((function(){var t={};return t[d]=function(){return 7},7!=""[e](t)})),m=p?!i((function(){var t=!1,r=/a/;return r.exec=function(){return t=!0,null},"split"===e&&(r.constructor={},r.constructor[u]=function(){return r}),r[d](""),!t})):void 0;if(!p||!m||"replace"===e&&!s||"split"===e&&!f){var g=/./[d],b=r(a,d,""[e],(function(e,t,r,n,o){return t.exec===c?p&&!o?{done:!0,value:g.call(t,r,n)}:{done:!0,value:e.call(r,t,n)}:{done:!1}})),h=b[0],v=b[1];n(String.prototype,e,h),o(RegExp.prototype,d,2==t?function(e,t){return v.call(e,this,t)}:function(e){return v.call(e,this)})}}},function(e,t,r){var n=r(5).navigator;e.exports=n&&n.userAgent||""},function(e,t,r){"use strict";var n=r(5),o=r(1),i=r(18),a=r(49),l=r(37),c=r(48),u=r(47),s=r(8),f=r(7),d=r(70),p=r(51),m=r(87);e.exports=function(e,t,r,g,b,h){var v=n[e],y=v,x=b?"set":"add",w=y&&y.prototype,k={},E=function(e){var t=w[e];i(w,e,"delete"==e||"has"==e?function(e){return!(h&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return h&&!s(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if("function"==typeof y&&(h||w.forEach&&!f((function(){(new y).entries().next()})))){var S=new y,O=S[x](h?{}:-0,1)!=S,j=f((function(){S.has(1)})),T=d((function(e){new y(e)})),C=!h&&f((function(){for(var e=new y,t=5;t--;)e[x](t,t);return!e.has(-0)}));T||((y=t((function(t,r){u(t,y,e);var n=m(new v,t,y);return null!=r&&c(r,b,n[x],n),n}))).prototype=w,w.constructor=y),(j||C)&&(E("delete"),E("has"),b&&E("get")),(C||O)&&E(x),h&&w.clear&&delete w.clear}else y=g.getConstructor(t,e,b,x),a(y.prototype,r),l.NEED=!0;return p(y,e),k[e]=y,o(o.G+o.W+o.F*(y!=v),k),h||g.setStrong(y,e,b),y}},function(e,t,r){for(var n,o=r(5),i=r(17),a=r(41),l=a("typed_array"),c=a("view"),u=!(!o.ArrayBuffer||!o.DataView),s=u,f=0,d="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");f<9;)(n=o[d[f++]])?(i(n.prototype,l,!0),i(n.prototype,c,!0)):s=!1;e.exports={ABV:u,CONSTR:s,TYPED:l,VIEW:c}},function(e,t,r){"use strict";e.exports=r(36)||!r(7)((function(){var e=Math.random();__defineSetter__.call(null,e,(function(){})),delete r(5)[e]}))},function(e,t,r){"use strict";var n=r(1);e.exports=function(e){n(n.S,e,{of:function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}})}},function(e,t,r){"use strict";var n=r(1),o=r(16),i=r(26),a=r(48);e.exports=function(e){n(n.S,e,{from:function(e){var t,r,n,l,c=arguments[1];return o(this),(t=void 0!==c)&&o(c),null==e?new this:(r=[],t?(n=0,l=i(c,arguments[2],2),a(e,!1,(function(e){r.push(l(e,n++))}))):a(e,!1,r.push,r),new this(r))}})}},function(e,t,r){"use strict";function n(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}r.d(t,"a",(function(){return n}))},function(e,t,r){var n=r(8),o=r(5).document,i=n(o)&&n(o.createElement);e.exports=function(e){return i?o.createElement(e):{}}},function(e,t,r){var n=r(5),o=r(25),i=r(36),a=r(113),l=r(13).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=i?{}:n.Symbol||{});"_"==e.charAt(0)||e in t||l(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(58)("keys"),o=r(41);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e,t){e.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},function(e,t,r){var n=r(5).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(8),o=r(4),i=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+": can't set as prototype!")};e.exports={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,n){try{(n=r(26)(Function.call,r(23).f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,r){return i(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:i}},function(e,t){e.exports="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff"},function(e,t,r){var n=r(8),o=r(85).set;e.exports=function(e,t,r){var i,a=t.constructor;return a!==r&&"function"==typeof a&&(i=a.prototype)!==r.prototype&&n(i)&&o&&o(e,i),e}},function(e,t,r){"use strict";var n=r(28),o=r(31);e.exports=function(e){var t=String(o(this)),r="",i=n(e);if(i<0||i==1/0)throw RangeError("Count can't be negative");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(r+=t);return r}},function(e,t){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:e<0?-1:1}},function(e,t){var r=Math.expm1;e.exports=!r||r(10)>22025.465794806718||r(10)<22025.465794806718||-2e-17!=r(-2e-17)?function(e){return 0==(e=+e)?e:e>-1e-6&&e<1e-6?e+e*e/2:Math.exp(e)-1}:r},function(e,t,r){"use strict";var n=r(36),o=r(1),i=r(18),a=r(17),l=r(54),c=r(92),u=r(51),s=r(24),f=r(9)("iterator"),d=!([].keys&&"next"in[].keys()),p=function(){return this};e.exports=function(e,t,r,m,g,b,h){c(r,t,m);var v,y,x,w=function(e){if(!d&&e in O)return O[e];switch(e){case"keys":case"values":return function(){return new r(this,e)}}return function(){return new r(this,e)}},k=t+" Iterator",E="values"==g,S=!1,O=e.prototype,j=O[f]||O["@@iterator"]||g&&O[g],T=j||w(g),C=g?E?w("entries"):T:void 0,P="Array"==t&&O.entries||j;if(P&&(x=s(P.call(new e)))!==Object.prototype&&x.next&&(u(x,k,!0),n||"function"==typeof x[f]||a(x,f,p)),E&&j&&"values"!==j.name&&(S=!0,T=function(){return j.call(this)}),n&&!h||!d&&!S&&O[f]||a(O,f,T),l[t]=T,l[k]=p,g)if(v={values:E?T:w("values"),keys:b?T:w("keys"),entries:C},h)for(y in v)y in O||i(O,y,v[y]);else o(o.P+o.F*(d||S),t,v);return v}},function(e,t,r){"use strict";var n=r(44),o=r(40),i=r(51),a={};r(17)(a,r(9)("iterator"),(function(){return this})),e.exports=function(e,t,r){e.prototype=n(a,{next:o(1,r)}),i(e,t+" Iterator")}},function(e,t,r){var n=r(69),o=r(31);e.exports=function(e,t,r){if(n(t))throw TypeError("String#"+r+" doesn't accept regex!");return String(o(e))}},function(e,t,r){var n=r(9)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[n]=!1,!"/./"[e](t)}catch(e){}}return!0}},function(e,t,r){var n=r(54),o=r(9)("iterator"),i=Array.prototype;e.exports=function(e){return void 0!==e&&(n.Array===e||i[o]===e)}},function(e,t,r){"use strict";var n=r(13),o=r(40);e.exports=function(e,t,r){t in e?n.f(e,t,o(0,r)):e[t]=r}},function(e,t,r){var n=r(52),o=r(9)("iterator"),i=r(54);e.exports=r(25).getIteratorMethod=function(e){if(null!=e)return e[o]||e["@@iterator"]||i[n(e)]}},function(e,t,r){var n=r(264);e.exports=function(e,t){return new(n(e))(t)}},function(e,t,r){"use strict";var n=r(14),o=r(43),i=r(11);e.exports=function(e){for(var t=n(this),r=i(t.length),a=arguments.length,l=o(a>1?arguments[1]:void 0,r),c=a>2?arguments[2]:void 0,u=void 0===c?r:o(c,r);u>l;)t[l++]=e;return t}},function(e,t,r){"use strict";var n=r(38),o=r(130),i=r(54),a=r(22);e.exports=r(91)(Array,"Array",(function(e,t){this._t=a(e),this._i=0,this._k=t}),(function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):o(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])}),"values"),i.Arguments=i.Array,n("keys"),n("values"),n("entries")},function(e,t,r){"use strict";var n,o,i=r(61),a=RegExp.prototype.exec,l=String.prototype.replace,c=a,u=(n=/a/,o=/b*/g,a.call(n,"a"),a.call(o,"a"),0!==n.lastIndex||0!==o.lastIndex),s=void 0!==/()??/.exec("")[1];(u||s)&&(c=function(e){var t,r,n,o,c=this;return s&&(r=new RegExp("^"+c.source+"$(?!\\s)",i.call(c))),u&&(t=c.lastIndex),n=a.call(c,e),u&&n&&(c.lastIndex=c.global?n.index+n[0].length:t),s&&n&&n.length>1&&l.call(n[0],r,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)})),n}),e.exports=c},function(e,t,r){"use strict";var n=r(68)(!0);e.exports=function(e,t,r){return t+(r?n(e,t).length:1)}},function(e,t,r){var n,o,i,a=r(26),l=r(120),c=r(84),u=r(80),s=r(5),f=s.process,d=s.setImmediate,p=s.clearImmediate,m=s.MessageChannel,g=s.Dispatch,b=0,h={},v=function(){var e=+this;if(h.hasOwnProperty(e)){var t=h[e];delete h[e],t()}},y=function(e){v.call(e.data)};d&&p||(d=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return h[++b]=function(){l("function"==typeof e?e:Function(e),t)},n(b),b},p=function(e){delete h[e]},"process"==r(27)(f)?n=function(e){f.nextTick(a(v,e,1))}:g&&g.now?n=function(e){g.now(a(v,e,1))}:m?(i=(o=new m).port2,o.port1.onmessage=y,n=a(i.postMessage,i,1)):s.addEventListener&&"function"==typeof postMessage&&!s.importScripts?(n=function(e){s.postMessage(e+"","*")},s.addEventListener("message",y,!1)):n="onreadystatechange"in u("script")?function(e){c.appendChild(u("script")).onreadystatechange=function(){c.removeChild(this),v.call(e)}}:function(e){setTimeout(a(v,e,1),0)}),e.exports={set:d,clear:p}},function(e,t,r){var n=r(5),o=r(103).set,i=n.MutationObserver||n.WebKitMutationObserver,a=n.process,l=n.Promise,c="process"==r(27)(a);e.exports=function(){var e,t,r,u=function(){var n,o;for(c&&(n=a.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(c)r=function(){a.nextTick(u)};else if(!i||n.navigator&&n.navigator.standalone)if(l&&l.resolve){var s=l.resolve(void 0);r=function(){s.then(u)}}else r=function(){o.call(n,u)};else{var f=!0,d=document.createTextNode("");new i(u).observe(d,{characterData:!0}),r=function(){d.data=f=!f}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}}},function(e,t,r){"use strict";var n=r(16);function o(e){var t,r;this.promise=new e((function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n})),this.resolve=n(t),this.reject=n(r)}e.exports.f=function(e){return new o(e)}},function(e,t,r){"use strict";var n=r(5),o=r(12),i=r(36),a=r(75),l=r(17),c=r(49),u=r(7),s=r(47),f=r(28),d=r(11),p=r(140),m=r(45).f,g=r(13).f,b=r(99),h=r(51),v=n.ArrayBuffer,y=n.DataView,x=n.Math,w=n.RangeError,k=n.Infinity,E=v,S=x.abs,O=x.pow,j=x.floor,T=x.log,C=x.LN2,P=o?"_b":"buffer",_=o?"_l":"byteLength",N=o?"_o":"byteOffset";function M(e,t,r){var n,o,i,a=new Array(r),l=8*r-t-1,c=(1<<l)-1,u=c>>1,s=23===t?O(2,-24)-O(2,-77):0,f=0,d=e<0||0===e&&1/e<0?1:0;for((e=S(e))!=e||e===k?(o=e!=e?1:0,n=c):(n=j(T(e)/C),e*(i=O(2,-n))<1&&(n--,i*=2),(e+=n+u>=1?s/i:s*O(2,1-u))*i>=2&&(n++,i/=2),n+u>=c?(o=0,n=c):n+u>=1?(o=(e*i-1)*O(2,t),n+=u):(o=e*O(2,u-1)*O(2,t),n=0));t>=8;a[f++]=255&o,o/=256,t-=8);for(n=n<<t|o,l+=t;l>0;a[f++]=255&n,n/=256,l-=8);return a[--f]|=128*d,a}function A(e,t,r){var n,o=8*r-t-1,i=(1<<o)-1,a=i>>1,l=o-7,c=r-1,u=e[c--],s=127&u;for(u>>=7;l>0;s=256*s+e[c],c--,l-=8);for(n=s&(1<<-l)-1,s>>=-l,l+=t;l>0;n=256*n+e[c],c--,l-=8);if(0===s)s=1-a;else{if(s===i)return n?NaN:u?-k:k;n+=O(2,t),s-=a}return(u?-1:1)*n*O(2,s-t)}function R(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function z(e){return[255&e]}function I(e){return[255&e,e>>8&255]}function F(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function D(e){return M(e,52,8)}function L(e){return M(e,23,4)}function U(e,t,r){g(e.prototype,t,{get:function(){return this[r]}})}function B(e,t,r,n){var o=p(+r);if(o+t>e[_])throw w("Wrong index!");var i=e[P]._b,a=o+e[N],l=i.slice(a,a+t);return n?l:l.reverse()}function W(e,t,r,n,o,i){var a=p(+r);if(a+t>e[_])throw w("Wrong index!");for(var l=e[P]._b,c=a+e[N],u=n(+o),s=0;s<t;s++)l[c+s]=u[i?s:t-s-1]}if(a.ABV){if(!u((function(){v(1)}))||!u((function(){new v(-1)}))||u((function(){return new v,new v(1.5),new v(NaN),"ArrayBuffer"!=v.name}))){for(var $,H=(v=function(e){return s(this,v),new E(p(e))}).prototype=E.prototype,V=m(E),q=0;V.length>q;)($=V[q++])in v||l(v,$,E[$]);i||(H.constructor=v)}var G=new y(new v(2)),K=y.prototype.setInt8;G.setInt8(0,2147483648),G.setInt8(1,2147483649),!G.getInt8(0)&&G.getInt8(1)||c(y.prototype,{setInt8:function(e,t){K.call(this,e,t<<24>>24)},setUint8:function(e,t){K.call(this,e,t<<24>>24)}},!0)}else v=function(e){s(this,v,"ArrayBuffer");var t=p(e);this._b=b.call(new Array(t),0),this[_]=t},y=function(e,t,r){s(this,y,"DataView"),s(e,v,"DataView");var n=e[_],o=f(t);if(o<0||o>n)throw w("Wrong offset!");if(o+(r=void 0===r?n-o:d(r))>n)throw w("Wrong length!");this[P]=e,this[N]=o,this[_]=r},o&&(U(v,"byteLength","_l"),U(y,"buffer","_b"),U(y,"byteLength","_l"),U(y,"byteOffset","_o")),c(y.prototype,{getInt8:function(e){return B(this,1,e)[0]<<24>>24},getUint8:function(e){return B(this,1,e)[0]},getInt16:function(e){var t=B(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=B(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return R(B(this,4,e,arguments[1]))},getUint32:function(e){return R(B(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return A(B(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return A(B(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){W(this,1,e,z,t)},setUint8:function(e,t){W(this,1,e,z,t)},setInt16:function(e,t){W(this,2,e,I,t,arguments[2])},setUint16:function(e,t){W(this,2,e,I,t,arguments[2])},setInt32:function(e,t){W(this,4,e,F,t,arguments[2])},setUint32:function(e,t){W(this,4,e,F,t,arguments[2])},setFloat32:function(e,t){W(this,4,e,L,t,arguments[2])},setFloat64:function(e,t){W(this,8,e,D,t,arguments[2])}});h(v,"ArrayBuffer"),h(y,"DataView"),l(y.prototype,a.VIEW,!0),t.ArrayBuffer=v,t.DataView=y},function(e,t,r){(t=r(424)(!1)).push([e.i,"/*!\n * Bootstrap v4.5.2 (https://getbootstrap.com/)\n * Copyright 2011-2020 The Bootstrap Authors\n * Copyright 2011-2020 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n */:root{--blue:#007bff;--indigo:#6610f2;--purple:#6f42c1;--pink:#e83e8c;--red:#dc3545;--orange:#fd7e14;--yellow:#ffc107;--green:#28a745;--teal:#20c997;--cyan:#17a2b8;--white:#fff;--gray:#6c757d;--gray-dark:#343a40;--primary:#007bff;--secondary:#6c757d;--success:#28a745;--info:#17a2b8;--warning:#ffc107;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--breakpoint-xs:0;--breakpoint-sm:576px;--breakpoint-md:768px;--breakpoint-lg:992px;--breakpoint-xl:1200px;--font-family-sans-serif:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";--font-family-monospace:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace}*,::after,::before{box-sizing:border-box}html{font-family:sans-serif;line-height:1.15;-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}article,aside,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}body{margin:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-size:1rem;font-weight:400;line-height:1.5;color:#212529;text-align:left;background-color:#fff}[tabindex=\"-1\"]:focus:not(:focus-visible){outline:0!important}hr{box-sizing:content-box;height:0;overflow:visible}h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem}p{margin-top:0;margin-bottom:1rem}abbr[data-original-title],abbr[title]{text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;border-bottom:0;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:#007bff;text-decoration:none;background-color:transparent}a:hover{color:#0056b3;text-decoration:underline}a:not([href]):not([class]){color:inherit;text-decoration:none}a:not([href]):not([class]):hover{color:inherit;text-decoration:none}code,kbd,pre,samp{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;font-size:1em}pre{margin-top:0;margin-bottom:1rem;overflow:auto;-ms-overflow-style:scrollbar}figure{margin:0 0 1rem}img{vertical-align:middle;border-style:none}svg{overflow:hidden;vertical-align:middle}table{border-collapse:collapse}caption{padding-top:.75rem;padding-bottom:.75rem;color:#6c757d;text-align:left;caption-side:bottom}th{text-align:inherit}label{display:inline-block;margin-bottom:.5rem}button{border-radius:0}button:focus{outline:1px dotted;outline:5px auto -webkit-focus-ring-color}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,input{overflow:visible}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}textarea{overflow:auto;resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;max-width:100%;padding:0;margin-bottom:.5rem;font-size:1.5rem;line-height:inherit;color:inherit;white-space:normal}progress{vertical-align:baseline}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:none}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}output{display:inline-block}summary{display:list-item;cursor:pointer}template{display:none}[hidden]{display:none!important}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-bottom:.5rem;font-weight:500;line-height:1.2}.h1,h1{font-size:2.5rem}.h2,h2{font-size:2rem}.h3,h3{font-size:1.75rem}.h4,h4{font-size:1.5rem}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:6rem;font-weight:300;line-height:1.2}.display-2{font-size:5.5rem;font-weight:300;line-height:1.2}.display-3{font-size:4.5rem;font-weight:300;line-height:1.2}.display-4{font-size:3.5rem;font-weight:300;line-height:1.2}hr{margin-top:1rem;margin-bottom:1rem;border:0;border-top:1px solid rgba(0,0,0,.1)}.small,small{font-size:80%;font-weight:400}.mark,mark{padding:.2em;background-color:#fcf8e3}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:90%;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote-footer{display:block;font-size:80%;color:#6c757d}.blockquote-footer::before{content:\"\\2014\\00A0\"}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:#fff;border:1px solid #dee2e6;border-radius:.25rem;max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:90%;color:#6c757d}code{font-size:87.5%;color:#e83e8c;word-wrap:break-word}a>code{color:inherit}kbd{padding:.2rem .4rem;font-size:87.5%;color:#fff;background-color:#212529;border-radius:.2rem}kbd kbd{padding:0;font-size:100%;font-weight:700}pre{display:block;font-size:87.5%;color:#212529}pre code{font-size:inherit;color:inherit;word-break:normal}.pre-scrollable{max-height:340px;overflow-y:scroll}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl{width:100%;padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}.row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-15px;margin-left:-15px}.no-gutters{margin-right:0;margin-left:0}.no-gutters>.col,.no-gutters>[class*=col-]{padding-right:0;padding-left:0}.col,.col-1,.col-10,.col-11,.col-12,.col-2,.col-3,.col-4,.col-5,.col-6,.col-7,.col-8,.col-9,.col-auto,.col-lg,.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-lg-auto,.col-md,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-md-auto,.col-sm,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-sm-auto,.col-xl,.col-xl-1,.col-xl-10,.col-xl-11,.col-xl-12,.col-xl-2,.col-xl-3,.col-xl-4,.col-xl-5,.col-xl-6,.col-xl-7,.col-xl-8,.col-xl-9,.col-xl-auto{position:relative;width:100%;padding-right:15px;padding-left:15px}.col{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-first{-ms-flex-order:-1;order:-1}.order-last{-ms-flex-order:13;order:13}.order-0{-ms-flex-order:0;order:0}.order-1{-ms-flex-order:1;order:1}.order-2{-ms-flex-order:2;order:2}.order-3{-ms-flex-order:3;order:3}.order-4{-ms-flex-order:4;order:4}.order-5{-ms-flex-order:5;order:5}.order-6{-ms-flex-order:6;order:6}.order-7{-ms-flex-order:7;order:7}.order-8{-ms-flex-order:8;order:8}.order-9{-ms-flex-order:9;order:9}.order-10{-ms-flex-order:10;order:10}.order-11{-ms-flex-order:11;order:11}.order-12{-ms-flex-order:12;order:12}.offset-1{margin-left:8.333333%}.offset-2{margin-left:16.666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.333333%}.offset-5{margin-left:41.666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.333333%}.offset-8{margin-left:66.666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.333333%}.offset-11{margin-left:91.666667%}@media (min-width:576px){.col-sm{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-sm-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-sm-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-sm-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-sm-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-sm-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-sm-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-sm-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-sm-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-sm-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-sm-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-sm-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-sm-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-sm-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-sm-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-sm-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-sm-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-sm-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-sm-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-sm-first{-ms-flex-order:-1;order:-1}.order-sm-last{-ms-flex-order:13;order:13}.order-sm-0{-ms-flex-order:0;order:0}.order-sm-1{-ms-flex-order:1;order:1}.order-sm-2{-ms-flex-order:2;order:2}.order-sm-3{-ms-flex-order:3;order:3}.order-sm-4{-ms-flex-order:4;order:4}.order-sm-5{-ms-flex-order:5;order:5}.order-sm-6{-ms-flex-order:6;order:6}.order-sm-7{-ms-flex-order:7;order:7}.order-sm-8{-ms-flex-order:8;order:8}.order-sm-9{-ms-flex-order:9;order:9}.order-sm-10{-ms-flex-order:10;order:10}.order-sm-11{-ms-flex-order:11;order:11}.order-sm-12{-ms-flex-order:12;order:12}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.333333%}.offset-sm-2{margin-left:16.666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.333333%}.offset-sm-5{margin-left:41.666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.333333%}.offset-sm-8{margin-left:66.666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.333333%}.offset-sm-11{margin-left:91.666667%}}@media (min-width:768px){.col-md{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-md-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-md-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-md-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-md-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-md-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-md-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-md-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-md-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-md-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-md-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-md-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-md-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-md-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-md-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-md-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-md-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-md-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-md-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-md-first{-ms-flex-order:-1;order:-1}.order-md-last{-ms-flex-order:13;order:13}.order-md-0{-ms-flex-order:0;order:0}.order-md-1{-ms-flex-order:1;order:1}.order-md-2{-ms-flex-order:2;order:2}.order-md-3{-ms-flex-order:3;order:3}.order-md-4{-ms-flex-order:4;order:4}.order-md-5{-ms-flex-order:5;order:5}.order-md-6{-ms-flex-order:6;order:6}.order-md-7{-ms-flex-order:7;order:7}.order-md-8{-ms-flex-order:8;order:8}.order-md-9{-ms-flex-order:9;order:9}.order-md-10{-ms-flex-order:10;order:10}.order-md-11{-ms-flex-order:11;order:11}.order-md-12{-ms-flex-order:12;order:12}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.333333%}.offset-md-2{margin-left:16.666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.333333%}.offset-md-5{margin-left:41.666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.333333%}.offset-md-8{margin-left:66.666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.333333%}.offset-md-11{margin-left:91.666667%}}@media (min-width:992px){.col-lg{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-lg-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-lg-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-lg-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-lg-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-lg-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-lg-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-lg-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-lg-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-lg-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-lg-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-lg-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-lg-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-lg-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-lg-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-lg-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-lg-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-lg-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-lg-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-lg-first{-ms-flex-order:-1;order:-1}.order-lg-last{-ms-flex-order:13;order:13}.order-lg-0{-ms-flex-order:0;order:0}.order-lg-1{-ms-flex-order:1;order:1}.order-lg-2{-ms-flex-order:2;order:2}.order-lg-3{-ms-flex-order:3;order:3}.order-lg-4{-ms-flex-order:4;order:4}.order-lg-5{-ms-flex-order:5;order:5}.order-lg-6{-ms-flex-order:6;order:6}.order-lg-7{-ms-flex-order:7;order:7}.order-lg-8{-ms-flex-order:8;order:8}.order-lg-9{-ms-flex-order:9;order:9}.order-lg-10{-ms-flex-order:10;order:10}.order-lg-11{-ms-flex-order:11;order:11}.order-lg-12{-ms-flex-order:12;order:12}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.333333%}.offset-lg-2{margin-left:16.666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.333333%}.offset-lg-5{margin-left:41.666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.333333%}.offset-lg-8{margin-left:66.666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.333333%}.offset-lg-11{margin-left:91.666667%}}@media (min-width:1200px){.col-xl{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;max-width:100%}.row-cols-xl-1>*{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.row-cols-xl-2>*{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.row-cols-xl-3>*{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.row-cols-xl-4>*{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.row-cols-xl-5>*{-ms-flex:0 0 20%;flex:0 0 20%;max-width:20%}.row-cols-xl-6>*{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-auto{-ms-flex:0 0 auto;flex:0 0 auto;width:auto;max-width:100%}.col-xl-1{-ms-flex:0 0 8.333333%;flex:0 0 8.333333%;max-width:8.333333%}.col-xl-2{-ms-flex:0 0 16.666667%;flex:0 0 16.666667%;max-width:16.666667%}.col-xl-3{-ms-flex:0 0 25%;flex:0 0 25%;max-width:25%}.col-xl-4{-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%}.col-xl-5{-ms-flex:0 0 41.666667%;flex:0 0 41.666667%;max-width:41.666667%}.col-xl-6{-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.col-xl-7{-ms-flex:0 0 58.333333%;flex:0 0 58.333333%;max-width:58.333333%}.col-xl-8{-ms-flex:0 0 66.666667%;flex:0 0 66.666667%;max-width:66.666667%}.col-xl-9{-ms-flex:0 0 75%;flex:0 0 75%;max-width:75%}.col-xl-10{-ms-flex:0 0 83.333333%;flex:0 0 83.333333%;max-width:83.333333%}.col-xl-11{-ms-flex:0 0 91.666667%;flex:0 0 91.666667%;max-width:91.666667%}.col-xl-12{-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.order-xl-first{-ms-flex-order:-1;order:-1}.order-xl-last{-ms-flex-order:13;order:13}.order-xl-0{-ms-flex-order:0;order:0}.order-xl-1{-ms-flex-order:1;order:1}.order-xl-2{-ms-flex-order:2;order:2}.order-xl-3{-ms-flex-order:3;order:3}.order-xl-4{-ms-flex-order:4;order:4}.order-xl-5{-ms-flex-order:5;order:5}.order-xl-6{-ms-flex-order:6;order:6}.order-xl-7{-ms-flex-order:7;order:7}.order-xl-8{-ms-flex-order:8;order:8}.order-xl-9{-ms-flex-order:9;order:9}.order-xl-10{-ms-flex-order:10;order:10}.order-xl-11{-ms-flex-order:11;order:11}.order-xl-12{-ms-flex-order:12;order:12}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.333333%}.offset-xl-2{margin-left:16.666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.333333%}.offset-xl-5{margin-left:41.666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.333333%}.offset-xl-8{margin-left:66.666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.333333%}.offset-xl-11{margin-left:91.666667%}}.table{width:100%;margin-bottom:1rem;color:#212529}.table td,.table th{padding:.75rem;vertical-align:top;border-top:1px solid #dee2e6}.table thead th{vertical-align:bottom;border-bottom:2px solid #dee2e6}.table tbody+tbody{border-top:2px solid #dee2e6}.table-sm td,.table-sm th{padding:.3rem}.table-bordered{border:1px solid #dee2e6}.table-bordered td,.table-bordered th{border:1px solid #dee2e6}.table-bordered thead td,.table-bordered thead th{border-bottom-width:2px}.table-borderless tbody+tbody,.table-borderless td,.table-borderless th,.table-borderless thead th{border:0}.table-striped tbody tr:nth-of-type(odd){background-color:rgba(0,0,0,.05)}.table-hover tbody tr:hover{color:#212529;background-color:rgba(0,0,0,.075)}.table-primary,.table-primary>td,.table-primary>th{background-color:#b8daff}.table-primary tbody+tbody,.table-primary td,.table-primary th,.table-primary thead th{border-color:#7abaff}.table-hover .table-primary:hover{background-color:#9fcdff}.table-hover .table-primary:hover>td,.table-hover .table-primary:hover>th{background-color:#9fcdff}.table-secondary,.table-secondary>td,.table-secondary>th{background-color:#d6d8db}.table-secondary tbody+tbody,.table-secondary td,.table-secondary th,.table-secondary thead th{border-color:#b3b7bb}.table-hover .table-secondary:hover{background-color:#c8cbcf}.table-hover .table-secondary:hover>td,.table-hover .table-secondary:hover>th{background-color:#c8cbcf}.table-success,.table-success>td,.table-success>th{background-color:#c3e6cb}.table-success tbody+tbody,.table-success td,.table-success th,.table-success thead th{border-color:#8fd19e}.table-hover .table-success:hover{background-color:#b1dfbb}.table-hover .table-success:hover>td,.table-hover .table-success:hover>th{background-color:#b1dfbb}.table-info,.table-info>td,.table-info>th{background-color:#bee5eb}.table-info tbody+tbody,.table-info td,.table-info th,.table-info thead th{border-color:#86cfda}.table-hover .table-info:hover{background-color:#abdde5}.table-hover .table-info:hover>td,.table-hover .table-info:hover>th{background-color:#abdde5}.table-warning,.table-warning>td,.table-warning>th{background-color:#ffeeba}.table-warning tbody+tbody,.table-warning td,.table-warning th,.table-warning thead th{border-color:#ffdf7e}.table-hover .table-warning:hover{background-color:#ffe8a1}.table-hover .table-warning:hover>td,.table-hover .table-warning:hover>th{background-color:#ffe8a1}.table-danger,.table-danger>td,.table-danger>th{background-color:#f5c6cb}.table-danger tbody+tbody,.table-danger td,.table-danger th,.table-danger thead th{border-color:#ed969e}.table-hover .table-danger:hover{background-color:#f1b0b7}.table-hover .table-danger:hover>td,.table-hover .table-danger:hover>th{background-color:#f1b0b7}.table-light,.table-light>td,.table-light>th{background-color:#fdfdfe}.table-light tbody+tbody,.table-light td,.table-light th,.table-light thead th{border-color:#fbfcfc}.table-hover .table-light:hover{background-color:#ececf6}.table-hover .table-light:hover>td,.table-hover .table-light:hover>th{background-color:#ececf6}.table-dark,.table-dark>td,.table-dark>th{background-color:#c6c8ca}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#95999c}.table-hover .table-dark:hover{background-color:#b9bbbe}.table-hover .table-dark:hover>td,.table-hover .table-dark:hover>th{background-color:#b9bbbe}.table-active,.table-active>td,.table-active>th{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover{background-color:rgba(0,0,0,.075)}.table-hover .table-active:hover>td,.table-hover .table-active:hover>th{background-color:rgba(0,0,0,.075)}.table .thead-dark th{color:#fff;background-color:#343a40;border-color:#454d55}.table .thead-light th{color:#495057;background-color:#e9ecef;border-color:#dee2e6}.table-dark{color:#fff;background-color:#343a40}.table-dark td,.table-dark th,.table-dark thead th{border-color:#454d55}.table-dark.table-bordered{border:0}.table-dark.table-striped tbody tr:nth-of-type(odd){background-color:rgba(255,255,255,.05)}.table-dark.table-hover tbody tr:hover{color:#fff;background-color:rgba(255,255,255,.075)}@media (max-width:575.98px){.table-responsive-sm{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-sm>.table-bordered{border:0}}@media (max-width:767.98px){.table-responsive-md{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-md>.table-bordered{border:0}}@media (max-width:991.98px){.table-responsive-lg{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-lg>.table-bordered{border:0}}@media (max-width:1199.98px){.table-responsive-xl{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive-xl>.table-bordered{border:0}}.table-responsive{display:block;width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch}.table-responsive>.table-bordered{border:0}.form-control{display:block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:.25rem;transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control::-ms-expand{background-color:transparent;border:0}.form-control:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.form-control:focus{color:#495057;background-color:#fff;border-color:#80bdff;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.form-control::-webkit-input-placeholder{color:#6c757d;opacity:1}.form-control::-moz-placeholder{color:#6c757d;opacity:1}.form-control:-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::-ms-input-placeholder{color:#6c757d;opacity:1}.form-control::placeholder{color:#6c757d;opacity:1}.form-control:disabled,.form-control[readonly]{background-color:#e9ecef;opacity:1}input[type=date].form-control,input[type=datetime-local].form-control,input[type=month].form-control,input[type=time].form-control{-webkit-appearance:none;-moz-appearance:none;appearance:none}select.form-control:focus::-ms-value{color:#495057;background-color:#fff}.form-control-file,.form-control-range{display:block;width:100%}.col-form-label{padding-top:calc(.375rem + 1px);padding-bottom:calc(.375rem + 1px);margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + 1px);padding-bottom:calc(.5rem + 1px);font-size:1.25rem;line-height:1.5}.col-form-label-sm{padding-top:calc(.25rem + 1px);padding-bottom:calc(.25rem + 1px);font-size:.875rem;line-height:1.5}.form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;font-size:1rem;line-height:1.5;color:#212529;background-color:transparent;border:solid transparent;border-width:1px 0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{height:calc(1.5em + .5rem + 2px);padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.form-control-lg{height:calc(1.5em + 1rem + 2px);padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}select.form-control[multiple],select.form-control[size]{height:auto}textarea.form-control{height:auto}.form-group{margin-bottom:1rem}.form-text{display:block;margin-top:.25rem}.form-row{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-right:-5px;margin-left:-5px}.form-row>.col,.form-row>[class*=col-]{padding-right:5px;padding-left:5px}.form-check{position:relative;display:block;padding-left:1.25rem}.form-check-input{position:absolute;margin-top:.3rem;margin-left:-1.25rem}.form-check-input:disabled~.form-check-label,.form-check-input[disabled]~.form-check-label{color:#6c757d}.form-check-label{margin-bottom:0}.form-check-inline{display:-ms-inline-flexbox;display:inline-flex;-ms-flex-align:center;align-items:center;padding-left:0;margin-right:.75rem}.form-check-inline .form-check-input{position:static;margin-top:0;margin-right:.3125rem;margin-left:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#28a745}.valid-tooltip{position:absolute;top:100%;left:0;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(40,167,69,.9);border-radius:.25rem}.is-valid~.valid-feedback,.is-valid~.valid-tooltip,.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip{display:block}.form-control.is-valid,.was-validated .form-control:valid{border-color:#28a745;padding-right:calc(1.5em + .75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-valid,.was-validated .custom-select:valid{border-color:#28a745;padding-right:calc(.75em + 2.3125rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right .75rem center/8px 10px,url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%2328a745' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e\") #fff no-repeat center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem)}.custom-select.is-valid:focus,.was-validated .custom-select:valid:focus{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:#28a745}.form-check-input.is-valid~.valid-feedback,.form-check-input.is-valid~.valid-tooltip,.was-validated .form-check-input:valid~.valid-feedback,.was-validated .form-check-input:valid~.valid-tooltip{display:block}.custom-control-input.is-valid~.custom-control-label,.was-validated .custom-control-input:valid~.custom-control-label{color:#28a745}.custom-control-input.is-valid~.custom-control-label::before,.was-validated .custom-control-input:valid~.custom-control-label::before{border-color:#28a745}.custom-control-input.is-valid:checked~.custom-control-label::before,.was-validated .custom-control-input:valid:checked~.custom-control-label::before{border-color:#34ce57;background-color:#34ce57}.custom-control-input.is-valid:focus~.custom-control-label::before,.was-validated .custom-control-input:valid:focus~.custom-control-label::before{box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.custom-control-input.is-valid:focus:not(:checked)~.custom-control-label::before,.was-validated .custom-control-input:valid:focus:not(:checked)~.custom-control-label::before{border-color:#28a745}.custom-file-input.is-valid~.custom-file-label,.was-validated .custom-file-input:valid~.custom-file-label{border-color:#28a745}.custom-file-input.is-valid:focus~.custom-file-label,.was-validated .custom-file-input:valid:focus~.custom-file-label{border-color:#28a745;box-shadow:0 0 0 .2rem rgba(40,167,69,.25)}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:80%;color:#dc3545}.invalid-tooltip{position:absolute;top:100%;left:0;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;line-height:1.5;color:#fff;background-color:rgba(220,53,69,.9);border-radius:.25rem}.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip,.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip{display:block}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:#dc3545;padding-right:calc(1.5em + .75rem);background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.custom-select.is-invalid,.was-validated .custom-select:invalid{border-color:#dc3545;padding-right:calc(.75em + 2.3125rem);background:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right .75rem center/8px 10px,url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e\") #fff no-repeat center right 1.75rem/calc(.75em + .375rem) calc(.75em + .375rem)}.custom-select.is-invalid:focus,.was-validated .custom-select:invalid:focus{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:#dc3545}.form-check-input.is-invalid~.invalid-feedback,.form-check-input.is-invalid~.invalid-tooltip,.was-validated .form-check-input:invalid~.invalid-feedback,.was-validated .form-check-input:invalid~.invalid-tooltip{display:block}.custom-control-input.is-invalid~.custom-control-label,.was-validated .custom-control-input:invalid~.custom-control-label{color:#dc3545}.custom-control-input.is-invalid~.custom-control-label::before,.was-validated .custom-control-input:invalid~.custom-control-label::before{border-color:#dc3545}.custom-control-input.is-invalid:checked~.custom-control-label::before,.was-validated .custom-control-input:invalid:checked~.custom-control-label::before{border-color:#e4606d;background-color:#e4606d}.custom-control-input.is-invalid:focus~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus~.custom-control-label::before{box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.custom-control-input.is-invalid:focus:not(:checked)~.custom-control-label::before,.was-validated .custom-control-input:invalid:focus:not(:checked)~.custom-control-label::before{border-color:#dc3545}.custom-file-input.is-invalid~.custom-file-label,.was-validated .custom-file-input:invalid~.custom-file-label{border-color:#dc3545}.custom-file-input.is-invalid:focus~.custom-file-label,.was-validated .custom-file-input:invalid:focus~.custom-file-label{border-color:#dc3545;box-shadow:0 0 0 .2rem rgba(220,53,69,.25)}.form-inline{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center}.form-inline .form-check{width:100%}@media (min-width:576px){.form-inline label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;margin-bottom:0}.form-inline .form-group{display:-ms-flexbox;display:flex;-ms-flex:0 0 auto;flex:0 0 auto;-ms-flex-flow:row wrap;flex-flow:row wrap;-ms-flex-align:center;align-items:center;margin-bottom:0}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-plaintext{display:inline-block}.form-inline .custom-select,.form-inline .input-group{width:auto}.form-inline .form-check{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:auto;padding-left:0}.form-inline .form-check-input{position:relative;-ms-flex-negative:0;flex-shrink:0;margin-top:0;margin-right:.25rem;margin-left:0}.form-inline .custom-control{-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center}.form-inline .custom-control-label{margin-bottom:0}}.btn{display:inline-block;font-weight:400;color:#212529;text-align:center;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-color:transparent;border:1px solid transparent;padding:.375rem .75rem;font-size:1rem;line-height:1.5;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:#212529;text-decoration:none}.btn.focus,.btn:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.btn.disabled,.btn:disabled{opacity:.65}.btn:not(:disabled):not(.disabled){cursor:pointer}a.btn.disabled,fieldset:disabled a.btn{pointer-events:none}.btn-primary{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:hover{color:#fff;background-color:#0069d9;border-color:#0062cc}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#0069d9;border-color:#0062cc;box-shadow:0 0 0 .2rem rgba(38,143,255,.5)}.btn-primary.disabled,.btn-primary:disabled{color:#fff;background-color:#007bff;border-color:#007bff}.btn-primary:not(:disabled):not(.disabled).active,.btn-primary:not(:disabled):not(.disabled):active,.show>.btn-primary.dropdown-toggle{color:#fff;background-color:#0062cc;border-color:#005cbf}.btn-primary:not(:disabled):not(.disabled).active:focus,.btn-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-primary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(38,143,255,.5)}.btn-secondary{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:hover{color:#fff;background-color:#5a6268;border-color:#545b62}.btn-secondary.focus,.btn-secondary:focus{color:#fff;background-color:#5a6268;border-color:#545b62;box-shadow:0 0 0 .2rem rgba(130,138,145,.5)}.btn-secondary.disabled,.btn-secondary:disabled{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-secondary:not(:disabled):not(.disabled).active,.btn-secondary:not(:disabled):not(.disabled):active,.show>.btn-secondary.dropdown-toggle{color:#fff;background-color:#545b62;border-color:#4e555b}.btn-secondary:not(:disabled):not(.disabled).active:focus,.btn-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(130,138,145,.5)}.btn-success{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:hover{color:#fff;background-color:#218838;border-color:#1e7e34}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#218838;border-color:#1e7e34;box-shadow:0 0 0 .2rem rgba(72,180,97,.5)}.btn-success.disabled,.btn-success:disabled{color:#fff;background-color:#28a745;border-color:#28a745}.btn-success:not(:disabled):not(.disabled).active,.btn-success:not(:disabled):not(.disabled):active,.show>.btn-success.dropdown-toggle{color:#fff;background-color:#1e7e34;border-color:#1c7430}.btn-success:not(:disabled):not(.disabled).active:focus,.btn-success:not(:disabled):not(.disabled):active:focus,.show>.btn-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(72,180,97,.5)}.btn-info{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:hover{color:#fff;background-color:#138496;border-color:#117a8b}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#138496;border-color:#117a8b;box-shadow:0 0 0 .2rem rgba(58,176,195,.5)}.btn-info.disabled,.btn-info:disabled{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-info:not(:disabled):not(.disabled).active,.btn-info:not(:disabled):not(.disabled):active,.show>.btn-info.dropdown-toggle{color:#fff;background-color:#117a8b;border-color:#10707f}.btn-info:not(:disabled):not(.disabled).active:focus,.btn-info:not(:disabled):not(.disabled):active:focus,.show>.btn-info.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(58,176,195,.5)}.btn-warning{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:hover{color:#212529;background-color:#e0a800;border-color:#d39e00}.btn-warning.focus,.btn-warning:focus{color:#212529;background-color:#e0a800;border-color:#d39e00;box-shadow:0 0 0 .2rem rgba(222,170,12,.5)}.btn-warning.disabled,.btn-warning:disabled{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-warning:not(:disabled):not(.disabled).active,.btn-warning:not(:disabled):not(.disabled):active,.show>.btn-warning.dropdown-toggle{color:#212529;background-color:#d39e00;border-color:#c69500}.btn-warning:not(:disabled):not(.disabled).active:focus,.btn-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-warning.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(222,170,12,.5)}.btn-danger{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:hover{color:#fff;background-color:#c82333;border-color:#bd2130}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c82333;border-color:#bd2130;box-shadow:0 0 0 .2rem rgba(225,83,97,.5)}.btn-danger.disabled,.btn-danger:disabled{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-danger:not(:disabled):not(.disabled).active,.btn-danger:not(:disabled):not(.disabled):active,.show>.btn-danger.dropdown-toggle{color:#fff;background-color:#bd2130;border-color:#b21f2d}.btn-danger:not(:disabled):not(.disabled).active:focus,.btn-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-danger.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(225,83,97,.5)}.btn-light{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:hover{color:#212529;background-color:#e2e6ea;border-color:#dae0e5}.btn-light.focus,.btn-light:focus{color:#212529;background-color:#e2e6ea;border-color:#dae0e5;box-shadow:0 0 0 .2rem rgba(216,217,219,.5)}.btn-light.disabled,.btn-light:disabled{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-light:not(:disabled):not(.disabled).active,.btn-light:not(:disabled):not(.disabled):active,.show>.btn-light.dropdown-toggle{color:#212529;background-color:#dae0e5;border-color:#d3d9df}.btn-light:not(:disabled):not(.disabled).active:focus,.btn-light:not(:disabled):not(.disabled):active:focus,.show>.btn-light.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(216,217,219,.5)}.btn-dark{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:hover{color:#fff;background-color:#23272b;border-color:#1d2124}.btn-dark.focus,.btn-dark:focus{color:#fff;background-color:#23272b;border-color:#1d2124;box-shadow:0 0 0 .2rem rgba(82,88,93,.5)}.btn-dark.disabled,.btn-dark:disabled{color:#fff;background-color:#343a40;border-color:#343a40}.btn-dark:not(:disabled):not(.disabled).active,.btn-dark:not(:disabled):not(.disabled):active,.show>.btn-dark.dropdown-toggle{color:#fff;background-color:#1d2124;border-color:#171a1d}.btn-dark:not(:disabled):not(.disabled).active:focus,.btn-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-dark.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(82,88,93,.5)}.btn-outline-primary{color:#007bff;border-color:#007bff}.btn-outline-primary:hover{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary.focus,.btn-outline-primary:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-primary.disabled,.btn-outline-primary:disabled{color:#007bff;background-color:transparent}.btn-outline-primary:not(:disabled):not(.disabled).active,.btn-outline-primary:not(:disabled):not(.disabled):active,.show>.btn-outline-primary.dropdown-toggle{color:#fff;background-color:#007bff;border-color:#007bff}.btn-outline-primary:not(:disabled):not(.disabled).active:focus,.btn-outline-primary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-primary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.btn-outline-secondary{color:#6c757d;border-color:#6c757d}.btn-outline-secondary:hover{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary.focus,.btn-outline-secondary:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-secondary.disabled,.btn-outline-secondary:disabled{color:#6c757d;background-color:transparent}.btn-outline-secondary:not(:disabled):not(.disabled).active,.btn-outline-secondary:not(:disabled):not(.disabled):active,.show>.btn-outline-secondary.dropdown-toggle{color:#fff;background-color:#6c757d;border-color:#6c757d}.btn-outline-secondary:not(:disabled):not(.disabled).active:focus,.btn-outline-secondary:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-secondary.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.btn-outline-success{color:#28a745;border-color:#28a745}.btn-outline-success:hover{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success.focus,.btn-outline-success:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-success.disabled,.btn-outline-success:disabled{color:#28a745;background-color:transparent}.btn-outline-success:not(:disabled):not(.disabled).active,.btn-outline-success:not(:disabled):not(.disabled):active,.show>.btn-outline-success.dropdown-toggle{color:#fff;background-color:#28a745;border-color:#28a745}.btn-outline-success:not(:disabled):not(.disabled).active:focus,.btn-outline-success:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-success.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.btn-outline-info{color:#17a2b8;border-color:#17a2b8}.btn-outline-info:hover{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info.focus,.btn-outline-info:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-info.disabled,.btn-outline-info:disabled{color:#17a2b8;background-color:transparent}.btn-outline-info:not(:disabled):not(.disabled).active,.btn-outline-info:not(:disabled):not(.disabled):active,.show>.btn-outline-info.dropdown-toggle{color:#fff;background-color:#17a2b8;border-color:#17a2b8}.btn-outline-info:not(:disabled):not(.disabled).active:focus,.btn-outline-info:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-info.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.btn-outline-warning{color:#ffc107;border-color:#ffc107}.btn-outline-warning:hover{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning.focus,.btn-outline-warning:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-warning.disabled,.btn-outline-warning:disabled{color:#ffc107;background-color:transparent}.btn-outline-warning:not(:disabled):not(.disabled).active,.btn-outline-warning:not(:disabled):not(.disabled):active,.show>.btn-outline-warning.dropdown-toggle{color:#212529;background-color:#ffc107;border-color:#ffc107}.btn-outline-warning:not(:disabled):not(.disabled).active:focus,.btn-outline-warning:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-warning.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.btn-outline-danger{color:#dc3545;border-color:#dc3545}.btn-outline-danger:hover{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger.focus,.btn-outline-danger:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-danger.disabled,.btn-outline-danger:disabled{color:#dc3545;background-color:transparent}.btn-outline-danger:not(:disabled):not(.disabled).active,.btn-outline-danger:not(:disabled):not(.disabled):active,.show>.btn-outline-danger.dropdown-toggle{color:#fff;background-color:#dc3545;border-color:#dc3545}.btn-outline-danger:not(:disabled):not(.disabled).active:focus,.btn-outline-danger:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-danger.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.btn-outline-light{color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:hover{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light.focus,.btn-outline-light:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-light.disabled,.btn-outline-light:disabled{color:#f8f9fa;background-color:transparent}.btn-outline-light:not(:disabled):not(.disabled).active,.btn-outline-light:not(:disabled):not(.disabled):active,.show>.btn-outline-light.dropdown-toggle{color:#212529;background-color:#f8f9fa;border-color:#f8f9fa}.btn-outline-light:not(:disabled):not(.disabled).active:focus,.btn-outline-light:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-light.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.btn-outline-dark{color:#343a40;border-color:#343a40}.btn-outline-dark:hover{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark.focus,.btn-outline-dark:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-outline-dark.disabled,.btn-outline-dark:disabled{color:#343a40;background-color:transparent}.btn-outline-dark:not(:disabled):not(.disabled).active,.btn-outline-dark:not(:disabled):not(.disabled):active,.show>.btn-outline-dark.dropdown-toggle{color:#fff;background-color:#343a40;border-color:#343a40}.btn-outline-dark:not(:disabled):not(.disabled).active:focus,.btn-outline-dark:not(:disabled):not(.disabled):active:focus,.show>.btn-outline-dark.dropdown-toggle:focus{box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.btn-link{font-weight:400;color:#007bff;text-decoration:none}.btn-link:hover{color:#0056b3;text-decoration:underline}.btn-link.focus,.btn-link:focus{text-decoration:underline}.btn-link.disabled,.btn-link:disabled{color:#6c757d;pointer-events:none}.btn-group-lg>.btn,.btn-lg{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.btn-group-sm>.btn,.btn-sm{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:.5rem}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{position:relative;height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.dropdown,.dropleft,.dropright,.dropup{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width:576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width:768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width:992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width:1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty::after{margin-left:0}.dropright .dropdown-toggle::after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\"\"}.dropleft .dropdown-toggle::after{display:none}.dropleft .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\"\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty::after{margin-left:0}.dropleft .dropdown-toggle::before{vertical-align:0}.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=top]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:focus,.dropdown-item:hover{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1.5rem;color:#212529}.btn-group,.btn-group-vertical{position:relative;display:-ms-inline-flexbox;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;-ms-flex:1 1 auto;flex:1 1 auto}.btn-group-vertical>.btn:hover,.btn-group>.btn:hover{z-index:1}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus{z-index:1}.btn-toolbar{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:start;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group>.btn-group:not(:first-child),.btn-group>.btn:not(:first-child){margin-left:-1px}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropright .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropleft .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:center;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn-group:not(:first-child),.btn-group-vertical>.btn:not(:first-child){margin-top:-1px}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn:not(:first-child){border-top-left-radius:0;border-top-right-radius:0}.btn-group-toggle>.btn,.btn-group-toggle>.btn-group>.btn{margin-bottom:0}.btn-group-toggle>.btn input[type=checkbox],.btn-group-toggle>.btn input[type=radio],.btn-group-toggle>.btn-group>.btn input[type=checkbox],.btn-group-toggle>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:stretch;align-items:stretch;width:100%}.input-group>.custom-file,.input-group>.custom-select,.input-group>.form-control,.input-group>.form-control-plaintext{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;width:1%;min-width:0;margin-bottom:0}.input-group>.custom-file+.custom-file,.input-group>.custom-file+.custom-select,.input-group>.custom-file+.form-control,.input-group>.custom-select+.custom-file,.input-group>.custom-select+.custom-select,.input-group>.custom-select+.form-control,.input-group>.form-control+.custom-file,.input-group>.form-control+.custom-select,.input-group>.form-control+.form-control,.input-group>.form-control-plaintext+.custom-file,.input-group>.form-control-plaintext+.custom-select,.input-group>.form-control-plaintext+.form-control{margin-left:-1px}.input-group>.custom-file .custom-file-input:focus~.custom-file-label,.input-group>.custom-select:focus,.input-group>.form-control:focus{z-index:3}.input-group>.custom-file .custom-file-input:focus{z-index:4}.input-group>.custom-select:not(:last-child),.input-group>.form-control:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-select:not(:first-child),.input-group>.form-control:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.custom-file{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.input-group>.custom-file:not(:last-child) .custom-file-label,.input-group>.custom-file:not(:last-child) .custom-file-label::after{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.custom-file:not(:first-child) .custom-file-label{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-append,.input-group-prepend{display:-ms-flexbox;display:flex}.input-group-append .btn,.input-group-prepend .btn{position:relative;z-index:2}.input-group-append .btn:focus,.input-group-prepend .btn:focus{z-index:3}.input-group-append .btn+.btn,.input-group-append .btn+.input-group-text,.input-group-append .input-group-text+.btn,.input-group-append .input-group-text+.input-group-text,.input-group-prepend .btn+.btn,.input-group-prepend .btn+.input-group-text,.input-group-prepend .input-group-text+.btn,.input-group-prepend .input-group-text+.input-group-text{margin-left:-1px}.input-group-prepend{margin-right:-1px}.input-group-append{margin-left:-1px}.input-group-text{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.375rem .75rem;margin-bottom:0;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;text-align:center;white-space:nowrap;background-color:#e9ecef;border:1px solid #ced4da;border-radius:.25rem}.input-group-text input[type=checkbox],.input-group-text input[type=radio]{margin-top:0}.input-group-lg>.custom-select,.input-group-lg>.form-control:not(textarea){height:calc(1.5em + 1rem + 2px)}.input-group-lg>.custom-select,.input-group-lg>.form-control,.input-group-lg>.input-group-append>.btn,.input-group-lg>.input-group-append>.input-group-text,.input-group-lg>.input-group-prepend>.btn,.input-group-lg>.input-group-prepend>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;line-height:1.5;border-radius:.3rem}.input-group-sm>.custom-select,.input-group-sm>.form-control:not(textarea){height:calc(1.5em + .5rem + 2px)}.input-group-sm>.custom-select,.input-group-sm>.form-control,.input-group-sm>.input-group-append>.btn,.input-group-sm>.input-group-append>.input-group-text,.input-group-sm>.input-group-prepend>.btn,.input-group-sm>.input-group-prepend>.input-group-text{padding:.25rem .5rem;font-size:.875rem;line-height:1.5;border-radius:.2rem}.input-group-lg>.custom-select,.input-group-sm>.custom-select{padding-right:1.75rem}.input-group>.input-group-append:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group>.input-group-append:last-child>.input-group-text:not(:last-child),.input-group>.input-group-append:not(:last-child)>.btn,.input-group>.input-group-append:not(:last-child)>.input-group-text,.input-group>.input-group-prepend>.btn,.input-group>.input-group-prepend>.input-group-text{border-top-right-radius:0;border-bottom-right-radius:0}.input-group>.input-group-append>.btn,.input-group>.input-group-append>.input-group-text,.input-group>.input-group-prepend:first-child>.btn:not(:first-child),.input-group>.input-group-prepend:first-child>.input-group-text:not(:first-child),.input-group>.input-group-prepend:not(:first-child)>.btn,.input-group>.input-group-prepend:not(:first-child)>.input-group-text{border-top-left-radius:0;border-bottom-left-radius:0}.custom-control{position:relative;z-index:1;display:block;min-height:1.5rem;padding-left:1.5rem}.custom-control-inline{display:-ms-inline-flexbox;display:inline-flex;margin-right:1rem}.custom-control-input{position:absolute;left:0;z-index:-1;width:1rem;height:1.25rem;opacity:0}.custom-control-input:checked~.custom-control-label::before{color:#fff;border-color:#007bff;background-color:#007bff}.custom-control-input:focus~.custom-control-label::before{box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-control-input:focus:not(:checked)~.custom-control-label::before{border-color:#80bdff}.custom-control-input:not(:disabled):active~.custom-control-label::before{color:#fff;background-color:#b3d7ff;border-color:#b3d7ff}.custom-control-input:disabled~.custom-control-label,.custom-control-input[disabled]~.custom-control-label{color:#6c757d}.custom-control-input:disabled~.custom-control-label::before,.custom-control-input[disabled]~.custom-control-label::before{background-color:#e9ecef}.custom-control-label{position:relative;margin-bottom:0;vertical-align:top}.custom-control-label::before{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;pointer-events:none;content:\"\";background-color:#fff;border:#adb5bd solid 1px}.custom-control-label::after{position:absolute;top:.25rem;left:-1.5rem;display:block;width:1rem;height:1rem;content:\"\";background:no-repeat 50%/50% 50%}.custom-checkbox .custom-control-label::before{border-radius:.25rem}.custom-checkbox .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath fill='%23fff' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::before{border-color:#007bff;background-color:#007bff}.custom-checkbox .custom-control-input:indeterminate~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'%3e%3cpath stroke='%23fff' d='M0 2h4'/%3e%3c/svg%3e\")}.custom-checkbox .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-checkbox .custom-control-input:disabled:indeterminate~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-radio .custom-control-label::before{border-radius:50%}.custom-radio .custom-control-input:checked~.custom-control-label::after{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e\")}.custom-radio .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-switch{padding-left:2.25rem}.custom-switch .custom-control-label::before{left:-2.25rem;width:1.75rem;pointer-events:all;border-radius:.5rem}.custom-switch .custom-control-label::after{top:calc(.25rem + 2px);left:calc(-2.25rem + 2px);width:calc(1rem - 4px);height:calc(1rem - 4px);background-color:#adb5bd;border-radius:.5rem;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-transform .15s ease-in-out;transition:transform .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:transform .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out,-webkit-transform .15s ease-in-out}@media (prefers-reduced-motion:reduce){.custom-switch .custom-control-label::after{transition:none}}.custom-switch .custom-control-input:checked~.custom-control-label::after{background-color:#fff;-webkit-transform:translateX(.75rem);transform:translateX(.75rem)}.custom-switch .custom-control-input:disabled:checked~.custom-control-label::before{background-color:rgba(0,123,255,.5)}.custom-select{display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);padding:.375rem 1.75rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:#495057;vertical-align:middle;background:#fff url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e\") no-repeat right .75rem center/8px 10px;border:1px solid #ced4da;border-radius:.25rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-select:focus{border-color:#80bdff;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-select:focus::-ms-value{color:#495057;background-color:#fff}.custom-select[multiple],.custom-select[size]:not([size=\"1\"]){height:auto;padding-right:.75rem;background-image:none}.custom-select:disabled{color:#6c757d;background-color:#e9ecef}.custom-select::-ms-expand{display:none}.custom-select:-moz-focusring{color:transparent;text-shadow:0 0 0 #495057}.custom-select-sm{height:calc(1.5em + .5rem + 2px);padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem}.custom-select-lg{height:calc(1.5em + 1rem + 2px);padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem}.custom-file{position:relative;display:inline-block;width:100%;height:calc(1.5em + .75rem + 2px);margin-bottom:0}.custom-file-input{position:relative;z-index:2;width:100%;height:calc(1.5em + .75rem + 2px);margin:0;opacity:0}.custom-file-input:focus~.custom-file-label{border-color:#80bdff;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.custom-file-input:disabled~.custom-file-label,.custom-file-input[disabled]~.custom-file-label{background-color:#e9ecef}.custom-file-input:lang(en)~.custom-file-label::after{content:\"Browse\"}.custom-file-input~.custom-file-label[data-browse]::after{content:attr(data-browse)}.custom-file-label{position:absolute;top:0;right:0;left:0;z-index:1;height:calc(1.5em + .75rem + 2px);padding:.375rem .75rem;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;border:1px solid #ced4da;border-radius:.25rem}.custom-file-label::after{position:absolute;top:0;right:0;bottom:0;z-index:3;display:block;height:calc(1.5em + .75rem);padding:.375rem .75rem;line-height:1.5;color:#495057;content:\"Browse\";background-color:#e9ecef;border-left:inherit;border-radius:0 .25rem .25rem 0}.custom-range{width:100%;height:1.4rem;padding:0;background-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none}.custom-range:focus{outline:0}.custom-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range:focus::-ms-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .2rem rgba(0,123,255,.25)}.custom-range::-moz-focus-outer{border:0}.custom-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;background-color:#007bff;border:0;border-radius:1rem;-webkit-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-webkit-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.custom-range::-webkit-slider-thumb:active{background-color:#b3d7ff}.custom-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-moz-range-thumb{width:1rem;height:1rem;background-color:#007bff;border:0;border-radius:1rem;-moz-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;-moz-appearance:none;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-moz-range-thumb{-moz-transition:none;transition:none}}.custom-range::-moz-range-thumb:active{background-color:#b3d7ff}.custom-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:#dee2e6;border-color:transparent;border-radius:1rem}.custom-range::-ms-thumb{width:1rem;height:1rem;margin-top:0;margin-right:.2rem;margin-left:.2rem;background-color:#007bff;border:0;border-radius:1rem;-ms-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;appearance:none}@media (prefers-reduced-motion:reduce){.custom-range::-ms-thumb{-ms-transition:none;transition:none}}.custom-range::-ms-thumb:active{background-color:#b3d7ff}.custom-range::-ms-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:transparent;border-color:transparent;border-width:.5rem}.custom-range::-ms-fill-lower{background-color:#dee2e6;border-radius:1rem}.custom-range::-ms-fill-upper{margin-right:15px;background-color:#dee2e6;border-radius:1rem}.custom-range:disabled::-webkit-slider-thumb{background-color:#adb5bd}.custom-range:disabled::-webkit-slider-runnable-track{cursor:default}.custom-range:disabled::-moz-range-thumb{background-color:#adb5bd}.custom-range:disabled::-moz-range-track{cursor:default}.custom-range:disabled::-ms-thumb{background-color:#adb5bd}.custom-control-label::before,.custom-file-label,.custom-select{transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.custom-control-label::before,.custom-file-label,.custom-select{transition:none}}.nav{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:.5rem 1rem}.nav-link:focus,.nav-link:hover{text-decoration:none}.nav-link.disabled{color:#6c757d;pointer-events:none;cursor:default}.nav-tabs{border-bottom:1px solid #dee2e6}.nav-tabs .nav-item{margin-bottom:-1px}.nav-tabs .nav-link{border:1px solid transparent;border-top-left-radius:.25rem;border-top-right-radius:.25rem}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{border-color:#e9ecef #e9ecef #dee2e6}.nav-tabs .nav-link.disabled{color:#6c757d;background-color:transparent;border-color:transparent}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:#495057;background-color:#fff;border-color:#dee2e6 #dee2e6 #fff}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.nav-pills .nav-link{border-radius:.25rem}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:#fff;background-color:#007bff}.nav-fill .nav-item,.nav-fill>.nav-link{-ms-flex:1 1 auto;flex:1 1 auto;text-align:center}.nav-justified .nav-item,.nav-justified>.nav-link{-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-positive:1;flex-grow:1;text-align:center}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{position:relative;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;padding:.5rem 1rem}.navbar .container,.navbar .container-fluid,.navbar .container-lg,.navbar .container-md,.navbar .container-sm,.navbar .container-xl{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.navbar-brand{display:inline-block;padding-top:.3125rem;padding-bottom:.3125rem;margin-right:1rem;font-size:1.25rem;line-height:inherit;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-nav{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link{padding-right:0;padding-left:0}.navbar-nav .dropdown-menu{position:static;float:none}.navbar-text{display:inline-block;padding-top:.5rem;padding-bottom:.5rem}.navbar-collapse{-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center}.navbar-toggler{padding:.25rem .75rem;font-size:1.25rem;line-height:1;background-color:transparent;border:1px solid transparent;border-radius:.25rem}.navbar-toggler:focus,.navbar-toggler:hover{text-decoration:none}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;content:\"\";background:no-repeat center center;background-size:100% 100%}@media (max-width:575.98px){.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-xl{padding-right:0;padding-left:0}}@media (min-width:576px){.navbar-expand-sm{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-sm .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-sm>.container,.navbar-expand-sm>.container-fluid,.navbar-expand-sm>.container-lg,.navbar-expand-sm>.container-md,.navbar-expand-sm>.container-sm,.navbar-expand-sm>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-sm .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}}@media (max-width:767.98px){.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-md,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-xl{padding-right:0;padding-left:0}}@media (min-width:768px){.navbar-expand-md{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-md .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-md>.container,.navbar-expand-md>.container-fluid,.navbar-expand-md>.container-lg,.navbar-expand-md>.container-md,.navbar-expand-md>.container-sm,.navbar-expand-md>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-md .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}}@media (max-width:991.98px){.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-xl{padding-right:0;padding-left:0}}@media (min-width:992px){.navbar-expand-lg{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-lg .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-lg>.container,.navbar-expand-lg>.container-fluid,.navbar-expand-lg>.container-lg,.navbar-expand-lg>.container-md,.navbar-expand-lg>.container-sm,.navbar-expand-lg>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-lg .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}}@media (max-width:1199.98px){.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-xl{padding-right:0;padding-left:0}}@media (min-width:1200px){.navbar-expand-xl{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand-xl .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand-xl>.container,.navbar-expand-xl>.container-fluid,.navbar-expand-xl>.container-lg,.navbar-expand-xl>.container-md,.navbar-expand-xl>.container-sm,.navbar-expand-xl>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand-xl .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}}.navbar-expand{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-lg,.navbar-expand>.container-md,.navbar-expand>.container-sm,.navbar-expand>.container-xl{padding-right:0;padding-left:0}.navbar-expand .navbar-nav{-ms-flex-direction:row;flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:.5rem;padding-left:.5rem}.navbar-expand>.container,.navbar-expand>.container-fluid,.navbar-expand>.container-lg,.navbar-expand>.container-md,.navbar-expand>.container-sm,.navbar-expand>.container-xl{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.navbar-expand .navbar-collapse{display:-ms-flexbox!important;display:flex!important;-ms-flex-preferred-size:auto;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-light .navbar-brand{color:rgba(0,0,0,.9)}.navbar-light .navbar-brand:focus,.navbar-light .navbar-brand:hover{color:rgba(0,0,0,.9)}.navbar-light .navbar-nav .nav-link{color:rgba(0,0,0,.5)}.navbar-light .navbar-nav .nav-link:focus,.navbar-light .navbar-nav .nav-link:hover{color:rgba(0,0,0,.7)}.navbar-light .navbar-nav .nav-link.disabled{color:rgba(0,0,0,.3)}.navbar-light .navbar-nav .active>.nav-link,.navbar-light .navbar-nav .nav-link.active,.navbar-light .navbar-nav .nav-link.show,.navbar-light .navbar-nav .show>.nav-link{color:rgba(0,0,0,.9)}.navbar-light .navbar-toggler{color:rgba(0,0,0,.5);border-color:rgba(0,0,0,.1)}.navbar-light .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%280, 0, 0, 0.5%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-light .navbar-text{color:rgba(0,0,0,.5)}.navbar-light .navbar-text a{color:rgba(0,0,0,.9)}.navbar-light .navbar-text a:focus,.navbar-light .navbar-text a:hover{color:rgba(0,0,0,.9)}.navbar-dark .navbar-brand{color:#fff}.navbar-dark .navbar-brand:focus,.navbar-dark .navbar-brand:hover{color:#fff}.navbar-dark .navbar-nav .nav-link{color:rgba(255,255,255,.5)}.navbar-dark .navbar-nav .nav-link:focus,.navbar-dark .navbar-nav .nav-link:hover{color:rgba(255,255,255,.75)}.navbar-dark .navbar-nav .nav-link.disabled{color:rgba(255,255,255,.25)}.navbar-dark .navbar-nav .active>.nav-link,.navbar-dark .navbar-nav .nav-link.active,.navbar-dark .navbar-nav .nav-link.show,.navbar-dark .navbar-nav .show>.nav-link{color:#fff}.navbar-dark .navbar-toggler{color:rgba(255,255,255,.5);border-color:rgba(255,255,255,.1)}.navbar-dark .navbar-toggler-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.5%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e\")}.navbar-dark .navbar-text{color:rgba(255,255,255,.5)}.navbar-dark .navbar-text a{color:#fff}.navbar-dark .navbar-text a:focus,.navbar-dark .navbar-text a:hover{color:#fff}.card{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:0;word-wrap:break-word;background-color:#fff;background-clip:border-box;border:1px solid rgba(0,0,0,.125);border-radius:.25rem}.card>hr{margin-right:0;margin-left:0}.card>.list-group{border-top:inherit;border-bottom:inherit}.card>.list-group:first-child{border-top-width:0;border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card>.card-header+.list-group,.card>.list-group+.card-footer{border-top:0}.card-body{-ms-flex:1 1 auto;flex:1 1 auto;min-height:1px;padding:1.25rem}.card-title{margin-bottom:.75rem}.card-subtitle{margin-top:-.375rem;margin-bottom:0}.card-text:last-child{margin-bottom:0}.card-link:hover{text-decoration:none}.card-link+.card-link{margin-left:1.25rem}.card-header{padding:.75rem 1.25rem;margin-bottom:0;background-color:rgba(0,0,0,.03);border-bottom:1px solid rgba(0,0,0,.125)}.card-header:first-child{border-radius:calc(.25rem - 1px) calc(.25rem - 1px) 0 0}.card-footer{padding:.75rem 1.25rem;background-color:rgba(0,0,0,.03);border-top:1px solid rgba(0,0,0,.125)}.card-footer:last-child{border-radius:0 0 calc(.25rem - 1px) calc(.25rem - 1px)}.card-header-tabs{margin-right:-.625rem;margin-bottom:-.75rem;margin-left:-.625rem;border-bottom:0}.card-header-pills{margin-right:-.625rem;margin-left:-.625rem}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:1.25rem;border-radius:calc(.25rem - 1px)}.card-img,.card-img-bottom,.card-img-top{-ms-flex-negative:0;flex-shrink:0;width:100%}.card-img,.card-img-top{border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.card-img,.card-img-bottom{border-bottom-right-radius:calc(.25rem - 1px);border-bottom-left-radius:calc(.25rem - 1px)}.card-deck .card{margin-bottom:15px}@media (min-width:576px){.card-deck{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap;margin-right:-15px;margin-left:-15px}.card-deck .card{-ms-flex:1 0 0%;flex:1 0 0%;margin-right:15px;margin-bottom:0;margin-left:15px}}.card-group>.card{margin-bottom:15px}@media (min-width:576px){.card-group{display:-ms-flexbox;display:flex;-ms-flex-flow:row wrap;flex-flow:row wrap}.card-group>.card{-ms-flex:1 0 0%;flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-header,.card-group>.card:not(:last-child) .card-img-top{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-footer,.card-group>.card:not(:last-child) .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-header,.card-group>.card:not(:first-child) .card-img-top{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-footer,.card-group>.card:not(:first-child) .card-img-bottom{border-bottom-left-radius:0}}.card-columns .card{margin-bottom:.75rem}@media (min-width:576px){.card-columns{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-gap:1.25rem;-moz-column-gap:1.25rem;column-gap:1.25rem;orphans:1;widows:1}.card-columns .card{display:inline-block;width:100%}}.accordion{overflow-anchor:none}.accordion>.card{overflow:hidden}.accordion>.card:not(:last-of-type){border-bottom:0;border-bottom-right-radius:0;border-bottom-left-radius:0}.accordion>.card:not(:first-of-type){border-top-left-radius:0;border-top-right-radius:0}.accordion>.card>.card-header{border-radius:0;margin-bottom:-1px}.breadcrumb{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:.75rem 1rem;margin-bottom:1rem;list-style:none;background-color:#e9ecef;border-radius:.25rem}.breadcrumb-item{display:-ms-flexbox;display:flex}.breadcrumb-item+.breadcrumb-item{padding-left:.5rem}.breadcrumb-item+.breadcrumb-item::before{display:inline-block;padding-right:.5rem;color:#6c757d;content:\"/\"}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:underline}.breadcrumb-item+.breadcrumb-item:hover::before{text-decoration:none}.breadcrumb-item.active{color:#6c757d}.pagination{display:-ms-flexbox;display:flex;padding-left:0;list-style:none;border-radius:.25rem}.page-link{position:relative;display:block;padding:.5rem .75rem;margin-left:-1px;line-height:1.25;color:#007bff;background-color:#fff;border:1px solid #dee2e6}.page-link:hover{z-index:2;color:#0056b3;text-decoration:none;background-color:#e9ecef;border-color:#dee2e6}.page-link:focus{z-index:3;outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.25)}.page-item:first-child .page-link{margin-left:0;border-top-left-radius:.25rem;border-bottom-left-radius:.25rem}.page-item:last-child .page-link{border-top-right-radius:.25rem;border-bottom-right-radius:.25rem}.page-item.active .page-link{z-index:3;color:#fff;background-color:#007bff;border-color:#007bff}.page-item.disabled .page-link{color:#6c757d;pointer-events:none;cursor:auto;background-color:#fff;border-color:#dee2e6}.pagination-lg .page-link{padding:.75rem 1.5rem;font-size:1.25rem;line-height:1.5}.pagination-lg .page-item:first-child .page-link{border-top-left-radius:.3rem;border-bottom-left-radius:.3rem}.pagination-lg .page-item:last-child .page-link{border-top-right-radius:.3rem;border-bottom-right-radius:.3rem}.pagination-sm .page-link{padding:.25rem .5rem;font-size:.875rem;line-height:1.5}.pagination-sm .page-item:first-child .page-link{border-top-left-radius:.2rem;border-bottom-left-radius:.2rem}.pagination-sm .page-item:last-child .page-link{border-top-right-radius:.2rem;border-bottom-right-radius:.2rem}.badge{display:inline-block;padding:.25em .4em;font-size:75%;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25rem;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.badge{transition:none}}a.badge:focus,a.badge:hover{text-decoration:none}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.badge-pill{padding-right:.6em;padding-left:.6em;border-radius:10rem}.badge-primary{color:#fff;background-color:#007bff}a.badge-primary:focus,a.badge-primary:hover{color:#fff;background-color:#0062cc}a.badge-primary.focus,a.badge-primary:focus{outline:0;box-shadow:0 0 0 .2rem rgba(0,123,255,.5)}.badge-secondary{color:#fff;background-color:#6c757d}a.badge-secondary:focus,a.badge-secondary:hover{color:#fff;background-color:#545b62}a.badge-secondary.focus,a.badge-secondary:focus{outline:0;box-shadow:0 0 0 .2rem rgba(108,117,125,.5)}.badge-success{color:#fff;background-color:#28a745}a.badge-success:focus,a.badge-success:hover{color:#fff;background-color:#1e7e34}a.badge-success.focus,a.badge-success:focus{outline:0;box-shadow:0 0 0 .2rem rgba(40,167,69,.5)}.badge-info{color:#fff;background-color:#17a2b8}a.badge-info:focus,a.badge-info:hover{color:#fff;background-color:#117a8b}a.badge-info.focus,a.badge-info:focus{outline:0;box-shadow:0 0 0 .2rem rgba(23,162,184,.5)}.badge-warning{color:#212529;background-color:#ffc107}a.badge-warning:focus,a.badge-warning:hover{color:#212529;background-color:#d39e00}a.badge-warning.focus,a.badge-warning:focus{outline:0;box-shadow:0 0 0 .2rem rgba(255,193,7,.5)}.badge-danger{color:#fff;background-color:#dc3545}a.badge-danger:focus,a.badge-danger:hover{color:#fff;background-color:#bd2130}a.badge-danger.focus,a.badge-danger:focus{outline:0;box-shadow:0 0 0 .2rem rgba(220,53,69,.5)}.badge-light{color:#212529;background-color:#f8f9fa}a.badge-light:focus,a.badge-light:hover{color:#212529;background-color:#dae0e5}a.badge-light.focus,a.badge-light:focus{outline:0;box-shadow:0 0 0 .2rem rgba(248,249,250,.5)}.badge-dark{color:#fff;background-color:#343a40}a.badge-dark:focus,a.badge-dark:hover{color:#fff;background-color:#1d2124}a.badge-dark.focus,a.badge-dark:focus{outline:0;box-shadow:0 0 0 .2rem rgba(52,58,64,.5)}.jumbotron{padding:2rem 1rem;margin-bottom:2rem;background-color:#e9ecef;border-radius:.3rem}@media (min-width:576px){.jumbotron{padding:4rem 2rem}}.jumbotron-fluid{padding-right:0;padding-left:0;border-radius:0}.alert{position:relative;padding:.75rem 1.25rem;margin-bottom:1rem;border:1px solid transparent;border-radius:.25rem}.alert-heading{color:inherit}.alert-link{font-weight:700}.alert-dismissible{padding-right:4rem}.alert-dismissible .close{position:absolute;top:0;right:0;padding:.75rem 1.25rem;color:inherit}.alert-primary{color:#004085;background-color:#cce5ff;border-color:#b8daff}.alert-primary hr{border-top-color:#9fcdff}.alert-primary .alert-link{color:#002752}.alert-secondary{color:#383d41;background-color:#e2e3e5;border-color:#d6d8db}.alert-secondary hr{border-top-color:#c8cbcf}.alert-secondary .alert-link{color:#202326}.alert-success{color:#155724;background-color:#d4edda;border-color:#c3e6cb}.alert-success hr{border-top-color:#b1dfbb}.alert-success .alert-link{color:#0b2e13}.alert-info{color:#0c5460;background-color:#d1ecf1;border-color:#bee5eb}.alert-info hr{border-top-color:#abdde5}.alert-info .alert-link{color:#062c33}.alert-warning{color:#856404;background-color:#fff3cd;border-color:#ffeeba}.alert-warning hr{border-top-color:#ffe8a1}.alert-warning .alert-link{color:#533f03}.alert-danger{color:#721c24;background-color:#f8d7da;border-color:#f5c6cb}.alert-danger hr{border-top-color:#f1b0b7}.alert-danger .alert-link{color:#491217}.alert-light{color:#818182;background-color:#fefefe;border-color:#fdfdfe}.alert-light hr{border-top-color:#ececf6}.alert-light .alert-link{color:#686868}.alert-dark{color:#1b1e21;background-color:#d6d8d9;border-color:#c6c8ca}.alert-dark hr{border-top-color:#b9bbbe}.alert-dark .alert-link{color:#040505}@-webkit-keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:1rem 0}to{background-position:0 0}}.progress{display:-ms-flexbox;display:flex;height:1rem;overflow:hidden;line-height:0;font-size:.75rem;background-color:#e9ecef;border-radius:.25rem}.progress-bar{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;overflow:hidden;color:#fff;text-align:center;white-space:nowrap;background-color:#007bff;transition:width .6s ease}@media (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:1rem 1rem}.progress-bar-animated{-webkit-animation:progress-bar-stripes 1s linear infinite;animation:progress-bar-stripes 1s linear infinite}@media (prefers-reduced-motion:reduce){.progress-bar-animated{-webkit-animation:none;animation:none}}.media{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start}.media-body{-ms-flex:1;flex:1}.list-group{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:.25rem}.list-group-item-action{width:100%;color:#495057;text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{z-index:1;color:#495057;text-decoration:none;background-color:#f8f9fa}.list-group-item-action:active{color:#212529;background-color:#e9ecef}.list-group-item{position:relative;display:block;padding:.75rem 1.25rem;background-color:#fff;border:1px solid rgba(0,0,0,.125)}.list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.list-group-item.disabled,.list-group-item:disabled{color:#6c757d;pointer-events:none;background-color:#fff}.list-group-item.active{z-index:2;color:#fff;background-color:#007bff;border-color:#007bff}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:-1px;border-top-width:1px}.list-group-horizontal{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal>.list-group-item.active{margin-top:0}.list-group-horizontal>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}@media (min-width:576px){.list-group-horizontal-sm{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-sm>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-sm>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-sm>.list-group-item.active{margin-top:0}.list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:768px){.list-group-horizontal-md{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-md>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-md>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-md>.list-group-item.active{margin-top:0}.list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:992px){.list-group-horizontal-lg{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-lg>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-lg>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-lg>.list-group-item.active{margin-top:0}.list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}@media (min-width:1200px){.list-group-horizontal-xl{-ms-flex-direction:row;flex-direction:row}.list-group-horizontal-xl>.list-group-item:first-child{border-bottom-left-radius:.25rem;border-top-right-radius:0}.list-group-horizontal-xl>.list-group-item:last-child{border-top-right-radius:.25rem;border-bottom-left-radius:0}.list-group-horizontal-xl>.list-group-item.active{margin-top:0}.list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:1px;border-left-width:0}.list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:-1px;border-left-width:1px}}.list-group-flush{border-radius:0}.list-group-flush>.list-group-item{border-width:0 0 1px}.list-group-flush>.list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{color:#004085;background-color:#b8daff}.list-group-item-primary.list-group-item-action:focus,.list-group-item-primary.list-group-item-action:hover{color:#004085;background-color:#9fcdff}.list-group-item-primary.list-group-item-action.active{color:#fff;background-color:#004085;border-color:#004085}.list-group-item-secondary{color:#383d41;background-color:#d6d8db}.list-group-item-secondary.list-group-item-action:focus,.list-group-item-secondary.list-group-item-action:hover{color:#383d41;background-color:#c8cbcf}.list-group-item-secondary.list-group-item-action.active{color:#fff;background-color:#383d41;border-color:#383d41}.list-group-item-success{color:#155724;background-color:#c3e6cb}.list-group-item-success.list-group-item-action:focus,.list-group-item-success.list-group-item-action:hover{color:#155724;background-color:#b1dfbb}.list-group-item-success.list-group-item-action.active{color:#fff;background-color:#155724;border-color:#155724}.list-group-item-info{color:#0c5460;background-color:#bee5eb}.list-group-item-info.list-group-item-action:focus,.list-group-item-info.list-group-item-action:hover{color:#0c5460;background-color:#abdde5}.list-group-item-info.list-group-item-action.active{color:#fff;background-color:#0c5460;border-color:#0c5460}.list-group-item-warning{color:#856404;background-color:#ffeeba}.list-group-item-warning.list-group-item-action:focus,.list-group-item-warning.list-group-item-action:hover{color:#856404;background-color:#ffe8a1}.list-group-item-warning.list-group-item-action.active{color:#fff;background-color:#856404;border-color:#856404}.list-group-item-danger{color:#721c24;background-color:#f5c6cb}.list-group-item-danger.list-group-item-action:focus,.list-group-item-danger.list-group-item-action:hover{color:#721c24;background-color:#f1b0b7}.list-group-item-danger.list-group-item-action.active{color:#fff;background-color:#721c24;border-color:#721c24}.list-group-item-light{color:#818182;background-color:#fdfdfe}.list-group-item-light.list-group-item-action:focus,.list-group-item-light.list-group-item-action:hover{color:#818182;background-color:#ececf6}.list-group-item-light.list-group-item-action.active{color:#fff;background-color:#818182;border-color:#818182}.list-group-item-dark{color:#1b1e21;background-color:#c6c8ca}.list-group-item-dark.list-group-item-action:focus,.list-group-item-dark.list-group-item-action:hover{color:#1b1e21;background-color:#b9bbbe}.list-group-item-dark.list-group-item-action.active{color:#fff;background-color:#1b1e21;border-color:#1b1e21}.close{float:right;font-size:1.5rem;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;opacity:.5}.close:hover{color:#000;text-decoration:none}.close:not(:disabled):not(.disabled):focus,.close:not(:disabled):not(.disabled):hover{opacity:.75}button.close{padding:0;background-color:transparent;border:0}a.close.disabled{pointer-events:none}.toast{-ms-flex-preferred-size:350px;flex-basis:350px;max-width:350px;font-size:.875rem;background-color:rgba(255,255,255,.85);background-clip:padding-box;border:1px solid rgba(0,0,0,.1);box-shadow:0 .25rem .75rem rgba(0,0,0,.1);opacity:0;border-radius:.25rem}.toast:not(:last-child){margin-bottom:.75rem}.toast.showing{opacity:1}.toast.show{display:block;opacity:1}.toast.hide{display:none}.toast-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;padding:.25rem .75rem;color:#6c757d;background-color:rgba(255,255,255,.85);background-clip:padding-box;border-bottom:1px solid rgba(0,0,0,.05);border-top-left-radius:calc(.25rem - 1px);border-top-right-radius:calc(.25rem - 1px)}.toast-body{padding:.75rem}.modal-open{overflow:hidden}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal{position:fixed;top:0;left:0;z-index:1050;display:none;width:100%;height:100%;overflow:hidden;outline:0}.modal-dialog{position:relative;width:auto;margin:.5rem;pointer-events:none}.modal.fade .modal-dialog{transition:-webkit-transform .3s ease-out;transition:transform .3s ease-out;transition:transform .3s ease-out,-webkit-transform .3s ease-out;-webkit-transform:translate(0,-50px);transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{-webkit-transform:none;transform:none}.modal.modal-static .modal-dialog{-webkit-transform:scale(1.02);transform:scale(1.02)}.modal-dialog-scrollable{display:-ms-flexbox;display:flex;max-height:calc(100% - 1rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 1rem);overflow:hidden}.modal-dialog-scrollable .modal-footer,.modal-dialog-scrollable .modal-header{-ms-flex-negative:0;flex-shrink:0}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;min-height:calc(100% - 1rem)}.modal-dialog-centered::before{display:block;height:calc(100vh - 1rem);height:-webkit-min-content;height:-moz-min-content;height:min-content;content:\"\"}.modal-dialog-centered.modal-dialog-scrollable{-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.modal-dialog-centered.modal-dialog-scrollable .modal-content{max-height:none}.modal-dialog-centered.modal-dialog-scrollable::before{content:none}.modal-content{position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;width:100%;pointer-events:auto;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem;outline:0}.modal-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:.5}.modal-header{display:-ms-flexbox;display:flex;-ms-flex-align:start;align-items:flex-start;-ms-flex-pack:justify;justify-content:space-between;padding:1rem 1rem;border-bottom:1px solid #dee2e6;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.modal-header .close{padding:1rem 1rem;margin:-1rem -1rem -1rem auto}.modal-title{margin-bottom:0;line-height:1.5}.modal-body{position:relative;-ms-flex:1 1 auto;flex:1 1 auto;padding:1rem}.modal-footer{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end;padding:.75rem;border-top:1px solid #dee2e6;border-bottom-right-radius:calc(.3rem - 1px);border-bottom-left-radius:calc(.3rem - 1px)}.modal-footer>*{margin:.25rem}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:576px){.modal-dialog{max-width:500px;margin:1.75rem auto}.modal-dialog-scrollable{max-height:calc(100% - 3.5rem)}.modal-dialog-scrollable .modal-content{max-height:calc(100vh - 3.5rem)}.modal-dialog-centered{min-height:calc(100% - 3.5rem)}.modal-dialog-centered::before{height:calc(100vh - 3.5rem);height:-webkit-min-content;height:-moz-min-content;height:min-content}.modal-sm{max-width:300px}}@media (min-width:992px){.modal-lg,.modal-xl{max-width:800px}}@media (min-width:1200px){.modal-xl{max-width:1140px}}.tooltip{position:absolute;z-index:1070;display:block;margin:0;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;opacity:0}.tooltip.show{opacity:.9}.tooltip .arrow{position:absolute;display:block;width:.8rem;height:.4rem}.tooltip .arrow::before{position:absolute;content:\"\";border-color:transparent;border-style:solid}.bs-tooltip-auto[x-placement^=top],.bs-tooltip-top{padding:.4rem 0}.bs-tooltip-auto[x-placement^=top] .arrow,.bs-tooltip-top .arrow{bottom:0}.bs-tooltip-auto[x-placement^=top] .arrow::before,.bs-tooltip-top .arrow::before{top:0;border-width:.4rem .4rem 0;border-top-color:#000}.bs-tooltip-auto[x-placement^=right],.bs-tooltip-right{padding:0 .4rem}.bs-tooltip-auto[x-placement^=right] .arrow,.bs-tooltip-right .arrow{left:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=right] .arrow::before,.bs-tooltip-right .arrow::before{right:0;border-width:.4rem .4rem .4rem 0;border-right-color:#000}.bs-tooltip-auto[x-placement^=bottom],.bs-tooltip-bottom{padding:.4rem 0}.bs-tooltip-auto[x-placement^=bottom] .arrow,.bs-tooltip-bottom .arrow{top:0}.bs-tooltip-auto[x-placement^=bottom] .arrow::before,.bs-tooltip-bottom .arrow::before{bottom:0;border-width:0 .4rem .4rem;border-bottom-color:#000}.bs-tooltip-auto[x-placement^=left],.bs-tooltip-left{padding:0 .4rem}.bs-tooltip-auto[x-placement^=left] .arrow,.bs-tooltip-left .arrow{right:0;width:.4rem;height:.8rem}.bs-tooltip-auto[x-placement^=left] .arrow::before,.bs-tooltip-left .arrow::before{left:0;border-width:.4rem 0 .4rem .4rem;border-left-color:#000}.tooltip-inner{max-width:200px;padding:.25rem .5rem;color:#fff;text-align:center;background-color:#000;border-radius:.25rem}.popover{position:absolute;top:0;left:0;z-index:1060;display:block;max-width:276px;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;white-space:normal;line-break:auto;font-size:.875rem;word-wrap:break-word;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.2);border-radius:.3rem}.popover .arrow{position:absolute;display:block;width:1rem;height:.5rem;margin:0 .3rem}.popover .arrow::after,.popover .arrow::before{position:absolute;display:block;content:\"\";border-color:transparent;border-style:solid}.bs-popover-auto[x-placement^=top],.bs-popover-top{margin-bottom:.5rem}.bs-popover-auto[x-placement^=top]>.arrow,.bs-popover-top>.arrow{bottom:calc(-.5rem - 1px)}.bs-popover-auto[x-placement^=top]>.arrow::before,.bs-popover-top>.arrow::before{bottom:0;border-width:.5rem .5rem 0;border-top-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=top]>.arrow::after,.bs-popover-top>.arrow::after{bottom:1px;border-width:.5rem .5rem 0;border-top-color:#fff}.bs-popover-auto[x-placement^=right],.bs-popover-right{margin-left:.5rem}.bs-popover-auto[x-placement^=right]>.arrow,.bs-popover-right>.arrow{left:calc(-.5rem - 1px);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=right]>.arrow::before,.bs-popover-right>.arrow::before{left:0;border-width:.5rem .5rem .5rem 0;border-right-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=right]>.arrow::after,.bs-popover-right>.arrow::after{left:1px;border-width:.5rem .5rem .5rem 0;border-right-color:#fff}.bs-popover-auto[x-placement^=bottom],.bs-popover-bottom{margin-top:.5rem}.bs-popover-auto[x-placement^=bottom]>.arrow,.bs-popover-bottom>.arrow{top:calc(-.5rem - 1px)}.bs-popover-auto[x-placement^=bottom]>.arrow::before,.bs-popover-bottom>.arrow::before{top:0;border-width:0 .5rem .5rem .5rem;border-bottom-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=bottom]>.arrow::after,.bs-popover-bottom>.arrow::after{top:1px;border-width:0 .5rem .5rem .5rem;border-bottom-color:#fff}.bs-popover-auto[x-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:1rem;margin-left:-.5rem;content:\"\";border-bottom:1px solid #f7f7f7}.bs-popover-auto[x-placement^=left],.bs-popover-left{margin-right:.5rem}.bs-popover-auto[x-placement^=left]>.arrow,.bs-popover-left>.arrow{right:calc(-.5rem - 1px);width:.5rem;height:1rem;margin:.3rem 0}.bs-popover-auto[x-placement^=left]>.arrow::before,.bs-popover-left>.arrow::before{right:0;border-width:.5rem 0 .5rem .5rem;border-left-color:rgba(0,0,0,.25)}.bs-popover-auto[x-placement^=left]>.arrow::after,.bs-popover-left>.arrow::after{right:1px;border-width:.5rem 0 .5rem .5rem;border-left-color:#fff}.popover-header{padding:.5rem .75rem;margin-bottom:0;font-size:1rem;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-top-left-radius:calc(.3rem - 1px);border-top-right-radius:calc(.3rem - 1px)}.popover-header:empty{display:none}.popover-body{padding:.5rem .75rem;color:#212529}.carousel{position:relative}.carousel.pointer-event{-ms-touch-action:pan-y;touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:\"\"}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:-webkit-transform .6s ease-in-out;transition:transform .6s ease-in-out;transition:transform .6s ease-in-out,-webkit-transform .6s ease-in-out}@media (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.active.carousel-item-right,.carousel-item-next:not(.carousel-item-left){-webkit-transform:translateX(100%);transform:translateX(100%)}.active.carousel-item-left,.carousel-item-prev:not(.carousel-item-right){-webkit-transform:translateX(-100%);transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;-webkit-transform:none;transform:none}.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right,.carousel-fade .carousel-item.active{z-index:1;opacity:1}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion:reduce){.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right{transition:none}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:15%;color:#fff;text-align:center;opacity:.5;transition:opacity .15s ease}@media (prefers-reduced-motion:reduce){.carousel-control-next,.carousel-control-prev{transition:none}}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:20px;height:20px;background:no-repeat 50%/100% 100%}.carousel-control-prev-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/%3e%3c/svg%3e\")}.carousel-control-next-icon{background-image:url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' width='8' height='8' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/%3e%3c/svg%3e\")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:15;display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;padding-left:0;margin-right:15%;margin-left:15%;list-style:none}.carousel-indicators li{box-sizing:content-box;-ms-flex:0 1 auto;flex:0 1 auto;width:30px;height:3px;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity .6s ease}@media (prefers-reduced-motion:reduce){.carousel-indicators li{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center}@-webkit-keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-border{to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.spinner-border{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;border:.25em solid currentColor;border-right-color:transparent;border-radius:50%;-webkit-animation:spinner-border .75s linear infinite;animation:spinner-border .75s linear infinite}.spinner-border-sm{width:1rem;height:1rem;border-width:.2em}@-webkit-keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1;-webkit-transform:none;transform:none}}@keyframes spinner-grow{0%{-webkit-transform:scale(0);transform:scale(0)}50%{opacity:1;-webkit-transform:none;transform:none}}.spinner-grow{display:inline-block;width:2rem;height:2rem;vertical-align:text-bottom;background-color:currentColor;border-radius:50%;opacity:0;-webkit-animation:spinner-grow .75s linear infinite;animation:spinner-grow .75s linear infinite}.spinner-grow-sm{width:1rem;height:1rem}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.bg-primary{background-color:#007bff!important}a.bg-primary:focus,a.bg-primary:hover,button.bg-primary:focus,button.bg-primary:hover{background-color:#0062cc!important}.bg-secondary{background-color:#6c757d!important}a.bg-secondary:focus,a.bg-secondary:hover,button.bg-secondary:focus,button.bg-secondary:hover{background-color:#545b62!important}.bg-success{background-color:#28a745!important}a.bg-success:focus,a.bg-success:hover,button.bg-success:focus,button.bg-success:hover{background-color:#1e7e34!important}.bg-info{background-color:#17a2b8!important}a.bg-info:focus,a.bg-info:hover,button.bg-info:focus,button.bg-info:hover{background-color:#117a8b!important}.bg-warning{background-color:#ffc107!important}a.bg-warning:focus,a.bg-warning:hover,button.bg-warning:focus,button.bg-warning:hover{background-color:#d39e00!important}.bg-danger{background-color:#dc3545!important}a.bg-danger:focus,a.bg-danger:hover,button.bg-danger:focus,button.bg-danger:hover{background-color:#bd2130!important}.bg-light{background-color:#f8f9fa!important}a.bg-light:focus,a.bg-light:hover,button.bg-light:focus,button.bg-light:hover{background-color:#dae0e5!important}.bg-dark{background-color:#343a40!important}a.bg-dark:focus,a.bg-dark:hover,button.bg-dark:focus,button.bg-dark:hover{background-color:#1d2124!important}.bg-white{background-color:#fff!important}.bg-transparent{background-color:transparent!important}.border{border:1px solid #dee2e6!important}.border-top{border-top:1px solid #dee2e6!important}.border-right{border-right:1px solid #dee2e6!important}.border-bottom{border-bottom:1px solid #dee2e6!important}.border-left{border-left:1px solid #dee2e6!important}.border-0{border:0!important}.border-top-0{border-top:0!important}.border-right-0{border-right:0!important}.border-bottom-0{border-bottom:0!important}.border-left-0{border-left:0!important}.border-primary{border-color:#007bff!important}.border-secondary{border-color:#6c757d!important}.border-success{border-color:#28a745!important}.border-info{border-color:#17a2b8!important}.border-warning{border-color:#ffc107!important}.border-danger{border-color:#dc3545!important}.border-light{border-color:#f8f9fa!important}.border-dark{border-color:#343a40!important}.border-white{border-color:#fff!important}.rounded-sm{border-radius:.2rem!important}.rounded{border-radius:.25rem!important}.rounded-top{border-top-left-radius:.25rem!important;border-top-right-radius:.25rem!important}.rounded-right{border-top-right-radius:.25rem!important;border-bottom-right-radius:.25rem!important}.rounded-bottom{border-bottom-right-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-left{border-top-left-radius:.25rem!important;border-bottom-left-radius:.25rem!important}.rounded-lg{border-radius:.3rem!important}.rounded-circle{border-radius:50%!important}.rounded-pill{border-radius:50rem!important}.rounded-0{border-radius:0!important}.clearfix::after{display:block;clear:both;content:\"\"}.d-none{display:none!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:-ms-flexbox!important;display:flex!important}.d-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}@media (min-width:576px){.d-sm-none{display:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:-ms-flexbox!important;display:flex!important}.d-sm-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:768px){.d-md-none{display:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:-ms-flexbox!important;display:flex!important}.d-md-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:992px){.d-lg-none{display:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:-ms-flexbox!important;display:flex!important}.d-lg-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media (min-width:1200px){.d-xl-none{display:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:-ms-flexbox!important;display:flex!important}.d-xl-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}@media print{.d-print-none{display:none!important}.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:-ms-flexbox!important;display:flex!important}.d-print-inline-flex{display:-ms-inline-flexbox!important;display:inline-flex!important}}.embed-responsive{position:relative;display:block;width:100%;padding:0;overflow:hidden}.embed-responsive::before{display:block;content:\"\"}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-21by9::before{padding-top:42.857143%}.embed-responsive-16by9::before{padding-top:56.25%}.embed-responsive-4by3::before{padding-top:75%}.embed-responsive-1by1::before{padding-top:100%}.flex-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-center{-ms-flex-align:center!important;align-items:center!important}.align-items-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}@media (min-width:576px){.flex-sm-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-sm-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-sm-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-sm-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-sm-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-sm-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-sm-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-sm-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-sm-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-sm-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-sm-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-sm-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-sm-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-sm-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-sm-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-sm-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-sm-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-sm-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-sm-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-sm-center{-ms-flex-align:center!important;align-items:center!important}.align-items-sm-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-sm-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-sm-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-sm-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-sm-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-sm-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-sm-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-sm-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-sm-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-sm-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-sm-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-sm-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-sm-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-sm-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:768px){.flex-md-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-md-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-md-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-md-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-md-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-md-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-md-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-md-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-md-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-md-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-md-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-md-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-md-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-md-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-md-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-md-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-md-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-md-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-md-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-md-center{-ms-flex-align:center!important;align-items:center!important}.align-items-md-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-md-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-md-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-md-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-md-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-md-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-md-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-md-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-md-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-md-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-md-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-md-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-md-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-md-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:992px){.flex-lg-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-lg-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-lg-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-lg-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-lg-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-lg-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-lg-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-lg-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-lg-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-lg-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-lg-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-lg-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-lg-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-lg-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-lg-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-lg-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-lg-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-lg-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-lg-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-lg-center{-ms-flex-align:center!important;align-items:center!important}.align-items-lg-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-lg-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-lg-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-lg-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-lg-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-lg-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-lg-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-lg-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-lg-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-lg-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-lg-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-lg-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-lg-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-lg-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}@media (min-width:1200px){.flex-xl-row{-ms-flex-direction:row!important;flex-direction:row!important}.flex-xl-column{-ms-flex-direction:column!important;flex-direction:column!important}.flex-xl-row-reverse{-ms-flex-direction:row-reverse!important;flex-direction:row-reverse!important}.flex-xl-column-reverse{-ms-flex-direction:column-reverse!important;flex-direction:column-reverse!important}.flex-xl-wrap{-ms-flex-wrap:wrap!important;flex-wrap:wrap!important}.flex-xl-nowrap{-ms-flex-wrap:nowrap!important;flex-wrap:nowrap!important}.flex-xl-wrap-reverse{-ms-flex-wrap:wrap-reverse!important;flex-wrap:wrap-reverse!important}.flex-xl-fill{-ms-flex:1 1 auto!important;flex:1 1 auto!important}.flex-xl-grow-0{-ms-flex-positive:0!important;flex-grow:0!important}.flex-xl-grow-1{-ms-flex-positive:1!important;flex-grow:1!important}.flex-xl-shrink-0{-ms-flex-negative:0!important;flex-shrink:0!important}.flex-xl-shrink-1{-ms-flex-negative:1!important;flex-shrink:1!important}.justify-content-xl-start{-ms-flex-pack:start!important;justify-content:flex-start!important}.justify-content-xl-end{-ms-flex-pack:end!important;justify-content:flex-end!important}.justify-content-xl-center{-ms-flex-pack:center!important;justify-content:center!important}.justify-content-xl-between{-ms-flex-pack:justify!important;justify-content:space-between!important}.justify-content-xl-around{-ms-flex-pack:distribute!important;justify-content:space-around!important}.align-items-xl-start{-ms-flex-align:start!important;align-items:flex-start!important}.align-items-xl-end{-ms-flex-align:end!important;align-items:flex-end!important}.align-items-xl-center{-ms-flex-align:center!important;align-items:center!important}.align-items-xl-baseline{-ms-flex-align:baseline!important;align-items:baseline!important}.align-items-xl-stretch{-ms-flex-align:stretch!important;align-items:stretch!important}.align-content-xl-start{-ms-flex-line-pack:start!important;align-content:flex-start!important}.align-content-xl-end{-ms-flex-line-pack:end!important;align-content:flex-end!important}.align-content-xl-center{-ms-flex-line-pack:center!important;align-content:center!important}.align-content-xl-between{-ms-flex-line-pack:justify!important;align-content:space-between!important}.align-content-xl-around{-ms-flex-line-pack:distribute!important;align-content:space-around!important}.align-content-xl-stretch{-ms-flex-line-pack:stretch!important;align-content:stretch!important}.align-self-xl-auto{-ms-flex-item-align:auto!important;align-self:auto!important}.align-self-xl-start{-ms-flex-item-align:start!important;align-self:flex-start!important}.align-self-xl-end{-ms-flex-item-align:end!important;align-self:flex-end!important}.align-self-xl-center{-ms-flex-item-align:center!important;align-self:center!important}.align-self-xl-baseline{-ms-flex-item-align:baseline!important;align-self:baseline!important}.align-self-xl-stretch{-ms-flex-item-align:stretch!important;align-self:stretch!important}}.float-left{float:left!important}.float-right{float:right!important}.float-none{float:none!important}@media (min-width:576px){.float-sm-left{float:left!important}.float-sm-right{float:right!important}.float-sm-none{float:none!important}}@media (min-width:768px){.float-md-left{float:left!important}.float-md-right{float:right!important}.float-md-none{float:none!important}}@media (min-width:992px){.float-lg-left{float:left!important}.float-lg-right{float:right!important}.float-lg-none{float:none!important}}@media (min-width:1200px){.float-xl-left{float:left!important}.float-xl-right{float:right!important}.float-xl-none{float:none!important}}.user-select-all{-webkit-user-select:all!important;-moz-user-select:all!important;-ms-user-select:all!important;user-select:all!important}.user-select-auto{-webkit-user-select:auto!important;-moz-user-select:auto!important;-ms-user-select:auto!important;user-select:auto!important}.user-select-none{-webkit-user-select:none!important;-moz-user-select:none!important;-ms-user-select:none!important;user-select:none!important}.overflow-auto{overflow:auto!important}.overflow-hidden{overflow:hidden!important}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}@supports ((position:-webkit-sticky) or (position:sticky)){.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;overflow:visible;clip:auto;white-space:normal}.shadow-sm{box-shadow:0 .125rem .25rem rgba(0,0,0,.075)!important}.shadow{box-shadow:0 .5rem 1rem rgba(0,0,0,.15)!important}.shadow-lg{box-shadow:0 1rem 3rem rgba(0,0,0,.175)!important}.shadow-none{box-shadow:none!important}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mw-100{max-width:100%!important}.mh-100{max-height:100%!important}.min-vw-100{min-width:100vw!important}.min-vh-100{min-height:100vh!important}.vw-100{width:100vw!important}.vh-100{height:100vh!important}.m-0{margin:0!important}.mt-0,.my-0{margin-top:0!important}.mr-0,.mx-0{margin-right:0!important}.mb-0,.my-0{margin-bottom:0!important}.ml-0,.mx-0{margin-left:0!important}.m-1{margin:.25rem!important}.mt-1,.my-1{margin-top:.25rem!important}.mr-1,.mx-1{margin-right:.25rem!important}.mb-1,.my-1{margin-bottom:.25rem!important}.ml-1,.mx-1{margin-left:.25rem!important}.m-2{margin:.5rem!important}.mt-2,.my-2{margin-top:.5rem!important}.mr-2,.mx-2{margin-right:.5rem!important}.mb-2,.my-2{margin-bottom:.5rem!important}.ml-2,.mx-2{margin-left:.5rem!important}.m-3{margin:1rem!important}.mt-3,.my-3{margin-top:1rem!important}.mr-3,.mx-3{margin-right:1rem!important}.mb-3,.my-3{margin-bottom:1rem!important}.ml-3,.mx-3{margin-left:1rem!important}.m-4{margin:1.5rem!important}.mt-4,.my-4{margin-top:1.5rem!important}.mr-4,.mx-4{margin-right:1.5rem!important}.mb-4,.my-4{margin-bottom:1.5rem!important}.ml-4,.mx-4{margin-left:1.5rem!important}.m-5{margin:3rem!important}.mt-5,.my-5{margin-top:3rem!important}.mr-5,.mx-5{margin-right:3rem!important}.mb-5,.my-5{margin-bottom:3rem!important}.ml-5,.mx-5{margin-left:3rem!important}.p-0{padding:0!important}.pt-0,.py-0{padding-top:0!important}.pr-0,.px-0{padding-right:0!important}.pb-0,.py-0{padding-bottom:0!important}.pl-0,.px-0{padding-left:0!important}.p-1{padding:.25rem!important}.pt-1,.py-1{padding-top:.25rem!important}.pr-1,.px-1{padding-right:.25rem!important}.pb-1,.py-1{padding-bottom:.25rem!important}.pl-1,.px-1{padding-left:.25rem!important}.p-2{padding:.5rem!important}.pt-2,.py-2{padding-top:.5rem!important}.pr-2,.px-2{padding-right:.5rem!important}.pb-2,.py-2{padding-bottom:.5rem!important}.pl-2,.px-2{padding-left:.5rem!important}.p-3{padding:1rem!important}.pt-3,.py-3{padding-top:1rem!important}.pr-3,.px-3{padding-right:1rem!important}.pb-3,.py-3{padding-bottom:1rem!important}.pl-3,.px-3{padding-left:1rem!important}.p-4{padding:1.5rem!important}.pt-4,.py-4{padding-top:1.5rem!important}.pr-4,.px-4{padding-right:1.5rem!important}.pb-4,.py-4{padding-bottom:1.5rem!important}.pl-4,.px-4{padding-left:1.5rem!important}.p-5{padding:3rem!important}.pt-5,.py-5{padding-top:3rem!important}.pr-5,.px-5{padding-right:3rem!important}.pb-5,.py-5{padding-bottom:3rem!important}.pl-5,.px-5{padding-left:3rem!important}.m-n1{margin:-.25rem!important}.mt-n1,.my-n1{margin-top:-.25rem!important}.mr-n1,.mx-n1{margin-right:-.25rem!important}.mb-n1,.my-n1{margin-bottom:-.25rem!important}.ml-n1,.mx-n1{margin-left:-.25rem!important}.m-n2{margin:-.5rem!important}.mt-n2,.my-n2{margin-top:-.5rem!important}.mr-n2,.mx-n2{margin-right:-.5rem!important}.mb-n2,.my-n2{margin-bottom:-.5rem!important}.ml-n2,.mx-n2{margin-left:-.5rem!important}.m-n3{margin:-1rem!important}.mt-n3,.my-n3{margin-top:-1rem!important}.mr-n3,.mx-n3{margin-right:-1rem!important}.mb-n3,.my-n3{margin-bottom:-1rem!important}.ml-n3,.mx-n3{margin-left:-1rem!important}.m-n4{margin:-1.5rem!important}.mt-n4,.my-n4{margin-top:-1.5rem!important}.mr-n4,.mx-n4{margin-right:-1.5rem!important}.mb-n4,.my-n4{margin-bottom:-1.5rem!important}.ml-n4,.mx-n4{margin-left:-1.5rem!important}.m-n5{margin:-3rem!important}.mt-n5,.my-n5{margin-top:-3rem!important}.mr-n5,.mx-n5{margin-right:-3rem!important}.mb-n5,.my-n5{margin-bottom:-3rem!important}.ml-n5,.mx-n5{margin-left:-3rem!important}.m-auto{margin:auto!important}.mt-auto,.my-auto{margin-top:auto!important}.mr-auto,.mx-auto{margin-right:auto!important}.mb-auto,.my-auto{margin-bottom:auto!important}.ml-auto,.mx-auto{margin-left:auto!important}@media (min-width:576px){.m-sm-0{margin:0!important}.mt-sm-0,.my-sm-0{margin-top:0!important}.mr-sm-0,.mx-sm-0{margin-right:0!important}.mb-sm-0,.my-sm-0{margin-bottom:0!important}.ml-sm-0,.mx-sm-0{margin-left:0!important}.m-sm-1{margin:.25rem!important}.mt-sm-1,.my-sm-1{margin-top:.25rem!important}.mr-sm-1,.mx-sm-1{margin-right:.25rem!important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem!important}.ml-sm-1,.mx-sm-1{margin-left:.25rem!important}.m-sm-2{margin:.5rem!important}.mt-sm-2,.my-sm-2{margin-top:.5rem!important}.mr-sm-2,.mx-sm-2{margin-right:.5rem!important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem!important}.ml-sm-2,.mx-sm-2{margin-left:.5rem!important}.m-sm-3{margin:1rem!important}.mt-sm-3,.my-sm-3{margin-top:1rem!important}.mr-sm-3,.mx-sm-3{margin-right:1rem!important}.mb-sm-3,.my-sm-3{margin-bottom:1rem!important}.ml-sm-3,.mx-sm-3{margin-left:1rem!important}.m-sm-4{margin:1.5rem!important}.mt-sm-4,.my-sm-4{margin-top:1.5rem!important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem!important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem!important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem!important}.m-sm-5{margin:3rem!important}.mt-sm-5,.my-sm-5{margin-top:3rem!important}.mr-sm-5,.mx-sm-5{margin-right:3rem!important}.mb-sm-5,.my-sm-5{margin-bottom:3rem!important}.ml-sm-5,.mx-sm-5{margin-left:3rem!important}.p-sm-0{padding:0!important}.pt-sm-0,.py-sm-0{padding-top:0!important}.pr-sm-0,.px-sm-0{padding-right:0!important}.pb-sm-0,.py-sm-0{padding-bottom:0!important}.pl-sm-0,.px-sm-0{padding-left:0!important}.p-sm-1{padding:.25rem!important}.pt-sm-1,.py-sm-1{padding-top:.25rem!important}.pr-sm-1,.px-sm-1{padding-right:.25rem!important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem!important}.pl-sm-1,.px-sm-1{padding-left:.25rem!important}.p-sm-2{padding:.5rem!important}.pt-sm-2,.py-sm-2{padding-top:.5rem!important}.pr-sm-2,.px-sm-2{padding-right:.5rem!important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem!important}.pl-sm-2,.px-sm-2{padding-left:.5rem!important}.p-sm-3{padding:1rem!important}.pt-sm-3,.py-sm-3{padding-top:1rem!important}.pr-sm-3,.px-sm-3{padding-right:1rem!important}.pb-sm-3,.py-sm-3{padding-bottom:1rem!important}.pl-sm-3,.px-sm-3{padding-left:1rem!important}.p-sm-4{padding:1.5rem!important}.pt-sm-4,.py-sm-4{padding-top:1.5rem!important}.pr-sm-4,.px-sm-4{padding-right:1.5rem!important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem!important}.pl-sm-4,.px-sm-4{padding-left:1.5rem!important}.p-sm-5{padding:3rem!important}.pt-sm-5,.py-sm-5{padding-top:3rem!important}.pr-sm-5,.px-sm-5{padding-right:3rem!important}.pb-sm-5,.py-sm-5{padding-bottom:3rem!important}.pl-sm-5,.px-sm-5{padding-left:3rem!important}.m-sm-n1{margin:-.25rem!important}.mt-sm-n1,.my-sm-n1{margin-top:-.25rem!important}.mr-sm-n1,.mx-sm-n1{margin-right:-.25rem!important}.mb-sm-n1,.my-sm-n1{margin-bottom:-.25rem!important}.ml-sm-n1,.mx-sm-n1{margin-left:-.25rem!important}.m-sm-n2{margin:-.5rem!important}.mt-sm-n2,.my-sm-n2{margin-top:-.5rem!important}.mr-sm-n2,.mx-sm-n2{margin-right:-.5rem!important}.mb-sm-n2,.my-sm-n2{margin-bottom:-.5rem!important}.ml-sm-n2,.mx-sm-n2{margin-left:-.5rem!important}.m-sm-n3{margin:-1rem!important}.mt-sm-n3,.my-sm-n3{margin-top:-1rem!important}.mr-sm-n3,.mx-sm-n3{margin-right:-1rem!important}.mb-sm-n3,.my-sm-n3{margin-bottom:-1rem!important}.ml-sm-n3,.mx-sm-n3{margin-left:-1rem!important}.m-sm-n4{margin:-1.5rem!important}.mt-sm-n4,.my-sm-n4{margin-top:-1.5rem!important}.mr-sm-n4,.mx-sm-n4{margin-right:-1.5rem!important}.mb-sm-n4,.my-sm-n4{margin-bottom:-1.5rem!important}.ml-sm-n4,.mx-sm-n4{margin-left:-1.5rem!important}.m-sm-n5{margin:-3rem!important}.mt-sm-n5,.my-sm-n5{margin-top:-3rem!important}.mr-sm-n5,.mx-sm-n5{margin-right:-3rem!important}.mb-sm-n5,.my-sm-n5{margin-bottom:-3rem!important}.ml-sm-n5,.mx-sm-n5{margin-left:-3rem!important}.m-sm-auto{margin:auto!important}.mt-sm-auto,.my-sm-auto{margin-top:auto!important}.mr-sm-auto,.mx-sm-auto{margin-right:auto!important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto!important}.ml-sm-auto,.mx-sm-auto{margin-left:auto!important}}@media (min-width:768px){.m-md-0{margin:0!important}.mt-md-0,.my-md-0{margin-top:0!important}.mr-md-0,.mx-md-0{margin-right:0!important}.mb-md-0,.my-md-0{margin-bottom:0!important}.ml-md-0,.mx-md-0{margin-left:0!important}.m-md-1{margin:.25rem!important}.mt-md-1,.my-md-1{margin-top:.25rem!important}.mr-md-1,.mx-md-1{margin-right:.25rem!important}.mb-md-1,.my-md-1{margin-bottom:.25rem!important}.ml-md-1,.mx-md-1{margin-left:.25rem!important}.m-md-2{margin:.5rem!important}.mt-md-2,.my-md-2{margin-top:.5rem!important}.mr-md-2,.mx-md-2{margin-right:.5rem!important}.mb-md-2,.my-md-2{margin-bottom:.5rem!important}.ml-md-2,.mx-md-2{margin-left:.5rem!important}.m-md-3{margin:1rem!important}.mt-md-3,.my-md-3{margin-top:1rem!important}.mr-md-3,.mx-md-3{margin-right:1rem!important}.mb-md-3,.my-md-3{margin-bottom:1rem!important}.ml-md-3,.mx-md-3{margin-left:1rem!important}.m-md-4{margin:1.5rem!important}.mt-md-4,.my-md-4{margin-top:1.5rem!important}.mr-md-4,.mx-md-4{margin-right:1.5rem!important}.mb-md-4,.my-md-4{margin-bottom:1.5rem!important}.ml-md-4,.mx-md-4{margin-left:1.5rem!important}.m-md-5{margin:3rem!important}.mt-md-5,.my-md-5{margin-top:3rem!important}.mr-md-5,.mx-md-5{margin-right:3rem!important}.mb-md-5,.my-md-5{margin-bottom:3rem!important}.ml-md-5,.mx-md-5{margin-left:3rem!important}.p-md-0{padding:0!important}.pt-md-0,.py-md-0{padding-top:0!important}.pr-md-0,.px-md-0{padding-right:0!important}.pb-md-0,.py-md-0{padding-bottom:0!important}.pl-md-0,.px-md-0{padding-left:0!important}.p-md-1{padding:.25rem!important}.pt-md-1,.py-md-1{padding-top:.25rem!important}.pr-md-1,.px-md-1{padding-right:.25rem!important}.pb-md-1,.py-md-1{padding-bottom:.25rem!important}.pl-md-1,.px-md-1{padding-left:.25rem!important}.p-md-2{padding:.5rem!important}.pt-md-2,.py-md-2{padding-top:.5rem!important}.pr-md-2,.px-md-2{padding-right:.5rem!important}.pb-md-2,.py-md-2{padding-bottom:.5rem!important}.pl-md-2,.px-md-2{padding-left:.5rem!important}.p-md-3{padding:1rem!important}.pt-md-3,.py-md-3{padding-top:1rem!important}.pr-md-3,.px-md-3{padding-right:1rem!important}.pb-md-3,.py-md-3{padding-bottom:1rem!important}.pl-md-3,.px-md-3{padding-left:1rem!important}.p-md-4{padding:1.5rem!important}.pt-md-4,.py-md-4{padding-top:1.5rem!important}.pr-md-4,.px-md-4{padding-right:1.5rem!important}.pb-md-4,.py-md-4{padding-bottom:1.5rem!important}.pl-md-4,.px-md-4{padding-left:1.5rem!important}.p-md-5{padding:3rem!important}.pt-md-5,.py-md-5{padding-top:3rem!important}.pr-md-5,.px-md-5{padding-right:3rem!important}.pb-md-5,.py-md-5{padding-bottom:3rem!important}.pl-md-5,.px-md-5{padding-left:3rem!important}.m-md-n1{margin:-.25rem!important}.mt-md-n1,.my-md-n1{margin-top:-.25rem!important}.mr-md-n1,.mx-md-n1{margin-right:-.25rem!important}.mb-md-n1,.my-md-n1{margin-bottom:-.25rem!important}.ml-md-n1,.mx-md-n1{margin-left:-.25rem!important}.m-md-n2{margin:-.5rem!important}.mt-md-n2,.my-md-n2{margin-top:-.5rem!important}.mr-md-n2,.mx-md-n2{margin-right:-.5rem!important}.mb-md-n2,.my-md-n2{margin-bottom:-.5rem!important}.ml-md-n2,.mx-md-n2{margin-left:-.5rem!important}.m-md-n3{margin:-1rem!important}.mt-md-n3,.my-md-n3{margin-top:-1rem!important}.mr-md-n3,.mx-md-n3{margin-right:-1rem!important}.mb-md-n3,.my-md-n3{margin-bottom:-1rem!important}.ml-md-n3,.mx-md-n3{margin-left:-1rem!important}.m-md-n4{margin:-1.5rem!important}.mt-md-n4,.my-md-n4{margin-top:-1.5rem!important}.mr-md-n4,.mx-md-n4{margin-right:-1.5rem!important}.mb-md-n4,.my-md-n4{margin-bottom:-1.5rem!important}.ml-md-n4,.mx-md-n4{margin-left:-1.5rem!important}.m-md-n5{margin:-3rem!important}.mt-md-n5,.my-md-n5{margin-top:-3rem!important}.mr-md-n5,.mx-md-n5{margin-right:-3rem!important}.mb-md-n5,.my-md-n5{margin-bottom:-3rem!important}.ml-md-n5,.mx-md-n5{margin-left:-3rem!important}.m-md-auto{margin:auto!important}.mt-md-auto,.my-md-auto{margin-top:auto!important}.mr-md-auto,.mx-md-auto{margin-right:auto!important}.mb-md-auto,.my-md-auto{margin-bottom:auto!important}.ml-md-auto,.mx-md-auto{margin-left:auto!important}}@media (min-width:992px){.m-lg-0{margin:0!important}.mt-lg-0,.my-lg-0{margin-top:0!important}.mr-lg-0,.mx-lg-0{margin-right:0!important}.mb-lg-0,.my-lg-0{margin-bottom:0!important}.ml-lg-0,.mx-lg-0{margin-left:0!important}.m-lg-1{margin:.25rem!important}.mt-lg-1,.my-lg-1{margin-top:.25rem!important}.mr-lg-1,.mx-lg-1{margin-right:.25rem!important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem!important}.ml-lg-1,.mx-lg-1{margin-left:.25rem!important}.m-lg-2{margin:.5rem!important}.mt-lg-2,.my-lg-2{margin-top:.5rem!important}.mr-lg-2,.mx-lg-2{margin-right:.5rem!important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem!important}.ml-lg-2,.mx-lg-2{margin-left:.5rem!important}.m-lg-3{margin:1rem!important}.mt-lg-3,.my-lg-3{margin-top:1rem!important}.mr-lg-3,.mx-lg-3{margin-right:1rem!important}.mb-lg-3,.my-lg-3{margin-bottom:1rem!important}.ml-lg-3,.mx-lg-3{margin-left:1rem!important}.m-lg-4{margin:1.5rem!important}.mt-lg-4,.my-lg-4{margin-top:1.5rem!important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem!important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem!important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem!important}.m-lg-5{margin:3rem!important}.mt-lg-5,.my-lg-5{margin-top:3rem!important}.mr-lg-5,.mx-lg-5{margin-right:3rem!important}.mb-lg-5,.my-lg-5{margin-bottom:3rem!important}.ml-lg-5,.mx-lg-5{margin-left:3rem!important}.p-lg-0{padding:0!important}.pt-lg-0,.py-lg-0{padding-top:0!important}.pr-lg-0,.px-lg-0{padding-right:0!important}.pb-lg-0,.py-lg-0{padding-bottom:0!important}.pl-lg-0,.px-lg-0{padding-left:0!important}.p-lg-1{padding:.25rem!important}.pt-lg-1,.py-lg-1{padding-top:.25rem!important}.pr-lg-1,.px-lg-1{padding-right:.25rem!important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem!important}.pl-lg-1,.px-lg-1{padding-left:.25rem!important}.p-lg-2{padding:.5rem!important}.pt-lg-2,.py-lg-2{padding-top:.5rem!important}.pr-lg-2,.px-lg-2{padding-right:.5rem!important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem!important}.pl-lg-2,.px-lg-2{padding-left:.5rem!important}.p-lg-3{padding:1rem!important}.pt-lg-3,.py-lg-3{padding-top:1rem!important}.pr-lg-3,.px-lg-3{padding-right:1rem!important}.pb-lg-3,.py-lg-3{padding-bottom:1rem!important}.pl-lg-3,.px-lg-3{padding-left:1rem!important}.p-lg-4{padding:1.5rem!important}.pt-lg-4,.py-lg-4{padding-top:1.5rem!important}.pr-lg-4,.px-lg-4{padding-right:1.5rem!important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem!important}.pl-lg-4,.px-lg-4{padding-left:1.5rem!important}.p-lg-5{padding:3rem!important}.pt-lg-5,.py-lg-5{padding-top:3rem!important}.pr-lg-5,.px-lg-5{padding-right:3rem!important}.pb-lg-5,.py-lg-5{padding-bottom:3rem!important}.pl-lg-5,.px-lg-5{padding-left:3rem!important}.m-lg-n1{margin:-.25rem!important}.mt-lg-n1,.my-lg-n1{margin-top:-.25rem!important}.mr-lg-n1,.mx-lg-n1{margin-right:-.25rem!important}.mb-lg-n1,.my-lg-n1{margin-bottom:-.25rem!important}.ml-lg-n1,.mx-lg-n1{margin-left:-.25rem!important}.m-lg-n2{margin:-.5rem!important}.mt-lg-n2,.my-lg-n2{margin-top:-.5rem!important}.mr-lg-n2,.mx-lg-n2{margin-right:-.5rem!important}.mb-lg-n2,.my-lg-n2{margin-bottom:-.5rem!important}.ml-lg-n2,.mx-lg-n2{margin-left:-.5rem!important}.m-lg-n3{margin:-1rem!important}.mt-lg-n3,.my-lg-n3{margin-top:-1rem!important}.mr-lg-n3,.mx-lg-n3{margin-right:-1rem!important}.mb-lg-n3,.my-lg-n3{margin-bottom:-1rem!important}.ml-lg-n3,.mx-lg-n3{margin-left:-1rem!important}.m-lg-n4{margin:-1.5rem!important}.mt-lg-n4,.my-lg-n4{margin-top:-1.5rem!important}.mr-lg-n4,.mx-lg-n4{margin-right:-1.5rem!important}.mb-lg-n4,.my-lg-n4{margin-bottom:-1.5rem!important}.ml-lg-n4,.mx-lg-n4{margin-left:-1.5rem!important}.m-lg-n5{margin:-3rem!important}.mt-lg-n5,.my-lg-n5{margin-top:-3rem!important}.mr-lg-n5,.mx-lg-n5{margin-right:-3rem!important}.mb-lg-n5,.my-lg-n5{margin-bottom:-3rem!important}.ml-lg-n5,.mx-lg-n5{margin-left:-3rem!important}.m-lg-auto{margin:auto!important}.mt-lg-auto,.my-lg-auto{margin-top:auto!important}.mr-lg-auto,.mx-lg-auto{margin-right:auto!important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto!important}.ml-lg-auto,.mx-lg-auto{margin-left:auto!important}}@media (min-width:1200px){.m-xl-0{margin:0!important}.mt-xl-0,.my-xl-0{margin-top:0!important}.mr-xl-0,.mx-xl-0{margin-right:0!important}.mb-xl-0,.my-xl-0{margin-bottom:0!important}.ml-xl-0,.mx-xl-0{margin-left:0!important}.m-xl-1{margin:.25rem!important}.mt-xl-1,.my-xl-1{margin-top:.25rem!important}.mr-xl-1,.mx-xl-1{margin-right:.25rem!important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem!important}.ml-xl-1,.mx-xl-1{margin-left:.25rem!important}.m-xl-2{margin:.5rem!important}.mt-xl-2,.my-xl-2{margin-top:.5rem!important}.mr-xl-2,.mx-xl-2{margin-right:.5rem!important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem!important}.ml-xl-2,.mx-xl-2{margin-left:.5rem!important}.m-xl-3{margin:1rem!important}.mt-xl-3,.my-xl-3{margin-top:1rem!important}.mr-xl-3,.mx-xl-3{margin-right:1rem!important}.mb-xl-3,.my-xl-3{margin-bottom:1rem!important}.ml-xl-3,.mx-xl-3{margin-left:1rem!important}.m-xl-4{margin:1.5rem!important}.mt-xl-4,.my-xl-4{margin-top:1.5rem!important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem!important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem!important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem!important}.m-xl-5{margin:3rem!important}.mt-xl-5,.my-xl-5{margin-top:3rem!important}.mr-xl-5,.mx-xl-5{margin-right:3rem!important}.mb-xl-5,.my-xl-5{margin-bottom:3rem!important}.ml-xl-5,.mx-xl-5{margin-left:3rem!important}.p-xl-0{padding:0!important}.pt-xl-0,.py-xl-0{padding-top:0!important}.pr-xl-0,.px-xl-0{padding-right:0!important}.pb-xl-0,.py-xl-0{padding-bottom:0!important}.pl-xl-0,.px-xl-0{padding-left:0!important}.p-xl-1{padding:.25rem!important}.pt-xl-1,.py-xl-1{padding-top:.25rem!important}.pr-xl-1,.px-xl-1{padding-right:.25rem!important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem!important}.pl-xl-1,.px-xl-1{padding-left:.25rem!important}.p-xl-2{padding:.5rem!important}.pt-xl-2,.py-xl-2{padding-top:.5rem!important}.pr-xl-2,.px-xl-2{padding-right:.5rem!important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem!important}.pl-xl-2,.px-xl-2{padding-left:.5rem!important}.p-xl-3{padding:1rem!important}.pt-xl-3,.py-xl-3{padding-top:1rem!important}.pr-xl-3,.px-xl-3{padding-right:1rem!important}.pb-xl-3,.py-xl-3{padding-bottom:1rem!important}.pl-xl-3,.px-xl-3{padding-left:1rem!important}.p-xl-4{padding:1.5rem!important}.pt-xl-4,.py-xl-4{padding-top:1.5rem!important}.pr-xl-4,.px-xl-4{padding-right:1.5rem!important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem!important}.pl-xl-4,.px-xl-4{padding-left:1.5rem!important}.p-xl-5{padding:3rem!important}.pt-xl-5,.py-xl-5{padding-top:3rem!important}.pr-xl-5,.px-xl-5{padding-right:3rem!important}.pb-xl-5,.py-xl-5{padding-bottom:3rem!important}.pl-xl-5,.px-xl-5{padding-left:3rem!important}.m-xl-n1{margin:-.25rem!important}.mt-xl-n1,.my-xl-n1{margin-top:-.25rem!important}.mr-xl-n1,.mx-xl-n1{margin-right:-.25rem!important}.mb-xl-n1,.my-xl-n1{margin-bottom:-.25rem!important}.ml-xl-n1,.mx-xl-n1{margin-left:-.25rem!important}.m-xl-n2{margin:-.5rem!important}.mt-xl-n2,.my-xl-n2{margin-top:-.5rem!important}.mr-xl-n2,.mx-xl-n2{margin-right:-.5rem!important}.mb-xl-n2,.my-xl-n2{margin-bottom:-.5rem!important}.ml-xl-n2,.mx-xl-n2{margin-left:-.5rem!important}.m-xl-n3{margin:-1rem!important}.mt-xl-n3,.my-xl-n3{margin-top:-1rem!important}.mr-xl-n3,.mx-xl-n3{margin-right:-1rem!important}.mb-xl-n3,.my-xl-n3{margin-bottom:-1rem!important}.ml-xl-n3,.mx-xl-n3{margin-left:-1rem!important}.m-xl-n4{margin:-1.5rem!important}.mt-xl-n4,.my-xl-n4{margin-top:-1.5rem!important}.mr-xl-n4,.mx-xl-n4{margin-right:-1.5rem!important}.mb-xl-n4,.my-xl-n4{margin-bottom:-1.5rem!important}.ml-xl-n4,.mx-xl-n4{margin-left:-1.5rem!important}.m-xl-n5{margin:-3rem!important}.mt-xl-n5,.my-xl-n5{margin-top:-3rem!important}.mr-xl-n5,.mx-xl-n5{margin-right:-3rem!important}.mb-xl-n5,.my-xl-n5{margin-bottom:-3rem!important}.ml-xl-n5,.mx-xl-n5{margin-left:-3rem!important}.m-xl-auto{margin:auto!important}.mt-xl-auto,.my-xl-auto{margin-top:auto!important}.mr-xl-auto,.mx-xl-auto{margin-right:auto!important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto!important}.ml-xl-auto,.mx-xl-auto{margin-left:auto!important}}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;pointer-events:auto;content:\"\";background-color:rgba(0,0,0,0)}.text-monospace{font-family:SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace!important}.text-justify{text-align:justify!important}.text-wrap{white-space:normal!important}.text-nowrap{white-space:nowrap!important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left!important}.text-right{text-align:right!important}.text-center{text-align:center!important}@media (min-width:576px){.text-sm-left{text-align:left!important}.text-sm-right{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.text-md-left{text-align:left!important}.text-md-right{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.text-lg-left{text-align:left!important}.text-lg-right{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.text-xl-left{text-align:left!important}.text-xl-right{text-align:right!important}.text-xl-center{text-align:center!important}}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.font-weight-light{font-weight:300!important}.font-weight-lighter{font-weight:lighter!important}.font-weight-normal{font-weight:400!important}.font-weight-bold{font-weight:700!important}.font-weight-bolder{font-weight:bolder!important}.font-italic{font-style:italic!important}.text-white{color:#fff!important}.text-primary{color:#007bff!important}a.text-primary:focus,a.text-primary:hover{color:#0056b3!important}.text-secondary{color:#6c757d!important}a.text-secondary:focus,a.text-secondary:hover{color:#494f54!important}.text-success{color:#28a745!important}a.text-success:focus,a.text-success:hover{color:#19692c!important}.text-info{color:#17a2b8!important}a.text-info:focus,a.text-info:hover{color:#0f6674!important}.text-warning{color:#ffc107!important}a.text-warning:focus,a.text-warning:hover{color:#ba8b00!important}.text-danger{color:#dc3545!important}a.text-danger:focus,a.text-danger:hover{color:#a71d2a!important}.text-light{color:#f8f9fa!important}a.text-light:focus,a.text-light:hover{color:#cbd3da!important}.text-dark{color:#343a40!important}a.text-dark:focus,a.text-dark:hover{color:#121416!important}.text-body{color:#212529!important}.text-muted{color:#6c757d!important}.text-black-50{color:rgba(0,0,0,.5)!important}.text-white-50{color:rgba(255,255,255,.5)!important}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.text-decoration-none{text-decoration:none!important}.text-break{word-break:break-word!important;overflow-wrap:break-word!important}.text-reset{color:inherit!important}.visible{visibility:visible!important}.invisible{visibility:hidden!important}@media print{*,::after,::before{text-shadow:none!important;box-shadow:none!important}a:not(.btn){text-decoration:underline}abbr[title]::after{content:\" (\" attr(title) \")\"}pre{white-space:pre-wrap!important}blockquote,pre{border:1px solid #adb5bd;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}@page{size:a3}body{min-width:992px!important}.container{min-width:992px!important}.navbar{display:none}.badge{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #dee2e6!important}.table-dark{color:inherit}.table-dark tbody+tbody,.table-dark td,.table-dark th,.table-dark thead th{border-color:#dee2e6}.table .thead-dark th{color:inherit;border-color:#dee2e6}}",""]),e.exports=t},function(e,t,r){"use strict";(function(e,n){var o,i=r(158);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:n;var a=Object(i.a)(o);t.a=a}).call(this,r(64),r(383)(e))},function(e,t,r){var n;"undefined"!=typeof self&&self,e.exports=(n=r(0),function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=7)}([function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}return r}}(e,t)||function(e,t){if(e){if("string"==typeof e)return o(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?o(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var i=r(1),a=r.n(i),l=r(8),c=r.n(l),u=r(2),s=r(10),f=r.n(s),d=r(3),p=r(6),m=function(e){if(!e)return null;var t=Object.keys(e);return 0===t.length?null:t.reduce((function(t,r){return t[Object(u.a)(r)]=e[r],t}),{})},g=function(){var e=a.a.useRef(!1);return a.a.useEffect((function(){e.current=!0}),[]),e.current},b=function(e){var t=function(){return function(e){return e.query||Object(d.a)(e)}(e)},r=n(a.a.useState(t),2),o=r[0],i=r[1];return a.a.useEffect((function(){var e=t();o!==e&&i(e)}),[e]),o};t.a=function(e,t,r){var o=function(e){var t=a.a.useContext(p.a),r=function(){return m(e)||m(t)},o=n(a.a.useState(r),2),i=o[0],l=o[1];return a.a.useEffect((function(){var e=r();f()(i,e)||l(e)}),[e,t]),i}(t),i=b(e);if(!i)throw new Error("Invalid or missing MediaQuery!");var l=function(e){var t=n(a.a.useState(e.matches),2),r=t[0],o=t[1];return a.a.useEffect((function(){var t=function(){o(e.matches)};return e.addListener(t),t(),function(){e.removeListener(t)}}),[e]),r}(function(e,t){var r=function(){return c()(e,t||{},!!t)},o=n(a.a.useState(r),2),i=o[0],l=o[1],u=g();return a.a.useEffect((function(){return u&&l(r()),function(){i.dispose()}}),[e,t]),i}(i,o)),u=g();return a.a.useEffect((function(){u&&r&&r(l)}),[l]),l}},function(e,t){e.exports=n},function(e,t,r){"use strict";function n(e){return"-"+e.toLowerCase()}var o=/[A-Z]/g,i=/^ms-/,a={};t.a=function(e){if(a.hasOwnProperty(e))return a[e];var t=e.replace(o,n);return a[e]=i.test(t)?"-"+t:t}},function(e,t,r){"use strict";var n=r(2),o=r(11);t.a=function(e){var t=[];return Object.keys(o.a.all).forEach((function(r){var o=e[r];null!=o&&t.push(function(e,t){var r=Object(n.a)(e);return"number"==typeof t&&(t="".concat(t,"px")),!0===t?r:!1===t?"not ".concat(r):"(".concat(r,": ").concat(t,")")}(r,o))})),t.join(" and ")}},function(e,t,r){"use strict";e.exports=r(13)},function(e,t,r){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,r){"use strict";var n=r(1),o=r.n(n).a.createContext();t.a=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(0),o=r(17),i=r(3),a=r(6);r.d(t,"default",(function(){return o.a})),r.d(t,"useMediaQuery",(function(){return n.a})),r.d(t,"toQuery",(function(){return i.a})),r.d(t,"Context",(function(){return a.a}))},function(e,t,r){"use strict";function n(e,t,r){function n(e){a.matches=e.matches,a.media=e.media}var a=this;if(i&&!r){var l=i.call(window,e);this.matches=l.matches,this.media=l.media,l.addListener(n)}else this.matches=o(e,t),this.media=e;this.addListener=function(e){l&&l.addListener(e)},this.removeListener=function(e){l&&l.removeListener(e)},this.dispose=function(){l&&l.removeListener(n)}}var o=r(9).match,i="undefined"!=typeof window?window.matchMedia:null;e.exports=function(e,t,r){return new n(e,t,r)}},function(e,t,r){"use strict";function n(e){return e.split(",").map((function(e){var t=(e=e.trim()).match(l),r=t[1],n=t[2],o=t[3]||"",i={};return i.inverse=!!r&&"not"===r.toLowerCase(),i.type=n?n.toLowerCase():"all",o=o.match(/\([^\)]+\)/g)||[],i.expressions=o.map((function(e){var t=e.match(c),r=t[1].toLowerCase().match(u);return{modifier:r[1],feature:r[2],value:t[2]}})),i}))}function o(e){var t,r=Number(e);return r||(r=(t=e.match(/^(\d+)\s*\/\s*(\d+)$/))[1]/t[2]),r}function i(e){var t=parseFloat(e);switch(String(e).match(f)[1]){case"dpcm":return t/2.54;case"dppx":return 96*t;default:return t}}function a(e){var t=parseFloat(e);switch(String(e).match(s)[1]){case"em":case"rem":return 16*t;case"cm":return 96*t/2.54;case"mm":return 96*t/2.54/10;case"in":return 96*t;case"pt":return 72*t;case"pc":return 72*t/12;default:return t}}t.match=function(e,t){return n(e).some((function(e){var r=e.inverse,n="all"===e.type||t.type===e.type;if(n&&r||!n&&!r)return!1;var l=e.expressions.every((function(e){var r=e.feature,n=e.modifier,l=e.value,c=t[r];if(!c)return!1;switch(r){case"orientation":case"scan":return c.toLowerCase()===l.toLowerCase();case"width":case"height":case"device-width":case"device-height":l=a(l),c=a(c);break;case"resolution":l=i(l),c=i(c);break;case"aspect-ratio":case"device-aspect-ratio":case"device-pixel-ratio":l=o(l),c=o(c);break;case"grid":case"color":case"color-index":case"monochrome":l=parseInt(l,10)||1,c=parseInt(c,10)||0}switch(n){case"min":return c>=l;case"max":return c<=l;default:return c===l}}));return l&&!r||!l&&r}))},t.parse=n;var l=/(?:(only|not)?\s*([^\s\(\)]+)(?:\s*and)?\s*)?(.+)?/i,c=/\(\s*([^\s\:\)]+)\s*(?:\:\s*([^\s\)]+))?\s*\)/,u=/^(?:(min|max)-)?(.+)/,s=/(em|rem|px|cm|mm|in|pt|pc)?$/,f=/(dpi|dpcm|dppx)?$/},function(e,t,r){"use strict";e.exports=function(e,t){if(e===t)return!0;if(!e||!t)return!1;var r=Object.keys(e),n=Object.keys(t),o=r.length;if(n.length!==o)return!1;for(var i=0;i<o;i++){var a=r[i];if(e[a]!==t[a]||!Object.prototype.hasOwnProperty.call(t,a))return!1}return!0}},function(e,t,r){"use strict";function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var a=r(12),l=r.n(a),c=l.a.oneOfType([l.a.string,l.a.number]),u={orientation:l.a.oneOf(["portrait","landscape"]),scan:l.a.oneOf(["progressive","interlace"]),aspectRatio:l.a.string,deviceAspectRatio:l.a.string,height:c,deviceHeight:c,width:c,deviceWidth:c,color:l.a.bool,colorIndex:l.a.bool,monochrome:l.a.bool,resolution:c},s=o({minAspectRatio:l.a.string,maxAspectRatio:l.a.string,minDeviceAspectRatio:l.a.string,maxDeviceAspectRatio:l.a.string,minHeight:c,maxHeight:c,minDeviceHeight:c,maxDeviceHeight:c,minWidth:c,maxWidth:c,minDeviceWidth:c,maxDeviceWidth:c,minColor:l.a.number,maxColor:l.a.number,minColorIndex:l.a.number,maxColorIndex:l.a.number,minMonochrome:l.a.number,maxMonochrome:l.a.number,minResolution:c,maxResolution:c},u),f={all:l.a.bool,grid:l.a.bool,aural:l.a.bool,braille:l.a.bool,handheld:l.a.bool,print:l.a.bool,projection:l.a.bool,screen:l.a.bool,tty:l.a.bool,tv:l.a.bool,embossed:l.a.bool},d=o(o({},f),s);u.type=Object.keys(f),t.a={all:d,types:f,matchers:u,features:s}},function(e,t,r){var n=r(4);e.exports=r(14)(n.isElement,!0)},function(e,t,r){"use strict";!function(){function e(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:var r=e.type;switch(r){case f:case d:case a:case c:case l:case m:return r;default:var n=r&&r.$$typeof;switch(n){case s:case p:case h:case b:case u:return n;default:return t}}case i:return t}}}function r(t){return e(t)===d}var n="function"==typeof Symbol&&Symbol.for,o=n?Symbol.for("react.element"):60103,i=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,c=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,f=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,p=n?Symbol.for("react.forward_ref"):60112,m=n?Symbol.for("react.suspense"):60113,g=n?Symbol.for("react.suspense_list"):60120,b=n?Symbol.for("react.memo"):60115,h=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,x=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119,k=f,E=d,S=s,O=u,j=o,T=p,C=a,P=h,_=b,N=i,M=c,A=l,R=m,z=!1;t.AsyncMode=k,t.ConcurrentMode=E,t.ContextConsumer=S,t.ContextProvider=O,t.Element=j,t.ForwardRef=T,t.Fragment=C,t.Lazy=P,t.Memo=_,t.Portal=N,t.Profiler=M,t.StrictMode=A,t.Suspense=R,t.isAsyncMode=function(t){return z||(z=!0,console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")),r(t)||e(t)===f},t.isConcurrentMode=r,t.isContextConsumer=function(t){return e(t)===s},t.isContextProvider=function(t){return e(t)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(t){return e(t)===p},t.isFragment=function(t){return e(t)===a},t.isLazy=function(t){return e(t)===h},t.isMemo=function(t){return e(t)===b},t.isPortal=function(t){return e(t)===i},t.isProfiler=function(t){return e(t)===c},t.isStrictMode=function(t){return e(t)===l},t.isSuspense=function(t){return e(t)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===c||e===l||e===m||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===h||e.$$typeof===b||e.$$typeof===u||e.$$typeof===s||e.$$typeof===p||e.$$typeof===y||e.$$typeof===x||e.$$typeof===w||e.$$typeof===v)},t.typeOf=e}()},function(e,t,r){"use strict";function n(){return null}var o,i=r(4),a=r(15),l=r(5),c=r(16),u=Function.call.bind(Object.prototype.hasOwnProperty);o=function(e){var t="Warning: "+e;"undefined"!=typeof console&&console.error(t);try{throw new Error(t)}catch(e){}},e.exports=function(e,t){function r(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}function s(e){this.message=e,this.stack=""}function f(e){function r(r,a,c,u,f,d,p){if(u=u||y,d=d||c,p!==l){if(t){var m=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types");throw m.name="Invariant Violation",m}if("undefined"!=typeof console){var g=u+":"+c;!n[g]&&i<3&&(o("You are manually calling a React.PropTypes validation function for the `"+d+"` prop on `"+u+"`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."),n[g]=!0,i++)}}return null==a[c]?r?new s(null===a[c]?"The "+f+" `"+d+"` is marked as required in `"+u+"`, but its value is `null`.":"The "+f+" `"+d+"` is marked as required in `"+u+"`, but its value is `undefined`."):null:e(a,c,u,f,d)}var n={},i=0,a=r.bind(null,!1);return a.isRequired=r.bind(null,!0),a}function d(e){return f((function(t,r,n,o,i,a){var l=t[r];return m(l)!==e?new s("Invalid "+o+" `"+i+"` of type `"+g(l)+"` supplied to `"+n+"`, expected `"+e+"`."):null}))}function p(t){switch(typeof t){case"number":case"string":case"undefined":return!0;case"boolean":return!t;case"object":if(Array.isArray(t))return t.every(p);if(null===t||e(t))return!0;var r=function(e){var t=e&&(h&&e[h]||e[v]);if("function"==typeof t)return t}(t);if(!r)return!1;var n,o=r.call(t);if(r!==t.entries){for(;!(n=o.next()).done;)if(!p(n.value))return!1}else for(;!(n=o.next()).done;){var i=n.value;if(i&&!p(i[1]))return!1}return!0;default:return!1}}function m(e){var t=typeof e;return Array.isArray(e)?"array":e instanceof RegExp?"object":function(e,t){return"symbol"===e||!!t&&("Symbol"===t["@@toStringTag"]||"function"==typeof Symbol&&t instanceof Symbol)}(t,e)?"symbol":t}function g(e){if(null==e)return""+e;var t=m(e);if("object"===t){if(e instanceof Date)return"date";if(e instanceof RegExp)return"regexp"}return t}function b(e){var t=g(e);switch(t){case"array":case"object":return"an "+t;case"boolean":case"date":case"regexp":return"a "+t;default:return t}}var h="function"==typeof Symbol&&Symbol.iterator,v="@@iterator",y="<<anonymous>>",x={array:d("array"),bool:d("boolean"),func:d("function"),number:d("number"),object:d("object"),string:d("string"),symbol:d("symbol"),any:f(n),arrayOf:function(e){return f((function(t,r,n,o,i){if("function"!=typeof e)return new s("Property `"+i+"` of component `"+n+"` has invalid PropType notation inside arrayOf.");var a=t[r];if(!Array.isArray(a))return new s("Invalid "+o+" `"+i+"` of type `"+m(a)+"` supplied to `"+n+"`, expected an array.");for(var c=0;c<a.length;c++){var u=e(a,c,n,o,i+"["+c+"]",l);if(u instanceof Error)return u}return null}))},element:f((function(t,r,n,o,i){var a=t[r];return e(a)?null:new s("Invalid "+o+" `"+i+"` of type `"+m(a)+"` supplied to `"+n+"`, expected a single ReactElement.")})),elementType:f((function(e,t,r,n,o){var a=e[t];return i.isValidElementType(a)?null:new s("Invalid "+n+" `"+o+"` of type `"+m(a)+"` supplied to `"+r+"`, expected a single ReactElement type.")})),instanceOf:function(e){return f((function(t,r,n,o,i){if(!(t[r]instanceof e)){var a=e.name||y;return new s("Invalid "+o+" `"+i+"` of type `"+((l=t[r]).constructor&&l.constructor.name?l.constructor.name:y)+"` supplied to `"+n+"`, expected instance of `"+a+"`.")}var l;return null}))},node:f((function(e,t,r,n,o){return p(e[t])?null:new s("Invalid "+n+" `"+o+"` supplied to `"+r+"`, expected a ReactNode.")})),objectOf:function(e){return f((function(t,r,n,o,i){if("function"!=typeof e)return new s("Property `"+i+"` of component `"+n+"` has invalid PropType notation inside objectOf.");var a=t[r],c=m(a);if("object"!==c)return new s("Invalid "+o+" `"+i+"` of type `"+c+"` supplied to `"+n+"`, expected an object.");for(var f in a)if(u(a,f)){var d=e(a,f,n,o,i+"."+f,l);if(d instanceof Error)return d}return null}))},oneOf:function(e){function t(t,n,o,i,a){for(var l=t[n],c=0;c<e.length;c++)if(r(l,e[c]))return null;var u=JSON.stringify(e,(function(e,t){return"symbol"===g(t)?String(t):t}));return new s("Invalid "+i+" `"+a+"` of value `"+String(l)+"` supplied to `"+o+"`, expected one of "+u+".")}return Array.isArray(e)?f(t):(o(arguments.length>1?"Invalid arguments supplied to oneOf, expected an array, got "+arguments.length+" arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).":"Invalid argument supplied to oneOf, expected an array."),n)},oneOfType:function(e){if(!Array.isArray(e))return o("Invalid argument supplied to oneOfType, expected an instance of array."),n;for(var t=0;t<e.length;t++){var r=e[t];if("function"!=typeof r)return o("Invalid argument supplied to oneOfType. Expected an array of check functions, but received "+b(r)+" at index "+t+"."),n}return f((function(t,r,n,o,i){for(var a=0;a<e.length;a++)if(null==(0,e[a])(t,r,n,o,i,l))return null;return new s("Invalid "+o+" `"+i+"` supplied to `"+n+"`.")}))},shape:function(e){return f((function(t,r,n,o,i){var a=t[r],c=m(a);if("object"!==c)return new s("Invalid "+o+" `"+i+"` of type `"+c+"` supplied to `"+n+"`, expected `object`.");for(var u in e){var f=e[u];if(f){var d=f(a,u,n,o,i+"."+u,l);if(d)return d}}return null}))},exact:function(e){return f((function(t,r,n,o,i){var c=t[r],u=m(c);if("object"!==u)return new s("Invalid "+o+" `"+i+"` of type `"+u+"` supplied to `"+n+"`, expected `object`.");var f=a({},t[r],e);for(var d in f){var p=e[d];if(!p)return new s("Invalid "+o+" `"+i+"` key `"+d+"` supplied to `"+n+"`.\nBad object: "+JSON.stringify(t[r],null,"  ")+"\nValid keys: "+JSON.stringify(Object.keys(e),null,"  "));var g=p(c,d,n,o,i+"."+d,l);if(g)return g}return null}))}};return s.prototype=Error.prototype,x.checkPropTypes=c,x.resetWarningCache=c.resetWarningCache,x.PropTypes=x,x}},function(e,t,r){"use strict";function n(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var o=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,l,c=n(e),u=1;u<arguments.length;u++){for(var s in r=Object(arguments[u]))i.call(r,s)&&(c[s]=r[s]);if(o){l=o(r);for(var f=0;f<l.length;f++)a.call(r,l[f])&&(c[l[f]]=r[l[f]])}}return c}},function(e,t,r){"use strict";function n(e,t,r,n,c){for(var u in e)if(l(e,u)){var s;try{if("function"!=typeof e[u]){var f=Error((n||"React class")+": "+r+" type `"+u+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof e[u]+"`.");throw f.name="Invariant Violation",f}s=e[u](t,u,n,r,null,i)}catch(e){s=e}if(!s||s instanceof Error||o((n||"React class")+": type specification of "+r+" `"+u+"` is invalid; the type checker function must return `null` or an `Error` but returned a "+typeof s+". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."),s instanceof Error&&!(s.message in a)){a[s.message]=!0;var d=c?c():"";o("Failed "+r+" type: "+s.message+(null!=d?d:""))}}}var o=function(){},i=r(5),a={},l=Function.call.bind(Object.prototype.hasOwnProperty);o=function(e){var t="Warning: "+e;"undefined"!=typeof console&&console.error(t);try{throw new Error(t)}catch(e){}},n.resetWarningCache=function(){a={}},e.exports=n},function(e,t,r){"use strict";function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}t.a=function(e){var t=e.children,r=e.device,i=e.onChange,a=n(e,["children","device","onChange"]),l=Object(o.a)(a,r,i);return"function"==typeof t?t(l):l?t:null};var o=r(0)}]))},function(e,t,r){"use strict";var n=r(167),o=!1,i=!1;try{var a={get passive(){return o=!0},get once(){return i=o=!0}};n.a&&(window.addEventListener("test",a,a),window.removeEventListener("test",a,!0))}catch(e){}var l=function(e,t,r,n){if(n&&"boolean"!=typeof n&&!i){var a=n.once,l=n.capture,c=r;!i&&a&&(c=r.__once||function e(n){this.removeEventListener(t,e,l),r.call(this,n)},r.__once=c),e.addEventListener(t,c,o?n:l)}e.addEventListener(t,r,n)};var c=function(e,t,r,n){var o=n&&"boolean"!=typeof n?n.capture:n;e.removeEventListener(t,r,o),r.__once&&e.removeEventListener(t,r.__once,o)};t.a=function(e,t,r,n){return l(e,t,r,n),function(){c(e,t,r,n)}}},function(e,t,r){"use strict";var n=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/,o=function(e){var t={};return function(r){return void 0===t[r]&&(t[r]=e(r)),t[r]}}((function(e){return n.test(e)||111===e.charCodeAt(0)&&110===e.charCodeAt(1)&&e.charCodeAt(2)<91}));t.a=o},function(e,t,r){e.exports=!r(12)&&!r(7)((function(){return 7!=Object.defineProperty(r(80)("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){t.f=r(9)},function(e,t,r){var n=r(21),o=r(22),i=r(65)(!1),a=r(82)("IE_PROTO");e.exports=function(e,t){var r,l=o(e),c=0,u=[];for(r in l)r!=a&&n(l,r)&&u.push(r);for(;t.length>c;)n(l,r=t[c++])&&(~i(u,r)||u.push(r));return u}},function(e,t,r){var n=r(13),o=r(4),i=r(42);e.exports=r(12)?Object.defineProperties:function(e,t){o(e);for(var r,a=i(t),l=a.length,c=0;l>c;)n.f(e,r=a[c++],t[r]);return e}},function(e,t,r){var n=r(22),o=r(45).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(n(e))}},function(e,t,r){"use strict";var n=r(12),o=r(42),i=r(66),a=r(60),l=r(14),c=r(59),u=Object.assign;e.exports=!u||r(7)((function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach((function(e){t[e]=e})),7!=u({},e)[r]||Object.keys(u({},t)).join("")!=n}))?function(e,t){for(var r=l(e),u=arguments.length,s=1,f=i.f,d=a.f;u>s;)for(var p,m=c(arguments[s++]),g=f?o(m).concat(f(m)):o(m),b=g.length,h=0;b>h;)p=g[h++],n&&!d.call(m,p)||(r[p]=m[p]);return r}:u},function(e,t){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,r){"use strict";var n=r(16),o=r(8),i=r(120),a=[].slice,l={},c=function(e,t,r){if(!(t in l)){for(var n=[],o=0;o<t;o++)n[o]="a["+o+"]";l[t]=Function("F,a","return new F("+n.join(",")+")")}return l[t](e,r)};e.exports=Function.bind||function(e){var t=n(this),r=a.call(arguments,1),l=function(){var n=r.concat(a.call(arguments));return this instanceof l?c(t,n.length,n):i(t,n,e)};return o(t.prototype)&&(l.prototype=t.prototype),l}},function(e,t){e.exports=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)}},function(e,t,r){var n=r(5).parseInt,o=r(53).trim,i=r(86),a=/^[-+]?0[xX]/;e.exports=8!==n(i+"08")||22!==n(i+"0x16")?function(e,t){var r=o(String(e),3);return n(r,t>>>0||(a.test(r)?16:10))}:n},function(e,t,r){var n=r(5).parseFloat,o=r(53).trim;e.exports=1/n(r(86)+"-0")!=-1/0?function(e){var t=o(String(e),3),r=n(t);return 0===r&&"-"==t.charAt(0)?-0:r}:n},function(e,t,r){var n=r(27);e.exports=function(e,t){if("number"!=typeof e&&"Number"!=n(e))throw TypeError(t);return+e}},function(e,t,r){var n=r(8),o=Math.floor;e.exports=function(e){return!n(e)&&isFinite(e)&&o(e)===e}},function(e,t){e.exports=Math.log1p||function(e){return(e=+e)>-1e-8&&e<1e-8?e-e*e/2:Math.log(1+e)}},function(e,t,r){var n=r(89),o=Math.pow,i=o(2,-52),a=o(2,-23),l=o(2,127)*(2-a),c=o(2,-126);e.exports=Math.fround||function(e){var t,r,o=Math.abs(e),u=n(e);return o<c?u*(o/c/a+1/i-1/i)*c*a:(r=(t=(1+a/i)*o)-(t-o))>l||r!=r?u*(1/0):u*r}},function(e,t,r){var n=r(4);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(16),o=r(14),i=r(59),a=r(11);e.exports=function(e,t,r,l,c){n(t);var u=o(e),s=i(u),f=a(u.length),d=c?f-1:0,p=c?-1:1;if(r<2)for(;;){if(d in s){l=s[d],d+=p;break}if(d+=p,c?d<0:f<=d)throw TypeError("Reduce of empty array with no initial value")}for(;c?d>=0:f>d;d+=p)d in s&&(l=t(l,s[d],d,u));return l}},function(e,t,r){"use strict";var n=r(14),o=r(43),i=r(11);e.exports=[].copyWithin||function(e,t){var r=n(this),a=i(r.length),l=o(e,a),c=o(t,a),u=arguments.length>2?arguments[2]:void 0,s=Math.min((void 0===u?a:o(u,a))-c,a-l),f=1;for(c<l&&l<c+s&&(f=-1,c+=s-1,l+=s-1);s-- >0;)c in r?r[l]=r[c]:delete r[l],l+=f,c+=f;return r}},function(e,t){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){"use strict";var n=r(101);r(1)({target:"RegExp",proto:!0,forced:n!==/./.exec},{exec:n})},function(e,t,r){r(12)&&"g"!=/./g.flags&&r(13).f(RegExp.prototype,"flags",{configurable:!0,get:r(61)})},function(e,t){e.exports=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}}},function(e,t,r){var n=r(4),o=r(8),i=r(105);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){"use strict";var n=r(136),o=r(50);e.exports=r(74)("Map",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{get:function(e){var t=n.getEntry(o(this,"Map"),e);return t&&t.v},set:function(e,t){return n.def(o(this,"Map"),0===e?0:e,t)}},n,!0)},function(e,t,r){"use strict";var n=r(13).f,o=r(44),i=r(49),a=r(26),l=r(47),c=r(48),u=r(91),s=r(130),f=r(46),d=r(12),p=r(37).fastKey,m=r(50),g=d?"_s":"size",b=function(e,t){var r,n=p(t);if("F"!==n)return e._i[n];for(r=e._f;r;r=r.n)if(r.k==t)return r};e.exports={getConstructor:function(e,t,r,u){var s=e((function(e,n){l(e,s,t,"_i"),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[g]=0,null!=n&&c(n,r,e[u],e)}));return i(s.prototype,{clear:function(){for(var e=m(this,t),r=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete r[n.i];e._f=e._l=void 0,e[g]=0},delete:function(e){var r=m(this,t),n=b(r,e);if(n){var o=n.n,i=n.p;delete r._i[n.i],n.r=!0,i&&(i.n=o),o&&(o.p=i),r._f==n&&(r._f=o),r._l==n&&(r._l=i),r[g]--}return!!n},forEach:function(e){m(this,t);for(var r,n=a(e,arguments.length>1?arguments[1]:void 0,3);r=r?r.n:this._f;)for(n(r.v,r.k,this);r&&r.r;)r=r.p},has:function(e){return!!b(m(this,t),e)}}),d&&n(s.prototype,"size",{get:function(){return m(this,t)[g]}}),s},def:function(e,t,r){var n,o,i=b(e,t);return i?i.v=r:(e._l=i={i:o=p(t,!0),k:t,v:r,p:n=e._l,n:void 0,r:!1},e._f||(e._f=i),n&&(n.n=i),e[g]++,"F"!==o&&(e._i[o]=i)),e},getEntry:b,setStrong:function(e,t,r){u(e,t,(function(e,r){this._t=m(e,t),this._k=r,this._l=void 0}),(function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?s(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,s(1))}),r?"entries":"values",!r,!0),f(t)}}},function(e,t,r){"use strict";var n=r(136),o=r(50);e.exports=r(74)("Set",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return n.def(o(this,"Set"),e=0===e?0:e,e)}},n)},function(e,t,r){"use strict";var n,o=r(5),i=r(33)(0),a=r(18),l=r(37),c=r(117),u=r(139),s=r(8),f=r(50),d=r(50),p=!o.ActiveXObject&&"ActiveXObject"in o,m=l.getWeak,g=Object.isExtensible,b=u.ufstore,h=function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},v={get:function(e){if(s(e)){var t=m(e);return!0===t?b(f(this,"WeakMap")).get(e):t?t[this._i]:void 0}},set:function(e,t){return u.def(f(this,"WeakMap"),e,t)}},y=e.exports=r(74)("WeakMap",h,v,u,!0,!0);d&&p&&(c((n=u.getConstructor(h,"WeakMap")).prototype,v),l.NEED=!0,i(["delete","has","get","set"],(function(e){var t=y.prototype,r=t[e];a(t,e,(function(t,o){if(s(t)&&!g(t)){this._f||(this._f=new n);var i=this._f[e](t,o);return"set"==e?this:i}return r.call(this,t,o)}))})))},function(e,t,r){"use strict";var n=r(49),o=r(37).getWeak,i=r(4),a=r(8),l=r(47),c=r(48),u=r(33),s=r(21),f=r(50),d=u(5),p=u(6),m=0,g=function(e){return e._l||(e._l=new b)},b=function(){this.a=[]},h=function(e,t){return d(e.a,(function(e){return e[0]===t}))};b.prototype={get:function(e){var t=h(this,e);if(t)return t[1]},has:function(e){return!!h(this,e)},set:function(e,t){var r=h(this,e);r?r[1]=t:this.a.push([e,t])},delete:function(e){var t=p(this.a,(function(t){return t[0]===e}));return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,i){var u=e((function(e,n){l(e,u,t,"_i"),e._t=t,e._i=m++,e._l=void 0,null!=n&&c(n,r,e[i],e)}));return n(u.prototype,{delete:function(e){if(!a(e))return!1;var r=o(e);return!0===r?g(f(this,t)).delete(e):r&&s(r,this._i)&&delete r[this._i]},has:function(e){if(!a(e))return!1;var r=o(e);return!0===r?g(f(this,t)).has(e):r&&s(r,this._i)}}),u},def:function(e,t,r){var n=o(i(t),!0);return!0===n?g(e).set(t,r):n[e._i]=r,e},ufstore:g}},function(e,t,r){var n=r(28),o=r(11);e.exports=function(e){if(void 0===e)return 0;var t=n(e),r=o(t);if(t!==r)throw RangeError("Wrong length!");return r}},function(e,t,r){var n=r(45),o=r(66),i=r(4),a=r(5).Reflect;e.exports=a&&a.ownKeys||function(e){var t=n.f(i(e)),r=o.f;return r?t.concat(r(e)):t}},function(e,t,r){"use strict";var n=r(67),o=r(8),i=r(11),a=r(26),l=r(9)("isConcatSpreadable");e.exports=function e(t,r,c,u,s,f,d,p){for(var m,g,b=s,h=0,v=!!d&&a(d,p,3);h<u;){if(h in c){if(m=v?v(c[h],h,r):c[h],g=!1,o(m)&&(g=void 0!==(g=m[l])?!!g:n(m)),g&&f>0)b=e(t,r,m,i(m.length),b,f-1)-1;else{if(b>=9007199254740991)throw TypeError();t[b]=m}b++}h++}return b}},function(e,t,r){var n=r(11),o=r(88),i=r(31);e.exports=function(e,t,r,a){var l=String(i(e)),c=l.length,u=void 0===r?" ":String(r),s=n(t);if(s<=c||""==u)return l;var f=s-c,d=o.call(u,Math.ceil(f/u.length));return d.length>f&&(d=d.slice(0,f)),a?d+l:l+d}},function(e,t,r){var n=r(12),o=r(42),i=r(22),a=r(60).f;e.exports=function(e){return function(t){for(var r,l=i(t),c=o(l),u=c.length,s=0,f=[];u>s;)r=c[s++],n&&!a.call(l,r)||f.push(e?[r,l[r]]:l[r]);return f}}},function(e,t,r){var n=r(52),o=r(146);e.exports=function(e){return function(){if(n(this)!=e)throw TypeError(e+"#toJSON isn't generic");return o(this)}}},function(e,t,r){var n=r(48);e.exports=function(e,t){var r=[];return n(e,!1,r.push,r,t),r}},function(e,t){e.exports=Math.scale||function(e,t,r,n,o){return 0===arguments.length||e!=e||t!=t||r!=r||n!=n||o!=o?NaN:e===1/0||e===-1/0?e:(e-t)*(o-n)/(r-t)+n}},function(e,t,r){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t["_"+String.fromCharCode(r)]=r;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach((function(e){n[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var r,l,c=a(e),u=1;u<arguments.length;u++){for(var s in r=Object(arguments[u]))o.call(r,s)&&(c[s]=r[s]);if(n){l=n(r);for(var f=0;f<l.length;f++)i.call(r,l[f])&&(c[l[f]]=r[l[f]])}}return c}},function(e,t){var r,n,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function l(e){if(r===setTimeout)return setTimeout(e,0);if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:i}catch(e){r=i}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var c,u=[],s=!1,f=-1;function d(){s&&c&&(s=!1,c.length?u=c.concat(u):f=-1,u.length&&p())}function p(){if(!s){var e=l(d);s=!0;for(var t=u.length;t;){for(c=u,u=[];++f<t;)c&&c[f].run();f=-1,t=u.length}c=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function g(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];u.push(new m(e,t)),1!==u.length||s||l(p)},m.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=g,o.addListener=g,o.once=g,o.off=g,o.removeListener=g,o.removeAllListeners=g,o.emit=g,o.prependListener=g,o.prependOnceListener=g,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t,r){"use strict";e.exports=function(e,t){return function(){for(var r=new Array(arguments.length),n=0;n<r.length;n++)r[n]=arguments[n];return e.apply(t,r)}}},function(e,t,r){"use strict";var n=r(20);function o(e){return encodeURIComponent(e).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}e.exports=function(e,t,r){if(!t)return e;var i;if(r)i=r(t);else if(n.isURLSearchParams(t))i=t.toString();else{var a=[];n.forEach(t,(function(e,t){null!=e&&(n.isArray(e)?t+="[]":e=[e],n.forEach(e,(function(e){n.isDate(e)?e=e.toISOString():n.isObject(e)&&(e=JSON.stringify(e)),a.push(o(t)+"="+o(e))})))})),i=a.join("&")}if(i){var l=e.indexOf("#");-1!==l&&(e=e.slice(0,l)),e+=(-1===e.indexOf("?")?"?":"&")+i}return e}},function(e,t,r){"use strict";e.exports=function(e){return!(!e||!e.__CANCEL__)}},function(e,t,r){"use strict";(function(t){var n=r(20),o=r(411),i={"Content-Type":"application/x-www-form-urlencoded"};function a(e,t){!n.isUndefined(e)&&n.isUndefined(e["Content-Type"])&&(e["Content-Type"]=t)}var l,c={adapter:(("undefined"!=typeof XMLHttpRequest||void 0!==t&&"[object process]"===Object.prototype.toString.call(t))&&(l=r(154)),l),transformRequest:[function(e,t){return o(t,"Accept"),o(t,"Content-Type"),n.isFormData(e)||n.isArrayBuffer(e)||n.isBuffer(e)||n.isStream(e)||n.isFile(e)||n.isBlob(e)?e:n.isArrayBufferView(e)?e.buffer:n.isURLSearchParams(e)?(a(t,"application/x-www-form-urlencoded;charset=utf-8"),e.toString()):n.isObject(e)?(a(t,"application/json;charset=utf-8"),JSON.stringify(e)):e}],transformResponse:[function(e){if("string"==typeof e)try{e=JSON.parse(e)}catch(e){}return e}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,validateStatus:function(e){return e>=200&&e<300}};c.headers={common:{Accept:"application/json, text/plain, */*"}},n.forEach(["delete","get","head"],(function(e){c.headers[e]={}})),n.forEach(["post","put","patch"],(function(e){c.headers[e]=n.merge(i)})),e.exports=c}).call(this,r(149))},function(e,t,r){"use strict";var n=r(20),o=r(412),i=r(414),a=r(151),l=r(415),c=r(418),u=r(419),s=r(155);e.exports=function(e){return new Promise((function(t,r){var f=e.data,d=e.headers;n.isFormData(f)&&delete d["Content-Type"],(n.isBlob(f)||n.isFile(f))&&f.type&&delete d["Content-Type"];var p=new XMLHttpRequest;if(e.auth){var m=e.auth.username||"",g=unescape(encodeURIComponent(e.auth.password))||"";d.Authorization="Basic "+btoa(m+":"+g)}var b=l(e.baseURL,e.url);if(p.open(e.method.toUpperCase(),a(b,e.params,e.paramsSerializer),!0),p.timeout=e.timeout,p.onreadystatechange=function(){if(p&&4===p.readyState&&(0!==p.status||p.responseURL&&0===p.responseURL.indexOf("file:"))){var n="getAllResponseHeaders"in p?c(p.getAllResponseHeaders()):null,i={data:e.responseType&&"text"!==e.responseType?p.response:p.responseText,status:p.status,statusText:p.statusText,headers:n,config:e,request:p};o(t,r,i),p=null}},p.onabort=function(){p&&(r(s("Request aborted",e,"ECONNABORTED",p)),p=null)},p.onerror=function(){r(s("Network Error",e,null,p)),p=null},p.ontimeout=function(){var t="timeout of "+e.timeout+"ms exceeded";e.timeoutErrorMessage&&(t=e.timeoutErrorMessage),r(s(t,e,"ECONNABORTED",p)),p=null},n.isStandardBrowserEnv()){var h=(e.withCredentials||u(b))&&e.xsrfCookieName?i.read(e.xsrfCookieName):void 0;h&&(d[e.xsrfHeaderName]=h)}if("setRequestHeader"in p&&n.forEach(d,(function(e,t){void 0===f&&"content-type"===t.toLowerCase()?delete d[t]:p.setRequestHeader(t,e)})),n.isUndefined(e.withCredentials)||(p.withCredentials=!!e.withCredentials),e.responseType)try{p.responseType=e.responseType}catch(t){if("json"!==e.responseType)throw t}"function"==typeof e.onDownloadProgress&&p.addEventListener("progress",e.onDownloadProgress),"function"==typeof e.onUploadProgress&&p.upload&&p.upload.addEventListener("progress",e.onUploadProgress),e.cancelToken&&e.cancelToken.promise.then((function(e){p&&(p.abort(),r(e),p=null)})),f||(f=null),p.send(f)}))}},function(e,t,r){"use strict";var n=r(413);e.exports=function(e,t,r,o,i){var a=new Error(e);return n(a,t,r,o,i)}},function(e,t,r){"use strict";var n=r(20);e.exports=function(e,t){t=t||{};var r={},o=["url","method","data"],i=["headers","auth","proxy","params"],a=["baseURL","transformRequest","transformResponse","paramsSerializer","timeout","timeoutMessage","withCredentials","adapter","responseType","xsrfCookieName","xsrfHeaderName","onUploadProgress","onDownloadProgress","decompress","maxContentLength","maxBodyLength","maxRedirects","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding"],l=["validateStatus"];function c(e,t){return n.isPlainObject(e)&&n.isPlainObject(t)?n.merge(e,t):n.isPlainObject(t)?n.merge({},t):n.isArray(t)?t.slice():t}function u(o){n.isUndefined(t[o])?n.isUndefined(e[o])||(r[o]=c(void 0,e[o])):r[o]=c(e[o],t[o])}n.forEach(o,(function(e){n.isUndefined(t[e])||(r[e]=c(void 0,t[e]))})),n.forEach(i,u),n.forEach(a,(function(o){n.isUndefined(t[o])?n.isUndefined(e[o])||(r[o]=c(void 0,e[o])):r[o]=c(void 0,t[o])})),n.forEach(l,(function(n){n in t?r[n]=c(e[n],t[n]):n in e&&(r[n]=c(void 0,e[n]))}));var s=o.concat(i).concat(a).concat(l),f=Object.keys(e).concat(Object.keys(t)).filter((function(e){return-1===s.indexOf(e)}));return n.forEach(f,u),r}},function(e,t,r){"use strict";function n(e){this.message=e}n.prototype.toString=function(){return"Cancel"+(this.message?": "+this.message:"")},n.prototype.__CANCEL__=!0,e.exports=n},function(e,t,r){"use strict";function n(e){var t,r=e.Symbol;return"function"==typeof r?r.observable?t=r.observable:(t=r("observable"),r.observable=t):t="@@observable",t}r.d(t,"a",(function(){return n}))},function(e,t){e.exports=function(e,t,r,n){var o=r?r.call(n,e,t):void 0;if(void 0!==o)return!!o;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var i=Object.keys(e),a=Object.keys(t);if(i.length!==a.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),c=0;c<i.length;c++){var u=i[c];if(!l(u))return!1;var s=e[u],f=t[u];if(!1===(o=r?r.call(n,s,f,u):void 0)||void 0===o&&s!==f)return!1}return!0}},function(e,t,r){"use strict";t.a=function(e){function t(e,t,n){var o=t.trim().split(m);t=o;var i=o.length,a=e.length;switch(a){case 0:case 1:var l=0;for(e=0===a?"":e[0]+" ";l<i;++l)t[l]=r(e,t[l],n).trim();break;default:var c=l=0;for(t=[];l<i;++l)for(var u=0;u<a;++u)t[c++]=r(e[u]+" ",o[l],n).trim()}return t}function r(e,t,r){var n=t.charCodeAt(0);switch(33>n&&(n=(t=t.trim()).charCodeAt(0)),n){case 38:return t.replace(g,"$1"+e.trim());case 58:return e.trim()+t.replace(g,"$1"+e.trim());default:if(0<1*r&&0<t.indexOf("\f"))return t.replace(g,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function n(e,t,r,i){var a=e+";",l=2*t+3*r+4*i;if(944===l){e=a.indexOf(":",9)+1;var c=a.substring(e,a.length-1).trim();return c=a.substring(0,e).trim()+c+";",1===P||2===P&&o(c,1)?"-webkit-"+c+c:c}if(0===P||2===P&&!o(a,1))return a;switch(l){case 1015:return 97===a.charCodeAt(10)?"-webkit-"+a+a:a;case 951:return 116===a.charCodeAt(3)?"-webkit-"+a+a:a;case 963:return 110===a.charCodeAt(5)?"-webkit-"+a+a:a;case 1009:if(100!==a.charCodeAt(4))break;case 969:case 942:return"-webkit-"+a+a;case 978:return"-webkit-"+a+"-moz-"+a+a;case 1019:case 983:return"-webkit-"+a+"-moz-"+a+"-ms-"+a+a;case 883:if(45===a.charCodeAt(8))return"-webkit-"+a+a;if(0<a.indexOf("image-set(",11))return a.replace(O,"$1-webkit-$2")+a;break;case 932:if(45===a.charCodeAt(4))switch(a.charCodeAt(5)){case 103:return"-webkit-box-"+a.replace("-grow","")+"-webkit-"+a+"-ms-"+a.replace("grow","positive")+a;case 115:return"-webkit-"+a+"-ms-"+a.replace("shrink","negative")+a;case 98:return"-webkit-"+a+"-ms-"+a.replace("basis","preferred-size")+a}return"-webkit-"+a+"-ms-"+a+a;case 964:return"-webkit-"+a+"-ms-flex-"+a+a;case 1023:if(99!==a.charCodeAt(8))break;return"-webkit-box-pack"+(c=a.substring(a.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+a+"-ms-flex-pack"+c+a;case 1005:return d.test(a)?a.replace(f,":-webkit-")+a.replace(f,":-moz-")+a:a;case 1e3:switch(t=(c=a.substring(13).trim()).indexOf("-")+1,c.charCodeAt(0)+c.charCodeAt(t)){case 226:c=a.replace(y,"tb");break;case 232:c=a.replace(y,"tb-rl");break;case 220:c=a.replace(y,"lr");break;default:return a}return"-webkit-"+a+"-ms-"+c+a;case 1017:if(-1===a.indexOf("sticky",9))break;case 975:switch(t=(a=e).length-10,l=(c=(33===a.charCodeAt(t)?a.substring(0,t):a).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|c.charCodeAt(7))){case 203:if(111>c.charCodeAt(8))break;case 115:a=a.replace(c,"-webkit-"+c)+";"+a;break;case 207:case 102:a=a.replace(c,"-webkit-"+(102<l?"inline-":"")+"box")+";"+a.replace(c,"-webkit-"+c)+";"+a.replace(c,"-ms-"+c+"box")+";"+a}return a+";";case 938:if(45===a.charCodeAt(5))switch(a.charCodeAt(6)){case 105:return c=a.replace("-items",""),"-webkit-"+a+"-webkit-box-"+c+"-ms-flex-"+c+a;case 115:return"-webkit-"+a+"-ms-flex-item-"+a.replace(k,"")+a;default:return"-webkit-"+a+"-ms-flex-line-pack"+a.replace("align-content","").replace(k,"")+a}break;case 973:case 989:if(45!==a.charCodeAt(3)||122===a.charCodeAt(4))break;case 931:case 953:if(!0===S.test(e))return 115===(c=e.substring(e.indexOf(":")+1)).charCodeAt(0)?n(e.replace("stretch","fill-available"),t,r,i).replace(":fill-available",":stretch"):a.replace(c,"-webkit-"+c)+a.replace(c,"-moz-"+c.replace("fill-",""))+a;break;case 962:if(a="-webkit-"+a+(102===a.charCodeAt(5)?"-ms-"+a:"")+a,211===r+i&&105===a.charCodeAt(13)&&0<a.indexOf("transform",10))return a.substring(0,a.indexOf(";",27)+1).replace(p,"$1-webkit-$2")+a}return a}function o(e,t){var r=e.indexOf(1===t?":":"{"),n=e.substring(0,3!==t?r:10);return r=e.substring(r+1,e.length-1),A(2!==t?n:n.replace(E,"$1"),r,t)}function i(e,t){var r=n(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return r!==t+";"?r.replace(w," or ($1)").substring(4):"("+t+")"}function a(e,t,r,n,o,i,a,l,u,s){for(var f,d=0,p=t;d<M;++d)switch(f=N[d].call(c,e,p,r,n,o,i,a,l,u,s)){case void 0:case!1:case!0:case null:break;default:p=f}if(p!==t)return p}function l(e){return void 0!==(e=e.prefix)&&(A=null,e?"function"!=typeof e?P=1:(P=2,A=e):P=0),l}function c(e,r){var l=e;if(33>l.charCodeAt(0)&&(l=l.trim()),l=[l],0<M){var c=a(-1,r,l,l,T,j,0,0,0,0);void 0!==c&&"string"==typeof c&&(r=c)}var f=function e(r,l,c,f,d){for(var p,m,g,y,w,k=0,E=0,S=0,O=0,N=0,A=0,z=g=p=0,I=0,F=0,D=0,L=0,U=c.length,B=U-1,W="",$="",H="",V="";I<U;){if(m=c.charCodeAt(I),I===B&&0!==E+O+S+k&&(0!==E&&(m=47===E?10:47),O=S=k=0,U++,B++),0===E+O+S+k){if(I===B&&(0<F&&(W=W.replace(s,"")),0<W.trim().length)){switch(m){case 32:case 9:case 59:case 13:case 10:break;default:W+=c.charAt(I)}m=59}switch(m){case 123:for(p=(W=W.trim()).charCodeAt(0),g=1,L=++I;I<U;){switch(m=c.charCodeAt(I)){case 123:g++;break;case 125:g--;break;case 47:switch(m=c.charCodeAt(I+1)){case 42:case 47:e:{for(z=I+1;z<B;++z)switch(c.charCodeAt(z)){case 47:if(42===m&&42===c.charCodeAt(z-1)&&I+2!==z){I=z+1;break e}break;case 10:if(47===m){I=z+1;break e}}I=z}}break;case 91:m++;case 40:m++;case 34:case 39:for(;I++<B&&c.charCodeAt(I)!==m;);}if(0===g)break;I++}switch(g=c.substring(L,I),0===p&&(p=(W=W.replace(u,"").trim()).charCodeAt(0)),p){case 64:switch(0<F&&(W=W.replace(s,"")),m=W.charCodeAt(1)){case 100:case 109:case 115:case 45:F=l;break;default:F=_}if(L=(g=e(l,F,g,m,d+1)).length,0<M&&(w=a(3,g,F=t(_,W,D),l,T,j,L,m,d,f),W=F.join(""),void 0!==w&&0===(L=(g=w.trim()).length)&&(m=0,g="")),0<L)switch(m){case 115:W=W.replace(x,i);case 100:case 109:case 45:g=W+"{"+g+"}";break;case 107:g=(W=W.replace(b,"$1 $2"))+"{"+g+"}",g=1===P||2===P&&o("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=W+g,112===f&&($+=g,g="")}else g="";break;default:g=e(l,t(l,W,D),g,f,d+1)}H+=g,g=D=F=z=p=0,W="",m=c.charCodeAt(++I);break;case 125:case 59:if(1<(L=(W=(0<F?W.replace(s,""):W).trim()).length))switch(0===z&&(p=W.charCodeAt(0),45===p||96<p&&123>p)&&(L=(W=W.replace(" ",":")).length),0<M&&void 0!==(w=a(1,W,l,r,T,j,$.length,f,d,f))&&0===(L=(W=w.trim()).length)&&(W="\0\0"),p=W.charCodeAt(0),m=W.charCodeAt(1),p){case 0:break;case 64:if(105===m||99===m){V+=W+c.charAt(I);break}default:58!==W.charCodeAt(L-1)&&($+=n(W,p,m,W.charCodeAt(2)))}D=F=z=p=0,W="",m=c.charCodeAt(++I)}}switch(m){case 13:case 10:47===E?E=0:0===1+p&&107!==f&&0<W.length&&(F=1,W+="\0"),0<M*R&&a(0,W,l,r,T,j,$.length,f,d,f),j=1,T++;break;case 59:case 125:if(0===E+O+S+k){j++;break}default:switch(j++,y=c.charAt(I),m){case 9:case 32:if(0===O+k+E)switch(N){case 44:case 58:case 9:case 32:y="";break;default:32!==m&&(y=" ")}break;case 0:y="\\0";break;case 12:y="\\f";break;case 11:y="\\v";break;case 38:0===O+E+k&&(F=D=1,y="\f"+y);break;case 108:if(0===O+E+k+C&&0<z)switch(I-z){case 2:112===N&&58===c.charCodeAt(I-3)&&(C=N);case 8:111===A&&(C=A)}break;case 58:0===O+E+k&&(z=I);break;case 44:0===E+S+O+k&&(F=1,y+="\r");break;case 34:case 39:0===E&&(O=O===m?0:0===O?m:O);break;case 91:0===O+E+S&&k++;break;case 93:0===O+E+S&&k--;break;case 41:0===O+E+k&&S--;break;case 40:if(0===O+E+k){if(0===p)switch(2*N+3*A){case 533:break;default:p=1}S++}break;case 64:0===E+S+O+k+z+g&&(g=1);break;case 42:case 47:if(!(0<O+k+S))switch(E){case 0:switch(2*m+3*c.charCodeAt(I+1)){case 235:E=47;break;case 220:L=I,E=42}break;case 42:47===m&&42===N&&L+2!==I&&(33===c.charCodeAt(L+2)&&($+=c.substring(L,I+1)),y="",E=0)}}0===E&&(W+=y)}A=N,N=m,I++}if(0<(L=$.length)){if(F=l,0<M&&(void 0!==(w=a(2,$,F,r,T,j,L,f,d,f))&&0===($=w).length))return V+$+H;if($=F.join(",")+"{"+$+"}",0!=P*C){switch(2!==P||o($,2)||(C=0),C){case 111:$=$.replace(v,":-moz-$1")+$;break;case 112:$=$.replace(h,"::-webkit-input-$1")+$.replace(h,"::-moz-$1")+$.replace(h,":-ms-input-$1")+$}C=0}}return V+$+H}(_,l,r,0,0);return 0<M&&(void 0!==(c=a(-2,f,l,l,T,j,f.length,0,0,0))&&(f=c)),"",C=0,j=T=1,f}var u=/^\0+/g,s=/[\0\r\f]/g,f=/: */g,d=/zoo|gra/,p=/([,: ])(transform)/g,m=/,\r+?/g,g=/([\t\r\n ])*\f?&/g,b=/@(k\w+)\s*(\S*)\s*/,h=/::(place)/g,v=/:(read-only)/g,y=/[svh]\w+-[tblr]{2}/,x=/\(\s*(.*)\s*\)/g,w=/([\s\S]*?);/g,k=/-self|flex-/g,E=/[^]*?(:[rp][el]a[\w-]+)[^]*/,S=/stretch|:\s*\w+\-(?:conte|avail)/,O=/([^-])(image-set\()/,j=1,T=1,C=0,P=1,_=[],N=[],M=0,A=null,R=0;return c.use=function e(t){switch(t){case void 0:case null:M=N.length=0;break;default:if("function"==typeof t)N[M++]=t;else if("object"==typeof t)for(var r=0,n=t.length;r<n;++r)e(t[r]);else R=0|!!t}return e},c.set=l,void 0!==e&&l(e),c}},function(e,t,r){"use strict";t.a={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,r){e.exports=r(384)},function(e,t,r){"use strict";t.__esModule=!0;var n=i(r(0)),o=i(r(403));function i(e){return e&&e.__esModule?e:{default:e}}t.default=n.default.createContext||o.default,e.exports=t.default},function(e,t,r){"use strict";function n(){var e=this.constructor.getDerivedStateFromProps(this.props,this.state);null!=e&&this.setState(e)}function o(e){this.setState(function(t){var r=this.constructor.getDerivedStateFromProps(e,t);return null!=r?r:null}.bind(this))}function i(e,t){try{var r=this.props,n=this.state;this.props=e,this.state=t,this.__reactInternalSnapshotFlag=!0,this.__reactInternalSnapshot=this.getSnapshotBeforeUpdate(r,n)}finally{this.props=r,this.state=n}}function a(e){var t=e.prototype;if(!t||!t.isReactComponent)throw new Error("Can only polyfill class components");if("function"!=typeof e.getDerivedStateFromProps&&"function"!=typeof t.getSnapshotBeforeUpdate)return e;var r=null,a=null,l=null;if("function"==typeof t.componentWillMount?r="componentWillMount":"function"==typeof t.UNSAFE_componentWillMount&&(r="UNSAFE_componentWillMount"),"function"==typeof t.componentWillReceiveProps?a="componentWillReceiveProps":"function"==typeof t.UNSAFE_componentWillReceiveProps&&(a="UNSAFE_componentWillReceiveProps"),"function"==typeof t.componentWillUpdate?l="componentWillUpdate":"function"==typeof t.UNSAFE_componentWillUpdate&&(l="UNSAFE_componentWillUpdate"),null!==r||null!==a||null!==l){var c=e.displayName||e.name,u="function"==typeof e.getDerivedStateFromProps?"getDerivedStateFromProps()":"getSnapshotBeforeUpdate()";throw Error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n"+c+" uses "+u+" but also contains the following legacy lifecycles:"+(null!==r?"\n  "+r:"")+(null!==a?"\n  "+a:"")+(null!==l?"\n  "+l:"")+"\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://fb.me/react-async-component-lifecycle-hooks")}if("function"==typeof e.getDerivedStateFromProps&&(t.componentWillMount=n,t.componentWillReceiveProps=o),"function"==typeof t.getSnapshotBeforeUpdate){if("function"!=typeof t.componentDidUpdate)throw new Error("Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype");t.componentWillUpdate=i;var s=t.componentDidUpdate;t.componentDidUpdate=function(e,t,r){var n=this.__reactInternalSnapshotFlag?this.__reactInternalSnapshot:r;s.call(this,e,t,n)}}return e}r.d(t,"a",(function(){return a})),n.__suppressDeprecationWarning=!0,o.__suppressDeprecationWarning=!0,i.__suppressDeprecationWarning=!0},function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r(0);function o(){var e=Object(n.useRef)(!0),t=Object(n.useRef)((function(){return e.current}));return Object(n.useEffect)((function(){return function(){e.current=!1}}),[]),t.current}},function(e,t,r){"use strict";function n(e){return e&&e.ownerDocument||document}r.d(t,"a",(function(){return n}))},function(e,t,r){"use strict";t.a=!("undefined"==typeof window||!window.document||!window.document.createElement)},function(e,t,r){"use strict";var n=r(166);function o(e,t){return function(e){var t=Object(n.a)(e);return t&&t.defaultView||window}(e).getComputedStyle(e,t)}var i=/([A-Z])/g;var a=/^ms-/;function l(e){return function(e){return e.replace(i,"-$1").toLowerCase()}(e).replace(a,"-ms-")}var c=/^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i;t.a=function(e,t){var r="",n="";if("string"==typeof t)return e.style.getPropertyValue(l(t))||o(e).getPropertyValue(l(t));Object.keys(t).forEach((function(o){var i=t[o];i||0===i?!function(e){return!(!e||!c.test(e))}(o)?r+=l(o)+": "+i+";":n+=o+"("+i+") ":e.style.removeProperty(l(o))})),n&&(r+="transform: "+n+";"),e.style.cssText+=";"+r}},function(e,t,r){"use strict";r.d(t,"a",(function(){return o}));var n=r(0);function o(e){var t,r,o=(t=e,(r=Object(n.useRef)(t)).current=t,r);Object(n.useEffect)((function(){return function(){return o.current()}}),[])}},function(e,t,r){"use strict";r.d(t,"a",(function(){return i}));var n=r(0);var o=function(e){var t=Object(n.useRef)(e);return Object(n.useEffect)((function(){t.current=e}),[e]),t};function i(e){var t=o(e);return Object(n.useCallback)((function(){return t.current&&t.current.apply(t,arguments)}),[t])}},function(e,t,r){r(172),r(374),e.exports=r(425)},function(e,t,r){"use strict";(function(e){if(r(173),r(370),r(371),e._babelPolyfill)throw new Error("only one instance of babel-polyfill is allowed");e._babelPolyfill=!0;function t(e,t,r){e[t]||Object.defineProperty(e,t,{writable:!0,configurable:!0,value:r})}t(String.prototype,"padLeft","".padStart),t(String.prototype,"padRight","".padEnd),"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach((function(e){[][e]&&t(Array,e,Function.call.bind([][e]))}))}).call(this,r(64))},function(e,t,r){r(174),r(177),r(178),r(179),r(180),r(181),r(182),r(183),r(184),r(185),r(186),r(187),r(188),r(189),r(190),r(191),r(192),r(193),r(194),r(195),r(196),r(197),r(198),r(199),r(200),r(201),r(202),r(203),r(204),r(205),r(206),r(207),r(208),r(209),r(210),r(211),r(212),r(213),r(214),r(215),r(216),r(217),r(218),r(219),r(220),r(221),r(222),r(223),r(224),r(225),r(226),r(227),r(228),r(229),r(230),r(231),r(232),r(233),r(234),r(235),r(236),r(237),r(238),r(239),r(240),r(241),r(242),r(243),r(244),r(245),r(246),r(247),r(248),r(249),r(250),r(251),r(252),r(254),r(255),r(257),r(258),r(259),r(260),r(261),r(262),r(263),r(265),r(266),r(267),r(268),r(269),r(270),r(271),r(272),r(273),r(274),r(275),r(276),r(277),r(100),r(278),r(131),r(279),r(132),r(280),r(281),r(282),r(283),r(284),r(135),r(137),r(138),r(285),r(286),r(287),r(288),r(289),r(290),r(291),r(292),r(293),r(294),r(295),r(296),r(297),r(298),r(299),r(300),r(301),r(302),r(303),r(304),r(305),r(306),r(307),r(308),r(309),r(310),r(311),r(312),r(313),r(314),r(315),r(316),r(317),r(318),r(319),r(320),r(321),r(322),r(323),r(324),r(325),r(326),r(327),r(328),r(329),r(330),r(331),r(332),r(333),r(334),r(335),r(336),r(337),r(338),r(339),r(340),r(341),r(342),r(343),r(344),r(345),r(346),r(347),r(348),r(349),r(350),r(351),r(352),r(353),r(354),r(355),r(356),r(357),r(358),r(359),r(360),r(361),r(362),r(363),r(364),r(365),r(366),r(367),r(368),r(369),e.exports=r(25)},function(e,t,r){"use strict";var n=r(5),o=r(21),i=r(12),a=r(1),l=r(18),c=r(37).KEY,u=r(7),s=r(58),f=r(51),d=r(41),p=r(9),m=r(113),g=r(81),b=r(176),h=r(67),v=r(4),y=r(8),x=r(14),w=r(22),k=r(30),E=r(40),S=r(44),O=r(116),j=r(23),T=r(66),C=r(13),P=r(42),_=j.f,N=C.f,M=O.f,A=n.Symbol,R=n.JSON,z=R&&R.stringify,I=p("_hidden"),F=p("toPrimitive"),D={}.propertyIsEnumerable,L=s("symbol-registry"),U=s("symbols"),B=s("op-symbols"),W=Object.prototype,$="function"==typeof A&&!!T.f,H=n.QObject,V=!H||!H.prototype||!H.prototype.findChild,q=i&&u((function(){return 7!=S(N({},"a",{get:function(){return N(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=_(W,t);n&&delete W[t],N(e,t,r),n&&e!==W&&N(W,t,n)}:N,G=function(e){var t=U[e]=S(A.prototype);return t._k=e,t},K=$&&"symbol"==typeof A.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof A},Q=function(e,t,r){return e===W&&Q(B,t,r),v(e),t=k(t,!0),v(r),o(U,t)?(r.enumerable?(o(e,I)&&e[I][t]&&(e[I][t]=!1),r=S(r,{enumerable:E(0,!1)})):(o(e,I)||N(e,I,E(1,{})),e[I][t]=!0),q(e,t,r)):N(e,t,r)},Y=function(e,t){v(e);for(var r,n=b(t=w(t)),o=0,i=n.length;i>o;)Q(e,r=n[o++],t[r]);return e},X=function(e){var t=D.call(this,e=k(e,!0));return!(this===W&&o(U,e)&&!o(B,e))&&(!(t||!o(this,e)||!o(U,e)||o(this,I)&&this[I][e])||t)},J=function(e,t){if(e=w(e),t=k(t,!0),e!==W||!o(U,t)||o(B,t)){var r=_(e,t);return!r||!o(U,t)||o(e,I)&&e[I][t]||(r.enumerable=!0),r}},Z=function(e){for(var t,r=M(w(e)),n=[],i=0;r.length>i;)o(U,t=r[i++])||t==I||t==c||n.push(t);return n},ee=function(e){for(var t,r=e===W,n=M(r?B:w(e)),i=[],a=0;n.length>a;)!o(U,t=n[a++])||r&&!o(W,t)||i.push(U[t]);return i};$||(l((A=function(){if(this instanceof A)throw TypeError("Symbol is not a constructor!");var e=d(arguments.length>0?arguments[0]:void 0),t=function(r){this===W&&t.call(B,r),o(this,I)&&o(this[I],e)&&(this[I][e]=!1),q(this,e,E(1,r))};return i&&V&&q(W,e,{configurable:!0,set:t}),G(e)}).prototype,"toString",(function(){return this._k})),j.f=J,C.f=Q,r(45).f=O.f=Z,r(60).f=X,T.f=ee,i&&!r(36)&&l(W,"propertyIsEnumerable",X,!0),m.f=function(e){return G(p(e))}),a(a.G+a.W+a.F*!$,{Symbol:A});for(var te="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),re=0;te.length>re;)p(te[re++]);for(var ne=P(p.store),oe=0;ne.length>oe;)g(ne[oe++]);a(a.S+a.F*!$,"Symbol",{for:function(e){return o(L,e+="")?L[e]:L[e]=A(e)},keyFor:function(e){if(!K(e))throw TypeError(e+" is not a symbol!");for(var t in L)if(L[t]===e)return t},useSetter:function(){V=!0},useSimple:function(){V=!1}}),a(a.S+a.F*!$,"Object",{create:function(e,t){return void 0===t?S(e):Y(S(e),t)},defineProperty:Q,defineProperties:Y,getOwnPropertyDescriptor:J,getOwnPropertyNames:Z,getOwnPropertySymbols:ee});var ie=u((function(){T.f(1)}));a(a.S+a.F*ie,"Object",{getOwnPropertySymbols:function(e){return T.f(x(e))}}),R&&a(a.S+a.F*(!$||u((function(){var e=A();return"[null]"!=z([e])||"{}"!=z({a:e})||"{}"!=z(Object(e))}))),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(y(t)||void 0!==e)&&!K(e))return h(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!K(t))return t}),n[1]=t,z.apply(R,n)}}),A.prototype[F]||r(17)(A.prototype,F,A.prototype.valueOf),f(A,"Symbol"),f(Math,"Math",!0),f(n.JSON,"JSON",!0)},function(e,t,r){e.exports=r(58)("native-function-to-string",Function.toString)},function(e,t,r){var n=r(42),o=r(66),i=r(60);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var a,l=r(e),c=i.f,u=0;l.length>u;)c.call(e,a=l[u++])&&t.push(a);return t}},function(e,t,r){var n=r(1);n(n.S,"Object",{create:r(44)})},function(e,t,r){var n=r(1);n(n.S+n.F*!r(12),"Object",{defineProperty:r(13).f})},function(e,t,r){var n=r(1);n(n.S+n.F*!r(12),"Object",{defineProperties:r(115)})},function(e,t,r){var n=r(22),o=r(23).f;r(32)("getOwnPropertyDescriptor",(function(){return function(e,t){return o(n(e),t)}}))},function(e,t,r){var n=r(14),o=r(24);r(32)("getPrototypeOf",(function(){return function(e){return o(n(e))}}))},function(e,t,r){var n=r(14),o=r(42);r(32)("keys",(function(){return function(e){return o(n(e))}}))},function(e,t,r){r(32)("getOwnPropertyNames",(function(){return r(116).f}))},function(e,t,r){var n=r(8),o=r(37).onFreeze;r(32)("freeze",(function(e){return function(t){return e&&n(t)?e(o(t)):t}}))},function(e,t,r){var n=r(8),o=r(37).onFreeze;r(32)("seal",(function(e){return function(t){return e&&n(t)?e(o(t)):t}}))},function(e,t,r){var n=r(8),o=r(37).onFreeze;r(32)("preventExtensions",(function(e){return function(t){return e&&n(t)?e(o(t)):t}}))},function(e,t,r){var n=r(8);r(32)("isFrozen",(function(e){return function(t){return!n(t)||!!e&&e(t)}}))},function(e,t,r){var n=r(8);r(32)("isSealed",(function(e){return function(t){return!n(t)||!!e&&e(t)}}))},function(e,t,r){var n=r(8);r(32)("isExtensible",(function(e){return function(t){return!!n(t)&&(!e||e(t))}}))},function(e,t,r){var n=r(1);n(n.S+n.F,"Object",{assign:r(117)})},function(e,t,r){var n=r(1);n(n.S,"Object",{is:r(118)})},function(e,t,r){var n=r(1);n(n.S,"Object",{setPrototypeOf:r(85).set})},function(e,t,r){"use strict";var n=r(52),o={};o[r(9)("toStringTag")]="z",o+""!="[object z]"&&r(18)(Object.prototype,"toString",(function(){return"[object "+n(this)+"]"}),!0)},function(e,t,r){var n=r(1);n(n.P,"Function",{bind:r(119)})},function(e,t,r){var n=r(13).f,o=Function.prototype,i=/^\s*function ([^ (]*)/;"name"in o||r(12)&&n(o,"name",{configurable:!0,get:function(){try{return(""+this).match(i)[1]}catch(e){return""}}})},function(e,t,r){"use strict";var n=r(8),o=r(24),i=r(9)("hasInstance"),a=Function.prototype;i in a||r(13).f(a,i,{value:function(e){if("function"!=typeof this||!n(e))return!1;if(!n(this.prototype))return e instanceof this;for(;e=o(e);)if(this.prototype===e)return!0;return!1}})},function(e,t,r){var n=r(1),o=r(121);n(n.G+n.F*(parseInt!=o),{parseInt:o})},function(e,t,r){var n=r(1),o=r(122);n(n.G+n.F*(parseFloat!=o),{parseFloat:o})},function(e,t,r){"use strict";var n=r(5),o=r(21),i=r(27),a=r(87),l=r(30),c=r(7),u=r(45).f,s=r(23).f,f=r(13).f,d=r(53).trim,p=n.Number,m=p,g=p.prototype,b="Number"==i(r(44)(g)),h="trim"in String.prototype,v=function(e){var t=l(e,!1);if("string"==typeof t&&t.length>2){var r,n,o,i=(t=h?t.trim():d(t,3)).charCodeAt(0);if(43===i||45===i){if(88===(r=t.charCodeAt(2))||120===r)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:n=2,o=49;break;case 79:case 111:n=8,o=55;break;default:return+t}for(var a,c=t.slice(2),u=0,s=c.length;u<s;u++)if((a=c.charCodeAt(u))<48||a>o)return NaN;return parseInt(c,n)}}return+t};if(!p(" 0o1")||!p("0b1")||p("+0x1")){p=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof p&&(b?c((function(){g.valueOf.call(r)})):"Number"!=i(r))?a(new m(v(t)),r,p):v(t)};for(var y,x=r(12)?u(m):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),w=0;x.length>w;w++)o(m,y=x[w])&&!o(p,y)&&f(p,y,s(m,y));p.prototype=g,g.constructor=p,r(18)(n,"Number",p)}},function(e,t,r){"use strict";var n=r(1),o=r(28),i=r(123),a=r(88),l=1..toFixed,c=Math.floor,u=[0,0,0,0,0,0],s="Number.toFixed: incorrect invocation!",f=function(e,t){for(var r=-1,n=t;++r<6;)n+=e*u[r],u[r]=n%1e7,n=c(n/1e7)},d=function(e){for(var t=6,r=0;--t>=0;)r+=u[t],u[t]=c(r/e),r=r%e*1e7},p=function(){for(var e=6,t="";--e>=0;)if(""!==t||0===e||0!==u[e]){var r=String(u[e]);t=""===t?r:t+a.call("0",7-r.length)+r}return t},m=function(e,t,r){return 0===t?r:t%2==1?m(e,t-1,r*e):m(e*e,t/2,r)};n(n.P+n.F*(!!l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!r(7)((function(){l.call({})}))),"Number",{toFixed:function(e){var t,r,n,l,c=i(this,s),u=o(e),g="",b="0";if(u<0||u>20)throw RangeError(s);if(c!=c)return"NaN";if(c<=-1e21||c>=1e21)return String(c);if(c<0&&(g="-",c=-c),c>1e-21)if(r=(t=function(e){for(var t=0,r=e;r>=4096;)t+=12,r/=4096;for(;r>=2;)t+=1,r/=2;return t}(c*m(2,69,1))-69)<0?c*m(2,-t,1):c/m(2,t,1),r*=4503599627370496,(t=52-t)>0){for(f(0,r),n=u;n>=7;)f(1e7,0),n-=7;for(f(m(10,n,1),0),n=t-1;n>=23;)d(1<<23),n-=23;d(1<<n),f(1,1),d(2),b=p()}else f(0,r),f(1<<-t,0),b=p()+a.call("0",u);return b=u>0?g+((l=b.length)<=u?"0."+a.call("0",u-l)+b:b.slice(0,l-u)+"."+b.slice(l-u)):g+b}})},function(e,t,r){"use strict";var n=r(1),o=r(7),i=r(123),a=1..toPrecision;n(n.P+n.F*(o((function(){return"1"!==a.call(1,void 0)}))||!o((function(){a.call({})}))),"Number",{toPrecision:function(e){var t=i(this,"Number#toPrecision: incorrect invocation!");return void 0===e?a.call(t):a.call(t,e)}})},function(e,t,r){var n=r(1);n(n.S,"Number",{EPSILON:Math.pow(2,-52)})},function(e,t,r){var n=r(1),o=r(5).isFinite;n(n.S,"Number",{isFinite:function(e){return"number"==typeof e&&o(e)}})},function(e,t,r){var n=r(1);n(n.S,"Number",{isInteger:r(124)})},function(e,t,r){var n=r(1);n(n.S,"Number",{isNaN:function(e){return e!=e}})},function(e,t,r){var n=r(1),o=r(124),i=Math.abs;n(n.S,"Number",{isSafeInteger:function(e){return o(e)&&i(e)<=9007199254740991}})},function(e,t,r){var n=r(1);n(n.S,"Number",{MAX_SAFE_INTEGER:9007199254740991})},function(e,t,r){var n=r(1);n(n.S,"Number",{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,r){var n=r(1),o=r(122);n(n.S+n.F*(Number.parseFloat!=o),"Number",{parseFloat:o})},function(e,t,r){var n=r(1),o=r(121);n(n.S+n.F*(Number.parseInt!=o),"Number",{parseInt:o})},function(e,t,r){var n=r(1),o=r(125),i=Math.sqrt,a=Math.acosh;n(n.S+n.F*!(a&&710==Math.floor(a(Number.MAX_VALUE))&&a(1/0)==1/0),"Math",{acosh:function(e){return(e=+e)<1?NaN:e>94906265.62425156?Math.log(e)+Math.LN2:o(e-1+i(e-1)*i(e+1))}})},function(e,t,r){var n=r(1),o=Math.asinh;n(n.S+n.F*!(o&&1/o(0)>0),"Math",{asinh:function e(t){return isFinite(t=+t)&&0!=t?t<0?-e(-t):Math.log(t+Math.sqrt(t*t+1)):t}})},function(e,t,r){var n=r(1),o=Math.atanh;n(n.S+n.F*!(o&&1/o(-0)<0),"Math",{atanh:function(e){return 0==(e=+e)?e:Math.log((1+e)/(1-e))/2}})},function(e,t,r){var n=r(1),o=r(89);n(n.S,"Math",{cbrt:function(e){return o(e=+e)*Math.pow(Math.abs(e),1/3)}})},function(e,t,r){var n=r(1);n(n.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}})},function(e,t,r){var n=r(1),o=Math.exp;n(n.S,"Math",{cosh:function(e){return(o(e=+e)+o(-e))/2}})},function(e,t,r){var n=r(1),o=r(90);n(n.S+n.F*(o!=Math.expm1),"Math",{expm1:o})},function(e,t,r){var n=r(1);n(n.S,"Math",{fround:r(126)})},function(e,t,r){var n=r(1),o=Math.abs;n(n.S,"Math",{hypot:function(e,t){for(var r,n,i=0,a=0,l=arguments.length,c=0;a<l;)c<(r=o(arguments[a++]))?(i=i*(n=c/r)*n+1,c=r):i+=r>0?(n=r/c)*n:r;return c===1/0?1/0:c*Math.sqrt(i)}})},function(e,t,r){var n=r(1),o=Math.imul;n(n.S+n.F*r(7)((function(){return-5!=o(4294967295,5)||2!=o.length})),"Math",{imul:function(e,t){var r=+e,n=+t,o=65535&r,i=65535&n;return 0|o*i+((65535&r>>>16)*i+o*(65535&n>>>16)<<16>>>0)}})},function(e,t,r){var n=r(1);n(n.S,"Math",{log10:function(e){return Math.log(e)*Math.LOG10E}})},function(e,t,r){var n=r(1);n(n.S,"Math",{log1p:r(125)})},function(e,t,r){var n=r(1);n(n.S,"Math",{log2:function(e){return Math.log(e)/Math.LN2}})},function(e,t,r){var n=r(1);n(n.S,"Math",{sign:r(89)})},function(e,t,r){var n=r(1),o=r(90),i=Math.exp;n(n.S+n.F*r(7)((function(){return-2e-17!=!Math.sinh(-2e-17)})),"Math",{sinh:function(e){return Math.abs(e=+e)<1?(o(e)-o(-e))/2:(i(e-1)-i(-e-1))*(Math.E/2)}})},function(e,t,r){var n=r(1),o=r(90),i=Math.exp;n(n.S,"Math",{tanh:function(e){var t=o(e=+e),r=o(-e);return t==1/0?1:r==1/0?-1:(t-r)/(i(e)+i(-e))}})},function(e,t,r){var n=r(1);n(n.S,"Math",{trunc:function(e){return(e>0?Math.floor:Math.ceil)(e)}})},function(e,t,r){var n=r(1),o=r(43),i=String.fromCharCode,a=String.fromCodePoint;n(n.S+n.F*(!!a&&1!=a.length),"String",{fromCodePoint:function(e){for(var t,r=[],n=arguments.length,a=0;n>a;){if(t=+arguments[a++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");r.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return r.join("")}})},function(e,t,r){var n=r(1),o=r(22),i=r(11);n(n.S,"String",{raw:function(e){for(var t=o(e.raw),r=i(t.length),n=arguments.length,a=[],l=0;r>l;)a.push(String(t[l++])),l<n&&a.push(String(arguments[l]));return a.join("")}})},function(e,t,r){"use strict";r(53)("trim",(function(e){return function(){return e(this,3)}}))},function(e,t,r){"use strict";var n=r(68)(!0);r(91)(String,"String",(function(e){this._t=String(e),this._i=0}),(function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=n(t,r),this._i+=e.length,{value:e,done:!1})}))},function(e,t,r){"use strict";var n=r(1),o=r(68)(!1);n(n.P,"String",{codePointAt:function(e){return o(this,e)}})},function(e,t,r){"use strict";var n=r(1),o=r(11),i=r(93),a="".endsWith;n(n.P+n.F*r(94)("endsWith"),"String",{endsWith:function(e){var t=i(this,e,"endsWith"),r=arguments.length>1?arguments[1]:void 0,n=o(t.length),l=void 0===r?n:Math.min(o(r),n),c=String(e);return a?a.call(t,c,l):t.slice(l-c.length,l)===c}})},function(e,t,r){"use strict";var n=r(1),o=r(93);n(n.P+n.F*r(94)("includes"),"String",{includes:function(e){return!!~o(this,e,"includes").indexOf(e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){var n=r(1);n(n.P,"String",{repeat:r(88)})},function(e,t,r){"use strict";var n=r(1),o=r(11),i=r(93),a="".startsWith;n(n.P+n.F*r(94)("startsWith"),"String",{startsWith:function(e){var t=i(this,e,"startsWith"),r=o(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return a?a.call(t,n,r):t.slice(r,r+n.length)===n}})},function(e,t,r){"use strict";r(19)("anchor",(function(e){return function(t){return e(this,"a","name",t)}}))},function(e,t,r){"use strict";r(19)("big",(function(e){return function(){return e(this,"big","","")}}))},function(e,t,r){"use strict";r(19)("blink",(function(e){return function(){return e(this,"blink","","")}}))},function(e,t,r){"use strict";r(19)("bold",(function(e){return function(){return e(this,"b","","")}}))},function(e,t,r){"use strict";r(19)("fixed",(function(e){return function(){return e(this,"tt","","")}}))},function(e,t,r){"use strict";r(19)("fontcolor",(function(e){return function(t){return e(this,"font","color",t)}}))},function(e,t,r){"use strict";r(19)("fontsize",(function(e){return function(t){return e(this,"font","size",t)}}))},function(e,t,r){"use strict";r(19)("italics",(function(e){return function(){return e(this,"i","","")}}))},function(e,t,r){"use strict";r(19)("link",(function(e){return function(t){return e(this,"a","href",t)}}))},function(e,t,r){"use strict";r(19)("small",(function(e){return function(){return e(this,"small","","")}}))},function(e,t,r){"use strict";r(19)("strike",(function(e){return function(){return e(this,"strike","","")}}))},function(e,t,r){"use strict";r(19)("sub",(function(e){return function(){return e(this,"sub","","")}}))},function(e,t,r){"use strict";r(19)("sup",(function(e){return function(){return e(this,"sup","","")}}))},function(e,t,r){var n=r(1);n(n.S,"Date",{now:function(){return(new Date).getTime()}})},function(e,t,r){"use strict";var n=r(1),o=r(14),i=r(30);n(n.P+n.F*r(7)((function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})})),"Date",{toJSON:function(e){var t=o(this),r=i(t);return"number"!=typeof r||isFinite(r)?t.toISOString():null}})},function(e,t,r){var n=r(1),o=r(253);n(n.P+n.F*(Date.prototype.toISOString!==o),"Date",{toISOString:o})},function(e,t,r){"use strict";var n=r(7),o=Date.prototype.getTime,i=Date.prototype.toISOString,a=function(e){return e>9?e:"0"+e};e.exports=n((function(){return"0385-07-25T07:06:39.999Z"!=i.call(new Date(-50000000000001))}))||!n((function(){i.call(new Date(NaN))}))?function(){if(!isFinite(o.call(this)))throw RangeError("Invalid time value");var e=this,t=e.getUTCFullYear(),r=e.getUTCMilliseconds(),n=t<0?"-":t>9999?"+":"";return n+("00000"+Math.abs(t)).slice(n?-6:-4)+"-"+a(e.getUTCMonth()+1)+"-"+a(e.getUTCDate())+"T"+a(e.getUTCHours())+":"+a(e.getUTCMinutes())+":"+a(e.getUTCSeconds())+"."+(r>99?r:"0"+a(r))+"Z"}:i},function(e,t,r){var n=Date.prototype,o=n.toString,i=n.getTime;new Date(NaN)+""!="Invalid Date"&&r(18)(n,"toString",(function(){var e=i.call(this);return e==e?o.call(this):"Invalid Date"}))},function(e,t,r){var n=r(9)("toPrimitive"),o=Date.prototype;n in o||r(17)(o,n,r(256))},function(e,t,r){"use strict";var n=r(4),o=r(30);e.exports=function(e){if("string"!==e&&"number"!==e&&"default"!==e)throw TypeError("Incorrect hint");return o(n(this),"number"!=e)}},function(e,t,r){var n=r(1);n(n.S,"Array",{isArray:r(67)})},function(e,t,r){"use strict";var n=r(26),o=r(1),i=r(14),a=r(127),l=r(95),c=r(11),u=r(96),s=r(97);o(o.S+o.F*!r(70)((function(e){Array.from(e)})),"Array",{from:function(e){var t,r,o,f,d=i(e),p="function"==typeof this?this:Array,m=arguments.length,g=m>1?arguments[1]:void 0,b=void 0!==g,h=0,v=s(d);if(b&&(g=n(g,m>2?arguments[2]:void 0,2)),null==v||p==Array&&l(v))for(r=new p(t=c(d.length));t>h;h++)u(r,h,b?g(d[h],h):d[h]);else for(f=v.call(d),r=new p;!(o=f.next()).done;h++)u(r,h,b?a(f,g,[o.value,h],!0):o.value);return r.length=h,r}})},function(e,t,r){"use strict";var n=r(1),o=r(96);n(n.S+n.F*r(7)((function(){function e(){}return!(Array.of.call(e)instanceof e)})),"Array",{of:function(){for(var e=0,t=arguments.length,r=new("function"==typeof this?this:Array)(t);t>e;)o(r,e,arguments[e++]);return r.length=t,r}})},function(e,t,r){"use strict";var n=r(1),o=r(22),i=[].join;n(n.P+n.F*(r(59)!=Object||!r(29)(i)),"Array",{join:function(e){return i.call(o(this),void 0===e?",":e)}})},function(e,t,r){"use strict";var n=r(1),o=r(84),i=r(27),a=r(43),l=r(11),c=[].slice;n(n.P+n.F*r(7)((function(){o&&c.call(o)})),"Array",{slice:function(e,t){var r=l(this.length),n=i(this);if(t=void 0===t?r:t,"Array"==n)return c.call(this,e,t);for(var o=a(e,r),u=a(t,r),s=l(u-o),f=new Array(s),d=0;d<s;d++)f[d]="String"==n?this.charAt(o+d):this[o+d];return f}})},function(e,t,r){"use strict";var n=r(1),o=r(16),i=r(14),a=r(7),l=[].sort,c=[1,2,3];n(n.P+n.F*(a((function(){c.sort(void 0)}))||!a((function(){c.sort(null)}))||!r(29)(l)),"Array",{sort:function(e){return void 0===e?l.call(i(this)):l.call(i(this),o(e))}})},function(e,t,r){"use strict";var n=r(1),o=r(33)(0),i=r(29)([].forEach,!0);n(n.P+n.F*!i,"Array",{forEach:function(e){return o(this,e,arguments[1])}})},function(e,t,r){var n=r(8),o=r(67),i=r(9)("species");e.exports=function(e){var t;return o(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!o(t.prototype)||(t=void 0),n(t)&&null===(t=t[i])&&(t=void 0)),void 0===t?Array:t}},function(e,t,r){"use strict";var n=r(1),o=r(33)(1);n(n.P+n.F*!r(29)([].map,!0),"Array",{map:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(1),o=r(33)(2);n(n.P+n.F*!r(29)([].filter,!0),"Array",{filter:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(1),o=r(33)(3);n(n.P+n.F*!r(29)([].some,!0),"Array",{some:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(1),o=r(33)(4);n(n.P+n.F*!r(29)([].every,!0),"Array",{every:function(e){return o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(1),o=r(128);n(n.P+n.F*!r(29)([].reduce,!0),"Array",{reduce:function(e){return o(this,e,arguments.length,arguments[1],!1)}})},function(e,t,r){"use strict";var n=r(1),o=r(128);n(n.P+n.F*!r(29)([].reduceRight,!0),"Array",{reduceRight:function(e){return o(this,e,arguments.length,arguments[1],!0)}})},function(e,t,r){"use strict";var n=r(1),o=r(65)(!1),i=[].indexOf,a=!!i&&1/[1].indexOf(1,-0)<0;n(n.P+n.F*(a||!r(29)(i)),"Array",{indexOf:function(e){return a?i.apply(this,arguments)||0:o(this,e,arguments[1])}})},function(e,t,r){"use strict";var n=r(1),o=r(22),i=r(28),a=r(11),l=[].lastIndexOf,c=!!l&&1/[1].lastIndexOf(1,-0)<0;n(n.P+n.F*(c||!r(29)(l)),"Array",{lastIndexOf:function(e){if(c)return l.apply(this,arguments)||0;var t=o(this),r=a(t.length),n=r-1;for(arguments.length>1&&(n=Math.min(n,i(arguments[1]))),n<0&&(n=r+n);n>=0;n--)if(n in t&&t[n]===e)return n||0;return-1}})},function(e,t,r){var n=r(1);n(n.P,"Array",{copyWithin:r(129)}),r(38)("copyWithin")},function(e,t,r){var n=r(1);n(n.P,"Array",{fill:r(99)}),r(38)("fill")},function(e,t,r){"use strict";var n=r(1),o=r(33)(5),i=!0;"find"in[]&&Array(1).find((function(){i=!1})),n(n.P+n.F*i,"Array",{find:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r(38)("find")},function(e,t,r){"use strict";var n=r(1),o=r(33)(6),i="findIndex",a=!0;i in[]&&Array(1)[i]((function(){a=!1})),n(n.P+n.F*a,"Array",{findIndex:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r(38)(i)},function(e,t,r){r(46)("Array")},function(e,t,r){var n=r(5),o=r(87),i=r(13).f,a=r(45).f,l=r(69),c=r(61),u=n.RegExp,s=u,f=u.prototype,d=/a/g,p=/a/g,m=new u(d)!==d;if(r(12)&&(!m||r(7)((function(){return p[r(9)("match")]=!1,u(d)!=d||u(p)==p||"/a/i"!=u(d,"i")})))){u=function(e,t){var r=this instanceof u,n=l(e),i=void 0===t;return!r&&n&&e.constructor===u&&i?e:o(m?new s(n&&!i?e.source:e,t):s((n=e instanceof u)?e.source:e,n&&i?c.call(e):t),r?this:f,u)};for(var g=function(e){e in u||i(u,e,{configurable:!0,get:function(){return s[e]},set:function(t){s[e]=t}})},b=a(s),h=0;b.length>h;)g(b[h++]);f.constructor=u,u.prototype=f,r(18)(n,"RegExp",u)}r(46)("RegExp")},function(e,t,r){"use strict";r(132);var n=r(4),o=r(61),i=r(12),a=/./.toString,l=function(e){r(18)(RegExp.prototype,"toString",e,!0)};r(7)((function(){return"/a/b"!=a.call({source:"a",flags:"b"})}))?l((function(){var e=n(this);return"/".concat(e.source,"/","flags"in e?e.flags:!i&&e instanceof RegExp?o.call(e):void 0)})):"toString"!=a.name&&l((function(){return a.call(this)}))},function(e,t,r){"use strict";var n=r(4),o=r(11),i=r(102),a=r(71);r(72)("match",1,(function(e,t,r,l){return[function(r){var n=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},function(e){var t=l(r,e,this);if(t.done)return t.value;var c=n(e),u=String(this);if(!c.global)return a(c,u);var s=c.unicode;c.lastIndex=0;for(var f,d=[],p=0;null!==(f=a(c,u));){var m=String(f[0]);d[p]=m,""===m&&(c.lastIndex=i(u,o(c.lastIndex),s)),p++}return 0===p?null:d}]}))},function(e,t,r){"use strict";var n=r(4),o=r(14),i=r(11),a=r(28),l=r(102),c=r(71),u=Math.max,s=Math.min,f=Math.floor,d=/\$([$&`']|\d\d?|<[^>]*>)/g,p=/\$([$&`']|\d\d?)/g;r(72)("replace",2,(function(e,t,r,m){return[function(n,o){var i=e(this),a=null==n?void 0:n[t];return void 0!==a?a.call(n,i,o):r.call(String(i),n,o)},function(e,t){var o=m(r,e,this,t);if(o.done)return o.value;var f=n(e),d=String(this),p="function"==typeof t;p||(t=String(t));var b=f.global;if(b){var h=f.unicode;f.lastIndex=0}for(var v=[];;){var y=c(f,d);if(null===y)break;if(v.push(y),!b)break;""===String(y[0])&&(f.lastIndex=l(d,i(f.lastIndex),h))}for(var x,w="",k=0,E=0;E<v.length;E++){y=v[E];for(var S=String(y[0]),O=u(s(a(y.index),d.length),0),j=[],T=1;T<y.length;T++)j.push(void 0===(x=y[T])?x:String(x));var C=y.groups;if(p){var P=[S].concat(j,O,d);void 0!==C&&P.push(C);var _=String(t.apply(void 0,P))}else _=g(S,d,O,j,C,t);O>=k&&(w+=d.slice(k,O)+_,k=O+S.length)}return w+d.slice(k)}];function g(e,t,n,i,a,l){var c=n+e.length,u=i.length,s=p;return void 0!==a&&(a=o(a),s=d),r.call(l,s,(function(r,o){var l;switch(o.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,n);case"'":return t.slice(c);case"<":l=a[o.slice(1,-1)];break;default:var s=+o;if(0===s)return r;if(s>u){var d=f(s/10);return 0===d?r:d<=u?void 0===i[d-1]?o.charAt(1):i[d-1]+o.charAt(1):r}l=i[s-1]}return void 0===l?"":l}))}}))},function(e,t,r){"use strict";var n=r(4),o=r(118),i=r(71);r(72)("search",1,(function(e,t,r,a){return[function(r){var n=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},function(e){var t=a(r,e,this);if(t.done)return t.value;var l=n(e),c=String(this),u=l.lastIndex;o(u,0)||(l.lastIndex=0);var s=i(l,c);return o(l.lastIndex,u)||(l.lastIndex=u),null===s?-1:s.index}]}))},function(e,t,r){"use strict";var n=r(69),o=r(4),i=r(62),a=r(102),l=r(11),c=r(71),u=r(101),s=r(7),f=Math.min,d=[].push,p="length",m=!s((function(){RegExp(4294967295,"y")}));r(72)("split",2,(function(e,t,r,s){var g;return g="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1)[p]||2!="ab".split(/(?:ab)*/)[p]||4!=".".split(/(.?)(.?)/)[p]||".".split(/()()/)[p]>1||"".split(/.?/)[p]?function(e,t){var o=String(this);if(void 0===e&&0===t)return[];if(!n(e))return r.call(o,e,t);for(var i,a,l,c=[],s=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),f=0,m=void 0===t?4294967295:t>>>0,g=new RegExp(e.source,s+"g");(i=u.call(g,o))&&!((a=g.lastIndex)>f&&(c.push(o.slice(f,i.index)),i[p]>1&&i.index<o[p]&&d.apply(c,i.slice(1)),l=i[0][p],f=a,c[p]>=m));)g.lastIndex===i.index&&g.lastIndex++;return f===o[p]?!l&&g.test("")||c.push(""):c.push(o.slice(f)),c[p]>m?c.slice(0,m):c}:"0".split(void 0,0)[p]?function(e,t){return void 0===e&&0===t?[]:r.call(this,e,t)}:r,[function(r,n){var o=e(this),i=null==r?void 0:r[t];return void 0!==i?i.call(r,o,n):g.call(String(o),r,n)},function(e,t){var n=s(g,e,this,t,g!==r);if(n.done)return n.value;var u=o(e),d=String(this),p=i(u,RegExp),b=u.unicode,h=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(m?"y":"g"),v=new p(m?u:"^(?:"+u.source+")",h),y=void 0===t?4294967295:t>>>0;if(0===y)return[];if(0===d.length)return null===c(v,d)?[d]:[];for(var x=0,w=0,k=[];w<d.length;){v.lastIndex=m?w:0;var E,S=c(v,m?d:d.slice(w));if(null===S||(E=f(l(v.lastIndex+(m?0:w)),d.length))===x)w=a(d,w,b);else{if(k.push(d.slice(x,w)),k.length===y)return k;for(var O=1;O<=S.length-1;O++)if(k.push(S[O]),k.length===y)return k;w=x=E}}return k.push(d.slice(x)),k}]}))},function(e,t,r){"use strict";var n,o,i,a,l=r(36),c=r(5),u=r(26),s=r(52),f=r(1),d=r(8),p=r(16),m=r(47),g=r(48),b=r(62),h=r(103).set,v=r(104)(),y=r(105),x=r(133),w=r(73),k=r(134),E=c.TypeError,S=c.process,O=S&&S.versions,j=O&&O.v8||"",T=c.Promise,C="process"==s(S),P=function(){},_=o=y.f,N=!!function(){try{var e=T.resolve(1),t=(e.constructor={})[r(9)("species")]=function(e){e(P,P)};return(C||"function"==typeof PromiseRejectionEvent)&&e.then(P)instanceof t&&0!==j.indexOf("6.6")&&-1===w.indexOf("Chrome/66")}catch(e){}}(),M=function(e){var t;return!(!d(e)||"function"!=typeof(t=e.then))&&t},A=function(e,t){if(!e._n){e._n=!0;var r=e._c;v((function(){for(var n=e._v,o=1==e._s,i=0,a=function(t){var r,i,a,l=o?t.ok:t.fail,c=t.resolve,u=t.reject,s=t.domain;try{l?(o||(2==e._h&&I(e),e._h=1),!0===l?r=n:(s&&s.enter(),r=l(n),s&&(s.exit(),a=!0)),r===t.promise?u(E("Promise-chain cycle")):(i=M(r))?i.call(r,c,u):c(r)):u(n)}catch(e){s&&!a&&s.exit(),u(e)}};r.length>i;)a(r[i++]);e._c=[],e._n=!1,t&&!e._h&&R(e)}))}},R=function(e){h.call(c,(function(){var t,r,n,o=e._v,i=z(e);if(i&&(t=x((function(){C?S.emit("unhandledRejection",o,e):(r=c.onunhandledrejection)?r({promise:e,reason:o}):(n=c.console)&&n.error&&n.error("Unhandled promise rejection",o)})),e._h=C||z(e)?2:1),e._a=void 0,i&&t.e)throw t.v}))},z=function(e){return 1!==e._h&&0===(e._a||e._c).length},I=function(e){h.call(c,(function(){var t;C?S.emit("rejectionHandled",e):(t=c.onrejectionhandled)&&t({promise:e,reason:e._v})}))},F=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),A(t,!0))},D=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw E("Promise can't be resolved itself");(t=M(e))?v((function(){var n={_w:r,_d:!1};try{t.call(e,u(D,n,1),u(F,n,1))}catch(e){F.call(n,e)}})):(r._v=e,r._s=1,A(r,!1))}catch(e){F.call({_w:r,_d:!1},e)}}};N||(T=function(e){m(this,T,"Promise","_h"),p(e),n.call(this);try{e(u(D,this,1),u(F,this,1))}catch(e){F.call(this,e)}},(n=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1}).prototype=r(49)(T.prototype,{then:function(e,t){var r=_(b(this,T));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=C?S.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&A(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),i=function(){var e=new n;this.promise=e,this.resolve=u(D,e,1),this.reject=u(F,e,1)},y.f=_=function(e){return e===T||e===a?new i(e):o(e)}),f(f.G+f.W+f.F*!N,{Promise:T}),r(51)(T,"Promise"),r(46)("Promise"),a=r(25).Promise,f(f.S+f.F*!N,"Promise",{reject:function(e){var t=_(this);return(0,t.reject)(e),t.promise}}),f(f.S+f.F*(l||!N),"Promise",{resolve:function(e){return k(l&&this===a?T:this,e)}}),f(f.S+f.F*!(N&&r(70)((function(e){T.all(e).catch(P)}))),"Promise",{all:function(e){var t=this,r=_(t),n=r.resolve,o=r.reject,i=x((function(){var r=[],i=0,a=1;g(e,!1,(function(e){var l=i++,c=!1;r.push(void 0),a++,t.resolve(e).then((function(e){c||(c=!0,r[l]=e,--a||n(r))}),o)})),--a||n(r)}));return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=_(t),n=r.reject,o=x((function(){g(e,!1,(function(e){t.resolve(e).then(r.resolve,n)}))}));return o.e&&n(o.v),r.promise}})},function(e,t,r){"use strict";var n=r(139),o=r(50);r(74)("WeakSet",(function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}}),{add:function(e){return n.def(o(this,"WeakSet"),e,!0)}},n,!1,!0)},function(e,t,r){"use strict";var n=r(1),o=r(75),i=r(106),a=r(4),l=r(43),c=r(11),u=r(8),s=r(5).ArrayBuffer,f=r(62),d=i.ArrayBuffer,p=i.DataView,m=o.ABV&&s.isView,g=d.prototype.slice,b=o.VIEW;n(n.G+n.W+n.F*(s!==d),{ArrayBuffer:d}),n(n.S+n.F*!o.CONSTR,"ArrayBuffer",{isView:function(e){return m&&m(e)||u(e)&&b in e}}),n(n.P+n.U+n.F*r(7)((function(){return!new d(2).slice(1,void 0).byteLength})),"ArrayBuffer",{slice:function(e,t){if(void 0!==g&&void 0===t)return g.call(a(this),e);for(var r=a(this).byteLength,n=l(e,r),o=l(void 0===t?r:t,r),i=new(f(this,d))(c(o-n)),u=new p(this),s=new p(i),m=0;n<o;)s.setUint8(m++,u.getUint8(n++));return i}}),r(46)("ArrayBuffer")},function(e,t,r){var n=r(1);n(n.G+n.W+n.F*!r(75).ABV,{DataView:r(106).DataView})},function(e,t,r){r(34)("Int8",1,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Uint8",1,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Uint8",1,(function(e){return function(t,r,n){return e(this,t,r,n)}}),!0)},function(e,t,r){r(34)("Int16",2,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Uint16",2,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Int32",4,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Uint32",4,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Float32",4,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){r(34)("Float64",8,(function(e){return function(t,r,n){return e(this,t,r,n)}}))},function(e,t,r){var n=r(1),o=r(16),i=r(4),a=(r(5).Reflect||{}).apply,l=Function.apply;n(n.S+n.F*!r(7)((function(){a((function(){}))})),"Reflect",{apply:function(e,t,r){var n=o(e),c=i(r);return a?a(n,t,c):l.call(n,t,c)}})},function(e,t,r){var n=r(1),o=r(44),i=r(16),a=r(4),l=r(8),c=r(7),u=r(119),s=(r(5).Reflect||{}).construct,f=c((function(){function e(){}return!(s((function(){}),[],e)instanceof e)})),d=!c((function(){s((function(){}))}));n(n.S+n.F*(f||d),"Reflect",{construct:function(e,t){i(e),a(t);var r=arguments.length<3?e:i(arguments[2]);if(d&&!f)return s(e,t,r);if(e==r){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3])}var n=[null];return n.push.apply(n,t),new(u.apply(e,n))}var c=r.prototype,p=o(l(c)?c:Object.prototype),m=Function.apply.call(e,p,t);return l(m)?m:p}})},function(e,t,r){var n=r(13),o=r(1),i=r(4),a=r(30);o(o.S+o.F*r(7)((function(){Reflect.defineProperty(n.f({},1,{value:1}),1,{value:2})})),"Reflect",{defineProperty:function(e,t,r){i(e),t=a(t,!0),i(r);try{return n.f(e,t,r),!0}catch(e){return!1}}})},function(e,t,r){var n=r(1),o=r(23).f,i=r(4);n(n.S,"Reflect",{deleteProperty:function(e,t){var r=o(i(e),t);return!(r&&!r.configurable)&&delete e[t]}})},function(e,t,r){"use strict";var n=r(1),o=r(4),i=function(e){this._t=o(e),this._i=0;var t,r=this._k=[];for(t in e)r.push(t)};r(92)(i,"Object",(function(){var e,t=this._k;do{if(this._i>=t.length)return{value:void 0,done:!0}}while(!((e=t[this._i++])in this._t));return{value:e,done:!1}})),n(n.S,"Reflect",{enumerate:function(e){return new i(e)}})},function(e,t,r){var n=r(23),o=r(24),i=r(21),a=r(1),l=r(8),c=r(4);a(a.S,"Reflect",{get:function e(t,r){var a,u,s=arguments.length<3?t:arguments[2];return c(t)===s?t[r]:(a=n.f(t,r))?i(a,"value")?a.value:void 0!==a.get?a.get.call(s):void 0:l(u=o(t))?e(u,r,s):void 0}})},function(e,t,r){var n=r(23),o=r(1),i=r(4);o(o.S,"Reflect",{getOwnPropertyDescriptor:function(e,t){return n.f(i(e),t)}})},function(e,t,r){var n=r(1),o=r(24),i=r(4);n(n.S,"Reflect",{getPrototypeOf:function(e){return o(i(e))}})},function(e,t,r){var n=r(1);n(n.S,"Reflect",{has:function(e,t){return t in e}})},function(e,t,r){var n=r(1),o=r(4),i=Object.isExtensible;n(n.S,"Reflect",{isExtensible:function(e){return o(e),!i||i(e)}})},function(e,t,r){var n=r(1);n(n.S,"Reflect",{ownKeys:r(141)})},function(e,t,r){var n=r(1),o=r(4),i=Object.preventExtensions;n(n.S,"Reflect",{preventExtensions:function(e){o(e);try{return i&&i(e),!0}catch(e){return!1}}})},function(e,t,r){var n=r(13),o=r(23),i=r(24),a=r(21),l=r(1),c=r(40),u=r(4),s=r(8);l(l.S,"Reflect",{set:function e(t,r,l){var f,d,p=arguments.length<4?t:arguments[3],m=o.f(u(t),r);if(!m){if(s(d=i(t)))return e(d,r,l,p);m=c(0)}if(a(m,"value")){if(!1===m.writable||!s(p))return!1;if(f=o.f(p,r)){if(f.get||f.set||!1===f.writable)return!1;f.value=l,n.f(p,r,f)}else n.f(p,r,c(0,l));return!0}return void 0!==m.set&&(m.set.call(p,l),!0)}})},function(e,t,r){var n=r(1),o=r(85);o&&n(n.S,"Reflect",{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(e){return!1}}})},function(e,t,r){"use strict";var n=r(1),o=r(65)(!0);n(n.P,"Array",{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),r(38)("includes")},function(e,t,r){"use strict";var n=r(1),o=r(142),i=r(14),a=r(11),l=r(16),c=r(98);n(n.P,"Array",{flatMap:function(e){var t,r,n=i(this);return l(e),t=a(n.length),r=c(n,0),o(r,n,n,t,0,1,e,arguments[1]),r}}),r(38)("flatMap")},function(e,t,r){"use strict";var n=r(1),o=r(142),i=r(14),a=r(11),l=r(28),c=r(98);n(n.P,"Array",{flatten:function(){var e=arguments[0],t=i(this),r=a(t.length),n=c(t,0);return o(n,t,t,r,0,void 0===e?1:l(e)),n}}),r(38)("flatten")},function(e,t,r){"use strict";var n=r(1),o=r(68)(!0);n(n.P,"String",{at:function(e){return o(this,e)}})},function(e,t,r){"use strict";var n=r(1),o=r(143),i=r(73),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);n(n.P+n.F*a,"String",{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!0)}})},function(e,t,r){"use strict";var n=r(1),o=r(143),i=r(73),a=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(i);n(n.P+n.F*a,"String",{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0,!1)}})},function(e,t,r){"use strict";r(53)("trimLeft",(function(e){return function(){return e(this,1)}}),"trimStart")},function(e,t,r){"use strict";r(53)("trimRight",(function(e){return function(){return e(this,2)}}),"trimEnd")},function(e,t,r){"use strict";var n=r(1),o=r(31),i=r(11),a=r(69),l=r(61),c=RegExp.prototype,u=function(e,t){this._r=e,this._s=t};r(92)(u,"RegExp String",(function(){var e=this._r.exec(this._s);return{value:e,done:null===e}})),n(n.P,"String",{matchAll:function(e){if(o(this),!a(e))throw TypeError(e+" is not a regexp!");var t=String(this),r="flags"in c?String(e.flags):l.call(e),n=new RegExp(e.source,~r.indexOf("g")?r:"g"+r);return n.lastIndex=i(e.lastIndex),new u(n,t)}})},function(e,t,r){r(81)("asyncIterator")},function(e,t,r){r(81)("observable")},function(e,t,r){var n=r(1),o=r(141),i=r(22),a=r(23),l=r(96);n(n.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,r,n=i(e),c=a.f,u=o(n),s={},f=0;u.length>f;)void 0!==(r=c(n,t=u[f++]))&&l(s,t,r);return s}})},function(e,t,r){var n=r(1),o=r(144)(!1);n(n.S,"Object",{values:function(e){return o(e)}})},function(e,t,r){var n=r(1),o=r(144)(!0);n(n.S,"Object",{entries:function(e){return o(e)}})},function(e,t,r){"use strict";var n=r(1),o=r(14),i=r(16),a=r(13);r(12)&&n(n.P+r(76),"Object",{__defineGetter__:function(e,t){a.f(o(this),e,{get:i(t),enumerable:!0,configurable:!0})}})},function(e,t,r){"use strict";var n=r(1),o=r(14),i=r(16),a=r(13);r(12)&&n(n.P+r(76),"Object",{__defineSetter__:function(e,t){a.f(o(this),e,{set:i(t),enumerable:!0,configurable:!0})}})},function(e,t,r){"use strict";var n=r(1),o=r(14),i=r(30),a=r(24),l=r(23).f;r(12)&&n(n.P+r(76),"Object",{__lookupGetter__:function(e){var t,r=o(this),n=i(e,!0);do{if(t=l(r,n))return t.get}while(r=a(r))}})},function(e,t,r){"use strict";var n=r(1),o=r(14),i=r(30),a=r(24),l=r(23).f;r(12)&&n(n.P+r(76),"Object",{__lookupSetter__:function(e){var t,r=o(this),n=i(e,!0);do{if(t=l(r,n))return t.set}while(r=a(r))}})},function(e,t,r){var n=r(1);n(n.P+n.R,"Map",{toJSON:r(145)("Map")})},function(e,t,r){var n=r(1);n(n.P+n.R,"Set",{toJSON:r(145)("Set")})},function(e,t,r){r(77)("Map")},function(e,t,r){r(77)("Set")},function(e,t,r){r(77)("WeakMap")},function(e,t,r){r(77)("WeakSet")},function(e,t,r){r(78)("Map")},function(e,t,r){r(78)("Set")},function(e,t,r){r(78)("WeakMap")},function(e,t,r){r(78)("WeakSet")},function(e,t,r){var n=r(1);n(n.G,{global:r(5)})},function(e,t,r){var n=r(1);n(n.S,"System",{global:r(5)})},function(e,t,r){var n=r(1),o=r(27);n(n.S,"Error",{isError:function(e){return"Error"===o(e)}})},function(e,t,r){var n=r(1);n(n.S,"Math",{clamp:function(e,t,r){return Math.min(r,Math.max(t,e))}})},function(e,t,r){var n=r(1);n(n.S,"Math",{DEG_PER_RAD:Math.PI/180})},function(e,t,r){var n=r(1),o=180/Math.PI;n(n.S,"Math",{degrees:function(e){return e*o}})},function(e,t,r){var n=r(1),o=r(147),i=r(126);n(n.S,"Math",{fscale:function(e,t,r,n,a){return i(o(e,t,r,n,a))}})},function(e,t,r){var n=r(1);n(n.S,"Math",{iaddh:function(e,t,r,n){var o=e>>>0,i=r>>>0;return(t>>>0)+(n>>>0)+((o&i|(o|i)&~(o+i>>>0))>>>31)|0}})},function(e,t,r){var n=r(1);n(n.S,"Math",{isubh:function(e,t,r,n){var o=e>>>0,i=r>>>0;return(t>>>0)-(n>>>0)-((~o&i|~(o^i)&o-i>>>0)>>>31)|0}})},function(e,t,r){var n=r(1);n(n.S,"Math",{imulh:function(e,t){var r=+e,n=+t,o=65535&r,i=65535&n,a=r>>16,l=n>>16,c=(a*i>>>0)+(o*i>>>16);return a*l+(c>>16)+((o*l>>>0)+(65535&c)>>16)}})},function(e,t,r){var n=r(1);n(n.S,"Math",{RAD_PER_DEG:180/Math.PI})},function(e,t,r){var n=r(1),o=Math.PI/180;n(n.S,"Math",{radians:function(e){return e*o}})},function(e,t,r){var n=r(1);n(n.S,"Math",{scale:r(147)})},function(e,t,r){var n=r(1);n(n.S,"Math",{umulh:function(e,t){var r=+e,n=+t,o=65535&r,i=65535&n,a=r>>>16,l=n>>>16,c=(a*i>>>0)+(o*i>>>16);return a*l+(c>>>16)+((o*l>>>0)+(65535&c)>>>16)}})},function(e,t,r){var n=r(1);n(n.S,"Math",{signbit:function(e){return(e=+e)!=e?e:0==e?1/e==1/0:e>0}})},function(e,t,r){"use strict";var n=r(1),o=r(25),i=r(5),a=r(62),l=r(134);n(n.P+n.R,"Promise",{finally:function(e){var t=a(this,o.Promise||i.Promise),r="function"==typeof e;return this.then(r?function(r){return l(t,e()).then((function(){return r}))}:e,r?function(r){return l(t,e()).then((function(){throw r}))}:e)}})},function(e,t,r){"use strict";var n=r(1),o=r(105),i=r(133);n(n.S,"Promise",{try:function(e){var t=o.f(this),r=i(e);return(r.e?t.reject:t.resolve)(r.v),t.promise}})},function(e,t,r){var n=r(35),o=r(4),i=n.key,a=n.set;n.exp({defineMetadata:function(e,t,r,n){a(e,t,o(r),i(n))}})},function(e,t,r){var n=r(35),o=r(4),i=n.key,a=n.map,l=n.store;n.exp({deleteMetadata:function(e,t){var r=arguments.length<3?void 0:i(arguments[2]),n=a(o(t),r,!1);if(void 0===n||!n.delete(e))return!1;if(n.size)return!0;var c=l.get(t);return c.delete(r),!!c.size||l.delete(t)}})},function(e,t,r){var n=r(35),o=r(4),i=r(24),a=n.has,l=n.get,c=n.key,u=function(e,t,r){if(a(e,t,r))return l(e,t,r);var n=i(t);return null!==n?u(e,n,r):void 0};n.exp({getMetadata:function(e,t){return u(e,o(t),arguments.length<3?void 0:c(arguments[2]))}})},function(e,t,r){var n=r(137),o=r(146),i=r(35),a=r(4),l=r(24),c=i.keys,u=i.key,s=function(e,t){var r=c(e,t),i=l(e);if(null===i)return r;var a=s(i,t);return a.length?r.length?o(new n(r.concat(a))):a:r};i.exp({getMetadataKeys:function(e){return s(a(e),arguments.length<2?void 0:u(arguments[1]))}})},function(e,t,r){var n=r(35),o=r(4),i=n.get,a=n.key;n.exp({getOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,r){var n=r(35),o=r(4),i=n.keys,a=n.key;n.exp({getOwnMetadataKeys:function(e){return i(o(e),arguments.length<2?void 0:a(arguments[1]))}})},function(e,t,r){var n=r(35),o=r(4),i=r(24),a=n.has,l=n.key,c=function(e,t,r){if(a(e,t,r))return!0;var n=i(t);return null!==n&&c(e,n,r)};n.exp({hasMetadata:function(e,t){return c(e,o(t),arguments.length<3?void 0:l(arguments[2]))}})},function(e,t,r){var n=r(35),o=r(4),i=n.has,a=n.key;n.exp({hasOwnMetadata:function(e,t){return i(e,o(t),arguments.length<3?void 0:a(arguments[2]))}})},function(e,t,r){var n=r(35),o=r(4),i=r(16),a=n.key,l=n.set;n.exp({metadata:function(e,t){return function(r,n){l(e,t,(void 0!==n?o:i)(r),a(n))}}})},function(e,t,r){var n=r(1),o=r(104)(),i=r(5).process,a="process"==r(27)(i);n(n.G,{asap:function(e){var t=a&&i.domain;o(t?t.bind(e):e)}})},function(e,t,r){"use strict";var n=r(1),o=r(5),i=r(25),a=r(104)(),l=r(9)("observable"),c=r(16),u=r(4),s=r(47),f=r(49),d=r(17),p=r(48),m=p.RETURN,g=function(e){return null==e?void 0:c(e)},b=function(e){var t=e._c;t&&(e._c=void 0,t())},h=function(e){return void 0===e._o},v=function(e){h(e)||(e._o=void 0,b(e))},y=function(e,t){u(e),this._c=void 0,this._o=e,e=new x(this);try{var r=t(e),n=r;null!=r&&("function"==typeof r.unsubscribe?r=function(){n.unsubscribe()}:c(r),this._c=r)}catch(t){return void e.error(t)}h(this)&&b(this)};y.prototype=f({},{unsubscribe:function(){v(this)}});var x=function(e){this._s=e};x.prototype=f({},{next:function(e){var t=this._s;if(!h(t)){var r=t._o;try{var n=g(r.next);if(n)return n.call(r,e)}catch(e){try{v(t)}finally{throw e}}}},error:function(e){var t=this._s;if(h(t))throw e;var r=t._o;t._o=void 0;try{var n=g(r.error);if(!n)throw e;e=n.call(r,e)}catch(e){try{b(t)}finally{throw e}}return b(t),e},complete:function(e){var t=this._s;if(!h(t)){var r=t._o;t._o=void 0;try{var n=g(r.complete);e=n?n.call(r,e):void 0}catch(e){try{b(t)}finally{throw e}}return b(t),e}}});var w=function(e){s(this,w,"Observable","_f")._f=c(e)};f(w.prototype,{subscribe:function(e){return new y(e,this._f)},forEach:function(e){var t=this;return new(i.Promise||o.Promise)((function(r,n){c(e);var o=t.subscribe({next:function(t){try{return e(t)}catch(e){n(e),o.unsubscribe()}},error:n,complete:r})}))}}),f(w,{from:function(e){var t="function"==typeof this?this:w,r=g(u(e)[l]);if(r){var n=u(r.call(e));return n.constructor===t?n:new t((function(e){return n.subscribe(e)}))}return new t((function(t){var r=!1;return a((function(){if(!r){try{if(p(e,!1,(function(e){if(t.next(e),r)return m}))===m)return}catch(e){if(r)throw e;return void t.error(e)}t.complete()}})),function(){r=!0}}))},of:function(){for(var e=0,t=arguments.length,r=new Array(t);e<t;)r[e]=arguments[e++];return new("function"==typeof this?this:w)((function(e){var t=!1;return a((function(){if(!t){for(var n=0;n<r.length;++n)if(e.next(r[n]),t)return;e.complete()}})),function(){t=!0}}))}}),d(w.prototype,l,(function(){return this})),n(n.G,{Observable:w}),r(46)("Observable")},function(e,t,r){var n=r(5),o=r(1),i=r(73),a=[].slice,l=/MSIE .\./.test(i),c=function(e){return function(t,r){var n=arguments.length>2,o=!!n&&a.call(arguments,2);return e(n?function(){("function"==typeof t?t:Function(t)).apply(this,o)}:t,r)}};o(o.G+o.B+o.F*l,{setTimeout:c(n.setTimeout),setInterval:c(n.setInterval)})},function(e,t,r){var n=r(1),o=r(103);n(n.G+n.B,{setImmediate:o.set,clearImmediate:o.clear})},function(e,t,r){for(var n=r(100),o=r(42),i=r(18),a=r(5),l=r(17),c=r(54),u=r(9),s=u("iterator"),f=u("toStringTag"),d=c.Array,p={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},m=o(p),g=0;g<m.length;g++){var b,h=m[g],v=p[h],y=a[h],x=y&&y.prototype;if(x&&(x[s]||l(x,s,d),x[f]||l(x,f,h),c[h]=d,v))for(b in n)x[b]||i(x,b,n[b],!0)}},function(e,t,r){(function(t){!function(t){"use strict";var r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",l=o.toStringTag||"@@toStringTag",c="object"==typeof e,u=t.regeneratorRuntime;if(u)c&&(e.exports=u);else{(u=t.regeneratorRuntime=c?e.exports:{}).wrap=g;var s={},f={};f[i]=function(){return this};var d=Object.getPrototypeOf,p=d&&d(d(j([])));p&&p!==r&&n.call(p,i)&&(f=p);var m=y.prototype=h.prototype=Object.create(f);v.prototype=m.constructor=y,y.constructor=v,y[l]=v.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,y):(e.__proto__=y,l in e||(e[l]="GeneratorFunction")),e.prototype=Object.create(m),e},u.awrap=function(e){return{__await:e}},x(w.prototype),w.prototype[a]=function(){return this},u.AsyncIterator=w,u.async=function(e,t,r,n){var o=new w(g(e,t,r,n));return u.isGeneratorFunction(t)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},x(m),m[l]="Generator",m[i]=function(){return this},m.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},u.values=j,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(S),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,n){return a.type="throw",a.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var l=n.call(i,"catchLoc"),c=n.call(i,"finallyLoc");if(l&&c){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,s):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),s},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),S(r),s}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;S(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:j(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),s}}}function g(e,t,r,n){var o=t&&t.prototype instanceof h?t:h,i=Object.create(o.prototype),a=new O(n||[]);return i._invoke=function(e,t,r){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return T()}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var l=k(a,r);if(l){if(l===s)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var c=b(e,t,r);if("normal"===c.type){if(n=r.done?"completed":"suspendedYield",c.arg===s)continue;return{value:c.arg,done:r.done}}"throw"===c.type&&(n="completed",r.method="throw",r.arg=c.arg)}}}(e,r,a),i}function b(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}function h(){}function v(){}function y(){}function x(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function w(e){function r(t,o,i,a){var l=b(e[t],e,o);if("throw"!==l.type){var c=l.arg,u=c.value;return u&&"object"==typeof u&&n.call(u,"__await")?Promise.resolve(u.__await).then((function(e){r("next",e,i,a)}),(function(e){r("throw",e,i,a)})):Promise.resolve(u).then((function(e){c.value=e,i(c)}),a)}a(l.arg)}var o;"object"==typeof t.process&&t.process.domain&&(r=t.process.domain.bind(r)),this._invoke=function(e,t){function n(){return new Promise((function(n,o){r(e,t,n,o)}))}return o=o?o.then(n,n):n()}}function k(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,k(e,t),"throw"===t.method))return s;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return s}var n=b(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,s;var o=n.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,s):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,s)}function E(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function S(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(E,this),this.reset(!0)}function j(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:T}}function T(){return{value:void 0,done:!0}}}("object"==typeof t?t:"object"==typeof window?window:"object"==typeof self?self:this)}).call(this,r(64))},function(e,t,r){r(372),e.exports=r(25).RegExp.escape},function(e,t,r){var n=r(1),o=r(373)(/[\\^$*+?.()|[\]{}]/g,"\\$&");n(n.S,"RegExp",{escape:function(e){return o(e)}})},function(e,t){e.exports=function(e,t){var r=t===Object(t)?function(e){return t[e]}:t;return function(t){return String(t).replace(e,r)}}},function(e,t,r){"use strict";e.exports=r(375)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n,o=(n=r(0))&&"object"==typeof n&&"default"in n?n.default:n;function i(e){return i.warnAboutHMRDisabled&&(i.warnAboutHMRDisabled=!0,console.error("React-Hot-Loader: misconfiguration detected, using production version in non-production environment."),console.error("React-Hot-Loader: Hot Module Replacement is not enabled.")),o.Children.only(e.children)}i.warnAboutHMRDisabled=!1;var a=function e(){return e.shouldWrapWithAppContainer?function(e){return function(t){return o.createElement(i,null,o.createElement(e,t))}}:function(e){return e}};a.shouldWrapWithAppContainer=!1;t.AppContainer=i,t.hot=a,t.areComponentsEqual=function(e,t){return e===t},t.setConfig=function(){},t.cold=function(e){return e},t.configureComponent=function(){}},function(e,t,r){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=r(148),o="function"==typeof Symbol&&Symbol.for,i=o?Symbol.for("react.element"):60103,a=o?Symbol.for("react.portal"):60106,l=o?Symbol.for("react.fragment"):60107,c=o?Symbol.for("react.strict_mode"):60108,u=o?Symbol.for("react.profiler"):60114,s=o?Symbol.for("react.provider"):60109,f=o?Symbol.for("react.context"):60110,d=o?Symbol.for("react.forward_ref"):60112,p=o?Symbol.for("react.suspense"):60113,m=o?Symbol.for("react.memo"):60115,g=o?Symbol.for("react.lazy"):60116,b="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},y={};function x(e,t,r){this.props=e,this.context=t,this.refs=y,this.updater=r||v}function w(){}function k(e,t,r){this.props=e,this.context=t,this.refs=y,this.updater=r||v}x.prototype.isReactComponent={},x.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,t,"setState")},x.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},w.prototype=x.prototype;var E=k.prototype=new w;E.constructor=k,n(E,x.prototype),E.isPureReactComponent=!0;var S={current:null},O=Object.prototype.hasOwnProperty,j={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,r){var n,o={},a=null,l=null;if(null!=t)for(n in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(a=""+t.key),t)O.call(t,n)&&!j.hasOwnProperty(n)&&(o[n]=t[n]);var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){for(var u=Array(c),s=0;s<c;s++)u[s]=arguments[s+2];o.children=u}if(e&&e.defaultProps)for(n in c=e.defaultProps)void 0===o[n]&&(o[n]=c[n]);return{$$typeof:i,type:e,key:a,ref:l,props:o,_owner:S.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===i}var P=/\/+/g,_=[];function N(e,t,r,n){if(_.length){var o=_.pop();return o.result=e,o.keyPrefix=t,o.func=r,o.context=n,o.count=0,o}return{result:e,keyPrefix:t,func:r,context:n,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>_.length&&_.push(e)}function A(e,t,r){return null==e?0:function e(t,r,n,o){var l=typeof t;"undefined"!==l&&"boolean"!==l||(t=null);var c=!1;if(null===t)c=!0;else switch(l){case"string":case"number":c=!0;break;case"object":switch(t.$$typeof){case i:case a:c=!0}}if(c)return n(o,t,""===r?"."+R(t,0):r),1;if(c=0,r=""===r?".":r+":",Array.isArray(t))for(var u=0;u<t.length;u++){var s=r+R(l=t[u],u);c+=e(l,s,n,o)}else if(null===t||"object"!=typeof t?s=null:s="function"==typeof(s=b&&t[b]||t["@@iterator"])?s:null,"function"==typeof s)for(t=s.call(t),u=0;!(l=t.next()).done;)c+=e(l=l.value,s=r+R(l,u++),n,o);else if("object"===l)throw n=""+t,Error(h(31,"[object Object]"===n?"object with keys {"+Object.keys(t).join(", ")+"}":n,""));return c}(e,"",t,r)}function R(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function z(e,t){e.func.call(e.context,t,e.count++)}function I(e,t,r){var n=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,n,r,(function(e){return e})):null!=e&&(C(e)&&(e=function(e,t){return{$$typeof:i,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(P,"$&/")+"/")+r)),n.push(e))}function F(e,t,r,n,o){var i="";null!=r&&(i=(""+r).replace(P,"$&/")+"/"),A(e,I,t=N(t,i,n,o)),M(t)}var D={current:null};function L(){var e=D.current;if(null===e)throw Error(h(321));return e}var U={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:S,IsSomeRendererActing:{current:!1},assign:n};t.Children={map:function(e,t,r){if(null==e)return e;var n=[];return F(e,n,null,t,r),n},forEach:function(e,t,r){if(null==e)return e;A(e,z,t=N(null,null,t,r)),M(t)},count:function(e){return A(e,(function(){return null}),null)},toArray:function(e){var t=[];return F(e,t,null,(function(e){return e})),t},only:function(e){if(!C(e))throw Error(h(143));return e}},t.Component=x,t.Fragment=l,t.Profiler=u,t.PureComponent=k,t.StrictMode=c,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,r){if(null==e)throw Error(h(267,e));var o=n({},e.props),a=e.key,l=e.ref,c=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,c=S.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)O.call(t,s)&&!j.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=r;else if(1<s){u=Array(s);for(var f=0;f<s;f++)u[f]=arguments[f+2];o.children=u}return{$$typeof:i,type:e.type,key:a,ref:l,props:o,_owner:c}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=T,t.createFactory=function(e){var t=T.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=C,t.lazy=function(e){return{$$typeof:g,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,r){return L().useImperativeHandle(e,t,r)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,r){return L().useReducer(e,t,r)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="16.13.1"},function(e,t,r){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=r(0),o=r(148),i=r(378);function a(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=1;r<arguments.length;r++)t+="&args[]="+encodeURIComponent(arguments[r]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!n)throw Error(a(227));function l(e,t,r,n,o,i,a,l,c){var u=Array.prototype.slice.call(arguments,3);try{t.apply(r,u)}catch(e){this.onError(e)}}var c=!1,u=null,s=!1,f=null,d={onError:function(e){c=!0,u=e}};function p(e,t,r,n,o,i,a,s,f){c=!1,u=null,l.apply(d,arguments)}var m=null,g=null,b=null;function h(e,t,r){var n=e.type||"unknown-event";e.currentTarget=b(r),function(e,t,r,n,o,i,l,d,m){if(p.apply(this,arguments),c){if(!c)throw Error(a(198));var g=u;c=!1,u=null,s||(s=!0,f=g)}}(n,t,void 0,e),e.currentTarget=null}var v=null,y={};function x(){if(v)for(var e in y){var t=y[e],r=v.indexOf(e);if(!(-1<r))throw Error(a(96,e));if(!k[r]){if(!t.extractEvents)throw Error(a(97,e));for(var n in k[r]=t,r=t.eventTypes){var o=void 0,i=r[n],l=t,c=n;if(E.hasOwnProperty(c))throw Error(a(99,c));E[c]=i;var u=i.phasedRegistrationNames;if(u){for(o in u)u.hasOwnProperty(o)&&w(u[o],l,c);o=!0}else i.registrationName?(w(i.registrationName,l,c),o=!0):o=!1;if(!o)throw Error(a(98,n,e))}}}}function w(e,t,r){if(S[e])throw Error(a(100,e));S[e]=t,O[e]=t.eventTypes[r].dependencies}var k=[],E={},S={},O={};function j(e){var t,r=!1;for(t in e)if(e.hasOwnProperty(t)){var n=e[t];if(!y.hasOwnProperty(t)||y[t]!==n){if(y[t])throw Error(a(102,t));y[t]=n,r=!0}}r&&x()}var T=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),C=null,P=null,_=null;function N(e){if(e=g(e)){if("function"!=typeof C)throw Error(a(280));var t=e.stateNode;t&&(t=m(t),C(e.stateNode,e.type,t))}}function M(e){P?_?_.push(e):_=[e]:P=e}function A(){if(P){var e=P,t=_;if(_=P=null,N(e),t)for(e=0;e<t.length;e++)N(t[e])}}function R(e,t){return e(t)}function z(e,t,r,n,o){return e(t,r,n,o)}function I(){}var F=R,D=!1,L=!1;function U(){null===P&&null===_||(I(),A())}function B(e,t,r){if(L)return e(t,r);L=!0;try{return F(e,t,r)}finally{L=!1,U()}}var W=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,$=Object.prototype.hasOwnProperty,H={},V={};function q(e,t,r,n,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=n,this.attributeNamespace=o,this.mustUseProperty=r,this.propertyName=e,this.type=t,this.sanitizeURL=i}var G={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){G[e]=new q(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];G[t]=new q(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){G[e]=new q(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){G[e]=new q(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){G[e]=new q(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){G[e]=new q(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){G[e]=new q(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){G[e]=new q(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){G[e]=new q(e,5,!1,e.toLowerCase(),null,!1)}));var K=/[\-:]([a-z])/g;function Q(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(K,Q);G[t]=new q(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(K,Q);G[t]=new q(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(K,Q);G[t]=new q(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){G[e]=new q(e,1,!1,e.toLowerCase(),null,!1)})),G.xlinkHref=new q("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){G[e]=new q(e,1,!1,e.toLowerCase(),null,!0)}));var Y=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function X(e,t,r,n){var o=G.hasOwnProperty(t)?G[t]:null;(null!==o?0===o.type:!n&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,r,n){if(null==t||function(e,t,r,n){if(null!==r&&0===r.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!n&&(null!==r?!r.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,r,n))return!0;if(n)return!1;if(null!==r)switch(r.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,r,o,n)&&(r=null),n||null===o?function(e){return!!$.call(V,e)||!$.call(H,e)&&(W.test(e)?V[e]=!0:(H[e]=!0,!1))}(t)&&(null===r?e.removeAttribute(t):e.setAttribute(t,""+r)):o.mustUseProperty?e[o.propertyName]=null===r?3!==o.type&&"":r:(t=o.attributeName,n=o.attributeNamespace,null===r?e.removeAttribute(t):(r=3===(o=o.type)||4===o&&!0===r?"":""+r,n?e.setAttributeNS(n,t,r):e.setAttribute(t,r))))}Y.hasOwnProperty("ReactCurrentDispatcher")||(Y.ReactCurrentDispatcher={current:null}),Y.hasOwnProperty("ReactCurrentBatchConfig")||(Y.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,te=Z?Symbol.for("react.portal"):60106,re=Z?Symbol.for("react.fragment"):60107,ne=Z?Symbol.for("react.strict_mode"):60108,oe=Z?Symbol.for("react.profiler"):60114,ie=Z?Symbol.for("react.provider"):60109,ae=Z?Symbol.for("react.context"):60110,le=Z?Symbol.for("react.concurrent_mode"):60111,ce=Z?Symbol.for("react.forward_ref"):60112,ue=Z?Symbol.for("react.suspense"):60113,se=Z?Symbol.for("react.suspense_list"):60120,fe=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,me="function"==typeof Symbol&&Symbol.iterator;function ge(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=me&&e[me]||e["@@iterator"])?e:null}function be(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case re:return"Fragment";case te:return"Portal";case oe:return"Profiler";case ne:return"StrictMode";case ue:return"Suspense";case se:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ae:return"Context.Consumer";case ie:return"Context.Provider";case ce:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return be(e.type);case pe:return be(e.render);case de:if(e=1===e._status?e._result:null)return be(e)}return null}function he(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var r="";break e;default:var n=e._debugOwner,o=e._debugSource,i=be(e.type);r=null,n&&(r=be(n.type)),n=i,i="",o?i=" (at "+o.fileName.replace(J,"")+":"+o.lineNumber+")":r&&(i=" (created by "+r+")"),r="\n    in "+(n||"Unknown")+i}t+=r,e=e.return}while(e);return t}function ve(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ye(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function xe(e){e._valueTracker||(e._valueTracker=function(e){var t=ye(e)?"checked":"value",r=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),n=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==r&&"function"==typeof r.get&&"function"==typeof r.set){var o=r.get,i=r.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){n=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:r.enumerable}),{getValue:function(){return n},setValue:function(e){n=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function we(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var r=t.getValue(),n="";return e&&(n=ye(e)?e.checked?"true":"false":e.value),(e=n)!==r&&(t.setValue(e),!0)}function ke(e,t){var r=t.checked;return o({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function Ee(e,t){var r=null==t.defaultValue?"":t.defaultValue,n=null!=t.checked?t.checked:t.defaultChecked;r=ve(null!=t.value?t.value:r),e._wrapperState={initialChecked:n,initialValue:r,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Se(e,t){null!=(t=t.checked)&&X(e,"checked",t,!1)}function Oe(e,t){Se(e,t);var r=ve(t.value),n=t.type;if(null!=r)"number"===n?(0===r&&""===e.value||e.value!=r)&&(e.value=""+r):e.value!==""+r&&(e.value=""+r);else if("submit"===n||"reset"===n)return void e.removeAttribute("value");t.hasOwnProperty("value")?Te(e,t.type,r):t.hasOwnProperty("defaultValue")&&Te(e,t.type,ve(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function je(e,t,r){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var n=t.type;if(!("submit"!==n&&"reset"!==n||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,r||t===e.value||(e.value=t),e.defaultValue=t}""!==(r=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==r&&(e.name=r)}function Te(e,t,r){"number"===t&&e.ownerDocument.activeElement===e||(null==r?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+r&&(e.defaultValue=""+r))}function Ce(e,t){return e=o({children:void 0},t),(t=function(e){var t="";return n.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Pe(e,t,r,n){if(e=e.options,t){t={};for(var o=0;o<r.length;o++)t["$"+r[o]]=!0;for(r=0;r<e.length;r++)o=t.hasOwnProperty("$"+e[r].value),e[r].selected!==o&&(e[r].selected=o),o&&n&&(e[r].defaultSelected=!0)}else{for(r=""+ve(r),t=null,o=0;o<e.length;o++){if(e[o].value===r)return e[o].selected=!0,void(n&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function _e(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(a(91));return o({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ne(e,t){var r=t.value;if(null==r){if(r=t.children,t=t.defaultValue,null!=r){if(null!=t)throw Error(a(92));if(Array.isArray(r)){if(!(1>=r.length))throw Error(a(93));r=r[0]}t=r}null==t&&(t=""),r=t}e._wrapperState={initialValue:ve(r)}}function Me(e,t){var r=ve(t.value),n=ve(t.defaultValue);null!=r&&((r=""+r)!==e.value&&(e.value=r),null==t.defaultValue&&e.defaultValue!==r&&(e.defaultValue=r)),null!=n&&(e.defaultValue=""+n)}function Ae(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var Re="http://www.w3.org/1999/xhtml",ze="http://www.w3.org/2000/svg";function Ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Fe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var De,Le=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,r,n,o){MSApp.execUnsafeLocalFunction((function(){return e(t,r)}))}:e}((function(e,t){if(e.namespaceURI!==ze||"innerHTML"in e)e.innerHTML=t;else{for((De=De||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=De.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var r=e.firstChild;if(r&&r===e.lastChild&&3===r.nodeType)return void(r.nodeValue=t)}e.textContent=t}function Be(e,t){var r={};return r[e.toLowerCase()]=t.toLowerCase(),r["Webkit"+e]="webkit"+t,r["Moz"+e]="moz"+t,r}var We={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},$e={},He={};function Ve(e){if($e[e])return $e[e];if(!We[e])return e;var t,r=We[e];for(t in r)if(r.hasOwnProperty(t)&&t in He)return $e[e]=r[t];return e}T&&(He=document.createElement("div").style,"AnimationEvent"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),"TransitionEvent"in window||delete We.transitionend.transition);var qe=Ve("animationend"),Ge=Ve("animationiteration"),Ke=Ve("animationstart"),Qe=Ve("transitionend"),Ye="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Xe=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Xe.get(e);return void 0===t&&(t=new Map,Xe.set(e,t)),t}function Ze(e){var t=e,r=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(r=t.return),e=t.return}while(e)}return 3===t.tag?r:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(a(188))}function rt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(a(188));return t!==e?null:e}for(var r=e,n=t;;){var o=r.return;if(null===o)break;var i=o.alternate;if(null===i){if(null!==(n=o.return)){r=n;continue}break}if(o.child===i.child){for(i=o.child;i;){if(i===r)return tt(o),e;if(i===n)return tt(o),t;i=i.sibling}throw Error(a(188))}if(r.return!==n.return)r=o,n=i;else{for(var l=!1,c=o.child;c;){if(c===r){l=!0,r=o,n=i;break}if(c===n){l=!0,n=o,r=i;break}c=c.sibling}if(!l){for(c=i.child;c;){if(c===r){l=!0,r=i,n=o;break}if(c===n){l=!0,n=i,r=o;break}c=c.sibling}if(!l)throw Error(a(189))}}if(r.alternate!==n)throw Error(a(190))}if(3!==r.tag)throw Error(a(188));return r.stateNode.current===r?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function nt(e,t){if(null==t)throw Error(a(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function ot(e,t,r){Array.isArray(e)?e.forEach(t,r):e&&t.call(r,e)}var it=null;function at(e){if(e){var t=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(t))for(var n=0;n<t.length&&!e.isPropagationStopped();n++)h(e,t[n],r[n]);else t&&h(e,t,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function lt(e){if(null!==e&&(it=nt(it,e)),e=it,it=null,e){if(ot(e,at),it)throw Error(a(95));if(s)throw e=f,s=!1,f=null,e}}function ct(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function ut(e){if(!T)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var st=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>st.length&&st.push(e)}function dt(e,t,r,n){if(st.length){var o=st.pop();return o.topLevelType=e,o.eventSystemFlags=n,o.nativeEvent=t,o.targetInst=r,o}return{topLevelType:e,eventSystemFlags:n,nativeEvent:t,targetInst:r,ancestors:[]}}function pt(e){var t=e.targetInst,r=t;do{if(!r){e.ancestors.push(r);break}var n=r;if(3===n.tag)n=n.stateNode.containerInfo;else{for(;n.return;)n=n.return;n=3!==n.tag?null:n.stateNode.containerInfo}if(!n)break;5!==(t=r.tag)&&6!==t||e.ancestors.push(r),r=jr(n)}while(r);for(r=0;r<e.ancestors.length;r++){t=e.ancestors[r];var o=ct(e.nativeEvent);n=e.topLevelType;var i=e.nativeEvent,a=e.eventSystemFlags;0===r&&(a|=64);for(var l=null,c=0;c<k.length;c++){var u=k[c];u&&(u=u.extractEvents(n,t,i,o,a))&&(l=nt(l,u))}lt(l)}}function mt(e,t,r){if(!r.has(e)){switch(e){case"scroll":Kt(t,"scroll",!0);break;case"focus":case"blur":Kt(t,"focus",!0),Kt(t,"blur",!0),r.set("blur",null),r.set("focus",null);break;case"cancel":case"close":ut(e)&&Kt(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ye.indexOf(e)&&Gt(e,t)}r.set(e,null)}}var gt,bt,ht,vt=!1,yt=[],xt=null,wt=null,kt=null,Et=new Map,St=new Map,Ot=[],jt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Tt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ct(e,t,r,n,o){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|r,nativeEvent:o,container:n}}function Pt(e,t){switch(e){case"focus":case"blur":xt=null;break;case"dragenter":case"dragleave":wt=null;break;case"mouseover":case"mouseout":kt=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":St.delete(t.pointerId)}}function _t(e,t,r,n,o,i){return null===e||e.nativeEvent!==i?(e=Ct(t,r,n,o,i),null!==t&&(null!==(t=Tr(t))&&bt(t)),e):(e.eventSystemFlags|=n,e)}function Nt(e){var t=jr(e.target);if(null!==t){var r=Ze(t);if(null!==r)if(13===(t=r.tag)){if(null!==(t=et(r)))return e.blockedOn=t,void i.unstable_runWithPriority(e.priority,(function(){ht(r)}))}else if(3===t&&r.stateNode.hydrate)return void(e.blockedOn=3===r.tag?r.stateNode.containerInfo:null)}e.blockedOn=null}function Mt(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var r=Tr(t);return null!==r&&bt(r),e.blockedOn=t,!1}return!0}function At(e,t,r){Mt(e)&&r.delete(t)}function Rt(){for(vt=!1;0<yt.length;){var e=yt[0];if(null!==e.blockedOn){null!==(e=Tr(e.blockedOn))&&gt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:yt.shift()}null!==xt&&Mt(xt)&&(xt=null),null!==wt&&Mt(wt)&&(wt=null),null!==kt&&Mt(kt)&&(kt=null),Et.forEach(At),St.forEach(At)}function zt(e,t){e.blockedOn===t&&(e.blockedOn=null,vt||(vt=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,Rt)))}function It(e){function t(t){return zt(t,e)}if(0<yt.length){zt(yt[0],e);for(var r=1;r<yt.length;r++){var n=yt[r];n.blockedOn===e&&(n.blockedOn=null)}}for(null!==xt&&zt(xt,e),null!==wt&&zt(wt,e),null!==kt&&zt(kt,e),Et.forEach(t),St.forEach(t),r=0;r<Ot.length;r++)(n=Ot[r]).blockedOn===e&&(n.blockedOn=null);for(;0<Ot.length&&null===(r=Ot[0]).blockedOn;)Nt(r),null===r.blockedOn&&Ot.shift()}var Ft={},Dt=new Map,Lt=new Map,Ut=["abort","abort",qe,"animationEnd",Ge,"animationIteration",Ke,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Qe,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var r=0;r<e.length;r+=2){var n=e[r],o=e[r+1],i="on"+(o[0].toUpperCase()+o.slice(1));i={phasedRegistrationNames:{bubbled:i,captured:i+"Capture"},dependencies:[n],eventPriority:t},Lt.set(n,t),Dt.set(n,i),Ft[o]=i}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Ut,2);for(var Wt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),$t=0;$t<Wt.length;$t++)Lt.set(Wt[$t],0);var Ht=i.unstable_UserBlockingPriority,Vt=i.unstable_runWithPriority,qt=!0;function Gt(e,t){Kt(t,e,!1)}function Kt(e,t,r){var n=Lt.get(t);switch(void 0===n?2:n){case 0:n=Qt.bind(null,t,1,e);break;case 1:n=Yt.bind(null,t,1,e);break;default:n=Xt.bind(null,t,1,e)}r?e.addEventListener(t,n,!0):e.addEventListener(t,n,!1)}function Qt(e,t,r,n){D||I();var o=Xt,i=D;D=!0;try{z(o,e,t,r,n)}finally{(D=i)||U()}}function Yt(e,t,r,n){Vt(Ht,Xt.bind(null,e,t,r,n))}function Xt(e,t,r,n){if(qt)if(0<yt.length&&-1<jt.indexOf(e))e=Ct(null,e,t,r,n),yt.push(e);else{var o=Jt(e,t,r,n);if(null===o)Pt(e,n);else if(-1<jt.indexOf(e))e=Ct(o,e,t,r,n),yt.push(e);else if(!function(e,t,r,n,o){switch(t){case"focus":return xt=_t(xt,e,t,r,n,o),!0;case"dragenter":return wt=_t(wt,e,t,r,n,o),!0;case"mouseover":return kt=_t(kt,e,t,r,n,o),!0;case"pointerover":var i=o.pointerId;return Et.set(i,_t(Et.get(i)||null,e,t,r,n,o)),!0;case"gotpointercapture":return i=o.pointerId,St.set(i,_t(St.get(i)||null,e,t,r,n,o)),!0}return!1}(o,e,t,r,n)){Pt(e,n),e=dt(e,n,null,t);try{B(pt,e)}finally{ft(e)}}}}function Jt(e,t,r,n){if(null!==(r=jr(r=ct(n)))){var o=Ze(r);if(null===o)r=null;else{var i=o.tag;if(13===i){if(null!==(r=et(o)))return r;r=null}else if(3===i){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;r=null}else o!==r&&(r=null)}}e=dt(e,n,r,t);try{B(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},er=["Webkit","ms","Moz","O"];function tr(e,t,r){return null==t||"boolean"==typeof t||""===t?"":r||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function rr(e,t){for(var r in e=e.style,t)if(t.hasOwnProperty(r)){var n=0===r.indexOf("--"),o=tr(r,t[r],n);"float"===r&&(r="cssFloat"),n?e.setProperty(r,o):e[r]=o}}Object.keys(Zt).forEach((function(e){er.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var nr=o({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function or(e,t){if(t){if(nr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(a(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(a(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(a(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(a(62,""))}}function ir(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var ar=Re;function lr(e,t){var r=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=O[t];for(var n=0;n<t.length;n++)mt(t[n],e,r)}function cr(){}function ur(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function fr(e,t){var r,n=sr(e);for(e=0;n;){if(3===n.nodeType){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=sr(n)}}function dr(){for(var e=window,t=ur();t instanceof e.HTMLIFrameElement;){try{var r="string"==typeof t.contentWindow.location.href}catch(e){r=!1}if(!r)break;t=ur((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var mr=null,gr=null;function br(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function hr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var vr="function"==typeof setTimeout?setTimeout:void 0,yr="function"==typeof clearTimeout?clearTimeout:void 0;function xr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function wr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var r=e.data;if("$"===r||"$!"===r||"$?"===r){if(0===t)return e;t--}else"/$"===r&&t++}e=e.previousSibling}return null}var kr=Math.random().toString(36).slice(2),Er="__reactInternalInstance$"+kr,Sr="__reactEventHandlers$"+kr,Or="__reactContainere$"+kr;function jr(e){var t=e[Er];if(t)return t;for(var r=e.parentNode;r;){if(t=r[Or]||r[Er]){if(r=t.alternate,null!==t.child||null!==r&&null!==r.child)for(e=wr(e);null!==e;){if(r=e[Er])return r;e=wr(e)}return t}r=(e=r).parentNode}return null}function Tr(e){return!(e=e[Er]||e[Or])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Cr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(a(33))}function Pr(e){return e[Sr]||null}function _r(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Nr(e,t){var r=e.stateNode;if(!r)return null;var n=m(r);if(!n)return null;r=n[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(n=!n.disabled)||(n=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!n;break e;default:e=!1}if(e)return null;if(r&&"function"!=typeof r)throw Error(a(231,t,typeof r));return r}function Mr(e,t,r){(t=Nr(e,r.dispatchConfig.phasedRegistrationNames[t]))&&(r._dispatchListeners=nt(r._dispatchListeners,t),r._dispatchInstances=nt(r._dispatchInstances,e))}function Ar(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,r=[];t;)r.push(t),t=_r(t);for(t=r.length;0<t--;)Mr(r[t],"captured",e);for(t=0;t<r.length;t++)Mr(r[t],"bubbled",e)}}function Rr(e,t,r){e&&r&&r.dispatchConfig.registrationName&&(t=Nr(e,r.dispatchConfig.registrationName))&&(r._dispatchListeners=nt(r._dispatchListeners,t),r._dispatchInstances=nt(r._dispatchInstances,e))}function zr(e){e&&e.dispatchConfig.registrationName&&Rr(e._targetInst,null,e)}function Ir(e){ot(e,Ar)}var Fr=null,Dr=null,Lr=null;function Ur(){if(Lr)return Lr;var e,t,r=Dr,n=r.length,o="value"in Fr?Fr.value:Fr.textContent,i=o.length;for(e=0;e<n&&r[e]===o[e];e++);var a=n-e;for(t=1;t<=a&&r[n-t]===o[i-t];t++);return Lr=o.slice(e,1<t?1-t:void 0)}function Br(){return!0}function Wr(){return!1}function $r(e,t,r,n){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=r,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(r):"target"===o?this.target=n:this[o]=r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?Br:Wr,this.isPropagationStopped=Wr,this}function Hr(e,t,r,n){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,r,n),o}return new this(e,t,r,n)}function Vr(e){if(!(e instanceof this))throw Error(a(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function qr(e){e.eventPool=[],e.getPooled=Hr,e.release=Vr}o($r.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Br)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Br)},persist:function(){this.isPersistent=Br},isPersistent:Wr,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wr,this._dispatchInstances=this._dispatchListeners=null}}),$r.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},$r.extend=function(e){function t(){}function r(){return n.apply(this,arguments)}var n=this;t.prototype=n.prototype;var i=new t;return o(i,r.prototype),r.prototype=i,r.prototype.constructor=r,r.Interface=o({},n.Interface,e),r.extend=n.extend,qr(r),r},qr($r);var Gr=$r.extend({data:null}),Kr=$r.extend({data:null}),Qr=[9,13,27,32],Yr=T&&"CompositionEvent"in window,Xr=null;T&&"documentMode"in document&&(Xr=document.documentMode);var Jr=T&&"TextEvent"in window&&!Xr,Zr=T&&(!Yr||Xr&&8<Xr&&11>=Xr),en=String.fromCharCode(32),tn={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rn=!1;function nn(e,t){switch(e){case"keyup":return-1!==Qr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function on(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var an=!1;var ln={eventTypes:tn,extractEvents:function(e,t,r,n){var o;if(Yr)e:{switch(e){case"compositionstart":var i=tn.compositionStart;break e;case"compositionend":i=tn.compositionEnd;break e;case"compositionupdate":i=tn.compositionUpdate;break e}i=void 0}else an?nn(e,r)&&(i=tn.compositionEnd):"keydown"===e&&229===r.keyCode&&(i=tn.compositionStart);return i?(Zr&&"ko"!==r.locale&&(an||i!==tn.compositionStart?i===tn.compositionEnd&&an&&(o=Ur()):(Dr="value"in(Fr=n)?Fr.value:Fr.textContent,an=!0)),i=Gr.getPooled(i,t,r,n),o?i.data=o:null!==(o=on(r))&&(i.data=o),Ir(i),o=i):o=null,(e=Jr?function(e,t){switch(e){case"compositionend":return on(t);case"keypress":return 32!==t.which?null:(rn=!0,en);case"textInput":return(e=t.data)===en&&rn?null:e;default:return null}}(e,r):function(e,t){if(an)return"compositionend"===e||!Yr&&nn(e,t)?(e=Ur(),Lr=Dr=Fr=null,an=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Zr&&"ko"!==t.locale?null:t.data;default:return null}}(e,r))?((t=Kr.getPooled(tn.beforeInput,t,r,n)).data=e,Ir(t)):t=null,null===o?t:null===t?o:[o,t]}},cn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!cn[e.type]:"textarea"===t}var sn={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fn(e,t,r){return(e=$r.getPooled(sn.change,e,t,r)).type="change",M(r),Ir(e),e}var dn=null,pn=null;function mn(e){lt(e)}function gn(e){if(we(Cr(e)))return e}function bn(e,t){if("change"===e)return t}var hn=!1;function vn(){dn&&(dn.detachEvent("onpropertychange",yn),pn=dn=null)}function yn(e){if("value"===e.propertyName&&gn(pn))if(e=fn(pn,e,ct(e)),D)lt(e);else{D=!0;try{R(mn,e)}finally{D=!1,U()}}}function xn(e,t,r){"focus"===e?(vn(),pn=r,(dn=t).attachEvent("onpropertychange",yn)):"blur"===e&&vn()}function wn(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return gn(pn)}function kn(e,t){if("click"===e)return gn(t)}function En(e,t){if("input"===e||"change"===e)return gn(t)}T&&(hn=ut("input")&&(!document.documentMode||9<document.documentMode));var Sn={eventTypes:sn,_isInputEventSupported:hn,extractEvents:function(e,t,r,n){var o=t?Cr(t):window,i=o.nodeName&&o.nodeName.toLowerCase();if("select"===i||"input"===i&&"file"===o.type)var a=bn;else if(un(o))if(hn)a=En;else{a=wn;var l=xn}else(i=o.nodeName)&&"input"===i.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(a=kn);if(a&&(a=a(e,t)))return fn(a,r,n);l&&l(e,o,t),"blur"===e&&(e=o._wrapperState)&&e.controlled&&"number"===o.type&&Te(o,"number",o.value)}},On=$r.extend({view:null,detail:null}),jn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Tn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=jn[e])&&!!t[e]}function Cn(){return Tn}var Pn=0,_n=0,Nn=!1,Mn=!1,An=On.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Cn,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Pn;return Pn=e.screenX,Nn?"mousemove"===e.type?e.screenX-t:0:(Nn=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=_n;return _n=e.screenY,Mn?"mousemove"===e.type?e.screenY-t:0:(Mn=!0,0)}}),Rn=An.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),zn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},In={eventTypes:zn,extractEvents:function(e,t,r,n,o){var i="mouseover"===e||"pointerover"===e,a="mouseout"===e||"pointerout"===e;if(i&&0==(32&o)&&(r.relatedTarget||r.fromElement)||!a&&!i)return null;(i=n.window===n?n:(i=n.ownerDocument)?i.defaultView||i.parentWindow:window,a)?(a=t,null!==(t=(t=r.relatedTarget||r.toElement)?jr(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):a=null;if(a===t)return null;if("mouseout"===e||"mouseover"===e)var l=An,c=zn.mouseLeave,u=zn.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(l=Rn,c=zn.pointerLeave,u=zn.pointerEnter,s="pointer");if(e=null==a?i:Cr(a),i=null==t?i:Cr(t),(c=l.getPooled(c,a,r,n)).type=s+"leave",c.target=e,c.relatedTarget=i,(r=l.getPooled(u,t,r,n)).type=s+"enter",r.target=i,r.relatedTarget=e,s=t,(n=a)&&s)e:{for(u=s,a=0,e=l=n;e;e=_r(e))a++;for(e=0,t=u;t;t=_r(t))e++;for(;0<a-e;)l=_r(l),a--;for(;0<e-a;)u=_r(u),e--;for(;a--;){if(l===u||l===u.alternate)break e;l=_r(l),u=_r(u)}l=null}else l=null;for(u=l,l=[];n&&n!==u&&(null===(a=n.alternate)||a!==u);)l.push(n),n=_r(n);for(n=[];s&&s!==u&&(null===(a=s.alternate)||a!==u);)n.push(s),s=_r(s);for(s=0;s<l.length;s++)Rr(l[s],"bubbled",c);for(s=n.length;0<s--;)Rr(n[s],"captured",r);return 0==(64&o)?[c]:[c,r]}};var Fn="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Dn=Object.prototype.hasOwnProperty;function Ln(e,t){if(Fn(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(n=0;n<r.length;n++)if(!Dn.call(t,r[n])||!Fn(e[r[n]],t[r[n]]))return!1;return!0}var Un=T&&"documentMode"in document&&11>=document.documentMode,Bn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Wn=null,$n=null,Hn=null,Vn=!1;function qn(e,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==Wn||Wn!==ur(r)?null:("selectionStart"in(r=Wn)&&pr(r)?r={start:r.selectionStart,end:r.selectionEnd}:r={anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},Hn&&Ln(Hn,r)?null:(Hn=r,(e=$r.getPooled(Bn.select,$n,e,t)).type="select",e.target=Wn,Ir(e),e))}var Gn={eventTypes:Bn,extractEvents:function(e,t,r,n,o,i){if(!(i=!(o=i||(n.window===n?n.document:9===n.nodeType?n:n.ownerDocument)))){e:{o=Je(o),i=O.onSelect;for(var a=0;a<i.length;a++)if(!o.has(i[a])){o=!1;break e}o=!0}i=!o}if(i)return null;switch(o=t?Cr(t):window,e){case"focus":(un(o)||"true"===o.contentEditable)&&(Wn=o,$n=t,Hn=null);break;case"blur":Hn=$n=Wn=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,qn(r,n);case"selectionchange":if(Un)break;case"keydown":case"keyup":return qn(r,n)}return null}},Kn=$r.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Qn=$r.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Yn=On.extend({relatedTarget:null});function Xn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},eo=On.extend({key:function(e){if(e.key){var t=Jn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Xn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?Xn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Xn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),to=An.extend({dataTransfer:null}),ro=On.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Cn}),no=$r.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),oo=An.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),io={eventTypes:Ft,extractEvents:function(e,t,r,n){var o=Dt.get(e);if(!o)return null;switch(e){case"keypress":if(0===Xn(r))return null;case"keydown":case"keyup":e=eo;break;case"blur":case"focus":e=Yn;break;case"click":if(2===r.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=An;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=to;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ro;break;case qe:case Ge:case Ke:e=Kn;break;case Qe:e=no;break;case"scroll":e=On;break;case"wheel":e=oo;break;case"copy":case"cut":case"paste":e=Qn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Rn;break;default:e=$r}return Ir(t=e.getPooled(o,t,r,n)),t}};if(v)throw Error(a(101));v=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),x(),m=Pr,g=Tr,b=Cr,j({SimpleEventPlugin:io,EnterLeaveEventPlugin:In,ChangeEventPlugin:Sn,SelectEventPlugin:Gn,BeforeInputEventPlugin:ln});var ao=[],lo=-1;function co(e){0>lo||(e.current=ao[lo],ao[lo]=null,lo--)}function uo(e,t){lo++,ao[lo]=e.current,e.current=t}var so={},fo={current:so},po={current:!1},mo=so;function go(e,t){var r=e.type.contextTypes;if(!r)return so;var n=e.stateNode;if(n&&n.__reactInternalMemoizedUnmaskedChildContext===t)return n.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in r)i[o]=t[o];return n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function bo(e){return null!=(e=e.childContextTypes)}function ho(){co(po),co(fo)}function vo(e,t,r){if(fo.current!==so)throw Error(a(168));uo(fo,t),uo(po,r)}function yo(e,t,r){var n=e.stateNode;if(e=t.childContextTypes,"function"!=typeof n.getChildContext)return r;for(var i in n=n.getChildContext())if(!(i in e))throw Error(a(108,be(t)||"Unknown",i));return o({},r,{},n)}function xo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||so,mo=fo.current,uo(fo,e),uo(po,po.current),!0}function wo(e,t,r){var n=e.stateNode;if(!n)throw Error(a(169));r?(e=yo(e,t,mo),n.__reactInternalMemoizedMergedChildContext=e,co(po),co(fo),uo(fo,e)):co(po),uo(po,r)}var ko=i.unstable_runWithPriority,Eo=i.unstable_scheduleCallback,So=i.unstable_cancelCallback,Oo=i.unstable_requestPaint,jo=i.unstable_now,To=i.unstable_getCurrentPriorityLevel,Co=i.unstable_ImmediatePriority,Po=i.unstable_UserBlockingPriority,_o=i.unstable_NormalPriority,No=i.unstable_LowPriority,Mo=i.unstable_IdlePriority,Ao={},Ro=i.unstable_shouldYield,zo=void 0!==Oo?Oo:function(){},Io=null,Fo=null,Do=!1,Lo=jo(),Uo=1e4>Lo?jo:function(){return jo()-Lo};function Bo(){switch(To()){case Co:return 99;case Po:return 98;case _o:return 97;case No:return 96;case Mo:return 95;default:throw Error(a(332))}}function Wo(e){switch(e){case 99:return Co;case 98:return Po;case 97:return _o;case 96:return No;case 95:return Mo;default:throw Error(a(332))}}function $o(e,t){return e=Wo(e),ko(e,t)}function Ho(e,t,r){return e=Wo(e),Eo(e,t,r)}function Vo(e){return null===Io?(Io=[e],Fo=Eo(Co,Go)):Io.push(e),Ao}function qo(){if(null!==Fo){var e=Fo;Fo=null,So(e)}Go()}function Go(){if(!Do&&null!==Io){Do=!0;var e=0;try{var t=Io;$o(99,(function(){for(;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}})),Io=null}catch(t){throw null!==Io&&(Io=Io.slice(e+1)),Eo(Co,qo),t}finally{Do=!1}}}function Ko(e,t,r){return 1073741821-(1+((1073741821-e+t/10)/(r/=10)|0))*r}function Qo(e,t){if(e&&e.defaultProps)for(var r in t=o({},t),e=e.defaultProps)void 0===t[r]&&(t[r]=e[r]);return t}var Yo={current:null},Xo=null,Jo=null,Zo=null;function ei(){Zo=Jo=Xo=null}function ti(e){var t=Yo.current;co(Yo),e.type._context._currentValue=t}function ri(e,t){for(;null!==e;){var r=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==r&&r.childExpirationTime<t&&(r.childExpirationTime=t);else{if(!(null!==r&&r.childExpirationTime<t))break;r.childExpirationTime=t}e=e.return}}function ni(e,t){Xo=e,Zo=Jo=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(_a=!0),e.firstContext=null)}function oi(e,t){if(Zo!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Zo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Jo){if(null===Xo)throw Error(a(308));Jo=t,Xo.dependencies={expirationTime:0,firstContext:t,responders:null}}else Jo=Jo.next=t;return e._currentValue}var ii=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function li(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ci(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function ui(e,t){if(null!==(e=e.updateQueue)){var r=(e=e.shared).pending;null===r?t.next=t:(t.next=r.next,r.next=t),e.pending=t}}function si(e,t){var r=e.alternate;null!==r&&li(r,e),null===(r=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=r.next,r.next=t)}function fi(e,t,r,n){var i=e.updateQueue;ii=!1;var a=i.baseQueue,l=i.shared.pending;if(null!==l){if(null!==a){var c=a.next;a.next=l.next,l.next=c}a=l,i.shared.pending=null,null!==(c=e.alternate)&&(null!==(c=c.updateQueue)&&(c.baseQueue=l))}if(null!==a){c=a.next;var u=i.baseState,s=0,f=null,d=null,p=null;if(null!==c)for(var m=c;;){if((l=m.expirationTime)<n){var g={expirationTime:m.expirationTime,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null};null===p?(d=p=g,f=u):p=p.next=g,l>s&&(s=l)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:m.suspenseConfig,tag:m.tag,payload:m.payload,callback:m.callback,next:null}),ic(l,m.suspenseConfig);e:{var b=e,h=m;switch(l=t,g=r,h.tag){case 1:if("function"==typeof(b=h.payload)){u=b.call(g,u,l);break e}u=b;break e;case 3:b.effectTag=-4097&b.effectTag|64;case 0:if(null==(l="function"==typeof(b=h.payload)?b.call(g,u,l):b))break e;u=o({},u,l);break e;case 2:ii=!0}}null!==m.callback&&(e.effectTag|=32,null===(l=i.effects)?i.effects=[m]:l.push(m))}if(null===(m=m.next)||m===c){if(null===(l=i.shared.pending))break;m=a.next=l.next,l.next=c,i.baseQueue=a=l,i.shared.pending=null}}null===p?f=u:p.next=d,i.baseState=f,i.baseQueue=p,ac(s),e.expirationTime=s,e.memoizedState=u}}function di(e,t,r){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var n=e[t],o=n.callback;if(null!==o){if(n.callback=null,n=o,o=r,"function"!=typeof n)throw Error(a(191,n));n.call(o)}}}var pi=Y.ReactCurrentBatchConfig,mi=(new n.Component).refs;function gi(e,t,r,n){r=null==(r=r(n,t=e.memoizedState))?t:o({},t,r),e.memoizedState=r,0===e.expirationTime&&(e.updateQueue.baseState=r)}var bi={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,r){e=e._reactInternalFiber;var n=ql(),o=pi.suspense;(o=ci(n=Gl(n,e,o),o)).payload=t,null!=r&&(o.callback=r),ui(e,o),Kl(e,n)},enqueueReplaceState:function(e,t,r){e=e._reactInternalFiber;var n=ql(),o=pi.suspense;(o=ci(n=Gl(n,e,o),o)).tag=1,o.payload=t,null!=r&&(o.callback=r),ui(e,o),Kl(e,n)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var r=ql(),n=pi.suspense;(n=ci(r=Gl(r,e,n),n)).tag=2,null!=t&&(n.callback=t),ui(e,n),Kl(e,r)}};function hi(e,t,r,n,o,i,a){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(n,i,a):!t.prototype||!t.prototype.isPureReactComponent||(!Ln(r,n)||!Ln(o,i))}function vi(e,t,r){var n=!1,o=so,i=t.contextType;return"object"==typeof i&&null!==i?i=oi(i):(o=bo(t)?mo:fo.current,i=(n=null!=(n=t.contextTypes))?go(e,o):so),t=new t(r,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=bi,e.stateNode=t,t._reactInternalFiber=e,n&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=o,e.__reactInternalMemoizedMaskedChildContext=i),t}function yi(e,t,r,n){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(r,n),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(r,n),t.state!==e&&bi.enqueueReplaceState(t,t.state,null)}function xi(e,t,r,n){var o=e.stateNode;o.props=r,o.state=e.memoizedState,o.refs=mi,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?o.context=oi(i):(i=bo(t)?mo:fo.current,o.context=go(e,i)),fi(e,r,o,n),o.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(gi(e,t,i,r),o.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof o.getSnapshotBeforeUpdate||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||(t=o.state,"function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount(),t!==o.state&&bi.enqueueReplaceState(o,o.state,null),fi(e,r,o,n),o.state=e.memoizedState),"function"==typeof o.componentDidMount&&(e.effectTag|=4)}var wi=Array.isArray;function ki(e,t,r){if(null!==(e=r.ref)&&"function"!=typeof e&&"object"!=typeof e){if(r._owner){if(r=r._owner){if(1!==r.tag)throw Error(a(309));var n=r.stateNode}if(!n)throw Error(a(147,e));var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=n.refs;t===mi&&(t=n.refs={}),null===e?delete t[o]:t[o]=e})._stringRef=o,t)}if("string"!=typeof e)throw Error(a(284));if(!r._owner)throw Error(a(290,e))}return e}function Ei(e,t){if("textarea"!==e.type)throw Error(a(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function Si(e){function t(t,r){if(e){var n=t.lastEffect;null!==n?(n.nextEffect=r,t.lastEffect=r):t.firstEffect=t.lastEffect=r,r.nextEffect=null,r.effectTag=8}}function r(r,n){if(!e)return null;for(;null!==n;)t(r,n),n=n.sibling;return null}function n(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t){return(e=jc(e,t)).index=0,e.sibling=null,e}function i(t,r,n){return t.index=n,e?null!==(n=t.alternate)?(n=n.index)<r?(t.effectTag=2,r):n:(t.effectTag=2,r):r}function l(t){return e&&null===t.alternate&&(t.effectTag=2),t}function c(e,t,r,n){return null===t||6!==t.tag?((t=Pc(r,e.mode,n)).return=e,t):((t=o(t,r)).return=e,t)}function u(e,t,r,n){return null!==t&&t.elementType===r.type?((n=o(t,r.props)).ref=ki(e,t,r),n.return=e,n):((n=Tc(r.type,r.key,r.props,null,e.mode,n)).ref=ki(e,t,r),n.return=e,n)}function s(e,t,r,n){return null===t||4!==t.tag||t.stateNode.containerInfo!==r.containerInfo||t.stateNode.implementation!==r.implementation?((t=_c(r,e.mode,n)).return=e,t):((t=o(t,r.children||[])).return=e,t)}function f(e,t,r,n,i){return null===t||7!==t.tag?((t=Cc(r,e.mode,n,i)).return=e,t):((t=o(t,r)).return=e,t)}function d(e,t,r){if("string"==typeof t||"number"==typeof t)return(t=Pc(""+t,e.mode,r)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(r=Tc(t.type,t.key,t.props,null,e.mode,r)).ref=ki(e,null,t),r.return=e,r;case te:return(t=_c(t,e.mode,r)).return=e,t}if(wi(t)||ge(t))return(t=Cc(t,e.mode,r,null)).return=e,t;Ei(e,t)}return null}function p(e,t,r,n){var o=null!==t?t.key:null;if("string"==typeof r||"number"==typeof r)return null!==o?null:c(e,t,""+r,n);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return r.key===o?r.type===re?f(e,t,r.props.children,n,o):u(e,t,r,n):null;case te:return r.key===o?s(e,t,r,n):null}if(wi(r)||ge(r))return null!==o?null:f(e,t,r,n,null);Ei(e,r)}return null}function m(e,t,r,n,o){if("string"==typeof n||"number"==typeof n)return c(t,e=e.get(r)||null,""+n,o);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return e=e.get(null===n.key?r:n.key)||null,n.type===re?f(t,e,n.props.children,o,n.key):u(t,e,n,o);case te:return s(t,e=e.get(null===n.key?r:n.key)||null,n,o)}if(wi(n)||ge(n))return f(t,e=e.get(r)||null,n,o,null);Ei(t,n)}return null}function g(o,a,l,c){for(var u=null,s=null,f=a,g=a=0,b=null;null!==f&&g<l.length;g++){f.index>g?(b=f,f=null):b=f.sibling;var h=p(o,f,l[g],c);if(null===h){null===f&&(f=b);break}e&&f&&null===h.alternate&&t(o,f),a=i(h,a,g),null===s?u=h:s.sibling=h,s=h,f=b}if(g===l.length)return r(o,f),u;if(null===f){for(;g<l.length;g++)null!==(f=d(o,l[g],c))&&(a=i(f,a,g),null===s?u=f:s.sibling=f,s=f);return u}for(f=n(o,f);g<l.length;g++)null!==(b=m(f,o,g,l[g],c))&&(e&&null!==b.alternate&&f.delete(null===b.key?g:b.key),a=i(b,a,g),null===s?u=b:s.sibling=b,s=b);return e&&f.forEach((function(e){return t(o,e)})),u}function b(o,l,c,u){var s=ge(c);if("function"!=typeof s)throw Error(a(150));if(null==(c=s.call(c)))throw Error(a(151));for(var f=s=null,g=l,b=l=0,h=null,v=c.next();null!==g&&!v.done;b++,v=c.next()){g.index>b?(h=g,g=null):h=g.sibling;var y=p(o,g,v.value,u);if(null===y){null===g&&(g=h);break}e&&g&&null===y.alternate&&t(o,g),l=i(y,l,b),null===f?s=y:f.sibling=y,f=y,g=h}if(v.done)return r(o,g),s;if(null===g){for(;!v.done;b++,v=c.next())null!==(v=d(o,v.value,u))&&(l=i(v,l,b),null===f?s=v:f.sibling=v,f=v);return s}for(g=n(o,g);!v.done;b++,v=c.next())null!==(v=m(g,o,b,v.value,u))&&(e&&null!==v.alternate&&g.delete(null===v.key?b:v.key),l=i(v,l,b),null===f?s=v:f.sibling=v,f=v);return e&&g.forEach((function(e){return t(o,e)})),s}return function(e,n,i,c){var u="object"==typeof i&&null!==i&&i.type===re&&null===i.key;u&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case ee:e:{for(s=i.key,u=n;null!==u;){if(u.key===s){switch(u.tag){case 7:if(i.type===re){r(e,u.sibling),(n=o(u,i.props.children)).return=e,e=n;break e}break;default:if(u.elementType===i.type){r(e,u.sibling),(n=o(u,i.props)).ref=ki(e,u,i),n.return=e,e=n;break e}}r(e,u);break}t(e,u),u=u.sibling}i.type===re?((n=Cc(i.props.children,e.mode,c,i.key)).return=e,e=n):((c=Tc(i.type,i.key,i.props,null,e.mode,c)).ref=ki(e,n,i),c.return=e,e=c)}return l(e);case te:e:{for(u=i.key;null!==n;){if(n.key===u){if(4===n.tag&&n.stateNode.containerInfo===i.containerInfo&&n.stateNode.implementation===i.implementation){r(e,n.sibling),(n=o(n,i.children||[])).return=e,e=n;break e}r(e,n);break}t(e,n),n=n.sibling}(n=_c(i,e.mode,c)).return=e,e=n}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==n&&6===n.tag?(r(e,n.sibling),(n=o(n,i)).return=e,e=n):(r(e,n),(n=Pc(i,e.mode,c)).return=e,e=n),l(e);if(wi(i))return g(e,n,i,c);if(ge(i))return b(e,n,i,c);if(s&&Ei(e,i),void 0===i&&!u)switch(e.tag){case 1:case 0:throw e=e.type,Error(a(152,e.displayName||e.name||"Component"))}return r(e,n)}}var Oi=Si(!0),ji=Si(!1),Ti={},Ci={current:Ti},Pi={current:Ti},_i={current:Ti};function Ni(e){if(e===Ti)throw Error(a(174));return e}function Mi(e,t){switch(uo(_i,t),uo(Pi,e),uo(Ci,Ti),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Fe(null,"");break;default:t=Fe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}co(Ci),uo(Ci,t)}function Ai(){co(Ci),co(Pi),co(_i)}function Ri(e){Ni(_i.current);var t=Ni(Ci.current),r=Fe(t,e.type);t!==r&&(uo(Pi,e),uo(Ci,r))}function zi(e){Pi.current===e&&(co(Ci),co(Pi))}var Ii={current:0};function Fi(e){for(var t=e;null!==t;){if(13===t.tag){var r=t.memoizedState;if(null!==r&&(null===(r=r.dehydrated)||"$?"===r.data||"$!"===r.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Di(e,t){return{responder:e,props:t}}var Li=Y.ReactCurrentDispatcher,Ui=Y.ReactCurrentBatchConfig,Bi=0,Wi=null,$i=null,Hi=null,Vi=!1;function qi(){throw Error(a(321))}function Gi(e,t){if(null===t)return!1;for(var r=0;r<t.length&&r<e.length;r++)if(!Fn(e[r],t[r]))return!1;return!0}function Ki(e,t,r,n,o,i){if(Bi=i,Wi=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Li.current=null===e||null===e.memoizedState?ha:va,e=r(n,o),t.expirationTime===Bi){i=0;do{if(t.expirationTime=0,!(25>i))throw Error(a(301));i+=1,Hi=$i=null,t.updateQueue=null,Li.current=ya,e=r(n,o)}while(t.expirationTime===Bi)}if(Li.current=ba,t=null!==$i&&null!==$i.next,Bi=0,Hi=$i=Wi=null,Vi=!1,t)throw Error(a(300));return e}function Qi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Hi?Wi.memoizedState=Hi=e:Hi=Hi.next=e,Hi}function Yi(){if(null===$i){var e=Wi.alternate;e=null!==e?e.memoizedState:null}else e=$i.next;var t=null===Hi?Wi.memoizedState:Hi.next;if(null!==t)Hi=t,$i=e;else{if(null===e)throw Error(a(310));e={memoizedState:($i=e).memoizedState,baseState:$i.baseState,baseQueue:$i.baseQueue,queue:$i.queue,next:null},null===Hi?Wi.memoizedState=Hi=e:Hi=Hi.next=e}return Hi}function Xi(e,t){return"function"==typeof t?t(e):t}function Ji(e){var t=Yi(),r=t.queue;if(null===r)throw Error(a(311));r.lastRenderedReducer=e;var n=$i,o=n.baseQueue,i=r.pending;if(null!==i){if(null!==o){var l=o.next;o.next=i.next,i.next=l}n.baseQueue=o=i,r.pending=null}if(null!==o){o=o.next,n=n.baseState;var c=l=i=null,u=o;do{var s=u.expirationTime;if(s<Bi){var f={expirationTime:u.expirationTime,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null};null===c?(l=c=f,i=n):c=c.next=f,s>Wi.expirationTime&&(Wi.expirationTime=s,ac(s))}else null!==c&&(c=c.next={expirationTime:1073741823,suspenseConfig:u.suspenseConfig,action:u.action,eagerReducer:u.eagerReducer,eagerState:u.eagerState,next:null}),ic(s,u.suspenseConfig),n=u.eagerReducer===e?u.eagerState:e(n,u.action);u=u.next}while(null!==u&&u!==o);null===c?i=n:c.next=l,Fn(n,t.memoizedState)||(_a=!0),t.memoizedState=n,t.baseState=i,t.baseQueue=c,r.lastRenderedState=n}return[t.memoizedState,r.dispatch]}function Zi(e){var t=Yi(),r=t.queue;if(null===r)throw Error(a(311));r.lastRenderedReducer=e;var n=r.dispatch,o=r.pending,i=t.memoizedState;if(null!==o){r.pending=null;var l=o=o.next;do{i=e(i,l.action),l=l.next}while(l!==o);Fn(i,t.memoizedState)||(_a=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),r.lastRenderedState=i}return[i,n]}function ea(e){var t=Qi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Xi,lastRenderedState:e}).dispatch=ga.bind(null,Wi,e),[t.memoizedState,e]}function ta(e,t,r,n){return e={tag:e,create:t,destroy:r,deps:n,next:null},null===(t=Wi.updateQueue)?(t={lastEffect:null},Wi.updateQueue=t,t.lastEffect=e.next=e):null===(r=t.lastEffect)?t.lastEffect=e.next=e:(n=r.next,r.next=e,e.next=n,t.lastEffect=e),e}function ra(){return Yi().memoizedState}function na(e,t,r,n){var o=Qi();Wi.effectTag|=e,o.memoizedState=ta(1|t,r,void 0,void 0===n?null:n)}function oa(e,t,r,n){var o=Yi();n=void 0===n?null:n;var i=void 0;if(null!==$i){var a=$i.memoizedState;if(i=a.destroy,null!==n&&Gi(n,a.deps))return void ta(t,r,i,n)}Wi.effectTag|=e,o.memoizedState=ta(1|t,r,i,n)}function ia(e,t){return na(516,4,e,t)}function aa(e,t){return oa(516,4,e,t)}function la(e,t){return oa(4,2,e,t)}function ca(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function ua(e,t,r){return r=null!=r?r.concat([e]):null,oa(4,2,ca.bind(null,t,e),r)}function sa(){}function fa(e,t){return Qi().memoizedState=[e,void 0===t?null:t],e}function da(e,t){var r=Yi();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Gi(t,n[1])?n[0]:(r.memoizedState=[e,t],e)}function pa(e,t){var r=Yi();t=void 0===t?null:t;var n=r.memoizedState;return null!==n&&null!==t&&Gi(t,n[1])?n[0]:(e=e(),r.memoizedState=[e,t],e)}function ma(e,t,r){var n=Bo();$o(98>n?98:n,(function(){e(!0)})),$o(97<n?97:n,(function(){var n=Ui.suspense;Ui.suspense=void 0===t?null:t;try{e(!1),r()}finally{Ui.suspense=n}}))}function ga(e,t,r){var n=ql(),o=pi.suspense;o={expirationTime:n=Gl(n,e,o),suspenseConfig:o,action:r,eagerReducer:null,eagerState:null,next:null};var i=t.pending;if(null===i?o.next=o:(o.next=i.next,i.next=o),t.pending=o,i=e.alternate,e===Wi||null!==i&&i===Wi)Vi=!0,o.expirationTime=Bi,Wi.expirationTime=Bi;else{if(0===e.expirationTime&&(null===i||0===i.expirationTime)&&null!==(i=t.lastRenderedReducer))try{var a=t.lastRenderedState,l=i(a,r);if(o.eagerReducer=i,o.eagerState=l,Fn(l,a))return}catch(e){}Kl(e,n)}}var ba={readContext:oi,useCallback:qi,useContext:qi,useEffect:qi,useImperativeHandle:qi,useLayoutEffect:qi,useMemo:qi,useReducer:qi,useRef:qi,useState:qi,useDebugValue:qi,useResponder:qi,useDeferredValue:qi,useTransition:qi},ha={readContext:oi,useCallback:fa,useContext:oi,useEffect:ia,useImperativeHandle:function(e,t,r){return r=null!=r?r.concat([e]):null,na(4,2,ca.bind(null,t,e),r)},useLayoutEffect:function(e,t){return na(4,2,e,t)},useMemo:function(e,t){var r=Qi();return t=void 0===t?null:t,e=e(),r.memoizedState=[e,t],e},useReducer:function(e,t,r){var n=Qi();return t=void 0!==r?r(t):t,n.memoizedState=n.baseState=t,e=(e=n.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ga.bind(null,Wi,e),[n.memoizedState,e]},useRef:function(e){return e={current:e},Qi().memoizedState=e},useState:ea,useDebugValue:sa,useResponder:Di,useDeferredValue:function(e,t){var r=ea(e),n=r[0],o=r[1];return ia((function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=r}}),[e,t]),n},useTransition:function(e){var t=ea(!1),r=t[0];return t=t[1],[fa(ma.bind(null,t,e),[t,e]),r]}},va={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ua,useLayoutEffect:la,useMemo:pa,useReducer:Ji,useRef:ra,useState:function(){return Ji(Xi)},useDebugValue:sa,useResponder:Di,useDeferredValue:function(e,t){var r=Ji(Xi),n=r[0],o=r[1];return aa((function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=r}}),[e,t]),n},useTransition:function(e){var t=Ji(Xi),r=t[0];return t=t[1],[da(ma.bind(null,t,e),[t,e]),r]}},ya={readContext:oi,useCallback:da,useContext:oi,useEffect:aa,useImperativeHandle:ua,useLayoutEffect:la,useMemo:pa,useReducer:Zi,useRef:ra,useState:function(){return Zi(Xi)},useDebugValue:sa,useResponder:Di,useDeferredValue:function(e,t){var r=Zi(Xi),n=r[0],o=r[1];return aa((function(){var r=Ui.suspense;Ui.suspense=void 0===t?null:t;try{o(e)}finally{Ui.suspense=r}}),[e,t]),n},useTransition:function(e){var t=Zi(Xi),r=t[0];return t=t[1],[da(ma.bind(null,t,e),[t,e]),r]}},xa=null,wa=null,ka=!1;function Ea(e,t){var r=Sc(5,null,null,0);r.elementType="DELETED",r.type="DELETED",r.stateNode=t,r.return=e,r.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=r,e.lastEffect=r):e.firstEffect=e.lastEffect=r}function Sa(e,t){switch(e.tag){case 5:var r=e.type;return null!==(t=1!==t.nodeType||r.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Oa(e){if(ka){var t=wa;if(t){var r=t;if(!Sa(e,t)){if(!(t=xr(r.nextSibling))||!Sa(e,t))return e.effectTag=-1025&e.effectTag|2,ka=!1,void(xa=e);Ea(xa,r)}xa=e,wa=xr(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,ka=!1,xa=e}}function ja(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;xa=e}function Ta(e){if(e!==xa)return!1;if(!ka)return ja(e),ka=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!hr(t,e.memoizedProps))for(t=wa;t;)Ea(e,t),t=xr(t.nextSibling);if(ja(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(a(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var r=e.data;if("/$"===r){if(0===t){wa=xr(e.nextSibling);break e}t--}else"$"!==r&&"$!"!==r&&"$?"!==r||t++}e=e.nextSibling}wa=null}}else wa=xa?xr(e.stateNode.nextSibling):null;return!0}function Ca(){wa=xa=null,ka=!1}var Pa=Y.ReactCurrentOwner,_a=!1;function Na(e,t,r,n){t.child=null===e?ji(t,null,r,n):Oi(t,e.child,r,n)}function Ma(e,t,r,n,o){r=r.render;var i=t.ref;return ni(t,o),n=Ki(e,t,r,n,i,o),null===e||_a?(t.effectTag|=1,Na(e,t,n,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ka(e,t,o))}function Aa(e,t,r,n,o,i){if(null===e){var a=r.type;return"function"!=typeof a||Oc(a)||void 0!==a.defaultProps||null!==r.compare||void 0!==r.defaultProps?((e=Tc(r.type,null,n,null,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=a,Ra(e,t,a,n,o,i))}return a=e.child,o<i&&(o=a.memoizedProps,(r=null!==(r=r.compare)?r:Ln)(o,n)&&e.ref===t.ref)?Ka(e,t,i):(t.effectTag|=1,(e=jc(a,n)).ref=t.ref,e.return=t,t.child=e)}function Ra(e,t,r,n,o,i){return null!==e&&Ln(e.memoizedProps,n)&&e.ref===t.ref&&(_a=!1,o<i)?(t.expirationTime=e.expirationTime,Ka(e,t,i)):Ia(e,t,r,n,i)}function za(e,t){var r=t.ref;(null===e&&null!==r||null!==e&&e.ref!==r)&&(t.effectTag|=128)}function Ia(e,t,r,n,o){var i=bo(r)?mo:fo.current;return i=go(t,i),ni(t,o),r=Ki(e,t,r,n,i,o),null===e||_a?(t.effectTag|=1,Na(e,t,r,o),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=o&&(e.expirationTime=0),Ka(e,t,o))}function Fa(e,t,r,n,o){if(bo(r)){var i=!0;xo(t)}else i=!1;if(ni(t,o),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),vi(t,r,n),xi(t,r,n,o),n=!0;else if(null===e){var a=t.stateNode,l=t.memoizedProps;a.props=l;var c=a.context,u=r.contextType;"object"==typeof u&&null!==u?u=oi(u):u=go(t,u=bo(r)?mo:fo.current);var s=r.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof a.getSnapshotBeforeUpdate;f||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==n||c!==u)&&yi(t,a,n,u),ii=!1;var d=t.memoizedState;a.state=d,fi(t,n,a,o),c=t.memoizedState,l!==n||d!==c||po.current||ii?("function"==typeof s&&(gi(t,r,s,n),c=t.memoizedState),(l=ii||hi(t,r,l,n,d,c,u))?(f||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||("function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount()),"function"==typeof a.componentDidMount&&(t.effectTag|=4)):("function"==typeof a.componentDidMount&&(t.effectTag|=4),t.memoizedProps=n,t.memoizedState=c),a.props=n,a.state=c,a.context=u,n=l):("function"==typeof a.componentDidMount&&(t.effectTag|=4),n=!1)}else a=t.stateNode,li(e,t),l=t.memoizedProps,a.props=t.type===t.elementType?l:Qo(t.type,l),c=a.context,"object"==typeof(u=r.contextType)&&null!==u?u=oi(u):u=go(t,u=bo(r)?mo:fo.current),(f="function"==typeof(s=r.getDerivedStateFromProps)||"function"==typeof a.getSnapshotBeforeUpdate)||"function"!=typeof a.UNSAFE_componentWillReceiveProps&&"function"!=typeof a.componentWillReceiveProps||(l!==n||c!==u)&&yi(t,a,n,u),ii=!1,c=t.memoizedState,a.state=c,fi(t,n,a,o),d=t.memoizedState,l!==n||c!==d||po.current||ii?("function"==typeof s&&(gi(t,r,s,n),d=t.memoizedState),(s=ii||hi(t,r,l,n,c,d,u))?(f||"function"!=typeof a.UNSAFE_componentWillUpdate&&"function"!=typeof a.componentWillUpdate||("function"==typeof a.componentWillUpdate&&a.componentWillUpdate(n,d,u),"function"==typeof a.UNSAFE_componentWillUpdate&&a.UNSAFE_componentWillUpdate(n,d,u)),"function"==typeof a.componentDidUpdate&&(t.effectTag|=4),"function"==typeof a.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=n,t.memoizedState=d),a.props=n,a.state=d,a.context=u,n=s):("function"!=typeof a.componentDidUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof a.getSnapshotBeforeUpdate||l===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),n=!1);return Da(e,t,r,n,i,o)}function Da(e,t,r,n,o,i){za(e,t);var a=0!=(64&t.effectTag);if(!n&&!a)return o&&wo(t,r,!1),Ka(e,t,i);n=t.stateNode,Pa.current=t;var l=a&&"function"!=typeof r.getDerivedStateFromError?null:n.render();return t.effectTag|=1,null!==e&&a?(t.child=Oi(t,e.child,null,i),t.child=Oi(t,null,l,i)):Na(e,t,l,i),t.memoizedState=n.state,o&&wo(t,r,!0),t.child}function La(e){var t=e.stateNode;t.pendingContext?vo(0,t.pendingContext,t.pendingContext!==t.context):t.context&&vo(0,t.context,!1),Mi(e,t.containerInfo)}var Ua,Ba,Wa,$a={dehydrated:null,retryTime:0};function Ha(e,t,r){var n,o=t.mode,i=t.pendingProps,a=Ii.current,l=!1;if((n=0!=(64&t.effectTag))||(n=0!=(2&a)&&(null===e||null!==e.memoizedState)),n?(l=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===i.fallback||!0===i.unstable_avoidThisFallback||(a|=1),uo(Ii,1&a),null===e){if(void 0!==i.fallback&&Oa(t),l){if(l=i.fallback,(i=Cc(null,o,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(r=Cc(l,o,r,null)).return=t,i.sibling=r,t.memoizedState=$a,t.child=i,r}return o=i.children,t.memoizedState=null,t.child=ji(t,null,o,r)}if(null!==e.memoizedState){if(o=(e=e.child).sibling,l){if(i=i.fallback,(r=jc(e,e.pendingProps)).return=t,0==(2&t.mode)&&(l=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(r.child=l;null!==l;)l.return=r,l=l.sibling;return(o=jc(o,i)).return=t,r.sibling=o,r.childExpirationTime=0,t.memoizedState=$a,t.child=r,o}return r=Oi(t,e.child,i.children,r),t.memoizedState=null,t.child=r}if(e=e.child,l){if(l=i.fallback,(i=Cc(null,o,0,null)).return=t,i.child=e,null!==e&&(e.return=i),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,i.child=e;null!==e;)e.return=i,e=e.sibling;return(r=Cc(l,o,r,null)).return=t,i.sibling=r,r.effectTag|=2,i.childExpirationTime=0,t.memoizedState=$a,t.child=i,r}return t.memoizedState=null,t.child=Oi(t,e,i.children,r)}function Va(e,t){e.expirationTime<t&&(e.expirationTime=t);var r=e.alternate;null!==r&&r.expirationTime<t&&(r.expirationTime=t),ri(e.return,t)}function qa(e,t,r,n,o,i){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:n,tail:r,tailExpiration:0,tailMode:o,lastEffect:i}:(a.isBackwards=t,a.rendering=null,a.renderingStartTime=0,a.last=n,a.tail=r,a.tailExpiration=0,a.tailMode=o,a.lastEffect=i)}function Ga(e,t,r){var n=t.pendingProps,o=n.revealOrder,i=n.tail;if(Na(e,t,n.children,r),0!=(2&(n=Ii.current)))n=1&n|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Va(e,r);else if(19===e.tag)Va(e,r);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}n&=1}if(uo(Ii,n),0==(2&t.mode))t.memoizedState=null;else switch(o){case"forwards":for(r=t.child,o=null;null!==r;)null!==(e=r.alternate)&&null===Fi(e)&&(o=r),r=r.sibling;null===(r=o)?(o=t.child,t.child=null):(o=r.sibling,r.sibling=null),qa(t,!1,o,r,i,t.lastEffect);break;case"backwards":for(r=null,o=t.child,t.child=null;null!==o;){if(null!==(e=o.alternate)&&null===Fi(e)){t.child=o;break}e=o.sibling,o.sibling=r,r=o,o=e}qa(t,!0,r,null,i,t.lastEffect);break;case"together":qa(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Ka(e,t,r){null!==e&&(t.dependencies=e.dependencies);var n=t.expirationTime;if(0!==n&&ac(n),t.childExpirationTime<r)return null;if(null!==e&&t.child!==e.child)throw Error(a(153));if(null!==t.child){for(r=jc(e=t.child,e.pendingProps),t.child=r,r.return=t;null!==e.sibling;)e=e.sibling,(r=r.sibling=jc(e,e.pendingProps)).return=t;r.sibling=null}return t.child}function Qa(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?e.tail=null:r.sibling=null;break;case"collapsed":r=e.tail;for(var n=null;null!==r;)null!==r.alternate&&(n=r),r=r.sibling;null===n?t||null===e.tail?e.tail=null:e.tail.sibling=null:n.sibling=null}}function Ya(e,t,r){var n=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return bo(t.type)&&ho(),null;case 3:return Ai(),co(po),co(fo),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||!Ta(t)||(t.effectTag|=4),null;case 5:zi(t),r=Ni(_i.current);var i=t.type;if(null!==e&&null!=t.stateNode)Ba(e,t,i,n,r),e.ref!==t.ref&&(t.effectTag|=128);else{if(!n){if(null===t.stateNode)throw Error(a(166));return null}if(e=Ni(Ci.current),Ta(t)){n=t.stateNode,i=t.type;var l=t.memoizedProps;switch(n[Er]=t,n[Sr]=l,i){case"iframe":case"object":case"embed":Gt("load",n);break;case"video":case"audio":for(e=0;e<Ye.length;e++)Gt(Ye[e],n);break;case"source":Gt("error",n);break;case"img":case"image":case"link":Gt("error",n),Gt("load",n);break;case"form":Gt("reset",n),Gt("submit",n);break;case"details":Gt("toggle",n);break;case"input":Ee(n,l),Gt("invalid",n),lr(r,"onChange");break;case"select":n._wrapperState={wasMultiple:!!l.multiple},Gt("invalid",n),lr(r,"onChange");break;case"textarea":Ne(n,l),Gt("invalid",n),lr(r,"onChange")}for(var c in or(i,l),e=null,l)if(l.hasOwnProperty(c)){var u=l[c];"children"===c?"string"==typeof u?n.textContent!==u&&(e=["children",u]):"number"==typeof u&&n.textContent!==""+u&&(e=["children",""+u]):S.hasOwnProperty(c)&&null!=u&&lr(r,c)}switch(i){case"input":xe(n),je(n,l,!0);break;case"textarea":xe(n),Ae(n);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(n.onclick=cr)}r=e,t.updateQueue=r,null!==r&&(t.effectTag|=4)}else{switch(c=9===r.nodeType?r:r.ownerDocument,e===ar&&(e=Ie(i)),e===ar?"script"===i?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof n.is?e=c.createElement(i,{is:n.is}):(e=c.createElement(i),"select"===i&&(c=e,n.multiple?c.multiple=!0:n.size&&(c.size=n.size))):e=c.createElementNS(e,i),e[Er]=t,e[Sr]=n,Ua(e,t),t.stateNode=e,c=ir(i,n),i){case"iframe":case"object":case"embed":Gt("load",e),u=n;break;case"video":case"audio":for(u=0;u<Ye.length;u++)Gt(Ye[u],e);u=n;break;case"source":Gt("error",e),u=n;break;case"img":case"image":case"link":Gt("error",e),Gt("load",e),u=n;break;case"form":Gt("reset",e),Gt("submit",e),u=n;break;case"details":Gt("toggle",e),u=n;break;case"input":Ee(e,n),u=ke(e,n),Gt("invalid",e),lr(r,"onChange");break;case"option":u=Ce(e,n);break;case"select":e._wrapperState={wasMultiple:!!n.multiple},u=o({},n,{value:void 0}),Gt("invalid",e),lr(r,"onChange");break;case"textarea":Ne(e,n),u=_e(e,n),Gt("invalid",e),lr(r,"onChange");break;default:u=n}or(i,u);var s=u;for(l in s)if(s.hasOwnProperty(l)){var f=s[l];"style"===l?rr(e,f):"dangerouslySetInnerHTML"===l?null!=(f=f?f.__html:void 0)&&Le(e,f):"children"===l?"string"==typeof f?("textarea"!==i||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(S.hasOwnProperty(l)?null!=f&&lr(r,l):null!=f&&X(e,l,f,c))}switch(i){case"input":xe(e),je(e,n,!1);break;case"textarea":xe(e),Ae(e);break;case"option":null!=n.value&&e.setAttribute("value",""+ve(n.value));break;case"select":e.multiple=!!n.multiple,null!=(r=n.value)?Pe(e,!!n.multiple,r,!1):null!=n.defaultValue&&Pe(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof u.onClick&&(e.onclick=cr)}br(i,n)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Wa(0,t,e.memoizedProps,n);else{if("string"!=typeof n&&null===t.stateNode)throw Error(a(166));r=Ni(_i.current),Ni(Ci.current),Ta(t)?(r=t.stateNode,n=t.memoizedProps,r[Er]=t,r.nodeValue!==n&&(t.effectTag|=4)):((r=(9===r.nodeType?r:r.ownerDocument).createTextNode(n))[Er]=t,t.stateNode=r)}return null;case 13:return co(Ii),n=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=r,t):(r=null!==n,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Ta(t):(n=null!==(i=e.memoizedState),r||null===i||null!==(i=e.child.sibling)&&(null!==(l=t.firstEffect)?(t.firstEffect=i,i.nextEffect=l):(t.firstEffect=t.lastEffect=i,i.nextEffect=null),i.effectTag=8)),r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ii.current)?Tl===xl&&(Tl=wl):(Tl!==xl&&Tl!==wl||(Tl=kl),0!==Ml&&null!==Sl&&(Ac(Sl,jl),Rc(Sl,Ml)))),(r||n)&&(t.effectTag|=4),null);case 4:return Ai(),null;case 10:return ti(t),null;case 17:return bo(t.type)&&ho(),null;case 19:if(co(Ii),null===(n=t.memoizedState))return null;if(i=0!=(64&t.effectTag),null===(l=n.rendering)){if(i)Qa(n,!1);else if(Tl!==xl||null!==e&&0!=(64&e.effectTag))for(l=t.child;null!==l;){if(null!==(e=Fi(l))){for(t.effectTag|=64,Qa(n,!1),null!==(i=e.updateQueue)&&(t.updateQueue=i,t.effectTag|=4),null===n.lastEffect&&(t.firstEffect=null),t.lastEffect=n.lastEffect,n=t.child;null!==n;)l=r,(i=n).effectTag&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(e=i.alternate)?(i.childExpirationTime=0,i.expirationTime=l,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null):(i.childExpirationTime=e.childExpirationTime,i.expirationTime=e.expirationTime,i.child=e.child,i.memoizedProps=e.memoizedProps,i.memoizedState=e.memoizedState,i.updateQueue=e.updateQueue,l=e.dependencies,i.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),n=n.sibling;return uo(Ii,1&Ii.current|2),t.child}l=l.sibling}}else{if(!i)if(null!==(e=Fi(l))){if(t.effectTag|=64,i=!0,null!==(r=e.updateQueue)&&(t.updateQueue=r,t.effectTag|=4),Qa(n,!0),null===n.tail&&"hidden"===n.tailMode&&!l.alternate)return null!==(t=t.lastEffect=n.lastEffect)&&(t.nextEffect=null),null}else 2*Uo()-n.renderingStartTime>n.tailExpiration&&1<r&&(t.effectTag|=64,i=!0,Qa(n,!1),t.expirationTime=t.childExpirationTime=r-1);n.isBackwards?(l.sibling=t.child,t.child=l):(null!==(r=n.last)?r.sibling=l:t.child=l,n.last=l)}return null!==n.tail?(0===n.tailExpiration&&(n.tailExpiration=Uo()+500),r=n.tail,n.rendering=r,n.tail=r.sibling,n.lastEffect=t.lastEffect,n.renderingStartTime=Uo(),r.sibling=null,t=Ii.current,uo(Ii,i?1&t|2:1&t),r):null}throw Error(a(156,t.tag))}function Xa(e){switch(e.tag){case 1:bo(e.type)&&ho();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(Ai(),co(po),co(fo),0!=(64&(t=e.effectTag)))throw Error(a(285));return e.effectTag=-4097&t|64,e;case 5:return zi(e),null;case 13:return co(Ii),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return co(Ii),null;case 4:return Ai(),null;case 10:return ti(e),null;default:return null}}function Ja(e,t){return{value:e,source:t,stack:he(t)}}Ua=function(e,t){for(var r=t.child;null!==r;){if(5===r.tag||6===r.tag)e.appendChild(r.stateNode);else if(4!==r.tag&&null!==r.child){r.child.return=r,r=r.child;continue}if(r===t)break;for(;null===r.sibling;){if(null===r.return||r.return===t)return;r=r.return}r.sibling.return=r.return,r=r.sibling}},Ba=function(e,t,r,n,i){var a=e.memoizedProps;if(a!==n){var l,c,u=t.stateNode;switch(Ni(Ci.current),e=null,r){case"input":a=ke(u,a),n=ke(u,n),e=[];break;case"option":a=Ce(u,a),n=Ce(u,n),e=[];break;case"select":a=o({},a,{value:void 0}),n=o({},n,{value:void 0}),e=[];break;case"textarea":a=_e(u,a),n=_e(u,n),e=[];break;default:"function"!=typeof a.onClick&&"function"==typeof n.onClick&&(u.onclick=cr)}for(l in or(r,n),r=null,a)if(!n.hasOwnProperty(l)&&a.hasOwnProperty(l)&&null!=a[l])if("style"===l)for(c in u=a[l])u.hasOwnProperty(c)&&(r||(r={}),r[c]="");else"dangerouslySetInnerHTML"!==l&&"children"!==l&&"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(S.hasOwnProperty(l)?e||(e=[]):(e=e||[]).push(l,null));for(l in n){var s=n[l];if(u=null!=a?a[l]:void 0,n.hasOwnProperty(l)&&s!==u&&(null!=s||null!=u))if("style"===l)if(u){for(c in u)!u.hasOwnProperty(c)||s&&s.hasOwnProperty(c)||(r||(r={}),r[c]="");for(c in s)s.hasOwnProperty(c)&&u[c]!==s[c]&&(r||(r={}),r[c]=s[c])}else r||(e||(e=[]),e.push(l,r)),r=s;else"dangerouslySetInnerHTML"===l?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(e=e||[]).push(l,s)):"children"===l?u===s||"string"!=typeof s&&"number"!=typeof s||(e=e||[]).push(l,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&(S.hasOwnProperty(l)?(null!=s&&lr(i,l),e||u===s||(e=[])):(e=e||[]).push(l,s))}r&&(e=e||[]).push("style",r),i=e,(t.updateQueue=i)&&(t.effectTag|=4)}},Wa=function(e,t,r,n){r!==n&&(t.effectTag|=4)};var Za="function"==typeof WeakSet?WeakSet:Set;function el(e,t){var r=t.source,n=t.stack;null===n&&null!==r&&(n=he(r)),null!==r&&be(r.type),t=t.value,null!==e&&1===e.tag&&be(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function tl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){vc(e,t)}else t.current=null}function rl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var r=e.memoizedProps,n=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?r:Qo(t.type,r),n),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(a(163))}function nl(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.destroy;r.destroy=void 0,void 0!==n&&n()}r=r.next}while(r!==t)}}function ol(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var r=t=t.next;do{if((r.tag&e)===e){var n=r.create;r.destroy=n()}r=r.next}while(r!==t)}}function il(e,t,r){switch(r.tag){case 0:case 11:case 15:case 22:return void ol(3,r);case 1:if(e=r.stateNode,4&r.effectTag)if(null===t)e.componentDidMount();else{var n=r.elementType===r.type?t.memoizedProps:Qo(r.type,t.memoizedProps);e.componentDidUpdate(n,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=r.updateQueue)&&di(r,t,e));case 3:if(null!==(t=r.updateQueue)){if(e=null,null!==r.child)switch(r.child.tag){case 5:e=r.child.stateNode;break;case 1:e=r.child.stateNode}di(r,t,e)}return;case 5:return e=r.stateNode,void(null===t&&4&r.effectTag&&br(r.type,r.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===r.memoizedState&&(r=r.alternate,null!==r&&(r=r.memoizedState,null!==r&&(r=r.dehydrated,null!==r&&It(r)))));case 19:case 17:case 20:case 21:return}throw Error(a(163))}function al(e,t,r){switch("function"==typeof kc&&kc(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e.next;$o(97<r?97:r,(function(){var e=n;do{var r=e.destroy;if(void 0!==r){var o=t;try{r()}catch(e){vc(o,e)}}e=e.next}while(e!==n)}))}break;case 1:tl(t),"function"==typeof(r=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){vc(e,t)}}(t,r);break;case 5:tl(t);break;case 4:sl(e,t,r)}}function ll(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&ll(t)}function cl(e){return 5===e.tag||3===e.tag||4===e.tag}function ul(e){e:{for(var t=e.return;null!==t;){if(cl(t)){var r=t;break e}t=t.return}throw Error(a(160))}switch(t=r.stateNode,r.tag){case 5:var n=!1;break;case 3:case 4:t=t.containerInfo,n=!0;break;default:throw Error(a(161))}16&r.effectTag&&(Ue(t,""),r.effectTag&=-17);e:t:for(r=e;;){for(;null===r.sibling;){if(null===r.return||cl(r.return)){r=null;break e}r=r.return}for(r.sibling.return=r.return,r=r.sibling;5!==r.tag&&6!==r.tag&&18!==r.tag;){if(2&r.effectTag)continue t;if(null===r.child||4===r.tag)continue t;r.child.return=r,r=r.child}if(!(2&r.effectTag)){r=r.stateNode;break e}}n?function e(t,r,n){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,r?8===n.nodeType?n.parentNode.insertBefore(t,r):n.insertBefore(t,r):(8===n.nodeType?(r=n.parentNode).insertBefore(t,n):(r=n).appendChild(t),null!==(n=n._reactRootContainer)&&void 0!==n||null!==r.onclick||(r.onclick=cr));else if(4!==o&&null!==(t=t.child))for(e(t,r,n),t=t.sibling;null!==t;)e(t,r,n),t=t.sibling}(e,r,t):function e(t,r,n){var o=t.tag,i=5===o||6===o;if(i)t=i?t.stateNode:t.stateNode.instance,r?n.insertBefore(t,r):n.appendChild(t);else if(4!==o&&null!==(t=t.child))for(e(t,r,n),t=t.sibling;null!==t;)e(t,r,n),t=t.sibling}(e,r,t)}function sl(e,t,r){for(var n,o,i=t,l=!1;;){if(!l){l=i.return;e:for(;;){if(null===l)throw Error(a(160));switch(n=l.stateNode,l.tag){case 5:o=!1;break e;case 3:case 4:n=n.containerInfo,o=!0;break e}l=l.return}l=!0}if(5===i.tag||6===i.tag){e:for(var c=e,u=i,s=r,f=u;;)if(al(c,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===u)break e;for(;null===f.sibling;){if(null===f.return||f.return===u)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}o?(c=n,u=i.stateNode,8===c.nodeType?c.parentNode.removeChild(u):c.removeChild(u)):n.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){n=i.stateNode.containerInfo,o=!0,i.child.return=i,i=i.child;continue}}else if(al(e,i,r),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(l=!1)}i.sibling.return=i.return,i=i.sibling}}function fl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void nl(3,t);case 1:return;case 5:var r=t.stateNode;if(null!=r){var n=t.memoizedProps,o=null!==e?e.memoizedProps:n;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(r[Sr]=n,"input"===e&&"radio"===n.type&&null!=n.name&&Se(r,n),ir(e,o),t=ir(e,n),o=0;o<i.length;o+=2){var l=i[o],c=i[o+1];"style"===l?rr(r,c):"dangerouslySetInnerHTML"===l?Le(r,c):"children"===l?Ue(r,c):X(r,l,c,t)}switch(e){case"input":Oe(r,n);break;case"textarea":Me(r,n);break;case"select":t=r._wrapperState.wasMultiple,r._wrapperState.wasMultiple=!!n.multiple,null!=(e=n.value)?Pe(r,!!n.multiple,e,!1):t!==!!n.multiple&&(null!=n.defaultValue?Pe(r,!!n.multiple,n.defaultValue,!0):Pe(r,!!n.multiple,n.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(a(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,It(t.containerInfo)));case 12:return;case 13:if(r=t,null===t.memoizedState?n=!1:(n=!0,r=t.child,Rl=Uo()),null!==r)e:for(e=r;;){if(5===e.tag)i=e.stateNode,n?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,o=null!=(o=e.memoizedProps.style)&&o.hasOwnProperty("display")?o.display:null,i.style.display=tr("display",o));else if(6===e.tag)e.stateNode.nodeValue=n?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===r)break;for(;null===e.sibling;){if(null===e.return||e.return===r)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void dl(t);case 19:return void dl(t);case 17:return}throw Error(a(163))}function dl(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var r=e.stateNode;null===r&&(r=e.stateNode=new Za),t.forEach((function(t){var n=xc.bind(null,e,t);r.has(t)||(r.add(t),t.then(n,n))}))}}var pl="function"==typeof WeakMap?WeakMap:Map;function ml(e,t,r){(r=ci(r,null)).tag=3,r.payload={element:null};var n=t.value;return r.callback=function(){Il||(Il=!0,Fl=n),el(e,t)},r}function gl(e,t,r){(r=ci(r,null)).tag=3;var n=e.type.getDerivedStateFromError;if("function"==typeof n){var o=t.value;r.payload=function(){return el(e,t),n(o)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(r.callback=function(){"function"!=typeof n&&(null===Dl?Dl=new Set([this]):Dl.add(this),el(e,t));var r=t.stack;this.componentDidCatch(t.value,{componentStack:null!==r?r:""})}),r}var bl,hl=Math.ceil,vl=Y.ReactCurrentDispatcher,yl=Y.ReactCurrentOwner,xl=0,wl=3,kl=4,El=0,Sl=null,Ol=null,jl=0,Tl=xl,Cl=null,Pl=1073741823,_l=1073741823,Nl=null,Ml=0,Al=!1,Rl=0,zl=null,Il=!1,Fl=null,Dl=null,Ll=!1,Ul=null,Bl=90,Wl=null,$l=0,Hl=null,Vl=0;function ql(){return 0!=(48&El)?1073741821-(Uo()/10|0):0!==Vl?Vl:Vl=1073741821-(Uo()/10|0)}function Gl(e,t,r){if(0==(2&(t=t.mode)))return 1073741823;var n=Bo();if(0==(4&t))return 99===n?1073741823:1073741822;if(0!=(16&El))return jl;if(null!==r)e=Ko(e,0|r.timeoutMs||5e3,250);else switch(n){case 99:e=1073741823;break;case 98:e=Ko(e,150,100);break;case 97:case 96:e=Ko(e,5e3,250);break;case 95:e=2;break;default:throw Error(a(326))}return null!==Sl&&e===jl&&--e,e}function Kl(e,t){if(50<$l)throw $l=0,Hl=null,Error(a(185));if(null!==(e=Ql(e,t))){var r=Bo();1073741823===t?0!=(8&El)&&0==(48&El)?Zl(e):(Xl(e),0===El&&qo()):Xl(e),0==(4&El)||98!==r&&99!==r||(null===Wl?Wl=new Map([[e,t]]):(void 0===(r=Wl.get(e))||r>t)&&Wl.set(e,t))}}function Ql(e,t){e.expirationTime<t&&(e.expirationTime=t);var r=e.alternate;null!==r&&r.expirationTime<t&&(r.expirationTime=t);var n=e.return,o=null;if(null===n&&3===e.tag)o=e.stateNode;else for(;null!==n;){if(r=n.alternate,n.childExpirationTime<t&&(n.childExpirationTime=t),null!==r&&r.childExpirationTime<t&&(r.childExpirationTime=t),null===n.return&&3===n.tag){o=n.stateNode;break}n=n.return}return null!==o&&(Sl===o&&(ac(t),Tl===kl&&Ac(o,jl)),Rc(o,t)),o}function Yl(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Mc(e,t=e.firstPendingTime))return t;var r=e.lastPingedTime;return 2>=(e=r>(e=e.nextKnownPendingLevel)?r:e)&&t!==e?0:e}function Xl(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Vo(Zl.bind(null,e));else{var t=Yl(e),r=e.callbackNode;if(0===t)null!==r&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var n=ql();if(1073741823===t?n=99:1===t||2===t?n=95:n=0>=(n=10*(1073741821-t)-10*(1073741821-n))?99:250>=n?98:5250>=n?97:95,null!==r){var o=e.callbackPriority;if(e.callbackExpirationTime===t&&o>=n)return;r!==Ao&&So(r)}e.callbackExpirationTime=t,e.callbackPriority=n,t=1073741823===t?Vo(Zl.bind(null,e)):Ho(n,Jl.bind(null,e),{timeout:10*(1073741821-t)-Uo()}),e.callbackNode=t}}}function Jl(e,t){if(Vl=0,t)return zc(e,t=ql()),Xl(e),null;var r=Yl(e);if(0!==r){if(t=e.callbackNode,0!=(48&El))throw Error(a(327));if(gc(),e===Sl&&r===jl||rc(e,r),null!==Ol){var n=El;El|=16;for(var o=oc();;)try{cc();break}catch(t){nc(e,t)}if(ei(),El=n,vl.current=o,1===Tl)throw t=Cl,rc(e,r),Ac(e,r),Xl(e),t;if(null===Ol)switch(o=e.finishedWork=e.current.alternate,e.finishedExpirationTime=r,n=Tl,Sl=null,n){case xl:case 1:throw Error(a(345));case 2:zc(e,2<r?2:r);break;case wl:if(Ac(e,r),r===(n=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fc(o)),1073741823===Pl&&10<(o=Rl+500-Uo())){if(Al){var i=e.lastPingedTime;if(0===i||i>=r){e.lastPingedTime=r,rc(e,r);break}}if(0!==(i=Yl(e))&&i!==r)break;if(0!==n&&n!==r){e.lastPingedTime=n;break}e.timeoutHandle=vr(dc.bind(null,e),o);break}dc(e);break;case kl:if(Ac(e,r),r===(n=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fc(o)),Al&&(0===(o=e.lastPingedTime)||o>=r)){e.lastPingedTime=r,rc(e,r);break}if(0!==(o=Yl(e))&&o!==r)break;if(0!==n&&n!==r){e.lastPingedTime=n;break}if(1073741823!==_l?n=10*(1073741821-_l)-Uo():1073741823===Pl?n=0:(n=10*(1073741821-Pl)-5e3,0>(n=(o=Uo())-n)&&(n=0),(r=10*(1073741821-r)-o)<(n=(120>n?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*hl(n/1960))-n)&&(n=r)),10<n){e.timeoutHandle=vr(dc.bind(null,e),n);break}dc(e);break;case 5:if(1073741823!==Pl&&null!==Nl){i=Pl;var l=Nl;if(0>=(n=0|l.busyMinDurationMs)?n=0:(o=0|l.busyDelayMs,n=(i=Uo()-(10*(1073741821-i)-(0|l.timeoutMs||5e3)))<=o?0:o+n-i),10<n){Ac(e,r),e.timeoutHandle=vr(dc.bind(null,e),n);break}}dc(e);break;default:throw Error(a(329))}if(Xl(e),e.callbackNode===t)return Jl.bind(null,e)}}return null}function Zl(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&El))throw Error(a(327));if(gc(),e===Sl&&t===jl||rc(e,t),null!==Ol){var r=El;El|=16;for(var n=oc();;)try{lc();break}catch(t){nc(e,t)}if(ei(),El=r,vl.current=n,1===Tl)throw r=Cl,rc(e,t),Ac(e,t),Xl(e),r;if(null!==Ol)throw Error(a(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,Sl=null,dc(e),Xl(e)}return null}function ec(e,t){var r=El;El|=1;try{return e(t)}finally{0===(El=r)&&qo()}}function tc(e,t){var r=El;El&=-2,El|=8;try{return e(t)}finally{0===(El=r)&&qo()}}function rc(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var r=e.timeoutHandle;if(-1!==r&&(e.timeoutHandle=-1,yr(r)),null!==Ol)for(r=Ol.return;null!==r;){var n=r;switch(n.tag){case 1:null!=(n=n.type.childContextTypes)&&ho();break;case 3:Ai(),co(po),co(fo);break;case 5:zi(n);break;case 4:Ai();break;case 13:case 19:co(Ii);break;case 10:ti(n)}r=r.return}Sl=e,Ol=jc(e.current,null),jl=t,Tl=xl,Cl=null,_l=Pl=1073741823,Nl=null,Ml=0,Al=!1}function nc(e,t){for(;;){try{if(ei(),Li.current=ba,Vi)for(var r=Wi.memoizedState;null!==r;){var n=r.queue;null!==n&&(n.pending=null),r=r.next}if(Bi=0,Hi=$i=Wi=null,Vi=!1,null===Ol||null===Ol.return)return Tl=1,Cl=t,Ol=null;e:{var o=e,i=Ol.return,a=Ol,l=t;if(t=jl,a.effectTag|=2048,a.firstEffect=a.lastEffect=null,null!==l&&"object"==typeof l&&"function"==typeof l.then){var c=l;if(0==(2&a.mode)){var u=a.alternate;u?(a.updateQueue=u.updateQueue,a.memoizedState=u.memoizedState,a.expirationTime=u.expirationTime):(a.updateQueue=null,a.memoizedState=null)}var s=0!=(1&Ii.current),f=i;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var m=f.memoizedProps;d=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!s)}}if(d){var g=f.updateQueue;if(null===g){var b=new Set;b.add(c),f.updateQueue=b}else g.add(c);if(0==(2&f.mode)){if(f.effectTag|=64,a.effectTag&=-2981,1===a.tag)if(null===a.alternate)a.tag=17;else{var h=ci(1073741823,null);h.tag=2,ui(a,h)}a.expirationTime=1073741823;break e}l=void 0,a=t;var v=o.pingCache;if(null===v?(v=o.pingCache=new pl,l=new Set,v.set(c,l)):void 0===(l=v.get(c))&&(l=new Set,v.set(c,l)),!l.has(a)){l.add(a);var y=yc.bind(null,o,c,a);c.then(y,y)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);l=Error((be(a.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+he(a))}5!==Tl&&(Tl=2),l=Ja(l,a),f=i;do{switch(f.tag){case 3:c=l,f.effectTag|=4096,f.expirationTime=t,si(f,ml(f,c,t));break e;case 1:c=l;var x=f.type,w=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof x.getDerivedStateFromError||null!==w&&"function"==typeof w.componentDidCatch&&(null===Dl||!Dl.has(w)))){f.effectTag|=4096,f.expirationTime=t,si(f,gl(f,c,t));break e}}f=f.return}while(null!==f)}Ol=sc(Ol)}catch(e){t=e;continue}break}}function oc(){var e=vl.current;return vl.current=ba,null===e?ba:e}function ic(e,t){e<Pl&&2<e&&(Pl=e),null!==t&&e<_l&&2<e&&(_l=e,Nl=t)}function ac(e){e>Ml&&(Ml=e)}function lc(){for(;null!==Ol;)Ol=uc(Ol)}function cc(){for(;null!==Ol&&!Ro();)Ol=uc(Ol)}function uc(e){var t=bl(e.alternate,e,jl);return e.memoizedProps=e.pendingProps,null===t&&(t=sc(e)),yl.current=null,t}function sc(e){Ol=e;do{var t=Ol.alternate;if(e=Ol.return,0==(2048&Ol.effectTag)){if(t=Ya(t,Ol,jl),1===jl||1!==Ol.childExpirationTime){for(var r=0,n=Ol.child;null!==n;){var o=n.expirationTime,i=n.childExpirationTime;o>r&&(r=o),i>r&&(r=i),n=n.sibling}Ol.childExpirationTime=r}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Ol.firstEffect),null!==Ol.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Ol.firstEffect),e.lastEffect=Ol.lastEffect),1<Ol.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Ol:e.firstEffect=Ol,e.lastEffect=Ol))}else{if(null!==(t=Xa(Ol)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Ol.sibling))return t;Ol=e}while(null!==Ol);return Tl===xl&&(Tl=5),null}function fc(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function dc(e){var t=Bo();return $o(99,pc.bind(null,e,t)),null}function pc(e,t){do{gc()}while(null!==Ul);if(0!=(48&El))throw Error(a(327));var r=e.finishedWork,n=e.finishedExpirationTime;if(null===r)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,r===e.current)throw Error(a(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var o=fc(r);if(e.firstPendingTime=o,n<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:n<=e.firstSuspendedTime&&(e.firstSuspendedTime=n-1),n<=e.lastPingedTime&&(e.lastPingedTime=0),n<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Sl&&(Ol=Sl=null,jl=0),1<r.effectTag?null!==r.lastEffect?(r.lastEffect.nextEffect=r,o=r.firstEffect):o=r:o=r.firstEffect,null!==o){var i=El;El|=32,yl.current=null,mr=qt;var l=dr();if(pr(l)){if("selectionStart"in l)var c={start:l.selectionStart,end:l.selectionEnd};else e:{var u=(c=(c=l.ownerDocument)&&c.defaultView||window).getSelection&&c.getSelection();if(u&&0!==u.rangeCount){c=u.anchorNode;var s=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{c.nodeType,f.nodeType}catch(e){c=null;break e}var d=0,p=-1,m=-1,g=0,b=0,h=l,v=null;t:for(;;){for(var y;h!==c||0!==s&&3!==h.nodeType||(p=d+s),h!==f||0!==u&&3!==h.nodeType||(m=d+u),3===h.nodeType&&(d+=h.nodeValue.length),null!==(y=h.firstChild);)v=h,h=y;for(;;){if(h===l)break t;if(v===c&&++g===s&&(p=d),v===f&&++b===u&&(m=d),null!==(y=h.nextSibling))break;v=(h=v).parentNode}h=y}c=-1===p||-1===m?null:{start:p,end:m}}else c=null}c=c||{start:0,end:0}}else c=null;gr={activeElementDetached:null,focusedElem:l,selectionRange:c},qt=!1,zl=o;do{try{mc()}catch(e){if(null===zl)throw Error(a(330));vc(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=o;do{try{for(l=e,c=t;null!==zl;){var x=zl.effectTag;if(16&x&&Ue(zl.stateNode,""),128&x){var w=zl.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&x){case 2:ul(zl),zl.effectTag&=-3;break;case 6:ul(zl),zl.effectTag&=-3,fl(zl.alternate,zl);break;case 1024:zl.effectTag&=-1025;break;case 1028:zl.effectTag&=-1025,fl(zl.alternate,zl);break;case 4:fl(zl.alternate,zl);break;case 8:sl(l,s=zl,c),ll(s)}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(a(330));vc(zl,e),zl=zl.nextEffect}}while(null!==zl);if(k=gr,w=dr(),x=k.focusedElem,c=k.selectionRange,w!==x&&x&&x.ownerDocument&&function e(t,r){return!(!t||!r)&&(t===r||(!t||3!==t.nodeType)&&(r&&3===r.nodeType?e(t,r.parentNode):"contains"in t?t.contains(r):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(r))))}(x.ownerDocument.documentElement,x)){null!==c&&pr(x)&&(w=c.start,void 0===(k=c.end)&&(k=w),"selectionStart"in x?(x.selectionStart=w,x.selectionEnd=Math.min(k,x.value.length)):(k=(w=x.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),s=x.textContent.length,l=Math.min(c.start,s),c=void 0===c.end?l:Math.min(c.end,s),!k.extend&&l>c&&(s=c,c=l,l=s),s=fr(x,l),f=fr(x,c),s&&f&&(1!==k.rangeCount||k.anchorNode!==s.node||k.anchorOffset!==s.offset||k.focusNode!==f.node||k.focusOffset!==f.offset)&&((w=w.createRange()).setStart(s.node,s.offset),k.removeAllRanges(),l>c?(k.addRange(w),k.extend(f.node,f.offset)):(w.setEnd(f.node,f.offset),k.addRange(w))))),w=[];for(k=x;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof x.focus&&x.focus(),x=0;x<w.length;x++)(k=w[x]).element.scrollLeft=k.left,k.element.scrollTop=k.top}qt=!!mr,gr=mr=null,e.current=r,zl=o;do{try{for(x=e;null!==zl;){var E=zl.effectTag;if(36&E&&il(x,zl.alternate,zl),128&E){w=void 0;var S=zl.ref;if(null!==S){var O=zl.stateNode;switch(zl.tag){case 5:w=O;break;default:w=O}"function"==typeof S?S(w):S.current=w}}zl=zl.nextEffect}}catch(e){if(null===zl)throw Error(a(330));vc(zl,e),zl=zl.nextEffect}}while(null!==zl);zl=null,zo(),El=i}else e.current=r;if(Ll)Ll=!1,Ul=e,Bl=t;else for(zl=o;null!==zl;)t=zl.nextEffect,zl.nextEffect=null,zl=t;if(0===(t=e.firstPendingTime)&&(Dl=null),1073741823===t?e===Hl?$l++:($l=0,Hl=e):$l=0,"function"==typeof wc&&wc(r.stateNode,n),Xl(e),Il)throw Il=!1,e=Fl,Fl=null,e;return 0!=(8&El)||qo(),null}function mc(){for(;null!==zl;){var e=zl.effectTag;0!=(256&e)&&rl(zl.alternate,zl),0==(512&e)||Ll||(Ll=!0,Ho(97,(function(){return gc(),null}))),zl=zl.nextEffect}}function gc(){if(90!==Bl){var e=97<Bl?97:Bl;return Bl=90,$o(e,bc)}}function bc(){if(null===Ul)return!1;var e=Ul;if(Ul=null,0!=(48&El))throw Error(a(331));var t=El;for(El|=32,e=e.current.firstEffect;null!==e;){try{var r=e;if(0!=(512&r.effectTag))switch(r.tag){case 0:case 11:case 15:case 22:nl(5,r),ol(5,r)}}catch(t){if(null===e)throw Error(a(330));vc(e,t)}r=e.nextEffect,e.nextEffect=null,e=r}return El=t,qo(),!0}function hc(e,t,r){ui(e,t=ml(e,t=Ja(r,t),1073741823)),null!==(e=Ql(e,1073741823))&&Xl(e)}function vc(e,t){if(3===e.tag)hc(e,e,t);else for(var r=e.return;null!==r;){if(3===r.tag){hc(r,e,t);break}if(1===r.tag){var n=r.stateNode;if("function"==typeof r.type.getDerivedStateFromError||"function"==typeof n.componentDidCatch&&(null===Dl||!Dl.has(n))){ui(r,e=gl(r,e=Ja(t,e),1073741823)),null!==(r=Ql(r,1073741823))&&Xl(r);break}}r=r.return}}function yc(e,t,r){var n=e.pingCache;null!==n&&n.delete(t),Sl===e&&jl===r?Tl===kl||Tl===wl&&1073741823===Pl&&Uo()-Rl<500?rc(e,jl):Al=!0:Mc(e,r)&&(0!==(t=e.lastPingedTime)&&t<r||(e.lastPingedTime=r,Xl(e)))}function xc(e,t){var r=e.stateNode;null!==r&&r.delete(t),0===(t=0)&&(t=Gl(t=ql(),e,null)),null!==(e=Ql(e,t))&&Xl(e)}bl=function(e,t,r){var n=t.expirationTime;if(null!==e){var o=t.pendingProps;if(e.memoizedProps!==o||po.current)_a=!0;else{if(n<r){switch(_a=!1,t.tag){case 3:La(t),Ca();break;case 5:if(Ri(t),4&t.mode&&1!==r&&o.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:bo(t.type)&&xo(t);break;case 4:Mi(t,t.stateNode.containerInfo);break;case 10:n=t.memoizedProps.value,o=t.type._context,uo(Yo,o._currentValue),o._currentValue=n;break;case 13:if(null!==t.memoizedState)return 0!==(n=t.child.childExpirationTime)&&n>=r?Ha(e,t,r):(uo(Ii,1&Ii.current),null!==(t=Ka(e,t,r))?t.sibling:null);uo(Ii,1&Ii.current);break;case 19:if(n=t.childExpirationTime>=r,0!=(64&e.effectTag)){if(n)return Ga(e,t,r);t.effectTag|=64}if(null!==(o=t.memoizedState)&&(o.rendering=null,o.tail=null),uo(Ii,Ii.current),!n)return null}return Ka(e,t,r)}_a=!1}}else _a=!1;switch(t.expirationTime=0,t.tag){case 2:if(n=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,o=go(t,fo.current),ni(t,r),o=Ki(null,t,n,e,o,r),t.effectTag|=1,"object"==typeof o&&null!==o&&"function"==typeof o.render&&void 0===o.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,bo(n)){var i=!0;xo(t)}else i=!1;t.memoizedState=null!==o.state&&void 0!==o.state?o.state:null,ai(t);var l=n.getDerivedStateFromProps;"function"==typeof l&&gi(t,n,l,e),o.updater=bi,t.stateNode=o,o._reactInternalFiber=t,xi(t,n,e,r),t=Da(null,t,n,!0,i,r)}else t.tag=0,Na(null,t,o,r),t=t.child;return t;case 16:e:{if(o=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(o),1!==o._status)throw o._result;switch(o=o._result,t.type=o,i=t.tag=function(e){if("function"==typeof e)return Oc(e)?1:0;if(null!=e){if((e=e.$$typeof)===ce)return 11;if(e===fe)return 14}return 2}(o),e=Qo(o,e),i){case 0:t=Ia(null,t,o,e,r);break e;case 1:t=Fa(null,t,o,e,r);break e;case 11:t=Ma(null,t,o,e,r);break e;case 14:t=Aa(null,t,o,Qo(o.type,e),n,r);break e}throw Error(a(306,o,""))}return t;case 0:return n=t.type,o=t.pendingProps,Ia(e,t,n,o=t.elementType===n?o:Qo(n,o),r);case 1:return n=t.type,o=t.pendingProps,Fa(e,t,n,o=t.elementType===n?o:Qo(n,o),r);case 3:if(La(t),n=t.updateQueue,null===e||null===n)throw Error(a(282));if(n=t.pendingProps,o=null!==(o=t.memoizedState)?o.element:null,li(e,t),fi(t,n,null,r),(n=t.memoizedState.element)===o)Ca(),t=Ka(e,t,r);else{if((o=t.stateNode.hydrate)&&(wa=xr(t.stateNode.containerInfo.firstChild),xa=t,o=ka=!0),o)for(r=ji(t,null,n,r),t.child=r;r;)r.effectTag=-3&r.effectTag|1024,r=r.sibling;else Na(e,t,n,r),Ca();t=t.child}return t;case 5:return Ri(t),null===e&&Oa(t),n=t.type,o=t.pendingProps,i=null!==e?e.memoizedProps:null,l=o.children,hr(n,o)?l=null:null!==i&&hr(n,i)&&(t.effectTag|=16),za(e,t),4&t.mode&&1!==r&&o.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Na(e,t,l,r),t=t.child),t;case 6:return null===e&&Oa(t),null;case 13:return Ha(e,t,r);case 4:return Mi(t,t.stateNode.containerInfo),n=t.pendingProps,null===e?t.child=Oi(t,null,n,r):Na(e,t,n,r),t.child;case 11:return n=t.type,o=t.pendingProps,Ma(e,t,n,o=t.elementType===n?o:Qo(n,o),r);case 7:return Na(e,t,t.pendingProps,r),t.child;case 8:case 12:return Na(e,t,t.pendingProps.children,r),t.child;case 10:e:{n=t.type._context,o=t.pendingProps,l=t.memoizedProps,i=o.value;var c=t.type._context;if(uo(Yo,c._currentValue),c._currentValue=i,null!==l)if(c=l.value,0===(i=Fn(c,i)?0:0|("function"==typeof n._calculateChangedBits?n._calculateChangedBits(c,i):1073741823))){if(l.children===o.children&&!po.current){t=Ka(e,t,r);break e}}else for(null!==(c=t.child)&&(c.return=t);null!==c;){var u=c.dependencies;if(null!==u){l=c.child;for(var s=u.firstContext;null!==s;){if(s.context===n&&0!=(s.observedBits&i)){1===c.tag&&((s=ci(r,null)).tag=2,ui(c,s)),c.expirationTime<r&&(c.expirationTime=r),null!==(s=c.alternate)&&s.expirationTime<r&&(s.expirationTime=r),ri(c.return,r),u.expirationTime<r&&(u.expirationTime=r);break}s=s.next}}else l=10===c.tag&&c.type===t.type?null:c.child;if(null!==l)l.return=c;else for(l=c;null!==l;){if(l===t){l=null;break}if(null!==(c=l.sibling)){c.return=l.return,l=c;break}l=l.return}c=l}Na(e,t,o.children,r),t=t.child}return t;case 9:return o=t.type,n=(i=t.pendingProps).children,ni(t,r),n=n(o=oi(o,i.unstable_observedBits)),t.effectTag|=1,Na(e,t,n,r),t.child;case 14:return i=Qo(o=t.type,t.pendingProps),Aa(e,t,o,i=Qo(o.type,i),n,r);case 15:return Ra(e,t,t.type,t.pendingProps,n,r);case 17:return n=t.type,o=t.pendingProps,o=t.elementType===n?o:Qo(n,o),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,bo(n)?(e=!0,xo(t)):e=!1,ni(t,r),vi(t,n,o),xi(t,n,o,r),Da(null,t,n,!0,e,r);case 19:return Ga(e,t,r)}throw Error(a(156,t.tag))};var wc=null,kc=null;function Ec(e,t,r,n){this.tag=e,this.key=r,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=n,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Sc(e,t,r,n){return new Ec(e,t,r,n)}function Oc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function jc(e,t){var r=e.alternate;return null===r?((r=Sc(e.tag,t,e.key,e.mode)).elementType=e.elementType,r.type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.childExpirationTime=e.childExpirationTime,r.expirationTime=e.expirationTime,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,t=e.dependencies,r.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function Tc(e,t,r,n,o,i){var l=2;if(n=e,"function"==typeof e)Oc(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case re:return Cc(r.children,o,i,t);case le:l=8,o|=7;break;case ne:l=8,o|=1;break;case oe:return(e=Sc(12,r,t,8|o)).elementType=oe,e.type=oe,e.expirationTime=i,e;case ue:return(e=Sc(13,r,t,o)).type=ue,e.elementType=ue,e.expirationTime=i,e;case se:return(e=Sc(19,r,t,o)).elementType=se,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case ie:l=10;break e;case ae:l=9;break e;case ce:l=11;break e;case fe:l=14;break e;case de:l=16,n=null;break e;case pe:l=22;break e}throw Error(a(130,null==e?e:typeof e,""))}return(t=Sc(l,r,t,o)).elementType=e,t.type=n,t.expirationTime=i,t}function Cc(e,t,r,n){return(e=Sc(7,e,n,t)).expirationTime=r,e}function Pc(e,t,r){return(e=Sc(6,e,null,t)).expirationTime=r,e}function _c(e,t,r){return(t=Sc(4,null!==e.children?e.children:[],e.key,t)).expirationTime=r,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Nc(e,t,r){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=r,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Mc(e,t){var r=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==r&&r>=t&&e<=t}function Ac(e,t){var r=e.firstSuspendedTime,n=e.lastSuspendedTime;r<t&&(e.firstSuspendedTime=t),(n>t||0===r)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function Rc(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var r=e.firstSuspendedTime;0!==r&&(t>=r?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function zc(e,t){var r=e.lastExpiredTime;(0===r||r>t)&&(e.lastExpiredTime=t)}function Ic(e,t,r,n){var o=t.current,i=ql(),l=pi.suspense;i=Gl(i,o,l);e:if(r){t:{if(Ze(r=r._reactInternalFiber)!==r||1!==r.tag)throw Error(a(170));var c=r;do{switch(c.tag){case 3:c=c.stateNode.context;break t;case 1:if(bo(c.type)){c=c.stateNode.__reactInternalMemoizedMergedChildContext;break t}}c=c.return}while(null!==c);throw Error(a(171))}if(1===r.tag){var u=r.type;if(bo(u)){r=yo(r,u,c);break e}}r=c}else r=so;return null===t.context?t.context=r:t.pendingContext=r,(t=ci(i,l)).payload={element:e},null!==(n=void 0===n?null:n)&&(t.callback=n),ui(o,t),Kl(o,i),i}function Fc(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Dc(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Lc(e,t){Dc(e,t),(e=e.alternate)&&Dc(e,t)}function Uc(e,t,r){var n=new Nc(e,t,r=null!=r&&!0===r.hydrate),o=Sc(3,null,null,2===t?7:1===t?3:0);n.current=o,o.stateNode=n,ai(o),e[Or]=n.current,r&&0!==t&&function(e,t){var r=Je(t);jt.forEach((function(e){mt(e,t,r)})),Tt.forEach((function(e){mt(e,t,r)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=n}function Bc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Wc(e,t,r,n,o){var i=r._reactRootContainer;if(i){var a=i._internalRoot;if("function"==typeof o){var l=o;o=function(){var e=Fc(a);l.call(e)}}Ic(t,a,e,o)}else{if(i=r._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var r;r=e.lastChild;)e.removeChild(r);return new Uc(e,0,t?{hydrate:!0}:void 0)}(r,n),a=i._internalRoot,"function"==typeof o){var c=o;o=function(){var e=Fc(a);c.call(e)}}tc((function(){Ic(t,a,e,o)}))}return Fc(a)}function $c(e,t,r){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==n?null:""+n,children:e,containerInfo:t,implementation:r}}function Hc(e,t){var r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Bc(t))throw Error(a(200));return $c(e,t,null,r)}Uc.prototype.render=function(e){Ic(e,this._internalRoot,null,null)},Uc.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Ic(null,e,null,(function(){t[Or]=null}))},gt=function(e){if(13===e.tag){var t=Ko(ql(),150,100);Kl(e,t),Lc(e,t)}},bt=function(e){13===e.tag&&(Kl(e,3),Lc(e,3))},ht=function(e){if(13===e.tag){var t=ql();Kl(e,t=Gl(t,e,null)),Lc(e,t)}},C=function(e,t,r){switch(t){case"input":if(Oe(e,r),t=r.name,"radio"===r.type&&null!=t){for(r=e;r.parentNode;)r=r.parentNode;for(r=r.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<r.length;t++){var n=r[t];if(n!==e&&n.form===e.form){var o=Pr(n);if(!o)throw Error(a(90));we(n),Oe(n,o)}}}break;case"textarea":Me(e,r);break;case"select":null!=(t=r.value)&&Pe(e,!!r.multiple,t,!1)}},R=ec,z=function(e,t,r,n,o){var i=El;El|=4;try{return $o(98,e.bind(null,t,r,n,o))}finally{0===(El=i)&&qo()}},I=function(){0==(49&El)&&(function(){if(null!==Wl){var e=Wl;Wl=null,e.forEach((function(e,t){zc(t,e),Xl(t)})),qo()}}(),gc())},F=function(e,t){var r=El;El|=2;try{return e(t)}finally{0===(El=r)&&qo()}};var Vc,qc,Gc={Events:[Tr,Cr,Pr,j,E,Ir,function(e){ot(e,zr)},M,A,Xt,lt,gc,{current:!1}]};qc=(Vc={findFiberByHostInstance:jr,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var r=t.inject(e);wc=function(e){try{t.onCommitFiberRoot(r,e,void 0,64==(64&e.current.effectTag))}catch(e){}},kc=function(e){try{t.onCommitFiberUnmount(r,e)}catch(e){}}}catch(e){}}(o({},Vc,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:Y.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return qc?qc(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Gc,t.createPortal=Hc,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(a(188));throw Error(a(268,Object.keys(e)))}return e=null===(e=rt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&El))throw Error(a(187));var r=El;El|=1;try{return $o(99,e.bind(null,t))}finally{El=r,qo()}},t.hydrate=function(e,t,r){if(!Bc(t))throw Error(a(200));return Wc(null,e,t,!0,r)},t.render=function(e,t,r){if(!Bc(t))throw Error(a(200));return Wc(null,e,t,!1,r)},t.unmountComponentAtNode=function(e){if(!Bc(e))throw Error(a(40));return!!e._reactRootContainer&&(tc((function(){Wc(null,null,e,!1,(function(){e._reactRootContainer=null,e[Or]=null}))})),!0)},t.unstable_batchedUpdates=ec,t.unstable_createPortal=function(e,t){return Hc(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,r,n){if(!Bc(r))throw Error(a(200));if(null==e||void 0===e._reactInternalFiber)throw Error(a(38));return Wc(e,t,r,!1,n)},t.version="16.13.1"},function(e,t,r){"use strict";e.exports=r(379)},function(e,t,r){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n,o,i,a,l;if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,u=null,s=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(s,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(s,0))},o=function(e,t){u=setTimeout(e,t)},i=function(){clearTimeout(u)},a=function(){return!1},l=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,m=window.setTimeout,g=window.clearTimeout;if("undefined"!=typeof console){var b=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof b&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var h=p.now();t.unstable_now=function(){return p.now()-h}}var v=!1,y=null,x=-1,w=5,k=0;a=function(){return t.unstable_now()>=k},l=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):w=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,S=E.port2;E.port1.onmessage=function(){if(null!==y){var e=t.unstable_now();k=e+w;try{y(!0,e)?S.postMessage(null):(v=!1,y=null)}catch(e){throw S.postMessage(null),e}}else v=!1},n=function(e){y=e,v||(v=!0,S.postMessage(null))},o=function(e,r){x=m((function(){e(t.unstable_now())}),r)},i=function(){g(x),x=-1}}function O(e,t){var r=e.length;e.push(t);e:for(;;){var n=r-1>>>1,o=e[n];if(!(void 0!==o&&0<C(o,t)))break e;e[n]=t,e[r]=o,r=n}}function j(e){return void 0===(e=e[0])?null:e}function T(e){var t=e[0];if(void 0!==t){var r=e.pop();if(r!==t){e[0]=r;e:for(var n=0,o=e.length;n<o;){var i=2*(n+1)-1,a=e[i],l=i+1,c=e[l];if(void 0!==a&&0>C(a,r))void 0!==c&&0>C(c,a)?(e[n]=c,e[l]=r,n=l):(e[n]=a,e[i]=r,n=i);else{if(!(void 0!==c&&0>C(c,r)))break e;e[n]=c,e[l]=r,n=l}}}return t}return null}function C(e,t){var r=e.sortIndex-t.sortIndex;return 0!==r?r:e.id-t.id}var P=[],_=[],N=1,M=null,A=3,R=!1,z=!1,I=!1;function F(e){for(var t=j(_);null!==t;){if(null===t.callback)T(_);else{if(!(t.startTime<=e))break;T(_),t.sortIndex=t.expirationTime,O(P,t)}t=j(_)}}function D(e){if(I=!1,F(e),!z)if(null!==j(P))z=!0,n(L);else{var t=j(_);null!==t&&o(D,t.startTime-e)}}function L(e,r){z=!1,I&&(I=!1,i()),R=!0;var n=A;try{for(F(r),M=j(P);null!==M&&(!(M.expirationTime>r)||e&&!a());){var l=M.callback;if(null!==l){M.callback=null,A=M.priorityLevel;var c=l(M.expirationTime<=r);r=t.unstable_now(),"function"==typeof c?M.callback=c:M===j(P)&&T(P),F(r)}else T(P);M=j(P)}if(null!==M)var u=!0;else{var s=j(_);null!==s&&o(D,s.startTime-r),u=!1}return u}finally{M=null,A=n,R=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=l;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){z||R||(z=!0,n(L))},t.unstable_getCurrentPriorityLevel=function(){return A},t.unstable_getFirstCallbackNode=function(){return j(P)},t.unstable_next=function(e){switch(A){case 1:case 2:case 3:var t=3;break;default:t=A}var r=A;A=t;try{return e()}finally{A=r}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=A;A=e;try{return t()}finally{A=r}},t.unstable_scheduleCallback=function(e,r,a){var l=t.unstable_now();if("object"==typeof a&&null!==a){var c=a.delay;c="number"==typeof c&&0<c?l+c:l,a="number"==typeof a.timeout?a.timeout:U(e)}else a=U(e),c=l;return e={id:N++,callback:r,priorityLevel:e,startTime:c,expirationTime:a=c+a,sortIndex:-1},c>l?(e.sortIndex=c,O(_,e),null===j(P)&&e===j(_)&&(I?i():I=!0,o(D,c-l))):(e.sortIndex=a,O(P,e),z||R||(z=!0,n(L))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();F(e);var r=j(P);return r!==M&&null!==M&&null!==r&&null!==r.callback&&r.startTime<=e&&r.expirationTime<M.expirationTime||a()},t.unstable_wrapCallback=function(e){var t=A;return function(){var r=A;A=t;try{return e.apply(this,arguments)}finally{A=r}}}},function(e,t,r){"use strict";var n=r(381);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,r,o,i,a){if(a!==n){var l=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw l.name="Invariant Violation",l}}function t(){return e}e.isRequired=e;var r={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return r.PropTypes=r,r}},function(e,t,r){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,r){"use strict";
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n="function"==typeof Symbol&&Symbol.for,o=n?Symbol.for("react.element"):60103,i=n?Symbol.for("react.portal"):60106,a=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,c=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,f=n?Symbol.for("react.async_mode"):60111,d=n?Symbol.for("react.concurrent_mode"):60111,p=n?Symbol.for("react.forward_ref"):60112,m=n?Symbol.for("react.suspense"):60113,g=n?Symbol.for("react.suspense_list"):60120,b=n?Symbol.for("react.memo"):60115,h=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,x=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case o:switch(e=e.type){case f:case d:case a:case c:case l:case m:return e;default:switch(e=e&&e.$$typeof){case s:case p:case h:case b:case u:return e;default:return t}}case i:return t}}}function E(e){return k(e)===d}t.AsyncMode=f,t.ConcurrentMode=d,t.ContextConsumer=s,t.ContextProvider=u,t.Element=o,t.ForwardRef=p,t.Fragment=a,t.Lazy=h,t.Memo=b,t.Portal=i,t.Profiler=c,t.StrictMode=l,t.Suspense=m,t.isAsyncMode=function(e){return E(e)||k(e)===f},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===s},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===o},t.isForwardRef=function(e){return k(e)===p},t.isFragment=function(e){return k(e)===a},t.isLazy=function(e){return k(e)===h},t.isMemo=function(e){return k(e)===b},t.isPortal=function(e){return k(e)===i},t.isProfiler=function(e){return k(e)===c},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===m},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===a||e===d||e===c||e===l||e===m||e===g||"object"==typeof e&&null!==e&&(e.$$typeof===h||e.$$typeof===b||e.$$typeof===u||e.$$typeof===s||e.$$typeof===p||e.$$typeof===y||e.$$typeof===x||e.$$typeof===w||e.$$typeof===v)},t.typeOf=k},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,r){var n,o,i;o=[t,r(0),r(10),r(385)],void 0===(i="function"==typeof(n=function(e,t,r,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=s;var o=a(t),i=a(r);function a(e){return e&&e.__esModule?e:{default:e}}var l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},c=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&l.return&&l.return()}finally{if(o)throw i}}return r}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")},u=["Audio","BallTriangle","Bars","Circles","Grid","Hearts","Oval","Puff","Rings","TailSpin","ThreeDots","Watch","RevolvingDot","Triangle","Plane","MutatingDots","CradleLoader"];function s(e){var r,i=(0,t.useState)(!0),a=c(i,2),s=a[0],f=a[1];return(0,t.useEffect)((function(){var t=void 0;return e.timeout&&e.timeout>0&&(t=setTimeout((function(){f(!1)}),e.timeout)),function(){t&&clearTimeout(t)}})),e.visible&&"false"!==e.visible&&s?o.default.createElement("div",{"aria-busy":"true",className:e.className,style:e.style},o.default.createElement((r=e.type,u.includes(r)?n.Spinner[r]:n.Spinner.Audio),l({},e))):null}s.propTypes={type:i.default.oneOf([].concat(u)),style:i.default.objectOf(i.default.string),className:i.default.string,visible:i.default.oneOfType([i.default.bool,i.default.string]),timeout:i.default.number},s.defaultProps={type:"Audio",style:{},className:"",visible:!0,timeout:0}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(386),r(387),r(388),r(389),r(390),r(391),r(392),r(393),r(394),r(395),r(396),r(397),r(398),r(399),r(400),r(401),r(402)],void 0===(i="function"==typeof(n=function(e,t,r,n,o,i,a,l,c,u,s,f,d,p,m,g,b,h){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Spinner=void 0,e.Spinner={Circles:t.Circles,Audio:n.Audio,BallTriangle:o.BallTriangle,Bars:i.Bars,CradleLoader:a.CradleLoader,Grid:l.Grid,Hearts:c.Hearts,MutatingDots:u.MutatingDots,Oval:s.Oval,Plane:f.Plane,Puff:d.Puff,RevolvingDot:p.RevolvingDot,Rings:m.Rings,TailSpin:g.TailSpin,ThreeDots:b.ThreeDots,Triangle:h.Triangle,Watch:r.Watch}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Circles=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Circles=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 135 135",xmlns:"http://www.w3.org/2000/svg",fill:e.color,"aria-label":e.label},n.default.createElement("path",{d:"M67.447 58c5.523 0 10-4.477 10-10s-4.477-10-10-10-10 4.477-10 10 4.477 10 10 10zm9.448 9.447c0 5.523 4.477 10 10 10 5.522 0 10-4.477 10-10s-4.478-10-10-10c-5.523 0-10 4.477-10 10zm-9.448 9.448c-5.523 0-10 4.477-10 10 0 5.522 4.477 10 10 10s10-4.478 10-10c0-5.523-4.477-10-10-10zM58 67.447c0-5.523-4.477-10-10-10s-10 4.477-10 10 4.477 10 10 10 10-4.477 10-10z"},n.default.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 67 67",to:"-360 67 67",dur:"2.5s",repeatCount:"indefinite"})),n.default.createElement("path",{d:"M28.19 40.31c6.627 0 12-5.374 12-12 0-6.628-5.373-12-12-12-6.628 0-12 5.372-12 12 0 6.626 5.372 12 12 12zm30.72-19.825c4.686 4.687 12.284 4.687 16.97 0 4.686-4.686 4.686-12.284 0-16.97-4.686-4.687-12.284-4.687-16.97 0-4.687 4.686-4.687 12.284 0 16.97zm35.74 7.705c0 6.627 5.37 12 12 12 6.626 0 12-5.373 12-12 0-6.628-5.374-12-12-12-6.63 0-12 5.372-12 12zm19.822 30.72c-4.686 4.686-4.686 12.284 0 16.97 4.687 4.686 12.285 4.686 16.97 0 4.687-4.686 4.687-12.284 0-16.97-4.685-4.687-12.283-4.687-16.97 0zm-7.704 35.74c-6.627 0-12 5.37-12 12 0 6.626 5.373 12 12 12s12-5.374 12-12c0-6.63-5.373-12-12-12zm-30.72 19.822c-4.686-4.686-12.284-4.686-16.97 0-4.686 4.687-4.686 12.285 0 16.97 4.686 4.687 12.284 4.687 16.97 0 4.687-4.685 4.687-12.283 0-16.97zm-35.74-7.704c0-6.627-5.372-12-12-12-6.626 0-12 5.373-12 12s5.374 12 12 12c6.628 0 12-5.373 12-12zm-19.823-30.72c4.687-4.686 4.687-12.284 0-16.97-4.686-4.686-12.284-4.686-16.97 0-4.687 4.686-4.687 12.284 0 16.97 4.686 4.687 12.284 4.687 16.97 0z"},n.default.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 67 67",to:"360 67 67",dur:"8s",repeatCount:"indefinite"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Watch=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Watch=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,version:"1.1",id:"L2",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 100 100",enableBackground:"new 0 0 100 100",xmlSpace:"preserve","aria-label":e.label},n.default.createElement("circle",{fill:"none",stroke:e.color,strokeWidth:"4",strokeMiterlimit:"10",cx:"50",cy:"50",r:e.radius}),n.default.createElement("line",{fill:"none",strokeLinecap:"round",stroke:e.color,strokeWidth:"4",strokeMiterlimit:"10",x1:"50",y1:"50",x2:"85",y2:"50.5"},n.default.createElement("animateTransform",{attributeName:"transform",dur:"2s",type:"rotate",from:"0 50 50",to:"360 50 50",repeatCount:"indefinite"})),n.default.createElement("line",{fill:"none",strokeLinecap:"round",stroke:e.color,strokeWidth:"4",strokeMiterlimit:"10",x1:"50",y1:"50",x2:"49.5",y2:"74"},n.default.createElement("animateTransform",{attributeName:"transform",dur:"15s",type:"rotate",from:"0 50 50",to:"360 50 50",repeatCount:"indefinite"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading",radius:48}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Audio=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Audio=function(e){return n.default.createElement("svg",{height:e.height,width:e.width,fill:e.color,viewBox:"0 0 55 80",xmlns:"http://www.w3.org/2000/svg","aria-label":e.label},n.default.createElement("g",{transform:"matrix(1 0 0 -1 0 80)"},n.default.createElement("rect",{width:"10",height:"20",rx:"3"},n.default.createElement("animate",{attributeName:"height",begin:"0s",dur:"4.3s",values:"20;45;57;80;64;32;66;45;64;23;66;13;64;56;34;34;2;23;76;79;20",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"15",width:"10",height:"80",rx:"3"},n.default.createElement("animate",{attributeName:"height",begin:"0s",dur:"2s",values:"80;55;33;5;75;23;73;33;12;14;60;80",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"30",width:"10",height:"50",rx:"3"},n.default.createElement("animate",{attributeName:"height",begin:"0s",dur:"1.4s",values:"50;34;78;23;56;23;34;76;80;54;21;50",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"45",width:"10",height:"30",rx:"3"},n.default.createElement("animate",{attributeName:"height",begin:"0s",dur:"2s",values:"30;45;13;80;56;72;45;76;34;23;67;30",calcMode:"linear",repeatCount:"indefinite"}))))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.BallTriangle=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.BallTriangle=function(e){return n.default.createElement("svg",{height:e.height,width:e.width,stroke:e.color,viewBox:"0 0 57 57",xmlns:"http://www.w3.org/2000/svg","aria-label":e.label},n.default.createElement("g",{fill:"none",fillRule:"evenodd"},n.default.createElement("g",{transform:"translate(1 1)",strokeWidth:"2"},n.default.createElement("circle",{cx:"5",cy:"50",r:e.radius},n.default.createElement("animate",{attributeName:"cy",begin:"0s",dur:"2.2s",values:"50;5;50;50",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"cx",begin:"0s",dur:"2.2s",values:"5;27;49;5",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"27",cy:"5",r:e.radius},n.default.createElement("animate",{attributeName:"cy",begin:"0s",dur:"2.2s",from:"5",to:"5",values:"5;50;50;5",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"cx",begin:"0s",dur:"2.2s",from:"27",to:"27",values:"27;49;5;27",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"49",cy:"50",r:e.radius},n.default.createElement("animate",{attributeName:"cy",begin:"0s",dur:"2.2s",values:"50;50;5;50",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"cx",from:"49",to:"49",begin:"0s",dur:"2.2s",values:"49;5;27;49",calcMode:"linear",repeatCount:"indefinite"})))))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",radius:5,label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Bars=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Bars=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,fill:e.color,viewBox:"0 0 135 140",xmlns:"http://www.w3.org/2000/svg","aria-label":e.label},n.default.createElement("rect",{y:"10",width:"15",height:"120",rx:"6"},n.default.createElement("animate",{attributeName:"height",begin:"0.5s",dur:"1s",values:"120;110;100;90;80;70;60;50;40;140;120",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"y",begin:"0.5s",dur:"1s",values:"10;15;20;25;30;35;40;45;50;0;10",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"30",y:"10",width:"15",height:"120",rx:"6"},n.default.createElement("animate",{attributeName:"height",begin:"0.25s",dur:"1s",values:"120;110;100;90;80;70;60;50;40;140;120",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"y",begin:"0.25s",dur:"1s",values:"10;15;20;25;30;35;40;45;50;0;10",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"60",width:"15",height:"140",rx:"6"},n.default.createElement("animate",{attributeName:"height",begin:"0s",dur:"1s",values:"120;110;100;90;80;70;60;50;40;140;120",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"y",begin:"0s",dur:"1s",values:"10;15;20;25;30;35;40;45;50;0;10",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"90",y:"10",width:"15",height:"120",rx:"6"},n.default.createElement("animate",{attributeName:"height",begin:"0.25s",dur:"1s",values:"120;110;100;90;80;70;60;50;40;140;120",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"y",begin:"0.25s",dur:"1s",values:"10;15;20;25;30;35;40;45;50;0;10",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("rect",{x:"120",y:"10",width:"15",height:"120",rx:"6"},n.default.createElement("animate",{attributeName:"height",begin:"0.5s",dur:"1s",values:"120;110;100;90;80;70;60;50;40;140;120",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"y",begin:"0.5s",dur:"1s",values:"10;15;20;25;30;35;40;45;50;0;10",calcMode:"linear",repeatCount:"indefinite"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CradleLoader=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.CradleLoader=function(e){return n.default.createElement("div",{"aria-label":e.label,role:"presentation",className:"container"},n.default.createElement("div",{className:"react-spinner-loader-swing"},n.default.createElement("div",{className:"react-spinner-loader-swing-l"}),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",{className:"react-spinner-loader-swing-r"})),n.default.createElement("div",{className:"react-spinner-loader-shadow"},n.default.createElement("div",{className:"react-spinner-loader-shadow-l"}),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",null),n.default.createElement("div",{className:"react-spinner-loader-shadow-r"})))};a.propTypes={label:o.default.string},a.defaultProps={label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Grid=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Grid=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 105 105",fill:e.color,"aria-label":e.label},n.default.createElement("circle",{cx:"12.5",cy:"12.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"12.5",cy:"52.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"100ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"52.5",cy:"12.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"300ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"52.5",cy:"52.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"600ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"92.5",cy:"12.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"800ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"92.5",cy:"52.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"400ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"12.5",cy:"92.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"700ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"52.5",cy:"92.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"500ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"92.5",cy:"92.5",r:e.radius},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"200ms",dur:"1s",values:"1;.2;1",calcMode:"linear",repeatCount:"indefinite"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",radius:12.5,label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Hearts=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Hearts=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 140 64",xmlns:"http://www.w3.org/2000/svg",fill:e.color,"aria-label":e.label},n.default.createElement("path",{d:"M30.262 57.02L7.195 40.723c-5.84-3.976-7.56-12.06-3.842-18.063 3.715-6 11.467-7.65 17.306-3.68l4.52 3.76 2.6-5.274c3.717-6.002 11.47-7.65 17.305-3.68 5.84 3.97 7.56 12.054 3.842 18.062L34.49 56.118c-.897 1.512-2.793 1.915-4.228.9z",attributeName:"fill-opacity",from:"0",to:".5"},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"0s",dur:"1.4s",values:"0.5;1;0.5",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("path",{d:"M105.512 56.12l-14.44-24.272c-3.716-6.008-1.996-14.093 3.843-18.062 5.835-3.97 13.588-2.322 17.306 3.68l2.6 5.274 4.52-3.76c5.84-3.97 13.592-2.32 17.307 3.68 3.718 6.003 1.998 14.088-3.842 18.064L109.74 57.02c-1.434 1.014-3.33.61-4.228-.9z",attributeName:"fill-opacity",from:"0",to:".5"},n.default.createElement("animate",{attributeName:"fill-opacity",begin:"0.7s",dur:"1.4s",values:"0.5;1;0.5",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("path",{d:"M67.408 57.834l-23.01-24.98c-5.864-6.15-5.864-16.108 0-22.248 5.86-6.14 15.37-6.14 21.234 0L70 16.168l4.368-5.562c5.863-6.14 15.375-6.14 21.235 0 5.863 6.14 5.863 16.098 0 22.247l-23.007 24.98c-1.43 1.556-3.757 1.556-5.188 0z"}))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MutatingDots=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.MutatingDots=function(e){return n.default.createElement("svg",{id:"goo-loader",width:e.width,height:e.height,"aria-label":e.label},n.default.createElement("filter",{id:"fancy-goo"},n.default.createElement("feGaussianBlur",{in:"SourceGraphic",stdDeviation:"6",result:"blur"}),n.default.createElement("feColorMatrix",{in:"blur",mode:"matrix",values:"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9",result:"goo"}),n.default.createElement("feComposite",{in:"SourceGraphic",in2:"goo",operator:"atop"})),n.default.createElement("g",{filter:"url(#fancy-goo)"},n.default.createElement("animateTransform",{id:"mainAnim",attributeName:"transform",attributeType:"XML",type:"rotate",from:"0 50 50",to:"359 50 50",dur:"1.2s",repeatCount:"indefinite"}),n.default.createElement("circle",{cx:"50%",cy:"40",r:e.radius,fill:e.color},n.default.createElement("animate",{id:"cAnim1",attributeType:"XML",attributeName:"cy",dur:"0.6s",begin:"0;cAnim1.end+0.2s",calcMode:"spline",values:"40;20;40",keyTimes:"0;0.3;1",keySplines:"0.175, 0.885, 0.320, 1.5; 0.175, 0.885, 0.320, 1.5"})),n.default.createElement("circle",{cx:"50%",cy:"60",r:e.radius,fill:e.secondaryColor},n.default.createElement("animate",{id:"cAnim2",attributeType:"XML",attributeName:"cy",dur:"0.6s",begin:"0.4s;cAnim2.end+0.2s",calcMode:"spline",values:"60;80;60",keyTimes:"0;0.3;1",keySplines:"0.175, 0.885, 0.320, 1.5;0.175, 0.885, 0.320, 1.5"}))))};a.propTypes={width:o.default.number,secondaryColor:o.default.string,height:o.default.number,color:o.default.string,radius:o.default.number,label:o.default.string},a.defaultProps={width:80,height:90,color:"green",radius:11,secondaryColor:"green",label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Oval=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Oval=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 38 38",xmlns:"http://www.w3.org/2000/svg",stroke:e.color,"aria-label":e.label},n.default.createElement("g",{fill:"none",fillRule:"evenodd"},n.default.createElement("g",{transform:"translate(1 1)",strokeWidth:"2"},n.default.createElement("circle",{strokeOpacity:".5",cx:"18",cy:"18",r:e.radius}),n.default.createElement("path",{d:"M36 18c0-9.94-8.06-18-18-18"},n.default.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 18 18",to:"360 18 18",dur:"1s",repeatCount:"indefinite"})))))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading",radius:18}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Plane=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Plane=function(e){return n.default.createElement("svg",{className:"react-spinner-loader-svg-calLoader",xmlns:"http://www.w3.org/2000/svg",width:"230",height:"230","aria-label":e.label},n.default.createElement("desc",null,"Plane animation. Loading "),n.default.createElement("path",{className:"react-spinner-loader-cal-loader__path",style:{stroke:e.secondaryColor},d:"M86.429 40c63.616-20.04 101.511 25.08 107.265 61.93 6.487 41.54-18.593 76.99-50.6 87.643-59.46 19.791-101.262-23.577-107.142-62.616C29.398 83.441 59.945 48.343 86.43 40z",fill:"none",stroke:"#0099cc",strokeWidth:"4",strokeLinecap:"round",strokeLinejoin:"round",strokeDasharray:"10 10 10 10 10 10 10 432",strokeDashoffset:"77"}),n.default.createElement("path",{className:"cal-loader__plane",style:{fill:e.color},d:"M141.493 37.93c-1.087-.927-2.942-2.002-4.32-2.501-2.259-.824-3.252-.955-9.293-1.172-4.017-.146-5.197-.23-5.47-.37-.766-.407-1.526-1.448-7.114-9.773-4.8-7.145-5.344-7.914-6.327-8.976-1.214-1.306-1.396-1.378-3.79-1.473-1.036-.04-2-.043-2.153-.002-.353.1-.87.586-1 .952-.139.399-.076.71.431 2.22.241.72 1.029 3.386 1.742 5.918 1.644 5.844 2.378 8.343 2.863 9.705.206.601.33 1.1.275 1.125-.24.097-10.56 1.066-11.014 1.032a3.532 3.532 0 0 1-1.002-.276l-.487-.246-2.044-2.613c-2.234-2.87-2.228-2.864-3.35-3.309-.717-.287-2.82-.386-3.276-.163-.457.237-.727.644-.737 1.152-.018.39.167.805 1.916 4.373 1.06 2.166 1.964 4.083 1.998 4.27.04.179.004.521-.076.75-.093.228-1.109 2.064-2.269 4.088-1.921 3.34-2.11 3.711-2.123 4.107-.008.25.061.557.168.725.328.512.72.644 1.966.676 1.32.029 2.352-.236 3.05-.762.222-.171 1.275-1.313 2.412-2.611 1.918-2.185 2.048-2.32 2.45-2.505.241-.111.601-.232.82-.271.267-.058 2.213.201 5.912.8 3.036.48 5.525.894 5.518.914 0 .026-.121.306-.27.638-.54 1.198-1.515 3.842-3.35 9.021-1.029 2.913-2.107 5.897-2.4 6.62-.703 1.748-.725 1.833-.594 2.286.137.46.45.833.872 1.012.41.177 3.823.24 4.37.085.852-.25 1.44-.688 2.312-1.724 1.166-1.39 3.169-3.948 6.771-8.661 5.8-7.583 6.561-8.49 7.387-8.702.233-.065 2.828-.056 5.784.011 5.827.138 6.64.09 8.62-.5 2.24-.67 4.035-1.65 5.517-3.016 1.136-1.054 1.135-1.014.207-1.962-.357-.38-.767-.777-.902-.893z",fill:"#000033"}))};a.propTypes={secondaryColor:o.default.string,color:o.default.string,label:o.default.string},a.defaultProps={secondaryColor:"grey",color:"#FFA500",label:"async-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Puff=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Puff=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 44 44",xmlns:"http://www.w3.org/2000/svg",stroke:e.color,"aria-label":e.label},n.default.createElement("g",{fill:"none",fillRule:"evenodd",strokeWidth:"2"},n.default.createElement("circle",{cx:"22",cy:"22",r:e.radius},n.default.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.8s",values:"1; 20",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.165, 0.84, 0.44, 1",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"strokeOpacity",begin:"0s",dur:"1.8s",values:"1; 0",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.3, 0.61, 0.355, 1",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"22",cy:"22",r:e.radius},n.default.createElement("animate",{attributeName:"r",begin:"-0.9s",dur:"1.8s",values:"1; 20",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.165, 0.84, 0.44, 1",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"strokeOpacity",begin:"-0.9s",dur:"1.8s",values:"1; 0",calcMode:"spline",keyTimes:"0; 1",keySplines:"0.3, 0.61, 0.355, 1",repeatCount:"indefinite"}))))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading",radius:1}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.RevolvingDot=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.RevolvingDot=function(e){return n.default.createElement("svg",{version:"1.1",width:e.width,height:e.height,xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px","aria-label":e.label},n.default.createElement("circle",{fill:"none",stroke:e.color,strokeWidth:"4",cx:"50",cy:"50",r:e.radius+38,style:{opacity:.5}}),n.default.createElement("circle",{fill:e.color,stroke:e.color,strokeWidth:"3",cx:"8",cy:"54",r:e.radius},n.default.createElement("animateTransform",{attributeName:"transform",dur:"2s",type:"rotate",from:"0 50 48",to:"360 50 52",repeatCount:"indefinite"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading",radius:6}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Rings=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Rings=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 45 45",xmlns:"http://www.w3.org/2000/svg",stroke:e.color,"aria-label":e.label},n.default.createElement("g",{fill:"none",fillRule:"evenodd",transform:"translate(1 1)",strokeWidth:"2"},n.default.createElement("circle",{cx:"22",cy:"22",r:e.radius,strokeOpacity:"0"},n.default.createElement("animate",{attributeName:"r",begin:"1.5s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"stroke-opacity",begin:"1.5s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"stroke-width",begin:"1.5s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"22",cy:"22",r:e.radius,strokeOpacity:"0"},n.default.createElement("animate",{attributeName:"r",begin:"3s",dur:"3s",values:"6;22",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"strokeOpacity",begin:"3s",dur:"3s",values:"1;0",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"strokeWidth",begin:"3s",dur:"3s",values:"2;0",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"22",cy:"22",r:e.radius+2},n.default.createElement("animate",{attributeName:"r",begin:"0s",dur:"1.5s",values:"6;1;2;3;4;5;6",calcMode:"linear",repeatCount:"indefinite"}))))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",radius:6,label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TailSpin=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.TailSpin=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 38 38",xmlns:"http://www.w3.org/2000/svg","aria-label":e.label},n.default.createElement("defs",null,n.default.createElement("linearGradient",{x1:"8.042%",y1:"0%",x2:"65.682%",y2:"23.865%",id:"a"},n.default.createElement("stop",{stopColor:e.color,stopOpacity:"0",offset:"0%"}),n.default.createElement("stop",{stopColor:e.color,stopOpacity:".631",offset:"63.146%"}),n.default.createElement("stop",{stopColor:e.color,offset:"100%"}))),n.default.createElement("g",{fill:"none",fillRule:"evenodd"},n.default.createElement("g",{transform:"translate(1 1)"},n.default.createElement("path",{d:"M36 18c0-9.94-8.06-18-18-18",id:"Oval-2",stroke:e.color,strokeWidth:"2"},n.default.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 18 18",to:"360 18 18",dur:"0.9s",repeatCount:"indefinite"})),n.default.createElement("circle",{fill:"#fff",cx:"36",cy:"18",r:e.radius},n.default.createElement("animateTransform",{attributeName:"transform",type:"rotate",from:"0 18 18",to:"360 18 18",dur:"0.9s",repeatCount:"indefinite"})))))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",radius:1,label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.ThreeDots=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.ThreeDots=function(e){return n.default.createElement("svg",{width:e.width,height:e.height,viewBox:"0 0 120 30",xmlns:"http://www.w3.org/2000/svg",fill:e.color,"aria-label":e.label},n.default.createElement("circle",{cx:"15",cy:"15",r:e.radius+6},n.default.createElement("animate",{attributeName:"r",from:"15",to:"15",begin:"0s",dur:"0.8s",values:"15;9;15",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"fillOpacity",from:"1",to:"1",begin:"0s",dur:"0.8s",values:"1;.5;1",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"60",cy:"15",r:e.radius,attributeName:"fillOpacity",from:"1",to:"0.3"},n.default.createElement("animate",{attributeName:"r",from:"9",to:"9",begin:"0s",dur:"0.8s",values:"9;15;9",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"fillOpacity",from:"0.5",to:"0.5",begin:"0s",dur:"0.8s",values:".5;1;.5",calcMode:"linear",repeatCount:"indefinite"})),n.default.createElement("circle",{cx:"105",cy:"15",r:e.radius+6},n.default.createElement("animate",{attributeName:"r",from:"15",to:"15",begin:"0s",dur:"0.8s",values:"15;9;15",calcMode:"linear",repeatCount:"indefinite"}),n.default.createElement("animate",{attributeName:"fillOpacity",from:"1",to:"1",begin:"0s",dur:"0.8s",values:"1;.5;1",calcMode:"linear",repeatCount:"indefinite"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string,radius:o.default.number},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading",radius:9}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){var n,o,i;o=[t,r(0),r(10)],void 0===(i="function"==typeof(n=function(e,t,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.Triangle=void 0;var n=i(t),o=i(r);function i(e){return e&&e.__esModule?e:{default:e}}var a=e.Triangle=function(e){return n.default.createElement("div",{className:"react-spinner-loader-svg"},n.default.createElement("svg",{id:"triangle",width:e.width,height:e.height,viewBox:"-3 -4 39 39","aria-label":e.label},n.default.createElement("polygon",{fill:"transparent",stroke:e.color,strokeWidth:"1",points:"16,0 32,32 0,32"})))};a.propTypes={height:o.default.oneOfType([o.default.string,o.default.number]),width:o.default.oneOfType([o.default.string,o.default.number]),color:o.default.string,label:o.default.string},a.defaultProps={height:80,width:80,color:"green",label:"audio-loading"}})?n.apply(t,o):n)||(e.exports=i)},function(e,t,r){"use strict";t.__esModule=!0;var n=r(0),o=(a(n),a(r(10))),i=a(r(404));a(r(405));function a(e){return e&&e.__esModule?e:{default:e}}function l(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}function s(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(r,n){e=r,t.forEach((function(t){return t(e,n)}))}}}t.default=function(e,t){var r,a,f="__create-react-context-"+(0,i.default)()+"__",d=function(e){function r(){var t,n;l(this,r);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return t=n=c(this,e.call.apply(e,[this].concat(i))),n.emitter=s(n.props.value),c(n,t)}return u(r,e),r.prototype.getChildContext=function(){var e;return(e={})[f]=this.emitter,e},r.prototype.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var r=this.props.value,n=e.value,o=void 0;((i=r)===(a=n)?0!==i||1/i==1/a:i!=i&&a!=a)?o=0:(o="function"==typeof t?t(r,n):1073741823,0!==(o|=0)&&this.emitter.set(e.value,o))}var i,a},r.prototype.render=function(){return this.props.children},r}(n.Component);d.childContextTypes=((r={})[f]=o.default.object.isRequired,r);var p=function(t){function r(){var e,n;l(this,r);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return e=n=c(this,t.call.apply(t,[this].concat(i))),n.state={value:n.getValue()},n.onUpdate=function(e,t){0!=((0|n.observedBits)&t)&&n.setState({value:n.getValue()})},c(n,e)}return u(r,t),r.prototype.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?1073741823:t},r.prototype.componentDidMount=function(){this.context[f]&&this.context[f].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?1073741823:e},r.prototype.componentWillUnmount=function(){this.context[f]&&this.context[f].off(this.onUpdate)},r.prototype.getValue=function(){return this.context[f]?this.context[f].get():e},r.prototype.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},r}(n.Component);return p.contextTypes=((a={})[f]=o.default.object,a),{Provider:d,Consumer:p}},e.exports=t.default},function(e,t,r){"use strict";(function(t){var r="__global_unique_id__";e.exports=function(){return t[r]=(t[r]||0)+1}}).call(this,r(64))},function(e,t,r){"use strict";var n=function(){};e.exports=n},function(e,t,r){"use strict";var n=r(20),o=r(150),i=r(407),a=r(156);function l(e){var t=new i(e),r=o(i.prototype.request,t);return n.extend(r,i.prototype,t),n.extend(r,t),r}var c=l(r(153));c.Axios=i,c.create=function(e){return l(a(c.defaults,e))},c.Cancel=r(157),c.CancelToken=r(420),c.isCancel=r(152),c.all=function(e){return Promise.all(e)},c.spread=r(421),e.exports=c,e.exports.default=c},function(e,t,r){"use strict";var n=r(20),o=r(151),i=r(408),a=r(409),l=r(156);function c(e){this.defaults=e,this.interceptors={request:new i,response:new i}}c.prototype.request=function(e){"string"==typeof e?(e=arguments[1]||{}).url=arguments[0]:e=e||{},(e=l(this.defaults,e)).method?e.method=e.method.toLowerCase():this.defaults.method?e.method=this.defaults.method.toLowerCase():e.method="get";var t=[a,void 0],r=Promise.resolve(e);for(this.interceptors.request.forEach((function(e){t.unshift(e.fulfilled,e.rejected)})),this.interceptors.response.forEach((function(e){t.push(e.fulfilled,e.rejected)}));t.length;)r=r.then(t.shift(),t.shift());return r},c.prototype.getUri=function(e){return e=l(this.defaults,e),o(e.url,e.params,e.paramsSerializer).replace(/^\?/,"")},n.forEach(["delete","get","head","options"],(function(e){c.prototype[e]=function(t,r){return this.request(l(r||{},{method:e,url:t}))}})),n.forEach(["post","put","patch"],(function(e){c.prototype[e]=function(t,r,n){return this.request(l(n||{},{method:e,url:t,data:r}))}})),e.exports=c},function(e,t,r){"use strict";var n=r(20);function o(){this.handlers=[]}o.prototype.use=function(e,t){return this.handlers.push({fulfilled:e,rejected:t}),this.handlers.length-1},o.prototype.eject=function(e){this.handlers[e]&&(this.handlers[e]=null)},o.prototype.forEach=function(e){n.forEach(this.handlers,(function(t){null!==t&&e(t)}))},e.exports=o},function(e,t,r){"use strict";var n=r(20),o=r(410),i=r(152),a=r(153);function l(e){e.cancelToken&&e.cancelToken.throwIfRequested()}e.exports=function(e){return l(e),e.headers=e.headers||{},e.data=o(e.data,e.headers,e.transformRequest),e.headers=n.merge(e.headers.common||{},e.headers[e.method]||{},e.headers),n.forEach(["delete","get","head","post","put","patch","common"],(function(t){delete e.headers[t]})),(e.adapter||a.adapter)(e).then((function(t){return l(e),t.data=o(t.data,t.headers,e.transformResponse),t}),(function(t){return i(t)||(l(e),t&&t.response&&(t.response.data=o(t.response.data,t.response.headers,e.transformResponse))),Promise.reject(t)}))}},function(e,t,r){"use strict";var n=r(20);e.exports=function(e,t,r){return n.forEach(r,(function(r){e=r(e,t)})),e}},function(e,t,r){"use strict";var n=r(20);e.exports=function(e,t){n.forEach(e,(function(r,n){n!==t&&n.toUpperCase()===t.toUpperCase()&&(e[t]=r,delete e[n])}))}},function(e,t,r){"use strict";var n=r(155);e.exports=function(e,t,r){var o=r.config.validateStatus;r.status&&o&&!o(r.status)?t(n("Request failed with status code "+r.status,r.config,null,r.request,r)):e(r)}},function(e,t,r){"use strict";e.exports=function(e,t,r,n,o){return e.config=t,r&&(e.code=r),e.request=n,e.response=o,e.isAxiosError=!0,e.toJSON=function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:this.config,code:this.code}},e}},function(e,t,r){"use strict";var n=r(20);e.exports=n.isStandardBrowserEnv()?{write:function(e,t,r,o,i,a){var l=[];l.push(e+"="+encodeURIComponent(t)),n.isNumber(r)&&l.push("expires="+new Date(r).toGMTString()),n.isString(o)&&l.push("path="+o),n.isString(i)&&l.push("domain="+i),!0===a&&l.push("secure"),document.cookie=l.join("; ")},read:function(e){var t=document.cookie.match(new RegExp("(^|;\\s*)("+e+")=([^;]*)"));return t?decodeURIComponent(t[3]):null},remove:function(e){this.write(e,"",Date.now()-864e5)}}:{write:function(){},read:function(){return null},remove:function(){}}},function(e,t,r){"use strict";var n=r(416),o=r(417);e.exports=function(e,t){return e&&!n(t)?o(e,t):t}},function(e,t,r){"use strict";e.exports=function(e){return/^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)}},function(e,t,r){"use strict";e.exports=function(e,t){return t?e.replace(/\/+$/,"")+"/"+t.replace(/^\/+/,""):e}},function(e,t,r){"use strict";var n=r(20),o=["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"];e.exports=function(e){var t,r,i,a={};return e?(n.forEach(e.split("\n"),(function(e){if(i=e.indexOf(":"),t=n.trim(e.substr(0,i)).toLowerCase(),r=n.trim(e.substr(i+1)),t){if(a[t]&&o.indexOf(t)>=0)return;a[t]="set-cookie"===t?(a[t]?a[t]:[]).concat([r]):a[t]?a[t]+", "+r:r}})),a):a}},function(e,t,r){"use strict";var n=r(20);e.exports=n.isStandardBrowserEnv()?function(){var e,t=/(msie|trident)/i.test(navigator.userAgent),r=document.createElement("a");function o(e){var n=e;return t&&(r.setAttribute("href",n),n=r.href),r.setAttribute("href",n),{href:r.href,protocol:r.protocol?r.protocol.replace(/:$/,""):"",host:r.host,search:r.search?r.search.replace(/^\?/,""):"",hash:r.hash?r.hash.replace(/^#/,""):"",hostname:r.hostname,port:r.port,pathname:"/"===r.pathname.charAt(0)?r.pathname:"/"+r.pathname}}return e=o(window.location.href),function(t){var r=n.isString(t)?o(t):t;return r.protocol===e.protocol&&r.host===e.host}}():function(){return!0}},function(e,t,r){"use strict";var n=r(157);function o(e){if("function"!=typeof e)throw new TypeError("executor must be a function.");var t;this.promise=new Promise((function(e){t=e}));var r=this;e((function(e){r.reason||(r.reason=new n(e),t(r.reason))}))}o.prototype.throwIfRequested=function(){if(this.reason)throw this.reason},o.source=function(){var e;return{token:new o((function(t){e=t})),cancel:e}},e.exports=o},function(e,t,r){"use strict";e.exports=function(e){return function(t){return e.apply(null,t)}}},function(e,t,r){var n=r(423),o=r(107);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=n(o,i);if(!o.locals||e.hot.invalidate){var l=o.locals;e.hot.accept(107,(function(){"string"==typeof(o=(o=r(107)).__esModule?o.default:o)&&(o=[[e.i,o,""]]),function(e,t){if(!e&&t||e&&!t)return!1;var r;for(r in e)if(e[r]!==t[r])return!1;for(r in t)if(!e[r])return!1;return!0}(l,o.locals)?(l=o.locals,a(o)):e.hot.invalidate()}))}e.hot.dispose((function(){a()})),e.exports=o.locals||{}},function(e,t,r){"use strict";var n,o=function(){return void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n},i=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),a=[];function l(e){for(var t=-1,r=0;r<a.length;r++)if(a[r].identifier===e){t=r;break}return t}function c(e,t){for(var r={},n=[],o=0;o<e.length;o++){var i=e[o],c=t.base?i[0]+t.base:i[0],u=r[c]||0,s="".concat(c," ").concat(u);r[c]=u+1;var f=l(s),d={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(d)):a.push({identifier:s,updater:b(d,t),references:1}),n.push(s)}return n}function u(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var o=r.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function d(e,t,r,n){var o=r?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function p(e,t,r){var n=r.css,o=r.media,i=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var m=null,g=0;function b(e,t){var r,n,o;if(t.singleton){var i=g++;r=m||(m=u(t)),n=d.bind(null,r,i,!1),o=d.bind(null,r,i,!0)}else r=u(t),n=p.bind(null,r,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var r=c(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<r.length;n++){var o=l(r[n]);a[o].references--}for(var i=c(e,t),u=0;u<r.length;u++){var s=l(r[u]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}r=i}}}},function(e,t,r){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=function(e,t){var r=e[1]||"",n=e[3];if(!n)return r;if(t&&"function"==typeof btoa){var o=(a=n,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(c," */")),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(i).concat([o]).join("\n")}var a,l,c;return[r].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(e,r,n){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(n)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);n&&o[c[0]]||(r&&(c[2]?c[2]="".concat(r," and ").concat(c[2]):c[2]=r),t.push(c))}},t}},function(e,t,r){"use strict";r.r(t);var n=r(0),o=r.n(n),i=r(39),a=r.n(i),l=r(10),c=r.n(l),u=o.a.createContext(null);var s=function(e){e()},f={notify:function(){}};function d(){var e=s,t=null,r=null;return{clear:function(){t=null,r=null},notify:function(){e((function(){for(var e=t;e;)e.callback(),e=e.next}))},get:function(){for(var e=[],r=t;r;)e.push(r),r=r.next;return e},subscribe:function(e){var n=!0,o=r={callback:e,next:null,prev:r};return o.prev?o.prev.next=o:t=o,function(){n&&null!==t&&(n=!1,o.next?o.next.prev=o.prev:r=o.prev,o.prev?o.prev.next=o.next:t=o.next)}}}}var p=function(){function e(e,t){this.store=e,this.parentSub=t,this.unsubscribe=null,this.listeners=f,this.handleChangeWrapper=this.handleChangeWrapper.bind(this)}var t=e.prototype;return t.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},t.notifyNestedSubs=function(){this.listeners.notify()},t.handleChangeWrapper=function(){this.onStateChange&&this.onStateChange()},t.isSubscribed=function(){return Boolean(this.unsubscribe)},t.trySubscribe=function(){this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.handleChangeWrapper):this.store.subscribe(this.handleChangeWrapper),this.listeners=d())},t.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=f)},e}();var m=function(e){var t=e.store,r=e.context,i=e.children,a=Object(n.useMemo)((function(){var e=new p(t);return e.onStateChange=e.notifyNestedSubs,{store:t,subscription:e}}),[t]),l=Object(n.useMemo)((function(){return t.getState()}),[t]);Object(n.useEffect)((function(){var e=a.subscription;return e.trySubscribe(),l!==t.getState()&&e.notifyNestedSubs(),function(){e.tryUnsubscribe(),e.onStateChange=null}}),[a,l]);var c=r||u;return o.a.createElement(c.Provider,{value:a},i)},g=r(3),b=r(15),h=r(56),v=r.n(h),y=r(55),x="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?n.useLayoutEffect:n.useEffect,w=[],k=[null,null];function E(e,t){var r=e[1];return[t.payload,r+1]}function S(e,t,r){x((function(){return e.apply(void 0,t)}),r)}function O(e,t,r,n,o,i,a){e.current=n,t.current=o,r.current=!1,i.current&&(i.current=null,a())}function j(e,t,r,n,o,i,a,l,c,u){if(e){var s=!1,f=null,d=function(){if(!s){var e,r,d=t.getState();try{e=n(d,o.current)}catch(e){r=e,f=e}r||(f=null),e===i.current?a.current||c():(i.current=e,l.current=e,a.current=!0,u({type:"STORE_UPDATED",payload:{error:r}}))}};r.onStateChange=d,r.trySubscribe(),d();return function(){if(s=!0,r.tryUnsubscribe(),r.onStateChange=null,f)throw f}}}var T=function(){return[null,0]};function C(e,t){void 0===t&&(t={});var r=t,i=r.getDisplayName,a=void 0===i?function(e){return"ConnectAdvanced("+e+")"}:i,l=r.methodName,c=void 0===l?"connectAdvanced":l,s=r.renderCountProp,f=void 0===s?void 0:s,d=r.shouldHandleStateChanges,m=void 0===d||d,h=r.storeKey,x=void 0===h?"store":h,C=(r.withRef,r.forwardRef),P=void 0!==C&&C,_=r.context,N=void 0===_?u:_,M=Object(b.a)(r,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef","forwardRef","context"]),A=N;return function(t){var r=t.displayName||t.name||"Component",i=a(r),l=Object(g.a)({},M,{getDisplayName:a,methodName:c,renderCountProp:f,shouldHandleStateChanges:m,storeKey:x,displayName:i,wrappedComponentName:r,WrappedComponent:t}),u=M.pure;var s=u?n.useMemo:function(e){return e()};function d(r){var i=Object(n.useMemo)((function(){var e=r.reactReduxForwardedRef,t=Object(b.a)(r,["reactReduxForwardedRef"]);return[r.context,e,t]}),[r]),a=i[0],c=i[1],u=i[2],f=Object(n.useMemo)((function(){return a&&a.Consumer&&Object(y.isContextConsumer)(o.a.createElement(a.Consumer,null))?a:A}),[a,A]),d=Object(n.useContext)(f),h=Boolean(r.store)&&Boolean(r.store.getState)&&Boolean(r.store.dispatch);Boolean(d)&&Boolean(d.store);var v=h?r.store:d.store,x=Object(n.useMemo)((function(){return function(t){return e(t.dispatch,l)}(v)}),[v]),C=Object(n.useMemo)((function(){if(!m)return k;var e=new p(v,h?null:d.subscription),t=e.notifyNestedSubs.bind(e);return[e,t]}),[v,h,d]),P=C[0],_=C[1],N=Object(n.useMemo)((function(){return h?d:Object(g.a)({},d,{subscription:P})}),[h,d,P]),M=Object(n.useReducer)(E,w,T),R=M[0][0],z=M[1];if(R&&R.error)throw R.error;var I=Object(n.useRef)(),F=Object(n.useRef)(u),D=Object(n.useRef)(),L=Object(n.useRef)(!1),U=s((function(){return D.current&&u===F.current?D.current:x(v.getState(),u)}),[v,R,u]);S(O,[F,I,L,u,U,D,_]),S(j,[m,v,P,x,F,I,L,D,_,z],[v,P,x]);var B=Object(n.useMemo)((function(){return o.a.createElement(t,Object(g.a)({},U,{ref:c}))}),[c,t,U]);return Object(n.useMemo)((function(){return m?o.a.createElement(f.Provider,{value:N},B):B}),[f,B,N])}var h=u?o.a.memo(d):d;if(h.WrappedComponent=t,h.displayName=i,P){var C=o.a.forwardRef((function(e,t){return o.a.createElement(h,Object(g.a)({},e,{reactReduxForwardedRef:t}))}));return C.displayName=i,C.WrappedComponent=t,v()(C,t)}return v()(h,t)}}function P(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function _(e,t){if(P(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var r=Object.keys(e),n=Object.keys(t);if(r.length!==n.length)return!1;for(var o=0;o<r.length;o++)if(!Object.prototype.hasOwnProperty.call(t,r[o])||!P(e[r[o]],t[r[o]]))return!1;return!0}var N=r(108),M=function(){return Math.random().toString(36).substring(7).split("").join(".")},A={INIT:"@@redux/INIT"+M(),REPLACE:"@@redux/REPLACE"+M(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+M()}};function R(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function z(e,t){var r=t&&t.type;return"Given "+(r&&'action "'+String(r)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function I(e,t){return function(){return t(e.apply(this,arguments))}}function F(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function D(e,t){var r=Object.keys(e);return Object.getOwnPropertySymbols&&r.push.apply(r,Object.getOwnPropertySymbols(e)),t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r}function L(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?D(r,!0).forEach((function(t){F(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):D(r).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function U(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce((function(e,t){return function(){return e(t.apply(void 0,arguments))}}))}function B(e){return function(t,r){var n=e(t,r);function o(){return n}return o.dependsOnOwnProps=!1,o}}function W(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function $(e,t){return function(t,r){r.displayName;var n=function(e,t){return n.dependsOnOwnProps?n.mapToProps(e,t):n.mapToProps(e)};return n.dependsOnOwnProps=!0,n.mapToProps=function(t,r){n.mapToProps=e,n.dependsOnOwnProps=W(e);var o=n(t,r);return"function"==typeof o&&(n.mapToProps=o,n.dependsOnOwnProps=W(o),o=n(t,r)),o},n}}var H=[function(e){return"function"==typeof e?$(e):void 0},function(e){return e?void 0:B((function(e){return{dispatch:e}}))},function(e){return e&&"object"==typeof e?B((function(t){return function(e,t){if("function"==typeof e)return I(e,t);if("object"!=typeof e||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":typeof e)+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');var r={};for(var n in e){var o=e[n];"function"==typeof o&&(r[n]=I(o,t))}return r}(e,t)})):void 0}];var V=[function(e){return"function"==typeof e?$(e):void 0},function(e){return e?void 0:B((function(){return{}}))}];function q(e,t,r){return Object(g.a)({},r,{},e,{},t)}var G=[function(e){return"function"==typeof e?function(e){return function(t,r){r.displayName;var n,o=r.pure,i=r.areMergedPropsEqual,a=!1;return function(t,r,l){var c=e(t,r,l);return a?o&&i(c,n)||(n=c):(a=!0,n=c),n}}}(e):void 0},function(e){return e?void 0:function(){return q}}];function K(e,t,r,n){return function(o,i){return r(e(o,i),t(n,i),i)}}function Q(e,t,r,n,o){var i,a,l,c,u,s=o.areStatesEqual,f=o.areOwnPropsEqual,d=o.areStatePropsEqual,p=!1;function m(o,p){var m,g,b=!f(p,a),h=!s(o,i);return i=o,a=p,b&&h?(l=e(i,a),t.dependsOnOwnProps&&(c=t(n,a)),u=r(l,c,a)):b?(e.dependsOnOwnProps&&(l=e(i,a)),t.dependsOnOwnProps&&(c=t(n,a)),u=r(l,c,a)):h?(m=e(i,a),g=!d(m,l),l=m,g&&(u=r(l,c,a)),u):u}return function(o,s){return p?m(o,s):(l=e(i=o,a=s),c=t(n,a),u=r(l,c,a),p=!0,u)}}function Y(e,t){var r=t.initMapStateToProps,n=t.initMapDispatchToProps,o=t.initMergeProps,i=Object(b.a)(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),a=r(e,i),l=n(e,i),c=o(e,i);return(i.pure?Q:K)(a,l,c,e,i)}function X(e,t,r){for(var n=t.length-1;n>=0;n--){var o=t[n](e);if(o)return o}return function(t,n){throw new Error("Invalid value of type "+typeof e+" for "+r+" argument when connecting component "+n.wrappedComponentName+".")}}function J(e,t){return e===t}function Z(e){var t=void 0===e?{}:e,r=t.connectHOC,n=void 0===r?C:r,o=t.mapStateToPropsFactories,i=void 0===o?V:o,a=t.mapDispatchToPropsFactories,l=void 0===a?H:a,c=t.mergePropsFactories,u=void 0===c?G:c,s=t.selectorFactory,f=void 0===s?Y:s;return function(e,t,r,o){void 0===o&&(o={});var a=o,c=a.pure,s=void 0===c||c,d=a.areStatesEqual,p=void 0===d?J:d,m=a.areOwnPropsEqual,h=void 0===m?_:m,v=a.areStatePropsEqual,y=void 0===v?_:v,x=a.areMergedPropsEqual,w=void 0===x?_:x,k=Object(b.a)(a,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),E=X(e,i,"mapStateToProps"),S=X(t,l,"mapDispatchToProps"),O=X(r,u,"mergeProps");return n(f,Object(g.a)({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:E,initMapDispatchToProps:S,initMergeProps:O,pure:s,areStatesEqual:p,areOwnPropsEqual:h,areStatePropsEqual:y,areMergedPropsEqual:w},k))}}var ee=Z();var te;te=i.unstable_batchedUpdates,s=te;var re=r(2),ne={light:{colors:{primary:{main:"#4b894b",light:"#56ca56"},background:{main:"#f4f5f9",dark:"#D6DDE6",darker:"#000000",light:"#f4f4f4",lighter:"#fbfbfb"},danger:{main:"#b60000"},text:{main:"#403c3c"}}},dark:{colors:{primary:{main:"#47af47"},background:{main:"#403c3c",dark:"#6a6b6c",darker:"#403c3c",light:"#e8e9eb",lighter:"#ffffff"},danger:{main:"#b60000"},text:{main:"#e8e9eb"}}}},oe=r(6),ie=r.n(oe);function ae(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    height: 100vh;\n\n    > .loader {\n        margin: auto;\n    }\n"]);return ae=function(){return e},e}var le=Object(re.c)(ae()),ce=r(162),ue=r.n(ce);function se(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return se=function(){return e},e}var fe=Object(re.d)((function(e){var t=e.className;return o.a.createElement("div",{className:ie()(t,"loader-wrapper")},o.a.createElement(ue.a,{className:"loader",color:"black"}))}))(se(),le);function de(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    border-radius: 5px;\n    padding: 1px 10px;\n"]);return de=function(){return e},e}var pe=Object(re.c)(de());function me(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return me=function(){return e},e}var ge=Object(re.d)((function(e){var t=e.className,r=e.children;return o.a.createElement("button",{className:t},r)}))(me(),pe),be=r(109),he=r.n(be);function ve(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    @media (max-width: ","px) {\n        ",";\n    }\n"]);return ve=function(){return e},e}var ye=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"main";return function(r){return r.theme.colors[e][t]}},xe=function(e){return function(){return Object(re.c)(ve(),600,e)}},we=function(e){var t=e.children;return o.a.createElement(he.a,{maxDeviceWidth:600},t)},ke=function(e){var t=e.children;return o.a.createElement(he.a,{minDeviceWidth:600},t)};function Ee(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    \n    > .header {\n        padding: 0px 5px;\n        border-bottom: 1px solid ",";\n    }\n    \n    > .content {\n    \n        > .value {\n            font-size: 15px;\n            margin-right: 2px;\n            \n            &:after {\n                content: '°';  \n            }\n        }\n    \n    }\n    \n"]);return Ee=function(){return e},e}var Se=Object(re.c)(Ee(),ye("primary"));function Oe(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return Oe=function(){return e},e}var je=Object(re.d)((function(e){var t=e.className,r=e.value,n=e.unit,i=e.type;return o.a.createElement("div",{className:t},i&&o.a.createElement("div",{className:"header"},i),o.a.createElement("div",{className:"content"},o.a.createElement("span",{className:"value"},r),o.a.createElement("span",null,n)))}))(Oe(),Se),Te={color:void 0,size:void 0,className:void 0,style:void 0,attr:void 0},Ce=n.createContext&&n.createContext(Te),Pe=function(){return(Pe=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var o in t=arguments[r])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)},_e=function(e,t){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var o=0;for(n=Object.getOwnPropertySymbols(e);o<n.length;o++)t.indexOf(n[o])<0&&(r[n[o]]=e[n[o]])}return r};function Ne(e){return function(t){return n.createElement(Me,Pe({attr:Pe({},e.attr)},t),function e(t){return t&&t.map((function(t,r){return n.createElement(t.tag,Pe({key:r},t.attr),e(t.child))}))}(e.child))}}function Me(e){var t=function(t){var r,o=e.size||t.size||"1em";t.className&&(r=t.className),e.className&&(r=(r?r+" ":"")+e.className);var i=e.attr,a=e.title,l=_e(e,["attr","title"]);return n.createElement("svg",Pe({stroke:"currentColor",fill:"currentColor",strokeWidth:"0"},t.attr,i,l,{className:r,style:Pe({color:e.color||t.color},t.style,e.style),height:o,width:o,xmlns:"http://www.w3.org/2000/svg"}),a&&n.createElement("title",null,a),e.children)};return void 0!==Ce?n.createElement(Ce.Consumer,null,(function(e){return t(e)})):t(Te)}function Ae(e){return Ne({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"path",attr:{d:"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z"}}]})(e)}function Re(e){return Ne({tag:"svg",attr:{viewBox:"0 0 24 24"},child:[{tag:"path",attr:{d:"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55l-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z"}}]})(e)}var ze=function(e){var t=e.className,r=e.name,n=e.onClick;switch(r){case"favorite-border":return o.a.createElement(Re,{className:t,onClick:n});case"favorite-filled":return o.a.createElement(Ae,{className:t,onClick:n})}};function Ie(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    border-radius: 2px;\n    padding: 5px;\n    width: fit-content;\n    height: fit-content;\n    display: flex;\n    justify-content: center;\n    box-shadow: 0px 0px 3px 1px ",";\n    \n    &:hover {\n        box-shadow: 0px 0px 5px 2px ",";\n    }\n"]);return Ie=function(){return e},e}var Fe=Object(re.c)(Ie(),ye("background","lighter"),ye("background","lighter"));function De(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return De=function(){return e},e}var Le=Object(re.d)((function(e){var t=e.className,r=e.isFavorite,i=e.onClick,a=Object(n.useCallback)((function(e){e.stopPropagation(),i({isFavorite:r})}),[r]);return o.a.createElement("div",{onClick:a,className:ie()(t,"icon-wrapper")},o.a.createElement(ze,{name:r?"favorite-filled":"favorite-border"}))}))(De(),Fe),Ue=r(57),Be=r.n(Ue),We=r(163),$e=r.n(We),He=r(164),Ve=function(e,t){return e.substr(0,t.length)===t},qe=function(e,t){for(var r=void 0,n=void 0,o=t.split("?")[0],i=et(o),a=""===i[0],l=Ze(e),c=0,u=l.length;c<u;c++){var s=!1,f=l[c].route;if(f.default)n={route:f,params:{},uri:t};else{for(var d=et(f.path),p={},m=Math.max(i.length,d.length),g=0;g<m;g++){var b=d[g],h=i[g];if(Xe(b)){p[b.slice(1)||"*"]=i.slice(g).map(decodeURIComponent).join("/");break}if(void 0===h){s=!0;break}var v=Qe.exec(b);if(v&&!a){-1===rt.indexOf(v[1])||Be()(!1);var y=decodeURIComponent(h);p[v[1]]=y}else if(b!==h){s=!0;break}}if(!s){r={route:f,params:p,uri:"/"+i.slice(0,g).join("/")};break}}}return r||n||null},Ge=function(e,t){if(Ve(e,"/"))return e;var r=e.split("?"),n=r[0],o=r[1],i=t.split("?")[0],a=et(n),l=et(i);if(""===a[0])return tt(i,o);if(!Ve(a[0],".")){var c=l.concat(a).join("/");return tt(("/"===i?"":"/")+c,o)}for(var u=l.concat(a),s=[],f=0,d=u.length;f<d;f++){var p=u[f];".."===p?s.pop():"."!==p&&s.push(p)}return tt("/"+s.join("/"),o)},Ke=function(e,t){var r=e.split("?"),n=r[0],o=r[1],i=void 0===o?"":o,a="/"+et(n).map((function(e){var r=Qe.exec(e);return r?t[r[1]]:e})).join("/"),l=t.location,c=(l=void 0===l?{}:l).search,u=(void 0===c?"":c).split("?")[1]||"";return a=tt(a,i,u)},Qe=/^:(.+)/,Ye=function(e){return Qe.test(e)},Xe=function(e){return e&&"*"===e[0]},Je=function(e,t){return{route:e,score:e.default?0:et(e.path).reduce((function(e,t){return e+=4,!function(e){return""===e}(t)?Ye(t)?e+=2:Xe(t)?e-=5:e+=3:e+=1,e}),0),index:t}},Ze=function(e){return e.map(Je).sort((function(e,t){return e.score<t.score?1:e.score>t.score?-1:e.index-t.index}))},et=function(e){return e.replace(/(^\/+|\/+$)/g,"").split("/")},tt=function(e){for(var t=arguments.length,r=Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return e+((r=r.filter((function(e){return e&&e.length>0})))&&r.length>0?"?"+r.join("&"):"")},rt=["uri","path"],nt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},ot=function(e){var t=e.location,r=t.search,n=t.hash,o=t.href,i=t.origin,a=t.protocol,l=t.host,c=t.hostname,u=t.port,s=e.location.pathname;!s&&o&&at&&(s=new URL(o).pathname);return{pathname:encodeURI(decodeURI(s)),search:r,hash:n,href:o,origin:i,protocol:a,host:l,hostname:c,port:u,state:e.history.state,key:e.history.state&&e.history.state.key||"initial"}},it=function(e,t){var r=[],n=ot(e),o=!1,i=function(){};return{get location(){return n},get transitioning(){return o},_onTransitionComplete:function(){o=!1,i()},listen:function(t){r.push(t);var o=function(){n=ot(e),t({location:n,action:"POP"})};return e.addEventListener("popstate",o),function(){e.removeEventListener("popstate",o),r=r.filter((function(e){return e!==t}))}},navigate:function(t){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},l=a.state,c=a.replace,u=void 0!==c&&c;if("number"==typeof t)e.history.go(t);else{l=nt({},l,{key:Date.now()+""});try{o||u?e.history.replaceState(l,null,t):e.history.pushState(l,null,t)}catch(r){e.location[u?"replace":"assign"](t)}}n=ot(e),o=!0;var s=new Promise((function(e){return i=e}));return r.forEach((function(e){return e({location:n,action:"PUSH"})})),s}}},at=!("undefined"==typeof window||!window.document||!window.document.createElement),lt=it(at?window:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"/",t=e.indexOf("?"),r={pathname:t>-1?e.substr(0,t):e,search:t>-1?e.substr(t):""},n=0,o=[r],i=[null];return{get location(){return o[n]},addEventListener:function(e,t){},removeEventListener:function(e,t){},history:{get entries(){return o},get index(){return n},get state(){return i[n]},pushState:function(e,t,r){var a=r.split("?"),l=a[0],c=a[1],u=void 0===c?"":c;n++,o.push({pathname:l,search:u.length?"?"+u:u}),i.push(e)},replaceState:function(e,t,r){var a=r.split("?"),l=a[0],c=a[1],u=void 0===c?"":c;o[n]={pathname:l,search:u},i[n]=e},go:function(e){var t=n+e;t<0||t>i.length-1||(n=t)}}}}()),ct=(lt.navigate,Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e});function ut(e,t){var r={};for(var n in e)t.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n]);return r}function st(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ft(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function dt(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var pt=function(e,t){var r=$e()(t);return r.displayName=e,r},mt=pt("Location"),gt=function(e){var t=e.children;return o.a.createElement(mt.Consumer,null,(function(e){return e?t(e):o.a.createElement(bt,null,t)}))},bt=function(e){function t(){var r,n;st(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return r=n=ft(this,e.call.apply(e,[this].concat(i))),n.state={context:n.getContext(),refs:{unlisten:null}},ft(n,r)}return dt(t,e),t.prototype.getContext=function(){var e=this.props.history;return{navigate:e.navigate,location:e.location}},t.prototype.componentDidCatch=function(e,t){if(!Pt(e))throw e;(0,this.props.history.navigate)(e.uri,{replace:!0})},t.prototype.componentDidUpdate=function(e,t){t.context.location!==this.state.context.location&&this.props.history._onTransitionComplete()},t.prototype.componentDidMount=function(){var e=this,t=this.state.refs,r=this.props.history;r._onTransitionComplete(),t.unlisten=r.listen((function(){Promise.resolve().then((function(){requestAnimationFrame((function(){e.unmounted||e.setState((function(){return{context:e.getContext()}}))}))}))}))},t.prototype.componentWillUnmount=function(){var e=this.state.refs;this.unmounted=!0,e.unlisten()},t.prototype.render=function(){var e=this.state.context,t=this.props.children;return o.a.createElement(mt.Provider,{value:e},"function"==typeof t?t(e):t||null)},t}(o.a.Component);bt.defaultProps={history:lt};var ht=pt("Base",{baseuri:"/",basepath:"/"}),vt=function(e){return o.a.createElement(ht.Consumer,null,(function(t){return o.a.createElement(gt,null,(function(r){return o.a.createElement(yt,ct({},t,r,e))}))}))},yt=function(e){function t(){return st(this,t),ft(this,e.apply(this,arguments))}return dt(t,e),t.prototype.render=function(){var e=this.props,t=e.location,r=e.navigate,n=e.basepath,i=e.primary,a=e.children,l=(e.baseuri,e.component),c=void 0===l?"div":l,u=ut(e,["location","navigate","basepath","primary","children","baseuri","component"]),s=o.a.Children.toArray(a).reduce((function(e,t){var r=At(n)(t);return e.concat(r)}),[]),f=t.pathname,d=qe(s,f);if(d){var p=d.params,m=d.uri,g=d.route,b=d.route.value;n=g.default?n:g.path.replace(/\*$/,"");var h=ct({},p,{uri:m,location:t,navigate:function(e,t){return r(Ge(e,m),t)}}),v=o.a.cloneElement(b,h,b.props.children?o.a.createElement(vt,{location:t,primary:i},b.props.children):void 0),y=i?wt:c,x=i?ct({uri:m,location:t,component:c},u):u;return o.a.createElement(ht.Provider,{value:{baseuri:m,basepath:n}},o.a.createElement(y,x,v))}return null},t}(o.a.PureComponent);yt.defaultProps={primary:!0};var xt=pt("Focus"),wt=function(e){var t=e.uri,r=e.location,n=e.component,i=ut(e,["uri","location","component"]);return o.a.createElement(xt.Consumer,null,(function(e){return o.a.createElement(St,ct({},i,{component:n,requestFocus:e,uri:t,location:r}))}))},kt=!0,Et=0,St=function(e){function t(){var r,n;st(this,t);for(var o=arguments.length,i=Array(o),a=0;a<o;a++)i[a]=arguments[a];return r=n=ft(this,e.call.apply(e,[this].concat(i))),n.state={},n.requestFocus=function(e){!n.state.shouldFocus&&e&&e.focus()},ft(n,r)}return dt(t,e),t.getDerivedStateFromProps=function(e,t){if(null==t.uri)return ct({shouldFocus:!0},e);var r=e.uri!==t.uri,n=t.location.pathname!==e.location.pathname&&e.location.pathname===e.uri;return ct({shouldFocus:r||n},e)},t.prototype.componentDidMount=function(){Et++,this.focus()},t.prototype.componentWillUnmount=function(){0===--Et&&(kt=!0)},t.prototype.componentDidUpdate=function(e,t){e.location!==this.props.location&&this.state.shouldFocus&&this.focus()},t.prototype.focus=function(){var e=this.props.requestFocus;e?e(this.node):kt?kt=!1:this.node&&(this.node.contains(document.activeElement)||this.node.focus())},t.prototype.render=function(){var e=this,t=this.props,r=(t.children,t.style),n=(t.requestFocus,t.component),i=void 0===n?"div":n,a=(t.uri,t.location,ut(t,["children","style","requestFocus","component","uri","location"]));return o.a.createElement(i,ct({style:ct({outline:"none"},r),tabIndex:"-1",ref:function(t){return e.node=t}},a),o.a.createElement(xt.Provider,{value:this.requestFocus},this.props.children))},t}(o.a.Component);Object(He.a)(St);var Ot=function(){},jt=o.a.forwardRef;void 0===jt&&(jt=function(e){return e});var Tt=jt((function(e,t){var r=e.innerRef,n=ut(e,["innerRef"]);return o.a.createElement(ht.Consumer,null,(function(e){e.basepath;var i=e.baseuri;return o.a.createElement(gt,null,(function(e){var a=e.location,l=e.navigate,c=n.to,u=n.state,s=n.replace,f=n.getProps,d=void 0===f?Ot:f,p=ut(n,["to","state","replace","getProps"]),m=Ge(c,i),g=encodeURI(m),b=a.pathname===g,h=Ve(a.pathname,g);return o.a.createElement("a",ct({ref:t||r,"aria-current":b?"page":void 0},p,d({isCurrent:b,isPartiallyCurrent:h,href:m,location:a}),{href:m,onClick:function(e){if(p.onClick&&p.onClick(e),Rt(e)){e.preventDefault();var t=s;if("boolean"!=typeof s&&b){var r=ct({},a.state),n=(r.key,ut(r,["key"]));o=ct({},u),i=n,t=(c=Object.keys(o)).length===Object.keys(i).length&&c.every((function(e){return i.hasOwnProperty(e)&&o[e]===i[e]}))}l(m,{state:u,replace:t})}var o,i,c}}))}))}))}));function Ct(e){this.uri=e}Tt.displayName="Link";var Pt=function(e){return e instanceof Ct},_t=function(e){function t(){return st(this,t),ft(this,e.apply(this,arguments))}return dt(t,e),t.prototype.componentDidMount=function(){var e=this.props,t=e.navigate,r=e.to,n=(e.from,e.replace),o=void 0===n||n,i=e.state,a=(e.noThrow,e.baseuri),l=ut(e,["navigate","to","from","replace","state","noThrow","baseuri"]);Promise.resolve().then((function(){var e=Ge(r,a);t(Ke(e,l),{replace:o,state:i})}))},t.prototype.render=function(){var e=this.props,t=(e.navigate,e.to),r=(e.from,e.replace,e.state,e.noThrow),n=e.baseuri,o=ut(e,["navigate","to","from","replace","state","noThrow","baseuri"]),i=Ge(t,n);return r||function(e){throw new Ct(e)}(Ke(i,o)),null},t}(o.a.Component),Nt=function(e){return o.a.createElement(ht.Consumer,null,(function(t){var r=t.baseuri;return o.a.createElement(gt,null,(function(t){return o.a.createElement(_t,ct({},t,{baseuri:r},e))}))}))},Mt=function(e){return e.replace(/(^\/+|\/+$)/g,"")},At=function e(t){return function(r){if(!r)return null;if(r.type===o.a.Fragment&&r.props.children)return o.a.Children.map(r.props.children,e(t));var n,i,a;if(r.props.path||r.props.default||r.type===Nt||Be()(!1),r.type!==Nt||r.props.from&&r.props.to||Be()(!1),r.type===Nt&&(n=r.props.from,i=r.props.to,a=function(e){return Ye(e)},et(n).filter(a).sort().join("/")!==et(i).filter(a).sort().join("/"))&&Be()(!1),r.props.default)return{value:r,default:!0};var l=r.type===Nt?r.props.from:r.props.path,c="/"===l?t:Mt(t)+"/"+Mt(l);return{value:r,default:r.props.default,path:r.props.children?Mt(c)+"/*":c}}},Rt=function(e){return!e.defaultPrevented&&0===e.button&&!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)};function zt(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    text-align: center;\n    \n    > .router {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        width: 100%;\n        padding: 20px;\n        overflow: auto;\n    }\n"]);return zt=function(){return e},e}var It=Object(re.c)(zt());var Ft=r(79);function Dt(e){return(Dt=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function Lt(e,t){return(Lt=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ut(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function Bt(e,t,r){return(Bt=Ut()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&Lt(o,r.prototype),o}).apply(null,arguments)}function Wt(e){var t="function"==typeof Map?new Map:void 0;return(Wt=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf("[native code]")))return e;var r;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return Bt(e,arguments,Dt(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),Lt(n,e)})(e)}var $t=function(e){function t(t){return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e.call(this,"An error occurred. See https://github.com/styled-components/polished/blob/main/src/internalHelpers/errors.md#"+t+" for more information.")||this)}return Object(Ft.a)(t,e),t}(Wt(Error));function Ht(e){return Math.round(255*e)}function Vt(e,t,r){return Ht(e)+","+Ht(t)+","+Ht(r)}function qt(e,t,r,n){if(void 0===n&&(n=Vt),0===t)return n(r,r,r);var o=(e%360+360)%360/60,i=(1-Math.abs(2*r-1))*t,a=i*(1-Math.abs(o%2-1)),l=0,c=0,u=0;o>=0&&o<1?(l=i,c=a):o>=1&&o<2?(l=a,c=i):o>=2&&o<3?(c=i,u=a):o>=3&&o<4?(c=a,u=i):o>=4&&o<5?(l=a,u=i):o>=5&&o<6&&(l=i,u=a);var s=r-i/2;return n(l+s,c+s,u+s)}var Gt={aliceblue:"f0f8ff",antiquewhite:"faebd7",aqua:"00ffff",aquamarine:"7fffd4",azure:"f0ffff",beige:"f5f5dc",bisque:"ffe4c4",black:"000",blanchedalmond:"ffebcd",blue:"0000ff",blueviolet:"8a2be2",brown:"a52a2a",burlywood:"deb887",cadetblue:"5f9ea0",chartreuse:"7fff00",chocolate:"d2691e",coral:"ff7f50",cornflowerblue:"6495ed",cornsilk:"fff8dc",crimson:"dc143c",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgoldenrod:"b8860b",darkgray:"a9a9a9",darkgreen:"006400",darkgrey:"a9a9a9",darkkhaki:"bdb76b",darkmagenta:"8b008b",darkolivegreen:"556b2f",darkorange:"ff8c00",darkorchid:"9932cc",darkred:"8b0000",darksalmon:"e9967a",darkseagreen:"8fbc8f",darkslateblue:"483d8b",darkslategray:"2f4f4f",darkslategrey:"2f4f4f",darkturquoise:"00ced1",darkviolet:"9400d3",deeppink:"ff1493",deepskyblue:"00bfff",dimgray:"696969",dimgrey:"696969",dodgerblue:"1e90ff",firebrick:"b22222",floralwhite:"fffaf0",forestgreen:"228b22",fuchsia:"ff00ff",gainsboro:"dcdcdc",ghostwhite:"f8f8ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",grey:"808080",honeydew:"f0fff0",hotpink:"ff69b4",indianred:"cd5c5c",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lavender:"e6e6fa",lavenderblush:"fff0f5",lawngreen:"7cfc00",lemonchiffon:"fffacd",lightblue:"add8e6",lightcoral:"f08080",lightcyan:"e0ffff",lightgoldenrodyellow:"fafad2",lightgray:"d3d3d3",lightgreen:"90ee90",lightgrey:"d3d3d3",lightpink:"ffb6c1",lightsalmon:"ffa07a",lightseagreen:"20b2aa",lightskyblue:"87cefa",lightslategray:"789",lightslategrey:"789",lightsteelblue:"b0c4de",lightyellow:"ffffe0",lime:"0f0",limegreen:"32cd32",linen:"faf0e6",magenta:"f0f",maroon:"800000",mediumaquamarine:"66cdaa",mediumblue:"0000cd",mediumorchid:"ba55d3",mediumpurple:"9370db",mediumseagreen:"3cb371",mediumslateblue:"7b68ee",mediumspringgreen:"00fa9a",mediumturquoise:"48d1cc",mediumvioletred:"c71585",midnightblue:"191970",mintcream:"f5fffa",mistyrose:"ffe4e1",moccasin:"ffe4b5",navajowhite:"ffdead",navy:"000080",oldlace:"fdf5e6",olive:"808000",olivedrab:"6b8e23",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",palegoldenrod:"eee8aa",palegreen:"98fb98",paleturquoise:"afeeee",palevioletred:"db7093",papayawhip:"ffefd5",peachpuff:"ffdab9",peru:"cd853f",pink:"ffc0cb",plum:"dda0dd",powderblue:"b0e0e6",purple:"800080",rebeccapurple:"639",red:"f00",rosybrown:"bc8f8f",royalblue:"4169e1",saddlebrown:"8b4513",salmon:"fa8072",sandybrown:"f4a460",seagreen:"2e8b57",seashell:"fff5ee",sienna:"a0522d",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",slategrey:"708090",snow:"fffafa",springgreen:"00ff7f",steelblue:"4682b4",tan:"d2b48c",teal:"008080",thistle:"d8bfd8",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"fff",whitesmoke:"f5f5f5",yellow:"ff0",yellowgreen:"9acd32"};var Kt=/^#[a-fA-F0-9]{6}$/,Qt=/^#[a-fA-F0-9]{8}$/,Yt=/^#[a-fA-F0-9]{3}$/,Xt=/^#[a-fA-F0-9]{4}$/,Jt=/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/i,Zt=/^rgba\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i,er=/^hsl\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*\)$/i,tr=/^hsla\(\s*(\d{0,3}[.]?[0-9]+)\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*(\d{1,3}[.]?[0-9]?)%\s*,\s*([-+]?[0-9]*[.]?[0-9]+)\s*\)$/i;function rr(e){if("string"!=typeof e)throw new $t(3);var t=function(e){if("string"!=typeof e)return e;var t=e.toLowerCase();return Gt[t]?"#"+Gt[t]:e}(e);if(t.match(Kt))return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16)};if(t.match(Qt)){var r=parseFloat((parseInt(""+t[7]+t[8],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[2],16),green:parseInt(""+t[3]+t[4],16),blue:parseInt(""+t[5]+t[6],16),alpha:r}}if(t.match(Yt))return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16)};if(t.match(Xt)){var n=parseFloat((parseInt(""+t[4]+t[4],16)/255).toFixed(2));return{red:parseInt(""+t[1]+t[1],16),green:parseInt(""+t[2]+t[2],16),blue:parseInt(""+t[3]+t[3],16),alpha:n}}var o=Jt.exec(t);if(o)return{red:parseInt(""+o[1],10),green:parseInt(""+o[2],10),blue:parseInt(""+o[3],10)};var i=Zt.exec(t);if(i)return{red:parseInt(""+i[1],10),green:parseInt(""+i[2],10),blue:parseInt(""+i[3],10),alpha:parseFloat(""+i[4])};var a=er.exec(t);if(a){var l="rgb("+qt(parseInt(""+a[1],10),parseInt(""+a[2],10)/100,parseInt(""+a[3],10)/100)+")",c=Jt.exec(l);if(!c)throw new $t(4,t,l);return{red:parseInt(""+c[1],10),green:parseInt(""+c[2],10),blue:parseInt(""+c[3],10)}}var u=tr.exec(t);if(u){var s="rgb("+qt(parseInt(""+u[1],10),parseInt(""+u[2],10)/100,parseInt(""+u[3],10)/100)+")",f=Jt.exec(s);if(!f)throw new $t(4,t,s);return{red:parseInt(""+f[1],10),green:parseInt(""+f[2],10),blue:parseInt(""+f[3],10),alpha:parseFloat(""+u[4])}}throw new $t(5)}function nr(e){return function(e){var t,r=e.red/255,n=e.green/255,o=e.blue/255,i=Math.max(r,n,o),a=Math.min(r,n,o),l=(i+a)/2;if(i===a)return void 0!==e.alpha?{hue:0,saturation:0,lightness:l,alpha:e.alpha}:{hue:0,saturation:0,lightness:l};var c=i-a,u=l>.5?c/(2-i-a):c/(i+a);switch(i){case r:t=(n-o)/c+(n<o?6:0);break;case n:t=(o-r)/c+2;break;default:t=(r-n)/c+4}return t*=60,void 0!==e.alpha?{hue:t,saturation:u,lightness:l,alpha:e.alpha}:{hue:t,saturation:u,lightness:l}}(rr(e))}var or=function(e){return 7===e.length&&e[1]===e[2]&&e[3]===e[4]&&e[5]===e[6]?"#"+e[1]+e[3]+e[5]:e};function ir(e){var t=e.toString(16);return 1===t.length?"0"+t:t}function ar(e){return ir(Math.round(255*e))}function lr(e,t,r){return or("#"+ar(e)+ar(t)+ar(r))}function cr(e,t,r){return qt(e,t,r,lr)}function ur(e,t,r){if("number"==typeof e&&"number"==typeof t&&"number"==typeof r)return cr(e,t,r);if("object"==typeof e&&void 0===t&&void 0===r)return cr(e.hue,e.saturation,e.lightness);throw new $t(1)}function sr(e,t,r,n){if("number"==typeof e&&"number"==typeof t&&"number"==typeof r&&"number"==typeof n)return n>=1?cr(e,t,r):"rgba("+qt(e,t,r)+","+n+")";if("object"==typeof e&&void 0===t&&void 0===r&&void 0===n)return e.alpha>=1?cr(e.hue,e.saturation,e.lightness):"rgba("+qt(e.hue,e.saturation,e.lightness)+","+e.alpha+")";throw new $t(2)}function fr(e,t,r){if("number"==typeof e&&"number"==typeof t&&"number"==typeof r)return or("#"+ir(e)+ir(t)+ir(r));if("object"==typeof e&&void 0===t&&void 0===r)return or("#"+ir(e.red)+ir(e.green)+ir(e.blue));throw new $t(6)}function dr(e,t,r,n){if("string"==typeof e&&"number"==typeof t){var o=rr(e);return"rgba("+o.red+","+o.green+","+o.blue+","+t+")"}if("number"==typeof e&&"number"==typeof t&&"number"==typeof r&&"number"==typeof n)return n>=1?fr(e,t,r):"rgba("+e+","+t+","+r+","+n+")";if("object"==typeof e&&void 0===t&&void 0===r&&void 0===n)return e.alpha>=1?fr(e.red,e.green,e.blue):"rgba("+e.red+","+e.green+","+e.blue+","+e.alpha+")";throw new $t(7)}function pr(e){if("object"!=typeof e)throw new $t(8);if(function(e){return"number"==typeof e.red&&"number"==typeof e.green&&"number"==typeof e.blue&&"number"==typeof e.alpha}(e))return dr(e);if(function(e){return"number"==typeof e.red&&"number"==typeof e.green&&"number"==typeof e.blue&&("number"!=typeof e.alpha||void 0===e.alpha)}(e))return fr(e);if(function(e){return"number"==typeof e.hue&&"number"==typeof e.saturation&&"number"==typeof e.lightness&&"number"==typeof e.alpha}(e))return sr(e);if(function(e){return"number"==typeof e.hue&&"number"==typeof e.saturation&&"number"==typeof e.lightness&&("number"!=typeof e.alpha||void 0===e.alpha)}(e))return ur(e);throw new $t(8)}function mr(e){return function e(t,r,n){return function(){var o=n.concat(Array.prototype.slice.call(arguments));return o.length>=r?t.apply(this,o):e(t,r,o)}}(e,e.length,[])}function gr(e,t,r){return Math.max(e,Math.min(t,r))}function br(e,t){if("transparent"===t)return t;var r=nr(t);return pr(Object(g.a)({},r,{lightness:gr(0,1,r.lightness-parseFloat(e))}))}var hr=mr(br);function vr(e,t){if("transparent"===t)return t;var r=nr(t);return pr(Object(g.a)({},r,{lightness:gr(0,1,r.lightness+parseFloat(e))}))}var yr=mr(vr);function xr(e,t){if("transparent"===t)return t;var r=rr(t),n="number"==typeof r.alpha?r.alpha:1;return dr(Object(g.a)({},r,{alpha:gr(0,1,(100*n-100*parseFloat(e))/100)}))}var wr=mr(xr);function kr(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    margin-bottom: 20px;\n    position: relative;\n    \n    > input {\n        border-radius: 5px;\n        margin-left: 2px;\n        color: initial;\n    }\n    \n    > button {\n        color: initial;\n    }\n    \n    > .form-toast {\n        position: absolute;\n        margin-top: 5px;\n        width: 100%;\n        padding: 0px 5px;        \n        \n        > .toast-header {\n            display: flex;\n            justify-content: space-between;\n            \n            :before {\n                content: '';\n                width: 12px;\n            }\n            \n        }\n        \n        > .toast-body {\n            color: initial;\n        }\n    }\n\n    .search-button {\n        margin-left: 10px;\n        background-color: ",";\n        \n        &:hover {\n            background-color: ",";\n        } \n        \n        &:active {\n            background-color: ",";\n        } \n    }\n        \n"]);return kr=function(){return e},e}var Er=Object(re.c)(kr(),(function(e){return yr(.2,ye("primary")(e))}),ye("primary"),(function(e){return yr(.2,ye("primary")(e))})),Sr=r(165),Or=r(169),jr=Math.pow(2,31)-1;function Tr(){var e=Object(Sr.a)(),t=Object(n.useRef)();return Object(Or.a)((function(){return clearTimeout(t.current)})),Object(n.useMemo)((function(){var r=function(){return clearTimeout(t.current)};return{set:function(n,o){void 0===o&&(o=0),e()&&(r(),o<=jr?t.current=setTimeout(n,o):function e(t,r,n){var o=n-Date.now();t.current=o<=jr?setTimeout(r,o):setTimeout((function(){return e(t,r,n)}),jr)}(t,n,Date.now()+o))},clear:r}}),[])}var Cr=r(168),Pr=r(110);function _r(e,t,r){void 0===r&&(r=5);var n=!1,o=setTimeout((function(){n||function(e){var t=document.createEvent("HTMLEvents");t.initEvent("transitionend",!0,!0),e.dispatchEvent(t)}(e)}),t+r),i=Object(Pr.a)(e,"transitionend",(function(){n=!0}),{once:!0});return function(){clearTimeout(o),i()}}function Nr(e,t,r,n){var o,i,a;null==r&&(o=e,i=Object(Cr.a)(o,"transitionDuration")||"",a=-1===i.indexOf("ms")?1e3:1,r=parseFloat(i)*a||0);var l=_r(e,r,n),c=Object(Pr.a)(e,"transitionend",t);return function(){l(),c()}}var Mr=!1,Ar=o.a.createContext(null),Rr=function(e){function t(t,r){var n;n=e.call(this,t,r)||this;var o,i=r&&!r.isMounting?t.enter:t.appear;return n.appearStatus=null,t.in?i?(o="exited",n.appearStatus="entering"):o="entered":o=t.unmountOnExit||t.mountOnEnter?"unmounted":"exited",n.state={status:o},n.nextCallback=null,n}Object(Ft.a)(t,e),t.getDerivedStateFromProps=function(e,t){return e.in&&"unmounted"===t.status?{status:"exited"}:null};var r=t.prototype;return r.componentDidMount=function(){this.updateStatus(!0,this.appearStatus)},r.componentDidUpdate=function(e){var t=null;if(e!==this.props){var r=this.state.status;this.props.in?"entering"!==r&&"entered"!==r&&(t="entering"):"entering"!==r&&"entered"!==r||(t="exiting")}this.updateStatus(!1,t)},r.componentWillUnmount=function(){this.cancelNextCallback()},r.getTimeouts=function(){var e,t,r,n=this.props.timeout;return e=t=r=n,null!=n&&"number"!=typeof n&&(e=n.exit,t=n.enter,r=void 0!==n.appear?n.appear:t),{exit:e,enter:t,appear:r}},r.updateStatus=function(e,t){void 0===e&&(e=!1),null!==t?(this.cancelNextCallback(),"entering"===t?this.performEnter(e):this.performExit()):this.props.unmountOnExit&&"exited"===this.state.status&&this.setState({status:"unmounted"})},r.performEnter=function(e){var t=this,r=this.props.enter,n=this.context?this.context.isMounting:e,o=this.props.nodeRef?[n]:[a.a.findDOMNode(this),n],i=o[0],l=o[1],c=this.getTimeouts(),u=n?c.appear:c.enter;!e&&!r||Mr?this.safeSetState({status:"entered"},(function(){t.props.onEntered(i)})):(this.props.onEnter(i,l),this.safeSetState({status:"entering"},(function(){t.props.onEntering(i,l),t.onTransitionEnd(u,(function(){t.safeSetState({status:"entered"},(function(){t.props.onEntered(i,l)}))}))})))},r.performExit=function(){var e=this,t=this.props.exit,r=this.getTimeouts(),n=this.props.nodeRef?void 0:a.a.findDOMNode(this);t&&!Mr?(this.props.onExit(n),this.safeSetState({status:"exiting"},(function(){e.props.onExiting(n),e.onTransitionEnd(r.exit,(function(){e.safeSetState({status:"exited"},(function(){e.props.onExited(n)}))}))}))):this.safeSetState({status:"exited"},(function(){e.props.onExited(n)}))},r.cancelNextCallback=function(){null!==this.nextCallback&&(this.nextCallback.cancel(),this.nextCallback=null)},r.safeSetState=function(e,t){t=this.setNextCallback(t),this.setState(e,t)},r.setNextCallback=function(e){var t=this,r=!0;return this.nextCallback=function(n){r&&(r=!1,t.nextCallback=null,e(n))},this.nextCallback.cancel=function(){r=!1},this.nextCallback},r.onTransitionEnd=function(e,t){this.setNextCallback(t);var r=this.props.nodeRef?this.props.nodeRef.current:a.a.findDOMNode(this),n=null==e&&!this.props.addEndListener;if(r&&!n){if(this.props.addEndListener){var o=this.props.nodeRef?[this.nextCallback]:[r,this.nextCallback],i=o[0],l=o[1];this.props.addEndListener(i,l)}null!=e&&setTimeout(this.nextCallback,e)}else setTimeout(this.nextCallback,0)},r.render=function(){var e=this.state.status;if("unmounted"===e)return null;var t=this.props,r=t.children,n=(t.in,t.mountOnEnter,t.unmountOnExit,t.appear,t.enter,t.exit,t.timeout,t.addEndListener,t.onEnter,t.onEntering,t.onEntered,t.onExit,t.onExiting,t.onExited,t.nodeRef,Object(b.a)(t,["children","in","mountOnEnter","unmountOnExit","appear","enter","exit","timeout","addEndListener","onEnter","onEntering","onEntered","onExit","onExiting","onExited","nodeRef"]));return o.a.createElement(Ar.Provider,{value:null},"function"==typeof r?r(e,n):o.a.cloneElement(o.a.Children.only(r),n))},t}(o.a.Component);function zr(){}Rr.contextType=Ar,Rr.propTypes={},Rr.defaultProps={in:!1,mountOnEnter:!1,unmountOnExit:!1,appear:!1,enter:!0,exit:!0,onEnter:zr,onEntering:zr,onEntered:zr,onExit:zr,onExiting:zr,onExited:zr},Rr.UNMOUNTED="unmounted",Rr.EXITED="exited",Rr.ENTERING="entering",Rr.ENTERED="entered",Rr.EXITING="exiting";var Ir,Fr=Rr;var Dr=((Ir={}).entering="show",Ir.entered="show",Ir),Lr=o.a.forwardRef((function(e,t){var r=e.className,i=e.children,a=Object(b.a)(e,["className","children"]),l=Object(n.useCallback)((function(e){!function(e){e.offsetHeight}(e),a.onEnter&&a.onEnter(e)}),[a]);return o.a.createElement(Fr,Object(g.a)({ref:t,addEndListener:Nr},a,{onEnter:l}),(function(e,t){return o.a.cloneElement(i,Object(g.a)({},t,{className:ie()("fade",r,i.props.className,Dr[e])}))}))}));Lr.defaultProps={in:!1,timeout:300,mountOnEnter:!1,unmountOnExit:!1,appear:!1},Lr.displayName="Fade";var Ur=Lr,Br=r(170),Wr=o.a.createContext({});Wr.Consumer,Wr.Provider;function $r(e,t){var r=Object(n.useContext)(Wr);return e||r[t]||t}var Hr={label:c.a.string.isRequired,onClick:c.a.func},Vr=o.a.forwardRef((function(e,t){var r=e.label,n=e.onClick,i=e.className,a=Object(b.a)(e,["label","onClick","className"]);return o.a.createElement("button",Object(g.a)({ref:t,type:"button",className:ie()("close",i),onClick:n},a),o.a.createElement("span",{"aria-hidden":"true"},"×"),o.a.createElement("span",{className:"sr-only"},r))}));Vr.displayName="CloseButton",Vr.propTypes=Hr,Vr.defaultProps={label:"Close"};var qr=Vr,Gr=o.a.createContext({onClose:function(){}}),Kr=o.a.forwardRef((function(e,t){var r=e.bsPrefix,i=e.closeLabel,a=e.closeButton,l=e.className,c=e.children,u=Object(b.a)(e,["bsPrefix","closeLabel","closeButton","className","children"]);r=$r(r,"toast-header");var s=Object(n.useContext)(Gr),f=Object(Br.a)((function(e){s&&s.onClose&&s.onClose(e)}));return o.a.createElement("div",Object(g.a)({ref:t},u,{className:ie()(r,l)}),c,a&&o.a.createElement(qr,{label:i,onClick:f,className:"ml-2 mb-1","data-dismiss":"toast"}))}));Kr.displayName="ToastHeader",Kr.defaultProps={closeLabel:"Close",closeButton:!0};var Qr=Kr,Yr=/-(.)/g;var Xr=function(e){return e[0].toUpperCase()+(t=e,t.replace(Yr,(function(e,t){return t.toUpperCase()}))).slice(1);var t};var Jr,Zr,en,tn,rn,nn,on,an,ln=(Jr="toast-body",tn=(en=void 0===Zr?{}:Zr).displayName,rn=void 0===tn?Xr(Jr):tn,nn=en.Component,on=en.defaultProps,(an=o.a.forwardRef((function(e,t){var r=e.className,n=e.bsPrefix,i=e.as,a=void 0===i?nn||"div":i,l=Object(b.a)(e,["className","bsPrefix","as"]),c=$r(n,Jr);return o.a.createElement(a,Object(g.a)({ref:t,className:ie()(r,c)},l))}))).defaultProps=on,an.displayName=rn,an),cn=o.a.forwardRef((function(e,t){var r=e.bsPrefix,i=e.className,a=e.children,l=e.transition,c=void 0===l?Ur:l,u=e.show,s=void 0===u||u,f=e.animation,d=void 0===f||f,p=e.delay,m=void 0===p?3e3:p,h=e.autohide,v=void 0!==h&&h,y=e.onClose,x=Object(b.a)(e,["bsPrefix","className","children","transition","show","animation","delay","autohide","onClose"]);r=$r(r,"toast");var w=Object(n.useRef)(m),k=Object(n.useRef)(y);Object(n.useEffect)((function(){w.current=m,k.current=y}),[m,y]);var E=Tr(),S=!(!v||!s),O=Object(n.useCallback)((function(){S&&(null==k.current||k.current())}),[S]);Object(n.useEffect)((function(){E.set(O,w.current)}),[E,O]);var j=Object(n.useMemo)((function(){return{onClose:y}}),[y]),T=!(!c||!d),C=o.a.createElement("div",Object(g.a)({},x,{ref:t,className:ie()(r,i,!T&&(s?"show":"hide")),role:"alert","aria-live":"assertive","aria-atomic":"true"}),a);return o.a.createElement(Gr.Provider,{value:j},T&&c?o.a.createElement(c,{in:s,unmountOnExit:!0},C):C)}));cn.displayName="Toast";var un=Object.assign(cn,{Body:ln,Header:Qr});function sn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return fn(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return fn(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function fn(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function dn(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return dn=function(){return e},e}var pn=Object(re.d)(Object(n.memo)((function(e){var t=e.className,r=e.textValue,i=e.onSubmit,a=e.error,l=e.clearError,c=sn(Object(n.useState)(r),2),u=c[0],s=c[1],f=sn(Object(n.useState)(!1),2),d=f[0],p=f[1],m=sn(Object(n.useState)(null),2),g=m[0],b=m[1];Object(n.useEffect)((function(){p(!!g)}),[g]),Object(n.useEffect)((function(){a&&b(a)}),[a]),Object(n.useEffect)((function(){s(r)}),[r]);var h=Object(n.useCallback)((function(){b(null),a&&l()}),[b,a]),v=Object(n.useCallback)((function(e){e.preventDefault(),h(),i({name:u})}),[d,p,i,u]),y=Object(n.useCallback)((function(e){h(),/^[a-zA-Z ]+$/.test(e.target.value)||""===e.target.value?s(e.target.value):b("Only english letters are allowed.")}),[s,d,p]);return o.a.createElement("form",{className:ie()(t,"search-form"),onSubmit:v},o.a.createElement("input",{value:u||"",onChange:y}),o.a.createElement(ge,{className:"search-button"},"Get Weather"),o.a.createElement(un,{show:d,onClose:h,className:"form-toast"},o.a.createElement(un.Header,null,"Oops.."),o.a.createElement(un.Body,null,g)))})))(dn(),Er);function mn(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    width: 100%;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    flex: 1;\n    \n    > h2 {\n        border-bottom: 2px solid ",";\n        padding: 0px 5px;\n        margin-bottom: 30px;\n    }\n    \n    > .current-weather-wrapper {\n        border-radius: 10px;\n        background-color: ",";\n        margin: 20px 10px;\n        padding: 10px 0px;\n        width: 100%;\n        max-width: 500px;\n        min-width: 250px;\n        border-top: 2px solid ",";\n        border-bottom: 2px solid ",";\n    }    \n    \n"]);return mn=function(){return e},e}var gn=Object(re.c)(mn(),ye("primary"),ye("background","dark"),(function(e){return wr(.5,ye("primary")(e))}),(function(e){return wr(.5,ye("primary")(e))})),bn=function(e){return e.weather.initCompleted},hn="WEATHER/",vn="".concat(hn,"INIT"),yn="".concat(hn,"SET_WEATHER_DATA"),xn="".concat(hn,"SET_FORM_ERROR"),wn="".concat(hn,"SET_INIT_COMPLETED");function kn(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function En(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?kn(Object(r),!0).forEach((function(t){Sn(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):kn(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Sn(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var On=function(e){return function(t){return{type:e,data:t}}},jn=function(e){var t=e.state,r=e.data;return En(En({},t),r)},Tn=On(vn),Cn=On(wn),Pn=On(yn),_n=On(xn),Nn=r(63),Mn=r.n(Nn);function An(e,t,r,n,o,i,a){try{var l=e[i](a),c=l.value}catch(e){return void r(e)}l.done?t(c):Promise.resolve(c).then(n,o)}function Rn(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){An(i,n,o,a,l,"next",e)}function l(e){An(i,n,o,a,l,"throw",e)}a(void 0)}))}}var zn="wv4gytjAGSE2x1KIVqCpkAXuRBZLjhvj",In=function(e){var t=e.locationKey;return Mn.a.get("https://dataservice.accuweather.com/currentconditions/v1/".concat(t),{params:{apikey:zn}})},Fn=function(e){var t=e.locationKey;return Mn.a.get("https://dataservice.accuweather.com/forecasts/v1/daily/5day/".concat(t),{params:{apikey:zn}})},Dn=function(){var e=Rn(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.text,e.abrupt("return",Mn.a.get("https://dataservice.accuweather.com/locations/v1/cities/autocomplete",{params:{apikey:zn,q:r}}));case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),Ln=function(){var e=Rn(regeneratorRuntime.mark((function e(t){var r;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=t.coords,e.abrupt("return",Mn.a.get("https://dataservice.accuweather.com/locations/v1/cities/geoposition/search",{params:{apikey:zn,q:r}}));case 2:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}(),Un="".concat("LAYOUT/","INIT"),Bn="".concat("LAYOUT/","SET_CITY"),Wn="".concat("LAYOUT/","SET_GLOBAL_ERROR"),$n="".concat("LAYOUT/","SET_FAVORITES"),Hn=On(Un),Vn=On(Bn),qn=On(Wn),Gn=On($n);function Kn(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Qn(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Qn(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Qn(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function Yn(e,t,r,n,o,i,a){try{var l=e[i](a),c=l.value}catch(e){return void r(e)}l.done?t(c):Promise.resolve(c).then(n,o)}function Xn(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){Yn(i,n,o,a,l,"next",e)}function l(e){Yn(i,n,o,a,l,"throw",e)}a(void 0)}))}}function Jn(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    flex-direction: column;\n    margin: 10px;\n    cursor: pointer;\n    min-width: 200px;\n    height: auto;\n    \n    > .header {\n        display: flex;\n        align-items: center;\n        margin-bottom: 20px;\n        \n        :before {\n          content: '';\n          flex: 1;\n        }\n        \n        > h4 {\n            flex: 6; \n            border-bottom: 1px solid ",";\n            margin: 0px 20px;         \n        }\n        \n        > .icon-aligner {\n            align-self: flex-start;\n            margin-top: 3px;\n            flex: 1;\n            display: flex;\n            justify-content: center;                                         \n        }\n          \n    }\n    \n    > * {\n        flex: 1 1;\n    }\n    \n    > .temperatures-wrapper {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        border-top: 2px solid ",";\n        padding-top: 10px;\n        margin-top: 10px;\n        \n        > .temperatures-heading {\n            margin: auto;\n            width: fit-content;\n            padding: 0px 5px;\n            border-bottom: 1px solid ",";\n        }\n        \n        > .degrees-wrapper {\n            display: flex;\n            justify-content: center;\n            margin-top: 5px;\n        \n            > div {\n                margin: 0px 10px;\n            }\n            \n        }                \n        \n    }\n    \n    > a {\n        margin-top: 10px;\n        font-size: 14px;\n        word-spacing: -0.6px;\n        letter-spacing: -0.5px;\n    }\n"]);return Jn=function(){return e},e}var Zn=Object(re.c)(Jn(),ye("primary"),(function(e){return wr(.5,ye("background")(e))}),ye("primary"));function eo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return eo=function(){return e},e}var to=function(e){var t=e.url,r=Object(n.useCallback)((function(e){e.stopPropagation(),e.preventDefault(),window.open(t)}),[t]);return o.a.createElement("a",{href:"",onClick:r},"Link To Resource")},ro=Object(re.d)(Object(n.memo)((function(e){var t=e.className,r=e.isFavorite,i=e.data,a=e.city,l=e.onClick,c=e.onFavoriteIconClicked,u=Object(n.useCallback)((function(){return l&&l(a)}),[a]),s=Object(n.useCallback)((function(e){var t=e.isFavorite;return c({key:a.key,isFavorite:t})}),[a.key,c]),f=Object(n.useMemo)((function(){return o.a.createElement("div",{className:"temperatures-wrapper"},o.a.createElement("span",{className:"temperatures-heading"},"Temperatures:"),o.a.createElement("div",{className:"degrees-wrapper"},i&&i.Temperature&&Object.keys(i.Temperature).map((function(e){return o.a.createElement(je,{key:e,type:e,value:i.Temperature[e].Value,unit:i.Temperature[e].Unit})}))))}),[i&&i.Temperature]);return o.a.createElement("div",{className:ie()(t,"current-weather"),onClick:u},i?o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"header"},o.a.createElement("h4",null,a.name),o.a.createElement("div",{className:"icon-aligner"},o.a.createElement(Le,{onClick:s,isFavorite:r}))),o.a.createElement("span",null,i.IsDayTime?"Day Time":"Night Time"),o.a.createElement("span",null,i.WeatherText),f,o.a.createElement(ke,null,o.a.createElement(to,{url:i.Link})),o.a.createElement(we,null,o.a.createElement(to,{url:i.MobileLink}))):o.a.createElement(fe,null))})))(eo(),Zn);function no(){var e=ao(["\n            flex-direction: column;\n        "]);return no=function(){return e},e}function oo(){var e=ao(["\n        flex-direction: column;\n        padding: 0px 10px;\n    "]);return oo=function(){return e},e}function io(){var e=ao(["\n    display: flex;\n    width: 100%;\n    min-width: 240px;\n    flex-direction: column;\n    \n    ",";\n    \n    > .forecast-heading {\n        margin: 0px auto 17px auto;\n        padding: 0px 5px;\n        width: fit-content;\n        border-bottom: 2px solid ",";\n    }\n    \n    > .summary-text {\n        margin: 0px auto 15px auto;\n        width: fit-content;\n        border-bottom: 1px solid ",";\n        padding: 0px 10px;\n        \n        > span {\n            font-size: 15px;\n        }\n    }\n    \n    > .daily-forecasts {\n        display: flex;\n        \n        ",";\n    }\n"]);return io=function(){return e},e}function ao(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var lo=Object(re.c)(io(),xe(Object(re.c)(oo())),ye("primary"),ye("primary"),xe(Object(re.c)(no())));function co(){var e=so(["\n        width: 100%;\n        margin: 10px 0px;\n\n    "]);return co=function(){return e},e}function uo(){var e=so(["\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    padding: 10px 5px;\n    flex: 1 0 123px;\n    box-shadow: 0px 0px 3px 1px ",";\n    border-radius: 5px;\n    margin: 0px 10px;\n    background-color: ",";\n    \n    ",";\n    \n    > div {\n    \n        flex: 1 1;\n        align-items: center;\n        \n        > * {\n            flex: 1 0 0;\n        }\n    }\n    \n    > .header {\n        \n        margin: 0px auto 8px auto  ;\n        \n        > span {\n            border-bottom: 1px solid ",";\n            padding: 5px 10px;\n        }\n        \n    }\n     \n    > .day {\n        display: flex;\n        justify-content: space-around;\n        border-bottom: 1px solid ",";\n        padding-bottom: 10px;\n        margin-bottom: 10px;\n    };\n    \n    > .night {\n        display: flex;\n        justify-content: space-around;\n        border-bottom: 1px solid ",";\n        padding-bottom: 10px;\n        margin-bottom: 10px;\n    }; \n    \n    > .range {\n        display: flex;\n        justify-content: center;\n        \n        > .dash {\n            margin: 0px 5px;\n        }\n    }\n"]);return uo=function(){return e},e}function so(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var fo=Object(re.c)(uo(),ye("primary"),ye("background","dark"),xe(Object(re.c)(co())),ye("primary"),ye("background","light"),ye("background","light")),po={0:"Saturday",1:"Sunday",2:"Monday",3:"Tuesday",4:"Wednesday",5:"Thursday",6:"Friday"};function mo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return mo=function(){return e},e}var go=Object(re.d)((function(e){var t=e.className,r=e.Date,n=e.Day,i=e.Night,a=e.Temperature,l=po[new Date(r).getDay()];return o.a.createElement("div",{className:ie()(t,"day")},o.a.createElement("div",{className:"header"},o.a.createElement("span",{className:"date"},l)),o.a.createElement("div",{className:"day"},o.a.createElement("span",null,"Day"),o.a.createElement("span",null,"-"),o.a.createElement("span",{className:"phrase"},n.IconPhrase)),o.a.createElement("div",{className:"night"},o.a.createElement("span",null,"Night"),o.a.createElement("span",null,"-"),o.a.createElement("span",{className:"phrase"},i.IconPhrase)),o.a.createElement("div",{className:"range"},o.a.createElement(je,{value:a.Minimum.Value,unit:a.Minimum.Unit}),o.a.createElement("span",{className:"dash"},"-"),o.a.createElement(je,{value:a.Maximum.Value,unit:a.Maximum.Unit})))}))(mo(),fo);function bo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function ho(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function vo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return vo=function(){return e},e}var yo=Object(re.d)(Object(n.memo)((function(e){var t=e.className,r=e.data,n=void 0===r?{Headline:{},DailyForecasts:[]}:r;return o.a.createElement("div",{className:ie()(t,"forecast")},o.a.createElement("h3",{className:"forecast-heading"},"5 Days Forecast:"),o.a.createElement("div",{className:"summary-text"},o.a.createElement("span",null,"Summary: "),n.Headline.Text," ."),o.a.createElement("div",{className:"daily-forecasts"},n.DailyForecasts.map((function(e){return o.a.createElement(go,function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?bo(Object(r),!0).forEach((function(t){ho(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):bo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({key:e.Date},e))}))))})))(vo(),lo);function xo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return xo=function(){return e},e}var wo=Object(re.d)(Object(n.memo)((function(e){var t=e.className,r=e.initCompleted,i=e.init,a=e.city,l=e.findWeather,c=e.weatherData,u=e.onAddFavorite,s=e.onRemoveFavorite,f=e.favorites,d=e.formError,p=e.clearFormError;if(!r)throw i();var m=Object(n.useMemo)((function(){return f.some((function(e){return e.key===a.key}))}),[f,a.key]),g=Object(n.useCallback)((function(e){return e.isFavorite?s({key:a.key}):u(a)}),[a.key]),b=Object(n.useCallback)((function(e){var t=e.name;return l({name:t})}),[]);return o.a.createElement("div",{className:ie()(t,"weather")},o.a.createElement("h2",null,"Weather By City:"),o.a.createElement(pn,{textValue:a.name,onSubmit:b,error:d,clearError:p}),o.a.createElement("div",{className:"current-weather-wrapper"},o.a.createElement("h3",null,"Current Weather:"),o.a.createElement(ro,{city:a,isFavorite:m,data:c.current,onFavoriteIconClicked:g})),o.a.createElement(yo,{data:c.forecast}))})))(xo(),gn),ko=ee((function(e){return{initCompleted:bn(e),weatherData:(r=e,r.weather.weatherData),formError:(t=e,t.weather.formError)};var t,r}),(function(e,t){var r=t.city;return{init:function(){return e(function(e){var t=e.city;return function(){var e=Xn(regeneratorRuntime.mark((function e(r,n){var o,i,a,l,c;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,!t){e.next=13;break}return e.next=4,In({locationKey:t.key});case 4:return o=e.sent,i=Kn(o.data,1),a=i[0],e.next=9,Fn({locationKey:t.key});case 9:return l=e.sent,c=l.data,e.next=13,r(Tn({initCompleted:!0,weatherData:{current:a,forecast:c}}));case 13:e.next=21;break;case 15:return e.prev=15,e.t0=e.catch(0),e.next=19,r(qn({globalError:e.t0,initCompleted:!0}));case 19:return e.next=21,r(Cn({initCompleted:!0}));case 21:case"end":return e.stop()}}),e,null,[[0,15]])})));return function(t,r){return e.apply(this,arguments)}}()}({city:r}))},findWeather:function(t){return e((r=t.name,function(){var e=Xn(regeneratorRuntime.mark((function e(t,n){var o,i,a,l,c,u,s,f;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,Dn({text:r});case 3:if(o=e.sent,0!==(i=o.data).length){e.next=9;break}return e.next=8,t(_n({formError:"There is no city to match."}));case 8:return e.abrupt("return",e.sent);case 9:return a={name:i[0].LocalizedName,key:i[0].Key},e.next=12,In({locationKey:a.key});case 12:return l=e.sent,c=Kn(l.data,1),u=c[0],e.next=17,Fn({locationKey:a.key});case 17:return s=e.sent,f=s.data,e.next=21,t(Vn({city:a}));case 21:return e.next=23,t(Pn({weatherData:{current:u,forecast:f}}));case 23:e.next=29;break;case 25:return e.prev=25,e.t0=e.catch(0),e.next=29,t(qn({globalError:e.t0}));case 29:case"end":return e.stop()}}),e,null,[[0,25]])})));return function(t,r){return e.apply(this,arguments)}}()));var r},clearFormError:function(){return e(function(){var e=Xn(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(_n({formError:null}));case 2:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}())}}}))(wo);function Eo(){var e=jo(["\n                width: 100%;    \n            "]);return Eo=function(){return e},e}function So(){var e=jo(["\n            flex-direction: column;\n        "]);return So=function(){return e},e}function Oo(){var e=jo(["\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n    > h2 {\n        padding: 0px 10px;\n        border-bottom: 2px solid ",";\n    }\n    \n    > .content{\n        flex-wrap: wrap;\n        display: flex;\n        padding: 30px;\n        align-content: center;\n        justify-content: center;\n        width: 100%;\n        \n        ",";\n        \n        > .favorite-card {\n            border-radius: 5px;\n            min-height: 230px;\n            width: 200px;\n            box-shadow: 0px 0px 3px 1px ",";    \n            background-color: ",";\n            padding: 0px 5px;\n            \n            &:hover {\n                background-color: ",";\n                box-shadow: 0px 0px 3px 2px ",";\n            };\n            \n            ",";\n            \n        }\n    }    \n"]);return Oo=function(){return e},e}function jo(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var To=Object(re.c)(Oo(),ye("primary"),xe(Object(re.c)(So())),ye("primary"),ye("background","dark"),(function(e){return hr(.1,ye("background","dark")(e))}),ye("primary"),xe(Object(re.c)(Eo()))),Co=function(e){return e.favorites.favoritesData},Po="".concat("FAVORITES/","SET_FAVORITES_DATA"),_o=On(Po);function No(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}return r}(e,t)||Ao(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Mo(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=Ao(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return a=e.done,e},e:function(e){l=!0,i=e},f:function(){try{a||null==r.return||r.return()}finally{if(l)throw i}}}}function Ao(e,t){if(e){if("string"==typeof e)return Ro(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?Ro(e,t):void 0}}function Ro(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function zo(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Io(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?zo(Object(r),!0).forEach((function(t){Fo(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):zo(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function Fo(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function Do(e,t,r,n,o,i,a){try{var l=e[i](a),c=l.value}catch(e){return void r(e)}l.done?t(c):Promise.resolve(c).then(n,o)}function Lo(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){Do(i,n,o,a,l,"next",e)}function l(e){Do(i,n,o,a,l,"throw",e)}a(void 0)}))}}function Uo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    font-size: 30px;\n    color: ",";\n    padding: 30px;\n"]);return Uo=function(){return e},e}var Bo=Object(re.c)(Uo(),ye("background","dark "));function Wo(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return Wo=function(){return e},e}var $o=Object(re.d)((function(e){var t=e.className;return o.a.createElement("div",{className:ie()(t,"no-favorites")},"You don't have any favorite cities. Go ahead and add some.")}))(Wo(),Bo),Ho="/yogev-malca-01-10-2020/",Vo="".concat(Ho,"weather"),qo="".concat(Ho,"favorites");function Go(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return Go=function(){return e},e}var Ko=Object(re.d)(Object(n.memo)((function(e){var t=e.className,r=e.onRemoveFavorite,i=e.favorites,a=e.favoritesData,l=e.checkForDataUpdates,c=e.navigate,u=e.favoriteCityClicked;Object(n.useEffect)((function(){l({exists:Object.keys(a),areExists:i.map((function(e){return e.key}))})}),[i,a]);var s=Object(n.useCallback)((function(){return c(Vo)}),[c]),f=Object(n.useCallback)((function(e){return u({navigateToWeatherPage:s,city:e})}),[s]);return o.a.createElement("div",{className:ie()(t,"favorites")},o.a.createElement("h2",null,"Favorite Cities"),o.a.createElement("div",{className:"content"},0===i.length?o.a.createElement($o,null):i.map((function(e){return o.a.createElement(ro,{key:e.key,data:a[e.key],className:"favorite-card",city:e,onClick:f,onFavoriteIconClicked:r,isFavorite:!0})}))))})))(Go(),To),Qo=ee((function(e){return{favoritesData:Co(e)}}),(function(e){return{checkForDataUpdates:function(t){return e(function(e){var t=e.exists,r=e.areExists;return function(){var e=Lo(regeneratorRuntime.mark((function e(n,o){var i,a,l,c,u,s,f,d,p,m;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,i=r.filter((function(e){return!t.includes(e)})),a=t.filter((function(e){return!r.includes(e)})),l=Co(o()),a.length>0&&(l=Object.keys(l).reduce((function(e,t){return a.includes(t)?e:Io(Io({},e),{},Fo({},t,l[t]))}),{})),!(i.length>0)){e.next=29;break}c={},u=Mo(i),e.prev=8,u.s();case 10:if((s=u.n()).done){e.next=20;break}return f=s.value,e.next=14,In({locationKey:f});case 14:d=e.sent,p=No(d.data,1),m=p[0],c[f]=m;case 18:e.next=10;break;case 20:e.next=25;break;case 22:e.prev=22,e.t0=e.catch(8),u.e(e.t0);case 25:return e.prev=25,u.f(),e.finish(25);case 28:l=Io(Io({},l),c);case 29:if(!(i.length>0||a.length>0)){e.next=32;break}return e.next=32,n(_o({favoritesData:l}));case 32:e.next=38;break;case 34:return e.prev=34,e.t1=e.catch(0),e.next=38,n(qn({globalError:e.t1}));case 38:case"end":return e.stop()}}),e,null,[[0,34],[8,22,25,28]])})));return function(t,r){return e.apply(this,arguments)}}()}(t))},favoriteCityClicked:function(t){return e((n=(r=t).navigateToWeatherPage,o=r.city,function(){var e=Lo(regeneratorRuntime.mark((function e(t,r){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t(Vn({city:o}));case 2:n();case 3:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}()));var r,n,o}}}))(Ko);function Yo(){var e=ti(["\n            display: flex;\n            width: 100%;\n        \n                > a {\n                    flex-grow: 1;        \n                }\n        \n        "]);return Yo=function(){return e},e}function Xo(){var e=ti(["\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        flex: 0 0 110px;\n    "]);return Xo=function(){return e},e}function Jo(){var e=ti(["\n            top: 130px;\n            right: 18px;\n        "]);return Jo=function(){return e},e}function Zo(){var e=ti(["\n            margin-left: initial;\n        "]);return Zo=function(){return e},e}function ei(){var e=ti(["\n    z-index: 1;\n    width: 100%;\n    flex: 0 0 80px;\n    padding: 0px 10px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    box-shadow: "," 0px 2px 7px 6px;\n    \n    > h2 {\n        margin-left: 10px;\n        \n        ",";\n    \n    }\n    \n    > .theme-toggle-basics {\n        height: 40px;\n        width: 40px;\n        border-radius: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: 14px;\n        letter-spacing: -0.5px;\n        cursor: pointer;\n        transition: background-color 300ms, box-shadow 300ms;\n        position: absolute;\n        top: 108px;\n        right: 51px;\n        \n        ",";\n    }\n    \n    > .theme-toggle-dark {\n        box-shadow: "," 1px 1px 4px 2px;        \n        color: initial;\n        background-color: ",";    \n    }\n    \n    > .theme-toggle-light {\n        background-color: ",";\n        color: ",";\n        box-shadow: "," 1px 1px 4px 2px;\n    }\n    \n    ",";\n    \n   > .navigators-wrapper {\n       display: flex;\n       padding: 10px 0px;\n    \n        > a {\n            font-size: 18px;\n            font-weight: bold;\n            border: 1px "," solid;\n            box-shadow: "," 0px 0px 2px 2px;\n            color: inherit;\n            padding: 5px;\n            border-radius: 5px;\n            text-align: center;\n            margin: 0px 10px;\n        }\n        \n        > .active-tag {\n            background-color: ",";\n            color: ",";\n            box-shadow: "," 0px 0px 2px 2px;\n         }\n        \n        \n        ",";     \n   } \n\n"]);return ei=function(){return e},e}function ti(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var ri=Object(re.c)(ei(),ye("background","lighter"),xe(Object(re.c)(Zo())),xe(Object(re.c)(Jo())),ye("background","light"),ye("background","lighter"),ye("background","darker"),ye("background","light"),ye("background","darker"),xe(Object(re.c)(Xo())),ye("background","dark"),ye("background","dark"),ye("primary"),ye("background","light"),ye("primary"),xe(Object(re.c)(Yo()))),ni={dark:"Light",light:"Dark"};function oi(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return oi=function(){return e},e}var ii=Object(re.d)(Object(n.memo)((function(e){var t=e.className,r=e.toggleTheme,n=e.currentTheme,i=e.pathname;return o.a.createElement("div",{className:ie()(t,"header")},o.a.createElement("h2",null,"Is Herolo Awesome? :)"),o.a.createElement("span",{onClick:r,className:ie()("theme-toggle-basics","theme-toggle-".concat(n))},ni[n]),o.a.createElement("div",{className:"navigators-wrapper"},o.a.createElement(Tt,{to:Vo,className:i===Vo?"active-tag":null},"Weather"),o.a.createElement(Tt,{to:qo,className:i===qo?"active-tag":null},"Favorites")))})))(oi(),ri),ai=function(e){return e.layout.initCompleted},li=function(e){return e.layout.favorites};function ci(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return ui(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return ui(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ui(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var si=function(e){return 0===e.length?localStorage.removeItem("favorites-weather-locations"):localStorage.setItem("favorites-weather-locations",e.map((function(e){var t=e.key,r=e.name;return"".concat(t,"#").concat(r)})).join("/"))};function fi(e){return function(e){if(Array.isArray(e))return di(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return di(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return di(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function di(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function pi(e,t,r,n,o,i,a){try{var l=e[i](a),c=l.value}catch(e){return void r(e)}l.done?t(c):Promise.resolve(c).then(n,o)}function mi(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){pi(i,n,o,a,l,"next",e)}function l(e){pi(i,n,o,a,l,"throw",e)}a(void 0)}))}}var gi={name:"Tel Aviv",key:"215854"};function bi(){var e=vi(["\n            margin: auto 10px;\n            width: 100%;\n            padding: 30px 5px;\n        "]);return bi=function(){return e},e}function hi(){var e=vi(["\n    position: fixed;\n    z-index: 1;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    background-color: ",";\n\n    \n    .box {\n        margin: auto;\n        box-shadow: 0px 0px 3px 1px ",";\n        border: 2px solid red;\n        border-radius: 10px;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        width: 500px;\n        padding: 100px 30px;\n    \n        ",";\n        \n    }\n    \n\n"]);return hi=function(){return e},e}function vi(e,t){return t||(t=e.slice(0)),Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}var yi=Object(re.c)(hi(),ye("background","lighter"),ye("danger"),xe(Object(re.c)(bi())));function xi(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return xi=function(){return e},e}var wi=Object(re.d)(Object(n.memo)((function(e){var t=e.className;return e.globalError?o.a.createElement("div",{className:ie()(t,"error-modal")},o.a.createElement("div",{className:"box"},o.a.createElement("h1",null,"An Error Occurred."),o.a.createElement("h3",null,"Please refresh the page."))):null})))(xi(),yi);function ki(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    display: flex;\n    height: 100%;\n    width: 100%;\n    background-color: white;\n    z-index: 1;\n    position: fixed;\n    top: 0;\n    right: 0;\n\n    > img {\n        z-index: 1;\n        max-height: 100%;\n        width: 100%;\n        margin: auto;\n    }\n"]);return ki=function(){return e},e}var Ei=Object(re.c)(ki()),Si=r.p+"44f968b5b37b520269b36905f4de6d71.jpg";function Oi(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return Oi=function(){return e},e}var ji=Object(re.d)((function(e){var t=e.className;return o.a.createElement("div",{className:t},o.a.createElement("img",{src:Si}))}))(Oi(),Ei);function Ti(){return(Ti=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function Ci(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Pi(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _i(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["",""]);return _i=function(){return e},e}var Ni=Object(re.d)((function(e){var t=e.className,r=e.init,i=e.initCompleted,a=e.toggleTheme,l=e.currentTheme,c=e.city,u=e.globalError,s=e.location,f=void 0===s?{}:s,d=e.navigate,p=e.onAddFavorite,m=e.onRemoveFavorite,g=e.favorites;if(!i)throw r();return Object(n.useEffect)((function(){f.pathname===Ho&&d(Vo)}),[f.pathname]),o.a.createElement("div",{className:ie()(t,"layout")},o.a.createElement(wi,{globalError:u}),o.a.createElement(ii,{pathname:f.pathname,toggleTheme:a,currentTheme:l}),o.a.createElement(n.Suspense,{fallback:o.a.createElement(fe,null)},o.a.createElement(vt,{className:"router"},o.a.createElement(ko,{path:Vo,city:c,favorites:g,onAddFavorite:p,onRemoveFavorite:m}),o.a.createElement(Qo,{path:qo,favorites:g,onRemoveFavorite:m}),o.a.createElement(ji,{default:!0}))))}))(_i(),It),Mi=ee((function(e){return{initCompleted:ai(e),city:(r=e,r.layout.city),globalError:(t=e,t.layout.globalError),favorites:li(e)};var t,r}),(function(e){return{init:function(){return e(function(){var e=mi(regeneratorRuntime.mark((function e(t,r){var n,o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,new Promise((function(e,t){navigator.geolocation||e(null);var r=function(){var r=mi(regeneratorRuntime.mark((function r(n){var o,i,a,l;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return o=n.coords,r.prev=1,i="".concat(o.latitude,",").concat(o.longitude),r.next=5,Ln({coords:i});case 5:a=r.sent,l=a.data,e({key:l.Key,name:l.LocalizedName}),r.next=13;break;case 10:r.prev=10,r.t0=r.catch(1),t(r.t0);case 13:case"end":return r.stop()}}),r,null,[[1,10]])})));return function(e){return r.apply(this,arguments)}}();navigator.geolocation.getCurrentPosition(r,(function(t){return e(null)}))}));case 3:return n=e.sent,o=n||gi,r=void 0,r=localStorage.getItem("favorites-weather-locations"),i=r?r.split("/").map((function(e){var t=ci(e.split("#"),2);return{key:t[0],name:t[1]}})):[],e.next=8,t(Hn({initCompleted:!0,city:o,favorites:i}));case 8:e.next=14;break;case 10:return e.prev=10,e.t0=e.catch(0),e.next=14,t(qn({globalError:e.t0,initCompleted:!0}));case 14:case"end":return e.stop()}var r}),e,null,[[0,10]])})));return function(t,r){return e.apply(this,arguments)}}())},onRemoveFavorite:function(t){return e((r=t.key,function(){var e=mi(regeneratorRuntime.mark((function e(t,n){var o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=li(n()),i=o.filter((function(e){return e.key!==r})),si(i),e.next=5,t(Gn({favorites:i}));case 5:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}()));var r},onAddFavorite:function(t){return e((r=t,function(){var e=mi(regeneratorRuntime.mark((function e(t,n){var o,i;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return o=li(n()),i=[].concat(fi(o),[r]),si(i),e.next=5,t(Gn({favorites:i}));case 5:case"end":return e.stop()}}),e)})));return function(t,r){return e.apply(this,arguments)}}()));var r}}}))((function(e){return o.a.createElement(n.Suspense,{fallback:o.a.createElement(fe,null)},o.a.createElement(vt,null,o.a.createElement(Ni,Ti({},function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ci(Object(r),!0).forEach((function(t){Pi(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ci(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({path:"./*"},e),{default:!0}))))}));function Ai(){var e=function(e,t){t||(t=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}(["\n    html,body {\n        height: 100%;\n        width: 100%;\n        margin: 0;\n    }\n    \n    * {\n        color: ",";\n    }\n    \n  \n    body {\n        background-color: ",";\n        font-family: 'Tinos', 'Roboto', sans-serif !important;\n    } \n    \n    #app {\n        height: 100%;\n        width: 100%;\n        overflow: hidden;\n        \n        > * {\n            height: 100%;\n            width: 100%;\n        }\n    }\n    \n    div {\n        transition: background-color 300ms, box-shadow 300ms, color 300ms;\n    }\n    \n"]);return Ai=function(){return e},e}var Ri=Object(re.b)(Ai(),ye("text"),ye("background"));function zi(e){return(zi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ii(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Fi(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function Di(e,t){return(Di=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Li(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=Bi(e);if(t){var o=Bi(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return Ui(this,r)}}function Ui(e,t){return!t||"object"!==zi(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Bi(e){return(Bi=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Wi=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Di(e,t)}(i,e);var t,r,n,o=Li(i);function i(){return Ii(this,i),o.apply(this,arguments)}return t=i,(r=[{key:"componentDidCatch",value:function(e,t){console.error(e)}},{key:"render",value:function(){return this.props.children}}])&&Fi(t.prototype,r),n&&Fi(t,n),i}(o.a.Component);function $i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var r=[],n=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(n=(a=l.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw i}}return r}(e,t)||function(e,t){if(!e)return;if("string"==typeof e)return Hi(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);"Object"===r&&e.constructor&&(r=e.constructor.name);if("Map"===r||"Set"===r)return Array.from(e);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return Hi(e,t)}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Hi(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var Vi=it(window),qi=["light","dark"],Gi=function(){var e=$i(Object(n.useState)(qi[0]),2),t=e[0],r=e[1],i=Object(n.useCallback)((function(){r(t===qi[0]?qi[1]:qi[0])}),[t,r]);return o.a.createElement(o.a.Fragment,null,o.a.createElement(Wi,null,o.a.createElement(re.a,{theme:ne[t]},o.a.createElement(bt,{history:Vi},o.a.createElement(Ri,null),o.a.createElement(Mi,{toggleTheme:i,currentTheme:t})))))};function Ki(e){return function(t){var r=t.dispatch,n=t.getState;return function(t){return function(o){return"function"==typeof o?o(r,n,e):t(o)}}}}var Qi=Ki();Qi.withExtraArgument=Ki;var Yi=Qi,Xi={globalError:null,city:null,initCompleted:!1,favorites:[]},Ji={favoritesData:{}},Zi={initCompleted:!1,weatherData:{},formError:null},ea=function e(t,r,n){var o;if("function"==typeof r&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof r&&void 0===n&&(n=r,r=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(e)(t,r)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var i=t,a=r,l=[],c=l,u=!1;function s(){c===l&&(c=l.slice())}function f(){if(u)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return a}function d(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(u)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribelistener for more details.");var t=!0;return s(),c.push(e),function(){if(t){if(u)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribelistener for more details.");t=!1,s();var r=c.indexOf(e);c.splice(r,1),l=null}}}function p(e){if(!R(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(u)throw new Error("Reducers may not dispatch actions.");try{u=!0,a=i(a,e)}finally{u=!1}for(var t=l=c,r=0;r<t.length;r++){(0,t[r])()}return e}function m(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");i=e,p({type:A.REPLACE})}function g(){var e,t=d;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function r(){e.next&&e.next(f())}return r(),{unsubscribe:t(r)}}})[N.a]=function(){return this},e}return p({type:A.INIT}),(o={dispatch:p,subscribe:d,getState:f,replaceReducer:m})[N.a]=g,o}(function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++){var o=t[n];0,"function"==typeof e[o]&&(r[o]=e[o])}var i,a=Object.keys(r);try{!function(e){Object.keys(e).forEach((function(t){var r=e[t];if(void 0===r(void 0,{type:A.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===r(void 0,{type:A.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+A.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(r)}catch(e){i=e}return function(e,t){if(void 0===e&&(e={}),i)throw i;for(var n=!1,o={},l=0;l<a.length;l++){var c=a[l],u=r[c],s=e[c],f=u(s,t);if(void 0===f){var d=z(c,t);throw new Error(d)}o[c]=f,n=n||f!==s}return(n=n||a.length!==Object.keys(e).length)?o:e}}({layout:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Xi,t=arguments.length>1?arguments[1]:void 0,r=t.type,n=t.data;switch(r){case Wn:case Un:case Bn:case $n:return jn({state:e,data:n});default:return e}},favorites:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Ji,t=arguments.length>1?arguments[1]:void 0,r=t.type,n=t.data;switch(r){case Po:return jn({state:e,data:n});default:return e}},weather:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:Zi,t=arguments.length>1?arguments[1]:void 0,r=t.type,n=t.data;switch(r){case vn:case yn:case xn:case wn:return jn({state:e,data:n});default:return e}}}),(window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||U)(function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return function(e){return function(){var r=e.apply(void 0,arguments),n=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},o={getState:r.getState,dispatch:function(){return n.apply(void 0,arguments)}},i=t.map((function(e){return e(o)}));return L({},r,{dispatch:n=U.apply(void 0,i)(r.dispatch)})}}}(Yi)));r(422);Object(i.render)(o.a.createElement(m,{store:ea},o.a.createElement(Gi,null)),document.getElementById("app")),e.hot.accept()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2V4cG9ydC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGVkLWNvbXBvbmVudHMvZGlzdC9zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL193a3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oaWRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1odG1sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWlvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpY3QtbWV0aG9kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kZWZpbmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1zYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tZXRhZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19saWJyYXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21ldGEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWRkLXRvLXVuc2NvcGFibGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191aWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1pbnN0YW5jZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mb3Itb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVkZWZpbmUtYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3ZhbGlkYXRlLWNvbGxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctdHJpbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyYXRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9kaXN0L2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzLmNqcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW52YXJpYW50L2Jyb3dzZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2hhcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LXBpZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGFncy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1hdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1yZWdleHAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZml4LXJlLXdrcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL191c2VyLWFnZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWZvcmNlZC1wYW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LWNvbGxlY3Rpb24tb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LWNvbGxlY3Rpb24tZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kb20tY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3drcy1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2hhcmVkLWtleS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19lbnVtLWJ1Zy1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2h0bWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy13cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1yZXBlYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1zaWduLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtZXhwbTEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmFpbHMtaXMtcmVnZXhwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LWl0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY3JlYXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVnZXhwLWV4ZWMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWR2YW5jZS1zdHJpbmctaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdGFzay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19taWNyb3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbmV3LXByb21pc2UtY2FwYWJpbGl0eS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190eXBlZC1idWZmZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlc3BvbnNpdmUvZGlzdC9yZWFjdC1yZXNwb25zaXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vYWRkRXZlbnRMaXN0ZW5lci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL3JlbW92ZUV2ZW50TGlzdGVuZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9saXN0ZW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL21lbW9pemUvZGlzdC9tZW1vaXplLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9pcy1wcm9wLXZhbGlkL2Rpc3QvaXMtcHJvcC12YWxpZC5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL193a3MtZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLWludGVybmFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcG4tZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2FtZS12YWx1ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19iaW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ludm9rZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXJzZS1pbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGFyc2UtZmxvYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1udW1iZXItdmFsdWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tYXRoLWxvZzFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtZnJvdW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItY2FsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1yZWR1Y2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktY29weS13aXRoaW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1zdGVwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5leGVjLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5mbGFncy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wZXJmb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Byb21pc2UtcmVzb2x2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi1zdHJvbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LndlYWstbWFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24td2Vhay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vd24ta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGF0dGVuLWludG8tYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLXBhZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtdG8tYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi10by1qc29uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWZyb20taXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1zY2FsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9iaW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9idWlsZFVSTC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9pc0NhbmNlbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2RlZmF1bHRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYWRhcHRlcnMveGhyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9jcmVhdGVFcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvbWVyZ2VDb25maWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jYW5jZWwvQ2FuY2VsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zeW1ib2wtb2JzZXJ2YWJsZS9lcy9wb255ZmlsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc2hhbGxvd2VxdWFsL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AZW1vdGlvbi9zdHlsaXMvZGlzdC9zdHlsaXMuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxpZmVjeWNsZXMtY29tcGF0L3JlYWN0LWxpZmVjeWNsZXMtY29tcGF0LmVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlTW91bnRlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL293bmVyRG9jdW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9jYW5Vc2VET00uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9nZXRDb21wdXRlZFN0eWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vb3duZXJXaW5kb3cuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9oeXBoZW5hdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS9oeXBoZW5hdGVTdHlsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL2lzVHJhbnNmb3JtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9kb20taGVscGVycy9lc20vY3NzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlV2lsbFVubW91bnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0ByZXN0YXJ0L2hvb2tzL2VzbS91c2VVcGRhdGVkUmVmLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlQ29tbWl0dGVkUmVmLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcmVzdGFydC9ob29rcy9lc20vdXNlRXZlbnRDYWxsYmFjay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYmFiZWwtcG9seWZpbGwvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL3NoaW0uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3ltYm9sLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Z1bmN0aW9uLXRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19lbnVtLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5mcmVlemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNlYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZnJvemVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1zZWFsZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmFzc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5iaW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZnVuY3Rpb24uaGFzLWluc3RhbmNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnBhcnNlLWludC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wYXJzZS1mbG9hdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnRvLWZpeGVkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci50by1wcmVjaXNpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmVwc2lsb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWZpbml0ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuaXMtbmFuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLm1pbi1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1pbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hY29zaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmFzaW5oLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguYXRhbmguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jYnJ0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguY2x6MzIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jb3NoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguZXhwbTEuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5mcm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5oeXBvdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmltdWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5sb2cxMC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmxvZzFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpZ24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5zaW5oLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudGFuaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnRydW5jLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5mcm9tLWNvZGUtcG9pbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnJhdy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcudHJpbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmNvZGUtcG9pbnQtYXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnJlcGVhdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3RhcnRzLXdpdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmlnLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5ibGluay5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZml4ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRjb2xvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zdHJpa2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN1Yi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUubm93LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tanNvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLWlzby1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1pc28tc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RhdGUtdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmlzLWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkub2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuam9pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zbGljZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zb3J0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubWFwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zb21lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmV2ZXJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnJlZHVjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaW5kZXgtb2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkubGFzdC1pbmRleC1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5jb3B5LXdpdGhpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWxsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5zcGVjaWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5tYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuc2VhcmNoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wcm9taXNlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LndlYWstc2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmFycmF5LWJ1ZmZlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5kYXRhLXZpZXcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50OC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50OC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50OC1jbGFtcGVkLWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQxNi1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5pbnQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50MzItYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5mbG9hdDY0LWFycmF5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuYXBwbHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5jb25zdHJ1Y3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5lbnVtZXJhdGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaGFzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0Lm93bi1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QucHJldmVudC1leHRlbnNpb25zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5mbGF0LW1hcC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5hcnJheS5mbGF0dGVuLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5hdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLXN0YXJ0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtZW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy50cmltLWxlZnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tcmlnaHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLm1hdGNoLWFsbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3ltYm9sLm9ic2VydmFibGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LnZhbHVlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZGVmaW5lLWdldHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZGVmaW5lLXNldHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QubG9va3VwLWdldHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QubG9va3VwLXNldHRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXAudG8tanNvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zZXQudG8tanNvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXAub2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc2V0Lm9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LndlYWstbWFwLm9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LndlYWstc2V0Lm9mLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hcC5mcm9tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnNldC5mcm9tLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LndlYWstbWFwLmZyb20uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcud2Vhay1zZXQuZnJvbS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3lzdGVtLmdsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5lcnJvci5pcy1lcnJvci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLmNsYW1wLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguZGVnLXBlci1yYWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5kZWdyZWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguZnNjYWxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguaWFkZGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5pc3ViaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLmltdWxoLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGgucmFkLXBlci1kZWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC5yYWRpYW5zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm1hdGguc2NhbGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWF0aC51bXVsaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXRoLnNpZ25iaXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnByb21pc2UudHJ5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZGVmaW5lLW1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZGVsZXRlLW1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW1ldGFkYXRhLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcucmVmbGVjdC5nZXQtb3duLW1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW93bi1tZXRhZGF0YS1rZXlzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuaGFzLW1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnJlZmxlY3QuaGFzLW93bi1tZXRhZGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5yZWZsZWN0Lm1ldGFkYXRhLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFzYXAuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JzZXJ2YWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuaW1tZWRpYXRlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3JlZ2V4cC9lc2NhcGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9jb3JlLnJlZ2V4cC5lc2NhcGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVwbGFjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWhvdC1sb2FkZXIvcGF0Y2guanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWhvdC1sb2FkZXIvZGlzdC9yZWFjdC1ob3QtbG9hZGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWRvbS9janMvcmVhY3QtZG9tLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3NjaGVkdWxlci9janMvc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9wcm9wLXR5cGVzL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1sb2FkZXItc3Bpbm5lci9kaXN0L2xvYWRlci9DaXJjbGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1sb2FkZXItc3Bpbm5lci9kaXN0L2xvYWRlci9XYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGVyLXNwaW5uZXIvZGlzdC9sb2FkZXIvQXVkaW8uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL0JhbGxUcmlhbmdsZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGVyLXNwaW5uZXIvZGlzdC9sb2FkZXIvQmFycy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGVyLXNwaW5uZXIvZGlzdC9sb2FkZXIvQ3JhZGxlTG9hZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1sb2FkZXItc3Bpbm5lci9kaXN0L2xvYWRlci9HcmlkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1sb2FkZXItc3Bpbm5lci9kaXN0L2xvYWRlci9IZWFydHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL011dGF0aW5nRG90cy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGVyLXNwaW5uZXIvZGlzdC9sb2FkZXIvT3ZhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGVyLXNwaW5uZXIvZGlzdC9sb2FkZXIvUGxhbmUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL1B1ZmYuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL1Jldm9sdmluZ0RvdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbG9hZGVyLXNwaW5uZXIvZGlzdC9sb2FkZXIvUmluZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL1RhaWxTcGluLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1sb2FkZXItc3Bpbm5lci9kaXN0L2xvYWRlci9UaHJlZURvdHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWxvYWRlci1zcGlubmVyL2Rpc3QvbG9hZGVyL1RyaWFuZ2xlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jcmVhdGUtcmVhY3QtY29udGV4dC9saWIvaW1wbGVtZW50YXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2d1ZC9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvd2FybmluZy93YXJuaW5nLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvYXhpb3MuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL0F4aW9zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9JbnRlcmNlcHRvck1hbmFnZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2Rpc3BhdGNoUmVxdWVzdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvdHJhbnNmb3JtRGF0YS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvbm9ybWFsaXplSGVhZGVyTmFtZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NvcmUvc2V0dGxlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvY29yZS9lbmhhbmNlRXJyb3IuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2Nvb2tpZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9jb3JlL2J1aWxkRnVsbFBhdGguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzQWJzb2x1dGVVUkwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2NvbWJpbmVVUkxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9heGlvcy9saWIvaGVscGVycy9wYXJzZUhlYWRlcnMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2F4aW9zL2xpYi9oZWxwZXJzL2lzVVJMU2FtZU9yaWdpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2NhbmNlbC9DYW5jZWxUb2tlbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvYXhpb3MvbGliL2hlbHBlcnMvc3ByZWFkLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ib290c3RyYXAvZGlzdC9jc3MvYm9vdHN0cmFwLm1pbi5jc3M/NjQ1MiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9Db250ZXh0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9iYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvU3Vic2NyaXB0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL1Byb3ZpZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvdXRpbHMvc2hhbGxvd0VxdWFsLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC9lcy9yZWR1eC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC93cmFwTWFwVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tYXBEaXNwYXRjaFRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWFwU3RhdGVUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21lcmdlUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3Qvc2VsZWN0b3JGYWN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L2Nvbm5lY3QuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2hvb2tzL3VzZVNlbGVjdG9yLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvZ2xvYmFscy9zdHlsZXMvdGhlbWUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbW1vbkNvbXBvbmVudHMvTG9hZGVyL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uQ29tcG9uZW50cy9Mb2FkZXIvTG9hZGVyLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uQ29tcG9uZW50cy9CdXR0b24vc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21tb25Db21wb25lbnRzL0J1dHRvbi9CdXR0b24uanN4Iiwid2VicGFjazovLy8uL3NyYy9nbG9iYWxzL3N0eWxlcy9oZWxwZXIuanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21tb25Db21wb25lbnRzL0RlZ3JlZXMvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9jb21tb25Db21wb25lbnRzL0RlZ3JlZXMvRGVncmVlcy5qc3giLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWljb25zL2xpYi9lc20vaWNvbkNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWljb25zL2xpYi9lc20vaWNvbkJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWljb25zL21kL2luZGV4LmVzbS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uQ29tcG9uZW50cy9JY29uL2NvbnN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tbW9uQ29tcG9uZW50cy9JY29uL0ljb24uanN4Iiwid2VicGFjazovLy8uL3NyYy9jb21tb25Db21wb25lbnRzL0Zhdm9yaXRlSWNvbi9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbW1vbkNvbXBvbmVudHMvRmF2b3JpdGVJY29uL0Zhdm9yaXRlSWNvbi5qc3giLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0ByZWFjaC9yb3V0ZXIvZXMvbGliL3V0aWxzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcmVhY2gvcm91dGVyL2VzL2xpYi9oaXN0b3J5LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AcmVhY2gvcm91dGVyL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2V0UHJvdG90eXBlT2YuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY29uc3RydWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS93cmFwTmF0aXZlU3VwZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2lzTmF0aXZlRnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3BvbGlzaGVkL2Rpc3QvcG9saXNoZWQuZXNtLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvY29tcG9uZW50cy9TZWFyY2hGb3JtL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQHJlc3RhcnQvaG9va3MvZXNtL3VzZVRpbWVvdXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RvbS1oZWxwZXJzL2VzbS90cmFuc2l0aW9uRW5kLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL2VzbS9jb25maWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL1RyYW5zaXRpb25Hcm91cENvbnRleHQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL1RyYW5zaXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lc20vRmFkZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzbS90cmlnZ2VyQnJvd3NlclJlZmxvdy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzbS9UaGVtZVByb3ZpZGVyLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXNtL0Nsb3NlQnV0dG9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXNtL1RvYXN0Q29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzbS9Ub2FzdEhlYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZG9tLWhlbHBlcnMvZXNtL2NhbWVsaXplLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1ib290c3RyYXAvZXNtL2NyZWF0ZVdpdGhCc1ByZWZpeC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtYm9vdHN0cmFwL2VzbS9Ub2FzdEJvZHkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWJvb3RzdHJhcC9lc20vVG9hc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvY29tcG9uZW50cy9TZWFyY2hGb3JtL1NlYXJjaEZvcm0uanN4Iiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29udGFpbmVycy9XZWF0aGVyL2NvbXBvbmVudHMvU2VhcmNoRm9ybS9jb25zdHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9XZWF0aGVyL3NlbGVjdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvV2VhdGhlci90eXBlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvdXRpbHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL1dlYXRoZXIvYWN0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvaGVscGVycy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvTGF5b3V0L3R5cGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9MYXlvdXQvYWN0aW9ucy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbXBvbmVudHMvQ3VycmVudFdlYXRoZXIvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29tcG9uZW50cy9DdXJyZW50V2VhdGhlci9DdXJyZW50V2VhdGhlci5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb21wb25lbnRzL0N1cnJlbnRXZWF0aGVyL2NvbnN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbnRhaW5lcnMvV2VhdGhlci9jb21wb25lbnRzL0ZvcmVjYXN0L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbnRhaW5lcnMvV2VhdGhlci9jb21wb25lbnRzL0ZvcmVjYXN0L2NvbXBvbmVudHMvRGF5L3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbnRhaW5lcnMvV2VhdGhlci9jb21wb25lbnRzL0ZvcmVjYXN0L2NvbXBvbmVudHMvRGF5L2NvbnN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbnRhaW5lcnMvV2VhdGhlci9jb21wb25lbnRzL0ZvcmVjYXN0L2NvbXBvbmVudHMvRGF5L0RheS5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvY29tcG9uZW50cy9Gb3JlY2FzdC9Gb3JlY2FzdC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvY29tcG9uZW50cy9Gb3JlY2FzdC9jb25zdHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvV2VhdGhlci5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL1dlYXRoZXIvY29uc3RzLmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9XZWF0aGVyL29wZXJhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL1dlYXRoZXIvY29uc3RzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29udGFpbmVycy9GYXZvcml0ZXMvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9GYXZvcml0ZXMvc2VsZWN0b3JzLmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9GYXZvcml0ZXMvdHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL0Zhdm9yaXRlcy9hY3Rpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29udGFpbmVycy9GYXZvcml0ZXMvY29tcG9uZW50cy9Ob0Zhdm9yaXRlcy9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb250YWluZXJzL0Zhdm9yaXRlcy9jb21wb25lbnRzL05vRmF2b3JpdGVzL05vRmF2b3JpdGVzLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbnRhaW5lcnMvRmF2b3JpdGVzL2NvbXBvbmVudHMvTm9GYXZvcml0ZXMvY29uc3RzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29uc3RzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29udGFpbmVycy9GYXZvcml0ZXMvRmF2b3JpdGVzLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbnRhaW5lcnMvRmF2b3JpdGVzL2NvbnN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvRmF2b3JpdGVzL29wZXJhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb21wb25lbnRzL0hlYWRlci9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb21wb25lbnRzL0hlYWRlci9jb25zdHMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb21wb25lbnRzL0hlYWRlci9IZWFkZXIuanN4Iiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9MYXlvdXQvc2VsZWN0b3JzLmpzIiwid2VicGFjazovLy8uL3NyYy9nbG9iYWxzL3V0aWxzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9nbG9iYWxzL3V0aWxzL2NvbnN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvTGF5b3V0L29wZXJhdGlvbnMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0xheW91dC9jb21wb25lbnRzL0Vycm9yTW9kYWwvc3R5bGVzLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29tcG9uZW50cy9FcnJvck1vZGFsL0Vycm9yTW9kYWwuanN4Iiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29tcG9uZW50cy9FcnJvck1vZGFsL2NvbnN0cy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbXBvbmVudHMvUGFnZU5vdEZvdW5kL3N0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L2NvbXBvbmVudHMvUGFnZU5vdEZvdW5kL2Fzc2V0cy80MDQtZXJyb3ItcGFnZS1ub3QtZm91bmQuanBnIiwid2VicGFjazovLy8uL3NyYy9BcHAvY29tcG9uZW50cy9MYXlvdXQvY29tcG9uZW50cy9QYWdlTm90Rm91bmQvUGFnZU5vdEZvdW5kLmpzeCIsIndlYnBhY2s6Ly8vLi9zcmMvQXBwL2NvbXBvbmVudHMvTGF5b3V0L0xheW91dC5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9zdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9jb21wb25lbnRzL0Vycm9yQm91bmRhcnkvRXJyb3JCb3VuZGFyeS5qc3giLCJ3ZWJwYWNrOi8vLy4vc3JjL0FwcC9BcHAuanN4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWR1eC10aHVuay9lcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3RvcmUvTGF5b3V0L3JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL0Zhdm9yaXRlcy9yZWR1Y2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9zdG9yZS9XZWF0aGVyL3JlZHVjZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3N0b3JlL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qc3giXSwibmFtZXMiOlsicGFyZW50SG90VXBkYXRlQ2FsbGJhY2siLCJ3aW5kb3ciLCJjaHVua0lkIiwibW9yZU1vZHVsZXMiLCJob3RBdmFpbGFibGVGaWxlc01hcCIsImhvdFJlcXVlc3RlZEZpbGVzTWFwIiwibW9kdWxlSWQiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJob3RVcGRhdGUiLCJob3RXYWl0aW5nRmlsZXMiLCJob3RDaHVua3NMb2FkaW5nIiwiaG90VXBkYXRlRG93bmxvYWRlZCIsImhvdEFkZFVwZGF0ZUNodW5rIiwiaG90Q3VycmVudENoaWxkTW9kdWxlIiwiaG90QXBwbHlPblVwZGF0ZSIsImhvdEN1cnJlbnRIYXNoIiwiaG90Q3VycmVudE1vZHVsZURhdGEiLCJob3RDdXJyZW50UGFyZW50cyIsImhvdEN1cnJlbnRQYXJlbnRzVGVtcCIsImhvdENyZWF0ZVJlcXVpcmUiLCJtZSIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZm4iLCJyZXF1ZXN0IiwiaG90IiwiYWN0aXZlIiwicGFyZW50cyIsImluZGV4T2YiLCJwdXNoIiwiY2hpbGRyZW4iLCJjb25zb2xlIiwid2FybiIsIk9iamVjdEZhY3RvcnkiLCJuYW1lIiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsInNldCIsInZhbHVlIiwiZGVmaW5lUHJvcGVydHkiLCJlIiwiaG90U3RhdHVzIiwiaG90U2V0U3RhdHVzIiwidGhlbiIsImZpbmlzaENodW5rTG9hZGluZyIsImVyciIsImhvdFdhaXRpbmdGaWxlc01hcCIsImhvdEVuc3VyZVVwZGF0ZUNodW5rIiwidCIsIm1vZGUiLCJob3RDcmVhdGVNb2R1bGUiLCJfYWNjZXB0ZWREZXBlbmRlbmNpZXMiLCJfZGVjbGluZWREZXBlbmRlbmNpZXMiLCJfc2VsZkFjY2VwdGVkIiwiX3NlbGZEZWNsaW5lZCIsIl9zZWxmSW52YWxpZGF0ZWQiLCJfZGlzcG9zZUhhbmRsZXJzIiwiX21haW4iLCJhY2NlcHQiLCJkZXAiLCJjYWxsYmFjayIsInVuZGVmaW5lZCIsImkiLCJsZW5ndGgiLCJkZWNsaW5lIiwiZGlzcG9zZSIsImFkZERpc3Bvc2VIYW5kbGVyIiwicmVtb3ZlRGlzcG9zZUhhbmRsZXIiLCJpZHgiLCJzcGxpY2UiLCJpbnZhbGlkYXRlIiwidGhpcyIsIm1vZHVsZXMiLCJob3RBcHBseUludmFsaWRhdGVkTW9kdWxlIiwiaG90UXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzIiwiY2hlY2siLCJob3RDaGVjayIsImFwcGx5IiwiaG90QXBwbHkiLCJzdGF0dXMiLCJsIiwiaG90U3RhdHVzSGFuZGxlcnMiLCJhZGRTdGF0dXNIYW5kbGVyIiwicmVtb3ZlU3RhdHVzSGFuZGxlciIsImRhdGEiLCJuZXdTdGF0dXMiLCJob3REZWZlcnJlZCIsImhvdFVwZGF0ZU5ld0hhc2giLCJ0b01vZHVsZUlkIiwiaWQiLCJFcnJvciIsInJlcXVlc3RUaW1lb3V0IiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJYTUxIdHRwUmVxdWVzdCIsInJlcXVlc3RQYXRoIiwicCIsIm9wZW4iLCJ0aW1lb3V0Iiwic2VuZCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlYWR5U3RhdGUiLCJ1cGRhdGUiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZVRleHQiLCJob3RBcHBseUludmFsaWRhdGVkTW9kdWxlcyIsImMiLCJoIiwicHJvbWlzZSIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJzcmMiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJob3REb3dubG9hZFVwZGF0ZUNodW5rIiwiZGVmZXJyZWQiLCJyZXN1bHQiLCJvdXRkYXRlZE1vZHVsZXMiLCJvcHRpb25zIiwiaG90QXBwbHlJbnRlcm5hbCIsImNiIiwiaiIsIm1vZHVsZSIsImdldEFmZmVjdGVkU3R1ZmYiLCJ1cGRhdGVNb2R1bGVJZCIsIm91dGRhdGVkRGVwZW5kZW5jaWVzIiwicXVldWUiLCJtYXAiLCJjaGFpbiIsInF1ZXVlSXRlbSIsInBvcCIsInR5cGUiLCJwYXJlbnRJZCIsInBhcmVudCIsImNvbmNhdCIsImFkZEFsbFRvU2V0IiwiYSIsImIiLCJpdGVtIiwiYXBwbGllZFVwZGF0ZSIsIndhcm5VbmV4cGVjdGVkUmVxdWlyZSIsImFib3J0RXJyb3IiLCJkb0FwcGx5IiwiZG9EaXNwb3NlIiwiY2hhaW5JbmZvIiwiam9pbiIsIm9uRGVjbGluZWQiLCJpZ25vcmVEZWNsaW5lZCIsIm9uVW5hY2NlcHRlZCIsImlnbm9yZVVuYWNjZXB0ZWQiLCJvbkFjY2VwdGVkIiwib25EaXNwb3NlZCIsIm91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyIsInNsaWNlIiwiZXJyb3JIYW5kbGVyIiwia2V5cyIsImZvckVhY2giLCJpbnN0YWxsZWRDaHVua3MiLCJob3REaXNwb3NlQ2h1bmsiLCJkZXBlbmRlbmN5IiwibW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMiLCJkaXNwb3NlSGFuZGxlcnMiLCJjaGlsZCIsImVycm9yIiwiY2FsbGJhY2tzIiwib25FcnJvcmVkIiwiZGVwZW5kZW5jeUlkIiwiaWdub3JlRXJyb3JlZCIsImVycjIiLCJvcmlnaW5hbEVycm9yIiwibGlzdCIsImV4cG9ydHMiLCJtIiwiZCIsImdldHRlciIsIm8iLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicyIsImdsb2JhbCIsImNvcmUiLCJoaWRlIiwicmVkZWZpbmUiLCJjdHgiLCIkZXhwb3J0Iiwic291cmNlIiwib3duIiwib3V0IiwiZXhwIiwiSVNfRk9SQ0VEIiwiRiIsIklTX0dMT0JBTCIsIkciLCJJU19TVEFUSUMiLCJTIiwiSVNfUFJPVE8iLCJQIiwiSVNfQklORCIsIkIiLCJ0YXJnZXQiLCJleHBQcm90byIsIkZ1bmN0aW9uIiwiVSIsIlciLCJSIiwidiIsImFzc2lnbiIsImFyZ3VtZW50cyIsImciLCJ0b1N0cmluZyIsInciLCJmcmVlemUiLCJOIiwiRSIsImRpc3BsYXlOYW1lIiwiXyIsInN0eWxlZENvbXBvbmVudElkIiwiSSIsInByb2Nlc3MiLCJlbnYiLCJSRUFDVF9BUFBfU0NfQVRUUiIsIlNDX0FUVFIiLCJBIiwiTyIsIlNDX0RJU0FCTEVfU1BFRURZIiwiUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZIiwiRCIsIkFycmF5IiwiayIsImNoaWxkTm9kZXMiLCJub2RlVHlwZSIsImhhc0F0dHJpYnV0ZSIsIm5leHRTaWJsaW5nIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0QmVmb3JlIiwieCIsImVsZW1lbnQiLCJjcmVhdGVUZXh0Tm9kZSIsInNoZWV0Iiwic3R5bGVTaGVldHMiLCJvd25lck5vZGUiLCJpbnNlcnRSdWxlIiwiZGVsZXRlUnVsZSIsImdldFJ1bGUiLCJjc3NSdWxlcyIsImNzc1RleHQiLCJWIiwibm9kZXMiLCJyZW1vdmVDaGlsZCIsInRleHRDb250ZW50IiwiTSIsInJ1bGVzIiwieiIsImdyb3VwU2l6ZXMiLCJVaW50MzJBcnJheSIsInRhZyIsImluZGV4T2ZHcm91cCIsImluc2VydFJ1bGVzIiwiY2xlYXJHcm91cCIsImdldEdyb3VwIiwiTWFwIiwiTCIsImhhcyIsInEiLCJIIiwiJCIsIlkiLCJSZWdFeHAiLCJzcGxpdCIsInJlZ2lzdGVyTmFtZSIsImlubmVySFRNTCIsInRyaW0iLCJtYXRjaCIsInBhcnNlSW50IiwidSIsImdldFRhZyIsIkoiLCJYIiwiaXNTZXJ2ZXIiLCJ1c2VDU1NPTUluamVjdGlvbiIsIloiLCJncyIsIm5hbWVzIiwicXVlcnlTZWxlY3RvckFsbCIsImdldEF0dHJpYnV0ZSIsInBhcmVudE5vZGUiLCJyZWdpc3RlcklkIiwicmVjb25zdHJ1Y3RXaXRoT3B0aW9ucyIsImFsbG9jYXRlR1NJbnN0YW5jZSIsImhhc05hbWVGb3JJZCIsImFkZCIsIlNldCIsImNsZWFyTmFtZXMiLCJjbGVhciIsImNsZWFyUnVsZXMiLCJjbGVhclRhZyIsIksiLCJjaGFyQ29kZUF0IiwiUSIsImVlIiwidGUiLCJuZSIsInBsdWdpbnMiLCJmIiwiaW5jbHVkZXMiLCJyZXBsYWNlIiwidXNlIiwibGFzdEluZGV4T2YiLCJoYXNoIiwicmVkdWNlIiwicmUiLCJjcmVhdGVDb250ZXh0IiwiaWUiLCJDb25zdW1lciIsInNlIiwiYWUiLCJjZSIsInVlIiwibGUiLCJzdHlsaXNQbHVnaW5zIiwiZGlzYWJsZUNTU09NSW5qZWN0aW9uIiwicHJlZml4IiwiZGlzYWJsZVZlbmRvclByZWZpeGVzIiwiUHJvdmlkZXIiLCJkZSIsImluamVjdCIsIlN0cmluZyIsImdldE5hbWUiLCJoZSIsInBlIiwiZmUiLCJ0b0xvd2VyQ2FzZSIsInllIiwidGVzdCIsInZlIiwiZ2UiLCJpc0FycmF5IiwiaXNSZWFjdENvbXBvbmVudCIsIlNlIiwid2UiLCJiZSIsIk5lIiwiRWUiLCJfZSIsIkllIiwiZnJvbUNoYXJDb2RlIiwiQ2UiLCJNYXRoIiwiYWJzIiwiQWUiLCJPZSIsIlBlIiwic3RhdGljUnVsZXNJZCIsImlzU3RhdGljIiwiY29tcG9uZW50SWQiLCJiYXNlSGFzaCIsImJhc2VTdHlsZSIsImdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzIiwieSIsIkRlIiwidGhlbWUiLCJrZSIsInhlIiwiVmUiLCJNZSIsInplIiwiR2UiLCJCZSIsIkxlIiwicWUiLCJwYXJlbnRDb21wb25lbnRJZCIsImF0dHJzIiwiZmlsdGVyIiwiQm9vbGVhbiIsInNob3VsZEZvcndhcmRQcm9wIiwiQyIsImNvbXBvbmVudFN0eWxlIiwiZGVmYXVsdFByb3BzIiwiZm9sZGVkQ29tcG9uZW50SWRzIiwiJGFzIiwiYXMiLCJzdHlsZSIsImNsYXNzTmFtZSIsInJlZiIsImZvcndhcmRSZWYiLCJ3aXRoQ29tcG9uZW50IiwiX2ZvbGRlZERlZmF1bHRQcm9wcyIsInNlbGYiLCJIZSIsIndpdGhDb25maWciLCIkZSIsImNyZWF0ZVN0eWxlcyIsInJlbW92ZVN0eWxlcyIsInJlbmRlclN0eWxlcyIsIlllIiwic3RyaW5naWZ5IiwiY3VycmVudCIsIm1lbW8iLCJfZW1pdFNoZWV0Q1NTIiwiaW5zdGFuY2UiLCJnZXRTdHlsZVRhZ3MiLCJzZWFsZWQiLCJnZXRTdHlsZUVsZW1lbnQiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsIm5vbmNlIiwic2VhbCIsImNvbGxlY3RTdHlsZXMiLCJpbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW0iLCJfZXh0ZW5kcyIsImlzT2JqZWN0IiwiaXQiLCJUeXBlRXJyb3IiLCJfX2ciLCJoYXNPd24iLCJjbGFzc05hbWVzIiwiY2xhc3NlcyIsImFyZyIsImFyZ1R5cGUiLCJpbm5lciIsImRlZmF1bHQiLCJleGVjIiwic3RvcmUiLCJ1aWQiLCJVU0VfU1lNQk9MIiwidG9JbnRlZ2VyIiwibWluIiwiYW5PYmplY3QiLCJJRThfRE9NX0RFRklORSIsInRvUHJpbWl0aXZlIiwiZFAiLCJBdHRyaWJ1dGVzIiwiZGVmaW5lZCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIiwiZXhjbHVkZWQiLCJzb3VyY2VLZXlzIiwiY3JlYXRlRGVzYyIsIlNSQyIsIiR0b1N0cmluZyIsIlRQTCIsImluc3BlY3RTb3VyY2UiLCJ2YWwiLCJzYWZlIiwiaXNGdW5jdGlvbiIsImZhaWxzIiwicXVvdCIsImNyZWF0ZUhUTUwiLCJzdHJpbmciLCJhdHRyaWJ1dGUiLCJwMSIsIk5BTUUiLCJpc1VuZGVmaW5lZCIsImlzUGxhaW5PYmplY3QiLCJnZXRQcm90b3R5cGVPZiIsIm9iaiIsImlzQXJyYXlCdWZmZXIiLCJpc0J1ZmZlciIsImNvbnN0cnVjdG9yIiwiaXNGb3JtRGF0YSIsIkZvcm1EYXRhIiwiaXNBcnJheUJ1ZmZlclZpZXciLCJBcnJheUJ1ZmZlciIsImlzVmlldyIsImJ1ZmZlciIsImlzU3RyaW5nIiwiaXNOdW1iZXIiLCJpc0RhdGUiLCJpc0ZpbGUiLCJpc0Jsb2IiLCJpc1N0cmVhbSIsInBpcGUiLCJpc1VSTFNlYXJjaFBhcmFtcyIsIlVSTFNlYXJjaFBhcmFtcyIsImlzU3RhbmRhcmRCcm93c2VyRW52IiwibmF2aWdhdG9yIiwicHJvZHVjdCIsIm1lcmdlIiwiYXNzaWduVmFsdWUiLCJleHRlbmQiLCJ0aGlzQXJnIiwic3RyIiwic3RyaXBCT00iLCJjb250ZW50IiwiSU9iamVjdCIsInBJRSIsInRvSU9iamVjdCIsImdPUEQiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ0b09iamVjdCIsIklFX1BST1RPIiwiT2JqZWN0UHJvdG8iLCJ2ZXJzaW9uIiwiX19lIiwiYUZ1bmN0aW9uIiwidGhhdCIsImNlaWwiLCJmbG9vciIsImlzTmFOIiwibWV0aG9kIiwidmFsdWVPZiIsIktFWSIsInRvTGVuZ3RoIiwiYXNjIiwiVFlQRSIsIiRjcmVhdGUiLCJJU19NQVAiLCJJU19GSUxURVIiLCJJU19TT01FIiwiSVNfRVZFUlkiLCJJU19GSU5EX0lOREVYIiwiTk9fSE9MRVMiLCIkdGhpcyIsImNhbGxiYWNrZm4iLCJyZXMiLCJpbmRleCIsIkxJQlJBUlkiLCIkdHlwZWQiLCIkYnVmZmVyIiwiYW5JbnN0YW5jZSIsInByb3BlcnR5RGVzYyIsInJlZGVmaW5lQWxsIiwidG9JbmRleCIsInRvQWJzb2x1dGVJbmRleCIsImNsYXNzb2YiLCJpc0FycmF5SXRlciIsImdPUE4iLCJnZXRJdGVyRm4iLCJ3a3MiLCJjcmVhdGVBcnJheU1ldGhvZCIsImNyZWF0ZUFycmF5SW5jbHVkZXMiLCJzcGVjaWVzQ29uc3RydWN0b3IiLCJBcnJheUl0ZXJhdG9ycyIsIkl0ZXJhdG9ycyIsIiRpdGVyRGV0ZWN0Iiwic2V0U3BlY2llcyIsImFycmF5RmlsbCIsImFycmF5Q29weVdpdGhpbiIsIiREUCIsIiRHT1BEIiwiUmFuZ2VFcnJvciIsIlVpbnQ4QXJyYXkiLCJBcnJheVByb3RvIiwiJEFycmF5QnVmZmVyIiwiJERhdGFWaWV3IiwiRGF0YVZpZXciLCJhcnJheUZvckVhY2giLCJhcnJheUZpbHRlciIsImFycmF5U29tZSIsImFycmF5RXZlcnkiLCJhcnJheUZpbmQiLCJhcnJheUZpbmRJbmRleCIsImFycmF5SW5jbHVkZXMiLCJhcnJheUluZGV4T2YiLCJhcnJheVZhbHVlcyIsInZhbHVlcyIsImFycmF5S2V5cyIsImFycmF5RW50cmllcyIsImVudHJpZXMiLCJhcnJheUxhc3RJbmRleE9mIiwiYXJyYXlSZWR1Y2UiLCJhcnJheVJlZHVjZVJpZ2h0IiwicmVkdWNlUmlnaHQiLCJhcnJheUpvaW4iLCJhcnJheVNvcnQiLCJzb3J0IiwiYXJyYXlTbGljZSIsImFycmF5VG9TdHJpbmciLCJhcnJheVRvTG9jYWxlU3RyaW5nIiwidG9Mb2NhbGVTdHJpbmciLCJJVEVSQVRPUiIsIlRBRyIsIlRZUEVEX0NPTlNUUlVDVE9SIiwiREVGX0NPTlNUUlVDVE9SIiwiQUxMX0NPTlNUUlVDVE9SUyIsIkNPTlNUUiIsIlRZUEVEX0FSUkFZIiwiVFlQRUQiLCJWSUVXIiwiJG1hcCIsImFsbG9jYXRlIiwiTElUVExFX0VORElBTiIsIlVpbnQxNkFycmF5IiwiRk9SQ0VEX1NFVCIsInRvT2Zmc2V0IiwiQllURVMiLCJvZmZzZXQiLCJ2YWxpZGF0ZSIsInNwZWNpZXNGcm9tTGlzdCIsImZyb21MaXN0IiwiYWRkR2V0dGVyIiwiaW50ZXJuYWwiLCJfZCIsIiRmcm9tIiwic3RlcCIsIml0ZXJhdG9yIiwiYUxlbiIsIm1hcGZuIiwibWFwcGluZyIsIml0ZXJGbiIsIm5leHQiLCJkb25lIiwiJG9mIiwiVE9fTE9DQUxFX0JVRyIsIiR0b0xvY2FsZVN0cmluZyIsInByb3RvIiwiY29weVdpdGhpbiIsInN0YXJ0IiwiZXZlcnkiLCJmaWxsIiwiZmluZCIsInByZWRpY2F0ZSIsImZpbmRJbmRleCIsInNlYXJjaEVsZW1lbnQiLCJzZXBhcmF0b3IiLCJyZXZlcnNlIiwibWlkZGxlIiwic29tZSIsImNvbXBhcmVmbiIsInN1YmFycmF5IiwiYmVnaW4iLCJlbmQiLCIkYmVnaW4iLCJieXRlT2Zmc2V0IiwiQllURVNfUEVSX0VMRU1FTlQiLCIkc2xpY2UiLCIkc2V0IiwiYXJyYXlMaWtlIiwibGVuIiwiJGl0ZXJhdG9ycyIsImlzVEFJbmRleCIsIiRnZXREZXNjIiwiJHNldERlc2MiLCJkZXNjIiwid3JpdGFibGUiLCIkVHlwZWRBcnJheVByb3RvdHlwZSQiLCJ3cmFwcGVyIiwiQ0xBTVBFRCIsIkdFVFRFUiIsIlNFVFRFUiIsIlR5cGVkQXJyYXkiLCJCYXNlIiwiVEFDIiwiRk9SQ0VEIiwiQUJWIiwiVHlwZWRBcnJheVByb3RvdHlwZSIsImFkZEVsZW1lbnQiLCJyb3VuZCIsInNldHRlciIsIiRvZmZzZXQiLCIkbGVuZ3RoIiwiYnl0ZUxlbmd0aCIsImtsYXNzIiwiJGxlbiIsIml0ZXIiLCIkbmF0aXZlSXRlcmF0b3IiLCJDT1JSRUNUX0lURVJfTkFNRSIsIiRpdGVyYXRvciIsIm9mIiwiZnJvbSIsInNoYXJlZCIsImdldE9yQ3JlYXRlTWV0YWRhdGFNYXAiLCJ0YXJnZXRLZXkiLCJ0YXJnZXRNZXRhZGF0YSIsImtleU1ldGFkYXRhIiwiTWV0YWRhdGFLZXkiLCJtZXRhZGF0YU1hcCIsIk1ldGFkYXRhVmFsdWUiLCJNRVRBIiwic2V0RGVzYyIsImlzRXh0ZW5zaWJsZSIsIkZSRUVaRSIsInByZXZlbnRFeHRlbnNpb25zIiwic2V0TWV0YSIsIm1ldGEiLCJORUVEIiwiZmFzdEtleSIsImdldFdlYWsiLCJvbkZyZWV6ZSIsIlVOU0NPUEFCTEVTIiwiY2hlY2tEQ0UiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJiaXRtYXAiLCJweCIsInJhbmRvbSIsIiRrZXlzIiwiZW51bUJ1Z0tleXMiLCJtYXgiLCJkUHMiLCJFbXB0eSIsImNyZWF0ZURpY3QiLCJpZnJhbWVEb2N1bWVudCIsImlmcmFtZSIsImRpc3BsYXkiLCJjb250ZW50V2luZG93Iiwid3JpdGUiLCJsdCIsImNsb3NlIiwiUHJvcGVydGllcyIsImhpZGRlbktleXMiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiREVTQ1JJUFRPUlMiLCJTUEVDSUVTIiwiQ29uc3RydWN0b3IiLCJmb3JiaWRkZW5GaWVsZCIsIkJSRUFLIiwiUkVUVVJOIiwiaXRlcmFibGUiLCJfdCIsImRlZiIsInN0YXQiLCJjb2YiLCJBUkciLCJUIiwidHJ5R2V0IiwiY2FsbGVlIiwic3BhY2VzIiwic3BhY2UiLCJsdHJpbSIsInJ0cmltIiwiZXhwb3J0ZXIiLCJBTElBUyIsIkZPUkNFIiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwicHJvcFR5cGVzIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImdldE93blByb3BlcnR5U3ltYm9scyIsIm9iamVjdFByb3RvdHlwZSIsImhvaXN0Tm9uUmVhY3RTdGF0aWNzIiwidGFyZ2V0Q29tcG9uZW50Iiwic291cmNlQ29tcG9uZW50IiwiYmxhY2tsaXN0IiwiaW5oZXJpdGVkQ29tcG9uZW50IiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJkZXNjcmlwdG9yIiwiY29uZGl0aW9uIiwiZm9ybWF0IiwiYXJncyIsImFyZ0luZGV4IiwiZnJhbWVzVG9Qb3AiLCJjb3B5cmlnaHQiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImlnbm9yZUNhc2UiLCJtdWx0aWxpbmUiLCJ1bmljb2RlIiwic3RpY2t5IiwiSVNfSU5DTFVERVMiLCJlbCIsImZyb21JbmRleCIsIlRPX1NUUklORyIsInBvcyIsImNoYXJBdCIsIk1BVENIIiwiaXNSZWdFeHAiLCJTQUZFX0NMT1NJTkciLCJyaXRlciIsInNraXBDbG9zaW5nIiwiYXJyIiwiYnVpbHRpbkV4ZWMiLCJyZWdleHBFeGVjIiwiUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMiLCJncm91cHMiLCJTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMiLCJvcmlnaW5hbEV4ZWMiLCJTWU1CT0wiLCJERUxFR0FURVNfVE9fU1lNQk9MIiwiREVMRUdBVEVTX1RPX0VYRUMiLCJleGVjQ2FsbGVkIiwibmF0aXZlUmVnRXhwTWV0aG9kIiwiZm5zIiwibmF0aXZlTWV0aG9kIiwicmVnZXhwIiwiYXJnMiIsImZvcmNlU3RyaW5nTWV0aG9kIiwic3RyZm4iLCJyeGZuIiwidXNlckFnZW50IiwiZm9yT2YiLCJzZXRUb1N0cmluZ1RhZyIsImluaGVyaXRJZlJlcXVpcmVkIiwibWV0aG9kcyIsImNvbW1vbiIsIklTX1dFQUsiLCJBRERFUiIsImZpeE1ldGhvZCIsIkhBU05UX0NIQUlOSU5HIiwiVEhST1dTX09OX1BSSU1JVElWRVMiLCJBQ0NFUFRfSVRFUkFCTEVTIiwiQlVHR1lfWkVSTyIsIiRpbnN0YW5jZSIsImdldENvbnN0cnVjdG9yIiwic2V0U3Ryb25nIiwiVHlwZWQiLCJUeXBlZEFycmF5Q29uc3RydWN0b3JzIiwiX19kZWZpbmVTZXR0ZXJfXyIsIkNPTExFQ1RJT04iLCJtYXBGbiIsIm5leHRJdGVtIiwiX2luaGVyaXRzTG9vc2UiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJfX3Byb3RvX18iLCJpcyIsIndrc0V4dCIsIiRTeW1ib2wiLCJkb2N1bWVudEVsZW1lbnQiLCJzZXRQcm90b3R5cGVPZiIsImJ1Z2d5IiwiY291bnQiLCJJbmZpbml0eSIsInNpZ24iLCIkZXhwbTEiLCJleHBtMSIsIiRpdGVyQ3JlYXRlIiwiQlVHR1kiLCJyZXR1cm5UaGlzIiwiREVGQVVMVCIsIklTX1NFVCIsIkl0ZXJhdG9yUHJvdG90eXBlIiwiZ2V0TWV0aG9kIiwia2luZCIsIkRFRl9WQUxVRVMiLCJWQUxVRVNfQlVHIiwiJG5hdGl2ZSIsIiRkZWZhdWx0IiwiJGVudHJpZXMiLCIkYW55TmF0aXZlIiwic2VhcmNoU3RyaW5nIiwiJGRlZmluZVByb3BlcnR5IiwiZ2V0SXRlcmF0b3JNZXRob2QiLCJvcmlnaW5hbCIsImVuZFBvcyIsImFkZFRvVW5zY29wYWJsZXMiLCJpdGVyYXRlZCIsIl9pIiwiX2siLCJBcmd1bWVudHMiLCJyZTEiLCJyZTIiLCJyZWdleHBGbGFncyIsIm5hdGl2ZUV4ZWMiLCJuYXRpdmVSZXBsYWNlIiwicGF0Y2hlZEV4ZWMiLCJVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkciLCJOUENHX0lOQ0xVREVEIiwibGFzdEluZGV4IiwicmVDb3B5IiwiYXQiLCJkZWZlciIsImNoYW5uZWwiLCJwb3J0IiwiaW52b2tlIiwiaHRtbCIsImNlbCIsInNldFRhc2siLCJzZXRJbW1lZGlhdGUiLCJjbGVhclRhc2siLCJjbGVhckltbWVkaWF0ZSIsIk1lc3NhZ2VDaGFubmVsIiwiRGlzcGF0Y2giLCJjb3VudGVyIiwicnVuIiwibGlzdGVuZXIiLCJldmVudCIsIm5leHRUaWNrIiwibm93IiwicG9ydDIiLCJwb3J0MSIsIm9ubWVzc2FnZSIsInBvc3RNZXNzYWdlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImltcG9ydFNjcmlwdHMiLCJzZXRUaW1lb3V0IiwibWFjcm90YXNrIiwiT2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiV2ViS2l0TXV0YXRpb25PYnNlcnZlciIsImlzTm9kZSIsImxhc3QiLCJub3RpZnkiLCJmbHVzaCIsImRvbWFpbiIsImV4aXQiLCJlbnRlciIsInN0YW5kYWxvbmUiLCJ0b2dnbGUiLCJub2RlIiwib2JzZXJ2ZSIsImNoYXJhY3RlckRhdGEiLCJ0YXNrIiwiUHJvbWlzZUNhcGFiaWxpdHkiLCIkJHJlc29sdmUiLCIkJHJlamVjdCIsIkJhc2VCdWZmZXIiLCJwb3ciLCJsb2ciLCJMTjIiLCIkQlVGRkVSIiwiJExFTkdUSCIsIiRPRkZTRVQiLCJwYWNrSUVFRTc1NCIsIm1MZW4iLCJuQnl0ZXMiLCJlTGVuIiwiZU1heCIsImVCaWFzIiwicnQiLCJ1bnBhY2tJRUVFNzU0IiwibkJpdHMiLCJOYU4iLCJ1bnBhY2tJMzIiLCJieXRlcyIsInBhY2tJOCIsInBhY2tJMTYiLCJwYWNrSTMyIiwicGFja0Y2NCIsInBhY2tGMzIiLCJ2aWV3IiwiaXNMaXR0bGVFbmRpYW4iLCJpbnRJbmRleCIsIl9iIiwicGFjayIsImNvbnZlcnNpb24iLCJBcnJheUJ1ZmZlclByb3RvIiwiJHNldEludDgiLCJzZXRJbnQ4IiwiZ2V0SW50OCIsInNldFVpbnQ4IiwiYnVmZmVyTGVuZ3RoIiwiZ2V0VWludDgiLCJnZXRJbnQxNiIsImdldFVpbnQxNiIsImdldEludDMyIiwiZ2V0VWludDMyIiwiZ2V0RmxvYXQzMiIsImdldEZsb2F0NjQiLCJzZXRJbnQxNiIsInNldFVpbnQxNiIsInNldEludDMyIiwic2V0VWludDMyIiwic2V0RmxvYXQzMiIsInNldEZsb2F0NjQiLCJfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18iLCJyb290IiwiX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xX18iLCJfX3dlYnBhY2tfZXhwb3J0c19fIiwiX3NsaWNlZFRvQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJfYXJyIiwiX24iLCJfcyIsInJldHVybiIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwiX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IiwiX25vbkl0ZXJhYmxlUmVzdCIsImFycjIiLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfXyIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQiLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfbWF0Y2htZWRpYXF1ZXJ5X18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfbWF0Y2htZWRpYXF1ZXJ5X19fZGVmYXVsdCIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9oeXBoZW5hdGVfc3R5bGVfbmFtZV9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX3NoYWxsb3dfZXF1YWxfb2JqZWN0c19fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX3NoYWxsb3dfZXF1YWxfb2JqZWN0c19fX2RlZmF1bHQiLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3RvUXVlcnlfXyIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fQ29udGV4dF9fIiwiaHlwaGVuYXRlS2V5cyIsInVzZUlzVXBkYXRlIiwidXNlUmVmIiwidXNlRWZmZWN0IiwidXNlUXVlcnkiLCJzZXR0aW5ncyIsImdldFF1ZXJ5IiwicXVlcnkiLCJtYWtlUXVlcnkiLCJfUmVhY3QkdXNlU3RhdGU0IiwidXNlU3RhdGUiLCJzZXRRdWVyeSIsIm5ld1F1ZXJ5IiwiZGV2aWNlIiwib25DaGFuZ2UiLCJkZXZpY2VTZXR0aW5ncyIsImRldmljZUZyb21Qcm9wcyIsImRldmljZUZyb21Db250ZXh0IiwidXNlQ29udGV4dCIsImdldERldmljZSIsIl9SZWFjdCR1c2VTdGF0ZTIiLCJzZXREZXZpY2UiLCJuZXdEZXZpY2UiLCJ1c2VEZXZpY2UiLCJtYXRjaGVzIiwibWVkaWFRdWVyeSIsIl9SZWFjdCR1c2VTdGF0ZTgiLCJzZXRNYXRjaGVzIiwidXBkYXRlTWF0Y2hlcyIsImFkZExpc3RlbmVyIiwicmVtb3ZlTGlzdGVuZXIiLCJ1c2VNYXRjaGVzIiwiZ2V0TWF0Y2hNZWRpYSIsIl9SZWFjdCR1c2VTdGF0ZTYiLCJtcSIsInNldE1xIiwiaXNVcGRhdGUiLCJ1c2VNYXRjaE1lZGlhIiwidG9IeXBoZW5Mb3dlciIsInVwcGVyY2FzZVBhdHRlcm4iLCJtc1BhdHRlcm4iLCJjYWNoZSIsImhOYW1lIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX2h5cGhlbmF0ZV9zdHlsZV9uYW1lX18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21lZGlhUXVlcnlfXyIsImFsbCIsInJlYWxLZXkiLCJrZXlWYWwiLCJDb250ZXh0IiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191c2VNZWRpYVF1ZXJ5X18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX0NvbXBvbmVudF9fIiwiX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX190b1F1ZXJ5X18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzNfX0NvbnRleHRfXyIsIk1xbCIsImZvcmNlU3RhdGljIiwiZXZ0IiwibWVkaWEiLCJkeW5hbWljTWF0Y2giLCJtcWwiLCJzdGF0aWNNYXRjaCIsIm1hdGNoTWVkaWEiLCJwYXJzZVF1ZXJ5IiwiY2FwdHVyZXMiLCJSRV9NRURJQV9RVUVSWSIsIm1vZGlmaWVyIiwiZXhwcmVzc2lvbnMiLCJwYXJzZWQiLCJpbnZlcnNlIiwiZXhwcmVzc2lvbiIsIlJFX01RX0VYUFJFU1NJT04iLCJmZWF0dXJlIiwiUkVfTVFfRkVBVFVSRSIsInRvRGVjaW1hbCIsInJhdGlvIiwibnVtYmVycyIsImRlY2ltYWwiLCJOdW1iZXIiLCJ0b0RwaSIsInJlc29sdXRpb24iLCJwYXJzZUZsb2F0IiwiUkVfUkVTT0xVVElPTl9VTklUIiwidG9QeCIsIlJFX0xFTkdUSF9VTklUIiwidHlwZU1hdGNoIiwiZXhwcmVzc2lvbnNNYXRjaCIsImV4cFZhbHVlIiwib2JqQSIsIm9iakIiLCJhS2V5cyIsImJLZXlzIiwib3duS2V5cyIsImVudW1lcmFibGVPbmx5Iiwic3ltYm9scyIsInN5bSIsIl9vYmplY3RTcHJlYWQiLCJfZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzIiwiZGVmaW5lUHJvcGVydGllcyIsIl9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX18iLCJfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQiLCJzdHJpbmdPck51bWJlciIsIm9uZU9mVHlwZSIsIm51bWJlciIsIm1hdGNoZXJzIiwib3JpZW50YXRpb24iLCJvbmVPZiIsInNjYW4iLCJhc3BlY3RSYXRpbyIsImRldmljZUFzcGVjdFJhdGlvIiwiaGVpZ2h0IiwiZGV2aWNlSGVpZ2h0Iiwid2lkdGgiLCJkZXZpY2VXaWR0aCIsImNvbG9yIiwiYm9vbCIsImNvbG9ySW5kZXgiLCJtb25vY2hyb21lIiwiZmVhdHVyZXMiLCJtaW5Bc3BlY3RSYXRpbyIsIm1heEFzcGVjdFJhdGlvIiwibWluRGV2aWNlQXNwZWN0UmF0aW8iLCJtYXhEZXZpY2VBc3BlY3RSYXRpbyIsIm1pbkhlaWdodCIsIm1heEhlaWdodCIsIm1pbkRldmljZUhlaWdodCIsIm1heERldmljZUhlaWdodCIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJtaW5EZXZpY2VXaWR0aCIsIm1heERldmljZVdpZHRoIiwibWluQ29sb3IiLCJtYXhDb2xvciIsIm1pbkNvbG9ySW5kZXgiLCJtYXhDb2xvckluZGV4IiwibWluTW9ub2Nocm9tZSIsIm1heE1vbm9jaHJvbWUiLCJtaW5SZXNvbHV0aW9uIiwibWF4UmVzb2x1dGlvbiIsInR5cGVzIiwiZ3JpZCIsImF1cmFsIiwiYnJhaWxsZSIsImhhbmRoZWxkIiwicHJpbnQiLCJwcm9qZWN0aW9uIiwic2NyZWVuIiwidHR5IiwidHYiLCJlbWJvc3NlZCIsIlJlYWN0SXMiLCJpc0VsZW1lbnQiLCJ0eXBlT2YiLCIkJHR5cGVvZiIsIlJFQUNUX0VMRU1FTlRfVFlQRSIsIlJFQUNUX0FTWU5DX01PREVfVFlQRSIsIlJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFIiwiUkVBQ1RfRlJBR01FTlRfVFlQRSIsIlJFQUNUX1BST0ZJTEVSX1RZUEUiLCJSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFIiwiUkVBQ1RfU1VTUEVOU0VfVFlQRSIsIiQkdHlwZW9mVHlwZSIsIlJFQUNUX0NPTlRFWFRfVFlQRSIsIlJFQUNUX0ZPUldBUkRfUkVGX1RZUEUiLCJSRUFDVF9MQVpZX1RZUEUiLCJSRUFDVF9NRU1PX1RZUEUiLCJSRUFDVF9QUk9WSURFUl9UWVBFIiwiUkVBQ1RfUE9SVEFMX1RZUEUiLCJpc0NvbmN1cnJlbnRNb2RlIiwiaGFzU3ltYm9sIiwiZm9yIiwiUkVBQ1RfU1VTUEVOU0VfTElTVF9UWVBFIiwiUkVBQ1RfQkxPQ0tfVFlQRSIsIlJFQUNUX0ZVTkRBTUVOVEFMX1RZUEUiLCJSRUFDVF9SRVNQT05ERVJfVFlQRSIsIlJFQUNUX1NDT1BFX1RZUEUiLCJBc3luY01vZGUiLCJDb25jdXJyZW50TW9kZSIsIkNvbnRleHRDb25zdW1lciIsIkNvbnRleHRQcm92aWRlciIsIkVsZW1lbnQiLCJGcmFnbWVudCIsIkxhenkiLCJQb3J0YWwiLCJQcm9maWxlciIsIlN0cmljdE1vZGUiLCJTdXNwZW5zZSIsImhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlIiwiaXNBc3luY01vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsIiwicHJpbnRXYXJuaW5nIiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJjaGVja1Byb3BUeXBlcyIsInRleHQiLCJtZXNzYWdlIiwiaXNWYWxpZEVsZW1lbnQiLCJ0aHJvd09uRGlyZWN0QWNjZXNzIiwiUHJvcFR5cGVFcnJvciIsInN0YWNrIiwiY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIiLCJjaGVja1R5cGUiLCJpc1JlcXVpcmVkIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsInNlY3JldCIsIkFOT05ZTU9VUyIsImNhY2hlS2V5IiwibWFudWFsUHJvcFR5cGVDYWxsQ2FjaGUiLCJtYW51YWxQcm9wVHlwZVdhcm5pbmdDb3VudCIsImNoYWluZWRDaGVja1R5cGUiLCJjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlciIsImV4cGVjdGVkVHlwZSIsInByb3BWYWx1ZSIsImdldFByb3BUeXBlIiwiZ2V0UHJlY2lzZVR5cGUiLCJpdGVyYXRvckZuIiwibWF5YmVJdGVyYWJsZSIsIklURVJBVE9SX1NZTUJPTCIsIkZBVVhfSVRFUkFUT1JfU1lNQk9MIiwiZ2V0SXRlcmF0b3JGbiIsImVudHJ5IiwicHJvcFR5cGUiLCJpc1N5bWJvbCIsIkRhdGUiLCJnZXRQb3N0Zml4Rm9yVHlwZVdhcm5pbmciLCJSZWFjdFByb3BUeXBlcyIsImFycmF5IiwiZnVuYyIsInN5bWJvbCIsImFueSIsImFycmF5T2YiLCJ0eXBlQ2hlY2tlciIsImVsZW1lbnRUeXBlIiwiaW5zdGFuY2VPZiIsImV4cGVjdGVkQ2xhc3MiLCJleHBlY3RlZENsYXNzTmFtZSIsIm9iamVjdE9mIiwiZXhwZWN0ZWRWYWx1ZXMiLCJ2YWx1ZXNTdHJpbmciLCJhcnJheU9mVHlwZUNoZWNrZXJzIiwiY2hlY2tlciIsInNoYXBlIiwic2hhcGVUeXBlcyIsImV4YWN0IiwiYWxsS2V5cyIsInJlc2V0V2FybmluZ0NhY2hlIiwiUHJvcFR5cGVzIiwicHJvcElzRW51bWVyYWJsZSIsInRlc3QxIiwidGVzdDIiLCJ0ZXN0MyIsImxldHRlciIsInRvIiwidHlwZVNwZWNzIiwiZ2V0U3RhY2siLCJ0eXBlU3BlY05hbWUiLCJleCIsImxvZ2dlZFR5cGVGYWlsdXJlcyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsInNvdXJjZVN5bWJvbEtleXMiLCJfcmVmIiwib3B0aW9uc1N1cHBvcnRlZCIsIm9uY2VTdXBwb3J0ZWQiLCJjYW5Vc2VET00iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZlbnROYW1lIiwiaGFuZGxlciIsIm9uY2UiLCJjYXB0dXJlIiwid3JhcHBlZEhhbmRsZXIiLCJfX29uY2UiLCJvbmNlSGFuZGxlciIsInJlYWN0UHJvcHNSZWdleCIsInByb3AiLCJnZXRLZXlzIiwid2luZG93TmFtZXMiLCJnZXRXaW5kb3dOYW1lcyIsImdPUFMiLCIkYXNzaWduIiwiZ2V0U3ltYm9scyIsImlzRW51bSIsImZhY3RvcmllcyIsImNvbnN0cnVjdCIsInBhcnRBcmdzIiwiYm91bmQiLCJ1biIsIiRwYXJzZUludCIsIiR0cmltIiwid3MiLCJoZXgiLCJyYWRpeCIsIiRwYXJzZUZsb2F0IiwibXNnIiwiaXNGaW5pdGUiLCJsb2cxcCIsIkVQU0lMT04iLCJFUFNJTE9OMzIiLCJNQVgzMiIsIk1JTjMyIiwiZnJvdW5kIiwiJGFicyIsIiRzaWduIiwicmV0IiwiaXNSaWdodCIsImluYyIsImZvcmNlZCIsImZsYWdzIiwibmV3UHJvbWlzZUNhcGFiaWxpdHkiLCJwcm9taXNlQ2FwYWJpbGl0eSIsInN0cm9uZyIsImdldEVudHJ5IiwiJGl0ZXJEZWZpbmUiLCJTSVpFIiwiX2YiLCJfbCIsInByZXYiLCJJbnRlcm5hbE1hcCIsImVhY2giLCJ3ZWFrIiwiTkFUSVZFX1dFQUtfTUFQIiwiSVNfSUUxMSIsIkFjdGl2ZVhPYmplY3QiLCJ1bmNhdWdodEZyb3plblN0b3JlIiwidWZzdG9yZSIsIiRXZWFrTWFwIiwiJGhhcyIsIlVuY2F1Z2h0RnJvemVuU3RvcmUiLCJmaW5kVW5jYXVnaHRGcm96ZW4iLCJSZWZsZWN0IiwiSVNfQ09OQ0FUX1NQUkVBREFCTEUiLCJmbGF0dGVuSW50b0FycmF5Iiwic291cmNlTGVuIiwiZGVwdGgiLCJtYXBwZXIiLCJzcHJlYWRhYmxlIiwidGFyZ2V0SW5kZXgiLCJzb3VyY2VJbmRleCIsInJlcGVhdCIsIm1heExlbmd0aCIsImZpbGxTdHJpbmciLCJsZWZ0Iiwic3RyaW5nTGVuZ3RoIiwiZmlsbFN0ciIsImludE1heExlbmd0aCIsImZpbGxMZW4iLCJzdHJpbmdGaWxsZXIiLCJpc0VudHJpZXMiLCJzY2FsZSIsImluTG93IiwiaW5IaWdoIiwib3V0TG93Iiwib3V0SGlnaCIsInNob3VsZFVzZU5hdGl2ZSIsImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJkZWZhdWx0U2V0VGltb3V0IiwiZGVmYXVsdENsZWFyVGltZW91dCIsInJ1blRpbWVvdXQiLCJmdW4iLCJjbGVhclRpbWVvdXQiLCJjdXJyZW50UXVldWUiLCJkcmFpbmluZyIsInF1ZXVlSW5kZXgiLCJjbGVhblVwTmV4dFRpY2siLCJkcmFpblF1ZXVlIiwibWFya2VyIiwicnVuQ2xlYXJUaW1lb3V0IiwiSXRlbSIsIm5vb3AiLCJ0aXRsZSIsImJyb3dzZXIiLCJhcmd2IiwidmVyc2lvbnMiLCJvbiIsIm9mZiIsInJlbW92ZUFsbExpc3RlbmVycyIsImVtaXQiLCJwcmVwZW5kTGlzdGVuZXIiLCJwcmVwZW5kT25jZUxpc3RlbmVyIiwibGlzdGVuZXJzIiwiYmluZGluZyIsImN3ZCIsImNoZGlyIiwiZGlyIiwidW1hc2siLCJ1dGlscyIsImVuY29kZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInVybCIsInBhcmFtcyIsInBhcmFtc1NlcmlhbGl6ZXIiLCJzZXJpYWxpemVkUGFyYW1zIiwicGFydHMiLCJ0b0lTT1N0cmluZyIsImhhc2htYXJrSW5kZXgiLCJfX0NBTkNFTF9fIiwibm9ybWFsaXplSGVhZGVyTmFtZSIsIkRFRkFVTFRfQ09OVEVOVF9UWVBFIiwic2V0Q29udGVudFR5cGVJZlVuc2V0IiwiaGVhZGVycyIsImFkYXB0ZXIiLCJkZWZhdWx0cyIsInRyYW5zZm9ybVJlcXVlc3QiLCJ0cmFuc2Zvcm1SZXNwb25zZSIsInhzcmZDb29raWVOYW1lIiwieHNyZkhlYWRlck5hbWUiLCJtYXhDb250ZW50TGVuZ3RoIiwibWF4Qm9keUxlbmd0aCIsInZhbGlkYXRlU3RhdHVzIiwic2V0dGxlIiwiY29va2llcyIsImJ1aWxkVVJMIiwiYnVpbGRGdWxsUGF0aCIsInBhcnNlSGVhZGVycyIsImlzVVJMU2FtZU9yaWdpbiIsImNyZWF0ZUVycm9yIiwiY29uZmlnIiwicmVxdWVzdERhdGEiLCJyZXF1ZXN0SGVhZGVycyIsImF1dGgiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwidW5lc2NhcGUiLCJBdXRob3JpemF0aW9uIiwiYnRvYSIsImZ1bGxQYXRoIiwiYmFzZVVSTCIsInRvVXBwZXJDYXNlIiwicmVzcG9uc2VVUkwiLCJyZXNwb25zZUhlYWRlcnMiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJyZXNwb25zZSIsInJlc3BvbnNlVHlwZSIsInN0YXR1c1RleHQiLCJvbmFib3J0Iiwib25lcnJvciIsIm9udGltZW91dCIsInRpbWVvdXRFcnJvck1lc3NhZ2UiLCJ4c3JmVmFsdWUiLCJ3aXRoQ3JlZGVudGlhbHMiLCJyZWFkIiwic2V0UmVxdWVzdEhlYWRlciIsIm9uRG93bmxvYWRQcm9ncmVzcyIsIm9uVXBsb2FkUHJvZ3Jlc3MiLCJ1cGxvYWQiLCJjYW5jZWxUb2tlbiIsImNhbmNlbCIsImFib3J0IiwiZW5oYW5jZUVycm9yIiwiY29kZSIsImNvbmZpZzEiLCJjb25maWcyIiwidmFsdWVGcm9tQ29uZmlnMktleXMiLCJtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cyIsImRlZmF1bHRUb0NvbmZpZzJLZXlzIiwiZGlyZWN0TWVyZ2VLZXlzIiwiZ2V0TWVyZ2VkVmFsdWUiLCJtZXJnZURlZXBQcm9wZXJ0aWVzIiwiYXhpb3NLZXlzIiwib3RoZXJLZXlzIiwiQ2FuY2VsIiwic3ltYm9sT2JzZXJ2YWJsZVBvbnlmaWxsIiwib2JzZXJ2YWJsZSIsImNvbXBhcmVDb250ZXh0Iiwia2V5c0EiLCJrZXlzQiIsImJIYXNPd25Qcm9wZXJ0eSIsInZhbHVlQSIsInZhbHVlQiIsImlhIiwic3Vic3RyaW5nIiwiamEiLCJrYSIsImFhIiwiYmEiLCJsYSIsIm1hIiwibmEiLCJlYSIsIm9hIiwiY2EiLCJkYSIsImZhIiwiaGEiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwibXNHcmlkUm93IiwibXNHcmlkUm93U3BhbiIsIm1zR3JpZENvbHVtbiIsIm1zR3JpZENvbHVtblNwYW4iLCJmb250V2VpZ2h0IiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsIldlYmtpdExpbmVDbGFtcCIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsIl9yZWFjdDIiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2ltcGxlbWVudGF0aW9uMiIsImNvbXBvbmVudFdpbGxNb3VudCIsInN0YXRlIiwic2V0U3RhdGUiLCJjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwibmV4dFByb3BzIiwicHJldlN0YXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsIm5leHRTdGF0ZSIsInByZXZQcm9wcyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90IiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJwb2x5ZmlsbCIsIkNvbXBvbmVudCIsImZvdW5kV2lsbE1vdW50TmFtZSIsImZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWUiLCJmb3VuZFdpbGxVcGRhdGVOYW1lIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCIsIlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzIiwiVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUiLCJuZXdBcGlOYW1lIiwiY29tcG9uZW50RGlkVXBkYXRlIiwibWF5YmVTbmFwc2hvdCIsInNuYXBzaG90IiwiX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyIsInVzZU1vdW50ZWQiLCJtb3VudGVkIiwiaXNNb3VudGVkIiwib3duZXJEb2N1bWVudCIsImdldENvbXB1dGVkU3R5bGUiLCJwc3VlZG9FbGVtZW50IiwiZG9jIiwiZGVmYXVsdFZpZXciLCJvd25lcldpbmRvdyIsInJVcHBlciIsImh5cGhlbmF0ZVN0eWxlTmFtZSIsImh5cGhlbmF0ZSIsInN1cHBvcnRlZFRyYW5zZm9ybXMiLCJjc3MiLCJ0cmFuc2Zvcm1zIiwiZ2V0UHJvcGVydHlWYWx1ZSIsImlzVHJhbnNmb3JtIiwicmVtb3ZlUHJvcGVydHkiLCJ1c2VXaWxsVW5tb3VudCIsInZhbHVlUmVmIiwib25Vbm1vdW50IiwidXNlRXZlbnRDYWxsYmFjayIsIl9iYWJlbFBvbHlmaWxsIiwiZGVmaW5lIiwicGFkU3RhcnQiLCJwYWRFbmQiLCIkZmFpbHMiLCJ3a3NEZWZpbmUiLCJlbnVtS2V5cyIsIl9jcmVhdGUiLCJnT1BORXh0IiwiJEdPUFMiLCIkSlNPTiIsIl9zdHJpbmdpZnkiLCJISURERU4iLCJUT19QUklNSVRJVkUiLCJTeW1ib2xSZWdpc3RyeSIsIkFsbFN5bWJvbHMiLCJPUFN5bWJvbHMiLCJVU0VfTkFUSVZFIiwiUU9iamVjdCIsImZpbmRDaGlsZCIsInNldFN5bWJvbERlc2MiLCJwcm90b0Rlc2MiLCJ3cmFwIiwiJGRlZmluZVByb3BlcnRpZXMiLCIkcHJvcGVydHlJc0VudW1lcmFibGUiLCIkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiJGdldE93blByb3BlcnR5TmFtZXMiLCIkZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwiSVNfT1AiLCJlczZTeW1ib2xzIiwid2VsbEtub3duU3ltYm9scyIsImtleUZvciIsInVzZVNldHRlciIsInVzZVNpbXBsZSIsIkZBSUxTX09OX1BSSU1JVElWRVMiLCJyZXBsYWNlciIsIiRyZXBsYWNlciIsIiRnZXRQcm90b3R5cGVPZiIsIiRmcmVlemUiLCIkc2VhbCIsIiRwcmV2ZW50RXh0ZW5zaW9ucyIsIiRpc0Zyb3plbiIsIiRpc1NlYWxlZCIsIiRpc0V4dGVuc2libGUiLCJGUHJvdG8iLCJuYW1lUkUiLCJIQVNfSU5TVEFOQ0UiLCJGdW5jdGlvblByb3RvIiwiJE51bWJlciIsIkJST0tFTl9DT0YiLCJUUklNIiwidG9OdW1iZXIiLCJhcmd1bWVudCIsInRoaXJkIiwibWF4Q29kZSIsImZpcnN0IiwiZGlnaXRzIiwiYU51bWJlclZhbHVlIiwiJHRvRml4ZWQiLCJ0b0ZpeGVkIiwiRVJST1IiLCJtdWx0aXBseSIsImMyIiwiZGl2aWRlIiwibnVtVG9TdHJpbmciLCJhY2MiLCJmcmFjdGlvbkRpZ2l0cyIsIngyIiwiJHRvUHJlY2lzaW9uIiwidG9QcmVjaXNpb24iLCJwcmVjaXNpb24iLCJfaXNGaW5pdGUiLCJpc0ludGVnZXIiLCJpc1NhZmVJbnRlZ2VyIiwiTUFYX1NBRkVfSU5URUdFUiIsIk1JTl9TQUZFX0lOVEVHRVIiLCJzcXJ0IiwiJGFjb3NoIiwiYWNvc2giLCJNQVhfVkFMVUUiLCIkYXNpbmgiLCJhc2luaCIsIiRhdGFuaCIsImF0YW5oIiwiY2JydCIsImNsejMyIiwiTE9HMkUiLCJjb3NoIiwiaHlwb3QiLCJ2YWx1ZTEiLCJ2YWx1ZTIiLCJkaXYiLCJzdW0iLCJsYXJnIiwiJGltdWwiLCJpbXVsIiwieG4iLCJ5biIsInhsIiwieWwiLCJsb2cxMCIsIkxPRzEwRSIsImxvZzIiLCJzaW5oIiwidGFuaCIsInRydW5jIiwiJGZyb21Db2RlUG9pbnQiLCJmcm9tQ29kZVBvaW50IiwicmF3IiwiY2FsbFNpdGUiLCJ0cGwiLCIkYXQiLCJwb2ludCIsImNvZGVQb2ludEF0IiwiY29udGV4dCIsIiRlbmRzV2l0aCIsImVuZHNXaXRoIiwiZW5kUG9zaXRpb24iLCJzZWFyY2giLCIkc3RhcnRzV2l0aCIsInN0YXJ0c1dpdGgiLCJzaXplIiwiZ2V0VGltZSIsInRvSlNPTiIsInB2IiwiJHRvSVNPU3RyaW5nIiwibHoiLCJudW0iLCJnZXRVVENGdWxsWWVhciIsImdldFVUQ01pbGxpc2Vjb25kcyIsImdldFVUQ01vbnRoIiwiZ2V0VVRDRGF0ZSIsImdldFVUQ0hvdXJzIiwiZ2V0VVRDTWludXRlcyIsImdldFVUQ1NlY29uZHMiLCJEYXRlUHJvdG8iLCJoaW50IiwiY3JlYXRlUHJvcGVydHkiLCJ1cFRvIiwiY2xvbmVkIiwiJHNvcnQiLCIkZm9yRWFjaCIsIlNUUklDVCIsIiRmaWx0ZXIiLCIkc29tZSIsIiRldmVyeSIsIiRyZWR1Y2UiLCIkaW5kZXhPZiIsIk5FR0FUSVZFX1pFUk8iLCIkZmluZCIsIiRmbGFncyIsIiRSZWdFeHAiLCJDT1JSRUNUX05FVyIsInRpUkUiLCJwaVJFIiwiZmlVIiwicHJveHkiLCJhZHZhbmNlU3RyaW5nSW5kZXgiLCJyZWdFeHBFeGVjIiwiJG1hdGNoIiwibWF5YmVDYWxsTmF0aXZlIiwicngiLCJmdWxsVW5pY29kZSIsIm1hdGNoU3RyIiwiU1VCU1RJVFVUSU9OX1NZTUJPTFMiLCJTVUJTVElUVVRJT05fU1lNQk9MU19OT19OQU1FRCIsIlJFUExBQ0UiLCIkcmVwbGFjZSIsInNlYXJjaFZhbHVlIiwicmVwbGFjZVZhbHVlIiwiZnVuY3Rpb25hbFJlcGxhY2UiLCJyZXN1bHRzIiwiYWNjdW11bGF0ZWRSZXN1bHQiLCJuZXh0U291cmNlUG9zaXRpb24iLCJtYXRjaGVkIiwicG9zaXRpb24iLCJuYW1lZENhcHR1cmVzIiwicmVwbGFjZXJBcmdzIiwicmVwbGFjZW1lbnQiLCJnZXRTdWJzdGl0dXRpb24iLCJ0YWlsUG9zIiwiY2giLCJzYW1lVmFsdWUiLCJTRUFSQ0giLCIkc2VhcmNoIiwicHJldmlvdXNMYXN0SW5kZXgiLCJjYWxsUmVnRXhwRXhlYyIsIiRtaW4iLCIkcHVzaCIsIkxFTkdUSCIsIlNVUFBPUlRTX1kiLCJTUExJVCIsIiRzcGxpdCIsImludGVybmFsU3BsaXQiLCJsaW1pdCIsImxhc3RMZW5ndGgiLCJvdXRwdXQiLCJsYXN0TGFzdEluZGV4Iiwic3BsaXRMaW1pdCIsInNlcGFyYXRvckNvcHkiLCJzcGxpdHRlciIsInVuaWNvZGVNYXRjaGluZyIsImxpbSIsIkludGVybmFsIiwibmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5IiwiT3duUHJvbWlzZUNhcGFiaWxpdHkiLCJXcmFwcGVyIiwibWljcm90YXNrIiwibmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUiLCJwZXJmb3JtIiwicHJvbWlzZVJlc29sdmUiLCJ2OCIsIiRQcm9taXNlIiwiZW1wdHkiLCJGYWtlUHJvbWlzZSIsIlByb21pc2VSZWplY3Rpb25FdmVudCIsImlzVGhlbmFibGUiLCJpc1JlamVjdCIsIl9jIiwiX3YiLCJvayIsInJlYWN0aW9uIiwiZXhpdGVkIiwiZmFpbCIsIl9oIiwib25IYW5kbGVVbmhhbmRsZWQiLCJvblVuaGFuZGxlZCIsInVuaGFuZGxlZCIsImlzVW5oYW5kbGVkIiwib251bmhhbmRsZWRyZWplY3Rpb24iLCJyZWFzb24iLCJfYSIsIm9ucmVqZWN0aW9uaGFuZGxlZCIsIiRyZWplY3QiLCJfdyIsIiRyZXNvbHZlIiwiZXhlY3V0b3IiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJjYXBhYmlsaXR5IiwicmVtYWluaW5nIiwiJGluZGV4IiwiYWxyZWFkeUNhbGxlZCIsInJhY2UiLCIkaXNWaWV3IiwiZmluIiwidmlld1MiLCJ2aWV3VCIsImluaXQiLCJyQXBwbHkiLCJmQXBwbHkiLCJ0aGlzQXJndW1lbnQiLCJhcmd1bWVudHNMaXN0IiwickNvbnN0cnVjdCIsIk5FV19UQVJHRVRfQlVHIiwiQVJHU19CVUciLCJUYXJnZXQiLCJuZXdUYXJnZXQiLCIkYXJncyIsInByb3BlcnR5S2V5IiwiYXR0cmlidXRlcyIsImRlbGV0ZVByb3BlcnR5IiwiRW51bWVyYXRlIiwiZW51bWVyYXRlIiwicmVjZWl2ZXIiLCJnZXRQcm90byIsImV4aXN0aW5nRGVzY3JpcHRvciIsIm93bkRlc2MiLCJzZXRQcm90byIsIiRpbmNsdWRlcyIsImFycmF5U3BlY2llc0NyZWF0ZSIsImZsYXRNYXAiLCJmbGF0dGVuIiwiZGVwdGhBcmciLCIkcGFkIiwiV0VCS0lUX0JVRyIsImdldEZsYWdzIiwiUmVnRXhwUHJvdG8iLCIkUmVnRXhwU3RyaW5nSXRlcmF0b3IiLCJfciIsIm1hdGNoQWxsIiwiZ2V0RGVzYyIsIiR2YWx1ZXMiLCJfX2RlZmluZUdldHRlcl9fIiwiX19sb29rdXBHZXR0ZXJfXyIsIl9fbG9va3VwU2V0dGVyX18iLCJpc0Vycm9yIiwiY2xhbXAiLCJsb3dlciIsInVwcGVyIiwiREVHX1BFUl9SQUQiLCJQSSIsIlJBRF9QRVJfREVHIiwiZGVncmVlcyIsInJhZGlhbnMiLCJmc2NhbGUiLCJpYWRkaCIsIngwIiwieDEiLCJ5MCIsInkxIiwiJHgwIiwiJHkwIiwiaXN1YmgiLCJpbXVsaCIsIiR1IiwiJHYiLCJ1MCIsInYwIiwidTEiLCJ2MSIsInVtdWxoIiwic2lnbmJpdCIsIm9uRmluYWxseSIsIm1ldGFkYXRhIiwidG9NZXRhS2V5Iiwib3JkaW5hcnlEZWZpbmVPd25NZXRhZGF0YSIsImRlZmluZU1ldGFkYXRhIiwibWV0YWRhdGFLZXkiLCJtZXRhZGF0YVZhbHVlIiwiZGVsZXRlTWV0YWRhdGEiLCJvcmRpbmFyeUhhc093bk1ldGFkYXRhIiwib3JkaW5hcnlHZXRPd25NZXRhZGF0YSIsIm9yZGluYXJ5R2V0TWV0YWRhdGEiLCJnZXRNZXRhZGF0YSIsIm9yZGluYXJ5T3duTWV0YWRhdGFLZXlzIiwib3JkaW5hcnlNZXRhZGF0YUtleXMiLCJvS2V5cyIsInBLZXlzIiwiZ2V0TWV0YWRhdGFLZXlzIiwiZ2V0T3duTWV0YWRhdGEiLCJnZXRPd25NZXRhZGF0YUtleXMiLCJvcmRpbmFyeUhhc01ldGFkYXRhIiwiaGFzTWV0YWRhdGEiLCJoYXNPd25NZXRhZGF0YSIsIiRtZXRhZGF0YSIsImFzYXAiLCJPQlNFUlZBQkxFIiwiY2xlYW51cFN1YnNjcmlwdGlvbiIsInN1YnNjcmlwdGlvbiIsImNsZWFudXAiLCJzdWJzY3JpcHRpb25DbG9zZWQiLCJfbyIsImNsb3NlU3Vic2NyaXB0aW9uIiwiU3Vic2NyaXB0aW9uIiwib2JzZXJ2ZXIiLCJzdWJzY3JpYmVyIiwiU3Vic2NyaXB0aW9uT2JzZXJ2ZXIiLCJ1bnN1YnNjcmliZSIsImNvbXBsZXRlIiwiJE9ic2VydmFibGUiLCJzdWJzY3JpYmUiLCJpdGVtcyIsIk9ic2VydmFibGUiLCJNU0lFIiwidGltZSIsImJvdW5kQXJncyIsInNldEludGVydmFsIiwiJHRhc2siLCJUT19TVFJJTkdfVEFHIiwiQXJyYXlWYWx1ZXMiLCJET01JdGVyYWJsZXMiLCJDU1NSdWxlTGlzdCIsIkNTU1N0eWxlRGVjbGFyYXRpb24iLCJDU1NWYWx1ZUxpc3QiLCJDbGllbnRSZWN0TGlzdCIsIkRPTVJlY3RMaXN0IiwiRE9NU3RyaW5nTGlzdCIsIkRPTVRva2VuTGlzdCIsIkRhdGFUcmFuc2Zlckl0ZW1MaXN0IiwiRmlsZUxpc3QiLCJIVE1MQWxsQ29sbGVjdGlvbiIsIkhUTUxDb2xsZWN0aW9uIiwiSFRNTEZvcm1FbGVtZW50IiwiSFRNTFNlbGVjdEVsZW1lbnQiLCJNZWRpYUxpc3QiLCJNaW1lVHlwZUFycmF5IiwiTmFtZWROb2RlTWFwIiwiTm9kZUxpc3QiLCJQYWludFJlcXVlc3RMaXN0IiwiUGx1Z2luIiwiUGx1Z2luQXJyYXkiLCJTVkdMZW5ndGhMaXN0IiwiU1ZHTnVtYmVyTGlzdCIsIlNWR1BhdGhTZWdMaXN0IiwiU1ZHUG9pbnRMaXN0IiwiU1ZHU3RyaW5nTGlzdCIsIlNWR1RyYW5zZm9ybUxpc3QiLCJTb3VyY2VCdWZmZXJMaXN0IiwiU3R5bGVTaGVldExpc3QiLCJUZXh0VHJhY2tDdWVMaXN0IiwiVGV4dFRyYWNrTGlzdCIsIlRvdWNoTGlzdCIsImNvbGxlY3Rpb25zIiwiZXhwbGljaXQiLCJDb2xsZWN0aW9uIiwiT3AiLCJpdGVyYXRvclN5bWJvbCIsImFzeW5jSXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJpbk1vZHVsZSIsInJ1bnRpbWUiLCJyZWdlbmVyYXRvclJ1bnRpbWUiLCJDb250aW51ZVNlbnRpbmVsIiwiTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUiLCJHcCIsIkdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlIiwiR2VuZXJhdG9yIiwiR2VuZXJhdG9yRnVuY3Rpb24iLCJpc0dlbmVyYXRvckZ1bmN0aW9uIiwiZ2VuRnVuIiwiY3RvciIsIm1hcmsiLCJhd3JhcCIsIl9fYXdhaXQiLCJkZWZpbmVJdGVyYXRvck1ldGhvZHMiLCJBc3luY0l0ZXJhdG9yIiwiYXN5bmMiLCJpbm5lckZuIiwib3V0ZXJGbiIsInRyeUxvY3NMaXN0IiwicmVzZXQiLCJza2lwVGVtcFJlc2V0Iiwic2VudCIsIl9zZW50IiwiZGVsZWdhdGUiLCJ0cnlFbnRyaWVzIiwicmVzZXRUcnlFbnRyeSIsInN0b3AiLCJyb290UmVjb3JkIiwiY29tcGxldGlvbiIsInJ2YWwiLCJkaXNwYXRjaEV4Y2VwdGlvbiIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsInJlY29yZCIsInRyeUxvYyIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFicnVwdCIsImZpbmFsbHlFbnRyeSIsImFmdGVyTG9jIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsInJlc3VsdE5hbWUiLCJuZXh0TG9jIiwicHJvdG9HZW5lcmF0b3IiLCJnZW5lcmF0b3IiLCJfaW52b2tlIiwiZG9uZVJlc3VsdCIsImRlbGVnYXRlUmVzdWx0IiwibWF5YmVJbnZva2VEZWxlZ2F0ZSIsInRyeUNhdGNoIiwibWFrZUludm9rZU1ldGhvZCIsInVud3JhcHBlZCIsInByZXZpb3VzUHJvbWlzZSIsImNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnIiwiaW5mbyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJpdGVyYXRvck1ldGhvZCIsImVzY2FwZSIsIiRyZSIsInJlZ0V4cCIsInBhcnQiLCJSZWFjdCIsIkFwcENvbnRhaW5lciIsIndhcm5BYm91dEhNUkRpc2FibGVkIiwiQ2hpbGRyZW4iLCJvbmx5Iiwic2hvdWxkV3JhcFdpdGhBcHBDb250YWluZXIiLCJhcmVDb21wb25lbnRzRXF1YWwiLCJzZXRDb25maWciLCJjb2xkIiwiY29uZmlndXJlQ29tcG9uZW50IiwiZW5xdWV1ZUZvcmNlVXBkYXRlIiwiZW5xdWV1ZVJlcGxhY2VTdGF0ZSIsImVucXVldWVTZXRTdGF0ZSIsInJlZnMiLCJ1cGRhdGVyIiwiZm9yY2VVcGRhdGUiLCJpc1B1cmVSZWFjdENvbXBvbmVudCIsIl9fc2VsZiIsIl9fc291cmNlIiwiX293bmVyIiwia2V5UHJlZml4IiwiUmVhY3RDdXJyZW50RGlzcGF0Y2hlciIsIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnIiwic3VzcGVuc2UiLCJSZWFjdEN1cnJlbnRPd25lciIsIklzU29tZVJlbmRlcmVyQWN0aW5nIiwidG9BcnJheSIsIlB1cmVDb21wb25lbnQiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsImNsb25lRWxlbWVudCIsIl9jYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9jdXJyZW50VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl90aHJlYWRDb3VudCIsIl9jb250ZXh0IiwiY3JlYXRlRmFjdG9yeSIsImNyZWF0ZVJlZiIsImxhenkiLCJfY3RvciIsIl9zdGF0dXMiLCJfcmVzdWx0IiwidXNlQ2FsbGJhY2siLCJ1c2VEZWJ1Z1ZhbHVlIiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInVzZUxheW91dEVmZmVjdCIsInVzZU1lbW8iLCJ1c2VSZWR1Y2VyIiwib25FcnJvciIsImN1cnJlbnRUYXJnZXQiLCJwYSIsInFhIiwicmEiLCJzYSIsImV4dHJhY3RFdmVudHMiLCJldmVudFR5cGVzIiwidGEiLCJwaGFzZWRSZWdpc3RyYXRpb25OYW1lcyIsInVhIiwicmVnaXN0cmF0aW9uTmFtZSIsInZhIiwid2EiLCJkZXBlbmRlbmNpZXMiLCJ4YSIsInlhIiwiemEiLCJBYSIsIkJhIiwiQ2EiLCJzdGF0ZU5vZGUiLCJEYSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwiSWEiLCJKYSIsIkthIiwiTGEiLCJNYSIsIk5hIiwiT2EiLCJQYSIsIlFhIiwiYWNjZXB0c0Jvb2xlYW5zIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsIm11c3RVc2VQcm9wZXJ0eSIsInByb3BlcnR5TmFtZSIsInNhbml0aXplVVJMIiwiVWEiLCJWYSIsInhsaW5rSHJlZiIsIldhIiwiWGEiLCJTYSIsIlRhIiwiUmEiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzZXRBdHRyaWJ1dGVOUyIsIllhIiwiWmEiLCIkYSIsImFiIiwiYmIiLCJkYiIsImViIiwiZmIiLCJnYiIsImhiIiwiaWIiLCJqYiIsImtiIiwibGIiLCJtYiIsIm5iIiwicGIiLCJxYiIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmIiLCJzYiIsIm5vZGVOYW1lIiwieGIiLCJfdmFsdWVUcmFja2VyIiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsInRiIiwieWIiLCJjaGVja2VkIiwiemIiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkFiIiwiaW5pdGlhbFZhbHVlIiwiY29udHJvbGxlZCIsIkJiIiwiQ2IiLCJEYiIsIkViIiwiYWN0aXZlRWxlbWVudCIsIkdiIiwiRmIiLCJIYiIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwiZGlzYWJsZWQiLCJJYiIsIkpiIiwiS2IiLCJMYiIsIk1iIiwiTmIiLCJPYiIsIlBiIiwiUWIiLCJNU0FwcCIsImV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uIiwibmFtZXNwYWNlVVJJIiwiZmlyc3RDaGlsZCIsIlJiIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwiU2IiLCJUYiIsImFuaW1hdGlvbmVuZCIsImFuaW1hdGlvbml0ZXJhdGlvbiIsImFuaW1hdGlvbnN0YXJ0IiwidHJhbnNpdGlvbmVuZCIsIlViIiwiVmIiLCJXYiIsImFuaW1hdGlvbiIsInRyYW5zaXRpb24iLCJYYiIsIlliIiwiWmIiLCIkYiIsImFjIiwiYmMiLCJXZWFrTWFwIiwiY2MiLCJkYyIsImFsdGVybmF0ZSIsImVmZmVjdFRhZyIsImVjIiwibWVtb2l6ZWRTdGF0ZSIsImRlaHlkcmF0ZWQiLCJmYyIsImhjIiwic2libGluZyIsImdjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJfZGlzcGF0Y2hMaXN0ZW5lcnMiLCJfZGlzcGF0Y2hJbnN0YW5jZXMiLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImlzUGVyc2lzdGVudCIsInJlbGVhc2UiLCJtYyIsIm5jIiwic3JjRWxlbWVudCIsImNvcnJlc3BvbmRpbmdVc2VFbGVtZW50Iiwib2MiLCJwYyIsInFjIiwidG9wTGV2ZWxUeXBlIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwicmMiLCJldmVudFN5c3RlbUZsYWdzIiwic2MiLCJjb250YWluZXJJbmZvIiwidGMiLCJ1YyIsInZjIiwid2MiLCJ4YyIsInljIiwiemMiLCJBYyIsIkJjIiwiQ2MiLCJEYyIsIkVjIiwiRmMiLCJHYyIsIkhjIiwiSWMiLCJLYyIsImJsb2NrZWRPbiIsImNvbnRhaW5lciIsIkxjIiwiZGVsZXRlIiwicG9pbnRlcklkIiwiTWMiLCJOYyIsIlBjIiwidW5zdGFibGVfcnVuV2l0aFByaW9yaXR5IiwicHJpb3JpdHkiLCJoeWRyYXRlIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJzaGlmdCIsIlVjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiVmMiLCJXYyIsIlljIiwiWmMiLCIkYyIsImFkIiwiYnViYmxlZCIsImNhcHR1cmVkIiwiZXZlbnRQcmlvcml0eSIsImJkIiwiY2QiLCJkZCIsInVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5IiwiZWQiLCJmZCIsImdkIiwiaGQiLCJPYyIsImpkIiwiZ3JpZEFyZWEiLCJsaW5lQ2xhbXAiLCJrZCIsImxkIiwibWQiLCJzZXRQcm9wZXJ0eSIsIm5kIiwibWVudWl0ZW0iLCJhcmVhIiwiYmFzZSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibGluayIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJvZCIsInBkIiwicWQiLCJyZCIsInNkIiwidGQiLCJib2R5IiwidWQiLCJ2ZCIsInhkIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJocmVmIiwieWQiLCJjb250ZW50RWRpdGFibGUiLCJEZCIsIkVkIiwiRmQiLCJhdXRvRm9jdXMiLCJHZCIsIkhkIiwiSWQiLCJKZCIsIktkIiwicHJldmlvdXNTaWJsaW5nIiwiTGQiLCJNZCIsIk5kIiwiT2QiLCJQZCIsIlFkIiwiUmQiLCJTZCIsIlRkIiwiZGlzcGF0Y2hDb25maWciLCJVZCIsIl90YXJnZXRJbnN0IiwiVmQiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwiSW50ZXJmYWNlIiwiaXNEZWZhdWx0UHJldmVudGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInJldHVyblZhbHVlIiwiZXZlbnRQb29sIiwiZGVzdHJ1Y3RvciIsImdldFBvb2xlZCIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwiY2FuY2VsQnViYmxlIiwicGVyc2lzdCIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsImlzVHJ1c3RlZCIsImplIiwiZG9jdW1lbnRNb2RlIiwib2UiLCJiZWZvcmVJbnB1dCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwia2V5Q29kZSIsImRldGFpbCIsImxvY2FsZSIsIndoaWNoIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwiZGF0ZSIsImRhdGV0aW1lIiwiZW1haWwiLCJtb250aCIsInJhbmdlIiwidGVsIiwid2VlayIsImNoYW5nZSIsIkZlIiwiZGV0YWNoRXZlbnQiLCJhdHRhY2hFdmVudCIsIkplIiwiS2UiLCJfaXNJbnB1dEV2ZW50U3VwcG9ydGVkIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsImdldE1vZGlmaWVyU3RhdGUiLCJRZSIsIlJlIiwiVGUiLCJVZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwiY2xpZW50WCIsImNsaWVudFkiLCJwYWdlWCIsInBhZ2VZIiwic2hpZnRLZXkiLCJidXR0b24iLCJidXR0b25zIiwicmVsYXRlZFRhcmdldCIsImZyb21FbGVtZW50IiwidG9FbGVtZW50IiwibW92ZW1lbnRYIiwibW92ZW1lbnRZIiwiV2UiLCJwcmVzc3VyZSIsInRhbmdlbnRpYWxQcmVzc3VyZSIsInRpbHRYIiwidGlsdFkiLCJ0d2lzdCIsInBvaW50ZXJUeXBlIiwiaXNQcmltYXJ5IiwiWGUiLCJtb3VzZUVudGVyIiwibW91c2VMZWF2ZSIsInBvaW50ZXJFbnRlciIsInBvaW50ZXJMZWF2ZSIsInBhcmVudFdpbmRvdyIsImFmIiwiYmYiLCJjZiIsImRmIiwic2VsZWN0IiwiZWYiLCJmZiIsImdmIiwiaGYiLCJqZiIsInNlbGVjdGlvblN0YXJ0Iiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImdldFNlbGVjdGlvbiIsImFuY2hvck9mZnNldCIsImZvY3VzTm9kZSIsImZvY3VzT2Zmc2V0Iiwia2YiLCJvblNlbGVjdCIsImxmIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIm1mIiwiY2xpcGJvYXJkRGF0YSIsIm5mIiwiY2hhckNvZGUiLCJwZiIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJxZiIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJyZiIsInNmIiwiZGF0YVRyYW5zZmVyIiwidGYiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwidWYiLCJ2ZiIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwid2YiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwieWYiLCJ6ZiIsIkFmIiwiQmYiLCJDZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkRmIiwiRWYiLCJGZiIsImdldENoaWxkQ29udGV4dCIsIkdmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJIZiIsIklmIiwiSmYiLCJLZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiTGYiLCJ1bnN0YWJsZV9yZXF1ZXN0UGFpbnQiLCJNZiIsInVuc3RhYmxlX25vdyIsIk5mIiwidW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwiLCJPZiIsInVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5IiwiUGYiLCJRZiIsIlJmIiwidW5zdGFibGVfTG93UHJpb3JpdHkiLCJTZiIsInVuc3RhYmxlX0lkbGVQcmlvcml0eSIsIlRmIiwiVWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlZmIiwiV2YiLCJYZiIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJsZyIsIm1nIiwibmciLCJvZyIsInBnIiwiY2hpbGRFeHBpcmF0aW9uVGltZSIsInFnIiwiZmlyc3RDb250ZXh0IiwiZXhwaXJhdGlvblRpbWUiLCJyZyIsInNnIiwib2JzZXJ2ZWRCaXRzIiwicmVzcG9uZGVycyIsInRnIiwidWciLCJ1cGRhdGVRdWV1ZSIsImJhc2VTdGF0ZSIsImJhc2VRdWV1ZSIsInBlbmRpbmciLCJlZmZlY3RzIiwidmciLCJ3ZyIsInN1c3BlbnNlQ29uZmlnIiwicGF5bG9hZCIsInhnIiwieWciLCJ6ZyIsIkFnIiwiQmciLCJDZyIsIkRnIiwiRWciLCJGZyIsIkpnIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsIkdnIiwiSGciLCJJZyIsIktnIiwic2hvdWxkQ29tcG9uZW50VXBkYXRlIiwiTGciLCJNZyIsIk5nIiwiY29tcG9uZW50RGlkTW91bnQiLCJPZyIsIlBnIiwiX3N0cmluZ1JlZiIsIlFnIiwiUmciLCJsYXN0RWZmZWN0IiwibmV4dEVmZmVjdCIsImZpcnN0RWZmZWN0IiwiU2ciLCJUZyIsIlVnIiwiaW1wbGVtZW50YXRpb24iLCJWZyIsIldnIiwiWGciLCJZZyIsIlpnIiwiJGciLCJhaCIsImJoIiwiZGgiLCJ0YWdOYW1lIiwiZWgiLCJmaCIsImdoIiwiaGgiLCJtZW1vaXplZFByb3BzIiwicmV2ZWFsT3JkZXIiLCJpaCIsInJlc3BvbmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsInZoIiwid2giLCJsYXN0UmVuZGVyZWRSZWR1Y2VyIiwiYWN0aW9uIiwiZWFnZXJSZWR1Y2VyIiwiZWFnZXJTdGF0ZSIsImxhc3RSZW5kZXJlZFN0YXRlIiwiZGlzcGF0Y2giLCJ4aCIsInloIiwiemgiLCJBaCIsImRlc3Ryb3kiLCJkZXBzIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIkdoIiwiSGgiLCJJaCIsIkpoIiwiS2giLCJMaCIsIk1oIiwiTmgiLCJyZWFkQ29udGV4dCIsInVzZVJlc3BvbmRlciIsInVzZURlZmVycmVkVmFsdWUiLCJ1c2VUcmFuc2l0aW9uIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwicGVuZGluZ1Byb3BzIiwiVWgiLCJWaCIsIldoIiwiWGgiLCJZaCIsIlpoIiwiJGgiLCJhaSIsImJpIiwiY2kiLCJkaSIsImVpIiwiZmkiLCJnaSIsImhpIiwicGVuZGluZ0NvbnRleHQiLCJuaSIsInBpIiwicWkiLCJpaSIsInJldHJ5VGltZSIsImppIiwiZmFsbGJhY2siLCJ1bnN0YWJsZV9hdm9pZFRoaXNGYWxsYmFjayIsImtpIiwibGkiLCJpc0JhY2t3YXJkcyIsInJlbmRlcmluZyIsInJlbmRlcmluZ1N0YXJ0VGltZSIsInRhaWwiLCJ0YWlsRXhwaXJhdGlvbiIsInRhaWxNb2RlIiwibWkiLCJyaSIsInNpIiwid2FzTXVsdGlwbGUiLCJtdWx0aXBsZSIsIm9uQ2xpY2siLCJvbmNsaWNrIiwiY3JlYXRlRWxlbWVudE5TIiwidGkiLCJ1aSIsInZpIiwid2kiLCJ4aSIsInlpIiwiemkiLCJBaSIsIkJpIiwiV2Vha1NldCIsIkNpIiwiRmkiLCJFaSIsIkdpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJIaSIsIklpIiwiSmkiLCJmb2N1cyIsIktpIiwiTGkiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsIkRpIiwiTWkiLCJOaSIsIk9pIiwiUGkiLCJRaSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJSaSIsIlNpIiwiVGkiLCJVaSIsIlZpIiwiV2kiLCJYaSIsIllpIiwiWmkiLCIkaSIsImNvbXBvbmVudERpZENhdGNoIiwiYWoiLCJjb21wb25lbnRTdGFjayIsIlJqIiwiYmoiLCJjaiIsImRqIiwia2oiLCJsaiIsIm1qIiwibmoiLCJvaiIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIndqIiwidGltZW91dE1zIiwieGoiLCJ5aiIsInpqIiwibGFzdEV4cGlyZWRUaW1lIiwiQWoiLCJmaXJzdFBlbmRpbmdUaW1lIiwibGFzdFBpbmdlZFRpbWUiLCJuZXh0S25vd25QZW5kaW5nTGV2ZWwiLCJjYWxsYmFja0V4cGlyYXRpb25UaW1lIiwiY2FsbGJhY2tQcmlvcml0eSIsImNhbGxiYWNrTm9kZSIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiZmluaXNoZWRXb3JrIiwiZmluaXNoZWRFeHBpcmF0aW9uVGltZSIsImxhc3RTdXNwZW5kZWRUaW1lIiwiSWoiLCJ0aW1lb3V0SGFuZGxlIiwiSmoiLCJidXN5TWluRHVyYXRpb25NcyIsImJ1c3lEZWxheU1zIiwiS2oiLCJNaiIsIk5qIiwicGluZ0NhY2hlIiwiT2oiLCJ1YiIsIlBqIiwiWGMiLCJRaiIsIlNqIiwiZmlyc3RTdXNwZW5kZWRUaW1lIiwicmFuZ2VDb3VudCIsIndiIiwiYWN0aXZlRWxlbWVudERldGFjaGVkIiwiZm9jdXNlZEVsZW0iLCJzZWxlY3Rpb25SYW5nZSIsIlRqIiwid2QiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiY3JlYXRlUmFuZ2UiLCJzZXRTdGFydCIsInJlbW92ZUFsbFJhbmdlcyIsImFkZFJhbmdlIiwic2V0RW5kIiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsInZiIiwiVWoiLCJWaiIsIldqIiwiaGlkZGVuIiwib2IiLCJYaiIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIlpqIiwicGVuZGluZ0NoaWxkcmVuIiwiYWsiLCJiayIsImNrIiwiZGsiLCJlayIsImZrIiwiSmMiLCJfaW50ZXJuYWxSb290IiwiZ2siLCJpayIsImhrIiwiamsiLCJrayIsInVubW91bnQiLCJmb3JtIiwiTGoiLCJsayIsIkV2ZW50cyIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiYnVuZGxlVHlwZSIsInJlbmRlcmVyUGFja2FnZU5hbWUiLCJpc0Rpc2FibGVkIiwic3VwcG9ydHNGaWJlciIsIm9uQ29tbWl0RmliZXJSb290Iiwib25Db21taXRGaWJlclVubW91bnQiLCJZaiIsIm92ZXJyaWRlSG9va1N0YXRlIiwib3ZlcnJpZGVQcm9wcyIsInNldFN1c3BlbnNlSGFuZGxlciIsInNjaGVkdWxlVXBkYXRlIiwiY3VycmVudERpc3BhdGNoZXJSZWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImZpbmRIb3N0SW5zdGFuY2VzRm9yUmVmcmVzaCIsInNjaGVkdWxlUmVmcmVzaCIsInNjaGVkdWxlUm9vdCIsInNldFJlZnJlc2hIYW5kbGVyIiwiZ2V0Q3VycmVudEZpYmVyIiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsInVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlIiwicGVyZm9ybWFuY2UiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsInNvcnRJbmRleCIsInN0YXJ0VGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJlbXB0eUZ1bmN0aW9uIiwiZW1wdHlGdW5jdGlvbldpdGhSZXNldCIsInNoaW0iLCJnZXRTaGltIiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJfcmVhY3QiLCJfcHJvcFR5cGVzIiwiX2xvYWRlciIsIkxvYWRlciIsIl9wcm9wVHlwZXMyIiwic2xpY2VJdGVyYXRvciIsImNvbXBvbmVudE5hbWVzIiwiX3VzZVN0YXRlIiwiX3VzZVN0YXRlMiIsInNldERpc3BsYXkiLCJ0aW1lciIsInZpc2libGUiLCJTcGlubmVyIiwiQXVkaW8iLCJfQ2lyY2xlcyIsIl9XYXRjaCIsIl9BdWRpbyIsIl9CYWxsVHJpYW5nbGUiLCJfQmFycyIsIl9DcmFkbGVMb2FkZXIiLCJfR3JpZCIsIl9IZWFydHMiLCJfTXV0YXRpbmdEb3RzIiwiX092YWwiLCJfUGxhbmUiLCJfUHVmZiIsIl9SZXZvbHZpbmdEb3QiLCJfUmluZ3MiLCJfVGFpbFNwaW4iLCJfVGhyZWVEb3RzIiwiX1RyaWFuZ2xlIiwiQ2lyY2xlcyIsIkJhbGxUcmlhbmdsZSIsIkJhcnMiLCJDcmFkbGVMb2FkZXIiLCJHcmlkIiwiSGVhcnRzIiwiTXV0YXRpbmdEb3RzIiwiT3ZhbCIsIlBsYW5lIiwiUHVmZiIsIlJldm9sdmluZ0RvdCIsIlJpbmdzIiwiVGFpbFNwaW4iLCJUaHJlZURvdHMiLCJUcmlhbmdsZSIsIldhdGNoIiwidmlld0JveCIsInhtbG5zIiwibGFiZWwiLCJkdXIiLCJyZXBlYXRDb3VudCIsImVuYWJsZUJhY2tncm91bmQiLCJ4bWxTcGFjZSIsInN0cm9rZSIsImN4IiwiY3kiLCJyYWRpdXMiLCJzdHJva2VMaW5lY2FwIiwieTIiLCJ0cmFuc2Zvcm0iLCJjYWxjTW9kZSIsImZpbGxSdWxlIiwicm9sZSIsInN0ZERldmlhdGlvbiIsImluMiIsIm9wZXJhdG9yIiwiYXR0cmlidXRlVHlwZSIsImtleVRpbWVzIiwia2V5U3BsaW5lcyIsInNlY29uZGFyeUNvbG9yIiwic3Ryb2tlTGluZWpvaW4iLCJzdG9wQ29sb3IiLCJwb2ludHMiLCJfZ3VkMiIsIl9jbGFzc0NhbGxDaGVjayIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwiUmVmZXJlbmNlRXJyb3IiLCJfaW5oZXJpdHMiLCJjcmVhdGVFdmVudEVtaXR0ZXIiLCJoYW5kbGVycyIsIm5ld1ZhbHVlIiwiY2hhbmdlZEJpdHMiLCJjYWxjdWxhdGVDaGFuZ2VkQml0cyIsIl9Qcm92aWRlciRjaGlsZENvbnRleCIsIl9Db25zdW1lciRjb250ZXh0VHlwZSIsImNvbnRleHRQcm9wIiwiX0NvbXBvbmVudCIsIl90ZW1wIiwiX3RoaXMiLCJfbGVuIiwiX2tleSIsImVtaXR0ZXIiLCJvbGRWYWx1ZSIsIl9Db21wb25lbnQyIiwiX3RlbXAyIiwiX3RoaXMyIiwiX2xlbjIiLCJfa2V5MiIsIm9uVXBkYXRlIiwid2FybmluZyIsIkF4aW9zIiwibWVyZ2VDb25maWciLCJjcmVhdGVJbnN0YW5jZSIsImRlZmF1bHRDb25maWciLCJheGlvcyIsImluc3RhbmNlQ29uZmlnIiwiQ2FuY2VsVG9rZW4iLCJpc0NhbmNlbCIsInByb21pc2VzIiwic3ByZWFkIiwiSW50ZXJjZXB0b3JNYW5hZ2VyIiwiZGlzcGF0Y2hSZXF1ZXN0IiwiaW50ZXJjZXB0b3JzIiwiaW50ZXJjZXB0b3IiLCJ1bnNoaWZ0IiwiZnVsZmlsbGVkIiwicmVqZWN0ZWQiLCJnZXRVcmkiLCJlamVjdCIsInRyYW5zZm9ybURhdGEiLCJ0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkIiwidGhyb3dJZlJlcXVlc3RlZCIsIm5vcm1hbGl6ZWROYW1lIiwiaXNBeGlvc0Vycm9yIiwiZGVzY3JpcHRpb24iLCJjb2x1bW5OdW1iZXIiLCJleHBpcmVzIiwicGF0aCIsInNlY3VyZSIsImNvb2tpZSIsInRvR01UU3RyaW5nIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVtb3ZlIiwiaXNBYnNvbHV0ZVVSTCIsImNvbWJpbmVVUkxzIiwicmVxdWVzdGVkVVJMIiwicmVsYXRpdmVVUkwiLCJpZ25vcmVEdXBsaWNhdGVPZiIsImxpbmUiLCJzdWJzdHIiLCJvcmlnaW5VUkwiLCJtc2llIiwidXJsUGFyc2luZ05vZGUiLCJyZXNvbHZlVVJMIiwicHJvdG9jb2wiLCJob3N0IiwiaG9zdG5hbWUiLCJwYXRobmFtZSIsInJlcXVlc3RVUkwiLCJyZXNvbHZlUHJvbWlzZSIsInRva2VuIiwiYXBpIiwibG9jYWxzIiwib2xkTG9jYWxzIiwiaXNFcXVhbExvY2FscyIsImlzT2xkSUUiLCJhdG9iIiwiZ2V0VGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudERvY3VtZW50Iiwic3R5bGVzSW5Eb20iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkU3R5bGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJpbnNlcnQiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsImFwcGx5VG9TaW5nbGV0b25UYWciLCJzdHlsZVNoZWV0IiwiY3NzTm9kZSIsImFwcGx5VG9UYWciLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVJbmRleCIsInJlbW92ZVN0eWxlRWxlbWVudCIsIm5ld09iaiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJ1c2VTb3VyY2VNYXAiLCJjc3NNYXBwaW5nIiwic291cmNlTWFwcGluZyIsImJhc2U2NCIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlUm9vdCIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiUmVhY3RSZWR1eENvbnRleHQiLCJudWxsTGlzdGVuZXJzIiwiY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uIiwiYmF0Y2giLCJpc1N1YnNjcmliZWQiLCJwYXJlbnRTdWIiLCJoYW5kbGVDaGFuZ2VXcmFwcGVyIiwiX3Byb3RvIiwiYWRkTmVzdGVkU3ViIiwidHJ5U3Vic2NyaWJlIiwibm90aWZ5TmVzdGVkU3VicyIsIm9uU3RhdGVDaGFuZ2UiLCJ0cnlVbnN1YnNjcmliZSIsImNvbnRleHRWYWx1ZSIsInByZXZpb3VzU3RhdGUiLCJnZXRTdGF0ZSIsInVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QiLCJFTVBUWV9BUlJBWSIsIk5PX1NVQlNDUklQVElPTl9BUlJBWSIsInN0b3JlU3RhdGVVcGRhdGVzUmVkdWNlciIsInVwZGF0ZUNvdW50IiwidXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFdpdGhBcmdzIiwiZWZmZWN0RnVuYyIsImVmZmVjdEFyZ3MiLCJjYXB0dXJlV3JhcHBlclByb3BzIiwibGFzdFdyYXBwZXJQcm9wcyIsImxhc3RDaGlsZFByb3BzIiwicmVuZGVySXNTY2hlZHVsZWQiLCJ3cmFwcGVyUHJvcHMiLCJhY3R1YWxDaGlsZFByb3BzIiwiY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSIsInN1YnNjcmliZVVwZGF0ZXMiLCJzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMiLCJjaGlsZFByb3BzU2VsZWN0b3IiLCJmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoIiwiZGlkVW5zdWJzY3JpYmUiLCJsYXN0VGhyb3duRXJyb3IiLCJjaGVja0ZvclVwZGF0ZXMiLCJuZXdDaGlsZFByb3BzIiwibGF0ZXN0U3RvcmVTdGF0ZSIsImluaXRTdGF0ZVVwZGF0ZXMiLCJjb25uZWN0QWR2YW5jZWQiLCJzZWxlY3RvckZhY3RvcnkiLCJfcmVmMiIsIl9yZWYyJGdldERpc3BsYXlOYW1lIiwiZ2V0RGlzcGxheU5hbWUiLCJfcmVmMiRtZXRob2ROYW1lIiwibWV0aG9kTmFtZSIsIl9yZWYyJHJlbmRlckNvdW50UHJvcCIsInJlbmRlckNvdW50UHJvcCIsIl9yZWYyJHNob3VsZEhhbmRsZVN0YSIsIl9yZWYyJHN0b3JlS2V5Iiwic3RvcmVLZXkiLCJfcmVmMiRmb3J3YXJkUmVmIiwid2l0aFJlZiIsIl9yZWYyJGNvbnRleHQiLCJjb25uZWN0T3B0aW9ucyIsIldyYXBwZWRDb21wb25lbnQiLCJ3cmFwcGVkQ29tcG9uZW50TmFtZSIsInNlbGVjdG9yRmFjdG9yeU9wdGlvbnMiLCJwdXJlIiwidXNlUHVyZU9ubHlNZW1vIiwiQ29ubmVjdEZ1bmN0aW9uIiwiX3VzZU1lbW8iLCJyZWFjdFJlZHV4Rm9yd2FyZGVkUmVmIiwicHJvcHNDb250ZXh0IiwiQ29udGV4dFRvVXNlIiwiZGlkU3RvcmVDb21lRnJvbVByb3BzIiwiY3JlYXRlQ2hpbGRTZWxlY3RvciIsIl91c2VNZW1vMiIsIm92ZXJyaWRkZW5Db250ZXh0VmFsdWUiLCJfdXNlUmVkdWNlciIsInByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQiLCJyZW5kZXJlZFdyYXBwZWRDb21wb25lbnQiLCJDb25uZWN0IiwiZm9yd2FyZGVkIiwic2hhbGxvd0VxdWFsIiwicmFuZG9tU3RyaW5nIiwiQWN0aW9uVHlwZXMiLCJJTklUIiwiUFJPQkVfVU5LTk9XTl9BQ1RJT04iLCJnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZSIsImFjdGlvblR5cGUiLCJiaW5kQWN0aW9uQ3JlYXRvciIsImFjdGlvbkNyZWF0b3IiLCJfb2JqZWN0U3ByZWFkMiIsImNvbXBvc2UiLCJmdW5jcyIsIndyYXBNYXBUb1Byb3BzQ29uc3RhbnQiLCJnZXRDb25zdGFudCIsImNvbnN0YW50IiwiY29uc3RhbnRTZWxlY3RvciIsImRlcGVuZHNPbk93blByb3BzIiwiZ2V0RGVwZW5kc09uT3duUHJvcHMiLCJtYXBUb1Byb3BzIiwid3JhcE1hcFRvUHJvcHNGdW5jIiwic3RhdGVPckRpc3BhdGNoIiwib3duUHJvcHMiLCJtYXBEaXNwYXRjaFRvUHJvcHMiLCJhY3Rpb25DcmVhdG9ycyIsImJvdW5kQWN0aW9uQ3JlYXRvcnMiLCJiaW5kQWN0aW9uQ3JlYXRvcnMiLCJtYXBTdGF0ZVRvUHJvcHMiLCJkZWZhdWx0TWVyZ2VQcm9wcyIsInN0YXRlUHJvcHMiLCJkaXNwYXRjaFByb3BzIiwibWVyZ2VQcm9wcyIsIm1lcmdlZFByb3BzIiwiYXJlTWVyZ2VkUHJvcHNFcXVhbCIsImhhc1J1bk9uY2UiLCJuZXh0TWVyZ2VkUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwicHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJhcmVTdGF0ZXNFcXVhbCIsImFyZU93blByb3BzRXF1YWwiLCJhcmVTdGF0ZVByb3BzRXF1YWwiLCJoYXNSdW5BdExlYXN0T25jZSIsImhhbmRsZVN1YnNlcXVlbnRDYWxscyIsIm5leHRPd25Qcm9wcyIsIm5leHRTdGF0ZVByb3BzIiwic3RhdGVQcm9wc0NoYW5nZWQiLCJwcm9wc0NoYW5nZWQiLCJzdGF0ZUNoYW5nZWQiLCJmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwiaW5pdE1hcFN0YXRlVG9Qcm9wcyIsImluaXRNYXBEaXNwYXRjaFRvUHJvcHMiLCJpbml0TWVyZ2VQcm9wcyIsInN0cmljdEVxdWFsIiwiY3JlYXRlQ29ubmVjdCIsIl9yZWYkY29ubmVjdEhPQyIsImNvbm5lY3RIT0MiLCJfcmVmJG1hcFN0YXRlVG9Qcm9wc0YiLCJtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMiLCJfcmVmJG1hcERpc3BhdGNoVG9Qcm8iLCJtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMiLCJfcmVmJG1lcmdlUHJvcHNGYWN0b3IiLCJtZXJnZVByb3BzRmFjdG9yaWVzIiwiX3JlZiRzZWxlY3RvckZhY3RvcnkiLCJfcmVmMyIsIl9yZWYzJHB1cmUiLCJfcmVmMyRhcmVTdGF0ZXNFcXVhbCIsIl9yZWYzJGFyZU93blByb3BzRXF1YSIsIl9yZWYzJGFyZVN0YXRlUHJvcHNFcSIsIl9yZWYzJGFyZU1lcmdlZFByb3BzRSIsImV4dHJhT3B0aW9ucyIsIm5ld0JhdGNoIiwibGlnaHQiLCJjb2xvcnMiLCJwcmltYXJ5IiwibWFpbiIsImJhY2tncm91bmQiLCJkYXJrIiwiZGFya2VyIiwibGlnaHRlciIsImRhbmdlciIsIkxvYWRlcldyYXBwZXIiLCJzdHlsZWQiLCJjbGFzc25hbWVzIiwic3R5bGVzIiwiQnV0dG9uIiwiZ2V0Q29sb3IiLCJ0b25lIiwiaXNNb2JpbGUiLCJNb2JpbGVNZWRpYVF1ZXJ5IiwiUENNZWRpYVF1ZXJ5IiwiRGVncmVlcyIsInVuaXQiLCJEZWZhdWx0Q29udGV4dCIsImF0dHIiLCJJY29uQ29udGV4dCIsIl9fYXNzaWduIiwiX19yZXN0IiwiR2VuSWNvbiIsIkljb25CYXNlIiwiVHJlZTJFbGVtZW50IiwidHJlZSIsImVsZW0iLCJjb25mIiwiY29tcHV0ZWRTaXplIiwic3ZnUHJvcHMiLCJNZEZhdm9yaXRlIiwiTWRGYXZvcml0ZUJvcmRlciIsIkljb24iLCJGYXZvcml0ZUljb24iLCJpc0Zhdm9yaXRlIiwiX29uQ2xpY2siLCJyb3V0ZXMiLCJ1cmkiLCJkZWZhdWx0XyIsInVyaVBhdGhuYW1lIiwidXJpU2VnbWVudHMiLCJzZWdtZW50aXplIiwiaXNSb290VXJpIiwicmFua2VkIiwicmFua1JvdXRlcyIsIm1pc3NlZCIsInJvdXRlIiwicm91dGVTZWdtZW50cyIsInJvdXRlU2VnbWVudCIsInVyaVNlZ21lbnQiLCJpc1NwbGF0IiwicGFyYW1SZSIsInJlc2VydmVkTmFtZXMiLCJfdG8kc3BsaXQiLCJ0b1BhdGhuYW1lIiwidG9RdWVyeSIsImJhc2VQYXRobmFtZSIsInRvU2VnbWVudHMiLCJiYXNlU2VnbWVudHMiLCJhZGRRdWVyeSIsImFsbFNlZ21lbnRzIiwic2VnbWVudHMiLCJzZWdtZW50IiwiaW5zZXJ0UGFyYW1zIiwiX3BhdGgkc3BsaXQiLCJwYXRoQmFzZSIsIl9wYXRoJHNwbGl0JCIsImNvbnN0cnVjdGVkUGF0aCIsIl9wYXJhbXMkbG9jYXRpb24iLCJfcGFyYW1zJGxvY2F0aW9uJHNlYXIiLCJzZWFyY2hTcGxpdCIsImlzRHluYW1pYyIsInJhbmtSb3V0ZSIsInNjb3JlIiwiaXNSb290U2VnbWVudCIsIlNFR01FTlRfUE9JTlRTIiwiZ2V0TG9jYXRpb24iLCJfc291cmNlJGxvY2F0aW9uIiwib3JpZ2luIiwiVVJMIiwiZW5jb2RlVVJJIiwiZGVjb2RlVVJJIiwiaGlzdG9yeSIsImNyZWF0ZUhpc3RvcnkiLCJ0cmFuc2l0aW9uaW5nIiwicmVzb2x2ZVRyYW5zaXRpb24iLCJfb25UcmFuc2l0aW9uQ29tcGxldGUiLCJsaXN0ZW4iLCJwb3BzdGF0ZUxpc3RlbmVyIiwibmF2aWdhdGUiLCJfcmVmJHJlcGxhY2UiLCJnbyIsInJlcGxhY2VTdGF0ZSIsInB1c2hTdGF0ZSIsImdsb2JhbEhpc3RvcnkiLCJpbml0aWFsUGF0aCIsInNlYXJjaEluZGV4IiwiaW5pdGlhbExvY2F0aW9uIiwic3RhdGVzIiwiX3VyaSRzcGxpdCIsIl91cmkkc3BsaXQkIiwiX3VyaSRzcGxpdDIiLCJfdXJpJHNwbGl0MiQiLCJuZXdJbmRleCIsImNyZWF0ZU1lbW9yeVNvdXJjZSIsIkN0eCIsIkxvY2F0aW9uQ29udGV4dCIsIl9SZWFjdCRDb21wb25lbnQiLCJMb2NhdGlvblByb3ZpZGVyIiwiZ2V0Q29udGV4dCIsInVubGlzdGVuIiwiX3Byb3BzJGhpc3RvcnkiLCJpc1JlZGlyZWN0IiwiX25hdmlnYXRlIiwidW5tb3VudGVkIiwiQmFzZUNvbnRleHQiLCJiYXNldXJpIiwiYmFzZXBhdGgiLCJiYXNlQ29udGV4dCIsImxvY2F0aW9uQ29udGV4dCIsIl9SZWFjdCRQdXJlQ29tcG9uZW50IiwiUm91dGVySW1wbCIsIl9wcm9wcyIsIl9uYXZpZ2F0ZTIiLCJfcHJvcHMkY29tcG9uZW50IiwiZG9tUHJvcHMiLCJjbG9uZSIsIkZvY3VzV3JhcHBlciIsIkZvY3VzQ29udGV4dCIsInJlcXVlc3RGb2N1cyIsImluaXRpYWxSZW5kZXIiLCJmb2N1c0hhbmRsZXJDb3VudCIsIl9SZWFjdCRDb21wb25lbnQyIiwiRm9jdXNIYW5kbGVySW1wbCIsIl90aGlzNCIsInNob3VsZEZvY3VzIiwibXlVUklDaGFuZ2VkIiwibmF2aWdhdGVkVXBUb01lIiwiX3RoaXM1IiwiX3Byb3BzMiIsIl9wcm9wczIkY29tcG9uZW50IiwiQ29tcCIsIm91dGxpbmUiLCJ0YWJJbmRleCIsIl9yZWY0IiwiaW5uZXJSZWYiLCJfcmVmNSIsIl9yZWY2IiwiX3Byb3BzJGdldFByb3BzIiwiZ2V0UHJvcHMiLCJhbmNob3JQcm9wcyIsImVuY29kZWRIcmVmIiwiaXNDdXJyZW50IiwiaXNQYXJ0aWFsbHlDdXJyZW50Iiwic2hvdWxkTmF2aWdhdGUiLCJzaG91bGRSZXBsYWNlIiwiX2xvY2F0aW9uJHN0YXRlIiwicmVzdFN0YXRlIiwib2JqMSIsIm9iajIiLCJvYmoxS2V5cyIsIlJlZGlyZWN0UmVxdWVzdCIsIl9SZWFjdCRDb21wb25lbnQzIiwiUmVkaXJlY3RJbXBsIiwiX3Byb3BzMyIsIl9wcm9wczMkcmVwbGFjZSIsIm5vVGhyb3ciLCJyZXNvbHZlZFRvIiwiX3Byb3BzNCIsInJlZGlyZWN0VG8iLCJfcmVmNyIsInN0cmlwU2xhc2hlcyIsImNyZWF0ZVJvdXRlIiwiZWxlbWVudFBhdGgiLCJMYXlvdXQiLCJfZ2V0UHJvdG90eXBlT2YiLCJfc2V0UHJvdG90eXBlT2YiLCJfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0Iiwic2hhbSIsIlByb3h5IiwiUGFyZW50IiwiQ2xhc3MiLCJfY2FjaGUiLCJfRXJyb3IiLCJQb2xpc2hlZEVycm9yIiwiX2Fzc2VydFRoaXNJbml0aWFsaXplZCIsImNvbG9yVG9JbnQiLCJjb252ZXJ0VG9JbnQiLCJyZWQiLCJncmVlbiIsImJsdWUiLCJoc2xUb1JnYiIsImh1ZSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJjb252ZXJ0IiwiaHVlUHJpbWUiLCJjaHJvbWEiLCJzZWNvbmRDb21wb25lbnQiLCJsaWdodG5lc3NNb2RpZmljYXRpb24iLCJuYW1lZENvbG9yTWFwIiwiYWxpY2VibHVlIiwiYW50aXF1ZXdoaXRlIiwiYXF1YSIsImFxdWFtYXJpbmUiLCJhenVyZSIsImJlaWdlIiwiYmlzcXVlIiwiYmxhY2siLCJibGFuY2hlZGFsbW9uZCIsImJsdWV2aW9sZXQiLCJicm93biIsImJ1cmx5d29vZCIsImNhZGV0Ymx1ZSIsImNoYXJ0cmV1c2UiLCJjaG9jb2xhdGUiLCJjb3JhbCIsImNvcm5mbG93ZXJibHVlIiwiY29ybnNpbGsiLCJjcmltc29uIiwiY3lhbiIsImRhcmtibHVlIiwiZGFya2N5YW4iLCJkYXJrZ29sZGVucm9kIiwiZGFya2dyYXkiLCJkYXJrZ3JlZW4iLCJkYXJrZ3JleSIsImRhcmtraGFraSIsImRhcmttYWdlbnRhIiwiZGFya29saXZlZ3JlZW4iLCJkYXJrb3JhbmdlIiwiZGFya29yY2hpZCIsImRhcmtyZWQiLCJkYXJrc2FsbW9uIiwiZGFya3NlYWdyZWVuIiwiZGFya3NsYXRlYmx1ZSIsImRhcmtzbGF0ZWdyYXkiLCJkYXJrc2xhdGVncmV5IiwiZGFya3R1cnF1b2lzZSIsImRhcmt2aW9sZXQiLCJkZWVwcGluayIsImRlZXBza3libHVlIiwiZGltZ3JheSIsImRpbWdyZXkiLCJkb2RnZXJibHVlIiwiZmlyZWJyaWNrIiwiZmxvcmFsd2hpdGUiLCJmb3Jlc3RncmVlbiIsImZ1Y2hzaWEiLCJnYWluc2Jvcm8iLCJnaG9zdHdoaXRlIiwiZ29sZCIsImdvbGRlbnJvZCIsImdyYXkiLCJncmVlbnllbGxvdyIsImdyZXkiLCJob25leWRldyIsImhvdHBpbmsiLCJpbmRpYW5yZWQiLCJpbmRpZ28iLCJpdm9yeSIsImtoYWtpIiwibGF2ZW5kZXIiLCJsYXZlbmRlcmJsdXNoIiwibGF3bmdyZWVuIiwibGVtb25jaGlmZm9uIiwibGlnaHRibHVlIiwibGlnaHRjb3JhbCIsImxpZ2h0Y3lhbiIsImxpZ2h0Z29sZGVucm9keWVsbG93IiwibGlnaHRncmF5IiwibGlnaHRncmVlbiIsImxpZ2h0Z3JleSIsImxpZ2h0cGluayIsImxpZ2h0c2FsbW9uIiwibGlnaHRzZWFncmVlbiIsImxpZ2h0c2t5Ymx1ZSIsImxpZ2h0c2xhdGVncmF5IiwibGlnaHRzbGF0ZWdyZXkiLCJsaWdodHN0ZWVsYmx1ZSIsImxpZ2h0eWVsbG93IiwibGltZSIsImxpbWVncmVlbiIsImxpbmVuIiwibWFnZW50YSIsIm1hcm9vbiIsIm1lZGl1bWFxdWFtYXJpbmUiLCJtZWRpdW1ibHVlIiwibWVkaXVtb3JjaGlkIiwibWVkaXVtcHVycGxlIiwibWVkaXVtc2VhZ3JlZW4iLCJtZWRpdW1zbGF0ZWJsdWUiLCJtZWRpdW1zcHJpbmdncmVlbiIsIm1lZGl1bXR1cnF1b2lzZSIsIm1lZGl1bXZpb2xldHJlZCIsIm1pZG5pZ2h0Ymx1ZSIsIm1pbnRjcmVhbSIsIm1pc3R5cm9zZSIsIm1vY2Nhc2luIiwibmF2YWpvd2hpdGUiLCJuYXZ5Iiwib2xkbGFjZSIsIm9saXZlIiwib2xpdmVkcmFiIiwib3JhbmdlIiwib3JhbmdlcmVkIiwib3JjaGlkIiwicGFsZWdvbGRlbnJvZCIsInBhbGVncmVlbiIsInBhbGV0dXJxdW9pc2UiLCJwYWxldmlvbGV0cmVkIiwicGFwYXlhd2hpcCIsInBlYWNocHVmZiIsInBlcnUiLCJwaW5rIiwicGx1bSIsInBvd2RlcmJsdWUiLCJwdXJwbGUiLCJyZWJlY2NhcHVycGxlIiwicm9zeWJyb3duIiwicm95YWxibHVlIiwic2FkZGxlYnJvd24iLCJzYWxtb24iLCJzYW5keWJyb3duIiwic2VhZ3JlZW4iLCJzZWFzaGVsbCIsInNpZW5uYSIsInNpbHZlciIsInNreWJsdWUiLCJzbGF0ZWJsdWUiLCJzbGF0ZWdyYXkiLCJzbGF0ZWdyZXkiLCJzbm93Iiwic3ByaW5nZ3JlZW4iLCJzdGVlbGJsdWUiLCJ0YW4iLCJ0ZWFsIiwidGhpc3RsZSIsInRvbWF0byIsInR1cnF1b2lzZSIsInZpb2xldCIsIndoZWF0Iiwid2hpdGUiLCJ3aGl0ZXNtb2tlIiwieWVsbG93IiwieWVsbG93Z3JlZW4iLCJoZXhSZWdleCIsImhleFJnYmFSZWdleCIsInJlZHVjZWRIZXhSZWdleCIsInJlZHVjZWRSZ2JhSGV4UmVnZXgiLCJyZ2JSZWdleCIsInJnYmFSZWdleCIsImhzbFJlZ2V4IiwiaHNsYVJlZ2V4IiwicGFyc2VUb1JnYiIsIm5vcm1hbGl6ZWRDb2xvciIsIm5vcm1hbGl6ZWRDb2xvck5hbWUiLCJuYW1lVG9IZXgiLCJhbHBoYSIsIl9hbHBoYSIsInJnYk1hdGNoZWQiLCJyZ2JhTWF0Y2hlZCIsImhzbE1hdGNoZWQiLCJyZ2JDb2xvclN0cmluZyIsImhzbFJnYk1hdGNoZWQiLCJoc2xhTWF0Y2hlZCIsIl9yZ2JDb2xvclN0cmluZyIsIl9oc2xSZ2JNYXRjaGVkIiwicGFyc2VUb0hzbCIsImRlbHRhIiwicmdiVG9Ic2wiLCJyZWR1Y2VIZXhWYWx1ZSIsIm51bWJlclRvSGV4IiwiY29sb3JUb0hleCIsImNvbnZlcnRUb0hleCIsImhzbFRvSGV4IiwiaHNsIiwiaHNsYSIsInJnYiIsInJnYmEiLCJmaXJzdFZhbHVlIiwic2Vjb25kVmFsdWUiLCJ0aGlyZFZhbHVlIiwiZm91cnRoVmFsdWUiLCJyZ2JWYWx1ZSIsInRvQ29sb3JTdHJpbmciLCJpc1JnYmEiLCJpc1JnYiIsImlzSHNsYSIsImlzSHNsIiwiY3VycnkiLCJjdXJyaWVkIiwiY29tYmluZWQiLCJndWFyZCIsImxvd2VyQm91bmRhcnkiLCJ1cHBlckJvdW5kYXJ5IiwiZGFya2VuIiwiYW1vdW50IiwiaHNsQ29sb3IiLCJjdXJyaWVkRGFya2VuIiwibGlnaHRlbiIsImN1cnJpZWRMaWdodGVuIiwidHJhbnNwYXJlbnRpemUiLCJwYXJzZWRDb2xvciIsImN1cnJpZWRUcmFuc3BhcmVudGl6ZSIsIlNlYXJjaEZvcm0iLCJNQVhfREVMQVlfTVMiLCJ1c2VUaW1lb3V0IiwiaGFuZGxlUmVmIiwiZGVsYXlNcyIsInNldENoYWluZWRUaW1lb3V0IiwidGltZW91dEF0TXMiLCJlbXVsYXRlVHJhbnNpdGlvbkVuZCIsImR1cmF0aW9uIiwicGFkZGluZyIsImNhbGxlZCIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiZGlzcGF0Y2hFdmVudCIsInRyaWdnZXJUcmFuc2l0aW9uRW5kIiwidHJhbnNpdGlvbkVuZCIsIm11bHQiLCJyZW1vdmVFbXVsYXRlIiwiVHJhbnNpdGlvbiIsImluaXRpYWxTdGF0dXMiLCJhcHBlYXIiLCJpc01vdW50aW5nIiwiYXBwZWFyU3RhdHVzIiwiaW4iLCJ1bm1vdW50T25FeGl0IiwibW91bnRPbkVudGVyIiwibmV4dENhbGxiYWNrIiwidXBkYXRlU3RhdHVzIiwibmV4dFN0YXR1cyIsImNhbmNlbE5leHRDYWxsYmFjayIsImdldFRpbWVvdXRzIiwibW91bnRpbmciLCJwZXJmb3JtRW50ZXIiLCJwZXJmb3JtRXhpdCIsImFwcGVhcmluZyIsIm5vZGVSZWYiLCJtYXliZU5vZGUiLCJtYXliZUFwcGVhcmluZyIsInRpbWVvdXRzIiwiZW50ZXJUaW1lb3V0Iiwic2FmZVNldFN0YXRlIiwib25FbnRlcmVkIiwib25FbnRlciIsIm9uRW50ZXJpbmciLCJvblRyYW5zaXRpb25FbmQiLCJfdGhpczMiLCJvbkV4aXQiLCJvbkV4aXRpbmciLCJvbkV4aXRlZCIsInNldE5leHRDYWxsYmFjayIsImRvZXNOb3RIYXZlVGltZW91dE9yTGlzdGVuZXIiLCJhZGRFbmRMaXN0ZW5lciIsIm1heWJlTmV4dENhbGxiYWNrIiwiX3RoaXMkcHJvcHMiLCJjaGlsZFByb3BzIiwiVHJhbnNpdGlvbkdyb3VwQ29udGV4dCIsIlVOTU9VTlRFRCIsIkVYSVRFRCIsIkVOVEVSSU5HIiwiRU5URVJFRCIsIkVYSVRJTkciLCJfZmFkZVN0eWxlcyIsImZhZGVTdHlsZXMiLCJGYWRlIiwiaGFuZGxlRW50ZXIiLCJvZmZzZXRIZWlnaHQiLCJ0cmlnZ2VyQnJvd3NlclJlZmxvdyIsImlubmVyUHJvcHMiLCJUaGVtZUNvbnRleHQiLCJ1c2VCb290c3RyYXBQcmVmaXgiLCJkZWZhdWx0UHJlZml4IiwicHJlZml4ZXMiLCJDbG9zZUJ1dHRvbiIsIm9uQ2xvc2UiLCJUb2FzdEhlYWRlciIsImJzUHJlZml4IiwiY2xvc2VMYWJlbCIsImNsb3NlQnV0dG9uIiwiaGFuZGxlQ2xpY2siLCJySHlwaGVuIiwiY2hyIiwiX3JlZiRkaXNwbGF5TmFtZSIsIkJzQ29tcG9uZW50IiwiX3JlZjIkYXMiLCJUYWciLCJyZXNvbHZlZFByZWZpeCIsIlRvYXN0IiwiX3JlZiR0cmFuc2l0aW9uIiwiX3JlZiRzaG93Iiwic2hvdyIsIl9yZWYkYW5pbWF0aW9uIiwiX3JlZiRkZWxheSIsIl9yZWYkYXV0b2hpZGUiLCJhdXRvaGlkZSIsImRlbGF5UmVmIiwib25DbG9zZVJlZiIsImF1dG9oaWRlVGltZW91dCIsImF1dG9oaWRlVG9hc3QiLCJhdXRvaGlkZUZ1bmMiLCJ0b2FzdENvbnRleHQiLCJoYXNBbmltYXRpb24iLCJ0b2FzdCIsIkJvZHkiLCJUb2FzdEJvZHkiLCJIZWFkZXIiLCJ0ZXh0VmFsdWUiLCJfb25TdWJtaXQiLCJvblN1Ym1pdCIsIm91dGVyRXJyb3IiLCJjbGVhck91dGVyRXJyb3IiLCJjbGVhckVycm9yIiwic2V0VGV4dCIsInNob3dUb2FzdCIsInNldFNob3dUb2FzdCIsInNldEVycm9yIiwiV2VhdGhlciIsImdldEluaXRDb21wbGV0ZWQiLCJ3ZWF0aGVyIiwiaW5pdENvbXBsZXRlZCIsIkJBU0UiLCJTRVRfV0VBVEhFUl9EQVRBIiwiU0VUX0ZPUk1fRVJST1IiLCJTRVRfSU5JVF9DT01QTEVURUQiLCJjcmVhdGVBY3Rpb24iLCJ1cGRhdGVTdGF0ZSIsInNldEluaXREYXRhIiwic2V0SW5pdENvbXBsZXRlZCIsInNldFdlYXRoZXJEYXRhIiwic2V0Rm9ybUVycm9yIiwiQVBJX0tFWSIsImZldGNoQ3VycmVudFdlYXRoZXIiLCJsb2NhdGlvbktleSIsImFwaWtleSIsImZldGNoNURheXNGb3JlY2FzdCIsImZldGNoQXV0b0NvbXBsZXRpb24iLCJmZXRjaExvY2F0aW9uQnlDb29yZHMiLCJjb29yZHMiLCJTRVRfQ0lUWSIsIlNFVF9HTE9CQUxfRVJST1IiLCJTRVRfRkFWT1JJVEVTIiwic2V0Q2l0eSIsInNldEdsb2JhbEVycm9yIiwic2V0RmF2b3JpdGVzIiwiQ3VycmVudFdlYXRoZXIiLCJMaW5rIiwiY2l0eSIsIm9uRmF2b3JpdGVJY29uQ2xpY2tlZCIsIm9uSWNvbkNsaWNrZWQiLCJ0ZW1wZXJhdHVyZXNDb250ZW50IiwiVGVtcGVyYXR1cmUiLCJ0ZW1wVHlwZSIsIlZhbHVlIiwiVW5pdCIsIklzRGF5VGltZSIsIldlYXRoZXJUZXh0IiwiTW9iaWxlTGluayIsIkZvcmVjYXN0IiwiRGF5IiwiREFZU19UT19URVhUIiwiMCIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIl9kYXRlIiwiTmlnaHQiLCJkYXRlVGV4dCIsImNvbnN0cyIsImdldERheSIsIkljb25QaHJhc2UiLCJNaW5pbXVtIiwiTWF4aW11bSIsIkhlYWRsaW5lIiwiRGFpbHlGb3JlY2FzdHMiLCJUZXh0IiwiZGFpbHlGb3JlY2FzdCIsImZpbmRXZWF0aGVyIiwid2VhdGhlckRhdGEiLCJvbkFkZEZhdm9yaXRlIiwib25SZW1vdmVGYXZvcml0ZSIsImZhdm9yaXRlcyIsImZvcm1FcnJvciIsImNsZWFyRm9ybUVycm9yIiwib25Gb3JtU3VibWl0IiwiZm9yZWNhc3QiLCJjb25uZWN0Iiwic2VsZWN0b3JzIiwiaGVscGVycyIsImFjdGlvbnMiLCJnbG9iYWxFcnJvciIsIm9wZXJhdGlvbnMiLCJjb21wbGV0aW9uc1Jlc3BvbnNlIiwiRmF2b3JpdGVzIiwiZ2V0RmF2b3JpdGVzRGF0YSIsImZhdm9yaXRlc0RhdGEiLCJTRVRfRkFWT1JJVEVTX0RBVEEiLCJzZXRGYXZvcml0ZXNEYXRhIiwiTm9GYXZvcml0ZXMiLCJCQVNFX1VSTCIsIldFQVRIRVJfUEFHRV9VUkwiLCJGQVZPUklURVNfUEFHRV9VUkwiLCJjaGVja0ZvckRhdGFVcGRhdGVzIiwiZmF2b3JpdGVDaXR5Q2xpY2tlZCIsImV4aXN0cyIsImFyZUV4aXN0cyIsIm5hdmlnYXRlVG9XZWF0aGVyUGFnZSIsIm9uQ2FyZENsaWNrZWRIYW5kbGVyIiwia2V5c1RvRmV0Y2giLCJrZXlzVG9EZWxldGUiLCJuZXdGYXZvcml0ZXNEYXRhIiwibG9jYXRpb25EYXRhIiwiVEhFTUVfVEVYVFMiLCJ0b2dnbGVUaGVtZSIsImN1cnJlbnRUaGVtZSIsImxheW91dENvbnN0cyIsImxheW91dCIsImdldEZhdm9yaXRlcyIsInNhdmVGYXZvcml0ZXMiLCJsb2NhbFN0b3JhZ2UiLCJyZW1vdmVJdGVtIiwic2V0SXRlbSIsIkRFRkFVTFRfQ0lUWSIsIkVycm9yTW9kYWwiLCJQYWdlTm90Rm91bmQiLCJub3RGb3VuZEltYWdlIiwiZ2VvbG9jYXRpb24iLCJzdWNjZXNzQ2FsbGJhY2siLCJjb29yZHNUZXh0IiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJLZXkiLCJMb2NhbGl6ZWROYW1lIiwiZ2V0Q3VycmVudFBvc2l0aW9uIiwiY3VycmVudENpdHkiLCJmYXZvcml0ZXNTdHIiLCJnZXRJdGVtIiwiY2l0eVN0ciIsInByZXZGYXZvcml0ZXMiLCJHbG9iYWxTdHlsZSIsImNyZWF0ZUdsb2JhbFN0eWxlIiwiRXJyb3JCb3VuZGFyeSIsInRoZW1lVHlwZXMiLCJzZXRDdXJyZW50VGhlbWUiLCJjcmVhdGVUaHVua01pZGRsZXdhcmUiLCJleHRyYUFyZ3VtZW50IiwidGh1bmsiLCJ3aXRoRXh0cmFBcmd1bWVudCIsIklOSVRJQUxfU1RBVEUiLCJjcmVhdGVTdG9yZSIsInJlZHVjZXIiLCJwcmVsb2FkZWRTdGF0ZSIsImVuaGFuY2VyIiwiY3VycmVudFJlZHVjZXIiLCJjdXJyZW50U3RhdGUiLCJjdXJyZW50TGlzdGVuZXJzIiwibmV4dExpc3RlbmVycyIsImlzRGlzcGF0Y2hpbmciLCJlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzIiwicmVwbGFjZVJlZHVjZXIiLCJuZXh0UmVkdWNlciIsIm91dGVyU3Vic2NyaWJlIiwib2JzZXJ2ZVN0YXRlIiwicmVkdWNlcnMiLCJyZWR1Y2VyS2V5cyIsImZpbmFsUmVkdWNlcnMiLCJzaGFwZUFzc2VydGlvbkVycm9yIiwiZmluYWxSZWR1Y2VyS2V5cyIsImFzc2VydFJlZHVjZXJTaGFwZSIsImhhc0NoYW5nZWQiLCJwcmV2aW91c1N0YXRlRm9yS2V5IiwibmV4dFN0YXRlRm9yS2V5IiwiZXJyb3JNZXNzYWdlIiwiY29tYmluZVJlZHVjZXJzIiwiX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fIiwibWlkZGxld2FyZXMiLCJfZGlzcGF0Y2giLCJtaWRkbGV3YXJlQVBJIiwibWlkZGxld2FyZSIsImFwcGx5TWlkZGxld2FyZSIsInRodW5rTWlkZGxld2FyZSIsIkFwcCIsImdldEVsZW1lbnRCeUlkIl0sIm1hcHBpbmdzIjoiYUFHRSxJQUFJQSxFQUEwQkMsT0FBeUIsaUJBQ3ZEQSxPQUF5QixpQkFDekIsU0FBa0NDLEVBQVNDLElBdVMzQyxTQUEyQkQsRUFBU0MsR0FDbkMsSUFBS0MsRUFBcUJGLEtBQWFHLEVBQXFCSCxHQUMzRCxPQUVELElBQUssSUFBSUksS0FEVEQsRUFBcUJILElBQVcsRUFDWEMsRUFDaEJJLE9BQU9DLFVBQVVDLGVBQWVDLEtBQUtQLEVBQWFHLEtBQ3JESyxFQUFVTCxHQUFZSCxFQUFZRyxJQUdWLEtBQXBCTSxHQUE4QyxJQUFyQkMsR0FDOUJDLElBaFREQyxDQUFrQmIsRUFBU0MsR0FDdkJILEdBQXlCQSxFQUF3QkUsRUFBU0MsSUF1RC9ELElBS0lhLEVBTEFDLEdBQW1CLEVBRW5CQyxFQUFpQix1QkFFakJDLEVBQXVCLEdBR3ZCQyxFQUFvQixHQUVwQkMsRUFBd0IsR0FHNUIsU0FBU0MsRUFBaUJoQixHQUN6QixJQUFJaUIsRUFBS0MsRUFBaUJsQixHQUMxQixJQUFLaUIsRUFBSSxPQUFPRSxFQUNoQixJQUFJQyxFQUFLLFNBQVNDLEdBc0JqQixP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LEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNSLEVBQVEsS0FDUixFQUFRLEtBQ1IsRUFBUSxLQUNS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Q2xCbnpCLFNBQVV6c0YsRUFBTXlzRixTQUNoQnZkLFNBQVUsV0FDUixPQUFPeXdDLEVBQVVqMkgsV0FBTSxFQUFRK0ksYUFHL0J4RixFQUFReXlILEVBQVkxeUgsS0FBSSxTQUFVNnlILEdBQ3BDLE9BQU9BLEVBQVdELE1BR3BCLE9BQU83dUIsRUFBZSxHQUFJL3dGLEVBQU8sQ0FDL0JrdkUsU0FGRnl3QyxFQUFZM3VCLEVBQVF0bkcsV0FBTSxFQUFRdUQsRUFBdEIrakcsQ0FBNkJoeEYsRUFBTWt2RSxjMkdwbkJqRDR3QyxDQUFnQkMsTSxPQ1JwQi9yRyxpQkFDSSxrQkFBQyxFQUFhLENBQUNoVSxVQUNYLGtCQUFDZ2dILEdBQUQsT0FFSm4wSCxTQUFTbzBILGVBQWUsUUFJeEJ0ekgsRUFBT3RHLElBQUlrQyIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHRmdW5jdGlvbiBob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHRkZWxldGUgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuIFx0fVxuIFx0dmFyIHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrID0gd2luZG93W1wid2VicGFja0hvdFVwZGF0ZVwiXTtcbiBcdHdpbmRvd1tcIndlYnBhY2tIb3RVcGRhdGVcIl0gPSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdGZ1bmN0aW9uIHdlYnBhY2tIb3RVcGRhdGVDYWxsYmFjayhjaHVua0lkLCBtb3JlTW9kdWxlcykge1xuIFx0XHRob3RBZGRVcGRhdGVDaHVuayhjaHVua0lkLCBtb3JlTW9kdWxlcyk7XG4gXHRcdGlmIChwYXJlbnRIb3RVcGRhdGVDYWxsYmFjaykgcGFyZW50SG90VXBkYXRlQ2FsbGJhY2soY2h1bmtJZCwgbW9yZU1vZHVsZXMpO1xuIFx0fSA7XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90RG93bmxvYWRVcGRhdGVDaHVuayhjaHVua0lkKSB7XG4gXHRcdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuIFx0XHRzY3JpcHQuY2hhcnNldCA9IFwidXRmLThcIjtcbiBcdFx0c2NyaXB0LnNyYyA9IF9fd2VicGFja19yZXF1aXJlX18ucCArIFwiXCIgKyBjaHVua0lkICsgXCIuXCIgKyBob3RDdXJyZW50SGFzaCArIFwiLmhvdC11cGRhdGUuanNcIjtcbiBcdFx0aWYgKG51bGwpIHNjcmlwdC5jcm9zc09yaWdpbiA9IG51bGw7XG4gXHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiBcdH1cblxuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHRmdW5jdGlvbiBob3REb3dubG9hZE1hbmlmZXN0KHJlcXVlc3RUaW1lb3V0KSB7XG4gXHRcdHJlcXVlc3RUaW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQgfHwgMTAwMDA7XG4gXHRcdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gXHRcdFx0XHRyZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihcIk5vIGJyb3dzZXIgc3VwcG9ydFwiKSk7XG4gXHRcdFx0fVxuIFx0XHRcdHRyeSB7XG4gXHRcdFx0XHR2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuIFx0XHRcdFx0dmFyIHJlcXVlc3RQYXRoID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgXCJcIiArIGhvdEN1cnJlbnRIYXNoICsgXCIuaG90LXVwZGF0ZS5qc29uXCI7XG4gXHRcdFx0XHRyZXF1ZXN0Lm9wZW4oXCJHRVRcIiwgcmVxdWVzdFBhdGgsIHRydWUpO1xuIFx0XHRcdFx0cmVxdWVzdC50aW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQ7XG4gXHRcdFx0XHRyZXF1ZXN0LnNlbmQobnVsbCk7XG4gXHRcdFx0fSBjYXRjaCAoZXJyKSB7XG4gXHRcdFx0XHRyZXR1cm4gcmVqZWN0KGVycik7XG4gXHRcdFx0fVxuIFx0XHRcdHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG4gXHRcdFx0XHRpZiAocmVxdWVzdC5yZWFkeVN0YXRlICE9PSA0KSByZXR1cm47XG4gXHRcdFx0XHRpZiAocmVxdWVzdC5zdGF0dXMgPT09IDApIHtcbiBcdFx0XHRcdFx0Ly8gdGltZW91dFxuIFx0XHRcdFx0XHRyZWplY3QoXG4gXHRcdFx0XHRcdFx0bmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgdGltZWQgb3V0LlwiKVxuIFx0XHRcdFx0XHQpO1xuIFx0XHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LnN0YXR1cyA9PT0gNDA0KSB7XG4gXHRcdFx0XHRcdC8vIG5vIHVwZGF0ZSBhdmFpbGFibGVcbiBcdFx0XHRcdFx0cmVzb2x2ZSgpO1xuIFx0XHRcdFx0fSBlbHNlIGlmIChyZXF1ZXN0LnN0YXR1cyAhPT0gMjAwICYmIHJlcXVlc3Quc3RhdHVzICE9PSAzMDQpIHtcbiBcdFx0XHRcdFx0Ly8gb3RoZXIgZmFpbHVyZVxuIFx0XHRcdFx0XHRyZWplY3QobmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgZmFpbGVkLlwiKSk7XG4gXHRcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0XHQvLyBzdWNjZXNzXG4gXHRcdFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRcdFx0dmFyIHVwZGF0ZSA9IEpTT04ucGFyc2UocmVxdWVzdC5yZXNwb25zZVRleHQpO1xuIFx0XHRcdFx0XHR9IGNhdGNoIChlKSB7XG4gXHRcdFx0XHRcdFx0cmVqZWN0KGUpO1xuIFx0XHRcdFx0XHRcdHJldHVybjtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRyZXNvbHZlKHVwZGF0ZSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdHZhciBob3RBcHBseU9uVXBkYXRlID0gdHJ1ZTtcbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0dmFyIGhvdEN1cnJlbnRIYXNoID0gXCI1ZDEwYTMzZGM1Y2Y3NDU5ZmEzYVwiO1xuIFx0dmFyIGhvdFJlcXVlc3RUaW1lb3V0ID0gMTAwMDA7XG4gXHR2YXIgaG90Q3VycmVudE1vZHVsZURhdGEgPSB7fTtcbiBcdHZhciBob3RDdXJyZW50Q2hpbGRNb2R1bGU7XG4gXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiBcdHZhciBob3RDdXJyZW50UGFyZW50cyA9IFtdO1xuIFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gXHR2YXIgaG90Q3VycmVudFBhcmVudHNUZW1wID0gW107XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlUmVxdWlyZShtb2R1bGVJZCkge1xuIFx0XHR2YXIgbWUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0aWYgKCFtZSkgcmV0dXJuIF9fd2VicGFja19yZXF1aXJlX187XG4gXHRcdHZhciBmbiA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiBcdFx0XHRpZiAobWUuaG90LmFjdGl2ZSkge1xuIFx0XHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcbiBcdFx0XHRcdFx0aWYgKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0ucGFyZW50cy5pbmRleE9mKG1vZHVsZUlkKSA9PT0gLTEpIHtcbiBcdFx0XHRcdFx0XHRpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHMucHVzaChtb2R1bGVJZCk7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcbiBcdFx0XHRcdFx0aG90Q3VycmVudENoaWxkTW9kdWxlID0gcmVxdWVzdDtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChtZS5jaGlsZHJlbi5pbmRleE9mKHJlcXVlc3QpID09PSAtMSkge1xuIFx0XHRcdFx0XHRtZS5jaGlsZHJlbi5wdXNoKHJlcXVlc3QpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRjb25zb2xlLndhcm4oXG4gXHRcdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICtcbiBcdFx0XHRcdFx0XHRyZXF1ZXN0ICtcbiBcdFx0XHRcdFx0XHRcIikgZnJvbSBkaXNwb3NlZCBtb2R1bGUgXCIgK1xuIFx0XHRcdFx0XHRcdG1vZHVsZUlkXG4gXHRcdFx0XHQpO1xuIFx0XHRcdFx0aG90Q3VycmVudFBhcmVudHMgPSBbXTtcbiBcdFx0XHR9XG4gXHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ocmVxdWVzdCk7XG4gXHRcdH07XG4gXHRcdHZhciBPYmplY3RGYWN0b3J5ID0gZnVuY3Rpb24gT2JqZWN0RmFjdG9yeShuYW1lKSB7XG4gXHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGVudW1lcmFibGU6IHRydWUsXG4gXHRcdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuIFx0XHRcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfX1tuYW1lXTtcbiBcdFx0XHRcdH0sXG4gXHRcdFx0XHRzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gXHRcdFx0XHRcdF9fd2VicGFja19yZXF1aXJlX19bbmFtZV0gPSB2YWx1ZTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9O1xuIFx0XHR9O1xuIFx0XHRmb3IgKHZhciBuYW1lIGluIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiBcdFx0XHRpZiAoXG4gXHRcdFx0XHRPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoX193ZWJwYWNrX3JlcXVpcmVfXywgbmFtZSkgJiZcbiBcdFx0XHRcdG5hbWUgIT09IFwiZVwiICYmXG4gXHRcdFx0XHRuYW1lICE9PSBcInRcIlxuIFx0XHRcdCkge1xuIFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGZuLCBuYW1lLCBPYmplY3RGYWN0b3J5KG5hbWUpKTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0Zm4uZSA9IGZ1bmN0aW9uKGNodW5rSWQpIHtcbiBcdFx0XHRpZiAoaG90U3RhdHVzID09PSBcInJlYWR5XCIpIGhvdFNldFN0YXR1cyhcInByZXBhcmVcIik7XG4gXHRcdFx0aG90Q2h1bmtzTG9hZGluZysrO1xuIFx0XHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLmUoY2h1bmtJZCkudGhlbihmaW5pc2hDaHVua0xvYWRpbmcsIGZ1bmN0aW9uKGVycikge1xuIFx0XHRcdFx0ZmluaXNoQ2h1bmtMb2FkaW5nKCk7XG4gXHRcdFx0XHR0aHJvdyBlcnI7XG4gXHRcdFx0fSk7XG5cbiBcdFx0XHRmdW5jdGlvbiBmaW5pc2hDaHVua0xvYWRpbmcoKSB7XG4gXHRcdFx0XHRob3RDaHVua3NMb2FkaW5nLS07XG4gXHRcdFx0XHRpZiAoaG90U3RhdHVzID09PSBcInByZXBhcmVcIikge1xuIFx0XHRcdFx0XHRpZiAoIWhvdFdhaXRpbmdGaWxlc01hcFtjaHVua0lkXSkge1xuIFx0XHRcdFx0XHRcdGhvdEVuc3VyZVVwZGF0ZUNodW5rKGNodW5rSWQpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmIChob3RDaHVua3NMb2FkaW5nID09PSAwICYmIGhvdFdhaXRpbmdGaWxlcyA9PT0gMCkge1xuIFx0XHRcdFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fTtcbiBcdFx0Zm4udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdFx0aWYgKG1vZGUgJiAxKSB2YWx1ZSA9IGZuKHZhbHVlKTtcbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy50KHZhbHVlLCBtb2RlICYgfjEpO1xuIFx0XHR9O1xuIFx0XHRyZXR1cm4gZm47XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSB7XG4gXHRcdHZhciBob3QgPSB7XG4gXHRcdFx0Ly8gcHJpdmF0ZSBzdHVmZlxuIFx0XHRcdF9hY2NlcHRlZERlcGVuZGVuY2llczoge30sXG4gXHRcdFx0X2RlY2xpbmVkRGVwZW5kZW5jaWVzOiB7fSxcbiBcdFx0XHRfc2VsZkFjY2VwdGVkOiBmYWxzZSxcbiBcdFx0XHRfc2VsZkRlY2xpbmVkOiBmYWxzZSxcbiBcdFx0XHRfc2VsZkludmFsaWRhdGVkOiBmYWxzZSxcbiBcdFx0XHRfZGlzcG9zZUhhbmRsZXJzOiBbXSxcbiBcdFx0XHRfbWFpbjogaG90Q3VycmVudENoaWxkTW9kdWxlICE9PSBtb2R1bGVJZCxcblxuIFx0XHRcdC8vIE1vZHVsZSBBUElcbiBcdFx0XHRhY3RpdmU6IHRydWUsXG4gXHRcdFx0YWNjZXB0OiBmdW5jdGlvbihkZXAsIGNhbGxiYWNrKSB7XG4gXHRcdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkFjY2VwdGVkID0gdHJ1ZTtcbiBcdFx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwiZnVuY3Rpb25cIikgaG90Ll9zZWxmQWNjZXB0ZWQgPSBkZXA7XG4gXHRcdFx0XHRlbHNlIGlmICh0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKVxuIFx0XHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGRlcC5sZW5ndGg7IGkrKylcbiBcdFx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xuIFx0XHRcdFx0ZWxzZSBob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcF0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xuIFx0XHRcdH0sXG4gXHRcdFx0ZGVjbGluZTogZnVuY3Rpb24oZGVwKSB7XG4gXHRcdFx0XHRpZiAoZGVwID09PSB1bmRlZmluZWQpIGhvdC5fc2VsZkRlY2xpbmVkID0gdHJ1ZTtcbiBcdFx0XHRcdGVsc2UgaWYgKHR5cGVvZiBkZXAgPT09IFwib2JqZWN0XCIpXG4gXHRcdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxuIFx0XHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwW2ldXSA9IHRydWU7XG4gXHRcdFx0XHRlbHNlIGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XG4gXHRcdFx0fSxcbiBcdFx0XHRkaXNwb3NlOiBmdW5jdGlvbihjYWxsYmFjaykge1xuIFx0XHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XG4gXHRcdFx0fSxcbiBcdFx0XHRhZGREaXNwb3NlSGFuZGxlcjogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiBcdFx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xuIFx0XHRcdH0sXG4gXHRcdFx0cmVtb3ZlRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XG4gXHRcdFx0XHRpZiAoaWR4ID49IDApIGhvdC5fZGlzcG9zZUhhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xuIFx0XHRcdH0sXG4gXHRcdFx0aW52YWxpZGF0ZTogZnVuY3Rpb24oKSB7XG4gXHRcdFx0XHR0aGlzLl9zZWxmSW52YWxpZGF0ZWQgPSB0cnVlO1xuIFx0XHRcdFx0c3dpdGNoIChob3RTdGF0dXMpIHtcbiBcdFx0XHRcdFx0Y2FzZSBcImlkbGVcIjpcbiBcdFx0XHRcdFx0XHRob3RVcGRhdGUgPSB7fTtcbiBcdFx0XHRcdFx0XHRob3RVcGRhdGVbbW9kdWxlSWRdID0gbW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdFx0aG90U2V0U3RhdHVzKFwicmVhZHlcIik7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJyZWFkeVwiOlxuIFx0XHRcdFx0XHRcdGhvdEFwcGx5SW52YWxpZGF0ZWRNb2R1bGUobW9kdWxlSWQpO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRjYXNlIFwicHJlcGFyZVwiOlxuIFx0XHRcdFx0XHRjYXNlIFwiY2hlY2tcIjpcbiBcdFx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VcIjpcbiBcdFx0XHRcdFx0Y2FzZSBcImFwcGx5XCI6XG4gXHRcdFx0XHRcdFx0KGhvdFF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcyA9XG4gXHRcdFx0XHRcdFx0XHRob3RRdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgfHwgW10pLnB1c2gobW9kdWxlSWQpO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRkZWZhdWx0OlxuIFx0XHRcdFx0XHRcdC8vIGlnbm9yZSByZXF1ZXN0cyBpbiBlcnJvciBzdGF0ZXNcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdH1cbiBcdFx0XHR9LFxuXG4gXHRcdFx0Ly8gTWFuYWdlbWVudCBBUElcbiBcdFx0XHRjaGVjazogaG90Q2hlY2ssXG4gXHRcdFx0YXBwbHk6IGhvdEFwcGx5LFxuIFx0XHRcdHN0YXR1czogZnVuY3Rpb24obCkge1xuIFx0XHRcdFx0aWYgKCFsKSByZXR1cm4gaG90U3RhdHVzO1xuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcbiBcdFx0XHR9LFxuIFx0XHRcdGFkZFN0YXR1c0hhbmRsZXI6IGZ1bmN0aW9uKGwpIHtcbiBcdFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XG4gXHRcdFx0fSxcbiBcdFx0XHRyZW1vdmVTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbihsKSB7XG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90U3RhdHVzSGFuZGxlcnMuaW5kZXhPZihsKTtcbiBcdFx0XHRcdGlmIChpZHggPj0gMCkgaG90U3RhdHVzSGFuZGxlcnMuc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0fSxcblxuIFx0XHRcdC8vaW5oZXJpdCBmcm9tIHByZXZpb3VzIGRpc3Bvc2UgY2FsbFxuIFx0XHRcdGRhdGE6IGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxuIFx0XHR9O1xuIFx0XHRob3RDdXJyZW50Q2hpbGRNb2R1bGUgPSB1bmRlZmluZWQ7XG4gXHRcdHJldHVybiBob3Q7XG4gXHR9XG5cbiBcdHZhciBob3RTdGF0dXNIYW5kbGVycyA9IFtdO1xuIFx0dmFyIGhvdFN0YXR1cyA9IFwiaWRsZVwiO1xuXG4gXHRmdW5jdGlvbiBob3RTZXRTdGF0dXMobmV3U3RhdHVzKSB7XG4gXHRcdGhvdFN0YXR1cyA9IG5ld1N0YXR1cztcbiBcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBob3RTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcbiBcdFx0XHRob3RTdGF0dXNIYW5kbGVyc1tpXS5jYWxsKG51bGwsIG5ld1N0YXR1cyk7XG4gXHR9XG5cbiBcdC8vIHdoaWxlIGRvd25sb2FkaW5nXG4gXHR2YXIgaG90V2FpdGluZ0ZpbGVzID0gMDtcbiBcdHZhciBob3RDaHVua3NMb2FkaW5nID0gMDtcbiBcdHZhciBob3RXYWl0aW5nRmlsZXNNYXAgPSB7fTtcbiBcdHZhciBob3RSZXF1ZXN0ZWRGaWxlc01hcCA9IHt9O1xuIFx0dmFyIGhvdEF2YWlsYWJsZUZpbGVzTWFwID0ge307XG4gXHR2YXIgaG90RGVmZXJyZWQ7XG5cbiBcdC8vIFRoZSB1cGRhdGUgaW5mb1xuIFx0dmFyIGhvdFVwZGF0ZSwgaG90VXBkYXRlTmV3SGFzaCwgaG90UXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzO1xuXG4gXHRmdW5jdGlvbiB0b01vZHVsZUlkKGlkKSB7XG4gXHRcdHZhciBpc051bWJlciA9ICtpZCArIFwiXCIgPT09IGlkO1xuIFx0XHRyZXR1cm4gaXNOdW1iZXIgPyAraWQgOiBpZDtcbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90Q2hlY2soYXBwbHkpIHtcbiBcdFx0aWYgKGhvdFN0YXR1cyAhPT0gXCJpZGxlXCIpIHtcbiBcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJjaGVjaygpIGlzIG9ubHkgYWxsb3dlZCBpbiBpZGxlIHN0YXR1c1wiKTtcbiBcdFx0fVxuIFx0XHRob3RBcHBseU9uVXBkYXRlID0gYXBwbHk7XG4gXHRcdGhvdFNldFN0YXR1cyhcImNoZWNrXCIpO1xuIFx0XHRyZXR1cm4gaG90RG93bmxvYWRNYW5pZmVzdChob3RSZXF1ZXN0VGltZW91dCkudGhlbihmdW5jdGlvbih1cGRhdGUpIHtcbiBcdFx0XHRpZiAoIXVwZGF0ZSkge1xuIFx0XHRcdFx0aG90U2V0U3RhdHVzKGhvdEFwcGx5SW52YWxpZGF0ZWRNb2R1bGVzKCkgPyBcInJlYWR5XCIgOiBcImlkbGVcIik7XG4gXHRcdFx0XHRyZXR1cm4gbnVsbDtcbiBcdFx0XHR9XG4gXHRcdFx0aG90UmVxdWVzdGVkRmlsZXNNYXAgPSB7fTtcbiBcdFx0XHRob3RXYWl0aW5nRmlsZXNNYXAgPSB7fTtcbiBcdFx0XHRob3RBdmFpbGFibGVGaWxlc01hcCA9IHVwZGF0ZS5jO1xuIFx0XHRcdGhvdFVwZGF0ZU5ld0hhc2ggPSB1cGRhdGUuaDtcblxuIFx0XHRcdGhvdFNldFN0YXR1cyhcInByZXBhcmVcIik7XG4gXHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRcdGhvdERlZmVycmVkID0ge1xuIFx0XHRcdFx0XHRyZXNvbHZlOiByZXNvbHZlLFxuIFx0XHRcdFx0XHRyZWplY3Q6IHJlamVjdFxuIFx0XHRcdFx0fTtcbiBcdFx0XHR9KTtcbiBcdFx0XHRob3RVcGRhdGUgPSB7fTtcbiBcdFx0XHR2YXIgY2h1bmtJZCA9IDA7XG4gXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWxvbmUtYmxvY2tzXG4gXHRcdFx0e1xuIFx0XHRcdFx0aG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0fVxuIFx0XHRcdGlmIChcbiBcdFx0XHRcdGhvdFN0YXR1cyA9PT0gXCJwcmVwYXJlXCIgJiZcbiBcdFx0XHRcdGhvdENodW5rc0xvYWRpbmcgPT09IDAgJiZcbiBcdFx0XHRcdGhvdFdhaXRpbmdGaWxlcyA9PT0gMFxuIFx0XHRcdCkge1xuIFx0XHRcdFx0aG90VXBkYXRlRG93bmxvYWRlZCgpO1xuIFx0XHRcdH1cbiBcdFx0XHRyZXR1cm4gcHJvbWlzZTtcbiBcdFx0fSk7XG4gXHR9XG5cbiBcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuIFx0ZnVuY3Rpb24gaG90QWRkVXBkYXRlQ2h1bmsoY2h1bmtJZCwgbW9yZU1vZHVsZXMpIHtcbiBcdFx0aWYgKCFob3RBdmFpbGFibGVGaWxlc01hcFtjaHVua0lkXSB8fCAhaG90UmVxdWVzdGVkRmlsZXNNYXBbY2h1bmtJZF0pXG4gXHRcdFx0cmV0dXJuO1xuIFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IGZhbHNlO1xuIFx0XHRmb3IgKHZhciBtb2R1bGVJZCBpbiBtb3JlTW9kdWxlcykge1xuIFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuIFx0XHRcdFx0aG90VXBkYXRlW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0aWYgKC0taG90V2FpdGluZ0ZpbGVzID09PSAwICYmIGhvdENodW5rc0xvYWRpbmcgPT09IDApIHtcbiBcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHRpZiAoIWhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdKSB7XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzTWFwW2NodW5rSWRdID0gdHJ1ZTtcbiBcdFx0fSBlbHNlIHtcbiBcdFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IHRydWU7XG4gXHRcdFx0aG90V2FpdGluZ0ZpbGVzKys7XG4gXHRcdFx0aG90RG93bmxvYWRVcGRhdGVDaHVuayhjaHVua0lkKTtcbiBcdFx0fVxuIFx0fVxuXG4gXHRmdW5jdGlvbiBob3RVcGRhdGVEb3dubG9hZGVkKCkge1xuIFx0XHRob3RTZXRTdGF0dXMoXCJyZWFkeVwiKTtcbiBcdFx0dmFyIGRlZmVycmVkID0gaG90RGVmZXJyZWQ7XG4gXHRcdGhvdERlZmVycmVkID0gbnVsbDtcbiBcdFx0aWYgKCFkZWZlcnJlZCkgcmV0dXJuO1xuIFx0XHRpZiAoaG90QXBwbHlPblVwZGF0ZSkge1xuIFx0XHRcdC8vIFdyYXAgZGVmZXJyZWQgb2JqZWN0IGluIFByb21pc2UgdG8gbWFyayBpdCBhcyBhIHdlbGwtaGFuZGxlZCBQcm9taXNlIHRvXG4gXHRcdFx0Ly8gYXZvaWQgdHJpZ2dlcmluZyB1bmNhdWdodCBleGNlcHRpb24gd2FybmluZyBpbiBDaHJvbWUuXG4gXHRcdFx0Ly8gU2VlIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ2NTY2NlxuIFx0XHRcdFByb21pc2UucmVzb2x2ZSgpXG4gXHRcdFx0XHQudGhlbihmdW5jdGlvbigpIHtcbiBcdFx0XHRcdFx0cmV0dXJuIGhvdEFwcGx5KGhvdEFwcGx5T25VcGRhdGUpO1xuIFx0XHRcdFx0fSlcbiBcdFx0XHRcdC50aGVuKFxuIFx0XHRcdFx0XHRmdW5jdGlvbihyZXN1bHQpIHtcbiBcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKHJlc3VsdCk7XG4gXHRcdFx0XHRcdH0sXG4gXHRcdFx0XHRcdGZ1bmN0aW9uKGVycikge1xuIFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdChlcnIpO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHQpO1xuIFx0XHR9IGVsc2Uge1xuIFx0XHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcbiBcdFx0XHRmb3IgKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcbiBcdFx0XHRcdGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaG90VXBkYXRlLCBpZCkpIHtcbiBcdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2godG9Nb2R1bGVJZChpZCkpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0XHRkZWZlcnJlZC5yZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90QXBwbHkob3B0aW9ucykge1xuIFx0XHRpZiAoaG90U3RhdHVzICE9PSBcInJlYWR5XCIpXG4gXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiYXBwbHkoKSBpcyBvbmx5IGFsbG93ZWQgaW4gcmVhZHkgc3RhdHVzXCIpO1xuIFx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiBcdFx0cmV0dXJuIGhvdEFwcGx5SW50ZXJuYWwob3B0aW9ucyk7XG4gXHR9XG5cbiBcdGZ1bmN0aW9uIGhvdEFwcGx5SW50ZXJuYWwob3B0aW9ucykge1xuIFx0XHRob3RBcHBseUludmFsaWRhdGVkTW9kdWxlcygpO1xuXG4gXHRcdHZhciBjYjtcbiBcdFx0dmFyIGk7XG4gXHRcdHZhciBqO1xuIFx0XHR2YXIgbW9kdWxlO1xuIFx0XHR2YXIgbW9kdWxlSWQ7XG5cbiBcdFx0ZnVuY3Rpb24gZ2V0QWZmZWN0ZWRTdHVmZih1cGRhdGVNb2R1bGVJZCkge1xuIFx0XHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbdXBkYXRlTW9kdWxlSWRdO1xuIFx0XHRcdHZhciBvdXRkYXRlZERlcGVuZGVuY2llcyA9IHt9O1xuXG4gXHRcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLm1hcChmdW5jdGlvbihpZCkge1xuIFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0Y2hhaW46IFtpZF0sXG4gXHRcdFx0XHRcdGlkOiBpZFxuIFx0XHRcdFx0fTtcbiBcdFx0XHR9KTtcbiBcdFx0XHR3aGlsZSAocXVldWUubGVuZ3RoID4gMCkge1xuIFx0XHRcdFx0dmFyIHF1ZXVlSXRlbSA9IHF1ZXVlLnBvcCgpO1xuIFx0XHRcdFx0dmFyIG1vZHVsZUlkID0gcXVldWVJdGVtLmlkO1xuIFx0XHRcdFx0dmFyIGNoYWluID0gcXVldWVJdGVtLmNoYWluO1xuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRpZiAoXG4gXHRcdFx0XHRcdCFtb2R1bGUgfHxcbiBcdFx0XHRcdFx0KG1vZHVsZS5ob3QuX3NlbGZBY2NlcHRlZCAmJiAhbW9kdWxlLmhvdC5fc2VsZkludmFsaWRhdGVkKVxuIFx0XHRcdFx0KVxuIFx0XHRcdFx0XHRjb250aW51ZTtcbiBcdFx0XHRcdGlmIChtb2R1bGUuaG90Ll9zZWxmRGVjbGluZWQpIHtcbiBcdFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtZGVjbGluZWRcIixcbiBcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4sXG4gXHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkXG4gXHRcdFx0XHRcdH07XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAobW9kdWxlLmhvdC5fbWFpbikge1xuIFx0XHRcdFx0XHRyZXR1cm4ge1xuIFx0XHRcdFx0XHRcdHR5cGU6IFwidW5hY2NlcHRlZFwiLFxuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbixcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWRcbiBcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbW9kdWxlLnBhcmVudHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0dmFyIHBhcmVudElkID0gbW9kdWxlLnBhcmVudHNbaV07XG4gXHRcdFx0XHRcdHZhciBwYXJlbnQgPSBpbnN0YWxsZWRNb2R1bGVzW3BhcmVudElkXTtcbiBcdFx0XHRcdFx0aWYgKCFwYXJlbnQpIGNvbnRpbnVlO1xuIFx0XHRcdFx0XHRpZiAocGFyZW50LmhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0XHRcdFx0cmV0dXJuIHtcbiBcdFx0XHRcdFx0XHRcdHR5cGU6IFwiZGVjbGluZWRcIixcbiBcdFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG4gXHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdFx0XHRwYXJlbnRJZDogcGFyZW50SWRcbiBcdFx0XHRcdFx0XHR9O1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmIChvdXRkYXRlZE1vZHVsZXMuaW5kZXhPZihwYXJlbnRJZCkgIT09IC0xKSBjb250aW51ZTtcbiBcdFx0XHRcdFx0aWYgKHBhcmVudC5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xuIFx0XHRcdFx0XHRcdGlmICghb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdKVxuIFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdID0gW107XG4gXHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdLCBbbW9kdWxlSWRdKTtcbiBcdFx0XHRcdFx0XHRjb250aW51ZTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdO1xuIFx0XHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMucHVzaChwYXJlbnRJZCk7XG4gXHRcdFx0XHRcdHF1ZXVlLnB1c2goe1xuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbi5jb25jYXQoW3BhcmVudElkXSksXG4gXHRcdFx0XHRcdFx0aWQ6IHBhcmVudElkXG4gXHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cblxuIFx0XHRcdHJldHVybiB7XG4gXHRcdFx0XHR0eXBlOiBcImFjY2VwdGVkXCIsXG4gXHRcdFx0XHRtb2R1bGVJZDogdXBkYXRlTW9kdWxlSWQsXG4gXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXM6IG91dGRhdGVkTW9kdWxlcyxcbiBcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzOiBvdXRkYXRlZERlcGVuZGVuY2llc1xuIFx0XHRcdH07XG4gXHRcdH1cblxuIFx0XHRmdW5jdGlvbiBhZGRBbGxUb1NldChhLCBiKSB7XG4gXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBiLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0XHR2YXIgaXRlbSA9IGJbaV07XG4gXHRcdFx0XHRpZiAoYS5pbmRleE9mKGl0ZW0pID09PSAtMSkgYS5wdXNoKGl0ZW0pO1xuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIGF0IGJlZ2luIGFsbCB1cGRhdGVzIG1vZHVsZXMgYXJlIG91dGRhdGVkXG4gXHRcdC8vIHRoZSBcIm91dGRhdGVkXCIgc3RhdHVzIGNhbiBwcm9wYWdhdGUgdG8gcGFyZW50cyBpZiB0aGV5IGRvbid0IGFjY2VwdCB0aGUgY2hpbGRyZW5cbiBcdFx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XG4gXHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcbiBcdFx0dmFyIGFwcGxpZWRVcGRhdGUgPSB7fTtcblxuIFx0XHR2YXIgd2FyblVuZXhwZWN0ZWRSZXF1aXJlID0gZnVuY3Rpb24gd2FyblVuZXhwZWN0ZWRSZXF1aXJlKCkge1xuIFx0XHRcdGNvbnNvbGUud2FybihcbiBcdFx0XHRcdFwiW0hNUl0gdW5leHBlY3RlZCByZXF1aXJlKFwiICsgcmVzdWx0Lm1vZHVsZUlkICsgXCIpIHRvIGRpc3Bvc2VkIG1vZHVsZVwiXG4gXHRcdFx0KTtcbiBcdFx0fTtcblxuIFx0XHRmb3IgKHZhciBpZCBpbiBob3RVcGRhdGUpIHtcbiBcdFx0XHRpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGhvdFVwZGF0ZSwgaWQpKSB7XG4gXHRcdFx0XHRtb2R1bGVJZCA9IHRvTW9kdWxlSWQoaWQpO1xuIFx0XHRcdFx0LyoqIEB0eXBlIHtUT0RPfSAqL1xuIFx0XHRcdFx0dmFyIHJlc3VsdDtcbiBcdFx0XHRcdGlmIChob3RVcGRhdGVbaWRdKSB7XG4gXHRcdFx0XHRcdHJlc3VsdCA9IGdldEFmZmVjdGVkU3R1ZmYobW9kdWxlSWQpO1xuIFx0XHRcdFx0fSBlbHNlIHtcbiBcdFx0XHRcdFx0cmVzdWx0ID0ge1xuIFx0XHRcdFx0XHRcdHR5cGU6IFwiZGlzcG9zZWRcIixcbiBcdFx0XHRcdFx0XHRtb2R1bGVJZDogaWRcbiBcdFx0XHRcdFx0fTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdC8qKiBAdHlwZSB7RXJyb3J8ZmFsc2V9ICovXG4gXHRcdFx0XHR2YXIgYWJvcnRFcnJvciA9IGZhbHNlO1xuIFx0XHRcdFx0dmFyIGRvQXBwbHkgPSBmYWxzZTtcbiBcdFx0XHRcdHZhciBkb0Rpc3Bvc2UgPSBmYWxzZTtcbiBcdFx0XHRcdHZhciBjaGFpbkluZm8gPSBcIlwiO1xuIFx0XHRcdFx0aWYgKHJlc3VsdC5jaGFpbikge1xuIFx0XHRcdFx0XHRjaGFpbkluZm8gPSBcIlxcblVwZGF0ZSBwcm9wYWdhdGlvbjogXCIgKyByZXN1bHQuY2hhaW4uam9pbihcIiAtPiBcIik7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRzd2l0Y2ggKHJlc3VsdC50eXBlKSB7XG4gXHRcdFx0XHRcdGNhc2UgXCJzZWxmLWRlY2xpbmVkXCI6XG4gXHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25EZWNsaW5lZCkgb3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZURlY2xpbmVkKVxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcbiBcdFx0XHRcdFx0XHRcdFx0XCJBYm9ydGVkIGJlY2F1c2Ugb2Ygc2VsZiBkZWNsaW5lOiBcIiArXG4gXHRcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm1vZHVsZUlkICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRjaGFpbkluZm9cbiBcdFx0XHRcdFx0XHRcdCk7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJkZWNsaW5lZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRGVjbGluZWQpIG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXG4gXHRcdFx0XHRcdFx0XHRcdFwiQWJvcnRlZCBiZWNhdXNlIG9mIGRlY2xpbmVkIGRlcGVuZGVuY3k6IFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQubW9kdWxlSWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdFwiIGluIFwiICtcbiBcdFx0XHRcdFx0XHRcdFx0XHRyZXN1bHQucGFyZW50SWQgK1xuIFx0XHRcdFx0XHRcdFx0XHRcdGNoYWluSW5mb1xuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHRicmVhaztcbiBcdFx0XHRcdFx0Y2FzZSBcInVuYWNjZXB0ZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vblVuYWNjZXB0ZWQpIG9wdGlvbnMub25VbmFjY2VwdGVkKHJlc3VsdCk7XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZVVuYWNjZXB0ZWQpXG4gXHRcdFx0XHRcdFx0XHRhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuIFx0XHRcdFx0XHRcdFx0XHRcIkFib3J0ZWQgYmVjYXVzZSBcIiArIG1vZHVsZUlkICsgXCIgaXMgbm90IGFjY2VwdGVkXCIgKyBjaGFpbkluZm9cbiBcdFx0XHRcdFx0XHRcdCk7XG4gXHRcdFx0XHRcdFx0YnJlYWs7XG4gXHRcdFx0XHRcdGNhc2UgXCJhY2NlcHRlZFwiOlxuIFx0XHRcdFx0XHRcdGlmIChvcHRpb25zLm9uQWNjZXB0ZWQpIG9wdGlvbnMub25BY2NlcHRlZChyZXN1bHQpO1xuIFx0XHRcdFx0XHRcdGRvQXBwbHkgPSB0cnVlO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRjYXNlIFwiZGlzcG9zZWRcIjpcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkRpc3Bvc2VkKSBvcHRpb25zLm9uRGlzcG9zZWQocmVzdWx0KTtcbiBcdFx0XHRcdFx0XHRkb0Rpc3Bvc2UgPSB0cnVlO1xuIFx0XHRcdFx0XHRcdGJyZWFrO1xuIFx0XHRcdFx0XHRkZWZhdWx0OlxuIFx0XHRcdFx0XHRcdHRocm93IG5ldyBFcnJvcihcIlVuZXhjZXB0aW9uIHR5cGUgXCIgKyByZXN1bHQudHlwZSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0XHRpZiAoYWJvcnRFcnJvcikge1xuIFx0XHRcdFx0XHRob3RTZXRTdGF0dXMoXCJhYm9ydFwiKTtcbiBcdFx0XHRcdFx0cmV0dXJuIFByb21pc2UucmVqZWN0KGFib3J0RXJyb3IpO1xuIFx0XHRcdFx0fVxuIFx0XHRcdFx0aWYgKGRvQXBwbHkpIHtcbiBcdFx0XHRcdFx0YXBwbGllZFVwZGF0ZVttb2R1bGVJZF0gPSBob3RVcGRhdGVbbW9kdWxlSWRdO1xuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xuIFx0XHRcdFx0XHRmb3IgKG1vZHVsZUlkIGluIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdFx0XHRcdGlmIChcbiBcdFx0XHRcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChcbiBcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzLFxuIFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZFxuIFx0XHRcdFx0XHRcdFx0KVxuIFx0XHRcdFx0XHRcdCkge1xuIFx0XHRcdFx0XHRcdFx0aWYgKCFvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSA9IFtdO1xuIFx0XHRcdFx0XHRcdFx0YWRkQWxsVG9TZXQoXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSxcbiBcdFx0XHRcdFx0XHRcdFx0cmVzdWx0Lm91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXVxuIFx0XHRcdFx0XHRcdFx0KTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHRcdGlmIChkb0Rpc3Bvc2UpIHtcbiBcdFx0XHRcdFx0YWRkQWxsVG9TZXQob3V0ZGF0ZWRNb2R1bGVzLCBbcmVzdWx0Lm1vZHVsZUlkXSk7XG4gXHRcdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlO1xuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIFN0b3JlIHNlbGYgYWNjZXB0ZWQgb3V0ZGF0ZWQgbW9kdWxlcyB0byByZXF1aXJlIHRoZW0gbGF0ZXIgYnkgdGhlIG1vZHVsZSBzeXN0ZW1cbiBcdFx0dmFyIG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcyA9IFtdO1xuIFx0XHRmb3IgKGkgPSAwOyBpIDwgb3V0ZGF0ZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0bW9kdWxlSWQgPSBvdXRkYXRlZE1vZHVsZXNbaV07XG4gXHRcdFx0aWYgKFxuIFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gJiZcbiBcdFx0XHRcdGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmhvdC5fc2VsZkFjY2VwdGVkICYmXG4gXHRcdFx0XHQvLyByZW1vdmVkIHNlbGYtYWNjZXB0ZWQgbW9kdWxlcyBzaG91bGQgbm90IGJlIHJlcXVpcmVkXG4gXHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSAhPT0gd2FyblVuZXhwZWN0ZWRSZXF1aXJlICYmXG4gXHRcdFx0XHQvLyB3aGVuIGNhbGxlZCBpbnZhbGlkYXRlIHNlbGYtYWNjZXB0aW5nIGlzIG5vdCBwb3NzaWJsZVxuIFx0XHRcdFx0IWluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmhvdC5fc2VsZkludmFsaWRhdGVkXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMucHVzaCh7XG4gXHRcdFx0XHRcdG1vZHVsZTogbW9kdWxlSWQsXG4gXHRcdFx0XHRcdHBhcmVudHM6IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLnBhcmVudHMuc2xpY2UoKSxcbiBcdFx0XHRcdFx0ZXJyb3JIYW5kbGVyOiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5ob3QuX3NlbGZBY2NlcHRlZFxuIFx0XHRcdFx0fSk7XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gTm93IGluIFwiZGlzcG9zZVwiIHBoYXNlXG4gXHRcdGhvdFNldFN0YXR1cyhcImRpc3Bvc2VcIik7XG4gXHRcdE9iamVjdC5rZXlzKGhvdEF2YWlsYWJsZUZpbGVzTWFwKS5mb3JFYWNoKGZ1bmN0aW9uKGNodW5rSWQpIHtcbiBcdFx0XHRpZiAoaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0gPT09IGZhbHNlKSB7XG4gXHRcdFx0XHRob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCk7XG4gXHRcdFx0fVxuIFx0XHR9KTtcblxuIFx0XHR2YXIgaWR4O1xuIFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKTtcbiBcdFx0d2hpbGUgKHF1ZXVlLmxlbmd0aCA+IDApIHtcbiBcdFx0XHRtb2R1bGVJZCA9IHF1ZXVlLnBvcCgpO1xuIFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdGlmICghbW9kdWxlKSBjb250aW51ZTtcblxuIFx0XHRcdHZhciBkYXRhID0ge307XG5cbiBcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcbiBcdFx0XHR2YXIgZGlzcG9zZUhhbmRsZXJzID0gbW9kdWxlLmhvdC5fZGlzcG9zZUhhbmRsZXJzO1xuIFx0XHRcdGZvciAoaiA9IDA7IGogPCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBqKyspIHtcbiBcdFx0XHRcdGNiID0gZGlzcG9zZUhhbmRsZXJzW2pdO1xuIFx0XHRcdFx0Y2IoZGF0YSk7XG4gXHRcdFx0fVxuIFx0XHRcdGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXSA9IGRhdGE7XG5cbiBcdFx0XHQvLyBkaXNhYmxlIG1vZHVsZSAodGhpcyBkaXNhYmxlcyByZXF1aXJlcyBmcm9tIHRoaXMgbW9kdWxlKVxuIFx0XHRcdG1vZHVsZS5ob3QuYWN0aXZlID0gZmFsc2U7XG5cbiBcdFx0XHQvLyByZW1vdmUgbW9kdWxlIGZyb20gY2FjaGVcbiBcdFx0XHRkZWxldGUgaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XG5cbiBcdFx0XHQvLyB3aGVuIGRpc3Bvc2luZyB0aGVyZSBpcyBubyBuZWVkIHRvIGNhbGwgZGlzcG9zZSBoYW5kbGVyXG4gXHRcdFx0ZGVsZXRlIG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcblxuIFx0XHRcdC8vIHJlbW92ZSBcInBhcmVudHNcIiByZWZlcmVuY2VzIGZyb20gYWxsIGNoaWxkcmVuXG4gXHRcdFx0Zm9yIChqID0gMDsgaiA8IG1vZHVsZS5jaGlsZHJlbi5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0dmFyIGNoaWxkID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGUuY2hpbGRyZW5bal1dO1xuIFx0XHRcdFx0aWYgKCFjaGlsZCkgY29udGludWU7XG4gXHRcdFx0XHRpZHggPSBjaGlsZC5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpO1xuIFx0XHRcdFx0aWYgKGlkeCA+PSAwKSB7XG4gXHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XG4gXHRcdFx0XHR9XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gcmVtb3ZlIG91dGRhdGVkIGRlcGVuZGVuY3kgZnJvbSBtb2R1bGUgY2hpbGRyZW5cbiBcdFx0dmFyIGRlcGVuZGVuY3k7XG4gXHRcdHZhciBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcztcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmIChtb2R1bGUpIHtcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcy5sZW5ndGg7IGorKykge1xuIFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tqXTtcbiBcdFx0XHRcdFx0XHRpZHggPSBtb2R1bGUuY2hpbGRyZW4uaW5kZXhPZihkZXBlbmRlbmN5KTtcbiBcdFx0XHRcdFx0XHRpZiAoaWR4ID49IDApIG1vZHVsZS5jaGlsZHJlbi5zcGxpY2UoaWR4LCAxKTtcbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIE5vdyBpbiBcImFwcGx5XCIgcGhhc2VcbiBcdFx0aG90U2V0U3RhdHVzKFwiYXBwbHlcIik7XG5cbiBcdFx0aWYgKGhvdFVwZGF0ZU5ld0hhc2ggIT09IHVuZGVmaW5lZCkge1xuIFx0XHRcdGhvdEN1cnJlbnRIYXNoID0gaG90VXBkYXRlTmV3SGFzaDtcbiBcdFx0XHRob3RVcGRhdGVOZXdIYXNoID0gdW5kZWZpbmVkO1xuIFx0XHR9XG4gXHRcdGhvdFVwZGF0ZSA9IHVuZGVmaW5lZDtcblxuIFx0XHQvLyBpbnNlcnQgbmV3IGNvZGVcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBhcHBsaWVkVXBkYXRlKSB7XG4gXHRcdFx0aWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcHBsaWVkVXBkYXRlLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gYXBwbGllZFVwZGF0ZVttb2R1bGVJZF07XG4gXHRcdFx0fVxuIFx0XHR9XG5cbiBcdFx0Ly8gY2FsbCBhY2NlcHQgaGFuZGxlcnNcbiBcdFx0dmFyIGVycm9yID0gbnVsbDtcbiBcdFx0Zm9yIChtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xuIFx0XHRcdGlmIChcbiBcdFx0XHRcdE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpXG4gXHRcdFx0KSB7XG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHRcdGlmIChtb2R1bGUpIHtcbiBcdFx0XHRcdFx0bW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSBvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF07XG4gXHRcdFx0XHRcdHZhciBjYWxsYmFja3MgPSBbXTtcbiBcdFx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaSsrKSB7XG4gXHRcdFx0XHRcdFx0ZGVwZW5kZW5jeSA9IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzW2ldO1xuIFx0XHRcdFx0XHRcdGNiID0gbW9kdWxlLmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwZW5kZW5jeV07XG4gXHRcdFx0XHRcdFx0aWYgKGNiKSB7XG4gXHRcdFx0XHRcdFx0XHRpZiAoY2FsbGJhY2tzLmluZGV4T2YoY2IpICE9PSAtMSkgY29udGludWU7XG4gXHRcdFx0XHRcdFx0XHRjYWxsYmFja3MucHVzaChjYik7XG4gXHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBjYWxsYmFja3MubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRcdFx0XHRjYiA9IGNhbGxiYWNrc1tpXTtcbiBcdFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdFx0Y2IobW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMpO1xuIFx0XHRcdFx0XHRcdH0gY2F0Y2ggKGVycikge1xuIFx0XHRcdFx0XHRcdFx0aWYgKG9wdGlvbnMub25FcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdFx0XHR0eXBlOiBcImFjY2VwdC1lcnJvcmVkXCIsXG4gXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0XHRcdGRlcGVuZGVuY3lJZDogbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbaV0sXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyO1xuIFx0XHRcdFx0XHRcdFx0fVxuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0fVxuIFx0XHRcdFx0fVxuIFx0XHRcdH1cbiBcdFx0fVxuXG4gXHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXG4gXHRcdGZvciAoaSA9IDA7IGkgPCBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tpXTtcbiBcdFx0XHRtb2R1bGVJZCA9IGl0ZW0ubW9kdWxlO1xuIFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gaXRlbS5wYXJlbnRzO1xuIFx0XHRcdGhvdEN1cnJlbnRDaGlsZE1vZHVsZSA9IG1vZHVsZUlkO1xuIFx0XHRcdHRyeSB7XG4gXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKTtcbiBcdFx0XHR9IGNhdGNoIChlcnIpIHtcbiBcdFx0XHRcdGlmICh0eXBlb2YgaXRlbS5lcnJvckhhbmRsZXIgPT09IFwiZnVuY3Rpb25cIikge1xuIFx0XHRcdFx0XHR0cnkge1xuIFx0XHRcdFx0XHRcdGl0ZW0uZXJyb3JIYW5kbGVyKGVycik7XG4gXHRcdFx0XHRcdH0gY2F0Y2ggKGVycjIpIHtcbiBcdFx0XHRcdFx0XHRpZiAob3B0aW9ucy5vbkVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcbiBcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0XHRlcnJvcjogZXJyMixcbiBcdFx0XHRcdFx0XHRcdFx0b3JpZ2luYWxFcnJvcjogZXJyXG4gXHRcdFx0XHRcdFx0XHR9KTtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0aWYgKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcbiBcdFx0XHRcdFx0XHRcdGlmICghZXJyb3IpIGVycm9yID0gZXJyMjtcbiBcdFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH0gZWxzZSB7XG4gXHRcdFx0XHRcdGlmIChvcHRpb25zLm9uRXJyb3JlZCkge1xuIFx0XHRcdFx0XHRcdG9wdGlvbnMub25FcnJvcmVkKHtcbiBcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3JlZFwiLFxuIFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxuIFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVyclxuIFx0XHRcdFx0XHRcdH0pO1xuIFx0XHRcdFx0XHR9XG4gXHRcdFx0XHRcdGlmICghb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XG4gXHRcdFx0XHRcdFx0aWYgKCFlcnJvcikgZXJyb3IgPSBlcnI7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH1cbiBcdFx0XHR9XG4gXHRcdH1cblxuIFx0XHQvLyBoYW5kbGUgZXJyb3JzIGluIGFjY2VwdCBoYW5kbGVycyBhbmQgc2VsZiBhY2NlcHRlZCBtb2R1bGUgbG9hZFxuIFx0XHRpZiAoZXJyb3IpIHtcbiBcdFx0XHRob3RTZXRTdGF0dXMoXCJmYWlsXCIpO1xuIFx0XHRcdHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gXHRcdH1cblxuIFx0XHRpZiAoaG90UXVldWVkSW52YWxpZGF0ZWRNb2R1bGVzKSB7XG4gXHRcdFx0cmV0dXJuIGhvdEFwcGx5SW50ZXJuYWwob3B0aW9ucykudGhlbihmdW5jdGlvbihsaXN0KSB7XG4gXHRcdFx0XHRvdXRkYXRlZE1vZHVsZXMuZm9yRWFjaChmdW5jdGlvbihtb2R1bGVJZCkge1xuIFx0XHRcdFx0XHRpZiAobGlzdC5pbmRleE9mKG1vZHVsZUlkKSA8IDApIGxpc3QucHVzaChtb2R1bGVJZCk7XG4gXHRcdFx0XHR9KTtcbiBcdFx0XHRcdHJldHVybiBsaXN0O1xuIFx0XHRcdH0pO1xuIFx0XHR9XG5cbiBcdFx0aG90U2V0U3RhdHVzKFwiaWRsZVwiKTtcbiBcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHtcbiBcdFx0XHRyZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XG4gXHRcdH0pO1xuIFx0fVxuXG4gXHRmdW5jdGlvbiBob3RBcHBseUludmFsaWRhdGVkTW9kdWxlcygpIHtcbiBcdFx0aWYgKGhvdFF1ZXVlZEludmFsaWRhdGVkTW9kdWxlcykge1xuIFx0XHRcdGlmICghaG90VXBkYXRlKSBob3RVcGRhdGUgPSB7fTtcbiBcdFx0XHRob3RRdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMuZm9yRWFjaChob3RBcHBseUludmFsaWRhdGVkTW9kdWxlKTtcbiBcdFx0XHRob3RRdWV1ZWRJbnZhbGlkYXRlZE1vZHVsZXMgPSB1bmRlZmluZWQ7XG4gXHRcdFx0cmV0dXJuIHRydWU7XG4gXHRcdH1cbiBcdH1cblxuIFx0ZnVuY3Rpb24gaG90QXBwbHlJbnZhbGlkYXRlZE1vZHVsZShtb2R1bGVJZCkge1xuIFx0XHRpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChob3RVcGRhdGUsIG1vZHVsZUlkKSlcbiBcdFx0XHRob3RVcGRhdGVbbW9kdWxlSWRdID0gbW9kdWxlc1ttb2R1bGVJZF07XG4gXHR9XG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGhvdDogaG90Q3JlYXRlTW9kdWxlKG1vZHVsZUlkKSxcbiBcdFx0XHRwYXJlbnRzOiAoaG90Q3VycmVudFBhcmVudHNUZW1wID0gaG90Q3VycmVudFBhcmVudHMsIGhvdEN1cnJlbnRQYXJlbnRzID0gW10sIGhvdEN1cnJlbnRQYXJlbnRzVGVtcCksXG4gXHRcdFx0Y2hpbGRyZW46IFtdXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIGhvdENyZWF0ZVJlcXVpcmUobW9kdWxlSWQpKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG4gXHQvLyBfX3dlYnBhY2tfaGFzaF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSBmdW5jdGlvbigpIHsgcmV0dXJuIGhvdEN1cnJlbnRIYXNoOyB9O1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIGhvdENyZWF0ZVJlcXVpcmUoMTcxKShfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAxNzEpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxudmFyICRleHBvcnQgPSBmdW5jdGlvbiAodHlwZSwgbmFtZSwgc291cmNlKSB7XG4gIHZhciBJU19GT1JDRUQgPSB0eXBlICYgJGV4cG9ydC5GO1xuICB2YXIgSVNfR0xPQkFMID0gdHlwZSAmICRleHBvcnQuRztcbiAgdmFyIElTX1NUQVRJQyA9IHR5cGUgJiAkZXhwb3J0LlM7XG4gIHZhciBJU19QUk9UTyA9IHR5cGUgJiAkZXhwb3J0LlA7XG4gIHZhciBJU19CSU5EID0gdHlwZSAmICRleHBvcnQuQjtcbiAgdmFyIHRhcmdldCA9IElTX0dMT0JBTCA/IGdsb2JhbCA6IElTX1NUQVRJQyA/IGdsb2JhbFtuYW1lXSB8fCAoZ2xvYmFsW25hbWVdID0ge30pIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdIHx8IChleHBvcnRzW1BST1RPVFlQRV0gPSB7fSk7XG4gIHZhciBrZXksIG93biwgb3V0LCBleHA7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSAob3duID8gdGFyZ2V0IDogc291cmNlKVtrZXldO1xuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgZXhwID0gSVNfQklORCAmJiBvd24gPyBjdHgob3V0LCBnbG9iYWwpIDogSVNfUFJPVE8gJiYgdHlwZW9mIG91dCA9PSAnZnVuY3Rpb24nID8gY3R4KEZ1bmN0aW9uLmNhbGwsIG91dCkgOiBvdXQ7XG4gICAgLy8gZXh0ZW5kIGdsb2JhbFxuICAgIGlmICh0YXJnZXQpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBvdXQsIHR5cGUgJiAkZXhwb3J0LlUpO1xuICAgIC8vIGV4cG9ydFxuICAgIGlmIChleHBvcnRzW2tleV0gIT0gb3V0KSBoaWRlKGV4cG9ydHMsIGtleSwgZXhwKTtcbiAgICBpZiAoSVNfUFJPVE8gJiYgZXhwUHJvdG9ba2V5XSAhPSBvdXQpIGV4cFByb3RvW2tleV0gPSBvdXQ7XG4gIH1cbn07XG5nbG9iYWwuY29yZSA9IGNvcmU7XG4vLyB0eXBlIGJpdG1hcFxuJGV4cG9ydC5GID0gMTsgICAvLyBmb3JjZWRcbiRleHBvcnQuRyA9IDI7ICAgLy8gZ2xvYmFsXG4kZXhwb3J0LlMgPSA0OyAgIC8vIHN0YXRpY1xuJGV4cG9ydC5QID0gODsgICAvLyBwcm90b1xuJGV4cG9ydC5CID0gMTY7ICAvLyBiaW5kXG4kZXhwb3J0LlcgPSAzMjsgIC8vIHdyYXBcbiRleHBvcnQuVSA9IDY0OyAgLy8gc2FmZVxuJGV4cG9ydC5SID0gMTI4OyAvLyByZWFsIHByb3RvIG1ldGhvZCBmb3IgYGxpYnJhcnlgXG5tb2R1bGUuZXhwb3J0cyA9ICRleHBvcnQ7XG4iLCJpbXBvcnR7dHlwZU9mIGFzIGUsaXNFbGVtZW50IGFzIHQsaXNWYWxpZEVsZW1lbnRUeXBlIGFzIG59ZnJvbVwicmVhY3QtaXNcIjtpbXBvcnQgcix7dXNlU3RhdGUgYXMgbyx1c2VDb250ZXh0IGFzIGksdXNlTWVtbyBhcyBzLHVzZUVmZmVjdCBhcyBhLHVzZVJlZiBhcyBjLGNyZWF0ZUVsZW1lbnQgYXMgdSx1c2VEZWJ1Z1ZhbHVlIGFzIGwsdXNlTGF5b3V0RWZmZWN0IGFzIGR9ZnJvbVwicmVhY3RcIjtpbXBvcnQgaCBmcm9tXCJzaGFsbG93ZXF1YWxcIjtpbXBvcnQgcCBmcm9tXCJAZW1vdGlvbi9zdHlsaXNcIjtpbXBvcnQgZiBmcm9tXCJAZW1vdGlvbi91bml0bGVzc1wiO2ltcG9ydCBtIGZyb21cIkBlbW90aW9uL2lzLXByb3AtdmFsaWRcIjtpbXBvcnQgeSBmcm9tXCJob2lzdC1ub24tcmVhY3Qtc3RhdGljc1wiO2Z1bmN0aW9uIHYoKXtyZXR1cm4odj1PYmplY3QuYXNzaWdufHxmdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgbj1hcmd1bWVudHNbdF07Zm9yKHZhciByIGluIG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihlW3JdPW5bcl0pfXJldHVybiBlfSkuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBnPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPVtlWzBdXSxyPTAsbz10Lmxlbmd0aDtyPG87cis9MSluLnB1c2godFtyXSxlW3IrMV0pO3JldHVybiBufSxTPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT09dCYmXCJvYmplY3RcIj09dHlwZW9mIHQmJlwiW29iamVjdCBPYmplY3RdXCI9PT0odC50b1N0cmluZz90LnRvU3RyaW5nKCk6T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpKSYmIWUodCl9LHc9T2JqZWN0LmZyZWV6ZShbXSksYj1PYmplY3QuZnJlZXplKHt9KTtmdW5jdGlvbiBOKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV9ZnVuY3Rpb24gRShlKXtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZcInN0cmluZ1wiPT10eXBlb2YgZSYmZXx8ZS5kaXNwbGF5TmFtZXx8ZS5uYW1lfHxcIkNvbXBvbmVudFwifWZ1bmN0aW9uIF8oZSl7cmV0dXJuIGUmJlwic3RyaW5nXCI9PXR5cGVvZiBlLnN0eWxlZENvbXBvbmVudElkfXZhciBJPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiYocHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0FUVFJ8fHByb2Nlc3MuZW52LlNDX0FUVFIpfHxcImRhdGEtc3R5bGVkXCIsQz1cIjUuMi4wXCIsQT1cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZcIkhUTUxFbGVtZW50XCJpbiB3aW5kb3csTz1cImJvb2xlYW5cIj09dHlwZW9mIFNDX0RJU0FCTEVfU1BFRURZJiZTQ19ESVNBQkxFX1NQRUVEWXx8XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJihwcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFl8fHByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZKXx8XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVixQPXt9LFI9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgX193ZWJwYWNrX25vbmNlX18/X193ZWJwYWNrX25vbmNlX186bnVsbH0saj1cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP3sxOlwiQ2Fubm90IGNyZWF0ZSBzdHlsZWQtY29tcG9uZW50IGZvciBjb21wb25lbnQ6ICVzLlxcblxcblwiLDI6XCJDYW4ndCBjb2xsZWN0IHN0eWxlcyBvbmNlIHlvdSd2ZSBjb25zdW1lZCBhIGBTZXJ2ZXJTdHlsZVNoZWV0YCdzIHN0eWxlcyEgYFNlcnZlclN0eWxlU2hlZXRgIGlzIGEgb25lIG9mZiBpbnN0YW5jZSBmb3IgZWFjaCBzZXJ2ZXItc2lkZSByZW5kZXIgY3ljbGUuXFxuXFxuLSBBcmUgeW91IHRyeWluZyB0byByZXVzZSBpdCBhY3Jvc3MgcmVuZGVycz9cXG4tIEFyZSB5b3UgYWNjaWRlbnRhbGx5IGNhbGxpbmcgY29sbGVjdFN0eWxlcyB0d2ljZT9cXG5cXG5cIiwzOlwiU3RyZWFtaW5nIFNTUiBpcyBvbmx5IHN1cHBvcnRlZCBpbiBhIE5vZGUuanMgZW52aXJvbm1lbnQ7IFBsZWFzZSBkbyBub3QgdHJ5IHRvIGNhbGwgdGhpcyBtZXRob2QgaW4gdGhlIGJyb3dzZXIuXFxuXFxuXCIsNDpcIlRoZSBgU3R5bGVTaGVldE1hbmFnZXJgIGV4cGVjdHMgYSB2YWxpZCB0YXJnZXQgb3Igc2hlZXQgcHJvcCFcXG5cXG4tIERvZXMgdGhpcyBlcnJvciBvY2N1ciBvbiB0aGUgY2xpZW50IGFuZCBpcyB5b3VyIHRhcmdldCBmYWxzeT9cXG4tIERvZXMgdGhpcyBlcnJvciBvY2N1ciBvbiB0aGUgc2VydmVyIGFuZCBpcyB0aGUgc2hlZXQgZmFsc3k/XFxuXFxuXCIsNTpcIlRoZSBjbG9uZSBtZXRob2QgY2Fubm90IGJlIHVzZWQgb24gdGhlIGNsaWVudCFcXG5cXG4tIEFyZSB5b3UgcnVubmluZyBpbiBhIGNsaWVudC1saWtlIGVudmlyb25tZW50IG9uIHRoZSBzZXJ2ZXI/XFxuLSBBcmUgeW91IHRyeWluZyB0byBydW4gU1NSIG9uIHRoZSBjbGllbnQ/XFxuXFxuXCIsNjpcIlRyeWluZyB0byBpbnNlcnQgYSBuZXcgc3R5bGUgdGFnLCBidXQgdGhlIGdpdmVuIE5vZGUgaXMgdW5tb3VudGVkIVxcblxcbi0gQXJlIHlvdSB1c2luZyBhIGN1c3RvbSB0YXJnZXQgdGhhdCBpc24ndCBtb3VudGVkP1xcbi0gRG9lcyB5b3VyIGRvY3VtZW50IG5vdCBoYXZlIGEgdmFsaWQgaGVhZCBlbGVtZW50P1xcbi0gSGF2ZSB5b3UgYWNjaWRlbnRhbGx5IHJlbW92ZWQgYSBzdHlsZSB0YWcgbWFudWFsbHk/XFxuXFxuXCIsNzonVGhlbWVQcm92aWRlcjogUGxlYXNlIHJldHVybiBhbiBvYmplY3QgZnJvbSB5b3VyIFwidGhlbWVcIiBwcm9wIGZ1bmN0aW9uLCBlLmcuXFxuXFxuYGBganNcXG50aGVtZT17KCkgPT4gKHt9KX1cXG5gYGBcXG5cXG4nLDg6J1RoZW1lUHJvdmlkZXI6IFBsZWFzZSBtYWtlIHlvdXIgXCJ0aGVtZVwiIHByb3AgYW4gb2JqZWN0LlxcblxcbicsOTpcIk1pc3NpbmcgZG9jdW1lbnQgYDxoZWFkPmBcXG5cXG5cIiwxMDpcIkNhbm5vdCBmaW5kIGEgU3R5bGVTaGVldCBpbnN0YW5jZS4gVXN1YWxseSB0aGlzIGhhcHBlbnMgaWYgdGhlcmUgYXJlIG11bHRpcGxlIGNvcGllcyBvZiBzdHlsZWQtY29tcG9uZW50cyBsb2FkZWQgYXQgb25jZS4gQ2hlY2sgb3V0IHRoaXMgaXNzdWUgZm9yIGhvdyB0byB0cm91Ymxlc2hvb3QgYW5kIGZpeCB0aGUgY29tbW9uIGNhc2VzIHdoZXJlIHRoaXMgc2l0dWF0aW9uIGNhbiBoYXBwZW46IGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9uZW50cy9zdHlsZWQtY29tcG9uZW50cy9pc3N1ZXMvMTk0MSNpc3N1ZWNvbW1lbnQtNDE3ODYyMDIxXFxuXFxuXCIsMTE6XCJfVGhpcyBlcnJvciB3YXMgcmVwbGFjZWQgd2l0aCBhIGRldi10aW1lIHdhcm5pbmcsIGl0IHdpbGwgYmUgZGVsZXRlZCBmb3IgdjQgZmluYWwuXyBbY3JlYXRlR2xvYmFsU3R5bGVdIHJlY2VpdmVkIGNoaWxkcmVuIHdoaWNoIHdpbGwgbm90IGJlIHJlbmRlcmVkLiBQbGVhc2UgdXNlIHRoZSBjb21wb25lbnQgd2l0aG91dCBwYXNzaW5nIGNoaWxkcmVuIGVsZW1lbnRzLlxcblxcblwiLDEyOlwiSXQgc2VlbXMgeW91IGFyZSBpbnRlcnBvbGF0aW5nIGEga2V5ZnJhbWUgZGVjbGFyYXRpb24gKCVzKSBpbnRvIGFuIHVudGFnZ2VkIHN0cmluZy4gVGhpcyB3YXMgc3VwcG9ydGVkIGluIHN0eWxlZC1jb21wb25lbnRzIHYzLCBidXQgaXMgbm90IGxvbmdlciBzdXBwb3J0ZWQgaW4gdjQgYXMga2V5ZnJhbWVzIGFyZSBub3cgaW5qZWN0ZWQgb24tZGVtYW5kLiBQbGVhc2Ugd3JhcCB5b3VyIHN0cmluZyBpbiB0aGUgY3NzXFxcXGBcXFxcYCBoZWxwZXIgd2hpY2ggZW5zdXJlcyB0aGUgc3R5bGVzIGFyZSBpbmplY3RlZCBjb3JyZWN0bHkuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hcGkjY3NzXFxuXFxuXCIsMTM6XCIlcyBpcyBub3QgYSBzdHlsZWQgY29tcG9uZW50IGFuZCBjYW5ub3QgYmUgcmVmZXJyZWQgdG8gdmlhIGNvbXBvbmVudCBzZWxlY3Rvci4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FkdmFuY2VkI3JlZmVycmluZy10by1vdGhlci1jb21wb25lbnRzIGZvciBtb3JlIGRldGFpbHMuXFxuXFxuXCIsMTQ6J1RoZW1lUHJvdmlkZXI6IFwidGhlbWVcIiBwcm9wIGlzIHJlcXVpcmVkLlxcblxcbicsMTU6XCJBIHN0eWxpcyBwbHVnaW4gaGFzIGJlZW4gc3VwcGxpZWQgdGhhdCBpcyBub3QgbmFtZWQuIFdlIG5lZWQgYSBuYW1lIGZvciBlYWNoIHBsdWdpbiB0byBiZSBhYmxlIHRvIHByZXZlbnQgc3R5bGluZyBjb2xsaXNpb25zIGJldHdlZW4gZGlmZmVyZW50IHN0eWxpcyBjb25maWd1cmF0aW9ucyB3aXRoaW4gdGhlIHNhbWUgYXBwLiBCZWZvcmUgeW91IHBhc3MgeW91ciBwbHVnaW4gdG8gYDxTdHlsZVNoZWV0TWFuYWdlciBzdHlsaXNQbHVnaW5zPXtbXX0+YCwgcGxlYXNlIG1ha2Ugc3VyZSBlYWNoIHBsdWdpbiBpcyB1bmlxdWVseS1uYW1lZCwgZS5nLlxcblxcbmBgYGpzXFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGltcG9ydGVkUGx1Z2luLCAnbmFtZScsIHsgdmFsdWU6ICdzb21lLXVuaXF1ZS1uYW1lJyB9KTtcXG5gYGBcXG5cXG5cIiwxNjpcIlJlYWNoZWQgdGhlIGxpbWl0IG9mIGhvdyBtYW55IHN0eWxlZCBjb21wb25lbnRzIG1heSBiZSBjcmVhdGVkIGF0IGdyb3VwICVzLlxcbllvdSBtYXkgb25seSBjcmVhdGUgdXAgdG8gMSwwNzMsNzQxLDgyNCBjb21wb25lbnRzLiBJZiB5b3UncmUgY3JlYXRpbmcgY29tcG9uZW50cyBkeW5hbWljYWxseSxcXG5hcyBmb3IgaW5zdGFuY2UgaW4geW91ciByZW5kZXIgbWV0aG9kIHRoZW4geW91IG1heSBiZSBydW5uaW5nIGludG8gdGhpcyBsaW1pdGF0aW9uLlxcblxcblwiLDE3OlwiQ1NTU3R5bGVTaGVldCBjb3VsZCBub3QgYmUgZm91bmQgb24gSFRNTFN0eWxlRWxlbWVudC5cXG5IYXMgc3R5bGVkLWNvbXBvbmVudHMnIHN0eWxlIHRhZyBiZWVuIHVubW91bnRlZCBvciBhbHRlcmVkIGJ5IGFub3RoZXIgc2NyaXB0P1xcblwifTp7fTtmdW5jdGlvbiBUKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSx0PVtdLG49MSxyPWFyZ3VtZW50cy5sZW5ndGg7bjxyO24rPTEpdC5wdXNoKG48MHx8YXJndW1lbnRzLmxlbmd0aDw9bj92b2lkIDA6YXJndW1lbnRzW25dKTtyZXR1cm4gdC5mb3JFYWNoKChmdW5jdGlvbih0KXtlPWUucmVwbGFjZSgvJVthLXpdLyx0KX0pKSxlfWZ1bmN0aW9uIEQoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3Rocm93XCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVj9uZXcgRXJyb3IoXCJBbiBlcnJvciBvY2N1cnJlZC4gU2VlIGh0dHBzOi8vZ2l0LmlvL0pVSWFFI1wiK2UrXCIgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIrKG4ubGVuZ3RoPjA/XCIgQXJnczogXCIrbi5qb2luKFwiLCBcIik6XCJcIikpOm5ldyBFcnJvcihULmFwcGx5KHZvaWQgMCxbaltlXV0uY29uY2F0KG4pKS50cmltKCkpfXZhciBrPWZ1bmN0aW9uKGUpe3ZhciB0PWRvY3VtZW50LmhlYWQsbj1lfHx0LHI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpLG89ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuY2hpbGROb2RlcyxuPXQubGVuZ3RoO24+PTA7bi0tKXt2YXIgcj10W25dO2lmKHImJjE9PT1yLm5vZGVUeXBlJiZyLmhhc0F0dHJpYnV0ZShJKSlyZXR1cm4gcn19KG4pLGk9dm9pZCAwIT09bz9vLm5leHRTaWJsaW5nOm51bGw7ci5zZXRBdHRyaWJ1dGUoSSxcImFjdGl2ZVwiKSxyLnNldEF0dHJpYnV0ZShcImRhdGEtc3R5bGVkLXZlcnNpb25cIixcIjUuMi4wXCIpO3ZhciBzPVIoKTtyZXR1cm4gcyYmci5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLHMpLG4uaW5zZXJ0QmVmb3JlKHIsaSkscn0seD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dmFyIHQ9dGhpcy5lbGVtZW50PWsoZSk7dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKSksdGhpcy5zaGVldD1mdW5jdGlvbihlKXtpZihlLnNoZWV0KXJldHVybiBlLnNoZWV0O2Zvcih2YXIgdD1kb2N1bWVudC5zdHlsZVNoZWV0cyxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgbz10W25dO2lmKG8ub3duZXJOb2RlPT09ZSlyZXR1cm4gb31EKDE3KX0odCksdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7dHJ5e3JldHVybiB0aGlzLnNoZWV0Lmluc2VydFJ1bGUodCxlKSx0aGlzLmxlbmd0aCsrLCEwfWNhdGNoKGUpe3JldHVybiExfX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMuc2hlZXQuZGVsZXRlUnVsZShlKSx0aGlzLmxlbmd0aC0tfSx0LmdldFJ1bGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5zaGVldC5jc3NSdWxlc1tlXTtyZXR1cm4gdm9pZCAwIT09dCYmXCJzdHJpbmdcIj09dHlwZW9mIHQuY3NzVGV4dD90LmNzc1RleHQ6XCJcIn0sZX0oKSxWPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgdD10aGlzLmVsZW1lbnQ9ayhlKTt0aGlzLm5vZGVzPXQuY2hpbGROb2Rlcyx0aGlzLmxlbmd0aD0wfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0Lmluc2VydFJ1bGU9ZnVuY3Rpb24oZSx0KXtpZihlPD10aGlzLmxlbmd0aCYmZT49MCl7dmFyIG49ZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodCkscj10aGlzLm5vZGVzW2VdO3JldHVybiB0aGlzLmVsZW1lbnQuaW5zZXJ0QmVmb3JlKG4scnx8bnVsbCksdGhpcy5sZW5ndGgrKywhMH1yZXR1cm4hMX0sdC5kZWxldGVSdWxlPWZ1bmN0aW9uKGUpe3RoaXMuZWxlbWVudC5yZW1vdmVDaGlsZCh0aGlzLm5vZGVzW2VdKSx0aGlzLmxlbmd0aC0tfSx0LmdldFJ1bGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU8dGhpcy5sZW5ndGg/dGhpcy5ub2Rlc1tlXS50ZXh0Q29udGVudDpcIlwifSxlfSgpLE09ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMucnVsZXM9W10sdGhpcy5sZW5ndGg9MH12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbnNlcnRSdWxlPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU8PXRoaXMubGVuZ3RoJiYodGhpcy5ydWxlcy5zcGxpY2UoZSwwLHQpLHRoaXMubGVuZ3RoKyssITApfSx0LmRlbGV0ZVJ1bGU9ZnVuY3Rpb24oZSl7dGhpcy5ydWxlcy5zcGxpY2UoZSwxKSx0aGlzLmxlbmd0aC0tfSx0LmdldFJ1bGU9ZnVuY3Rpb24oZSl7cmV0dXJuIGU8dGhpcy5sZW5ndGg/dGhpcy5ydWxlc1tlXTpcIlwifSxlfSgpLHo9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuZ3JvdXBTaXplcz1uZXcgVWludDMyQXJyYXkoNTEyKSx0aGlzLmxlbmd0aD01MTIsdGhpcy50YWc9ZX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5pbmRleE9mR3JvdXA9ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTAsbj0wO248ZTtuKyspdCs9dGhpcy5ncm91cFNpemVzW25dO3JldHVybiB0fSx0Lmluc2VydFJ1bGVzPWZ1bmN0aW9uKGUsdCl7aWYoZT49dGhpcy5ncm91cFNpemVzLmxlbmd0aCl7Zm9yKHZhciBuPXRoaXMuZ3JvdXBTaXplcyxyPW4ubGVuZ3RoLG89cjtlPj1vOykobzw8PTEpPDAmJkQoMTYsXCJcIitlKTt0aGlzLmdyb3VwU2l6ZXM9bmV3IFVpbnQzMkFycmF5KG8pLHRoaXMuZ3JvdXBTaXplcy5zZXQobiksdGhpcy5sZW5ndGg9bztmb3IodmFyIGk9cjtpPG87aSsrKXRoaXMuZ3JvdXBTaXplc1tpXT0wfWZvcih2YXIgcz10aGlzLmluZGV4T2ZHcm91cChlKzEpLGE9MCxjPXQubGVuZ3RoO2E8YzthKyspdGhpcy50YWcuaW5zZXJ0UnVsZShzLHRbYV0pJiYodGhpcy5ncm91cFNpemVzW2VdKysscysrKX0sdC5jbGVhckdyb3VwPWZ1bmN0aW9uKGUpe2lmKGU8dGhpcy5sZW5ndGgpe3ZhciB0PXRoaXMuZ3JvdXBTaXplc1tlXSxuPXRoaXMuaW5kZXhPZkdyb3VwKGUpLHI9bit0O3RoaXMuZ3JvdXBTaXplc1tlXT0wO2Zvcih2YXIgbz1uO288cjtvKyspdGhpcy50YWcuZGVsZXRlUnVsZShuKX19LHQuZ2V0R3JvdXA9ZnVuY3Rpb24oZSl7dmFyIHQ9XCJcIjtpZihlPj10aGlzLmxlbmd0aHx8MD09PXRoaXMuZ3JvdXBTaXplc1tlXSlyZXR1cm4gdDtmb3IodmFyIG49dGhpcy5ncm91cFNpemVzW2VdLHI9dGhpcy5pbmRleE9mR3JvdXAoZSksbz1yK24saT1yO2k8bztpKyspdCs9dGhpcy50YWcuZ2V0UnVsZShpKStcIi8qIXNjKi9cXG5cIjtyZXR1cm4gdH0sZX0oKSxHPW5ldyBNYXAsRj1uZXcgTWFwLEI9MSxMPWZ1bmN0aW9uKGUpe2lmKEcuaGFzKGUpKXJldHVybiBHLmdldChlKTt2YXIgdD1CKys7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKCgwfHQpPDB8fHQ+MTw8MzApJiZEKDE2LFwiXCIrdCksRy5zZXQoZSx0KSxGLnNldCh0LGUpLHR9LHE9ZnVuY3Rpb24oZSl7cmV0dXJuIEYuZ2V0KGUpfSxIPWZ1bmN0aW9uKGUsdCl7dD49QiYmKEI9dCsxKSxHLnNldChlLHQpLEYuc2V0KHQsZSl9LCQ9XCJzdHlsZVtcIitJKyddW2RhdGEtc3R5bGVkLXZlcnNpb249XCI1LjIuMFwiXScsWT1uZXcgUmVnRXhwKFwiXlwiK0krJ1xcXFwuZyhcXFxcZCspXFxcXFtpZD1cIihbXFxcXHdcXFxcZC1dKylcIlxcXFxdLio/XCIoW15cIl0qKScpLFc9ZnVuY3Rpb24oZSx0LG4pe2Zvcih2YXIgcixvPW4uc3BsaXQoXCIsXCIpLGk9MCxzPW8ubGVuZ3RoO2k8cztpKyspKHI9b1tpXSkmJmUucmVnaXN0ZXJOYW1lKHQscil9LFU9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dC5pbm5lckhUTUwuc3BsaXQoXCIvKiFzYyovXFxuXCIpLHI9W10sbz0wLGk9bi5sZW5ndGg7bzxpO28rKyl7dmFyIHM9bltvXS50cmltKCk7aWYocyl7dmFyIGE9cy5tYXRjaChZKTtpZihhKXt2YXIgYz0wfHBhcnNlSW50KGFbMV0sMTApLHU9YVsyXTswIT09YyYmKEgodSxjKSxXKGUsdSxhWzNdKSxlLmdldFRhZygpLmluc2VydFJ1bGVzKGMscikpLHIubGVuZ3RoPTB9ZWxzZSByLnB1c2gocyl9fX0sSj1BLFg9e2lzU2VydmVyOiFBLHVzZUNTU09NSW5qZWN0aW9uOiFPfSxaPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dm9pZCAwPT09ZSYmKGU9WCksdm9pZCAwPT09dCYmKHQ9e30pLHRoaXMub3B0aW9ucz12KHt9LFgse30sZSksdGhpcy5ncz10LHRoaXMubmFtZXM9bmV3IE1hcChuKSwhdGhpcy5vcHRpb25zLmlzU2VydmVyJiZBJiZKJiYoSj0hMSxmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgkKSxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgbz10W25dO28mJlwiYWN0aXZlXCIhPT1vLmdldEF0dHJpYnV0ZShJKSYmKFUoZSxvKSxvLnBhcmVudE5vZGUmJm8ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvKSl9fSh0aGlzKSl9ZS5yZWdpc3RlcklkPWZ1bmN0aW9uKGUpe3JldHVybiBMKGUpfTt2YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zPWZ1bmN0aW9uKHQsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSEwKSxuZXcgZSh2KHt9LHRoaXMub3B0aW9ucyx7fSx0KSx0aGlzLmdzLG4mJnRoaXMubmFtZXN8fHZvaWQgMCl9LHQuYWxsb2NhdGVHU0luc3RhbmNlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmdzW2VdPSh0aGlzLmdzW2VdfHwwKSsxfSx0LmdldFRhZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRhZ3x8KHRoaXMudGFnPShuPSh0PXRoaXMub3B0aW9ucykuaXNTZXJ2ZXIscj10LnVzZUNTU09NSW5qZWN0aW9uLG89dC50YXJnZXQsZT1uP25ldyBNKG8pOnI/bmV3IHgobyk6bmV3IFYobyksbmV3IHooZSkpKTt2YXIgZSx0LG4scixvfSx0Lmhhc05hbWVGb3JJZD1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLm5hbWVzLmhhcyhlKSYmdGhpcy5uYW1lcy5nZXQoZSkuaGFzKHQpfSx0LnJlZ2lzdGVyTmFtZT1mdW5jdGlvbihlLHQpe2lmKEwoZSksdGhpcy5uYW1lcy5oYXMoZSkpdGhpcy5uYW1lcy5nZXQoZSkuYWRkKHQpO2Vsc2V7dmFyIG49bmV3IFNldDtuLmFkZCh0KSx0aGlzLm5hbWVzLnNldChlLG4pfX0sdC5pbnNlcnRSdWxlcz1mdW5jdGlvbihlLHQsbil7dGhpcy5yZWdpc3Rlck5hbWUoZSx0KSx0aGlzLmdldFRhZygpLmluc2VydFJ1bGVzKEwoZSksbil9LHQuY2xlYXJOYW1lcz1mdW5jdGlvbihlKXt0aGlzLm5hbWVzLmhhcyhlKSYmdGhpcy5uYW1lcy5nZXQoZSkuY2xlYXIoKX0sdC5jbGVhclJ1bGVzPWZ1bmN0aW9uKGUpe3RoaXMuZ2V0VGFnKCkuY2xlYXJHcm91cChMKGUpKSx0aGlzLmNsZWFyTmFtZXMoZSl9LHQuY2xlYXJUYWc9ZnVuY3Rpb24oKXt0aGlzLnRhZz12b2lkIDB9LHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuZ2V0VGFnKCksbj10Lmxlbmd0aCxyPVwiXCIsbz0wO288bjtvKyspe3ZhciBpPXEobyk7aWYodm9pZCAwIT09aSl7dmFyIHM9ZS5uYW1lcy5nZXQoaSksYT10LmdldEdyb3VwKG8pO2lmKHZvaWQgMCE9PXMmJjAhPT1hLmxlbmd0aCl7dmFyIGM9SStcIi5nXCIrbysnW2lkPVwiJytpKydcIl0nLHU9XCJcIjt2b2lkIDAhPT1zJiZzLmZvckVhY2goKGZ1bmN0aW9uKGUpe2UubGVuZ3RoPjAmJih1Kz1lK1wiLFwiKX0pKSxyKz1cIlwiK2ErYysne2NvbnRlbnQ6XCInK3UrJ1wifS8qIXNjKi9cXG4nfX19cmV0dXJuIHJ9KHRoaXMpfSxlfSgpLEs9ZnVuY3Rpb24oZSx0KXtmb3IodmFyIG49dC5sZW5ndGg7bjspZT0zMyplXnQuY2hhckNvZGVBdCgtLW4pO3JldHVybiBlfSxRPWZ1bmN0aW9uKGUpe3JldHVybiBLKDUzODEsZSl9LGVlPS9eXFxzKlxcL1xcLy4qJC9nbSx0ZT1bXCI6XCIsXCJbXCIsXCIuXCIsXCIjXCJdO2Z1bmN0aW9uIG5lKGUpe3ZhciB0LG4scixvLGk9dm9pZCAwPT09ZT9iOmUscz1pLm9wdGlvbnMsYT12b2lkIDA9PT1zP2I6cyxjPWkucGx1Z2lucyx1PXZvaWQgMD09PWM/dzpjLGw9bmV3IHAoYSksZD1bXSxoPWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHQodCl7aWYodCl0cnl7ZSh0K1wifVwiKX1jYXRjaChlKXt9fXJldHVybiBmdW5jdGlvbihuLHIsbyxpLHMsYSxjLHUsbCxkKXtzd2l0Y2gobil7Y2FzZSAxOmlmKDA9PT1sJiY2ND09PXIuY2hhckNvZGVBdCgwKSlyZXR1cm4gZShyK1wiO1wiKSxcIlwiO2JyZWFrO2Nhc2UgMjppZigwPT09dSlyZXR1cm4gcitcIi8qfCovXCI7YnJlYWs7Y2FzZSAzOnN3aXRjaCh1KXtjYXNlIDEwMjpjYXNlIDExMjpyZXR1cm4gZShvWzBdK3IpLFwiXCI7ZGVmYXVsdDpyZXR1cm4gcisoMD09PWQ/XCIvKnwqL1wiOlwiXCIpfWNhc2UtMjpyLnNwbGl0KFwiLyp8Ki99XCIpLmZvckVhY2godCl9fX0oKGZ1bmN0aW9uKGUpe2QucHVzaChlKX0pKSxmPWZ1bmN0aW9uKGUscixpKXtyZXR1cm4gMD09PXImJnRlLmluY2x1ZGVzKGlbbi5sZW5ndGhdKXx8aS5tYXRjaChvKT9lOlwiLlwiK3R9O2Z1bmN0aW9uIG0oZSxpLHMsYSl7dm9pZCAwPT09YSYmKGE9XCImXCIpO3ZhciBjPWUucmVwbGFjZShlZSxcIlwiKSx1PWkmJnM/cytcIiBcIitpK1wiIHsgXCIrYytcIiB9XCI6YztyZXR1cm4gdD1hLG49aSxyPW5ldyBSZWdFeHAoXCJcXFxcXCIrbitcIlxcXFxiXCIsXCJnXCIpLG89bmV3IFJlZ0V4cChcIihcXFxcXCIrbitcIlxcXFxiKXsyLH1cIiksbChzfHwhaT9cIlwiOmksdSl9cmV0dXJuIGwudXNlKFtdLmNvbmNhdCh1LFtmdW5jdGlvbihlLHQsbyl7Mj09PWUmJm8ubGVuZ3RoJiZvWzBdLmxhc3RJbmRleE9mKG4pPjAmJihvWzBdPW9bMF0ucmVwbGFjZShyLGYpKX0saCxmdW5jdGlvbihlKXtpZigtMj09PWUpe3ZhciB0PWQ7cmV0dXJuIGQ9W10sdH19XSkpLG0uaGFzaD11Lmxlbmd0aD91LnJlZHVjZSgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5uYW1lfHxEKDE1KSxLKGUsdC5uYW1lKX0pLDUzODEpLnRvU3RyaW5nKCk6XCJcIixtfXZhciByZT1yLmNyZWF0ZUNvbnRleHQoKSxvZT1yZS5Db25zdW1lcixpZT1yLmNyZWF0ZUNvbnRleHQoKSxzZT0oaWUuQ29uc3VtZXIsbmV3IFopLGFlPW5lKCk7ZnVuY3Rpb24gY2UoKXtyZXR1cm4gaShyZSl8fHNlfWZ1bmN0aW9uIHVlKCl7cmV0dXJuIGkoaWUpfHxhZX1mdW5jdGlvbiBsZShlKXt2YXIgdD1vKGUuc3R5bGlzUGx1Z2lucyksbj10WzBdLGk9dFsxXSxjPWNlKCksdT1zKChmdW5jdGlvbigpe3ZhciB0PWM7cmV0dXJuIGUuc2hlZXQ/dD1lLnNoZWV0OmUudGFyZ2V0JiYodD10LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe3RhcmdldDplLnRhcmdldH0sITEpKSxlLmRpc2FibGVDU1NPTUluamVjdGlvbiYmKHQ9dC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zKHt1c2VDU1NPTUluamVjdGlvbjohMX0pKSx0fSksW2UuZGlzYWJsZUNTU09NSW5qZWN0aW9uLGUuc2hlZXQsZS50YXJnZXRdKSxsPXMoKGZ1bmN0aW9uKCl7cmV0dXJuIG5lKHtvcHRpb25zOntwcmVmaXg6IWUuZGlzYWJsZVZlbmRvclByZWZpeGVzfSxwbHVnaW5zOm59KX0pLFtlLmRpc2FibGVWZW5kb3JQcmVmaXhlcyxuXSk7cmV0dXJuIGEoKGZ1bmN0aW9uKCl7aChuLGUuc3R5bGlzUGx1Z2lucyl8fGkoZS5zdHlsaXNQbHVnaW5zKX0pLFtlLnN0eWxpc1BsdWdpbnNdKSxyLmNyZWF0ZUVsZW1lbnQocmUuUHJvdmlkZXIse3ZhbHVlOnV9LHIuY3JlYXRlRWxlbWVudChpZS5Qcm92aWRlcix7dmFsdWU6bH0sXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj9yLkNoaWxkcmVuLm9ubHkoZS5jaGlsZHJlbik6ZS5jaGlsZHJlbikpfXZhciBkZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt2YXIgbj10aGlzO3RoaXMuaW5qZWN0PWZ1bmN0aW9uKGUsdCl7dm9pZCAwPT09dCYmKHQ9YWUpO3ZhciByPW4ubmFtZSt0Lmhhc2g7ZS5oYXNOYW1lRm9ySWQobi5pZCxyKXx8ZS5pbnNlcnRSdWxlcyhuLmlkLHIsdChuLnJ1bGVzLHIsXCJAa2V5ZnJhbWVzXCIpKX0sdGhpcy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBEKDEyLFN0cmluZyhuLm5hbWUpKX0sdGhpcy5uYW1lPWUsdGhpcy5pZD1cInNjLWtleWZyYW1lcy1cIitlLHRoaXMucnVsZXM9dH1yZXR1cm4gZS5wcm90b3R5cGUuZ2V0TmFtZT1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9YWUpLHRoaXMubmFtZStlLmhhc2h9LGV9KCksaGU9LyhbQS1aXSkvLHBlPW5ldyBSZWdFeHAoaGUsXCJnXCIpLGZlPS9ebXMtLyxtZT1mdW5jdGlvbihlKXtyZXR1cm5cIi1cIitlLnRvTG93ZXJDYXNlKCl9O2Z1bmN0aW9uIHllKGUpe3JldHVybiBoZS50ZXN0KGUpP2UucmVwbGFjZShwZSxtZSkucmVwbGFjZShmZSxcIi1tcy1cIik6ZX12YXIgdmU9ZnVuY3Rpb24oZSl7cmV0dXJuIG51bGw9PWV8fCExPT09ZXx8XCJcIj09PWV9O2Z1bmN0aW9uIGdlKGUsbixyLG8pe2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgaSxzPVtdLGE9MCxjPWUubGVuZ3RoO2E8YzthKz0xKVwiXCIhPT0oaT1nZShlW2FdLG4scixvKSkmJihBcnJheS5pc0FycmF5KGkpP3MucHVzaC5hcHBseShzLGkpOnMucHVzaChpKSk7cmV0dXJuIHN9aWYodmUoZSkpcmV0dXJuXCJcIjtpZihfKGUpKXJldHVyblwiLlwiK2Uuc3R5bGVkQ29tcG9uZW50SWQ7aWYoTihlKSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YobD1lKXx8bC5wcm90b3R5cGUmJmwucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnR8fCFuKXJldHVybiBlO3ZhciB1PWUobik7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmdCh1KSYmY29uc29sZS53YXJuKEUoZSkrXCIgaXMgbm90IGEgc3R5bGVkIGNvbXBvbmVudCBhbmQgY2Fubm90IGJlIHJlZmVycmVkIHRvIHZpYSBjb21wb25lbnQgc2VsZWN0b3IuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hZHZhbmNlZCNyZWZlcnJpbmctdG8tb3RoZXItY29tcG9uZW50cyBmb3IgbW9yZSBkZXRhaWxzLlwiKSxnZSh1LG4scixvKX12YXIgbDtyZXR1cm4gZSBpbnN0YW5jZW9mIGRlP3I/KGUuaW5qZWN0KHIsbyksZS5nZXROYW1lKG8pKTplOlMoZSk/ZnVuY3Rpb24gZSh0LG4pe3ZhciByLG8saT1bXTtmb3IodmFyIHMgaW4gdCl0Lmhhc093blByb3BlcnR5KHMpJiYhdmUodFtzXSkmJihTKHRbc10pP2kucHVzaC5hcHBseShpLGUodFtzXSxzKSk6Tih0W3NdKT9pLnB1c2goeWUocykrXCI6XCIsdFtzXSxcIjtcIik6aS5wdXNoKHllKHMpK1wiOiBcIisocj1zLG51bGw9PShvPXRbc10pfHxcImJvb2xlYW5cIj09dHlwZW9mIG98fFwiXCI9PT1vP1wiXCI6XCJudW1iZXJcIiE9dHlwZW9mIG98fDA9PT1vfHxyIGluIGY/U3RyaW5nKG8pLnRyaW0oKTpvK1wicHhcIikrXCI7XCIpKTtyZXR1cm4gbj9bbitcIiB7XCJdLmNvbmNhdChpLFtcIn1cIl0pOml9KGUpOmUudG9TdHJpbmcoKX1mdW5jdGlvbiBTZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07cmV0dXJuIE4oZSl8fFMoZSk/Z2UoZyh3LFtlXS5jb25jYXQobikpKTowPT09bi5sZW5ndGgmJjE9PT1lLmxlbmd0aCYmXCJzdHJpbmdcIj09dHlwZW9mIGVbMF0/ZTpnZShnKGUsbikpfXZhciB3ZT1mdW5jdGlvbihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfHxcIm9iamVjdFwiPT10eXBlb2YgZSYmbnVsbCE9PWUmJiFBcnJheS5pc0FycmF5KGUpfSxiZT1mdW5jdGlvbihlKXtyZXR1cm5cIl9fcHJvdG9fX1wiIT09ZSYmXCJjb25zdHJ1Y3RvclwiIT09ZSYmXCJwcm90b3R5cGVcIiE9PWV9O2Z1bmN0aW9uIE5lKGUsdCxuKXt2YXIgcj1lW25dO3dlKHQpJiZ3ZShyKT9FZShyLHQpOmVbbl09dH1mdW5jdGlvbiBFZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07Zm9yKHZhciBvPTAsaT1uO288aS5sZW5ndGg7bysrKXt2YXIgcz1pW29dO2lmKHdlKHMpKWZvcih2YXIgYSBpbiBzKWJlKGEpJiZOZShlLHNbYV0sYSl9cmV0dXJuIGV9dmFyIF9lPS8oYSkoZCkvZ2ksSWU9ZnVuY3Rpb24oZSl7cmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZSsoZT4yNT8zOTo5NykpfTtmdW5jdGlvbiBDZShlKXt2YXIgdCxuPVwiXCI7Zm9yKHQ9TWF0aC5hYnMoZSk7dD41Mjt0PXQvNTJ8MCluPUllKHQlNTIpK247cmV0dXJuKEllKHQlNTIpK24pLnJlcGxhY2UoX2UsXCIkMS0kMlwiKX1mdW5jdGlvbiBBZShlKXtmb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrPTEpe3ZhciBuPWVbdF07aWYoTihuKSYmIV8obikpcmV0dXJuITF9cmV0dXJuITB9dmFyIE9lPVEoXCI1LjIuMFwiKSxQZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4pe3RoaXMucnVsZXM9ZSx0aGlzLnN0YXRpY1J1bGVzSWQ9XCJcIix0aGlzLmlzU3RhdGljPVwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJih2b2lkIDA9PT1ufHxuLmlzU3RhdGljKSYmQWUoZSksdGhpcy5jb21wb25lbnRJZD10LHRoaXMuYmFzZUhhc2g9SyhPZSx0KSx0aGlzLmJhc2VTdHlsZT1uLFoucmVnaXN0ZXJJZCh0KX1yZXR1cm4gZS5wcm90b3R5cGUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXM9ZnVuY3Rpb24oZSx0LG4pe3ZhciByPXRoaXMuY29tcG9uZW50SWQsbz1bXTtpZih0aGlzLmJhc2VTdHlsZSYmby5wdXNoKHRoaXMuYmFzZVN0eWxlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzKGUsdCxuKSksdGhpcy5pc1N0YXRpYyYmIW4uaGFzaClpZih0aGlzLnN0YXRpY1J1bGVzSWQmJnQuaGFzTmFtZUZvcklkKHIsdGhpcy5zdGF0aWNSdWxlc0lkKSlvLnB1c2godGhpcy5zdGF0aWNSdWxlc0lkKTtlbHNle3ZhciBpPWdlKHRoaXMucnVsZXMsZSx0LG4pLmpvaW4oXCJcIikscz1DZShLKHRoaXMuYmFzZUhhc2gsaS5sZW5ndGgpPj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIscykpe3ZhciBhPW4oaSxcIi5cIitzLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIscyxhKX1vLnB1c2gocyksdGhpcy5zdGF0aWNSdWxlc0lkPXN9ZWxzZXtmb3IodmFyIGM9dGhpcy5ydWxlcy5sZW5ndGgsdT1LKHRoaXMuYmFzZUhhc2gsbi5oYXNoKSxsPVwiXCIsZD0wO2Q8YztkKyspe3ZhciBoPXRoaXMucnVsZXNbZF07aWYoXCJzdHJpbmdcIj09dHlwZW9mIGgpbCs9aCxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYodT1LKHUsaCtkKSk7ZWxzZSBpZihoKXt2YXIgcD1nZShoLGUsdCxuKSxmPUFycmF5LmlzQXJyYXkocCk/cC5qb2luKFwiXCIpOnA7dT1LKHUsZitkKSxsKz1mfX1pZihsKXt2YXIgbT1DZSh1Pj4+MCk7aWYoIXQuaGFzTmFtZUZvcklkKHIsbSkpe3ZhciB5PW4obCxcIi5cIittLHZvaWQgMCxyKTt0Lmluc2VydFJ1bGVzKHIsbSx5KX1vLnB1c2gobSl9fXJldHVybiBvLmpvaW4oXCIgXCIpfSxlfSgpLFJlPS9pbnZhbGlkIGhvb2sgY2FsbC9pLGplPW5ldyBTZXQsVGU9ZnVuY3Rpb24oZSx0KXtpZihcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WKXt2YXIgbj1cIlRoZSBjb21wb25lbnQgXCIrZSsodD8nIHdpdGggdGhlIGlkIG9mIFwiJyt0KydcIic6XCJcIikrXCIgaGFzIGJlZW4gY3JlYXRlZCBkeW5hbWljYWxseS5cXG5Zb3UgbWF5IHNlZSB0aGlzIHdhcm5pbmcgYmVjYXVzZSB5b3UndmUgY2FsbGVkIHN0eWxlZCBpbnNpZGUgYW5vdGhlciBjb21wb25lbnQuXFxuVG8gcmVzb2x2ZSB0aGlzIG9ubHkgY3JlYXRlIG5ldyBTdHlsZWRDb21wb25lbnRzIG91dHNpZGUgb2YgYW55IHJlbmRlciBtZXRob2QgYW5kIGZ1bmN0aW9uIGNvbXBvbmVudC5cIjt0cnl7YygpLGplLmhhcyhuKXx8KGNvbnNvbGUud2FybihuKSxqZS5hZGQobikpfWNhdGNoKGUpe1JlLnRlc3QoZS5tZXNzYWdlKSYmamUuZGVsZXRlKG4pfX19LERlPWZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gdm9pZCAwPT09biYmKG49YiksZS50aGVtZSE9PW4udGhlbWUmJmUudGhlbWV8fHR8fG4udGhlbWV9LGtlPS9bIVwiIyQlJicoKSorLC4vOjs8PT4/QFtcXFxcXFxdXmB7fH1+LV0rL2cseGU9LyheLXwtJCkvZztmdW5jdGlvbiBWZShlKXtyZXR1cm4gZS5yZXBsYWNlKGtlLFwiLVwiKS5yZXBsYWNlKHhlLFwiXCIpfWZ1bmN0aW9uIE1lKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYoXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8ZS5jaGFyQXQoMCk9PT1lLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpKX12YXIgemU9ZnVuY3Rpb24oZSl7cmV0dXJuIENlKFEoZSk+Pj4wKX0sR2U9ci5jcmVhdGVDb250ZXh0KCksRmU9R2UuQ29uc3VtZXI7ZnVuY3Rpb24gQmUoZSl7dmFyIHQ9aShHZSksbj1zKChmdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihlLHQpe2lmKCFlKXJldHVybiBEKDE0KTtpZihOKGUpKXt2YXIgbj1lKHQpO3JldHVyblwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlZ8fG51bGwhPT1uJiYhQXJyYXkuaXNBcnJheShuKSYmXCJvYmplY3RcIj09dHlwZW9mIG4/bjpEKDcpfXJldHVybiBBcnJheS5pc0FycmF5KGUpfHxcIm9iamVjdFwiIT10eXBlb2YgZT9EKDgpOnQ/dih7fSx0LHt9LGUpOmV9KGUudGhlbWUsdCl9KSxbZS50aGVtZSx0XSk7cmV0dXJuIGUuY2hpbGRyZW4/ci5jcmVhdGVFbGVtZW50KEdlLlByb3ZpZGVyLHt2YWx1ZTpufSxlLmNoaWxkcmVuKTpudWxsfXZhciBMZT17fTtmdW5jdGlvbiBxZShlLHQsbil7dmFyIG89XyhlKSxzPSFNZShlKSxhPXQuZGlzcGxheU5hbWUsYz12b2lkIDA9PT1hP2Z1bmN0aW9uKGUpe3JldHVybiBNZShlKT9cInN0eWxlZC5cIitlOlwiU3R5bGVkKFwiK0UoZSkrXCIpXCJ9KGUpOmEsZD10LmNvbXBvbmVudElkLGg9dm9pZCAwPT09ZD9mdW5jdGlvbihlLHQpe3ZhciBuPVwic3RyaW5nXCIhPXR5cGVvZiBlP1wic2NcIjpWZShlKTtMZVtuXT0oTGVbbl18fDApKzE7dmFyIHI9bitcIi1cIit6ZShcIjUuMi4wXCIrbitMZVtuXSk7cmV0dXJuIHQ/dCtcIi1cIityOnJ9KHQuZGlzcGxheU5hbWUsdC5wYXJlbnRDb21wb25lbnRJZCk6ZCxwPXQuYXR0cnMsZj12b2lkIDA9PT1wP3c6cCxnPXQuZGlzcGxheU5hbWUmJnQuY29tcG9uZW50SWQ/VmUodC5kaXNwbGF5TmFtZSkrXCItXCIrdC5jb21wb25lbnRJZDp0LmNvbXBvbmVudElkfHxoLFM9byYmZS5hdHRycz9BcnJheS5wcm90b3R5cGUuY29uY2F0KGUuYXR0cnMsZikuZmlsdGVyKEJvb2xlYW4pOmYsST10LnNob3VsZEZvcndhcmRQcm9wO28mJmUuc2hvdWxkRm9yd2FyZFByb3AmJihJPUk/ZnVuY3Rpb24obixyKXtyZXR1cm4gZS5zaG91bGRGb3J3YXJkUHJvcChuLHIpJiZ0LnNob3VsZEZvcndhcmRQcm9wKG4scil9OmUuc2hvdWxkRm9yd2FyZFByb3ApO3ZhciBDLEE9bmV3IFBlKG4sZyxvP2UuY29tcG9uZW50U3R5bGU6dm9pZCAwKSxPPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt2YXIgcj1lLmF0dHJzLG89ZS5jb21wb25lbnRTdHlsZSxzPWUuZGVmYXVsdFByb3BzLGE9ZS5mb2xkZWRDb21wb25lbnRJZHMsYz1lLnNob3VsZEZvcndhcmRQcm9wLGQ9ZS5zdHlsZWRDb21wb25lbnRJZCxoPWUudGFyZ2V0O1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmwoZCk7dmFyIHA9ZnVuY3Rpb24oZSx0LG4pe3ZvaWQgMD09PWUmJihlPWIpO3ZhciByPXYoe30sdCx7dGhlbWU6ZX0pLG89e307cmV0dXJuIG4uZm9yRWFjaCgoZnVuY3Rpb24oZSl7dmFyIHQsbixpLHM9ZTtmb3IodCBpbiBOKHMpJiYocz1zKHIpKSxzKXJbdF09b1t0XT1cImNsYXNzTmFtZVwiPT09dD8obj1vW3RdLGk9c1t0XSxuJiZpP24rXCIgXCIraTpufHxpKTpzW3RdfSkpLFtyLG9dfShEZSh0LGkoR2UpLHMpfHxiLHQsciksZj1wWzBdLHk9cFsxXSxnPWZ1bmN0aW9uKGUsdCxuLHIpe3ZhciBvPWNlKCksaT11ZSgpLHM9ZS5pc1N0YXRpYyYmIXQsYT1zP2UuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMoYixvLGkpOmUuZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMobixvLGkpO3JldHVyblwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmwoYSksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmIXMmJnImJnIoYSksYX0obyxyLmxlbmd0aD4wLGYsXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj9lLndhcm5Ub29NYW55Q2xhc3Nlczp2b2lkIDApLFM9bix3PXkuJGFzfHx0LiRhc3x8eS5hc3x8dC5hc3x8aCxFPU1lKHcpLF89eSE9PXQ/dih7fSx0LHt9LHkpOnQsST1jfHxFJiZtLEM9e307Zm9yKHZhciBBIGluIF8pXCIkXCIhPT1BWzBdJiZcImFzXCIhPT1BJiYoXCJmb3J3YXJkZWRBc1wiPT09QT9DLmFzPV9bQV06SSYmIUkoQSxtKXx8KENbQV09X1tBXSkpO3JldHVybiB0LnN0eWxlJiZ5LnN0eWxlIT09dC5zdHlsZSYmKEMuc3R5bGU9dih7fSx0LnN0eWxlLHt9LHkuc3R5bGUpKSxDLmNsYXNzTmFtZT1BcnJheS5wcm90b3R5cGUuY29uY2F0KGEsZCxnIT09ZD9nOm51bGwsdC5jbGFzc05hbWUseS5jbGFzc05hbWUpLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKSxDLnJlZj1TLHUodyxDKX0oQyxlLHQpfTtyZXR1cm4gTy5kaXNwbGF5TmFtZT1jLChDPXIuZm9yd2FyZFJlZihPKSkuYXR0cnM9UyxDLmNvbXBvbmVudFN0eWxlPUEsQy5kaXNwbGF5TmFtZT1jLEMuc2hvdWxkRm9yd2FyZFByb3A9SSxDLmZvbGRlZENvbXBvbmVudElkcz1vP0FycmF5LnByb3RvdHlwZS5jb25jYXQoZS5mb2xkZWRDb21wb25lbnRJZHMsZS5zdHlsZWRDb21wb25lbnRJZCk6dyxDLnN0eWxlZENvbXBvbmVudElkPWcsQy50YXJnZXQ9bz9lLnRhcmdldDplLEMud2l0aENvbXBvbmVudD1mdW5jdGlvbihlKXt2YXIgcj10LmNvbXBvbmVudElkLG89ZnVuY3Rpb24oZSx0KXtpZihudWxsPT1lKXJldHVybnt9O3ZhciBuLHIsbz17fSxpPU9iamVjdC5rZXlzKGUpO2ZvcihyPTA7cjxpLmxlbmd0aDtyKyspbj1pW3JdLHQuaW5kZXhPZihuKT49MHx8KG9bbl09ZVtuXSk7cmV0dXJuIG99KHQsW1wiY29tcG9uZW50SWRcIl0pLGk9ciYmcitcIi1cIisoTWUoZSk/ZTpWZShFKGUpKSk7cmV0dXJuIHFlKGUsdih7fSxvLHthdHRyczpTLGNvbXBvbmVudElkOml9KSxuKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KEMsXCJkZWZhdWx0UHJvcHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZvbGRlZERlZmF1bHRQcm9wc30sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX2ZvbGRlZERlZmF1bHRQcm9wcz1vP0VlKHt9LGUuZGVmYXVsdFByb3BzLHQpOnR9fSksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKFRlKGMsZyksQy53YXJuVG9vTWFueUNsYXNzZXM9ZnVuY3Rpb24oZSx0KXt2YXIgbj17fSxyPSExO3JldHVybiBmdW5jdGlvbihvKXtpZighciYmKG5bb109ITAsT2JqZWN0LmtleXMobikubGVuZ3RoPj0yMDApKXt2YXIgaT10Pycgd2l0aCB0aGUgaWQgb2YgXCInK3QrJ1wiJzpcIlwiO2NvbnNvbGUud2FybihcIk92ZXIgMjAwIGNsYXNzZXMgd2VyZSBnZW5lcmF0ZWQgZm9yIGNvbXBvbmVudCBcIitlK2krXCIuXFxuQ29uc2lkZXIgdXNpbmcgdGhlIGF0dHJzIG1ldGhvZCwgdG9nZXRoZXIgd2l0aCBhIHN0eWxlIG9iamVjdCBmb3IgZnJlcXVlbnRseSBjaGFuZ2VkIHN0eWxlcy5cXG5FeGFtcGxlOlxcbiAgY29uc3QgQ29tcG9uZW50ID0gc3R5bGVkLmRpdi5hdHRycyhwcm9wcyA9PiAoe1xcbiAgICBzdHlsZToge1xcbiAgICAgIGJhY2tncm91bmQ6IHByb3BzLmJhY2tncm91bmQsXFxuICAgIH0sXFxuICB9KSlgd2lkdGg6IDEwMCU7YFxcblxcbiAgPENvbXBvbmVudCAvPlwiKSxyPSEwLG49e319fX0oYyxnKSksQy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiLlwiK0Muc3R5bGVkQ29tcG9uZW50SWR9LHMmJnkoQyxlLHthdHRyczohMCxjb21wb25lbnRTdHlsZTohMCxkaXNwbGF5TmFtZTohMCxmb2xkZWRDb21wb25lbnRJZHM6ITAsc2hvdWxkRm9yd2FyZFByb3A6ITAsc2VsZjohMCxzdHlsZWRDb21wb25lbnRJZDohMCx0YXJnZXQ6ITAsd2l0aENvbXBvbmVudDohMH0pLEN9dmFyIEhlPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbiBlKHQscixvKXtpZih2b2lkIDA9PT1vJiYobz1iKSwhbihyKSlyZXR1cm4gRCgxLFN0cmluZyhyKSk7dmFyIGk9ZnVuY3Rpb24oKXtyZXR1cm4gdChyLG8sU2UuYXBwbHkodm9pZCAwLGFyZ3VtZW50cykpfTtyZXR1cm4gaS53aXRoQ29uZmlnPWZ1bmN0aW9uKG4pe3JldHVybiBlKHQscix2KHt9LG8se30sbikpfSxpLmF0dHJzPWZ1bmN0aW9uKG4pe3JldHVybiBlKHQscix2KHt9LG8se2F0dHJzOkFycmF5LnByb3RvdHlwZS5jb25jYXQoby5hdHRycyxuKS5maWx0ZXIoQm9vbGVhbil9KSl9LGl9KHFlLGUpfTtbXCJhXCIsXCJhYmJyXCIsXCJhZGRyZXNzXCIsXCJhcmVhXCIsXCJhcnRpY2xlXCIsXCJhc2lkZVwiLFwiYXVkaW9cIixcImJcIixcImJhc2VcIixcImJkaVwiLFwiYmRvXCIsXCJiaWdcIixcImJsb2NrcXVvdGVcIixcImJvZHlcIixcImJyXCIsXCJidXR0b25cIixcImNhbnZhc1wiLFwiY2FwdGlvblwiLFwiY2l0ZVwiLFwiY29kZVwiLFwiY29sXCIsXCJjb2xncm91cFwiLFwiZGF0YVwiLFwiZGF0YWxpc3RcIixcImRkXCIsXCJkZWxcIixcImRldGFpbHNcIixcImRmblwiLFwiZGlhbG9nXCIsXCJkaXZcIixcImRsXCIsXCJkdFwiLFwiZW1cIixcImVtYmVkXCIsXCJmaWVsZHNldFwiLFwiZmlnY2FwdGlvblwiLFwiZmlndXJlXCIsXCJmb290ZXJcIixcImZvcm1cIixcImgxXCIsXCJoMlwiLFwiaDNcIixcImg0XCIsXCJoNVwiLFwiaDZcIixcImhlYWRcIixcImhlYWRlclwiLFwiaGdyb3VwXCIsXCJoclwiLFwiaHRtbFwiLFwiaVwiLFwiaWZyYW1lXCIsXCJpbWdcIixcImlucHV0XCIsXCJpbnNcIixcImtiZFwiLFwia2V5Z2VuXCIsXCJsYWJlbFwiLFwibGVnZW5kXCIsXCJsaVwiLFwibGlua1wiLFwibWFpblwiLFwibWFwXCIsXCJtYXJrXCIsXCJtYXJxdWVlXCIsXCJtZW51XCIsXCJtZW51aXRlbVwiLFwibWV0YVwiLFwibWV0ZXJcIixcIm5hdlwiLFwibm9zY3JpcHRcIixcIm9iamVjdFwiLFwib2xcIixcIm9wdGdyb3VwXCIsXCJvcHRpb25cIixcIm91dHB1dFwiLFwicFwiLFwicGFyYW1cIixcInBpY3R1cmVcIixcInByZVwiLFwicHJvZ3Jlc3NcIixcInFcIixcInJwXCIsXCJydFwiLFwicnVieVwiLFwic1wiLFwic2FtcFwiLFwic2NyaXB0XCIsXCJzZWN0aW9uXCIsXCJzZWxlY3RcIixcInNtYWxsXCIsXCJzb3VyY2VcIixcInNwYW5cIixcInN0cm9uZ1wiLFwic3R5bGVcIixcInN1YlwiLFwic3VtbWFyeVwiLFwic3VwXCIsXCJ0YWJsZVwiLFwidGJvZHlcIixcInRkXCIsXCJ0ZXh0YXJlYVwiLFwidGZvb3RcIixcInRoXCIsXCJ0aGVhZFwiLFwidGltZVwiLFwidGl0bGVcIixcInRyXCIsXCJ0cmFja1wiLFwidVwiLFwidWxcIixcInZhclwiLFwidmlkZW9cIixcIndiclwiLFwiY2lyY2xlXCIsXCJjbGlwUGF0aFwiLFwiZGVmc1wiLFwiZWxsaXBzZVwiLFwiZm9yZWlnbk9iamVjdFwiLFwiZ1wiLFwiaW1hZ2VcIixcImxpbmVcIixcImxpbmVhckdyYWRpZW50XCIsXCJtYXJrZXJcIixcIm1hc2tcIixcInBhdGhcIixcInBhdHRlcm5cIixcInBvbHlnb25cIixcInBvbHlsaW5lXCIsXCJyYWRpYWxHcmFkaWVudFwiLFwicmVjdFwiLFwic3RvcFwiLFwic3ZnXCIsXCJ0ZXh0XCIsXCJ0c3BhblwiXS5mb3JFYWNoKChmdW5jdGlvbihlKXtIZVtlXT1IZShlKX0pKTt2YXIgJGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUsdCl7dGhpcy5ydWxlcz1lLHRoaXMuY29tcG9uZW50SWQ9dCx0aGlzLmlzU3RhdGljPUFlKGUpLFoucmVnaXN0ZXJJZCh0aGlzLmNvbXBvbmVudElkKzEpfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmNyZWF0ZVN0eWxlcz1mdW5jdGlvbihlLHQsbixyKXt2YXIgbz1yKGdlKHRoaXMucnVsZXMsdCxuLHIpLmpvaW4oXCJcIiksXCJcIiksaT10aGlzLmNvbXBvbmVudElkK2U7bi5pbnNlcnRSdWxlcyhpLGksbyl9LHQucmVtb3ZlU3R5bGVzPWZ1bmN0aW9uKGUsdCl7dC5jbGVhclJ1bGVzKHRoaXMuY29tcG9uZW50SWQrZSl9LHQucmVuZGVyU3R5bGVzPWZ1bmN0aW9uKGUsdCxuLHIpe2U+MiYmWi5yZWdpc3RlcklkKHRoaXMuY29tcG9uZW50SWQrZSksdGhpcy5yZW1vdmVTdHlsZXMoZSxuKSx0aGlzLmNyZWF0ZVN0eWxlcyhlLHQsbixyKX0sZX0oKTtmdW5jdGlvbiBZZShlKXtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLG89MTtvPHQ7bysrKW5bby0xXT1hcmd1bWVudHNbb107dmFyIHM9U2UuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpLGE9XCJzYy1nbG9iYWwtXCIremUoSlNPTi5zdHJpbmdpZnkocykpLHU9bmV3ICRlKHMsYSk7ZnVuY3Rpb24gbChlKXt2YXIgdD1jZSgpLG49dWUoKSxvPWkoR2UpLGw9Yyh0LmFsbG9jYXRlR1NJbnN0YW5jZShhKSkuY3VycmVudDtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZyLkNoaWxkcmVuLmNvdW50KGUuY2hpbGRyZW4pJiZjb25zb2xlLndhcm4oXCJUaGUgZ2xvYmFsIHN0eWxlIGNvbXBvbmVudCBcIithK1wiIHdhcyBnaXZlbiBjaGlsZCBKU1guIGNyZWF0ZUdsb2JhbFN0eWxlIGRvZXMgbm90IHJlbmRlciBjaGlsZHJlbi5cIiksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmcy5zb21lKChmdW5jdGlvbihlKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgZSYmLTEhPT1lLmluZGV4T2YoXCJAaW1wb3J0XCIpfSkpJiZjb25zb2xlLndhcm4oXCJQbGVhc2UgZG8gbm90IHVzZSBAaW1wb3J0IENTUyBzeW50YXggaW4gY3JlYXRlR2xvYmFsU3R5bGUgYXQgdGhpcyB0aW1lLCBhcyB0aGUgQ1NTT00gQVBJcyB3ZSB1c2UgaW4gcHJvZHVjdGlvbiBkbyBub3QgaGFuZGxlIGl0IHdlbGwuIEluc3RlYWQsIHdlIHJlY29tbWVuZCB1c2luZyBhIGxpYnJhcnkgc3VjaCBhcyByZWFjdC1oZWxtZXQgdG8gaW5qZWN0IGEgdHlwaWNhbCA8bGluaz4gbWV0YSB0YWcgdG8gdGhlIHN0eWxlc2hlZXQsIG9yIHNpbXBseSBlbWJlZGRpbmcgaXQgbWFudWFsbHkgaW4geW91ciBpbmRleC5odG1sIDxoZWFkPiBzZWN0aW9uIGZvciBhIHNpbXBsZXIgYXBwLlwiKSxkKChmdW5jdGlvbigpe3JldHVybiBoKGwsZSx0LG8sbiksZnVuY3Rpb24oKXtyZXR1cm4gdS5yZW1vdmVTdHlsZXMobCx0KX19KSxbbCxlLHQsbyxuXSksbnVsbH1mdW5jdGlvbiBoKGUsdCxuLHIsbyl7aWYodS5pc1N0YXRpYyl1LnJlbmRlclN0eWxlcyhlLFAsbixvKTtlbHNle3ZhciBpPXYoe30sdCx7dGhlbWU6RGUodCxyLGwuZGVmYXVsdFByb3BzKX0pO3UucmVuZGVyU3R5bGVzKGUsaSxuLG8pfX1yZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZUZShhKSxyLm1lbW8obCl9ZnVuY3Rpb24gV2UoZSl7XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmXCJSZWFjdE5hdGl2ZVwiPT09bmF2aWdhdG9yLnByb2R1Y3QmJmNvbnNvbGUud2FybihcImBrZXlmcmFtZXNgIGNhbm5vdCBiZSB1c2VkIG9uIFJlYWN0TmF0aXZlLCBvbmx5IG9uIHRoZSB3ZWIuIFRvIGRvIGFuaW1hdGlvbiBpbiBSZWFjdE5hdGl2ZSBwbGVhc2UgdXNlIEFuaW1hdGVkLlwiKTtmb3IodmFyIHQ9YXJndW1lbnRzLmxlbmd0aCxuPW5ldyBBcnJheSh0PjE/dC0xOjApLHI9MTtyPHQ7cisrKW5bci0xXT1hcmd1bWVudHNbcl07dmFyIG89U2UuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQobikpLmpvaW4oXCJcIiksaT16ZShvKTtyZXR1cm4gbmV3IGRlKGksbyl9dmFyIFVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe3ZhciBlPXRoaXM7dGhpcy5fZW1pdFNoZWV0Q1NTPWZ1bmN0aW9uKCl7dmFyIHQ9ZS5pbnN0YW5jZS50b1N0cmluZygpLG49UigpO3JldHVyblwiPHN0eWxlIFwiK1tuJiYnbm9uY2U9XCInK24rJ1wiJyxJKyc9XCJ0cnVlXCInLCdkYXRhLXN0eWxlZC12ZXJzaW9uPVwiNS4yLjBcIiddLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKStcIj5cIit0K1wiPC9zdHlsZT5cIn0sdGhpcy5nZXRTdHlsZVRhZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gZS5zZWFsZWQ/RCgyKTplLl9lbWl0U2hlZXRDU1MoKX0sdGhpcy5nZXRTdHlsZUVsZW1lbnQ9ZnVuY3Rpb24oKXt2YXIgdDtpZihlLnNlYWxlZClyZXR1cm4gRCgyKTt2YXIgbj0oKHQ9e30pW0ldPVwiXCIsdFtcImRhdGEtc3R5bGVkLXZlcnNpb25cIl09XCI1LjIuMFwiLHQuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e19faHRtbDplLmluc3RhbmNlLnRvU3RyaW5nKCl9LHQpLG89UigpO3JldHVybiBvJiYobi5ub25jZT1vKSxbci5jcmVhdGVFbGVtZW50KFwic3R5bGVcIix2KHt9LG4se2tleTpcInNjLTAtMFwifSkpXX0sdGhpcy5zZWFsPWZ1bmN0aW9uKCl7ZS5zZWFsZWQ9ITB9LHRoaXMuaW5zdGFuY2U9bmV3IFooe2lzU2VydmVyOiEwfSksdGhpcy5zZWFsZWQ9ITF9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuY29sbGVjdFN0eWxlcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5zZWFsZWQ/RCgyKTpyLmNyZWF0ZUVsZW1lbnQobGUse3NoZWV0OnRoaXMuaW5zdGFuY2V9LGUpfSx0LmludGVybGVhdmVXaXRoTm9kZVN0cmVhbT1mdW5jdGlvbihlKXtyZXR1cm4gRCgzKX0sZX0oKSxKZT1mdW5jdGlvbihlKXt2YXIgdD1yLmZvcndhcmRSZWYoKGZ1bmN0aW9uKHQsbil7dmFyIG89aShHZSkscz1lLmRlZmF1bHRQcm9wcyxhPURlKHQsbyxzKTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZ2b2lkIDA9PT1hJiZjb25zb2xlLndhcm4oJ1t3aXRoVGhlbWVdIFlvdSBhcmUgbm90IHVzaW5nIGEgVGhlbWVQcm92aWRlciBub3IgcGFzc2luZyBhIHRoZW1lIHByb3Agb3IgYSB0aGVtZSBpbiBkZWZhdWx0UHJvcHMgaW4gY29tcG9uZW50IGNsYXNzIFwiJytFKGUpKydcIicpLHIuY3JlYXRlRWxlbWVudChlLHYoe30sdCx7dGhlbWU6YSxyZWY6bn0pKX0pKTtyZXR1cm4geSh0LGUpLHQuZGlzcGxheU5hbWU9XCJXaXRoVGhlbWUoXCIrRShlKStcIilcIix0fSxYZT1mdW5jdGlvbigpe3JldHVybiBpKEdlKX0sWmU9e1N0eWxlU2hlZXQ6WixtYXN0ZXJTaGVldDpzZX07XCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG5hdmlnYXRvciYmXCJSZWFjdE5hdGl2ZVwiPT09bmF2aWdhdG9yLnByb2R1Y3QmJmNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgeW91J3ZlIGltcG9ydGVkICdzdHlsZWQtY29tcG9uZW50cycgb24gUmVhY3QgTmF0aXZlLlxcblBlcmhhcHMgeW91J3JlIGxvb2tpbmcgdG8gaW1wb3J0ICdzdHlsZWQtY29tcG9uZW50cy9uYXRpdmUnP1xcblJlYWQgbW9yZSBhYm91dCB0aGlzIGF0IGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2Jhc2ljcyNyZWFjdC1uYXRpdmVcIiksXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJ0ZXN0XCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmKHdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdPXdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdfHwwLDE9PT13aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXSYmY29uc29sZS53YXJuKFwiSXQgbG9va3MgbGlrZSB0aGVyZSBhcmUgc2V2ZXJhbCBpbnN0YW5jZXMgb2YgJ3N0eWxlZC1jb21wb25lbnRzJyBpbml0aWFsaXplZCBpbiB0aGlzIGFwcGxpY2F0aW9uLiBUaGlzIG1heSBjYXVzZSBkeW5hbWljIHN0eWxlcyBub3QgcmVuZGVyaW5nIHByb3Blcmx5LCBlcnJvcnMgaGFwcGVuaW5nIGR1cmluZyByZWh5ZHJhdGlvbiBwcm9jZXNzLCBtaXNzaW5nIHRoZW1lIHByb3AsIGFuZCBtYWtlcyB5b3VyIGFwcGxpY2F0aW9uIGJpZ2dlciB3aXRob3V0IGEgZ29vZCByZWFzb24uXFxuXFxuU2VlIGh0dHBzOi8vcy1jLnNoLzJCQVh6ZWQgZm9yIG1vcmUgaW5mby5cIiksd2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl0rPTEpO2V4cG9ydCBkZWZhdWx0IEhlO2V4cG9ydHtVZSBhcyBTZXJ2ZXJTdHlsZVNoZWV0LG9lIGFzIFN0eWxlU2hlZXRDb25zdW1lcixyZSBhcyBTdHlsZVNoZWV0Q29udGV4dCxsZSBhcyBTdHlsZVNoZWV0TWFuYWdlcixGZSBhcyBUaGVtZUNvbnN1bWVyLEdlIGFzIFRoZW1lQ29udGV4dCxCZSBhcyBUaGVtZVByb3ZpZGVyLFplIGFzIF9fUFJJVkFURV9fLFllIGFzIGNyZWF0ZUdsb2JhbFN0eWxlLFNlIGFzIGNzcyxfIGFzIGlzU3R5bGVkQ29tcG9uZW50LFdlIGFzIGtleWZyYW1lcyxYZSBhcyB1c2VUaGVtZSxDIGFzIHZlcnNpb24sSmUgYXMgd2l0aFRoZW1lfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0eWxlZC1jb21wb25lbnRzLmJyb3dzZXIuZXNtLmpzLm1hcFxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhbiBvYmplY3QhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCIvKiFcbiAgQ29weXJpZ2h0IChjKSAyMDE3IEplZCBXYXRzb24uXG4gIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXG4gIGh0dHA6Ly9qZWR3YXRzb24uZ2l0aHViLmlvL2NsYXNzbmFtZXNcbiovXG4vKiBnbG9iYWwgZGVmaW5lICovXG5cbihmdW5jdGlvbiAoKSB7XG5cdCd1c2Ugc3RyaWN0JztcblxuXHR2YXIgaGFzT3duID0ge30uaGFzT3duUHJvcGVydHk7XG5cblx0ZnVuY3Rpb24gY2xhc3NOYW1lcyAoKSB7XG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xuXHRcdFx0aWYgKCFhcmcpIGNvbnRpbnVlO1xuXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XG5cblx0XHRcdGlmIChhcmdUeXBlID09PSAnc3RyaW5nJyB8fCBhcmdUeXBlID09PSAnbnVtYmVyJykge1xuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShhcmcpICYmIGFyZy5sZW5ndGgpIHtcblx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xuXHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goaW5uZXIpO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBhcmcpIHtcblx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XG5cdFx0XHRcdFx0XHRjbGFzc2VzLnB1c2goa2V5KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XG5cdH1cblxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcblx0XHRjbGFzc05hbWVzLmRlZmF1bHQgPSBjbGFzc05hbWVzO1xuXHRcdG1vZHVsZS5leHBvcnRzID0gY2xhc3NOYW1lcztcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XG5cdFx0Ly8gcmVnaXN0ZXIgYXMgJ2NsYXNzbmFtZXMnLCBjb25zaXN0ZW50IHdpdGggbnBtIHBhY2thZ2UgbmFtZVxuXHRcdGRlZmluZSgnY2xhc3NuYW1lcycsIFtdLCBmdW5jdGlvbiAoKSB7XG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcblx0XHR9KTtcblx0fSBlbHNlIHtcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XG5cdH1cbn0oKSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgdmFyIFJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IGRldmVsb3BtZW50IGJlaGF2aW9yLlxuICAvLyBodHRwOi8vZmIubWUvcHJvcC10eXBlcy1pbi1wcm9kXG4gIHZhciB0aHJvd09uRGlyZWN0QWNjZXNzID0gdHJ1ZTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVHlwZUNoZWNrZXJzJykoUmVhY3RJcy5pc0VsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpO1xufSBlbHNlIHtcbiAgLy8gQnkgZXhwbGljaXRseSB1c2luZyBgcHJvcC10eXBlc2AgeW91IGFyZSBvcHRpbmcgaW50byBuZXcgcHJvZHVjdGlvbiBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zJykoKTtcbn1cbiIsIi8vIDcuMS4xNSBUb0xlbmd0aFxudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA+IDAgPyBtaW4odG9JbnRlZ2VyKGl0KSwgMHgxZmZmZmZmZmZmZmZmZikgOiAwOyAvLyBwb3coMiwgNTMpIC0gMSA9PSA5MDA3MTk5MjU0NzQwOTkxXG59O1xuIiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwiLy8gNy4xLjEzIFRvT2JqZWN0KGFyZ3VtZW50KVxudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShzb3VyY2UsIGV4Y2x1ZGVkKSB7XG4gIGlmIChzb3VyY2UgPT0gbnVsbCkgcmV0dXJuIHt9O1xuICB2YXIgdGFyZ2V0ID0ge307XG4gIHZhciBzb3VyY2VLZXlzID0gT2JqZWN0LmtleXMoc291cmNlKTtcbiAgdmFyIGtleSwgaTtcblxuICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykge1xuICAgIGtleSA9IHNvdXJjZUtleXNbaV07XG4gICAgaWYgKGV4Y2x1ZGVkLmluZGV4T2Yoa2V5KSA+PSAwKSBjb250aW51ZTtcbiAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn0iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAodHlwZW9mIGl0ICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgZnVuY3Rpb24hJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBTUkMgPSByZXF1aXJlKCcuL191aWQnKSgnc3JjJyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi9fZnVuY3Rpb24tdG8tc3RyaW5nJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBUUEwgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWwsIHNhZmUpIHtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmIChPW2tleV0gPT09IHZhbCkgcmV0dXJuO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7XG4gIGlmIChPID09PSBnbG9iYWwpIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSBpZiAoIXNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9IGVsc2UgaWYgKE9ba2V5XSkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBxdW90ID0gL1wiL2c7XG4vLyBCLjIuMy4yLjEgQ3JlYXRlSFRNTChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSlcbnZhciBjcmVhdGVIVE1MID0gZnVuY3Rpb24gKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG4gIHZhciBTID0gU3RyaW5nKGRlZmluZWQoc3RyaW5nKSk7XG4gIHZhciBwMSA9ICc8JyArIHRhZztcbiAgaWYgKGF0dHJpYnV0ZSAhPT0gJycpIHAxICs9ICcgJyArIGF0dHJpYnV0ZSArICc9XCInICsgU3RyaW5nKHZhbHVlKS5yZXBsYWNlKHF1b3QsICcmcXVvdDsnKSArICdcIic7XG4gIHJldHVybiBwMSArICc+JyArIFMgKyAnPC8nICsgdGFnICsgJz4nO1xufTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUsIGV4ZWMpIHtcbiAgdmFyIE8gPSB7fTtcbiAgT1tOQU1FXSA9IGV4ZWMoY3JlYXRlSFRNTCk7XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHZhciB0ZXN0ID0gJydbTkFNRV0oJ1wiJyk7XG4gICAgcmV0dXJuIHRlc3QgIT09IHRlc3QudG9Mb3dlckNhc2UoKSB8fCB0ZXN0LnNwbGl0KCdcIicpLmxlbmd0aCA+IDM7XG4gIH0pLCAnU3RyaW5nJywgTyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG5cbi8qZ2xvYmFsIHRvU3RyaW5nOnRydWUqL1xuXG4vLyB1dGlscyBpcyBhIGxpYnJhcnkgb2YgZ2VuZXJpYyBoZWxwZXIgZnVuY3Rpb25zIG5vbi1zcGVjaWZpYyB0byBheGlvc1xuXG52YXIgdG9TdHJpbmcgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nO1xuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXksIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5KHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheV0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIHVuZGVmaW5lZFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSB2YWx1ZSBpcyB1bmRlZmluZWQsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICd1bmRlZmluZWQnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgQnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0J1ZmZlcih2YWwpIHtcbiAgcmV0dXJuIHZhbCAhPT0gbnVsbCAmJiAhaXNVbmRlZmluZWQodmFsKSAmJiB2YWwuY29uc3RydWN0b3IgIT09IG51bGwgJiYgIWlzVW5kZWZpbmVkKHZhbC5jb25zdHJ1Y3RvcilcbiAgICAmJiB0eXBlb2YgdmFsLmNvbnN0cnVjdG9yLmlzQnVmZmVyID09PSAnZnVuY3Rpb24nICYmIHZhbC5jb25zdHJ1Y3Rvci5pc0J1ZmZlcih2YWwpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIEFycmF5QnVmZmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyKHZhbCkge1xuICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWwpID09PSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgRm9ybURhdGFcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhbiBGb3JtRGF0YSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRm9ybURhdGEodmFsKSB7XG4gIHJldHVybiAodHlwZW9mIEZvcm1EYXRhICE9PSAndW5kZWZpbmVkJykgJiYgKHZhbCBpbnN0YW5jZW9mIEZvcm1EYXRhKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXJcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHZpZXcgb24gYW4gQXJyYXlCdWZmZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5QnVmZmVyVmlldyh2YWwpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKCh0eXBlb2YgQXJyYXlCdWZmZXIgIT09ICd1bmRlZmluZWQnKSAmJiAoQXJyYXlCdWZmZXIuaXNWaWV3KSkge1xuICAgIHJlc3VsdCA9IEFycmF5QnVmZmVyLmlzVmlldyh2YWwpO1xuICB9IGVsc2Uge1xuICAgIHJlc3VsdCA9ICh2YWwpICYmICh2YWwuYnVmZmVyKSAmJiAodmFsLmJ1ZmZlciBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgU3RyaW5nXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBTdHJpbmcsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdzdHJpbmcnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgTnVtYmVyXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBOdW1iZXIsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc051bWJlcih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdudW1iZXInO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGFuIE9iamVjdFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB2YWwgVGhlIHZhbHVlIHRvIHRlc3RcbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHZhbHVlIGlzIGFuIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiBhIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybiB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsKSB7XG4gIGlmICh0b1N0cmluZy5jYWxsKHZhbCkgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIHByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZih2YWwpO1xuICByZXR1cm4gcHJvdG90eXBlID09PSBudWxsIHx8IHByb3RvdHlwZSA9PT0gT2JqZWN0LnByb3RvdHlwZTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIERhdGVcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIERhdGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0RhdGUodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IERhdGVdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZpbGVcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEZpbGUsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0ZpbGUodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEZpbGVdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEJsb2JcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIEJsb2IsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0Jsb2IodmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEJsb2JdJztcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIEZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHZhbCBUaGUgdmFsdWUgdG8gdGVzdFxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdmFsdWUgaXMgYSBGdW5jdGlvbiwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzRnVuY3Rpb24odmFsKSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbCkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSc7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lIGlmIGEgdmFsdWUgaXMgYSBTdHJlYW1cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFN0cmVhbSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzU3RyZWFtKHZhbCkge1xuICByZXR1cm4gaXNPYmplY3QodmFsKSAmJiBpc0Z1bmN0aW9uKHZhbC5waXBlKTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgYSB2YWx1ZSBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3RcbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gdmFsIFRoZSB2YWx1ZSB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB2YWx1ZSBpcyBhIFVSTFNlYXJjaFBhcmFtcyBvYmplY3QsIG90aGVyd2lzZSBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiBVUkxTZWFyY2hQYXJhbXMgIT09ICd1bmRlZmluZWQnICYmIHZhbCBpbnN0YW5jZW9mIFVSTFNlYXJjaFBhcmFtcztcbn1cblxuLyoqXG4gKiBUcmltIGV4Y2VzcyB3aGl0ZXNwYWNlIG9mZiB0aGUgYmVnaW5uaW5nIGFuZCBlbmQgb2YgYSBzdHJpbmdcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIFRoZSBTdHJpbmcgdG8gdHJpbVxuICogQHJldHVybnMge1N0cmluZ30gVGhlIFN0cmluZyBmcmVlZCBvZiBleGNlc3Mgd2hpdGVzcGFjZVxuICovXG5mdW5jdGlvbiB0cmltKHN0cikge1xuICByZXR1cm4gc3RyLnJlcGxhY2UoL15cXHMqLywgJycpLnJlcGxhY2UoL1xccyokLywgJycpO1xufVxuXG4vKipcbiAqIERldGVybWluZSBpZiB3ZSdyZSBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudFxuICpcbiAqIFRoaXMgYWxsb3dzIGF4aW9zIHRvIHJ1biBpbiBhIHdlYiB3b3JrZXIsIGFuZCByZWFjdC1uYXRpdmUuXG4gKiBCb3RoIGVudmlyb25tZW50cyBzdXBwb3J0IFhNTEh0dHBSZXF1ZXN0LCBidXQgbm90IGZ1bGx5IHN0YW5kYXJkIGdsb2JhbHMuXG4gKlxuICogd2ViIHdvcmtlcnM6XG4gKiAgdHlwZW9mIHdpbmRvdyAtPiB1bmRlZmluZWRcbiAqICB0eXBlb2YgZG9jdW1lbnQgLT4gdW5kZWZpbmVkXG4gKlxuICogcmVhY3QtbmF0aXZlOlxuICogIG5hdmlnYXRvci5wcm9kdWN0IC0+ICdSZWFjdE5hdGl2ZSdcbiAqIG5hdGl2ZXNjcmlwdFxuICogIG5hdmlnYXRvci5wcm9kdWN0IC0+ICdOYXRpdmVTY3JpcHQnIG9yICdOUydcbiAqL1xuZnVuY3Rpb24gaXNTdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gIGlmICh0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiAobmF2aWdhdG9yLnByb2R1Y3QgPT09ICdSZWFjdE5hdGl2ZScgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ05hdGl2ZVNjcmlwdCcgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXZpZ2F0b3IucHJvZHVjdCA9PT0gJ05TJykpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIChcbiAgICB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxuICAgIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCdcbiAgKTtcbn1cblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYW4gQXJyYXkgb3IgYW4gT2JqZWN0IGludm9raW5nIGEgZnVuY3Rpb24gZm9yIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiBgb2JqYCBpcyBhbiBBcnJheSBjYWxsYmFjayB3aWxsIGJlIGNhbGxlZCBwYXNzaW5nXG4gKiB0aGUgdmFsdWUsIGluZGV4LCBhbmQgY29tcGxldGUgYXJyYXkgZm9yIGVhY2ggaXRlbS5cbiAqXG4gKiBJZiAnb2JqJyBpcyBhbiBPYmplY3QgY2FsbGJhY2sgd2lsbCBiZSBjYWxsZWQgcGFzc2luZ1xuICogdGhlIHZhbHVlLCBrZXksIGFuZCBjb21wbGV0ZSBvYmplY3QgZm9yIGVhY2ggcHJvcGVydHkuXG4gKlxuICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IG9iaiBUaGUgb2JqZWN0IHRvIGl0ZXJhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBjYWxsYmFjayB0byBpbnZva2UgZm9yIGVhY2ggaXRlbVxuICovXG5mdW5jdGlvbiBmb3JFYWNoKG9iaiwgZm4pIHtcbiAgLy8gRG9uJ3QgYm90aGVyIGlmIG5vIHZhbHVlIHByb3ZpZGVkXG4gIGlmIChvYmogPT09IG51bGwgfHwgdHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBGb3JjZSBhbiBhcnJheSBpZiBub3QgYWxyZWFkeSBzb21ldGhpbmcgaXRlcmFibGVcbiAgaWYgKHR5cGVvZiBvYmogIT09ICdvYmplY3QnKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgb2JqID0gW29ial07XG4gIH1cblxuICBpZiAoaXNBcnJheShvYmopKSB7XG4gICAgLy8gSXRlcmF0ZSBvdmVyIGFycmF5IHZhbHVlc1xuICAgIGZvciAodmFyIGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgZm4uY2FsbChudWxsLCBvYmpbaV0sIGksIG9iaik7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIC8vIEl0ZXJhdGUgb3ZlciBvYmplY3Qga2V5c1xuICAgIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgIGZuLmNhbGwobnVsbCwgb2JqW2tleV0sIGtleSwgb2JqKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBBY2NlcHRzIHZhcmFyZ3MgZXhwZWN0aW5nIGVhY2ggYXJndW1lbnQgdG8gYmUgYW4gb2JqZWN0LCB0aGVuXG4gKiBpbW11dGFibHkgbWVyZ2VzIHRoZSBwcm9wZXJ0aWVzIG9mIGVhY2ggb2JqZWN0IGFuZCByZXR1cm5zIHJlc3VsdC5cbiAqXG4gKiBXaGVuIG11bHRpcGxlIG9iamVjdHMgY29udGFpbiB0aGUgc2FtZSBrZXkgdGhlIGxhdGVyIG9iamVjdCBpblxuICogdGhlIGFyZ3VtZW50cyBsaXN0IHdpbGwgdGFrZSBwcmVjZWRlbmNlLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBganNcbiAqIHZhciByZXN1bHQgPSBtZXJnZSh7Zm9vOiAxMjN9LCB7Zm9vOiA0NTZ9KTtcbiAqIGNvbnNvbGUubG9nKHJlc3VsdC5mb28pOyAvLyBvdXRwdXRzIDQ1NlxuICogYGBgXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9iajEgT2JqZWN0IHRvIG1lcmdlXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXN1bHQgb2YgYWxsIG1lcmdlIHByb3BlcnRpZXNcbiAqL1xuZnVuY3Rpb24gbWVyZ2UoLyogb2JqMSwgb2JqMiwgb2JqMywgLi4uICovKSB7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgZnVuY3Rpb24gYXNzaWduVmFsdWUodmFsLCBrZXkpIHtcbiAgICBpZiAoaXNQbGFpbk9iamVjdChyZXN1bHRba2V5XSkgJiYgaXNQbGFpbk9iamVjdCh2YWwpKSB7XG4gICAgICByZXN1bHRba2V5XSA9IG1lcmdlKHJlc3VsdFtrZXldLCB2YWwpO1xuICAgIH0gZWxzZSBpZiAoaXNQbGFpbk9iamVjdCh2YWwpKSB7XG4gICAgICByZXN1bHRba2V5XSA9IG1lcmdlKHt9LCB2YWwpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheSh2YWwpKSB7XG4gICAgICByZXN1bHRba2V5XSA9IHZhbC5zbGljZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXN1bHRba2V5XSA9IHZhbDtcbiAgICB9XG4gIH1cblxuICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICBmb3JFYWNoKGFyZ3VtZW50c1tpXSwgYXNzaWduVmFsdWUpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogRXh0ZW5kcyBvYmplY3QgYSBieSBtdXRhYmx5IGFkZGluZyB0byBpdCB0aGUgcHJvcGVydGllcyBvZiBvYmplY3QgYi5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gYSBUaGUgb2JqZWN0IHRvIGJlIGV4dGVuZGVkXG4gKiBAcGFyYW0ge09iamVjdH0gYiBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tXG4gKiBAcGFyYW0ge09iamVjdH0gdGhpc0FyZyBUaGUgb2JqZWN0IHRvIGJpbmQgZnVuY3Rpb24gdG9cbiAqIEByZXR1cm4ge09iamVjdH0gVGhlIHJlc3VsdGluZyB2YWx1ZSBvZiBvYmplY3QgYVxuICovXG5mdW5jdGlvbiBleHRlbmQoYSwgYiwgdGhpc0FyZykge1xuICBmb3JFYWNoKGIsIGZ1bmN0aW9uIGFzc2lnblZhbHVlKHZhbCwga2V5KSB7XG4gICAgaWYgKHRoaXNBcmcgJiYgdHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYVtrZXldID0gYmluZCh2YWwsIHRoaXNBcmcpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhW2tleV0gPSB2YWw7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGE7XG59XG5cbi8qKlxuICogUmVtb3ZlIGJ5dGUgb3JkZXIgbWFya2VyLiBUaGlzIGNhdGNoZXMgRUYgQkIgQkYgKHRoZSBVVEYtOCBCT00pXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGNvbnRlbnQgd2l0aCBCT01cbiAqIEByZXR1cm4ge3N0cmluZ30gY29udGVudCB2YWx1ZSB3aXRob3V0IEJPTVxuICovXG5mdW5jdGlvbiBzdHJpcEJPTShjb250ZW50KSB7XG4gIGlmIChjb250ZW50LmNoYXJDb2RlQXQoMCkgPT09IDB4RkVGRikge1xuICAgIGNvbnRlbnQgPSBjb250ZW50LnNsaWNlKDEpO1xuICB9XG4gIHJldHVybiBjb250ZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgaXNBcnJheTogaXNBcnJheSxcbiAgaXNBcnJheUJ1ZmZlcjogaXNBcnJheUJ1ZmZlcixcbiAgaXNCdWZmZXI6IGlzQnVmZmVyLFxuICBpc0Zvcm1EYXRhOiBpc0Zvcm1EYXRhLFxuICBpc0FycmF5QnVmZmVyVmlldzogaXNBcnJheUJ1ZmZlclZpZXcsXG4gIGlzU3RyaW5nOiBpc1N0cmluZyxcbiAgaXNOdW1iZXI6IGlzTnVtYmVyLFxuICBpc09iamVjdDogaXNPYmplY3QsXG4gIGlzUGxhaW5PYmplY3Q6IGlzUGxhaW5PYmplY3QsXG4gIGlzVW5kZWZpbmVkOiBpc1VuZGVmaW5lZCxcbiAgaXNEYXRlOiBpc0RhdGUsXG4gIGlzRmlsZTogaXNGaWxlLFxuICBpc0Jsb2I6IGlzQmxvYixcbiAgaXNGdW5jdGlvbjogaXNGdW5jdGlvbixcbiAgaXNTdHJlYW06IGlzU3RyZWFtLFxuICBpc1VSTFNlYXJjaFBhcmFtczogaXNVUkxTZWFyY2hQYXJhbXMsXG4gIGlzU3RhbmRhcmRCcm93c2VyRW52OiBpc1N0YW5kYXJkQnJvd3NlckVudixcbiAgZm9yRWFjaDogZm9yRWFjaCxcbiAgbWVyZ2U6IG1lcmdlLFxuICBleHRlbmQ6IGV4dGVuZCxcbiAgdHJpbTogdHJpbSxcbiAgc3RyaXBCT006IHN0cmlwQk9NXG59O1xuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwidmFyIGNvcmUgPSBtb2R1bGUuZXhwb3J0cyA9IHsgdmVyc2lvbjogJzIuNi4xMScgfTtcbmlmICh0eXBlb2YgX19lID09ICdudW1iZXInKSBfX2UgPSBjb3JlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCIvLyBvcHRpb25hbCAvIHNpbXBsZSBjb250ZXh0IGJpbmRpbmdcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbiwgdGhhdCwgbGVuZ3RoKSB7XG4gIGFGdW5jdGlvbihmbik7XG4gIGlmICh0aGF0ID09PSB1bmRlZmluZWQpIHJldHVybiBmbjtcbiAgc3dpdGNoIChsZW5ndGgpIHtcbiAgICBjYXNlIDE6IHJldHVybiBmdW5jdGlvbiAoYSkge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSk7XG4gICAgfTtcbiAgICBjYXNlIDI6IHJldHVybiBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYik7XG4gICAgfTtcbiAgICBjYXNlIDM6IHJldHVybiBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgcmV0dXJuIGZuLmNhbGwodGhhdCwgYSwgYiwgYyk7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gZnVuY3Rpb24gKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICByZXR1cm4gZm4uYXBwbHkodGhhdCwgYXJndW1lbnRzKTtcbiAgfTtcbn07XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1ldGhvZCwgYXJnKSB7XG4gIHJldHVybiAhIW1ldGhvZCAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtY2FsbFxuICAgIGFyZyA/IG1ldGhvZC5jYWxsKG51bGwsIGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSwgMSkgOiBtZXRob2QuY2FsbChudWxsKTtcbiAgfSk7XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIG1vc3QgT2JqZWN0IG1ldGhvZHMgYnkgRVM2IHNob3VsZCBhY2NlcHQgcHJpbWl0aXZlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgZXhlYykge1xuICB2YXIgZm4gPSAoY29yZS5PYmplY3QgfHwge30pW0tFWV0gfHwgT2JqZWN0W0tFWV07XG4gIHZhciBleHAgPSB7fTtcbiAgZXhwW0tFWV0gPSBleGVjKGZuKTtcbiAgJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBmYWlscyhmdW5jdGlvbiAoKSB7IGZuKDEpOyB9KSwgJ09iamVjdCcsIGV4cCk7XG59O1xuIiwiLy8gMCAtPiBBcnJheSNmb3JFYWNoXG4vLyAxIC0+IEFycmF5I21hcFxuLy8gMiAtPiBBcnJheSNmaWx0ZXJcbi8vIDMgLT4gQXJyYXkjc29tZVxuLy8gNCAtPiBBcnJheSNldmVyeVxuLy8gNSAtPiBBcnJheSNmaW5kXG4vLyA2IC0+IEFycmF5I2ZpbmRJbmRleFxudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFzYyA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUWVBFLCAkY3JlYXRlKSB7XG4gIHZhciBJU19NQVAgPSBUWVBFID09IDE7XG4gIHZhciBJU19GSUxURVIgPSBUWVBFID09IDI7XG4gIHZhciBJU19TT01FID0gVFlQRSA9PSAzO1xuICB2YXIgSVNfRVZFUlkgPSBUWVBFID09IDQ7XG4gIHZhciBJU19GSU5EX0lOREVYID0gVFlQRSA9PSA2O1xuICB2YXIgTk9fSE9MRVMgPSBUWVBFID09IDUgfHwgSVNfRklORF9JTkRFWDtcbiAgdmFyIGNyZWF0ZSA9ICRjcmVhdGUgfHwgYXNjO1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBjYWxsYmFja2ZuLCB0aGF0KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCgkdGhpcyk7XG4gICAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIHRoYXQsIDMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChzZWxmLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgdmFsLCByZXM7XG4gICAgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChOT19IT0xFUyB8fCBpbmRleCBpbiBzZWxmKSB7XG4gICAgICB2YWwgPSBzZWxmW2luZGV4XTtcbiAgICAgIHJlcyA9IGYodmFsLCBpbmRleCwgTyk7XG4gICAgICBpZiAoVFlQRSkge1xuICAgICAgICBpZiAoSVNfTUFQKSByZXN1bHRbaW5kZXhdID0gcmVzOyAgIC8vIG1hcFxuICAgICAgICBlbHNlIGlmIChyZXMpIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgMzogcmV0dXJuIHRydWU7ICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWw7ICAgICAgICAgICAgICAvLyBmaW5kXG4gICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgLy8gZmluZEluZGV4XG4gICAgICAgICAgY2FzZSAyOiByZXN1bHQucHVzaCh2YWwpOyAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBpZiAoSVNfRVZFUlkpIHJldHVybiBmYWxzZTsgLy8gZXZlcnlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIElTX0ZJTkRfSU5ERVggPyAtMSA6IElTX1NPTUUgfHwgSVNfRVZFUlkgPyBJU19FVkVSWSA6IHJlc3VsdDtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSkge1xuICB2YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbiAgdmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xuICB2YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xuICB2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuICB2YXIgJHR5cGVkID0gcmVxdWlyZSgnLi9fdHlwZWQnKTtcbiAgdmFyICRidWZmZXIgPSByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKTtcbiAgdmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xuICB2YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG4gIHZhciBwcm9wZXJ0eURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG4gIHZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xuICB2YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbiAgdmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbiAgdmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG4gIHZhciB0b0luZGV4ID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbiAgdmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG4gIHZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xuICB2YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG4gIHZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xuICB2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbiAgdmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG4gIHZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbiAgdmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbiAgdmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xuICB2YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbiAgdmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG4gIHZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbiAgdmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xuICB2YXIgY3JlYXRlQXJyYXlNZXRob2QgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJyk7XG4gIHZhciBjcmVhdGVBcnJheUluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKTtcbiAgdmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbiAgdmFyIEFycmF5SXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbiAgdmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xuICB2YXIgJGl0ZXJEZXRlY3QgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpO1xuICB2YXIgc2V0U3BlY2llcyA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJyk7XG4gIHZhciBhcnJheUZpbGwgPSByZXF1aXJlKCcuL19hcnJheS1maWxsJyk7XG4gIHZhciBhcnJheUNvcHlXaXRoaW4gPSByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpO1xuICB2YXIgJERQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG4gIHZhciAkR09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG4gIHZhciBkUCA9ICREUC5mO1xuICB2YXIgZ09QRCA9ICRHT1BELmY7XG4gIHZhciBSYW5nZUVycm9yID0gZ2xvYmFsLlJhbmdlRXJyb3I7XG4gIHZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xuICB2YXIgVWludDhBcnJheSA9IGdsb2JhbC5VaW50OEFycmF5O1xuICB2YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcbiAgdmFyIFNIQVJFRF9CVUZGRVIgPSAnU2hhcmVkJyArIEFSUkFZX0JVRkZFUjtcbiAgdmFyIEJZVEVTX1BFUl9FTEVNRU5UID0gJ0JZVEVTX1BFUl9FTEVNRU5UJztcbiAgdmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuICB2YXIgQXJyYXlQcm90byA9IEFycmF5W1BST1RPVFlQRV07XG4gIHZhciAkQXJyYXlCdWZmZXIgPSAkYnVmZmVyLkFycmF5QnVmZmVyO1xuICB2YXIgJERhdGFWaWV3ID0gJGJ1ZmZlci5EYXRhVmlldztcbiAgdmFyIGFycmF5Rm9yRWFjaCA9IGNyZWF0ZUFycmF5TWV0aG9kKDApO1xuICB2YXIgYXJyYXlGaWx0ZXIgPSBjcmVhdGVBcnJheU1ldGhvZCgyKTtcbiAgdmFyIGFycmF5U29tZSA9IGNyZWF0ZUFycmF5TWV0aG9kKDMpO1xuICB2YXIgYXJyYXlFdmVyeSA9IGNyZWF0ZUFycmF5TWV0aG9kKDQpO1xuICB2YXIgYXJyYXlGaW5kID0gY3JlYXRlQXJyYXlNZXRob2QoNSk7XG4gIHZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xuICB2YXIgYXJyYXlJbmNsdWRlcyA9IGNyZWF0ZUFycmF5SW5jbHVkZXModHJ1ZSk7XG4gIHZhciBhcnJheUluZGV4T2YgPSBjcmVhdGVBcnJheUluY2x1ZGVzKGZhbHNlKTtcbiAgdmFyIGFycmF5VmFsdWVzID0gQXJyYXlJdGVyYXRvcnMudmFsdWVzO1xuICB2YXIgYXJyYXlLZXlzID0gQXJyYXlJdGVyYXRvcnMua2V5cztcbiAgdmFyIGFycmF5RW50cmllcyA9IEFycmF5SXRlcmF0b3JzLmVudHJpZXM7XG4gIHZhciBhcnJheUxhc3RJbmRleE9mID0gQXJyYXlQcm90by5sYXN0SW5kZXhPZjtcbiAgdmFyIGFycmF5UmVkdWNlID0gQXJyYXlQcm90by5yZWR1Y2U7XG4gIHZhciBhcnJheVJlZHVjZVJpZ2h0ID0gQXJyYXlQcm90by5yZWR1Y2VSaWdodDtcbiAgdmFyIGFycmF5Sm9pbiA9IEFycmF5UHJvdG8uam9pbjtcbiAgdmFyIGFycmF5U29ydCA9IEFycmF5UHJvdG8uc29ydDtcbiAgdmFyIGFycmF5U2xpY2UgPSBBcnJheVByb3RvLnNsaWNlO1xuICB2YXIgYXJyYXlUb1N0cmluZyA9IEFycmF5UHJvdG8udG9TdHJpbmc7XG4gIHZhciBhcnJheVRvTG9jYWxlU3RyaW5nID0gQXJyYXlQcm90by50b0xvY2FsZVN0cmluZztcbiAgdmFyIElURVJBVE9SID0gd2tzKCdpdGVyYXRvcicpO1xuICB2YXIgVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xuICB2YXIgVFlQRURfQ09OU1RSVUNUT1IgPSB1aWQoJ3R5cGVkX2NvbnN0cnVjdG9yJyk7XG4gIHZhciBERUZfQ09OU1RSVUNUT1IgPSB1aWQoJ2RlZl9jb25zdHJ1Y3RvcicpO1xuICB2YXIgQUxMX0NPTlNUUlVDVE9SUyA9ICR0eXBlZC5DT05TVFI7XG4gIHZhciBUWVBFRF9BUlJBWSA9ICR0eXBlZC5UWVBFRDtcbiAgdmFyIFZJRVcgPSAkdHlwZWQuVklFVztcbiAgdmFyIFdST05HX0xFTkdUSCA9ICdXcm9uZyBsZW5ndGghJztcblxuICB2YXIgJG1hcCA9IGNyZWF0ZUFycmF5TWV0aG9kKDEsIGZ1bmN0aW9uIChPLCBsZW5ndGgpIHtcbiAgICByZXR1cm4gYWxsb2NhdGUoc3BlY2llc0NvbnN0cnVjdG9yKE8sIE9bREVGX0NPTlNUUlVDVE9SXSksIGxlbmd0aCk7XG4gIH0pO1xuXG4gIHZhciBMSVRUTEVfRU5ESUFOID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHJldHVybiBuZXcgVWludDhBcnJheShuZXcgVWludDE2QXJyYXkoWzFdKS5idWZmZXIpWzBdID09PSAxO1xuICB9KTtcblxuICB2YXIgRk9SQ0VEX1NFVCA9ICEhVWludDhBcnJheSAmJiAhIVVpbnQ4QXJyYXlbUFJPVE9UWVBFXS5zZXQgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyBVaW50OEFycmF5KDEpLnNldCh7fSk7XG4gIH0pO1xuXG4gIHZhciB0b09mZnNldCA9IGZ1bmN0aW9uIChpdCwgQllURVMpIHtcbiAgICB2YXIgb2Zmc2V0ID0gdG9JbnRlZ2VyKGl0KTtcbiAgICBpZiAob2Zmc2V0IDwgMCB8fCBvZmZzZXQgJSBCWVRFUykgdGhyb3cgUmFuZ2VFcnJvcignV3Jvbmcgb2Zmc2V0IScpO1xuICAgIHJldHVybiBvZmZzZXQ7XG4gIH07XG5cbiAgdmFyIHZhbGlkYXRlID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgaWYgKGlzT2JqZWN0KGl0KSAmJiBUWVBFRF9BUlJBWSBpbiBpdCkgcmV0dXJuIGl0O1xuICAgIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGEgdHlwZWQgYXJyYXkhJyk7XG4gIH07XG5cbiAgdmFyIGFsbG9jYXRlID0gZnVuY3Rpb24gKEMsIGxlbmd0aCkge1xuICAgIGlmICghKGlzT2JqZWN0KEMpICYmIFRZUEVEX0NPTlNUUlVDVE9SIGluIEMpKSB7XG4gICAgICB0aHJvdyBUeXBlRXJyb3IoJ0l0IGlzIG5vdCBhIHR5cGVkIGFycmF5IGNvbnN0cnVjdG9yIScpO1xuICAgIH0gcmV0dXJuIG5ldyBDKGxlbmd0aCk7XG4gIH07XG5cbiAgdmFyIHNwZWNpZXNGcm9tTGlzdCA9IGZ1bmN0aW9uIChPLCBsaXN0KSB7XG4gICAgcmV0dXJuIGZyb21MaXN0KHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pLCBsaXN0KTtcbiAgfTtcblxuICB2YXIgZnJvbUxpc3QgPSBmdW5jdGlvbiAoQywgbGlzdCkge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGxlbmd0aCA9IGxpc3QubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSBhbGxvY2F0ZShDLCBsZW5ndGgpO1xuICAgIHdoaWxlIChsZW5ndGggPiBpbmRleCkgcmVzdWx0W2luZGV4XSA9IGxpc3RbaW5kZXgrK107XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICB2YXIgYWRkR2V0dGVyID0gZnVuY3Rpb24gKGl0LCBrZXksIGludGVybmFsKSB7XG4gICAgZFAoaXQsIGtleSwgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX2RbaW50ZXJuYWxdOyB9IH0pO1xuICB9O1xuXG4gIHZhciAkZnJvbSA9IGZ1bmN0aW9uIGZyb20oc291cmNlIC8qICwgbWFwZm4sIHRoaXNBcmcgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHNvdXJjZSk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBpLCBsZW5ndGgsIHZhbHVlcywgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhaXNBcnJheUl0ZXIoaXRlckZuKSkge1xuICAgICAgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCB2YWx1ZXMgPSBbXSwgaSA9IDA7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaSsrKSB7XG4gICAgICAgIHZhbHVlcy5wdXNoKHN0ZXAudmFsdWUpO1xuICAgICAgfSBPID0gdmFsdWVzO1xuICAgIH1cbiAgICBpZiAobWFwcGluZyAmJiBhTGVuID4gMikgbWFwZm4gPSBjdHgobWFwZm4sIGFyZ3VtZW50c1syXSwgMik7XG4gICAgZm9yIChpID0gMCwgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpLCByZXN1bHQgPSBhbGxvY2F0ZSh0aGlzLCBsZW5ndGgpOyBsZW5ndGggPiBpOyBpKyspIHtcbiAgICAgIHJlc3VsdFtpXSA9IG1hcHBpbmcgPyBtYXBmbihPW2ldLCBpKSA6IE9baV07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyICRvZiA9IGZ1bmN0aW9uIG9mKC8qIC4uLml0ZW1zICovKSB7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gYWxsb2NhdGUodGhpcywgbGVuZ3RoKTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHJlc3VsdFtpbmRleF0gPSBhcmd1bWVudHNbaW5kZXgrK107XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcblxuICAvLyBpT1MgU2FmYXJpIDYueCBmYWlscyBoZXJlXG4gIHZhciBUT19MT0NBTEVfQlVHID0gISFVaW50OEFycmF5ICYmIGZhaWxzKGZ1bmN0aW9uICgpIHsgYXJyYXlUb0xvY2FsZVN0cmluZy5jYWxsKG5ldyBVaW50OEFycmF5KDEpKTsgfSk7XG5cbiAgdmFyICR0b0xvY2FsZVN0cmluZyA9IGZ1bmN0aW9uIHRvTG9jYWxlU3RyaW5nKCkge1xuICAgIHJldHVybiBhcnJheVRvTG9jYWxlU3RyaW5nLmFwcGx5KFRPX0xPQ0FMRV9CVUcgPyBhcnJheVNsaWNlLmNhbGwodmFsaWRhdGUodGhpcykpIDogdmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gIH07XG5cbiAgdmFyIHByb3RvID0ge1xuICAgIGNvcHlXaXRoaW46IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCAvKiAsIGVuZCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5Q29weVdpdGhpbi5jYWxsKHZhbGlkYXRlKHRoaXMpLCB0YXJnZXQsIHN0YXJ0LCBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBldmVyeTogZnVuY3Rpb24gZXZlcnkoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUV2ZXJ5KHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmaWxsOiBmdW5jdGlvbiBmaWxsKHZhbHVlIC8qICwgc3RhcnQsIGVuZCAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlGaWxsLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBzcGVjaWVzRnJvbUxpc3QodGhpcywgYXJyYXlGaWx0ZXIodmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sXG4gICAgICAgIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKSk7XG4gICAgfSxcbiAgICBmaW5kOiBmdW5jdGlvbiBmaW5kKHByZWRpY2F0ZSAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUZpbmQodmFsaWRhdGUodGhpcyksIHByZWRpY2F0ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZmluZEluZGV4OiBmdW5jdGlvbiBmaW5kSW5kZXgocHJlZGljYXRlIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5RmluZEluZGV4KHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIGFycmF5Rm9yRWFjaCh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlJbmRleE9mKHZhbGlkYXRlKHRoaXMpLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5SW5jbHVkZXModmFsaWRhdGUodGhpcyksIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGpvaW46IGZ1bmN0aW9uIGpvaW4oc2VwYXJhdG9yKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheUpvaW4uYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBsYXN0SW5kZXhPZjogZnVuY3Rpb24gbGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlMYXN0SW5kZXhPZi5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIG1hcDogZnVuY3Rpb24gbWFwKG1hcGZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuICRtYXAodmFsaWRhdGUodGhpcyksIG1hcGZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheVJlZHVjZS5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICAgIHJldHVybiBhcnJheVJlZHVjZVJpZ2h0LmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgcmV2ZXJzZTogZnVuY3Rpb24gcmV2ZXJzZSgpIHtcbiAgICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICAgIHZhciBsZW5ndGggPSB2YWxpZGF0ZSh0aGF0KS5sZW5ndGg7XG4gICAgICB2YXIgbWlkZGxlID0gTWF0aC5mbG9vcihsZW5ndGggLyAyKTtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgdmFsdWU7XG4gICAgICB3aGlsZSAoaW5kZXggPCBtaWRkbGUpIHtcbiAgICAgICAgdmFsdWUgPSB0aGF0W2luZGV4XTtcbiAgICAgICAgdGhhdFtpbmRleCsrXSA9IHRoYXRbLS1sZW5ndGhdO1xuICAgICAgICB0aGF0W2xlbmd0aF0gPSB2YWx1ZTtcbiAgICAgIH0gcmV0dXJuIHRoYXQ7XG4gICAgfSxcbiAgICBzb21lOiBmdW5jdGlvbiBzb21lKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlTb21lKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBzb3J0OiBmdW5jdGlvbiBzb3J0KGNvbXBhcmVmbikge1xuICAgICAgcmV0dXJuIGFycmF5U29ydC5jYWxsKHZhbGlkYXRlKHRoaXMpLCBjb21wYXJlZm4pO1xuICAgIH0sXG4gICAgc3ViYXJyYXk6IGZ1bmN0aW9uIHN1YmFycmF5KGJlZ2luLCBlbmQpIHtcbiAgICAgIHZhciBPID0gdmFsaWRhdGUodGhpcyk7XG4gICAgICB2YXIgbGVuZ3RoID0gTy5sZW5ndGg7XG4gICAgICB2YXIgJGJlZ2luID0gdG9BYnNvbHV0ZUluZGV4KGJlZ2luLCBsZW5ndGgpO1xuICAgICAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKE8sIE9bREVGX0NPTlNUUlVDVE9SXSkpKFxuICAgICAgICBPLmJ1ZmZlcixcbiAgICAgICAgTy5ieXRlT2Zmc2V0ICsgJGJlZ2luICogTy5CWVRFU19QRVJfRUxFTUVOVCxcbiAgICAgICAgdG9MZW5ndGgoKGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuZ3RoKSkgLSAkYmVnaW4pXG4gICAgICApO1xuICAgIH1cbiAgfTtcblxuICB2YXIgJHNsaWNlID0gZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCkge1xuICAgIHJldHVybiBzcGVjaWVzRnJvbUxpc3QodGhpcywgYXJyYXlTbGljZS5jYWxsKHZhbGlkYXRlKHRoaXMpLCBzdGFydCwgZW5kKSk7XG4gIH07XG5cbiAgdmFyICRzZXQgPSBmdW5jdGlvbiBzZXQoYXJyYXlMaWtlIC8qICwgb2Zmc2V0ICovKSB7XG4gICAgdmFsaWRhdGUodGhpcyk7XG4gICAgdmFyIG9mZnNldCA9IHRvT2Zmc2V0KGFyZ3VtZW50c1sxXSwgMSk7XG4gICAgdmFyIGxlbmd0aCA9IHRoaXMubGVuZ3RoO1xuICAgIHZhciBzcmMgPSB0b09iamVjdChhcnJheUxpa2UpO1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aChzcmMubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIGlmIChsZW4gKyBvZmZzZXQgPiBsZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICB3aGlsZSAoaW5kZXggPCBsZW4pIHRoaXNbb2Zmc2V0ICsgaW5kZXhdID0gc3JjW2luZGV4KytdO1xuICB9O1xuXG4gIHZhciAkaXRlcmF0b3JzID0ge1xuICAgIGVudHJpZXM6IGZ1bmN0aW9uIGVudHJpZXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlFbnRyaWVzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH0sXG4gICAga2V5czogZnVuY3Rpb24ga2V5cygpIHtcbiAgICAgIHJldHVybiBhcnJheUtleXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfSxcbiAgICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcygpIHtcbiAgICAgIHJldHVybiBhcnJheVZhbHVlcy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyIGlzVEFJbmRleCA9IGZ1bmN0aW9uICh0YXJnZXQsIGtleSkge1xuICAgIHJldHVybiBpc09iamVjdCh0YXJnZXQpXG4gICAgICAmJiB0YXJnZXRbVFlQRURfQVJSQVldXG4gICAgICAmJiB0eXBlb2Yga2V5ICE9ICdzeW1ib2wnXG4gICAgICAmJiBrZXkgaW4gdGFyZ2V0XG4gICAgICAmJiBTdHJpbmcoK2tleSkgPT0gU3RyaW5nKGtleSk7XG4gIH07XG4gIHZhciAkZ2V0RGVzYyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkge1xuICAgIHJldHVybiBpc1RBSW5kZXgodGFyZ2V0LCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKVxuICAgICAgPyBwcm9wZXJ0eURlc2MoMiwgdGFyZ2V0W2tleV0pXG4gICAgICA6IGdPUEQodGFyZ2V0LCBrZXkpO1xuICB9O1xuICB2YXIgJHNldERlc2MgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIGlmIChpc1RBSW5kZXgodGFyZ2V0LCBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpKVxuICAgICAgJiYgaXNPYmplY3QoZGVzYylcbiAgICAgICYmIGhhcyhkZXNjLCAndmFsdWUnKVxuICAgICAgJiYgIWhhcyhkZXNjLCAnZ2V0JylcbiAgICAgICYmICFoYXMoZGVzYywgJ3NldCcpXG4gICAgICAvLyBUT0RPOiBhZGQgdmFsaWRhdGlvbiBkZXNjcmlwdG9yIHcvbyBjYWxsaW5nIGFjY2Vzc29yc1xuICAgICAgJiYgIWRlc2MuY29uZmlndXJhYmxlXG4gICAgICAmJiAoIWhhcyhkZXNjLCAnd3JpdGFibGUnKSB8fCBkZXNjLndyaXRhYmxlKVxuICAgICAgJiYgKCFoYXMoZGVzYywgJ2VudW1lcmFibGUnKSB8fCBkZXNjLmVudW1lcmFibGUpXG4gICAgKSB7XG4gICAgICB0YXJnZXRba2V5XSA9IGRlc2MudmFsdWU7XG4gICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH0gcmV0dXJuIGRQKHRhcmdldCwga2V5LCBkZXNjKTtcbiAgfTtcblxuICBpZiAoIUFMTF9DT05TVFJVQ1RPUlMpIHtcbiAgICAkR09QRC5mID0gJGdldERlc2M7XG4gICAgJERQLmYgPSAkc2V0RGVzYztcbiAgfVxuXG4gICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIUFMTF9DT05TVFJVQ1RPUlMsICdPYmplY3QnLCB7XG4gICAgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yOiAkZ2V0RGVzYyxcbiAgICBkZWZpbmVQcm9wZXJ0eTogJHNldERlc2NcbiAgfSk7XG5cbiAgaWYgKGZhaWxzKGZ1bmN0aW9uICgpIHsgYXJyYXlUb1N0cmluZy5jYWxsKHt9KTsgfSkpIHtcbiAgICBhcnJheVRvU3RyaW5nID0gYXJyYXlUb0xvY2FsZVN0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgcmV0dXJuIGFycmF5Sm9pbi5jYWxsKHRoaXMpO1xuICAgIH07XG4gIH1cblxuICB2YXIgJFR5cGVkQXJyYXlQcm90b3R5cGUkID0gcmVkZWZpbmVBbGwoe30sIHByb3RvKTtcbiAgcmVkZWZpbmVBbGwoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAkaXRlcmF0b3JzKTtcbiAgaGlkZSgkVHlwZWRBcnJheVByb3RvdHlwZSQsIElURVJBVE9SLCAkaXRlcmF0b3JzLnZhbHVlcyk7XG4gIHJlZGVmaW5lQWxsKCRUeXBlZEFycmF5UHJvdG90eXBlJCwge1xuICAgIHNsaWNlOiAkc2xpY2UsXG4gICAgc2V0OiAkc2V0LFxuICAgIGNvbnN0cnVjdG9yOiBmdW5jdGlvbiAoKSB7IC8qIG5vb3AgKi8gfSxcbiAgICB0b1N0cmluZzogYXJyYXlUb1N0cmluZyxcbiAgICB0b0xvY2FsZVN0cmluZzogJHRvTG9jYWxlU3RyaW5nXG4gIH0pO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnYnVmZmVyJywgJ2InKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J5dGVPZmZzZXQnLCAnbycpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnYnl0ZUxlbmd0aCcsICdsJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdsZW5ndGgnLCAnZScpO1xuICBkUCgkVHlwZWRBcnJheVByb3RvdHlwZSQsIFRBRywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpc1tUWVBFRF9BUlJBWV07IH1cbiAgfSk7XG5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG1heC1zdGF0ZW1lbnRzXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgQllURVMsIHdyYXBwZXIsIENMQU1QRUQpIHtcbiAgICBDTEFNUEVEID0gISFDTEFNUEVEO1xuICAgIHZhciBOQU1FID0gS0VZICsgKENMQU1QRUQgPyAnQ2xhbXBlZCcgOiAnJykgKyAnQXJyYXknO1xuICAgIHZhciBHRVRURVIgPSAnZ2V0JyArIEtFWTtcbiAgICB2YXIgU0VUVEVSID0gJ3NldCcgKyBLRVk7XG4gICAgdmFyIFR5cGVkQXJyYXkgPSBnbG9iYWxbTkFNRV07XG4gICAgdmFyIEJhc2UgPSBUeXBlZEFycmF5IHx8IHt9O1xuICAgIHZhciBUQUMgPSBUeXBlZEFycmF5ICYmIGdldFByb3RvdHlwZU9mKFR5cGVkQXJyYXkpO1xuICAgIHZhciBGT1JDRUQgPSAhVHlwZWRBcnJheSB8fCAhJHR5cGVkLkFCVjtcbiAgICB2YXIgTyA9IHt9O1xuICAgIHZhciBUeXBlZEFycmF5UHJvdG90eXBlID0gVHlwZWRBcnJheSAmJiBUeXBlZEFycmF5W1BST1RPVFlQRV07XG4gICAgdmFyIGdldHRlciA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCkge1xuICAgICAgdmFyIGRhdGEgPSB0aGF0Ll9kO1xuICAgICAgcmV0dXJuIGRhdGEudltHRVRURVJdKGluZGV4ICogQllURVMgKyBkYXRhLm8sIExJVFRMRV9FTkRJQU4pO1xuICAgIH07XG4gICAgdmFyIHNldHRlciA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCwgdmFsdWUpIHtcbiAgICAgIHZhciBkYXRhID0gdGhhdC5fZDtcbiAgICAgIGlmIChDTEFNUEVEKSB2YWx1ZSA9ICh2YWx1ZSA9IE1hdGgucm91bmQodmFsdWUpKSA8IDAgPyAwIDogdmFsdWUgPiAweGZmID8gMHhmZiA6IHZhbHVlICYgMHhmZjtcbiAgICAgIGRhdGEudltTRVRURVJdKGluZGV4ICogQllURVMgKyBkYXRhLm8sIHZhbHVlLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBhZGRFbGVtZW50ID0gZnVuY3Rpb24gKHRoYXQsIGluZGV4KSB7XG4gICAgICBkUCh0aGF0LCBpbmRleCwge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gZ2V0dGVyKHRoaXMsIGluZGV4KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gc2V0dGVyKHRoaXMsIGluZGV4LCB2YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkge1xuICAgICAgVHlwZWRBcnJheSA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGRhdGEsICRvZmZzZXQsICRsZW5ndGgpIHtcbiAgICAgICAgYW5JbnN0YW5jZSh0aGF0LCBUeXBlZEFycmF5LCBOQU1FLCAnX2QnKTtcbiAgICAgICAgdmFyIGluZGV4ID0gMDtcbiAgICAgICAgdmFyIG9mZnNldCA9IDA7XG4gICAgICAgIHZhciBidWZmZXIsIGJ5dGVMZW5ndGgsIGxlbmd0aCwga2xhc3M7XG4gICAgICAgIGlmICghaXNPYmplY3QoZGF0YSkpIHtcbiAgICAgICAgICBsZW5ndGggPSB0b0luZGV4KGRhdGEpO1xuICAgICAgICAgIGJ5dGVMZW5ndGggPSBsZW5ndGggKiBCWVRFUztcbiAgICAgICAgICBidWZmZXIgPSBuZXcgJEFycmF5QnVmZmVyKGJ5dGVMZW5ndGgpO1xuICAgICAgICB9IGVsc2UgaWYgKGRhdGEgaW5zdGFuY2VvZiAkQXJyYXlCdWZmZXIgfHwgKGtsYXNzID0gY2xhc3NvZihkYXRhKSkgPT0gQVJSQVlfQlVGRkVSIHx8IGtsYXNzID09IFNIQVJFRF9CVUZGRVIpIHtcbiAgICAgICAgICBidWZmZXIgPSBkYXRhO1xuICAgICAgICAgIG9mZnNldCA9IHRvT2Zmc2V0KCRvZmZzZXQsIEJZVEVTKTtcbiAgICAgICAgICB2YXIgJGxlbiA9IGRhdGEuYnl0ZUxlbmd0aDtcbiAgICAgICAgICBpZiAoJGxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpZiAoJGxlbiAlIEJZVEVTKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgICAgICAgICBieXRlTGVuZ3RoID0gJGxlbiAtIG9mZnNldDtcbiAgICAgICAgICAgIGlmIChieXRlTGVuZ3RoIDwgMCkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBieXRlTGVuZ3RoID0gdG9MZW5ndGgoJGxlbmd0aCkgKiBCWVRFUztcbiAgICAgICAgICAgIGlmIChieXRlTGVuZ3RoICsgb2Zmc2V0ID4gJGxlbikgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBsZW5ndGggPSBieXRlTGVuZ3RoIC8gQllURVM7XG4gICAgICAgIH0gZWxzZSBpZiAoVFlQRURfQVJSQVkgaW4gZGF0YSkge1xuICAgICAgICAgIHJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gJGZyb20uY2FsbChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBoaWRlKHRoYXQsICdfZCcsIHtcbiAgICAgICAgICBiOiBidWZmZXIsXG4gICAgICAgICAgbzogb2Zmc2V0LFxuICAgICAgICAgIGw6IGJ5dGVMZW5ndGgsXG4gICAgICAgICAgZTogbGVuZ3RoLFxuICAgICAgICAgIHY6IG5ldyAkRGF0YVZpZXcoYnVmZmVyKVxuICAgICAgICB9KTtcbiAgICAgICAgd2hpbGUgKGluZGV4IDwgbGVuZ3RoKSBhZGRFbGVtZW50KHRoYXQsIGluZGV4KyspO1xuICAgICAgfSk7XG4gICAgICBUeXBlZEFycmF5UHJvdG90eXBlID0gVHlwZWRBcnJheVtQUk9UT1RZUEVdID0gY3JlYXRlKCRUeXBlZEFycmF5UHJvdG90eXBlJCk7XG4gICAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsICdjb25zdHJ1Y3RvcicsIFR5cGVkQXJyYXkpO1xuICAgIH0gZWxzZSBpZiAoIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIFR5cGVkQXJyYXkoMSk7XG4gICAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KC0xKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICB9KSB8fCAhJGl0ZXJEZXRlY3QoZnVuY3Rpb24gKGl0ZXIpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheShudWxsKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAgIG5ldyBUeXBlZEFycmF5KDEuNSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheShpdGVyKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICB9LCB0cnVlKSkge1xuICAgICAgVHlwZWRBcnJheSA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGRhdGEsICRvZmZzZXQsICRsZW5ndGgpIHtcbiAgICAgICAgYW5JbnN0YW5jZSh0aGF0LCBUeXBlZEFycmF5LCBOQU1FKTtcbiAgICAgICAgdmFyIGtsYXNzO1xuICAgICAgICAvLyBgd3NgIG1vZHVsZSBidWcsIHRlbXBvcmFyaWx5IHJlbW92ZSB2YWxpZGF0aW9uIGxlbmd0aCBmb3IgVWludDhBcnJheVxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vd2Vic29ja2V0cy93cy9wdWxsLzY0NVxuICAgICAgICBpZiAoIWlzT2JqZWN0KGRhdGEpKSByZXR1cm4gbmV3IEJhc2UodG9JbmRleChkYXRhKSk7XG4gICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgJEFycmF5QnVmZmVyIHx8IChrbGFzcyA9IGNsYXNzb2YoZGF0YSkpID09IEFSUkFZX0JVRkZFUiB8fCBrbGFzcyA9PSBTSEFSRURfQlVGRkVSKSB7XG4gICAgICAgICAgcmV0dXJuICRsZW5ndGggIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyksICRsZW5ndGgpXG4gICAgICAgICAgICA6ICRvZmZzZXQgIT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICA/IG5ldyBCYXNlKGRhdGEsIHRvT2Zmc2V0KCRvZmZzZXQsIEJZVEVTKSlcbiAgICAgICAgICAgICAgOiBuZXcgQmFzZShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoVFlQRURfQVJSQVkgaW4gZGF0YSkgcmV0dXJuIGZyb21MaXN0KFR5cGVkQXJyYXksIGRhdGEpO1xuICAgICAgICByZXR1cm4gJGZyb20uY2FsbChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgIH0pO1xuICAgICAgYXJyYXlGb3JFYWNoKFRBQyAhPT0gRnVuY3Rpb24ucHJvdG90eXBlID8gZ09QTihCYXNlKS5jb25jYXQoZ09QTihUQUMpKSA6IGdPUE4oQmFzZSksIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCEoa2V5IGluIFR5cGVkQXJyYXkpKSBoaWRlKFR5cGVkQXJyYXksIGtleSwgQmFzZVtrZXldKTtcbiAgICAgIH0pO1xuICAgICAgVHlwZWRBcnJheVtQUk9UT1RZUEVdID0gVHlwZWRBcnJheVByb3RvdHlwZTtcbiAgICAgIGlmICghTElCUkFSWSkgVHlwZWRBcnJheVByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IFR5cGVkQXJyYXk7XG4gICAgfVxuICAgIHZhciAkbmF0aXZlSXRlcmF0b3IgPSBUeXBlZEFycmF5UHJvdG90eXBlW0lURVJBVE9SXTtcbiAgICB2YXIgQ09SUkVDVF9JVEVSX05BTUUgPSAhISRuYXRpdmVJdGVyYXRvclxuICAgICAgJiYgKCRuYXRpdmVJdGVyYXRvci5uYW1lID09ICd2YWx1ZXMnIHx8ICRuYXRpdmVJdGVyYXRvci5uYW1lID09IHVuZGVmaW5lZCk7XG4gICAgdmFyICRpdGVyYXRvciA9ICRpdGVyYXRvcnMudmFsdWVzO1xuICAgIGhpZGUoVHlwZWRBcnJheSwgVFlQRURfQ09OU1RSVUNUT1IsIHRydWUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgVFlQRURfQVJSQVksIE5BTUUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBERUZfQ09OU1RSVUNUT1IsIFR5cGVkQXJyYXkpO1xuXG4gICAgaWYgKENMQU1QRUQgPyBuZXcgVHlwZWRBcnJheSgxKVtUQUddICE9IE5BTUUgOiAhKFRBRyBpbiBUeXBlZEFycmF5UHJvdG90eXBlKSkge1xuICAgICAgZFAoVHlwZWRBcnJheVByb3RvdHlwZSwgVEFHLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gTkFNRTsgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgT1tOQU1FXSA9IFR5cGVkQXJyYXk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChUeXBlZEFycmF5ICE9IEJhc2UpLCBPKTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5TLCBOQU1FLCB7XG4gICAgICBCWVRFU19QRVJfRUxFTUVOVDogQllURVNcbiAgICB9KTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkgeyBCYXNlLm9mLmNhbGwoVHlwZWRBcnJheSwgMSk7IH0pLCBOQU1FLCB7XG4gICAgICBmcm9tOiAkZnJvbSxcbiAgICAgIG9mOiAkb2ZcbiAgICB9KTtcblxuICAgIGlmICghKEJZVEVTX1BFUl9FTEVNRU5UIGluIFR5cGVkQXJyYXlQcm90b3R5cGUpKSBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIEJZVEVTX1BFUl9FTEVNRU5ULCBCWVRFUyk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCwgTkFNRSwgcHJvdG8pO1xuXG4gICAgc2V0U3BlY2llcyhOQU1FKTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogRk9SQ0VEX1NFVCwgTkFNRSwgeyBzZXQ6ICRzZXQgfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFDT1JSRUNUX0lURVJfTkFNRSwgTkFNRSwgJGl0ZXJhdG9ycyk7XG5cbiAgICBpZiAoIUxJQlJBUlkgJiYgVHlwZWRBcnJheVByb3RvdHlwZS50b1N0cmluZyAhPSBhcnJheVRvU3RyaW5nKSBUeXBlZEFycmF5UHJvdG90eXBlLnRvU3RyaW5nID0gYXJyYXlUb1N0cmluZztcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgbmV3IFR5cGVkQXJyYXkoMSkuc2xpY2UoKTtcbiAgICB9KSwgTkFNRSwgeyBzbGljZTogJHNsaWNlIH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIFsxLCAyXS50b0xvY2FsZVN0cmluZygpICE9IG5ldyBUeXBlZEFycmF5KFsxLCAyXSkudG9Mb2NhbGVTdHJpbmcoKTtcbiAgICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgVHlwZWRBcnJheVByb3RvdHlwZS50b0xvY2FsZVN0cmluZy5jYWxsKFsxLCAyXSk7XG4gICAgfSkpLCBOQU1FLCB7IHRvTG9jYWxlU3RyaW5nOiAkdG9Mb2NhbGVTdHJpbmcgfSk7XG5cbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBDT1JSRUNUX0lURVJfTkFNRSA/ICRuYXRpdmVJdGVyYXRvciA6ICRpdGVyYXRvcjtcbiAgICBpZiAoIUxJQlJBUlkgJiYgIUNPUlJFQ1RfSVRFUl9OQU1FKSBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIElURVJBVE9SLCAkaXRlcmF0b3IpO1xuICB9O1xufSBlbHNlIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuIiwidmFyIE1hcCA9IHJlcXVpcmUoJy4vZXM2Lm1hcCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgnbWV0YWRhdGEnKTtcbnZhciBzdG9yZSA9IHNoYXJlZC5zdG9yZSB8fCAoc2hhcmVkLnN0b3JlID0gbmV3IChyZXF1aXJlKCcuL2VzNi53ZWFrLW1hcCcpKSgpKTtcblxudmFyIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAgPSBmdW5jdGlvbiAodGFyZ2V0LCB0YXJnZXRLZXksIGNyZWF0ZSkge1xuICB2YXIgdGFyZ2V0TWV0YWRhdGEgPSBzdG9yZS5nZXQodGFyZ2V0KTtcbiAgaWYgKCF0YXJnZXRNZXRhZGF0YSkge1xuICAgIGlmICghY3JlYXRlKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIHN0b3JlLnNldCh0YXJnZXQsIHRhcmdldE1ldGFkYXRhID0gbmV3IE1hcCgpKTtcbiAgfVxuICB2YXIga2V5TWV0YWRhdGEgPSB0YXJnZXRNZXRhZGF0YS5nZXQodGFyZ2V0S2V5KTtcbiAgaWYgKCFrZXlNZXRhZGF0YSkge1xuICAgIGlmICghY3JlYXRlKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIHRhcmdldE1ldGFkYXRhLnNldCh0YXJnZXRLZXksIGtleU1ldGFkYXRhID0gbmV3IE1hcCgpKTtcbiAgfSByZXR1cm4ga2V5TWV0YWRhdGE7XG59O1xudmFyIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBmdW5jdGlvbiAoTWV0YWRhdGFLZXksIE8sIFApIHtcbiAgdmFyIG1ldGFkYXRhTWFwID0gZ2V0T3JDcmVhdGVNZXRhZGF0YU1hcChPLCBQLCBmYWxzZSk7XG4gIHJldHVybiBtZXRhZGF0YU1hcCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBtZXRhZGF0YU1hcC5oYXMoTWV0YWRhdGFLZXkpO1xufTtcbnZhciBvcmRpbmFyeUdldE93bk1ldGFkYXRhID0gZnVuY3Rpb24gKE1ldGFkYXRhS2V5LCBPLCBQKSB7XG4gIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoTywgUCwgZmFsc2UpO1xuICByZXR1cm4gbWV0YWRhdGFNYXAgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IG1ldGFkYXRhTWFwLmdldChNZXRhZGF0YUtleSk7XG59O1xudmFyIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEgPSBmdW5jdGlvbiAoTWV0YWRhdGFLZXksIE1ldGFkYXRhVmFsdWUsIE8sIFApIHtcbiAgZ2V0T3JDcmVhdGVNZXRhZGF0YU1hcChPLCBQLCB0cnVlKS5zZXQoTWV0YWRhdGFLZXksIE1ldGFkYXRhVmFsdWUpO1xufTtcbnZhciBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHRhcmdldEtleSkge1xuICB2YXIgbWV0YWRhdGFNYXAgPSBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwKHRhcmdldCwgdGFyZ2V0S2V5LCBmYWxzZSk7XG4gIHZhciBrZXlzID0gW107XG4gIGlmIChtZXRhZGF0YU1hcCkgbWV0YWRhdGFNYXAuZm9yRWFjaChmdW5jdGlvbiAoXywga2V5KSB7IGtleXMucHVzaChrZXkpOyB9KTtcbiAgcmV0dXJuIGtleXM7XG59O1xudmFyIHRvTWV0YUtleSA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCB8fCB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6IFN0cmluZyhpdCk7XG59O1xudmFyIGV4cCA9IGZ1bmN0aW9uIChPKSB7XG4gICRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIE8pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHN0b3JlOiBzdG9yZSxcbiAgbWFwOiBnZXRPckNyZWF0ZU1ldGFkYXRhTWFwLFxuICBoYXM6IG9yZGluYXJ5SGFzT3duTWV0YWRhdGEsXG4gIGdldDogb3JkaW5hcnlHZXRPd25NZXRhZGF0YSxcbiAgc2V0OiBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhLFxuICBrZXlzOiBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyxcbiAga2V5OiB0b01ldGFLZXksXG4gIGV4cDogZXhwXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiIsInZhciBNRVRBID0gcmVxdWlyZSgnLi9fdWlkJykoJ21ldGEnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHNldERlc2MgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGlkID0gMDtcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlIHx8IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRydWU7XG59O1xudmFyIEZSRUVaRSA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGlzRXh0ZW5zaWJsZShPYmplY3QucHJldmVudEV4dGVuc2lvbnMoe30pKTtcbn0pO1xudmFyIHNldE1ldGEgPSBmdW5jdGlvbiAoaXQpIHtcbiAgc2V0RGVzYyhpdCwgTUVUQSwgeyB2YWx1ZToge1xuICAgIGk6ICdPJyArICsraWQsIC8vIG9iamVjdCBJRFxuICAgIHc6IHt9ICAgICAgICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gfSk7XG59O1xudmFyIGZhc3RLZXkgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICAvLyByZXR1cm4gcHJpbWl0aXZlIHdpdGggcHJlZml4XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnID8gaXQgOiAodHlwZW9mIGl0ID09ICdzdHJpbmcnID8gJ1MnIDogJ1AnKSArIGl0O1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuICdGJztcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gJ0UnO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBvYmplY3QgSURcbiAgfSByZXR1cm4gaXRbTUVUQV0uaTtcbn07XG52YXIgZ2V0V2VhayA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBub3QgbmVjZXNzYXJ5IHRvIGFkZCBtZXRhZGF0YVxuICAgIGlmICghY3JlYXRlKSByZXR1cm4gZmFsc2U7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIGhhc2ggd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSByZXR1cm4gaXRbTUVUQV0udztcbn07XG4vLyBhZGQgbWV0YWRhdGEgb24gZnJlZXplLWZhbWlseSBtZXRob2RzIGNhbGxpbmdcbnZhciBvbkZyZWV6ZSA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoRlJFRVpFICYmIG1ldGEuTkVFRCAmJiBpc0V4dGVuc2libGUoaXQpICYmICFoYXMoaXQsIE1FVEEpKSBzZXRNZXRhKGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciBtZXRhID0gbW9kdWxlLmV4cG9ydHMgPSB7XG4gIEtFWTogTUVUQSxcbiAgTkVFRDogZmFsc2UsXG4gIGZhc3RLZXk6IGZhc3RLZXksXG4gIGdldFdlYWs6IGdldFdlYWssXG4gIG9uRnJlZXplOiBvbkZyZWV6ZVxufTtcbiIsIi8vIDIyLjEuMy4zMSBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbnZhciBVTlNDT1BBQkxFUyA9IHJlcXVpcmUoJy4vX3drcycpKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5pZiAoQXJyYXlQcm90b1tVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKSByZXF1aXJlKCcuL19oaWRlJykoQXJyYXlQcm90bywgVU5TQ09QQUJMRVMsIHt9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICBBcnJheVByb3RvW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCIvLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGluZGV4LCBsZW5ndGgpIHtcbiAgaW5kZXggPSB0b0ludGVnZXIoaW5kZXgpO1xuICByZXR1cm4gaW5kZXggPCAwID8gbWF4KGluZGV4ICsgbGVuZ3RoLCAwKSA6IG1pbihpbmRleCwgbGVuZ3RoKTtcbn07XG4iLCIvLyAxOS4xLjIuMiAvIDE1LjIuMy41IE9iamVjdC5jcmVhdGUoTyBbLCBQcm9wZXJ0aWVzXSlcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGRQcyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcHMnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0tYnVnLWtleXMnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBFbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcblxuLy8gQ3JlYXRlIG9iamVjdCB3aXRoIGZha2UgYG51bGxgIHByb3RvdHlwZTogdXNlIGlmcmFtZSBPYmplY3Qgd2l0aCBjbGVhcmVkIHByb3RvdHlwZVxudmFyIGNyZWF0ZURpY3QgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIFRocmFzaCwgd2FzdGUgYW5kIHNvZG9teTogSUUgR0MgYnVnXG4gIHZhciBpZnJhbWUgPSByZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2lmcmFtZScpO1xuICB2YXIgaSA9IGVudW1CdWdLZXlzLmxlbmd0aDtcbiAgdmFyIGx0ID0gJzwnO1xuICB2YXIgZ3QgPSAnPic7XG4gIHZhciBpZnJhbWVEb2N1bWVudDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIHJlcXVpcmUoJy4vX2h0bWwnKS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICBpZnJhbWUuc3JjID0gJ2phdmFzY3JpcHQ6JzsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1zY3JpcHQtdXJsXG4gIC8vIGNyZWF0ZURpY3QgPSBpZnJhbWUuY29udGVudFdpbmRvdy5PYmplY3Q7XG4gIC8vIGh0bWwucmVtb3ZlQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgaWZyYW1lRG9jdW1lbnQub3BlbigpO1xuICBpZnJhbWVEb2N1bWVudC53cml0ZShsdCArICdzY3JpcHQnICsgZ3QgKyAnZG9jdW1lbnQuRj1PYmplY3QnICsgbHQgKyAnL3NjcmlwdCcgKyBndCk7XG4gIGlmcmFtZURvY3VtZW50LmNsb3NlKCk7XG4gIGNyZWF0ZURpY3QgPSBpZnJhbWVEb2N1bWVudC5GO1xuICB3aGlsZSAoaS0tKSBkZWxldGUgY3JlYXRlRGljdFtQUk9UT1RZUEVdW2VudW1CdWdLZXlzW2ldXTtcbiAgcmV0dXJuIGNyZWF0ZURpY3QoKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcykge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoTyAhPT0gbnVsbCkge1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBhbk9iamVjdChPKTtcbiAgICByZXN1bHQgPSBuZXcgRW1wdHkoKTtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gbnVsbDtcbiAgICAvLyBhZGQgXCJfX3Byb3RvX19cIiBmb3IgT2JqZWN0LmdldFByb3RvdHlwZU9mIHBvbHlmaWxsXG4gICAgcmVzdWx0W0lFX1BST1RPXSA9IE87XG4gIH0gZWxzZSByZXN1bHQgPSBjcmVhdGVEaWN0KCk7XG4gIHJldHVybiBQcm9wZXJ0aWVzID09PSB1bmRlZmluZWQgPyByZXN1bHQgOiBkUHMocmVzdWx0LCBQcm9wZXJ0aWVzKTtcbn07XG4iLCIvLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIENvbnN0cnVjdG9yLCBuYW1lLCBmb3JiaWRkZW5GaWVsZCkge1xuICBpZiAoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IobmFtZSArICc6IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICB9IHJldHVybiBpdDtcbn07XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuIiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBzYWZlKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzcmNba2V5XSwgc2FmZSk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgVFlQRSkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSB8fCBpdC5fdCAhPT0gVFlQRSkgdGhyb3cgVHlwZUVycm9yKCdJbmNvbXBhdGlibGUgcmVjZWl2ZXIsICcgKyBUWVBFICsgJyByZXF1aXJlZCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsInZhciBkZWYgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgdGFnLCBzdGF0KSB7XG4gIGlmIChpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKSBkZWYoaXQsIFRBRywgeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWcgfSk7XG59O1xuIiwiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBzcGFjZXMgPSByZXF1aXJlKCcuL19zdHJpbmctd3MnKTtcbnZhciBzcGFjZSA9ICdbJyArIHNwYWNlcyArICddJztcbnZhciBub24gPSAnXFx1MjAwYlxcdTAwODUnO1xudmFyIGx0cmltID0gUmVnRXhwKCdeJyArIHNwYWNlICsgc3BhY2UgKyAnKicpO1xudmFyIHJ0cmltID0gUmVnRXhwKHNwYWNlICsgc3BhY2UgKyAnKiQnKTtcblxudmFyIGV4cG9ydGVyID0gZnVuY3Rpb24gKEtFWSwgZXhlYywgQUxJQVMpIHtcbiAgdmFyIGV4cCA9IHt9O1xuICB2YXIgRk9SQ0UgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICEhc3BhY2VzW0tFWV0oKSB8fCBub25bS0VZXSgpICE9IG5vbjtcbiAgfSk7XG4gIHZhciBmbiA9IGV4cFtLRVldID0gRk9SQ0UgPyBleGVjKHRyaW0pIDogc3BhY2VzW0tFWV07XG4gIGlmIChBTElBUykgZXhwW0FMSUFTXSA9IGZuO1xuICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIEZPUkNFLCAnU3RyaW5nJywgZXhwKTtcbn07XG5cbi8vIDEgLT4gU3RyaW5nI3RyaW1MZWZ0XG4vLyAyIC0+IFN0cmluZyN0cmltUmlnaHRcbi8vIDMgLT4gU3RyaW5nI3RyaW1cbnZhciB0cmltID0gZXhwb3J0ZXIudHJpbSA9IGZ1bmN0aW9uIChzdHJpbmcsIFRZUEUpIHtcbiAgc3RyaW5nID0gU3RyaW5nKGRlZmluZWQoc3RyaW5nKSk7XG4gIGlmIChUWVBFICYgMSkgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UobHRyaW0sICcnKTtcbiAgaWYgKFRZUEUgJiAyKSBzdHJpbmcgPSBzdHJpbmcucmVwbGFjZShydHJpbSwgJycpO1xuICByZXR1cm4gc3RyaW5nO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRlcjtcbiIsIm1vZHVsZS5leHBvcnRzID0ge307XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlYWN0SXMgPSByZXF1aXJlKCdyZWFjdC1pcycpO1xuXG4vKipcbiAqIENvcHlyaWdodCAyMDE1LCBZYWhvbyEgSW5jLlxuICogQ29weXJpZ2h0cyBsaWNlbnNlZCB1bmRlciB0aGUgTmV3IEJTRCBMaWNlbnNlLiBTZWUgdGhlIGFjY29tcGFueWluZyBMSUNFTlNFIGZpbGUgZm9yIHRlcm1zLlxuICovXG52YXIgUkVBQ1RfU1RBVElDUyA9IHtcbiAgY2hpbGRDb250ZXh0VHlwZXM6IHRydWUsXG4gIGNvbnRleHRUeXBlOiB0cnVlLFxuICBjb250ZXh0VHlwZXM6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM6IHRydWUsXG4gIG1peGluczogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gIG5hbWU6IHRydWUsXG4gIGxlbmd0aDogdHJ1ZSxcbiAgcHJvdG90eXBlOiB0cnVlLFxuICBjYWxsZXI6IHRydWUsXG4gIGNhbGxlZTogdHJ1ZSxcbiAgYXJndW1lbnRzOiB0cnVlLFxuICBhcml0eTogdHJ1ZVxufTtcbnZhciBGT1JXQVJEX1JFRl9TVEFUSUNTID0ge1xuICAnJCR0eXBlb2YnOiB0cnVlLFxuICByZW5kZXI6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZVxufTtcbnZhciBNRU1PX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIGNvbXBhcmU6IHRydWUsXG4gIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgZGlzcGxheU5hbWU6IHRydWUsXG4gIHByb3BUeXBlczogdHJ1ZSxcbiAgdHlwZTogdHJ1ZVxufTtcbnZhciBUWVBFX1NUQVRJQ1MgPSB7fTtcblRZUEVfU1RBVElDU1tyZWFjdElzLkZvcndhcmRSZWZdID0gRk9SV0FSRF9SRUZfU1RBVElDUztcblRZUEVfU1RBVElDU1tyZWFjdElzLk1lbW9dID0gTUVNT19TVEFUSUNTO1xuXG5mdW5jdGlvbiBnZXRTdGF0aWNzKGNvbXBvbmVudCkge1xuICAvLyBSZWFjdCB2MTYuMTEgYW5kIGJlbG93XG4gIGlmIChyZWFjdElzLmlzTWVtbyhjb21wb25lbnQpKSB7XG4gICAgcmV0dXJuIE1FTU9fU1RBVElDUztcbiAgfSAvLyBSZWFjdCB2MTYuMTIgYW5kIGFib3ZlXG5cblxuICByZXR1cm4gVFlQRV9TVEFUSUNTW2NvbXBvbmVudFsnJCR0eXBlb2YnXV0gfHwgUkVBQ1RfU1RBVElDUztcbn1cblxudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGdldE93blByb3BlcnR5TmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Y7XG52YXIgb2JqZWN0UHJvdG90eXBlID0gT2JqZWN0LnByb3RvdHlwZTtcbmZ1bmN0aW9uIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgc291cmNlQ29tcG9uZW50LCBibGFja2xpc3QpIHtcbiAgaWYgKHR5cGVvZiBzb3VyY2VDb21wb25lbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgaG9pc3Qgb3ZlciBzdHJpbmcgKGh0bWwpIGNvbXBvbmVudHNcbiAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICB2YXIgaW5oZXJpdGVkQ29tcG9uZW50ID0gZ2V0UHJvdG90eXBlT2Yoc291cmNlQ29tcG9uZW50KTtcblxuICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIga2V5cyA9IGdldE93blByb3BlcnR5TmFtZXMoc291cmNlQ29tcG9uZW50KTtcblxuICAgIGlmIChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICAgIGtleXMgPSBrZXlzLmNvbmNhdChnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoc291cmNlQ29tcG9uZW50KSk7XG4gICAgfVxuXG4gICAgdmFyIHRhcmdldFN0YXRpY3MgPSBnZXRTdGF0aWNzKHRhcmdldENvbXBvbmVudCk7XG4gICAgdmFyIHNvdXJjZVN0YXRpY3MgPSBnZXRTdGF0aWNzKHNvdXJjZUNvbXBvbmVudCk7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyArK2kpIHtcbiAgICAgIHZhciBrZXkgPSBrZXlzW2ldO1xuXG4gICAgICBpZiAoIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAhKGJsYWNrbGlzdCAmJiBibGFja2xpc3Rba2V5XSkgJiYgIShzb3VyY2VTdGF0aWNzICYmIHNvdXJjZVN0YXRpY3Nba2V5XSkgJiYgISh0YXJnZXRTdGF0aWNzICYmIHRhcmdldFN0YXRpY3Nba2V5XSkpIHtcbiAgICAgICAgdmFyIGRlc2NyaXB0b3IgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlQ29tcG9uZW50LCBrZXkpO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRhcmdldENvbXBvbmVudCwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgfSBjYXRjaCAoZSkge31cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0Q29tcG9uZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhvaXN0Tm9uUmVhY3RTdGF0aWNzO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIiwidmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgU0hBUkVEID0gJ19fY29yZS1qc19zaGFyZWRfXyc7XG52YXIgc3RvcmUgPSBnbG9iYWxbU0hBUkVEXSB8fCAoZ2xvYmFsW1NIQVJFRF0gPSB7fSk7XG5cbihtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gIHJldHVybiBzdG9yZVtrZXldIHx8IChzdG9yZVtrZXldID0gdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDoge30pO1xufSkoJ3ZlcnNpb25zJywgW10pLnB1c2goe1xuICB2ZXJzaW9uOiBjb3JlLnZlcnNpb24sXG4gIG1vZGU6IHJlcXVpcmUoJy4vX2xpYnJhcnknKSA/ICdwdXJlJyA6ICdnbG9iYWwnLFxuICBjb3B5cmlnaHQ6ICfCqSAyMDE5IERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpJ1xufSk7XG4iLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuIiwiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMS4yLjUuMyBnZXQgUmVnRXhwLnByb3RvdHlwZS5mbGFnc1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSBhbk9iamVjdCh0aGlzKTtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICBpZiAodGhhdC5nbG9iYWwpIHJlc3VsdCArPSAnZyc7XG4gIGlmICh0aGF0Lmlnbm9yZUNhc2UpIHJlc3VsdCArPSAnaSc7XG4gIGlmICh0aGF0Lm11bHRpbGluZSkgcmVzdWx0ICs9ICdtJztcbiAgaWYgKHRoYXQudW5pY29kZSkgcmVzdWx0ICs9ICd1JztcbiAgaWYgKHRoYXQuc3RpY2t5KSByZXN1bHQgKz0gJ3knO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vIDcuMy4yMCBTcGVjaWVzQ29uc3RydWN0b3IoTywgZGVmYXVsdENvbnN0cnVjdG9yKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywgRCkge1xuICB2YXIgQyA9IGFuT2JqZWN0KE8pLmNvbnN0cnVjdG9yO1xuICB2YXIgUztcbiAgcmV0dXJuIEMgPT09IHVuZGVmaW5lZCB8fCAoUyA9IGFuT2JqZWN0KEMpW1NQRUNJRVNdKSA9PSB1bmRlZmluZWQgPyBEIDogYUZ1bmN0aW9uKFMpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9saWIvYXhpb3MnKTsiLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCIvLyBmYWxzZSAtPiBBcnJheSNpbmRleE9mXG4vLyB0cnVlICAtPiBBcnJheSNpbmNsdWRlc1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChJU19JTkNMVURFUykge1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBlbCwgZnJvbUluZGV4KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoJHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gdG9BYnNvbHV0ZUluZGV4KGZyb21JbmRleCwgbGVuZ3RoKTtcbiAgICB2YXIgdmFsdWU7XG4gICAgLy8gQXJyYXkjaW5jbHVkZXMgdXNlcyBTYW1lVmFsdWVaZXJvIGVxdWFsaXR5IGFsZ29yaXRobVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoSVNfSU5DTFVERVMgJiYgZWwgIT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgaWYgKHZhbHVlICE9IHZhbHVlKSByZXR1cm4gdHJ1ZTtcbiAgICAvLyBBcnJheSNpbmRleE9mIGlnbm9yZXMgaG9sZXMsIEFycmF5I2luY2x1ZGVzIC0gbm90XG4gICAgfSBlbHNlIGZvciAoO2xlbmd0aCA+IGluZGV4OyBpbmRleCsrKSBpZiAoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykge1xuICAgICAgaWYgKE9baW5kZXhdID09PSBlbCkgcmV0dXJuIElTX0lOQ0xVREVTIHx8IGluZGV4IHx8IDA7XG4gICAgfSByZXR1cm4gIUlTX0lOQ0xVREVTICYmIC0xO1xuICB9O1xufTtcbiIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCIvLyA3LjIuMiBJc0FycmF5KGFyZ3VtZW50KVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJnKSB7XG4gIHJldHVybiBjb2YoYXJnKSA9PSAnQXJyYXknO1xufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbi8vIHRydWUgIC0+IFN0cmluZyNhdFxuLy8gZmFsc2UgLT4gU3RyaW5nI2NvZGVQb2ludEF0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUT19TVFJJTkcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICh0aGF0LCBwb3MpIHtcbiAgICB2YXIgcyA9IFN0cmluZyhkZWZpbmVkKHRoYXQpKTtcbiAgICB2YXIgaSA9IHRvSW50ZWdlcihwb3MpO1xuICAgIHZhciBsID0gcy5sZW5ndGg7XG4gICAgdmFyIGEsIGI7XG4gICAgaWYgKGkgPCAwIHx8IGkgPj0gbCkgcmV0dXJuIFRPX1NUUklORyA/ICcnIDogdW5kZWZpbmVkO1xuICAgIGEgPSBzLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGEgPCAweGQ4MDAgfHwgYSA+IDB4ZGJmZiB8fCBpICsgMSA9PT0gbCB8fCAoYiA9IHMuY2hhckNvZGVBdChpICsgMSkpIDwgMHhkYzAwIHx8IGIgPiAweGRmZmZcbiAgICAgID8gVE9fU1RSSU5HID8gcy5jaGFyQXQoaSkgOiBhXG4gICAgICA6IFRPX1NUUklORyA/IHMuc2xpY2UoaSwgaSArIDIpIDogKGEgLSAweGQ4MDAgPDwgMTApICsgKGIgLSAweGRjMDApICsgMHgxMDAwMDtcbiAgfTtcbn07XG4iLCIvLyA3LjIuOCBJc1JlZ0V4cChhcmd1bWVudClcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIE1BVENIID0gcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgaXNSZWdFeHA7XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgKChpc1JlZ0V4cCA9IGl0W01BVENIXSkgIT09IHVuZGVmaW5lZCA/ICEhaXNSZWdFeHAgOiBjb2YoaXQpID09ICdSZWdFeHAnKTtcbn07XG4iLCJ2YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIHJpdGVyID0gWzddW0lURVJBVE9SXSgpO1xuICByaXRlclsncmV0dXJuJ10gPSBmdW5jdGlvbiAoKSB7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uICgpIHsgdGhyb3cgMjsgfSk7XG59IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYywgc2tpcENsb3NpbmcpIHtcbiAgaWYgKCFza2lwQ2xvc2luZyAmJiAhU0FGRV9DTE9TSU5HKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzYWZlID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IFs3XTtcbiAgICB2YXIgaXRlciA9IGFycltJVEVSQVRPUl0oKTtcbiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB7IGRvbmU6IHNhZmUgPSB0cnVlIH07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXI7IH07XG4gICAgZXhlYyhhcnIpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIHNhZmU7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBidWlsdGluRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcblxuIC8vIGBSZWdFeHBFeGVjYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cGV4ZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFIsIFMpIHtcbiAgdmFyIGV4ZWMgPSBSLmV4ZWM7XG4gIGlmICh0eXBlb2YgZXhlYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciByZXN1bHQgPSBleGVjLmNhbGwoUiwgUyk7XG4gICAgaWYgKHR5cGVvZiByZXN1bHQgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAgZXhlYyBtZXRob2QgcmV0dXJuZWQgc29tZXRoaW5nIG90aGVyIHRoYW4gYW4gT2JqZWN0IG9yIG51bGwnKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBpZiAoY2xhc3NvZihSKSAhPT0gJ1JlZ0V4cCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyJyk7XG4gIH1cbiAgcmV0dXJuIGJ1aWx0aW5FeGVjLmNhbGwoUiwgUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmV4ZWMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMnKTtcblxudmFyIFNQRUNJRVMgPSB3a3MoJ3NwZWNpZXMnKTtcblxudmFyIFJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gI3JlcGxhY2UgbmVlZHMgYnVpbHQtaW4gc3VwcG9ydCBmb3IgbmFtZWQgZ3JvdXBzLlxuICAvLyAjbWF0Y2ggd29ya3MgZmluZSBiZWNhdXNlIGl0IGp1c3QgcmV0dXJuIHRoZSBleGVjIHJlc3VsdHMsIGV2ZW4gaWYgaXQgaGFzXG4gIC8vIGEgXCJncm9wc1wiIHByb3BlcnR5LlxuICB2YXIgcmUgPSAvLi87XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHJlc3VsdC5ncm91cHMgPSB7IGE6ICc3JyB9O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG4gIHJldHVybiAnJy5yZXBsYWNlKHJlLCAnJDxhPicpICE9PSAnNyc7XG59KTtcblxudmFyIFNQTElUX1dPUktTX1dJVEhfT1ZFUldSSVRURU5fRVhFQyA9IChmdW5jdGlvbiAoKSB7XG4gIC8vIENocm9tZSA1MSBoYXMgYSBidWdneSBcInNwbGl0XCIgaW1wbGVtZW50YXRpb24gd2hlbiBSZWdFeHAjZXhlYyAhPT0gbmF0aXZlRXhlY1xuICB2YXIgcmUgPSAvKD86KS87XG4gIHZhciBvcmlnaW5hbEV4ZWMgPSByZS5leGVjO1xuICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH07XG4gIHZhciByZXN1bHQgPSAnYWInLnNwbGl0KHJlKTtcbiAgcmV0dXJuIHJlc3VsdC5sZW5ndGggPT09IDIgJiYgcmVzdWx0WzBdID09PSAnYScgJiYgcmVzdWx0WzFdID09PSAnYic7XG59KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGxlbmd0aCwgZXhlYykge1xuICB2YXIgU1lNQk9MID0gd2tzKEtFWSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19TWU1CT0wgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIC8vIFN0cmluZyBtZXRob2RzIGNhbGwgc3ltYm9sLW5hbWVkIFJlZ0VwIG1ldGhvZHNcbiAgICB2YXIgTyA9IHt9O1xuICAgIE9bU1lNQk9MXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH07XG4gICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNztcbiAgfSk7XG5cbiAgdmFyIERFTEVHQVRFU19UT19FWEVDID0gREVMRUdBVEVTX1RPX1NZTUJPTCA/ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3ltYm9sLW5hbWVkIFJlZ0V4cCBtZXRob2RzIGNhbGwgLmV4ZWNcbiAgICB2YXIgZXhlY0NhbGxlZCA9IGZhbHNlO1xuICAgIHZhciByZSA9IC9hLztcbiAgICByZS5leGVjID0gZnVuY3Rpb24gKCkgeyBleGVjQ2FsbGVkID0gdHJ1ZTsgcmV0dXJuIG51bGw7IH07XG4gICAgaWYgKEtFWSA9PT0gJ3NwbGl0Jykge1xuICAgICAgLy8gUmVnRXhwW0BAc3BsaXRdIGRvZXNuJ3QgY2FsbCB0aGUgcmVnZXgncyBleGVjIG1ldGhvZCwgYnV0IGZpcnN0IGNyZWF0ZXNcbiAgICAgIC8vIGEgbmV3IG9uZS4gV2UgbmVlZCB0byByZXR1cm4gdGhlIHBhdGNoZWQgcmVnZXggd2hlbiBjcmVhdGluZyB0aGUgbmV3IG9uZS5cbiAgICAgIHJlLmNvbnN0cnVjdG9yID0ge307XG4gICAgICByZS5jb25zdHJ1Y3RvcltTUEVDSUVTXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlOyB9O1xuICAgIH1cbiAgICByZVtTWU1CT0xdKCcnKTtcbiAgICByZXR1cm4gIWV4ZWNDYWxsZWQ7XG4gIH0pIDogdW5kZWZpbmVkO1xuXG4gIGlmIChcbiAgICAhREVMRUdBVEVTX1RPX1NZTUJPTCB8fFxuICAgICFERUxFR0FURVNfVE9fRVhFQyB8fFxuICAgIChLRVkgPT09ICdyZXBsYWNlJyAmJiAhUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMpIHx8XG4gICAgKEtFWSA9PT0gJ3NwbGl0JyAmJiAhU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDKVxuICApIHtcbiAgICB2YXIgbmF0aXZlUmVnRXhwTWV0aG9kID0gLy4vW1NZTUJPTF07XG4gICAgdmFyIGZucyA9IGV4ZWMoXG4gICAgICBkZWZpbmVkLFxuICAgICAgU1lNQk9MLFxuICAgICAgJydbS0VZXSxcbiAgICAgIGZ1bmN0aW9uIG1heWJlQ2FsbE5hdGl2ZShuYXRpdmVNZXRob2QsIHJlZ2V4cCwgc3RyLCBhcmcyLCBmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICBpZiAocmVnZXhwLmV4ZWMgPT09IHJlZ2V4cEV4ZWMpIHtcbiAgICAgICAgICBpZiAoREVMRUdBVEVTX1RPX1NZTUJPTCAmJiAhZm9yY2VTdHJpbmdNZXRob2QpIHtcbiAgICAgICAgICAgIC8vIFRoZSBuYXRpdmUgU3RyaW5nIG1ldGhvZCBhbHJlYWR5IGRlbGVnYXRlcyB0byBAQG1ldGhvZCAodGhpc1xuICAgICAgICAgICAgLy8gcG9seWZpbGxlZCBmdW5jdGlvbiksIGxlYXNpbmcgdG8gaW5maW5pdGUgcmVjdXJzaW9uLlxuICAgICAgICAgICAgLy8gV2UgYXZvaWQgaXQgYnkgZGlyZWN0bHkgY2FsbGluZyB0aGUgbmF0aXZlIEBAbWV0aG9kIG1ldGhvZC5cbiAgICAgICAgICAgIHJldHVybiB7IGRvbmU6IHRydWUsIHZhbHVlOiBuYXRpdmVSZWdFeHBNZXRob2QuY2FsbChyZWdleHAsIHN0ciwgYXJnMikgfTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZU1ldGhvZC5jYWxsKHN0ciwgcmVnZXhwLCBhcmcyKSB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGRvbmU6IGZhbHNlIH07XG4gICAgICB9XG4gICAgKTtcbiAgICB2YXIgc3RyZm4gPSBmbnNbMF07XG4gICAgdmFyIHJ4Zm4gPSBmbnNbMV07XG5cbiAgICByZWRlZmluZShTdHJpbmcucHJvdG90eXBlLCBLRVksIHN0cmZuKTtcbiAgICBoaWRlKFJlZ0V4cC5wcm90b3R5cGUsIFNZTUJPTCwgbGVuZ3RoID09IDJcbiAgICAgIC8vIDIxLjIuNS44IFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXShzdHJpbmcsIHJlcGxhY2VWYWx1ZSlcbiAgICAgIC8vIDIxLjIuNS4xMSBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdKHN0cmluZywgbGltaXQpXG4gICAgICA/IGZ1bmN0aW9uIChzdHJpbmcsIGFyZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcywgYXJnKTsgfVxuICAgICAgLy8gMjEuMi41LjYgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXShzdHJpbmcpXG4gICAgICAvLyAyMS4yLjUuOSBSZWdFeHAucHJvdG90eXBlW0BAc2VhcmNoXShzdHJpbmcpXG4gICAgICA6IGZ1bmN0aW9uIChzdHJpbmcpIHsgcmV0dXJuIHJ4Zm4uY2FsbChzdHJpbmcsIHRoaXMpOyB9XG4gICAgKTtcbiAgfVxufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBuYXZpZ2F0b3IgPSBnbG9iYWwubmF2aWdhdG9yO1xuXG5tb2R1bGUuZXhwb3J0cyA9IG5hdmlnYXRvciAmJiBuYXZpZ2F0b3IudXNlckFnZW50IHx8ICcnO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpO1xudmFyIGZvck9mID0gcmVxdWlyZSgnLi9fZm9yLW9mJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgJGl0ZXJEZXRlY3QgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTkFNRSwgd3JhcHBlciwgbWV0aG9kcywgY29tbW9uLCBJU19NQVAsIElTX1dFQUspIHtcbiAgdmFyIEJhc2UgPSBnbG9iYWxbTkFNRV07XG4gIHZhciBDID0gQmFzZTtcbiAgdmFyIEFEREVSID0gSVNfTUFQID8gJ3NldCcgOiAnYWRkJztcbiAgdmFyIHByb3RvID0gQyAmJiBDLnByb3RvdHlwZTtcbiAgdmFyIE8gPSB7fTtcbiAgdmFyIGZpeE1ldGhvZCA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgICB2YXIgZm4gPSBwcm90b1tLRVldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBLRVksXG4gICAgICBLRVkgPT0gJ2RlbGV0ZScgPyBmdW5jdGlvbiAoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2hhcycgPyBmdW5jdGlvbiBoYXMoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2dldCcgPyBmdW5jdGlvbiBnZXQoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyB1bmRlZmluZWQgOiBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7XG4gICAgICB9IDogS0VZID09ICdhZGQnID8gZnVuY3Rpb24gYWRkKGEpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpOyByZXR1cm4gdGhpczsgfVxuICAgICAgICA6IGZ1bmN0aW9uIHNldChhLCBiKSB7IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhLCBiKTsgcmV0dXJuIHRoaXM7IH1cbiAgICApO1xuICB9O1xuICBpZiAodHlwZW9mIEMgIT0gJ2Z1bmN0aW9uJyB8fCAhKElTX1dFQUsgfHwgcHJvdG8uZm9yRWFjaCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyBDKCkuZW50cmllcygpLm5leHQoKTtcbiAgfSkpKSB7XG4gICAgLy8gY3JlYXRlIGNvbGxlY3Rpb24gY29uc3RydWN0b3JcbiAgICBDID0gY29tbW9uLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpO1xuICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCBtZXRob2RzKTtcbiAgICBtZXRhLk5FRUQgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDKCk7XG4gICAgLy8gZWFybHkgaW1wbGVtZW50YXRpb25zIG5vdCBzdXBwb3J0cyBjaGFpbmluZ1xuICAgIHZhciBIQVNOVF9DSEFJTklORyA9IGluc3RhbmNlW0FEREVSXShJU19XRUFLID8ge30gOiAtMCwgMSkgIT0gaW5zdGFuY2U7XG4gICAgLy8gVjggfiAgQ2hyb21pdW0gNDAtIHdlYWstY29sbGVjdGlvbnMgdGhyb3dzIG9uIHByaW1pdGl2ZXMsIGJ1dCBzaG91bGQgcmV0dXJuIGZhbHNlXG4gICAgdmFyIFRIUk9XU19PTl9QUklNSVRJVkVTID0gZmFpbHMoZnVuY3Rpb24gKCkgeyBpbnN0YW5jZS5oYXMoMSk7IH0pO1xuICAgIC8vIG1vc3QgZWFybHkgaW1wbGVtZW50YXRpb25zIGRvZXNuJ3Qgc3VwcG9ydHMgaXRlcmFibGVzLCBtb3N0IG1vZGVybiAtIG5vdCBjbG9zZSBpdCBjb3JyZWN0bHlcbiAgICB2YXIgQUNDRVBUX0lURVJBQkxFUyA9ICRpdGVyRGV0ZWN0KGZ1bmN0aW9uIChpdGVyKSB7IG5ldyBDKGl0ZXIpOyB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAvLyBmb3IgZWFybHkgaW1wbGVtZW50YXRpb25zIC0wIGFuZCArMCBub3QgdGhlIHNhbWVcbiAgICB2YXIgQlVHR1lfWkVSTyA9ICFJU19XRUFLICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIFY4IH4gQ2hyb21pdW0gNDItIGZhaWxzIG9ubHkgd2l0aCA1KyBlbGVtZW50c1xuICAgICAgdmFyICRpbnN0YW5jZSA9IG5ldyBDKCk7XG4gICAgICB2YXIgaW5kZXggPSA1O1xuICAgICAgd2hpbGUgKGluZGV4LS0pICRpbnN0YW5jZVtBRERFUl0oaW5kZXgsIGluZGV4KTtcbiAgICAgIHJldHVybiAhJGluc3RhbmNlLmhhcygtMCk7XG4gICAgfSk7XG4gICAgaWYgKCFBQ0NFUFRfSVRFUkFCTEVTKSB7XG4gICAgICBDID0gd3JhcHBlcihmdW5jdGlvbiAodGFyZ2V0LCBpdGVyYWJsZSkge1xuICAgICAgICBhbkluc3RhbmNlKHRhcmdldCwgQywgTkFNRSk7XG4gICAgICAgIHZhciB0aGF0ID0gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UoKSwgdGFyZ2V0LCBDKTtcbiAgICAgICAgaWYgKGl0ZXJhYmxlICE9IHVuZGVmaW5lZCkgZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpO1xuICAgICAgICByZXR1cm4gdGhhdDtcbiAgICAgIH0pO1xuICAgICAgQy5wcm90b3R5cGUgPSBwcm90bztcbiAgICAgIHByb3RvLmNvbnN0cnVjdG9yID0gQztcbiAgICB9XG4gICAgaWYgKFRIUk9XU19PTl9QUklNSVRJVkVTIHx8IEJVR0dZX1pFUk8pIHtcbiAgICAgIGZpeE1ldGhvZCgnZGVsZXRlJyk7XG4gICAgICBmaXhNZXRob2QoJ2hhcycpO1xuICAgICAgSVNfTUFQICYmIGZpeE1ldGhvZCgnZ2V0Jyk7XG4gICAgfVxuICAgIGlmIChCVUdHWV9aRVJPIHx8IEhBU05UX0NIQUlOSU5HKSBmaXhNZXRob2QoQURERVIpO1xuICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgc2hvdWxkIG5vdCBjb250YWlucyAuY2xlYXIgbWV0aG9kXG4gICAgaWYgKElTX1dFQUsgJiYgcHJvdG8uY2xlYXIpIGRlbGV0ZSBwcm90by5jbGVhcjtcbiAgfVxuXG4gIHNldFRvU3RyaW5nVGFnKEMsIE5BTUUpO1xuXG4gIE9bTkFNRV0gPSBDO1xuICAkZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChDICE9IEJhc2UpLCBPKTtcblxuICBpZiAoIUlTX1dFQUspIGNvbW1vbi5zZXRTdHJvbmcoQywgTkFNRSwgSVNfTUFQKTtcblxuICByZXR1cm4gQztcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBUWVBFRCA9IHVpZCgndHlwZWRfYXJyYXknKTtcbnZhciBWSUVXID0gdWlkKCd2aWV3Jyk7XG52YXIgQUJWID0gISEoZ2xvYmFsLkFycmF5QnVmZmVyICYmIGdsb2JhbC5EYXRhVmlldyk7XG52YXIgQ09OU1RSID0gQUJWO1xudmFyIGkgPSAwO1xudmFyIGwgPSA5O1xudmFyIFR5cGVkO1xuXG52YXIgVHlwZWRBcnJheUNvbnN0cnVjdG9ycyA9IChcbiAgJ0ludDhBcnJheSxVaW50OEFycmF5LFVpbnQ4Q2xhbXBlZEFycmF5LEludDE2QXJyYXksVWludDE2QXJyYXksSW50MzJBcnJheSxVaW50MzJBcnJheSxGbG9hdDMyQXJyYXksRmxvYXQ2NEFycmF5J1xuKS5zcGxpdCgnLCcpO1xuXG53aGlsZSAoaSA8IGwpIHtcbiAgaWYgKFR5cGVkID0gZ2xvYmFsW1R5cGVkQXJyYXlDb25zdHJ1Y3RvcnNbaSsrXV0pIHtcbiAgICBoaWRlKFR5cGVkLnByb3RvdHlwZSwgVFlQRUQsIHRydWUpO1xuICAgIGhpZGUoVHlwZWQucHJvdG90eXBlLCBWSUVXLCB0cnVlKTtcbiAgfSBlbHNlIENPTlNUUiA9IGZhbHNlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgQUJWOiBBQlYsXG4gIENPTlNUUjogQ09OU1RSLFxuICBUWVBFRDogVFlQRUQsXG4gIFZJRVc6IFZJRVdcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBGb3JjZWQgcmVwbGFjZW1lbnQgcHJvdG90eXBlIGFjY2Vzc29ycyBtZXRob2RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKSB8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHZhciBLID0gTWF0aC5yYW5kb20oKTtcbiAgLy8gSW4gRkYgdGhyb3dzIG9ubHkgZGVmaW5lIG1ldGhvZHNcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmLCBuby11c2VsZXNzLWNhbGxcbiAgX19kZWZpbmVTZXR0ZXJfXy5jYWxsKG51bGwsIEssIGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG4gIGRlbGV0ZSByZXF1aXJlKCcuL19nbG9iYWwnKVtLXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ09MTEVDVElPTikge1xuICAkZXhwb3J0KCRleHBvcnQuUywgQ09MTEVDVElPTiwgeyBvZjogZnVuY3Rpb24gb2YoKSB7XG4gICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIEEgPSBuZXcgQXJyYXkobGVuZ3RoKTtcbiAgICB3aGlsZSAobGVuZ3RoLS0pIEFbbGVuZ3RoXSA9IGFyZ3VtZW50c1tsZW5ndGhdO1xuICAgIHJldHVybiBuZXcgdGhpcyhBKTtcbiAgfSB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDT0xMRUNUSU9OKSB7XG4gICRleHBvcnQoJGV4cG9ydC5TLCBDT0xMRUNUSU9OLCB7IGZyb206IGZ1bmN0aW9uIGZyb20oc291cmNlIC8qICwgbWFwRm4sIHRoaXNBcmcgKi8pIHtcbiAgICB2YXIgbWFwRm4gPSBhcmd1bWVudHNbMV07XG4gICAgdmFyIG1hcHBpbmcsIEEsIG4sIGNiO1xuICAgIGFGdW5jdGlvbih0aGlzKTtcbiAgICBtYXBwaW5nID0gbWFwRm4gIT09IHVuZGVmaW5lZDtcbiAgICBpZiAobWFwcGluZykgYUZ1bmN0aW9uKG1hcEZuKTtcbiAgICBpZiAoc291cmNlID09IHVuZGVmaW5lZCkgcmV0dXJuIG5ldyB0aGlzKCk7XG4gICAgQSA9IFtdO1xuICAgIGlmIChtYXBwaW5nKSB7XG4gICAgICBuID0gMDtcbiAgICAgIGNiID0gY3R4KG1hcEZuLCBhcmd1bWVudHNbMl0sIDIpO1xuICAgICAgZm9yT2Yoc291cmNlLCBmYWxzZSwgZnVuY3Rpb24gKG5leHRJdGVtKSB7XG4gICAgICAgIEEucHVzaChjYihuZXh0SXRlbSwgbisrKSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yT2Yoc291cmNlLCBmYWxzZSwgQS5wdXNoLCBBKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyB0aGlzKEEpO1xuICB9IH0pO1xufTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn0iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgdmFyICRTeW1ib2wgPSBjb3JlLlN5bWJvbCB8fCAoY29yZS5TeW1ib2wgPSBMSUJSQVJZID8ge30gOiBnbG9iYWwuU3ltYm9sIHx8IHt9KTtcbiAgaWYgKG5hbWUuY2hhckF0KDApICE9ICdfJyAmJiAhKG5hbWUgaW4gJFN5bWJvbCkpIGRlZmluZVByb3BlcnR5KCRTeW1ib2wsIG5hbWUsIHsgdmFsdWU6IHdrc0V4dC5mKG5hbWUpIH0pO1xufTtcbiIsInZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKSgna2V5cycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiBzaGFyZWRba2V5XSB8fCAoc2hhcmVkW2tleV0gPSB1aWQoa2V5KSk7XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCJ2YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbm1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSAnXFx4MDlcXHgwQVxceDBCXFx4MENcXHgwRFxceDIwXFx4QTBcXHUxNjgwXFx1MTgwRVxcdTIwMDBcXHUyMDAxXFx1MjAwMlxcdTIwMDMnICtcbiAgJ1xcdTIwMDRcXHUyMDA1XFx1MjAwNlxcdTIwMDdcXHUyMDA4XFx1MjAwOVxcdTIwMEFcXHUyMDJGXFx1MjA1RlxcdTMwMDBcXHUyMDI4XFx1MjAyOVxcdUZFRkYnO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCB0YXJnZXQsIEMpIHtcbiAgdmFyIFMgPSB0YXJnZXQuY29uc3RydWN0b3I7XG4gIHZhciBQO1xuICBpZiAoUyAhPT0gQyAmJiB0eXBlb2YgUyA9PSAnZnVuY3Rpb24nICYmIChQID0gUy5wcm90b3R5cGUpICE9PSBDLnByb3RvdHlwZSAmJiBpc09iamVjdChQKSAmJiBzZXRQcm90b3R5cGVPZikge1xuICAgIHNldFByb3RvdHlwZU9mKHRoYXQsIFApO1xuICB9IHJldHVybiB0aGF0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZXBlYXQoY291bnQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKTtcbiAgdmFyIHJlcyA9ICcnO1xuICB2YXIgbiA9IHRvSW50ZWdlcihjb3VudCk7XG4gIGlmIChuIDwgMCB8fCBuID09IEluZmluaXR5KSB0aHJvdyBSYW5nZUVycm9yKFwiQ291bnQgY2FuJ3QgYmUgbmVnYXRpdmVcIik7XG4gIGZvciAoO24gPiAwOyAobiA+Pj49IDEpICYmIChzdHIgKz0gc3RyKSkgaWYgKG4gJiAxKSByZXMgKz0gc3RyO1xuICByZXR1cm4gcmVzO1xufTtcbiIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uIHNpZ24oeCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiAoeCA9ICt4KSA9PSAwIHx8IHggIT0geCA/IHggOiB4IDwgMCA/IC0xIDogMTtcbn07XG4iLCIvLyAyMC4yLjIuMTQgTWF0aC5leHBtMSh4KVxudmFyICRleHBtMSA9IE1hdGguZXhwbTE7XG5tb2R1bGUuZXhwb3J0cyA9ICghJGV4cG0xXG4gIC8vIE9sZCBGRiBidWdcbiAgfHwgJGV4cG0xKDEwKSA+IDIyMDI1LjQ2NTc5NDgwNjcxOSB8fCAkZXhwbTEoMTApIDwgMjIwMjUuNDY1Nzk0ODA2NzE2NTE2OFxuICAvLyBUb3IgQnJvd3NlciBidWdcbiAgfHwgJGV4cG0xKC0yZS0xNykgIT0gLTJlLTE3XG4pID8gZnVuY3Rpb24gZXhwbTEoeCkge1xuICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiB4ID4gLTFlLTYgJiYgeCA8IDFlLTYgPyB4ICsgeCAqIHggLyAyIDogTWF0aC5leHAoeCkgLSAxO1xufSA6ICRleHBtMTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciAkaXRlckNyZWF0ZSA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQlVHR1kgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSk7IC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbnZhciBGRl9JVEVSQVRPUiA9ICdAQGl0ZXJhdG9yJztcbnZhciBLRVlTID0gJ2tleXMnO1xudmFyIFZBTFVFUyA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgIGlmICghQlVHR1kgJiYga2luZCBpbiBwcm90bykgcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgPSBOQU1FICsgJyBJdGVyYXRvcic7XG4gIHZhciBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVM7XG4gIHZhciBWQUxVRVNfQlVHID0gZmFsc2U7XG4gIHZhciBwcm90byA9IEJhc2UucHJvdG90eXBlO1xuICB2YXIgJG5hdGl2ZSA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXTtcbiAgdmFyICRkZWZhdWx0ID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCk7XG4gIHZhciAkZW50cmllcyA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWQ7XG4gIHZhciAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZTtcbiAgdmFyIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYgKCRhbnlOYXRpdmUpIHtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSgpKSk7XG4gICAgaWYgKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEl0ZXJhdG9yUHJvdG90eXBlLm5leHQpIHtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZiAoIUxJQlJBUlkgJiYgdHlwZW9mIEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSAhPSAnZnVuY3Rpb24nKSBoaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUykge1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZiAoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpIHtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddID0gcmV0dXJuVGhpcztcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIGZvciAoa2V5IGluIG1ldGhvZHMpIHtcbiAgICAgIGlmICghKGtleSBpbiBwcm90bykpIHJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiIsIi8vIGhlbHBlciBmb3IgU3RyaW5nI3tzdGFydHNXaXRoLCBlbmRzV2l0aCwgaW5jbHVkZXN9XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBzZWFyY2hTdHJpbmcsIE5BTUUpIHtcbiAgaWYgKGlzUmVnRXhwKHNlYXJjaFN0cmluZykpIHRocm93IFR5cGVFcnJvcignU3RyaW5nIycgKyBOQU1FICsgXCIgZG9lc24ndCBhY2NlcHQgcmVnZXghXCIpO1xuICByZXR1cm4gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xufTtcbiIsInZhciBNQVRDSCA9IHJlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoS0VZKSB7XG4gIHZhciByZSA9IC8uLztcbiAgdHJ5IHtcbiAgICAnLy4vJ1tLRVldKHJlKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHRyeSB7XG4gICAgICByZVtNQVRDSF0gPSBmYWxzZTtcbiAgICAgIHJldHVybiAhJy8uLydbS0VZXShyZSk7XG4gICAgfSBjYXRjaCAoZikgeyAvKiBlbXB0eSAqLyB9XG4gIH0gcmV0dXJuIHRydWU7XG59O1xuIiwiLy8gY2hlY2sgb24gZGVmYXVsdCBBcnJheSBpdGVyYXRvclxudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ICE9PSB1bmRlZmluZWQgJiYgKEl0ZXJhdG9ycy5BcnJheSA9PT0gaXQgfHwgQXJyYXlQcm90b1tJVEVSQVRPUl0gPT09IGl0KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGRlZmluZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBpbmRleCwgdmFsdWUpIHtcbiAgaWYgKGluZGV4IGluIG9iamVjdCkgJGRlZmluZVByb3BlcnR5LmYob2JqZWN0LCBpbmRleCwgY3JlYXRlRGVzYygwLCB2YWx1ZSkpO1xuICBlbHNlIG9iamVjdFtpbmRleF0gPSB2YWx1ZTtcbn07XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3JNZXRob2QgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKGl0ICE9IHVuZGVmaW5lZCkgcmV0dXJuIGl0W0lURVJBVE9SXVxuICAgIHx8IGl0WydAQGl0ZXJhdG9yJ11cbiAgICB8fCBJdGVyYXRvcnNbY2xhc3NvZihpdCldO1xufTtcbiIsIi8vIDkuNC4yLjMgQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aClcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsLCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07XG4iLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiAsIHN0YXJ0ID0gMCwgZW5kID0gQGxlbmd0aCAqLykge1xuICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgbGVuZ3RoKTtcbiAgdmFyIGVuZCA9IGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkO1xuICB2YXIgZW5kUG9zID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW5ndGggOiB0b0Fic29sdXRlSW5kZXgoZW5kLCBsZW5ndGgpO1xuICB3aGlsZSAoZW5kUG9zID4gaW5kZXgpIE9baW5kZXgrK10gPSB2YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kXG4vLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIga2luZCA9IHRoaXMuX2s7XG4gIHZhciBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYgKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKSB7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIE9baW5kZXhdKTtcbiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pO1xufSwgJ3ZhbHVlcycpO1xuXG4vLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpXG5JdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHJlZ2V4cEZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcblxudmFyIG5hdGl2ZUV4ZWMgPSBSZWdFeHAucHJvdG90eXBlLmV4ZWM7XG4vLyBUaGlzIGFsd2F5cyByZWZlcnMgdG8gdGhlIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbiwgYmVjYXVzZSB0aGVcbi8vIFN0cmluZyNyZXBsYWNlIHBvbHlmaWxsIHVzZXMgLi9maXgtcmVnZXhwLXdlbGwta25vd24tc3ltYm9sLWxvZ2ljLmpzLFxuLy8gd2hpY2ggbG9hZHMgdGhpcyBmaWxlIGJlZm9yZSBwYXRjaGluZyB0aGUgbWV0aG9kLlxudmFyIG5hdGl2ZVJlcGxhY2UgPSBTdHJpbmcucHJvdG90eXBlLnJlcGxhY2U7XG5cbnZhciBwYXRjaGVkRXhlYyA9IG5hdGl2ZUV4ZWM7XG5cbnZhciBMQVNUX0lOREVYID0gJ2xhc3RJbmRleCc7XG5cbnZhciBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgPSAoZnVuY3Rpb24gKCkge1xuICB2YXIgcmUxID0gL2EvLFxuICAgICAgcmUyID0gL2IqL2c7XG4gIG5hdGl2ZUV4ZWMuY2FsbChyZTEsICdhJyk7XG4gIG5hdGl2ZUV4ZWMuY2FsbChyZTIsICdhJyk7XG4gIHJldHVybiByZTFbTEFTVF9JTkRFWF0gIT09IDAgfHwgcmUyW0xBU1RfSU5ERVhdICE9PSAwO1xufSkoKTtcblxuLy8gbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXAsIGNvcGllZCBmcm9tIGVzNS1zaGltJ3MgU3RyaW5nI3NwbGl0IHBhdGNoLlxudmFyIE5QQ0dfSU5DTFVERUQgPSAvKCk/Py8uZXhlYygnJylbMV0gIT09IHVuZGVmaW5lZDtcblxudmFyIFBBVENIID0gVVBEQVRFU19MQVNUX0lOREVYX1dST05HIHx8IE5QQ0dfSU5DTFVERUQ7XG5cbmlmIChQQVRDSCkge1xuICBwYXRjaGVkRXhlYyA9IGZ1bmN0aW9uIGV4ZWMoc3RyKSB7XG4gICAgdmFyIHJlID0gdGhpcztcbiAgICB2YXIgbGFzdEluZGV4LCByZUNvcHksIG1hdGNoLCBpO1xuXG4gICAgaWYgKE5QQ0dfSU5DTFVERUQpIHtcbiAgICAgIHJlQ29weSA9IG5ldyBSZWdFeHAoJ14nICsgcmUuc291cmNlICsgJyQoPyFcXFxccyknLCByZWdleHBGbGFncy5jYWxsKHJlKSk7XG4gICAgfVxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcpIGxhc3RJbmRleCA9IHJlW0xBU1RfSU5ERVhdO1xuXG4gICAgbWF0Y2ggPSBuYXRpdmVFeGVjLmNhbGwocmUsIHN0cik7XG5cbiAgICBpZiAoVVBEQVRFU19MQVNUX0lOREVYX1dST05HICYmIG1hdGNoKSB7XG4gICAgICByZVtMQVNUX0lOREVYXSA9IHJlLmdsb2JhbCA/IG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoIDogbGFzdEluZGV4O1xuICAgIH1cbiAgICBpZiAoTlBDR19JTkNMVURFRCAmJiBtYXRjaCAmJiBtYXRjaC5sZW5ndGggPiAxKSB7XG4gICAgICAvLyBGaXggYnJvd3NlcnMgd2hvc2UgYGV4ZWNgIG1ldGhvZHMgZG9uJ3QgY29uc2lzdGVudGx5IHJldHVybiBgdW5kZWZpbmVkYFxuICAgICAgLy8gZm9yIE5QQ0csIGxpa2UgSUU4LiBOT1RFOiBUaGlzIGRvZXNuJyB3b3JrIGZvciAvKC4/KT8vXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbG9vcC1mdW5jXG4gICAgICBuYXRpdmVSZXBsYWNlLmNhbGwobWF0Y2hbMF0sIHJlQ29weSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aCAtIDI7IGkrKykge1xuICAgICAgICAgIGlmIChhcmd1bWVudHNbaV0gPT09IHVuZGVmaW5lZCkgbWF0Y2hbaV0gPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBtYXRjaDtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBwYXRjaGVkRXhlYztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1hdCcpKHRydWUpO1xuXG4gLy8gYEFkdmFuY2VTdHJpbmdJbmRleGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1hZHZhbmNlc3RyaW5naW5kZXhcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFMsIGluZGV4LCB1bmljb2RlKSB7XG4gIHJldHVybiBpbmRleCArICh1bmljb2RlID8gYXQoUywgaW5kZXgpLmxlbmd0aCA6IDEpO1xufTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBpbnZva2UgPSByZXF1aXJlKCcuL19pbnZva2UnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNlbCA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgc2V0VGFzayA9IGdsb2JhbC5zZXRJbW1lZGlhdGU7XG52YXIgY2xlYXJUYXNrID0gZ2xvYmFsLmNsZWFySW1tZWRpYXRlO1xudmFyIE1lc3NhZ2VDaGFubmVsID0gZ2xvYmFsLk1lc3NhZ2VDaGFubmVsO1xudmFyIERpc3BhdGNoID0gZ2xvYmFsLkRpc3BhdGNoO1xudmFyIGNvdW50ZXIgPSAwO1xudmFyIHF1ZXVlID0ge307XG52YXIgT05SRUFEWVNUQVRFQ0hBTkdFID0gJ29ucmVhZHlzdGF0ZWNoYW5nZSc7XG52YXIgZGVmZXIsIGNoYW5uZWwsIHBvcnQ7XG52YXIgcnVuID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaWQgPSArdGhpcztcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xuICBpZiAocXVldWUuaGFzT3duUHJvcGVydHkoaWQpKSB7XG4gICAgdmFyIGZuID0gcXVldWVbaWRdO1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gICAgZm4oKTtcbiAgfVxufTtcbnZhciBsaXN0ZW5lciA9IGZ1bmN0aW9uIChldmVudCkge1xuICBydW4uY2FsbChldmVudC5kYXRhKTtcbn07XG4vLyBOb2RlLmpzIDAuOSsgJiBJRTEwKyBoYXMgc2V0SW1tZWRpYXRlLCBvdGhlcndpc2U6XG5pZiAoIXNldFRhc2sgfHwgIWNsZWFyVGFzaykge1xuICBzZXRUYXNrID0gZnVuY3Rpb24gc2V0SW1tZWRpYXRlKGZuKSB7XG4gICAgdmFyIGFyZ3MgPSBbXTtcbiAgICB2YXIgaSA9IDE7XG4gICAgd2hpbGUgKGFyZ3VtZW50cy5sZW5ndGggPiBpKSBhcmdzLnB1c2goYXJndW1lbnRzW2krK10pO1xuICAgIHF1ZXVlWysrY291bnRlcl0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICAgIGludm9rZSh0eXBlb2YgZm4gPT0gJ2Z1bmN0aW9uJyA/IGZuIDogRnVuY3Rpb24oZm4pLCBhcmdzKTtcbiAgICB9O1xuICAgIGRlZmVyKGNvdW50ZXIpO1xuICAgIHJldHVybiBjb3VudGVyO1xuICB9O1xuICBjbGVhclRhc2sgPSBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShpZCkge1xuICAgIGRlbGV0ZSBxdWV1ZVtpZF07XG4gIH07XG4gIC8vIE5vZGUuanMgMC44LVxuICBpZiAocmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soY3R4KHJ1biwgaWQsIDEpKTtcbiAgICB9O1xuICAvLyBTcGhlcmUgKEpTIGdhbWUgZW5naW5lKSBEaXNwYXRjaCBBUElcbiAgfSBlbHNlIGlmIChEaXNwYXRjaCAmJiBEaXNwYXRjaC5ub3cpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgRGlzcGF0Y2gubm93KGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gQnJvd3NlcnMgd2l0aCBNZXNzYWdlQ2hhbm5lbCwgaW5jbHVkZXMgV2ViV29ya2Vyc1xuICB9IGVsc2UgaWYgKE1lc3NhZ2VDaGFubmVsKSB7XG4gICAgY2hhbm5lbCA9IG5ldyBNZXNzYWdlQ2hhbm5lbCgpO1xuICAgIHBvcnQgPSBjaGFubmVsLnBvcnQyO1xuICAgIGNoYW5uZWwucG9ydDEub25tZXNzYWdlID0gbGlzdGVuZXI7XG4gICAgZGVmZXIgPSBjdHgocG9ydC5wb3N0TWVzc2FnZSwgcG9ydCwgMSk7XG4gIC8vIEJyb3dzZXJzIHdpdGggcG9zdE1lc3NhZ2UsIHNraXAgV2ViV29ya2Vyc1xuICAvLyBJRTggaGFzIHBvc3RNZXNzYWdlLCBidXQgaXQncyBzeW5jICYgdHlwZW9mIGl0cyBwb3N0TWVzc2FnZSBpcyAnb2JqZWN0J1xuICB9IGVsc2UgaWYgKGdsb2JhbC5hZGRFdmVudExpc3RlbmVyICYmIHR5cGVvZiBwb3N0TWVzc2FnZSA9PSAnZnVuY3Rpb24nICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBnbG9iYWwucG9zdE1lc3NhZ2UoaWQgKyAnJywgJyonKTtcbiAgICB9O1xuICAgIGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIsIGZhbHNlKTtcbiAgLy8gSUU4LVxuICB9IGVsc2UgaWYgKE9OUkVBRFlTVEFURUNIQU5HRSBpbiBjZWwoJ3NjcmlwdCcpKSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIGh0bWwuYXBwZW5kQ2hpbGQoY2VsKCdzY3JpcHQnKSlbT05SRUFEWVNUQVRFQ0hBTkdFXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaHRtbC5yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICAgICAgcnVuLmNhbGwoaWQpO1xuICAgICAgfTtcbiAgICB9O1xuICAvLyBSZXN0IG9sZCBicm93c2Vyc1xuICB9IGVsc2Uge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBzZXRUaW1lb3V0KGN0eChydW4sIGlkLCAxKSwgMCk7XG4gICAgfTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogc2V0VGFzayxcbiAgY2xlYXI6IGNsZWFyVGFza1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBtYWNyb3Rhc2sgPSByZXF1aXJlKCcuL190YXNrJykuc2V0O1xudmFyIE9ic2VydmVyID0gZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIgfHwgZ2xvYmFsLldlYktpdE11dGF0aW9uT2JzZXJ2ZXI7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIFByb21pc2UgPSBnbG9iYWwuUHJvbWlzZTtcbnZhciBpc05vZGUgPSByZXF1aXJlKCcuL19jb2YnKShwcm9jZXNzKSA9PSAncHJvY2Vzcyc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaGVhZCwgbGFzdCwgbm90aWZ5O1xuXG4gIHZhciBmbHVzaCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcGFyZW50LCBmbjtcbiAgICBpZiAoaXNOb2RlICYmIChwYXJlbnQgPSBwcm9jZXNzLmRvbWFpbikpIHBhcmVudC5leGl0KCk7XG4gICAgd2hpbGUgKGhlYWQpIHtcbiAgICAgIGZuID0gaGVhZC5mbjtcbiAgICAgIGhlYWQgPSBoZWFkLm5leHQ7XG4gICAgICB0cnkge1xuICAgICAgICBmbigpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoaGVhZCkgbm90aWZ5KCk7XG4gICAgICAgIGVsc2UgbGFzdCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhyb3cgZTtcbiAgICAgIH1cbiAgICB9IGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgaWYgKHBhcmVudCkgcGFyZW50LmVudGVyKCk7XG4gIH07XG5cbiAgLy8gTm9kZS5qc1xuICBpZiAoaXNOb2RlKSB7XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgcHJvY2Vzcy5uZXh0VGljayhmbHVzaCk7XG4gICAgfTtcbiAgLy8gYnJvd3NlcnMgd2l0aCBNdXRhdGlvbk9ic2VydmVyLCBleGNlcHQgaU9TIFNhZmFyaSAtIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMzlcbiAgfSBlbHNlIGlmIChPYnNlcnZlciAmJiAhKGdsb2JhbC5uYXZpZ2F0b3IgJiYgZ2xvYmFsLm5hdmlnYXRvci5zdGFuZGFsb25lKSkge1xuICAgIHZhciB0b2dnbGUgPSB0cnVlO1xuICAgIHZhciBub2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJycpO1xuICAgIG5ldyBPYnNlcnZlcihmbHVzaCkub2JzZXJ2ZShub2RlLCB7IGNoYXJhY3RlckRhdGE6IHRydWUgfSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbm90aWZ5ID0gZnVuY3Rpb24gKCkge1xuICAgICAgbm9kZS5kYXRhID0gdG9nZ2xlID0gIXRvZ2dsZTtcbiAgICB9O1xuICAvLyBlbnZpcm9ubWVudHMgd2l0aCBtYXliZSBub24tY29tcGxldGVseSBjb3JyZWN0LCBidXQgZXhpc3RlbnQgUHJvbWlzZVxuICB9IGVsc2UgaWYgKFByb21pc2UgJiYgUHJvbWlzZS5yZXNvbHZlKSB7XG4gICAgLy8gUHJvbWlzZS5yZXNvbHZlIHdpdGhvdXQgYW4gYXJndW1lbnQgdGhyb3dzIGFuIGVycm9yIGluIExHIFdlYk9TIDJcbiAgICB2YXIgcHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb21pc2UudGhlbihmbHVzaCk7XG4gICAgfTtcbiAgLy8gZm9yIG90aGVyIGVudmlyb25tZW50cyAtIG1hY3JvdGFzayBiYXNlZCBvbjpcbiAgLy8gLSBzZXRJbW1lZGlhdGVcbiAgLy8gLSBNZXNzYWdlQ2hhbm5lbFxuICAvLyAtIHdpbmRvdy5wb3N0TWVzc2FnXG4gIC8vIC0gb25yZWFkeXN0YXRlY2hhbmdlXG4gIC8vIC0gc2V0VGltZW91dFxuICB9IGVsc2Uge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIHN0cmFuZ2UgSUUgKyB3ZWJwYWNrIGRldiBzZXJ2ZXIgYnVnIC0gdXNlIC5jYWxsKGdsb2JhbClcbiAgICAgIG1hY3JvdGFzay5jYWxsKGdsb2JhbCwgZmx1c2gpO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGZuKSB7XG4gICAgdmFyIHRhc2sgPSB7IGZuOiBmbiwgbmV4dDogdW5kZWZpbmVkIH07XG4gICAgaWYgKGxhc3QpIGxhc3QubmV4dCA9IHRhc2s7XG4gICAgaWYgKCFoZWFkKSB7XG4gICAgICBoZWFkID0gdGFzaztcbiAgICAgIG5vdGlmeSgpO1xuICAgIH0gbGFzdCA9IHRhc2s7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjUuNC4xLjUgTmV3UHJvbWlzZUNhcGFiaWxpdHkoQylcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG5cbmZ1bmN0aW9uIFByb21pc2VDYXBhYmlsaXR5KEMpIHtcbiAgdmFyIHJlc29sdmUsIHJlamVjdDtcbiAgdGhpcy5wcm9taXNlID0gbmV3IEMoZnVuY3Rpb24gKCQkcmVzb2x2ZSwgJCRyZWplY3QpIHtcbiAgICBpZiAocmVzb2x2ZSAhPT0gdW5kZWZpbmVkIHx8IHJlamVjdCAhPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoJ0JhZCBQcm9taXNlIGNvbnN0cnVjdG9yJyk7XG4gICAgcmVzb2x2ZSA9ICQkcmVzb2x2ZTtcbiAgICByZWplY3QgPSAkJHJlamVjdDtcbiAgfSk7XG4gIHRoaXMucmVzb2x2ZSA9IGFGdW5jdGlvbihyZXNvbHZlKTtcbiAgdGhpcy5yZWplY3QgPSBhRnVuY3Rpb24ocmVqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIChDKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZUNhcGFiaWxpdHkoQyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0luZGV4ID0gcmVxdWlyZSgnLi9fdG8taW5kZXgnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBhcnJheUZpbGwgPSByZXF1aXJlKCcuL19hcnJheS1maWxsJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG52YXIgREFUQV9WSUVXID0gJ0RhdGFWaWV3JztcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBXUk9OR19MRU5HVEggPSAnV3JvbmcgbGVuZ3RoISc7XG52YXIgV1JPTkdfSU5ERVggPSAnV3JvbmcgaW5kZXghJztcbnZhciAkQXJyYXlCdWZmZXIgPSBnbG9iYWxbQVJSQVlfQlVGRkVSXTtcbnZhciAkRGF0YVZpZXcgPSBnbG9iYWxbREFUQV9WSUVXXTtcbnZhciBNYXRoID0gZ2xvYmFsLk1hdGg7XG52YXIgUmFuZ2VFcnJvciA9IGdsb2JhbC5SYW5nZUVycm9yO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNoYWRvdy1yZXN0cmljdGVkLW5hbWVzXG52YXIgSW5maW5pdHkgPSBnbG9iYWwuSW5maW5pdHk7XG52YXIgQmFzZUJ1ZmZlciA9ICRBcnJheUJ1ZmZlcjtcbnZhciBhYnMgPSBNYXRoLmFicztcbnZhciBwb3cgPSBNYXRoLnBvdztcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgbG9nID0gTWF0aC5sb2c7XG52YXIgTE4yID0gTWF0aC5MTjI7XG52YXIgQlVGRkVSID0gJ2J1ZmZlcic7XG52YXIgQllURV9MRU5HVEggPSAnYnl0ZUxlbmd0aCc7XG52YXIgQllURV9PRkZTRVQgPSAnYnl0ZU9mZnNldCc7XG52YXIgJEJVRkZFUiA9IERFU0NSSVBUT1JTID8gJ19iJyA6IEJVRkZFUjtcbnZhciAkTEVOR1RIID0gREVTQ1JJUFRPUlMgPyAnX2wnIDogQllURV9MRU5HVEg7XG52YXIgJE9GRlNFVCA9IERFU0NSSVBUT1JTID8gJ19vJyA6IEJZVEVfT0ZGU0VUO1xuXG4vLyBJRUVFNzU0IGNvbnZlcnNpb25zIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9mZXJvc3MvaWVlZTc1NFxuZnVuY3Rpb24gcGFja0lFRUU3NTQodmFsdWUsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgYnVmZmVyID0gbmV3IEFycmF5KG5CeXRlcyk7XG4gIHZhciBlTGVuID0gbkJ5dGVzICogOCAtIG1MZW4gLSAxO1xuICB2YXIgZU1heCA9ICgxIDw8IGVMZW4pIC0gMTtcbiAgdmFyIGVCaWFzID0gZU1heCA+PiAxO1xuICB2YXIgcnQgPSBtTGVuID09PSAyMyA/IHBvdygyLCAtMjQpIC0gcG93KDIsIC03NykgOiAwO1xuICB2YXIgaSA9IDA7XG4gIHZhciBzID0gdmFsdWUgPCAwIHx8IHZhbHVlID09PSAwICYmIDEgLyB2YWx1ZSA8IDAgPyAxIDogMDtcbiAgdmFyIGUsIG0sIGM7XG4gIHZhbHVlID0gYWJzKHZhbHVlKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICBpZiAodmFsdWUgIT0gdmFsdWUgfHwgdmFsdWUgPT09IEluZmluaXR5KSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIG0gPSB2YWx1ZSAhPSB2YWx1ZSA/IDEgOiAwO1xuICAgIGUgPSBlTWF4O1xuICB9IGVsc2Uge1xuICAgIGUgPSBmbG9vcihsb2codmFsdWUpIC8gTE4yKTtcbiAgICBpZiAodmFsdWUgKiAoYyA9IHBvdygyLCAtZSkpIDwgMSkge1xuICAgICAgZS0tO1xuICAgICAgYyAqPSAyO1xuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IDEpIHtcbiAgICAgIHZhbHVlICs9IHJ0IC8gYztcbiAgICB9IGVsc2Uge1xuICAgICAgdmFsdWUgKz0gcnQgKiBwb3coMiwgMSAtIGVCaWFzKTtcbiAgICB9XG4gICAgaWYgKHZhbHVlICogYyA+PSAyKSB7XG4gICAgICBlKys7XG4gICAgICBjIC89IDI7XG4gICAgfVxuICAgIGlmIChlICsgZUJpYXMgPj0gZU1heCkge1xuICAgICAgbSA9IDA7XG4gICAgICBlID0gZU1heDtcbiAgICB9IGVsc2UgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICBtID0gKHZhbHVlICogYyAtIDEpICogcG93KDIsIG1MZW4pO1xuICAgICAgZSA9IGUgKyBlQmlhcztcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHZhbHVlICogcG93KDIsIGVCaWFzIC0gMSkgKiBwb3coMiwgbUxlbik7XG4gICAgICBlID0gMDtcbiAgICB9XG4gIH1cbiAgZm9yICg7IG1MZW4gPj0gODsgYnVmZmVyW2krK10gPSBtICYgMjU1LCBtIC89IDI1NiwgbUxlbiAtPSA4KTtcbiAgZSA9IGUgPDwgbUxlbiB8IG07XG4gIGVMZW4gKz0gbUxlbjtcbiAgZm9yICg7IGVMZW4gPiAwOyBidWZmZXJbaSsrXSA9IGUgJiAyNTUsIGUgLz0gMjU2LCBlTGVuIC09IDgpO1xuICBidWZmZXJbLS1pXSB8PSBzICogMTI4O1xuICByZXR1cm4gYnVmZmVyO1xufVxuZnVuY3Rpb24gdW5wYWNrSUVFRTc1NChidWZmZXIsIG1MZW4sIG5CeXRlcykge1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMTtcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDE7XG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMTtcbiAgdmFyIG5CaXRzID0gZUxlbiAtIDc7XG4gIHZhciBpID0gbkJ5dGVzIC0gMTtcbiAgdmFyIHMgPSBidWZmZXJbaS0tXTtcbiAgdmFyIGUgPSBzICYgMTI3O1xuICB2YXIgbTtcbiAgcyA+Pj0gNztcbiAgZm9yICg7IG5CaXRzID4gMDsgZSA9IGUgKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIG0gPSBlICYgKDEgPDwgLW5CaXRzKSAtIDE7XG4gIGUgPj49IC1uQml0cztcbiAgbkJpdHMgKz0gbUxlbjtcbiAgZm9yICg7IG5CaXRzID4gMDsgbSA9IG0gKiAyNTYgKyBidWZmZXJbaV0sIGktLSwgbkJpdHMgLT0gOCk7XG4gIGlmIChlID09PSAwKSB7XG4gICAgZSA9IDEgLSBlQmlhcztcbiAgfSBlbHNlIGlmIChlID09PSBlTWF4KSB7XG4gICAgcmV0dXJuIG0gPyBOYU4gOiBzID8gLUluZmluaXR5IDogSW5maW5pdHk7XG4gIH0gZWxzZSB7XG4gICAgbSA9IG0gKyBwb3coMiwgbUxlbik7XG4gICAgZSA9IGUgLSBlQmlhcztcbiAgfSByZXR1cm4gKHMgPyAtMSA6IDEpICogbSAqIHBvdygyLCBlIC0gbUxlbik7XG59XG5cbmZ1bmN0aW9uIHVucGFja0kzMihieXRlcykge1xuICByZXR1cm4gYnl0ZXNbM10gPDwgMjQgfCBieXRlc1syXSA8PCAxNiB8IGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXTtcbn1cbmZ1bmN0aW9uIHBhY2tJOChpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrSTE2KGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmLCBpdCA+PiA4ICYgMHhmZl07XG59XG5mdW5jdGlvbiBwYWNrSTMyKGl0KSB7XG4gIHJldHVybiBbaXQgJiAweGZmLCBpdCA+PiA4ICYgMHhmZiwgaXQgPj4gMTYgJiAweGZmLCBpdCA+PiAyNCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0Y2NChpdCkge1xuICByZXR1cm4gcGFja0lFRUU3NTQoaXQsIDUyLCA4KTtcbn1cbmZ1bmN0aW9uIHBhY2tGMzIoaXQpIHtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCAyMywgNCk7XG59XG5cbmZ1bmN0aW9uIGFkZEdldHRlcihDLCBrZXksIGludGVybmFsKSB7XG4gIGRQKENbUFJPVE9UWVBFXSwga2V5LCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpc1tpbnRlcm5hbF07IH0gfSk7XG59XG5cbmZ1bmN0aW9uIGdldCh2aWV3LCBieXRlcywgaW5kZXgsIGlzTGl0dGxlRW5kaWFuKSB7XG4gIHZhciBudW1JbmRleCA9ICtpbmRleDtcbiAgdmFyIGludEluZGV4ID0gdG9JbmRleChudW1JbmRleCk7XG4gIGlmIChpbnRJbmRleCArIGJ5dGVzID4gdmlld1skTEVOR1RIXSkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19JTkRFWCk7XG4gIHZhciBzdG9yZSA9IHZpZXdbJEJVRkZFUl0uX2I7XG4gIHZhciBzdGFydCA9IGludEluZGV4ICsgdmlld1skT0ZGU0VUXTtcbiAgdmFyIHBhY2sgPSBzdG9yZS5zbGljZShzdGFydCwgc3RhcnQgKyBieXRlcyk7XG4gIHJldHVybiBpc0xpdHRsZUVuZGlhbiA/IHBhY2sgOiBwYWNrLnJldmVyc2UoKTtcbn1cbmZ1bmN0aW9uIHNldCh2aWV3LCBieXRlcywgaW5kZXgsIGNvbnZlcnNpb24sIHZhbHVlLCBpc0xpdHRsZUVuZGlhbikge1xuICB2YXIgbnVtSW5kZXggPSAraW5kZXg7XG4gIHZhciBpbnRJbmRleCA9IHRvSW5kZXgobnVtSW5kZXgpO1xuICBpZiAoaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfSU5ERVgpO1xuICB2YXIgc3RvcmUgPSB2aWV3WyRCVUZGRVJdLl9iO1xuICB2YXIgc3RhcnQgPSBpbnRJbmRleCArIHZpZXdbJE9GRlNFVF07XG4gIHZhciBwYWNrID0gY29udmVyc2lvbigrdmFsdWUpO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGJ5dGVzOyBpKyspIHN0b3JlW3N0YXJ0ICsgaV0gPSBwYWNrW2lzTGl0dGxlRW5kaWFuID8gaSA6IGJ5dGVzIC0gaSAtIDFdO1xufVxuXG5pZiAoISR0eXBlZC5BQlYpIHtcbiAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKSB7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkQXJyYXlCdWZmZXIsIEFSUkFZX0JVRkZFUik7XG4gICAgdmFyIGJ5dGVMZW5ndGggPSB0b0luZGV4KGxlbmd0aCk7XG4gICAgdGhpcy5fYiA9IGFycmF5RmlsbC5jYWxsKG5ldyBBcnJheShieXRlTGVuZ3RoKSwgMCk7XG4gICAgdGhpc1skTEVOR1RIXSA9IGJ5dGVMZW5ndGg7XG4gIH07XG5cbiAgJERhdGFWaWV3ID0gZnVuY3Rpb24gRGF0YVZpZXcoYnVmZmVyLCBieXRlT2Zmc2V0LCBieXRlTGVuZ3RoKSB7XG4gICAgYW5JbnN0YW5jZSh0aGlzLCAkRGF0YVZpZXcsIERBVEFfVklFVyk7XG4gICAgYW5JbnN0YW5jZShidWZmZXIsICRBcnJheUJ1ZmZlciwgREFUQV9WSUVXKTtcbiAgICB2YXIgYnVmZmVyTGVuZ3RoID0gYnVmZmVyWyRMRU5HVEhdO1xuICAgIHZhciBvZmZzZXQgPSB0b0ludGVnZXIoYnl0ZU9mZnNldCk7XG4gICAgaWYgKG9mZnNldCA8IDAgfHwgb2Zmc2V0ID4gYnVmZmVyTGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBvZmZzZXQhJyk7XG4gICAgYnl0ZUxlbmd0aCA9IGJ5dGVMZW5ndGggPT09IHVuZGVmaW5lZCA/IGJ1ZmZlckxlbmd0aCAtIG9mZnNldCA6IHRvTGVuZ3RoKGJ5dGVMZW5ndGgpO1xuICAgIGlmIChvZmZzZXQgKyBieXRlTGVuZ3RoID4gYnVmZmVyTGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgdGhpc1skQlVGRkVSXSA9IGJ1ZmZlcjtcbiAgICB0aGlzWyRPRkZTRVRdID0gb2Zmc2V0O1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gIGlmIChERVNDUklQVE9SUykge1xuICAgIGFkZEdldHRlcigkQXJyYXlCdWZmZXIsIEJZVEVfTEVOR1RILCAnX2wnKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCVUZGRVIsICdfYicpO1xuICAgIGFkZEdldHRlcigkRGF0YVZpZXcsIEJZVEVfTEVOR1RILCAnX2wnKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCWVRFX09GRlNFVCwgJ19vJyk7XG4gIH1cblxuICByZWRlZmluZUFsbCgkRGF0YVZpZXdbUFJPVE9UWVBFXSwge1xuICAgIGdldEludDg6IGZ1bmN0aW9uIGdldEludDgoYnl0ZU9mZnNldCkge1xuICAgICAgcmV0dXJuIGdldCh0aGlzLCAxLCBieXRlT2Zmc2V0KVswXSA8PCAyNCA+PiAyNDtcbiAgICB9LFxuICAgIGdldFVpbnQ4OiBmdW5jdGlvbiBnZXRVaW50OChieXRlT2Zmc2V0KSB7XG4gICAgICByZXR1cm4gZ2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQpWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MTY6IGZ1bmN0aW9uIGdldEludDE2KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHZhciBieXRlcyA9IGdldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pO1xuICAgICAgcmV0dXJuIChieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF0pIDw8IDE2ID4+IDE2O1xuICAgIH0sXG4gICAgZ2V0VWludDE2OiBmdW5jdGlvbiBnZXRVaW50MTYoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgdmFyIGJ5dGVzID0gZ2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSk7XG4gICAgICByZXR1cm4gYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdO1xuICAgIH0sXG4gICAgZ2V0SW50MzI6IGZ1bmN0aW9uIGdldEludDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpO1xuICAgIH0sXG4gICAgZ2V0VWludDMyOiBmdW5jdGlvbiBnZXRVaW50MzIoYnl0ZU9mZnNldCAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgcmV0dXJuIHVucGFja0kzMihnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSkgPj4+IDA7XG4gICAgfSxcbiAgICBnZXRGbG9hdDMyOiBmdW5jdGlvbiBnZXRGbG9hdDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCAyMywgNCk7XG4gICAgfSxcbiAgICBnZXRGbG9hdDY0OiBmdW5jdGlvbiBnZXRGbG9hdDY0KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJRUVFNzU0KGdldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pLCA1MiwgOCk7XG4gICAgfSxcbiAgICBzZXRJbnQ4OiBmdW5jdGlvbiBzZXRJbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRVaW50ODogZnVuY3Rpb24gc2V0VWludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgIHNldCh0aGlzLCAxLCBieXRlT2Zmc2V0LCBwYWNrSTgsIHZhbHVlKTtcbiAgICB9LFxuICAgIHNldEludDE2OiBmdW5jdGlvbiBzZXRJbnQxNihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDIsIGJ5dGVPZmZzZXQsIHBhY2tJMTYsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0VWludDE2OiBmdW5jdGlvbiBzZXRVaW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEludDMyOiBmdW5jdGlvbiBzZXRJbnQzMihieXRlT2Zmc2V0LCB2YWx1ZSAvKiAsIGxpdHRsZUVuZGlhbiAqLykge1xuICAgICAgc2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIHBhY2tJMzIsIHZhbHVlLCBhcmd1bWVudHNbMl0pO1xuICAgIH0sXG4gICAgc2V0VWludDMyOiBmdW5jdGlvbiBzZXRVaW50MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0MzI6IGZ1bmN0aW9uIHNldEZsb2F0MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrRjMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldEZsb2F0NjQ6IGZ1bmN0aW9uIHNldEZsb2F0NjQoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA4LCBieXRlT2Zmc2V0LCBwYWNrRjY0LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9XG4gIH0pO1xufSBlbHNlIHtcbiAgaWYgKCFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgJEFycmF5QnVmZmVyKDEpO1xuICB9KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoLTEpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICB9KSB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3ICRBcnJheUJ1ZmZlcigpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoMS41KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBuZXcgJEFycmF5QnVmZmVyKE5hTik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgcmV0dXJuICRBcnJheUJ1ZmZlci5uYW1lICE9IEFSUkFZX0JVRkZFUjtcbiAgfSkpIHtcbiAgICAkQXJyYXlCdWZmZXIgPSBmdW5jdGlvbiBBcnJheUJ1ZmZlcihsZW5ndGgpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhpcywgJEFycmF5QnVmZmVyKTtcbiAgICAgIHJldHVybiBuZXcgQmFzZUJ1ZmZlcih0b0luZGV4KGxlbmd0aCkpO1xuICAgIH07XG4gICAgdmFyIEFycmF5QnVmZmVyUHJvdG8gPSAkQXJyYXlCdWZmZXJbUFJPVE9UWVBFXSA9IEJhc2VCdWZmZXJbUFJPVE9UWVBFXTtcbiAgICBmb3IgKHZhciBrZXlzID0gZ09QTihCYXNlQnVmZmVyKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOykge1xuICAgICAgaWYgKCEoKGtleSA9IGtleXNbaisrXSkgaW4gJEFycmF5QnVmZmVyKSkgaGlkZSgkQXJyYXlCdWZmZXIsIGtleSwgQmFzZUJ1ZmZlcltrZXldKTtcbiAgICB9XG4gICAgaWYgKCFMSUJSQVJZKSBBcnJheUJ1ZmZlclByb3RvLmNvbnN0cnVjdG9yID0gJEFycmF5QnVmZmVyO1xuICB9XG4gIC8vIGlPUyBTYWZhcmkgNy54IGJ1Z1xuICB2YXIgdmlldyA9IG5ldyAkRGF0YVZpZXcobmV3ICRBcnJheUJ1ZmZlcigyKSk7XG4gIHZhciAkc2V0SW50OCA9ICREYXRhVmlld1tQUk9UT1RZUEVdLnNldEludDg7XG4gIHZpZXcuc2V0SW50OCgwLCAyMTQ3NDgzNjQ4KTtcbiAgdmlldy5zZXRJbnQ4KDEsIDIxNDc0ODM2NDkpO1xuICBpZiAodmlldy5nZXRJbnQ4KDApIHx8ICF2aWV3LmdldEludDgoMSkpIHJlZGVmaW5lQWxsKCREYXRhVmlld1tQUk9UT1RZUEVdLCB7XG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgJHNldEludDguY2FsbCh0aGlzLCBieXRlT2Zmc2V0LCB2YWx1ZSA8PCAyNCA+PiAyNCk7XG4gICAgfSxcbiAgICBzZXRVaW50ODogZnVuY3Rpb24gc2V0VWludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgICRzZXRJbnQ4LmNhbGwodGhpcywgYnl0ZU9mZnNldCwgdmFsdWUgPDwgMjQgPj4gMjQpO1xuICAgIH1cbiAgfSwgdHJ1ZSk7XG59XG5zZXRUb1N0cmluZ1RhZygkQXJyYXlCdWZmZXIsIEFSUkFZX0JVRkZFUik7XG5zZXRUb1N0cmluZ1RhZygkRGF0YVZpZXcsIERBVEFfVklFVyk7XG5oaWRlKCREYXRhVmlld1tQUk9UT1RZUEVdLCAkdHlwZWQuVklFVywgdHJ1ZSk7XG5leHBvcnRzW0FSUkFZX0JVRkZFUl0gPSAkQXJyYXlCdWZmZXI7XG5leHBvcnRzW0RBVEFfVklFV10gPSAkRGF0YVZpZXc7XG4iLCIvLyBJbXBvcnRzXG52YXIgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKTtcbmV4cG9ydHMgPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiFcXG4gKiBCb290c3RyYXAgdjQuNS4yIChodHRwczovL2dldGJvb3RzdHJhcC5jb20vKVxcbiAqIENvcHlyaWdodCAyMDExLTIwMjAgVGhlIEJvb3RzdHJhcCBBdXRob3JzXFxuICogQ29weXJpZ2h0IDIwMTEtMjAyMCBUd2l0dGVyLCBJbmMuXFxuICogTGljZW5zZWQgdW5kZXIgTUlUIChodHRwczovL2dpdGh1Yi5jb20vdHdicy9ib290c3RyYXAvYmxvYi9tYWluL0xJQ0VOU0UpXFxuICovOnJvb3R7LS1ibHVlOiMwMDdiZmY7LS1pbmRpZ286IzY2MTBmMjstLXB1cnBsZTojNmY0MmMxOy0tcGluazojZTgzZThjOy0tcmVkOiNkYzM1NDU7LS1vcmFuZ2U6I2ZkN2UxNDstLXllbGxvdzojZmZjMTA3Oy0tZ3JlZW46IzI4YTc0NTstLXRlYWw6IzIwYzk5NzstLWN5YW46IzE3YTJiODstLXdoaXRlOiNmZmY7LS1ncmF5OiM2Yzc1N2Q7LS1ncmF5LWRhcms6IzM0M2E0MDstLXByaW1hcnk6IzAwN2JmZjstLXNlY29uZGFyeTojNmM3NTdkOy0tc3VjY2VzczojMjhhNzQ1Oy0taW5mbzojMTdhMmI4Oy0td2FybmluZzojZmZjMTA3Oy0tZGFuZ2VyOiNkYzM1NDU7LS1saWdodDojZjhmOWZhOy0tZGFyazojMzQzYTQwOy0tYnJlYWtwb2ludC14czowOy0tYnJlYWtwb2ludC1zbTo1NzZweDstLWJyZWFrcG9pbnQtbWQ6NzY4cHg7LS1icmVha3BvaW50LWxnOjk5MnB4Oy0tYnJlYWtwb2ludC14bDoxMjAwcHg7LS1mb250LWZhbWlseS1zYW5zLXNlcmlmOi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsXFxcIk5vdG8gU2Fuc1xcXCIsc2Fucy1zZXJpZixcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLFxcXCJTZWdvZSBVSSBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiOy0tZm9udC1mYW1pbHktbW9ub3NwYWNlOlNGTW9uby1SZWd1bGFyLE1lbmxvLE1vbmFjbyxDb25zb2xhcyxcXFwiTGliZXJhdGlvbiBNb25vXFxcIixcXFwiQ291cmllciBOZXdcXFwiLG1vbm9zcGFjZX0qLDo6YWZ0ZXIsOjpiZWZvcmV7Ym94LXNpemluZzpib3JkZXItYm94fWh0bWx7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjtsaW5lLWhlaWdodDoxLjE1Oy13ZWJraXQtdGV4dC1zaXplLWFkanVzdDoxMDAlOy13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjp0cmFuc3BhcmVudH1hcnRpY2xlLGFzaWRlLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG1haW4sbmF2LHNlY3Rpb257ZGlzcGxheTpibG9ja31ib2R5e21hcmdpbjowO2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsXFxcIk5vdG8gU2Fuc1xcXCIsc2Fucy1zZXJpZixcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLFxcXCJTZWdvZSBVSSBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzIxMjUyOTt0ZXh0LWFsaWduOmxlZnQ7YmFja2dyb3VuZC1jb2xvcjojZmZmfVt0YWJpbmRleD1cXFwiLTFcXFwiXTpmb2N1czpub3QoOmZvY3VzLXZpc2libGUpe291dGxpbmU6MCFpbXBvcnRhbnR9aHJ7Ym94LXNpemluZzpjb250ZW50LWJveDtoZWlnaHQ6MDtvdmVyZmxvdzp2aXNpYmxlfWgxLGgyLGgzLGg0LGg1LGg2e21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOi41cmVtfXB7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206MXJlbX1hYmJyW2RhdGEtb3JpZ2luYWwtdGl0bGVdLGFiYnJbdGl0bGVde3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmU7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIGRvdHRlZDtjdXJzb3I6aGVscDtib3JkZXItYm90dG9tOjA7LXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6bm9uZTt0ZXh0LWRlY29yYXRpb24tc2tpcC1pbms6bm9uZX1hZGRyZXNze21hcmdpbi1ib3R0b206MXJlbTtmb250LXN0eWxlOm5vcm1hbDtsaW5lLWhlaWdodDppbmhlcml0fWRsLG9sLHVse21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjFyZW19b2wgb2wsb2wgdWwsdWwgb2wsdWwgdWx7bWFyZ2luLWJvdHRvbTowfWR0e2ZvbnQtd2VpZ2h0OjcwMH1kZHttYXJnaW4tYm90dG9tOi41cmVtO21hcmdpbi1sZWZ0OjB9YmxvY2txdW90ZXttYXJnaW46MCAwIDFyZW19YixzdHJvbmd7Zm9udC13ZWlnaHQ6Ym9sZGVyfXNtYWxse2ZvbnQtc2l6ZTo4MCV9c3ViLHN1cHtwb3NpdGlvbjpyZWxhdGl2ZTtmb250LXNpemU6NzUlO2xpbmUtaGVpZ2h0OjA7dmVydGljYWwtYWxpZ246YmFzZWxpbmV9c3Vie2JvdHRvbTotLjI1ZW19c3Vwe3RvcDotLjVlbX1he2NvbG9yOiMwMDdiZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH1hOmhvdmVye2NvbG9yOiMwMDU2YjM7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX1hOm5vdChbaHJlZl0pOm5vdChbY2xhc3NdKXtjb2xvcjppbmhlcml0O3RleHQtZGVjb3JhdGlvbjpub25lfWE6bm90KFtocmVmXSk6bm90KFtjbGFzc10pOmhvdmVye2NvbG9yOmluaGVyaXQ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Y29kZSxrYmQscHJlLHNhbXB7Zm9udC1mYW1pbHk6U0ZNb25vLVJlZ3VsYXIsTWVubG8sTW9uYWNvLENvbnNvbGFzLFxcXCJMaWJlcmF0aW9uIE1vbm9cXFwiLFxcXCJDb3VyaWVyIE5ld1xcXCIsbW9ub3NwYWNlO2ZvbnQtc2l6ZToxZW19cHJle21hcmdpbi10b3A6MDttYXJnaW4tYm90dG9tOjFyZW07b3ZlcmZsb3c6YXV0bzstbXMtb3ZlcmZsb3ctc3R5bGU6c2Nyb2xsYmFyfWZpZ3VyZXttYXJnaW46MCAwIDFyZW19aW1ne3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtib3JkZXItc3R5bGU6bm9uZX1zdmd7b3ZlcmZsb3c6aGlkZGVuO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX10YWJsZXtib3JkZXItY29sbGFwc2U6Y29sbGFwc2V9Y2FwdGlvbntwYWRkaW5nLXRvcDouNzVyZW07cGFkZGluZy1ib3R0b206Ljc1cmVtO2NvbG9yOiM2Yzc1N2Q7dGV4dC1hbGlnbjpsZWZ0O2NhcHRpb24tc2lkZTpib3R0b219dGh7dGV4dC1hbGlnbjppbmhlcml0fWxhYmVse2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1ib3R0b206LjVyZW19YnV0dG9ue2JvcmRlci1yYWRpdXM6MH1idXR0b246Zm9jdXN7b3V0bGluZToxcHggZG90dGVkO291dGxpbmU6NXB4IGF1dG8gLXdlYmtpdC1mb2N1cy1yaW5nLWNvbG9yfWJ1dHRvbixpbnB1dCxvcHRncm91cCxzZWxlY3QsdGV4dGFyZWF7bWFyZ2luOjA7Zm9udC1mYW1pbHk6aW5oZXJpdDtmb250LXNpemU6aW5oZXJpdDtsaW5lLWhlaWdodDppbmhlcml0fWJ1dHRvbixpbnB1dHtvdmVyZmxvdzp2aXNpYmxlfWJ1dHRvbixzZWxlY3R7dGV4dC10cmFuc2Zvcm06bm9uZX1bcm9sZT1idXR0b25de2N1cnNvcjpwb2ludGVyfXNlbGVjdHt3b3JkLXdyYXA6bm9ybWFsfVt0eXBlPWJ1dHRvbl0sW3R5cGU9cmVzZXRdLFt0eXBlPXN1Ym1pdF0sYnV0dG9uey13ZWJraXQtYXBwZWFyYW5jZTpidXR0b259W3R5cGU9YnV0dG9uXTpub3QoOmRpc2FibGVkKSxbdHlwZT1yZXNldF06bm90KDpkaXNhYmxlZCksW3R5cGU9c3VibWl0XTpub3QoOmRpc2FibGVkKSxidXR0b246bm90KDpkaXNhYmxlZCl7Y3Vyc29yOnBvaW50ZXJ9W3R5cGU9YnV0dG9uXTo6LW1vei1mb2N1cy1pbm5lcixbdHlwZT1yZXNldF06Oi1tb3otZm9jdXMtaW5uZXIsW3R5cGU9c3VibWl0XTo6LW1vei1mb2N1cy1pbm5lcixidXR0b246Oi1tb3otZm9jdXMtaW5uZXJ7cGFkZGluZzowO2JvcmRlci1zdHlsZTpub25lfWlucHV0W3R5cGU9Y2hlY2tib3hdLGlucHV0W3R5cGU9cmFkaW9de2JveC1zaXppbmc6Ym9yZGVyLWJveDtwYWRkaW5nOjB9dGV4dGFyZWF7b3ZlcmZsb3c6YXV0bztyZXNpemU6dmVydGljYWx9ZmllbGRzZXR7bWluLXdpZHRoOjA7cGFkZGluZzowO21hcmdpbjowO2JvcmRlcjowfWxlZ2VuZHtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjEwMCU7cGFkZGluZzowO21hcmdpbi1ib3R0b206LjVyZW07Zm9udC1zaXplOjEuNXJlbTtsaW5lLWhlaWdodDppbmhlcml0O2NvbG9yOmluaGVyaXQ7d2hpdGUtc3BhY2U6bm9ybWFsfXByb2dyZXNze3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lfVt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sW3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbntoZWlnaHQ6YXV0b31bdHlwZT1zZWFyY2hde291dGxpbmUtb2Zmc2V0Oi0ycHg7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmV9W3R5cGU9c2VhcmNoXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbnstd2Via2l0LWFwcGVhcmFuY2U6bm9uZX06Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9ue2ZvbnQ6aW5oZXJpdDstd2Via2l0LWFwcGVhcmFuY2U6YnV0dG9ufW91dHB1dHtkaXNwbGF5OmlubGluZS1ibG9ja31zdW1tYXJ5e2Rpc3BsYXk6bGlzdC1pdGVtO2N1cnNvcjpwb2ludGVyfXRlbXBsYXRle2Rpc3BsYXk6bm9uZX1baGlkZGVuXXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5oMSwuaDIsLmgzLC5oNCwuaDUsLmg2LGgxLGgyLGgzLGg0LGg1LGg2e21hcmdpbi1ib3R0b206LjVyZW07Zm9udC13ZWlnaHQ6NTAwO2xpbmUtaGVpZ2h0OjEuMn0uaDEsaDF7Zm9udC1zaXplOjIuNXJlbX0uaDIsaDJ7Zm9udC1zaXplOjJyZW19LmgzLGgze2ZvbnQtc2l6ZToxLjc1cmVtfS5oNCxoNHtmb250LXNpemU6MS41cmVtfS5oNSxoNXtmb250LXNpemU6MS4yNXJlbX0uaDYsaDZ7Zm9udC1zaXplOjFyZW19LmxlYWR7Zm9udC1zaXplOjEuMjVyZW07Zm9udC13ZWlnaHQ6MzAwfS5kaXNwbGF5LTF7Zm9udC1zaXplOjZyZW07Zm9udC13ZWlnaHQ6MzAwO2xpbmUtaGVpZ2h0OjEuMn0uZGlzcGxheS0ye2ZvbnQtc2l6ZTo1LjVyZW07Zm9udC13ZWlnaHQ6MzAwO2xpbmUtaGVpZ2h0OjEuMn0uZGlzcGxheS0ze2ZvbnQtc2l6ZTo0LjVyZW07Zm9udC13ZWlnaHQ6MzAwO2xpbmUtaGVpZ2h0OjEuMn0uZGlzcGxheS00e2ZvbnQtc2l6ZTozLjVyZW07Zm9udC13ZWlnaHQ6MzAwO2xpbmUtaGVpZ2h0OjEuMn1ocnttYXJnaW4tdG9wOjFyZW07bWFyZ2luLWJvdHRvbToxcmVtO2JvcmRlcjowO2JvcmRlci10b3A6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEpfS5zbWFsbCxzbWFsbHtmb250LXNpemU6ODAlO2ZvbnQtd2VpZ2h0OjQwMH0ubWFyayxtYXJre3BhZGRpbmc6LjJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmY2Y4ZTN9Lmxpc3QtdW5zdHlsZWR7cGFkZGluZy1sZWZ0OjA7bGlzdC1zdHlsZTpub25lfS5saXN0LWlubGluZXtwYWRkaW5nLWxlZnQ6MDtsaXN0LXN0eWxlOm5vbmV9Lmxpc3QtaW5saW5lLWl0ZW17ZGlzcGxheTppbmxpbmUtYmxvY2t9Lmxpc3QtaW5saW5lLWl0ZW06bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tcmlnaHQ6LjVyZW19LmluaXRpYWxpc217Zm9udC1zaXplOjkwJTt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9LmJsb2NrcXVvdGV7bWFyZ2luLWJvdHRvbToxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtfS5ibG9ja3F1b3RlLWZvb3RlcntkaXNwbGF5OmJsb2NrO2ZvbnQtc2l6ZTo4MCU7Y29sb3I6IzZjNzU3ZH0uYmxvY2txdW90ZS1mb290ZXI6OmJlZm9yZXtjb250ZW50OlxcXCJcXFxcMjAxNFxcXFwwMEEwXFxcIn0uaW1nLWZsdWlke21heC13aWR0aDoxMDAlO2hlaWdodDphdXRvfS5pbWctdGh1bWJuYWlse3BhZGRpbmc6LjI1cmVtO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MXB4IHNvbGlkICNkZWUyZTY7Ym9yZGVyLXJhZGl1czouMjVyZW07bWF4LXdpZHRoOjEwMCU7aGVpZ2h0OmF1dG99LmZpZ3VyZXtkaXNwbGF5OmlubGluZS1ibG9ja30uZmlndXJlLWltZ3ttYXJnaW4tYm90dG9tOi41cmVtO2xpbmUtaGVpZ2h0OjF9LmZpZ3VyZS1jYXB0aW9ue2ZvbnQtc2l6ZTo5MCU7Y29sb3I6IzZjNzU3ZH1jb2Rle2ZvbnQtc2l6ZTo4Ny41JTtjb2xvcjojZTgzZThjO3dvcmQtd3JhcDpicmVhay13b3JkfWE+Y29kZXtjb2xvcjppbmhlcml0fWtiZHtwYWRkaW5nOi4ycmVtIC40cmVtO2ZvbnQtc2l6ZTo4Ny41JTtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzIxMjUyOTtib3JkZXItcmFkaXVzOi4ycmVtfWtiZCBrYmR7cGFkZGluZzowO2ZvbnQtc2l6ZToxMDAlO2ZvbnQtd2VpZ2h0OjcwMH1wcmV7ZGlzcGxheTpibG9jaztmb250LXNpemU6ODcuNSU7Y29sb3I6IzIxMjUyOX1wcmUgY29kZXtmb250LXNpemU6aW5oZXJpdDtjb2xvcjppbmhlcml0O3dvcmQtYnJlYWs6bm9ybWFsfS5wcmUtc2Nyb2xsYWJsZXttYXgtaGVpZ2h0OjM0MHB4O292ZXJmbG93LXk6c2Nyb2xsfS5jb250YWluZXIsLmNvbnRhaW5lci1mbHVpZCwuY29udGFpbmVyLWxnLC5jb250YWluZXItbWQsLmNvbnRhaW5lci1zbSwuY29udGFpbmVyLXhse3dpZHRoOjEwMCU7cGFkZGluZy1yaWdodDoxNXB4O3BhZGRpbmctbGVmdDoxNXB4O21hcmdpbi1yaWdodDphdXRvO21hcmdpbi1sZWZ0OmF1dG99QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5jb250YWluZXIsLmNvbnRhaW5lci1zbXttYXgtd2lkdGg6NTQwcHh9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsuY29udGFpbmVyLC5jb250YWluZXItbWQsLmNvbnRhaW5lci1zbXttYXgtd2lkdGg6NzIwcHh9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsuY29udGFpbmVyLC5jb250YWluZXItbGcsLmNvbnRhaW5lci1tZCwuY29udGFpbmVyLXNte21heC13aWR0aDo5NjBweH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsuY29udGFpbmVyLC5jb250YWluZXItbGcsLmNvbnRhaW5lci1tZCwuY29udGFpbmVyLXNtLC5jb250YWluZXIteGx7bWF4LXdpZHRoOjExNDBweH19LnJvd3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7bWFyZ2luLXJpZ2h0Oi0xNXB4O21hcmdpbi1sZWZ0Oi0xNXB4fS5uby1ndXR0ZXJze21hcmdpbi1yaWdodDowO21hcmdpbi1sZWZ0OjB9Lm5vLWd1dHRlcnM+LmNvbCwubm8tZ3V0dGVycz5bY2xhc3MqPWNvbC1de3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH0uY29sLC5jb2wtMSwuY29sLTEwLC5jb2wtMTEsLmNvbC0xMiwuY29sLTIsLmNvbC0zLC5jb2wtNCwuY29sLTUsLmNvbC02LC5jb2wtNywuY29sLTgsLmNvbC05LC5jb2wtYXV0bywuY29sLWxnLC5jb2wtbGctMSwuY29sLWxnLTEwLC5jb2wtbGctMTEsLmNvbC1sZy0xMiwuY29sLWxnLTIsLmNvbC1sZy0zLC5jb2wtbGctNCwuY29sLWxnLTUsLmNvbC1sZy02LC5jb2wtbGctNywuY29sLWxnLTgsLmNvbC1sZy05LC5jb2wtbGctYXV0bywuY29sLW1kLC5jb2wtbWQtMSwuY29sLW1kLTEwLC5jb2wtbWQtMTEsLmNvbC1tZC0xMiwuY29sLW1kLTIsLmNvbC1tZC0zLC5jb2wtbWQtNCwuY29sLW1kLTUsLmNvbC1tZC02LC5jb2wtbWQtNywuY29sLW1kLTgsLmNvbC1tZC05LC5jb2wtbWQtYXV0bywuY29sLXNtLC5jb2wtc20tMSwuY29sLXNtLTEwLC5jb2wtc20tMTEsLmNvbC1zbS0xMiwuY29sLXNtLTIsLmNvbC1zbS0zLC5jb2wtc20tNCwuY29sLXNtLTUsLmNvbC1zbS02LC5jb2wtc20tNywuY29sLXNtLTgsLmNvbC1zbS05LC5jb2wtc20tYXV0bywuY29sLXhsLC5jb2wteGwtMSwuY29sLXhsLTEwLC5jb2wteGwtMTEsLmNvbC14bC0xMiwuY29sLXhsLTIsLmNvbC14bC0zLC5jb2wteGwtNCwuY29sLXhsLTUsLmNvbC14bC02LC5jb2wteGwtNywuY29sLXhsLTgsLmNvbC14bC05LC5jb2wteGwtYXV0b3twb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO3BhZGRpbmctcmlnaHQ6MTVweDtwYWRkaW5nLWxlZnQ6MTVweH0uY29sey1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjA7ZmxleC1iYXNpczowOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLTE+KnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5yb3ctY29scy0yPip7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0ucm93LWNvbHMtMz4qey1tcy1mbGV4OjAgMCAzMy4zMzMzMzMlO2ZsZXg6MCAwIDMzLjMzMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzMyV9LnJvdy1jb2xzLTQ+KnstbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5yb3ctY29scy01Pip7LW1zLWZsZXg6MCAwIDIwJTtmbGV4OjAgMCAyMCU7bWF4LXdpZHRoOjIwJX0ucm93LWNvbHMtNj4qey1tcy1mbGV4OjAgMCAxNi42NjY2NjclO2ZsZXg6MCAwIDE2LjY2NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY2NyV9LmNvbC1hdXRvey1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6YXV0bzttYXgtd2lkdGg6MTAwJX0uY29sLTF7LW1zLWZsZXg6MCAwIDguMzMzMzMzJTtmbGV4OjAgMCA4LjMzMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMzJX0uY29sLTJ7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLTN7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0uY29sLTR7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0uY29sLTV7LW1zLWZsZXg6MCAwIDQxLjY2NjY2NyU7ZmxleDowIDAgNDEuNjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjY3JX0uY29sLTZ7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0uY29sLTd7LW1zLWZsZXg6MCAwIDU4LjMzMzMzMyU7ZmxleDowIDAgNTguMzMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMzJX0uY29sLTh7LW1zLWZsZXg6MCAwIDY2LjY2NjY2NyU7ZmxleDowIDAgNjYuNjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjY3JX0uY29sLTl7LW1zLWZsZXg6MCAwIDc1JTtmbGV4OjAgMCA3NSU7bWF4LXdpZHRoOjc1JX0uY29sLTEwey1tcy1mbGV4OjAgMCA4My4zMzMzMzMlO2ZsZXg6MCAwIDgzLjMzMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzMyV9LmNvbC0xMXstbXMtZmxleDowIDAgOTEuNjY2NjY3JTtmbGV4OjAgMCA5MS42NjY2NjclO21heC13aWR0aDo5MS42NjY2NjclfS5jb2wtMTJ7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ub3JkZXItZmlyc3R7LW1zLWZsZXgtb3JkZXI6LTE7b3JkZXI6LTF9Lm9yZGVyLWxhc3R7LW1zLWZsZXgtb3JkZXI6MTM7b3JkZXI6MTN9Lm9yZGVyLTB7LW1zLWZsZXgtb3JkZXI6MDtvcmRlcjowfS5vcmRlci0xey1tcy1mbGV4LW9yZGVyOjE7b3JkZXI6MX0ub3JkZXItMnstbXMtZmxleC1vcmRlcjoyO29yZGVyOjJ9Lm9yZGVyLTN7LW1zLWZsZXgtb3JkZXI6MztvcmRlcjozfS5vcmRlci00ey1tcy1mbGV4LW9yZGVyOjQ7b3JkZXI6NH0ub3JkZXItNXstbXMtZmxleC1vcmRlcjo1O29yZGVyOjV9Lm9yZGVyLTZ7LW1zLWZsZXgtb3JkZXI6NjtvcmRlcjo2fS5vcmRlci03ey1tcy1mbGV4LW9yZGVyOjc7b3JkZXI6N30ub3JkZXItOHstbXMtZmxleC1vcmRlcjo4O29yZGVyOjh9Lm9yZGVyLTl7LW1zLWZsZXgtb3JkZXI6OTtvcmRlcjo5fS5vcmRlci0xMHstbXMtZmxleC1vcmRlcjoxMDtvcmRlcjoxMH0ub3JkZXItMTF7LW1zLWZsZXgtb3JkZXI6MTE7b3JkZXI6MTF9Lm9yZGVyLTEyey1tcy1mbGV4LW9yZGVyOjEyO29yZGVyOjEyfS5vZmZzZXQtMXttYXJnaW4tbGVmdDo4LjMzMzMzMyV9Lm9mZnNldC0ye21hcmdpbi1sZWZ0OjE2LjY2NjY2NyV9Lm9mZnNldC0ze21hcmdpbi1sZWZ0OjI1JX0ub2Zmc2V0LTR7bWFyZ2luLWxlZnQ6MzMuMzMzMzMzJX0ub2Zmc2V0LTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjY3JX0ub2Zmc2V0LTZ7bWFyZ2luLWxlZnQ6NTAlfS5vZmZzZXQtN3ttYXJnaW4tbGVmdDo1OC4zMzMzMzMlfS5vZmZzZXQtOHttYXJnaW4tbGVmdDo2Ni42NjY2NjclfS5vZmZzZXQtOXttYXJnaW4tbGVmdDo3NSV9Lm9mZnNldC0xMHttYXJnaW4tbGVmdDo4My4zMzMzMzMlfS5vZmZzZXQtMTF7bWFyZ2luLWxlZnQ6OTEuNjY2NjY3JX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmNvbC1zbXstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTowO2ZsZXgtYmFzaXM6MDstbXMtZmxleC1wb3NpdGl2ZToxO2ZsZXgtZ3JvdzoxO21heC13aWR0aDoxMDAlfS5yb3ctY29scy1zbS0xPip7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ucm93LWNvbHMtc20tMj4qey1tcy1mbGV4OjAgMCA1MCU7ZmxleDowIDAgNTAlO21heC13aWR0aDo1MCV9LnJvdy1jb2xzLXNtLTM+KnstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5yb3ctY29scy1zbS00Pip7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0ucm93LWNvbHMtc20tNT4qey1tcy1mbGV4OjAgMCAyMCU7ZmxleDowIDAgMjAlO21heC13aWR0aDoyMCV9LnJvdy1jb2xzLXNtLTY+KnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wtc20tYXV0b3stbXMtZmxleDowIDAgYXV0bztmbGV4OjAgMCBhdXRvO3dpZHRoOmF1dG87bWF4LXdpZHRoOjEwMCV9LmNvbC1zbS0xey1tcy1mbGV4OjAgMCA4LjMzMzMzMyU7ZmxleDowIDAgOC4zMzMzMzMlO21heC13aWR0aDo4LjMzMzMzMyV9LmNvbC1zbS0yey1tcy1mbGV4OjAgMCAxNi42NjY2NjclO2ZsZXg6MCAwIDE2LjY2NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY2NyV9LmNvbC1zbS0zey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LmNvbC1zbS00ey1tcy1mbGV4OjAgMCAzMy4zMzMzMzMlO2ZsZXg6MCAwIDMzLjMzMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzMyV9LmNvbC1zbS01ey1tcy1mbGV4OjAgMCA0MS42NjY2NjclO2ZsZXg6MCAwIDQxLjY2NjY2NyU7bWF4LXdpZHRoOjQxLjY2NjY2NyV9LmNvbC1zbS02ey1tcy1mbGV4OjAgMCA1MCU7ZmxleDowIDAgNTAlO21heC13aWR0aDo1MCV9LmNvbC1zbS03ey1tcy1mbGV4OjAgMCA1OC4zMzMzMzMlO2ZsZXg6MCAwIDU4LjMzMzMzMyU7bWF4LXdpZHRoOjU4LjMzMzMzMyV9LmNvbC1zbS04ey1tcy1mbGV4OjAgMCA2Ni42NjY2NjclO2ZsZXg6MCAwIDY2LjY2NjY2NyU7bWF4LXdpZHRoOjY2LjY2NjY2NyV9LmNvbC1zbS05ey1tcy1mbGV4OjAgMCA3NSU7ZmxleDowIDAgNzUlO21heC13aWR0aDo3NSV9LmNvbC1zbS0xMHstbXMtZmxleDowIDAgODMuMzMzMzMzJTtmbGV4OjAgMCA4My4zMzMzMzMlO21heC13aWR0aDo4My4zMzMzMzMlfS5jb2wtc20tMTF7LW1zLWZsZXg6MCAwIDkxLjY2NjY2NyU7ZmxleDowIDAgOTEuNjY2NjY3JTttYXgtd2lkdGg6OTEuNjY2NjY3JX0uY29sLXNtLTEyey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9Lm9yZGVyLXNtLWZpcnN0ey1tcy1mbGV4LW9yZGVyOi0xO29yZGVyOi0xfS5vcmRlci1zbS1sYXN0ey1tcy1mbGV4LW9yZGVyOjEzO29yZGVyOjEzfS5vcmRlci1zbS0wey1tcy1mbGV4LW9yZGVyOjA7b3JkZXI6MH0ub3JkZXItc20tMXstbXMtZmxleC1vcmRlcjoxO29yZGVyOjF9Lm9yZGVyLXNtLTJ7LW1zLWZsZXgtb3JkZXI6MjtvcmRlcjoyfS5vcmRlci1zbS0zey1tcy1mbGV4LW9yZGVyOjM7b3JkZXI6M30ub3JkZXItc20tNHstbXMtZmxleC1vcmRlcjo0O29yZGVyOjR9Lm9yZGVyLXNtLTV7LW1zLWZsZXgtb3JkZXI6NTtvcmRlcjo1fS5vcmRlci1zbS02ey1tcy1mbGV4LW9yZGVyOjY7b3JkZXI6Nn0ub3JkZXItc20tN3stbXMtZmxleC1vcmRlcjo3O29yZGVyOjd9Lm9yZGVyLXNtLTh7LW1zLWZsZXgtb3JkZXI6ODtvcmRlcjo4fS5vcmRlci1zbS05ey1tcy1mbGV4LW9yZGVyOjk7b3JkZXI6OX0ub3JkZXItc20tMTB7LW1zLWZsZXgtb3JkZXI6MTA7b3JkZXI6MTB9Lm9yZGVyLXNtLTExey1tcy1mbGV4LW9yZGVyOjExO29yZGVyOjExfS5vcmRlci1zbS0xMnstbXMtZmxleC1vcmRlcjoxMjtvcmRlcjoxMn0ub2Zmc2V0LXNtLTB7bWFyZ2luLWxlZnQ6MH0ub2Zmc2V0LXNtLTF7bWFyZ2luLWxlZnQ6OC4zMzMzMzMlfS5vZmZzZXQtc20tMnttYXJnaW4tbGVmdDoxNi42NjY2NjclfS5vZmZzZXQtc20tM3ttYXJnaW4tbGVmdDoyNSV9Lm9mZnNldC1zbS00e21hcmdpbi1sZWZ0OjMzLjMzMzMzMyV9Lm9mZnNldC1zbS01e21hcmdpbi1sZWZ0OjQxLjY2NjY2NyV9Lm9mZnNldC1zbS02e21hcmdpbi1sZWZ0OjUwJX0ub2Zmc2V0LXNtLTd7bWFyZ2luLWxlZnQ6NTguMzMzMzMzJX0ub2Zmc2V0LXNtLTh7bWFyZ2luLWxlZnQ6NjYuNjY2NjY3JX0ub2Zmc2V0LXNtLTl7bWFyZ2luLWxlZnQ6NzUlfS5vZmZzZXQtc20tMTB7bWFyZ2luLWxlZnQ6ODMuMzMzMzMzJX0ub2Zmc2V0LXNtLTExe21hcmdpbi1sZWZ0OjkxLjY2NjY2NyV9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsuY29sLW1key1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjA7ZmxleC1iYXNpczowOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLW1kLTE+KnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5yb3ctY29scy1tZC0yPip7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0ucm93LWNvbHMtbWQtMz4qey1tcy1mbGV4OjAgMCAzMy4zMzMzMzMlO2ZsZXg6MCAwIDMzLjMzMzMzMyU7bWF4LXdpZHRoOjMzLjMzMzMzMyV9LnJvdy1jb2xzLW1kLTQ+KnstbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5yb3ctY29scy1tZC01Pip7LW1zLWZsZXg6MCAwIDIwJTtmbGV4OjAgMCAyMCU7bWF4LXdpZHRoOjIwJX0ucm93LWNvbHMtbWQtNj4qey1tcy1mbGV4OjAgMCAxNi42NjY2NjclO2ZsZXg6MCAwIDE2LjY2NjY2NyU7bWF4LXdpZHRoOjE2LjY2NjY2NyV9LmNvbC1tZC1hdXRvey1tcy1mbGV4OjAgMCBhdXRvO2ZsZXg6MCAwIGF1dG87d2lkdGg6YXV0bzttYXgtd2lkdGg6MTAwJX0uY29sLW1kLTF7LW1zLWZsZXg6MCAwIDguMzMzMzMzJTtmbGV4OjAgMCA4LjMzMzMzMyU7bWF4LXdpZHRoOjguMzMzMzMzJX0uY29sLW1kLTJ7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLW1kLTN7LW1zLWZsZXg6MCAwIDI1JTtmbGV4OjAgMCAyNSU7bWF4LXdpZHRoOjI1JX0uY29sLW1kLTR7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0uY29sLW1kLTV7LW1zLWZsZXg6MCAwIDQxLjY2NjY2NyU7ZmxleDowIDAgNDEuNjY2NjY3JTttYXgtd2lkdGg6NDEuNjY2NjY3JX0uY29sLW1kLTZ7LW1zLWZsZXg6MCAwIDUwJTtmbGV4OjAgMCA1MCU7bWF4LXdpZHRoOjUwJX0uY29sLW1kLTd7LW1zLWZsZXg6MCAwIDU4LjMzMzMzMyU7ZmxleDowIDAgNTguMzMzMzMzJTttYXgtd2lkdGg6NTguMzMzMzMzJX0uY29sLW1kLTh7LW1zLWZsZXg6MCAwIDY2LjY2NjY2NyU7ZmxleDowIDAgNjYuNjY2NjY3JTttYXgtd2lkdGg6NjYuNjY2NjY3JX0uY29sLW1kLTl7LW1zLWZsZXg6MCAwIDc1JTtmbGV4OjAgMCA3NSU7bWF4LXdpZHRoOjc1JX0uY29sLW1kLTEwey1tcy1mbGV4OjAgMCA4My4zMzMzMzMlO2ZsZXg6MCAwIDgzLjMzMzMzMyU7bWF4LXdpZHRoOjgzLjMzMzMzMyV9LmNvbC1tZC0xMXstbXMtZmxleDowIDAgOTEuNjY2NjY3JTtmbGV4OjAgMCA5MS42NjY2NjclO21heC13aWR0aDo5MS42NjY2NjclfS5jb2wtbWQtMTJ7LW1zLWZsZXg6MCAwIDEwMCU7ZmxleDowIDAgMTAwJTttYXgtd2lkdGg6MTAwJX0ub3JkZXItbWQtZmlyc3R7LW1zLWZsZXgtb3JkZXI6LTE7b3JkZXI6LTF9Lm9yZGVyLW1kLWxhc3R7LW1zLWZsZXgtb3JkZXI6MTM7b3JkZXI6MTN9Lm9yZGVyLW1kLTB7LW1zLWZsZXgtb3JkZXI6MDtvcmRlcjowfS5vcmRlci1tZC0xey1tcy1mbGV4LW9yZGVyOjE7b3JkZXI6MX0ub3JkZXItbWQtMnstbXMtZmxleC1vcmRlcjoyO29yZGVyOjJ9Lm9yZGVyLW1kLTN7LW1zLWZsZXgtb3JkZXI6MztvcmRlcjozfS5vcmRlci1tZC00ey1tcy1mbGV4LW9yZGVyOjQ7b3JkZXI6NH0ub3JkZXItbWQtNXstbXMtZmxleC1vcmRlcjo1O29yZGVyOjV9Lm9yZGVyLW1kLTZ7LW1zLWZsZXgtb3JkZXI6NjtvcmRlcjo2fS5vcmRlci1tZC03ey1tcy1mbGV4LW9yZGVyOjc7b3JkZXI6N30ub3JkZXItbWQtOHstbXMtZmxleC1vcmRlcjo4O29yZGVyOjh9Lm9yZGVyLW1kLTl7LW1zLWZsZXgtb3JkZXI6OTtvcmRlcjo5fS5vcmRlci1tZC0xMHstbXMtZmxleC1vcmRlcjoxMDtvcmRlcjoxMH0ub3JkZXItbWQtMTF7LW1zLWZsZXgtb3JkZXI6MTE7b3JkZXI6MTF9Lm9yZGVyLW1kLTEyey1tcy1mbGV4LW9yZGVyOjEyO29yZGVyOjEyfS5vZmZzZXQtbWQtMHttYXJnaW4tbGVmdDowfS5vZmZzZXQtbWQtMXttYXJnaW4tbGVmdDo4LjMzMzMzMyV9Lm9mZnNldC1tZC0ye21hcmdpbi1sZWZ0OjE2LjY2NjY2NyV9Lm9mZnNldC1tZC0ze21hcmdpbi1sZWZ0OjI1JX0ub2Zmc2V0LW1kLTR7bWFyZ2luLWxlZnQ6MzMuMzMzMzMzJX0ub2Zmc2V0LW1kLTV7bWFyZ2luLWxlZnQ6NDEuNjY2NjY3JX0ub2Zmc2V0LW1kLTZ7bWFyZ2luLWxlZnQ6NTAlfS5vZmZzZXQtbWQtN3ttYXJnaW4tbGVmdDo1OC4zMzMzMzMlfS5vZmZzZXQtbWQtOHttYXJnaW4tbGVmdDo2Ni42NjY2NjclfS5vZmZzZXQtbWQtOXttYXJnaW4tbGVmdDo3NSV9Lm9mZnNldC1tZC0xMHttYXJnaW4tbGVmdDo4My4zMzMzMzMlfS5vZmZzZXQtbWQtMTF7bWFyZ2luLWxlZnQ6OTEuNjY2NjY3JX19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5jb2wtbGd7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0ucm93LWNvbHMtbGctMT4qey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLWxnLTI+KnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5yb3ctY29scy1sZy0zPip7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0ucm93LWNvbHMtbGctND4qey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LnJvdy1jb2xzLWxnLTU+KnstbXMtZmxleDowIDAgMjAlO2ZsZXg6MCAwIDIwJTttYXgtd2lkdGg6MjAlfS5yb3ctY29scy1sZy02Pip7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLWxnLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wtbGctMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wtbGctMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wtbGctM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wtbGctNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wtbGctNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wtbGctNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wtbGctN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wtbGctOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wtbGctOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wtbGctMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLWxnLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC1sZy0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci1sZy1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXItbGctbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXItbGctMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLWxnLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci1sZy0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXItbGctM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLWxnLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci1sZy01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXItbGctNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLWxnLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci1sZy04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXItbGctOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLWxnLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci1sZy0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXItbGctMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC1sZy0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC1sZy0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LWxnLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LWxnLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQtbGctNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQtbGctNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQtbGctNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC1sZy03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC1sZy04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC1sZy05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LWxnLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC1sZy0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5jb2wteGx7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTttYXgtd2lkdGg6MTAwJX0ucm93LWNvbHMteGwtMT4qey1tcy1mbGV4OjAgMCAxMDAlO2ZsZXg6MCAwIDEwMCU7bWF4LXdpZHRoOjEwMCV9LnJvdy1jb2xzLXhsLTI+KnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5yb3ctY29scy14bC0zPip7LW1zLWZsZXg6MCAwIDMzLjMzMzMzMyU7ZmxleDowIDAgMzMuMzMzMzMzJTttYXgtd2lkdGg6MzMuMzMzMzMzJX0ucm93LWNvbHMteGwtND4qey1tcy1mbGV4OjAgMCAyNSU7ZmxleDowIDAgMjUlO21heC13aWR0aDoyNSV9LnJvdy1jb2xzLXhsLTU+KnstbXMtZmxleDowIDAgMjAlO2ZsZXg6MCAwIDIwJTttYXgtd2lkdGg6MjAlfS5yb3ctY29scy14bC02Pip7LW1zLWZsZXg6MCAwIDE2LjY2NjY2NyU7ZmxleDowIDAgMTYuNjY2NjY3JTttYXgtd2lkdGg6MTYuNjY2NjY3JX0uY29sLXhsLWF1dG97LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzt3aWR0aDphdXRvO21heC13aWR0aDoxMDAlfS5jb2wteGwtMXstbXMtZmxleDowIDAgOC4zMzMzMzMlO2ZsZXg6MCAwIDguMzMzMzMzJTttYXgtd2lkdGg6OC4zMzMzMzMlfS5jb2wteGwtMnstbXMtZmxleDowIDAgMTYuNjY2NjY3JTtmbGV4OjAgMCAxNi42NjY2NjclO21heC13aWR0aDoxNi42NjY2NjclfS5jb2wteGwtM3stbXMtZmxleDowIDAgMjUlO2ZsZXg6MCAwIDI1JTttYXgtd2lkdGg6MjUlfS5jb2wteGwtNHstbXMtZmxleDowIDAgMzMuMzMzMzMzJTtmbGV4OjAgMCAzMy4zMzMzMzMlO21heC13aWR0aDozMy4zMzMzMzMlfS5jb2wteGwtNXstbXMtZmxleDowIDAgNDEuNjY2NjY3JTtmbGV4OjAgMCA0MS42NjY2NjclO21heC13aWR0aDo0MS42NjY2NjclfS5jb2wteGwtNnstbXMtZmxleDowIDAgNTAlO2ZsZXg6MCAwIDUwJTttYXgtd2lkdGg6NTAlfS5jb2wteGwtN3stbXMtZmxleDowIDAgNTguMzMzMzMzJTtmbGV4OjAgMCA1OC4zMzMzMzMlO21heC13aWR0aDo1OC4zMzMzMzMlfS5jb2wteGwtOHstbXMtZmxleDowIDAgNjYuNjY2NjY3JTtmbGV4OjAgMCA2Ni42NjY2NjclO21heC13aWR0aDo2Ni42NjY2NjclfS5jb2wteGwtOXstbXMtZmxleDowIDAgNzUlO2ZsZXg6MCAwIDc1JTttYXgtd2lkdGg6NzUlfS5jb2wteGwtMTB7LW1zLWZsZXg6MCAwIDgzLjMzMzMzMyU7ZmxleDowIDAgODMuMzMzMzMzJTttYXgtd2lkdGg6ODMuMzMzMzMzJX0uY29sLXhsLTExey1tcy1mbGV4OjAgMCA5MS42NjY2NjclO2ZsZXg6MCAwIDkxLjY2NjY2NyU7bWF4LXdpZHRoOjkxLjY2NjY2NyV9LmNvbC14bC0xMnstbXMtZmxleDowIDAgMTAwJTtmbGV4OjAgMCAxMDAlO21heC13aWR0aDoxMDAlfS5vcmRlci14bC1maXJzdHstbXMtZmxleC1vcmRlcjotMTtvcmRlcjotMX0ub3JkZXIteGwtbGFzdHstbXMtZmxleC1vcmRlcjoxMztvcmRlcjoxM30ub3JkZXIteGwtMHstbXMtZmxleC1vcmRlcjowO29yZGVyOjB9Lm9yZGVyLXhsLTF7LW1zLWZsZXgtb3JkZXI6MTtvcmRlcjoxfS5vcmRlci14bC0yey1tcy1mbGV4LW9yZGVyOjI7b3JkZXI6Mn0ub3JkZXIteGwtM3stbXMtZmxleC1vcmRlcjozO29yZGVyOjN9Lm9yZGVyLXhsLTR7LW1zLWZsZXgtb3JkZXI6NDtvcmRlcjo0fS5vcmRlci14bC01ey1tcy1mbGV4LW9yZGVyOjU7b3JkZXI6NX0ub3JkZXIteGwtNnstbXMtZmxleC1vcmRlcjo2O29yZGVyOjZ9Lm9yZGVyLXhsLTd7LW1zLWZsZXgtb3JkZXI6NztvcmRlcjo3fS5vcmRlci14bC04ey1tcy1mbGV4LW9yZGVyOjg7b3JkZXI6OH0ub3JkZXIteGwtOXstbXMtZmxleC1vcmRlcjo5O29yZGVyOjl9Lm9yZGVyLXhsLTEwey1tcy1mbGV4LW9yZGVyOjEwO29yZGVyOjEwfS5vcmRlci14bC0xMXstbXMtZmxleC1vcmRlcjoxMTtvcmRlcjoxMX0ub3JkZXIteGwtMTJ7LW1zLWZsZXgtb3JkZXI6MTI7b3JkZXI6MTJ9Lm9mZnNldC14bC0we21hcmdpbi1sZWZ0OjB9Lm9mZnNldC14bC0xe21hcmdpbi1sZWZ0OjguMzMzMzMzJX0ub2Zmc2V0LXhsLTJ7bWFyZ2luLWxlZnQ6MTYuNjY2NjY3JX0ub2Zmc2V0LXhsLTN7bWFyZ2luLWxlZnQ6MjUlfS5vZmZzZXQteGwtNHttYXJnaW4tbGVmdDozMy4zMzMzMzMlfS5vZmZzZXQteGwtNXttYXJnaW4tbGVmdDo0MS42NjY2NjclfS5vZmZzZXQteGwtNnttYXJnaW4tbGVmdDo1MCV9Lm9mZnNldC14bC03e21hcmdpbi1sZWZ0OjU4LjMzMzMzMyV9Lm9mZnNldC14bC04e21hcmdpbi1sZWZ0OjY2LjY2NjY2NyV9Lm9mZnNldC14bC05e21hcmdpbi1sZWZ0Ojc1JX0ub2Zmc2V0LXhsLTEwe21hcmdpbi1sZWZ0OjgzLjMzMzMzMyV9Lm9mZnNldC14bC0xMXttYXJnaW4tbGVmdDo5MS42NjY2NjclfX0udGFibGV7d2lkdGg6MTAwJTttYXJnaW4tYm90dG9tOjFyZW07Y29sb3I6IzIxMjUyOX0udGFibGUgdGQsLnRhYmxlIHRoe3BhZGRpbmc6Ljc1cmVtO3ZlcnRpY2FsLWFsaWduOnRvcDtib3JkZXItdG9wOjFweCBzb2xpZCAjZGVlMmU2fS50YWJsZSB0aGVhZCB0aHt2ZXJ0aWNhbC1hbGlnbjpib3R0b207Ym9yZGVyLWJvdHRvbToycHggc29saWQgI2RlZTJlNn0udGFibGUgdGJvZHkrdGJvZHl7Ym9yZGVyLXRvcDoycHggc29saWQgI2RlZTJlNn0udGFibGUtc20gdGQsLnRhYmxlLXNtIHRoe3BhZGRpbmc6LjNyZW19LnRhYmxlLWJvcmRlcmVke2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0udGFibGUtYm9yZGVyZWQgdGQsLnRhYmxlLWJvcmRlcmVkIHRoe2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0udGFibGUtYm9yZGVyZWQgdGhlYWQgdGQsLnRhYmxlLWJvcmRlcmVkIHRoZWFkIHRoe2JvcmRlci1ib3R0b20td2lkdGg6MnB4fS50YWJsZS1ib3JkZXJsZXNzIHRib2R5K3Rib2R5LC50YWJsZS1ib3JkZXJsZXNzIHRkLC50YWJsZS1ib3JkZXJsZXNzIHRoLC50YWJsZS1ib3JkZXJsZXNzIHRoZWFkIHRoe2JvcmRlcjowfS50YWJsZS1zdHJpcGVkIHRib2R5IHRyOm50aC1vZi10eXBlKG9kZCl7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4wNSl9LnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVye2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4wNzUpfS50YWJsZS1wcmltYXJ5LC50YWJsZS1wcmltYXJ5PnRkLC50YWJsZS1wcmltYXJ5PnRoe2JhY2tncm91bmQtY29sb3I6I2I4ZGFmZn0udGFibGUtcHJpbWFyeSB0Ym9keSt0Ym9keSwudGFibGUtcHJpbWFyeSB0ZCwudGFibGUtcHJpbWFyeSB0aCwudGFibGUtcHJpbWFyeSB0aGVhZCB0aHtib3JkZXItY29sb3I6IzdhYmFmZn0udGFibGUtaG92ZXIgLnRhYmxlLXByaW1hcnk6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojOWZjZGZmfS50YWJsZS1ob3ZlciAudGFibGUtcHJpbWFyeTpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLXByaW1hcnk6aG92ZXI+dGh7YmFja2dyb3VuZC1jb2xvcjojOWZjZGZmfS50YWJsZS1zZWNvbmRhcnksLnRhYmxlLXNlY29uZGFyeT50ZCwudGFibGUtc2Vjb25kYXJ5PnRoe2JhY2tncm91bmQtY29sb3I6I2Q2ZDhkYn0udGFibGUtc2Vjb25kYXJ5IHRib2R5K3Rib2R5LC50YWJsZS1zZWNvbmRhcnkgdGQsLnRhYmxlLXNlY29uZGFyeSB0aCwudGFibGUtc2Vjb25kYXJ5IHRoZWFkIHRoe2JvcmRlci1jb2xvcjojYjNiN2JifS50YWJsZS1ob3ZlciAudGFibGUtc2Vjb25kYXJ5OmhvdmVye2JhY2tncm91bmQtY29sb3I6I2M4Y2JjZn0udGFibGUtaG92ZXIgLnRhYmxlLXNlY29uZGFyeTpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLXNlY29uZGFyeTpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNjOGNiY2Z9LnRhYmxlLXN1Y2Nlc3MsLnRhYmxlLXN1Y2Nlc3M+dGQsLnRhYmxlLXN1Y2Nlc3M+dGh7YmFja2dyb3VuZC1jb2xvcjojYzNlNmNifS50YWJsZS1zdWNjZXNzIHRib2R5K3Rib2R5LC50YWJsZS1zdWNjZXNzIHRkLC50YWJsZS1zdWNjZXNzIHRoLC50YWJsZS1zdWNjZXNzIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojOGZkMTllfS50YWJsZS1ob3ZlciAudGFibGUtc3VjY2Vzczpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNiMWRmYmJ9LnRhYmxlLWhvdmVyIC50YWJsZS1zdWNjZXNzOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtc3VjY2Vzczpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNiMWRmYmJ9LnRhYmxlLWluZm8sLnRhYmxlLWluZm8+dGQsLnRhYmxlLWluZm8+dGh7YmFja2dyb3VuZC1jb2xvcjojYmVlNWVifS50YWJsZS1pbmZvIHRib2R5K3Rib2R5LC50YWJsZS1pbmZvIHRkLC50YWJsZS1pbmZvIHRoLC50YWJsZS1pbmZvIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojODZjZmRhfS50YWJsZS1ob3ZlciAudGFibGUtaW5mbzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNhYmRkZTV9LnRhYmxlLWhvdmVyIC50YWJsZS1pbmZvOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtaW5mbzpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNhYmRkZTV9LnRhYmxlLXdhcm5pbmcsLnRhYmxlLXdhcm5pbmc+dGQsLnRhYmxlLXdhcm5pbmc+dGh7YmFja2dyb3VuZC1jb2xvcjojZmZlZWJhfS50YWJsZS13YXJuaW5nIHRib2R5K3Rib2R5LC50YWJsZS13YXJuaW5nIHRkLC50YWJsZS13YXJuaW5nIHRoLC50YWJsZS13YXJuaW5nIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojZmZkZjdlfS50YWJsZS1ob3ZlciAudGFibGUtd2FybmluZzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNmZmU4YTF9LnRhYmxlLWhvdmVyIC50YWJsZS13YXJuaW5nOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtd2FybmluZzpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmU4YTF9LnRhYmxlLWRhbmdlciwudGFibGUtZGFuZ2VyPnRkLC50YWJsZS1kYW5nZXI+dGh7YmFja2dyb3VuZC1jb2xvcjojZjVjNmNifS50YWJsZS1kYW5nZXIgdGJvZHkrdGJvZHksLnRhYmxlLWRhbmdlciB0ZCwudGFibGUtZGFuZ2VyIHRoLC50YWJsZS1kYW5nZXIgdGhlYWQgdGh7Ym9yZGVyLWNvbG9yOiNlZDk2OWV9LnRhYmxlLWhvdmVyIC50YWJsZS1kYW5nZXI6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZjFiMGI3fS50YWJsZS1ob3ZlciAudGFibGUtZGFuZ2VyOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtZGFuZ2VyOmhvdmVyPnRoe2JhY2tncm91bmQtY29sb3I6I2YxYjBiN30udGFibGUtbGlnaHQsLnRhYmxlLWxpZ2h0PnRkLC50YWJsZS1saWdodD50aHtiYWNrZ3JvdW5kLWNvbG9yOiNmZGZkZmV9LnRhYmxlLWxpZ2h0IHRib2R5K3Rib2R5LC50YWJsZS1saWdodCB0ZCwudGFibGUtbGlnaHQgdGgsLnRhYmxlLWxpZ2h0IHRoZWFkIHRoe2JvcmRlci1jb2xvcjojZmJmY2ZjfS50YWJsZS1ob3ZlciAudGFibGUtbGlnaHQ6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojZWNlY2Y2fS50YWJsZS1ob3ZlciAudGFibGUtbGlnaHQ6aG92ZXI+dGQsLnRhYmxlLWhvdmVyIC50YWJsZS1saWdodDpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNlY2VjZjZ9LnRhYmxlLWRhcmssLnRhYmxlLWRhcms+dGQsLnRhYmxlLWRhcms+dGh7YmFja2dyb3VuZC1jb2xvcjojYzZjOGNhfS50YWJsZS1kYXJrIHRib2R5K3Rib2R5LC50YWJsZS1kYXJrIHRkLC50YWJsZS1kYXJrIHRoLC50YWJsZS1kYXJrIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojOTU5OTljfS50YWJsZS1ob3ZlciAudGFibGUtZGFyazpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNiOWJiYmV9LnRhYmxlLWhvdmVyIC50YWJsZS1kYXJrOmhvdmVyPnRkLC50YWJsZS1ob3ZlciAudGFibGUtZGFyazpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOiNiOWJiYmV9LnRhYmxlLWFjdGl2ZSwudGFibGUtYWN0aXZlPnRkLC50YWJsZS1hY3RpdmU+dGh7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLC4wNzUpfS50YWJsZS1ob3ZlciAudGFibGUtYWN0aXZlOmhvdmVye2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDc1KX0udGFibGUtaG92ZXIgLnRhYmxlLWFjdGl2ZTpob3Zlcj50ZCwudGFibGUtaG92ZXIgLnRhYmxlLWFjdGl2ZTpob3Zlcj50aHtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjA3NSl9LnRhYmxlIC50aGVhZC1kYXJrIHRoe2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMzQzYTQwO2JvcmRlci1jb2xvcjojNDU0ZDU1fS50YWJsZSAudGhlYWQtbGlnaHQgdGh7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWY7Ym9yZGVyLWNvbG9yOiNkZWUyZTZ9LnRhYmxlLWRhcmt7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzNDNhNDB9LnRhYmxlLWRhcmsgdGQsLnRhYmxlLWRhcmsgdGgsLnRhYmxlLWRhcmsgdGhlYWQgdGh7Ym9yZGVyLWNvbG9yOiM0NTRkNTV9LnRhYmxlLWRhcmsudGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9LnRhYmxlLWRhcmsudGFibGUtc3RyaXBlZCB0Ym9keSB0cjpudGgtb2YtdHlwZShvZGQpe2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMDUpfS50YWJsZS1kYXJrLnRhYmxlLWhvdmVyIHRib2R5IHRyOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC4wNzUpfUBtZWRpYSAobWF4LXdpZHRoOjU3NS45OHB4KXsudGFibGUtcmVzcG9uc2l2ZS1zbXtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7b3ZlcmZsb3cteDphdXRvOy13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNofS50YWJsZS1yZXNwb25zaXZlLXNtPi50YWJsZS1ib3JkZXJlZHtib3JkZXI6MH19QG1lZGlhIChtYXgtd2lkdGg6NzY3Ljk4cHgpey50YWJsZS1yZXNwb25zaXZlLW1ke2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmUtbWQ+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfX1AbWVkaWEgKG1heC13aWR0aDo5OTEuOThweCl7LnRhYmxlLXJlc3BvbnNpdmUtbGd7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bzstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0udGFibGUtcmVzcG9uc2l2ZS1sZz4udGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9fUBtZWRpYSAobWF4LXdpZHRoOjExOTkuOThweCl7LnRhYmxlLXJlc3BvbnNpdmUteGx7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO292ZXJmbG93LXg6YXV0bzstd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzp0b3VjaH0udGFibGUtcmVzcG9uc2l2ZS14bD4udGFibGUtYm9yZGVyZWR7Ym9yZGVyOjB9fS50YWJsZS1yZXNwb25zaXZle2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtvdmVyZmxvdy14OmF1dG87LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2h9LnRhYmxlLXJlc3BvbnNpdmU+LnRhYmxlLWJvcmRlcmVke2JvcmRlcjowfS5mb3JtLWNvbnRyb2x7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtICsgMnB4KTtwYWRkaW5nOi4zNzVyZW0gLjc1cmVtO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOi4yNXJlbTt0cmFuc2l0aW9uOmJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dH1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuZm9ybS1jb250cm9se3RyYW5zaXRpb246bm9uZX19LmZvcm0tY29udHJvbDo6LW1zLWV4cGFuZHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjowfS5mb3JtLWNvbnRyb2w6LW1vei1mb2N1c3Jpbmd7Y29sb3I6dHJhbnNwYXJlbnQ7dGV4dC1zaGFkb3c6MCAwIDAgIzQ5NTA1N30uZm9ybS1jb250cm9sOmZvY3Vze2NvbG9yOiM0OTUwNTc7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlci1jb2xvcjojODBiZGZmO291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmZvcm0tY29udHJvbDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjojNmM3NTdkO29wYWNpdHk6MX0uZm9ybS1jb250cm9sOjotbW96LXBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6LW1zLWlucHV0LXBsYWNlaG9sZGVye2NvbG9yOiM2Yzc1N2Q7b3BhY2l0eToxfS5mb3JtLWNvbnRyb2w6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlcntjb2xvcjojNmM3NTdkO29wYWNpdHk6MX0uZm9ybS1jb250cm9sOjpwbGFjZWhvbGRlcntjb2xvcjojNmM3NTdkO29wYWNpdHk6MX0uZm9ybS1jb250cm9sOmRpc2FibGVkLC5mb3JtLWNvbnRyb2xbcmVhZG9ubHlde2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtvcGFjaXR5OjF9aW5wdXRbdHlwZT1kYXRlXS5mb3JtLWNvbnRyb2wsaW5wdXRbdHlwZT1kYXRldGltZS1sb2NhbF0uZm9ybS1jb250cm9sLGlucHV0W3R5cGU9bW9udGhdLmZvcm0tY29udHJvbCxpbnB1dFt0eXBlPXRpbWVdLmZvcm0tY29udHJvbHstd2Via2l0LWFwcGVhcmFuY2U6bm9uZTstbW96LWFwcGVhcmFuY2U6bm9uZTthcHBlYXJhbmNlOm5vbmV9c2VsZWN0LmZvcm0tY29udHJvbDpmb2N1czo6LW1zLXZhbHVle2NvbG9yOiM0OTUwNTc7YmFja2dyb3VuZC1jb2xvcjojZmZmfS5mb3JtLWNvbnRyb2wtZmlsZSwuZm9ybS1jb250cm9sLXJhbmdle2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJX0uY29sLWZvcm0tbGFiZWx7cGFkZGluZy10b3A6Y2FsYyguMzc1cmVtICsgMXB4KTtwYWRkaW5nLWJvdHRvbTpjYWxjKC4zNzVyZW0gKyAxcHgpO21hcmdpbi1ib3R0b206MDtmb250LXNpemU6aW5oZXJpdDtsaW5lLWhlaWdodDoxLjV9LmNvbC1mb3JtLWxhYmVsLWxne3BhZGRpbmctdG9wOmNhbGMoLjVyZW0gKyAxcHgpO3BhZGRpbmctYm90dG9tOmNhbGMoLjVyZW0gKyAxcHgpO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNX0uY29sLWZvcm0tbGFiZWwtc217cGFkZGluZy10b3A6Y2FsYyguMjVyZW0gKyAxcHgpO3BhZGRpbmctYm90dG9tOmNhbGMoLjI1cmVtICsgMXB4KTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjV9LmZvcm0tY29udHJvbC1wbGFpbnRleHR7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO3BhZGRpbmc6LjM3NXJlbSAwO21hcmdpbi1ib3R0b206MDtmb250LXNpemU6MXJlbTtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjpzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItd2lkdGg6MXB4IDB9LmZvcm0tY29udHJvbC1wbGFpbnRleHQuZm9ybS1jb250cm9sLWxnLC5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0LmZvcm0tY29udHJvbC1zbXtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9LmZvcm0tY29udHJvbC1zbXtoZWlnaHQ6Y2FsYygxLjVlbSArIC41cmVtICsgMnB4KTtwYWRkaW5nOi4yNXJlbSAuNXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Ym9yZGVyLXJhZGl1czouMnJlbX0uZm9ybS1jb250cm9sLWxne2hlaWdodDpjYWxjKDEuNWVtICsgMXJlbSArIDJweCk7cGFkZGluZzouNXJlbSAxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOi4zcmVtfXNlbGVjdC5mb3JtLWNvbnRyb2xbbXVsdGlwbGVdLHNlbGVjdC5mb3JtLWNvbnRyb2xbc2l6ZV17aGVpZ2h0OmF1dG99dGV4dGFyZWEuZm9ybS1jb250cm9se2hlaWdodDphdXRvfS5mb3JtLWdyb3Vwe21hcmdpbi1ib3R0b206MXJlbX0uZm9ybS10ZXh0e2Rpc3BsYXk6YmxvY2s7bWFyZ2luLXRvcDouMjVyZW19LmZvcm0tcm93e2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDttYXJnaW4tcmlnaHQ6LTVweDttYXJnaW4tbGVmdDotNXB4fS5mb3JtLXJvdz4uY29sLC5mb3JtLXJvdz5bY2xhc3MqPWNvbC1de3BhZGRpbmctcmlnaHQ6NXB4O3BhZGRpbmctbGVmdDo1cHh9LmZvcm0tY2hlY2t7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztwYWRkaW5nLWxlZnQ6MS4yNXJlbX0uZm9ybS1jaGVjay1pbnB1dHtwb3NpdGlvbjphYnNvbHV0ZTttYXJnaW4tdG9wOi4zcmVtO21hcmdpbi1sZWZ0Oi0xLjI1cmVtfS5mb3JtLWNoZWNrLWlucHV0OmRpc2FibGVkfi5mb3JtLWNoZWNrLWxhYmVsLC5mb3JtLWNoZWNrLWlucHV0W2Rpc2FibGVkXX4uZm9ybS1jaGVjay1sYWJlbHtjb2xvcjojNmM3NTdkfS5mb3JtLWNoZWNrLWxhYmVse21hcmdpbi1ib3R0b206MH0uZm9ybS1jaGVjay1pbmxpbmV7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmctbGVmdDowO21hcmdpbi1yaWdodDouNzVyZW19LmZvcm0tY2hlY2staW5saW5lIC5mb3JtLWNoZWNrLWlucHV0e3Bvc2l0aW9uOnN0YXRpYzttYXJnaW4tdG9wOjA7bWFyZ2luLXJpZ2h0Oi4zMTI1cmVtO21hcmdpbi1sZWZ0OjB9LnZhbGlkLWZlZWRiYWNre2Rpc3BsYXk6bm9uZTt3aWR0aDoxMDAlO21hcmdpbi10b3A6LjI1cmVtO2ZvbnQtc2l6ZTo4MCU7Y29sb3I6IzI4YTc0NX0udmFsaWQtdG9vbHRpcHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MTAwJTtsZWZ0OjA7ei1pbmRleDo1O2Rpc3BsYXk6bm9uZTttYXgtd2lkdGg6MTAwJTtwYWRkaW5nOi4yNXJlbSAuNXJlbTttYXJnaW4tdG9wOi4xcmVtO2ZvbnQtc2l6ZTouODc1cmVtO2xpbmUtaGVpZ2h0OjEuNTtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6cmdiYSg0MCwxNjcsNjksLjkpO2JvcmRlci1yYWRpdXM6LjI1cmVtfS5pcy12YWxpZH4udmFsaWQtZmVlZGJhY2ssLmlzLXZhbGlkfi52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIDp2YWxpZH4udmFsaWQtZmVlZGJhY2ssLndhcy12YWxpZGF0ZWQgOnZhbGlkfi52YWxpZC10b29sdGlwe2Rpc3BsYXk6YmxvY2t9LmZvcm0tY29udHJvbC5pcy12YWxpZCwud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOnZhbGlke2JvcmRlci1jb2xvcjojMjhhNzQ1O3BhZGRpbmctcmlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSk7YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZmlsbD0nJTIzMjhhNzQ1JyBkPSdNMi4zIDYuNzNMLjYgNC41M2MtLjQtMS4wNC40Ni0xLjQgMS4xLS44bDEuMSAxLjQgMy40LTMuOGMuNi0uNjMgMS42LS4yNyAxLjIuN2wtNCA0LjZjLS40My41LS44LjQtMS4xLjF6Jy8lM2UlM2Mvc3ZnJTNlXFxcIik7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246cmlnaHQgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSkgY2VudGVyO2JhY2tncm91bmQtc2l6ZTpjYWxjKC43NWVtICsgLjM3NXJlbSkgY2FsYyguNzVlbSArIC4zNzVyZW0pfS5mb3JtLWNvbnRyb2wuaXMtdmFsaWQ6Zm9jdXMsLndhcy12YWxpZGF0ZWQgLmZvcm0tY29udHJvbDp2YWxpZDpmb2N1c3tib3JkZXItY29sb3I6IzI4YTc0NTtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNDAsMTY3LDY5LC4yNSl9Lndhcy12YWxpZGF0ZWQgdGV4dGFyZWEuZm9ybS1jb250cm9sOnZhbGlkLHRleHRhcmVhLmZvcm0tY29udHJvbC5pcy12YWxpZHtwYWRkaW5nLXJpZ2h0OmNhbGMoMS41ZW0gKyAuNzVyZW0pO2JhY2tncm91bmQtcG9zaXRpb246dG9wIGNhbGMoLjM3NWVtICsgLjE4NzVyZW0pIHJpZ2h0IGNhbGMoLjM3NWVtICsgLjE4NzVyZW0pfS5jdXN0b20tc2VsZWN0LmlzLXZhbGlkLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tc2VsZWN0OnZhbGlke2JvcmRlci1jb2xvcjojMjhhNzQ1O3BhZGRpbmctcmlnaHQ6Y2FsYyguNzVlbSArIDIuMzEyNXJlbSk7YmFja2dyb3VuZDp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc1JyB2aWV3Qm94PScwIDAgNCA1JyUzZSUzY3BhdGggZmlsbD0nJTIzMzQzYTQwJyBkPSdNMiAwTDAgMmg0em0wIDVMMCAzaDR6Jy8lM2UlM2Mvc3ZnJTNlXFxcIikgbm8tcmVwZWF0IHJpZ2h0IC43NXJlbSBjZW50ZXIvOHB4IDEwcHgsdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGZpbGw9JyUyMzI4YTc0NScgZD0nTTIuMyA2LjczTC42IDQuNTNjLS40LTEuMDQuNDYtMS40IDEuMS0uOGwxLjEgMS40IDMuNC0zLjhjLjYtLjYzIDEuNi0uMjcgMS4yLjdsLTQgNC42Yy0uNDMuNS0uOC40LTEuMS4xeicvJTNlJTNjL3N2ZyUzZVxcXCIpICNmZmYgbm8tcmVwZWF0IGNlbnRlciByaWdodCAxLjc1cmVtL2NhbGMoLjc1ZW0gKyAuMzc1cmVtKSBjYWxjKC43NWVtICsgLjM3NXJlbSl9LmN1c3RvbS1zZWxlY3QuaXMtdmFsaWQ6Zm9jdXMsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1zZWxlY3Q6dmFsaWQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwuMjUpfS5mb3JtLWNoZWNrLWlucHV0LmlzLXZhbGlkfi5mb3JtLWNoZWNrLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OnZhbGlkfi5mb3JtLWNoZWNrLWxhYmVse2NvbG9yOiMyOGE3NDV9LmZvcm0tY2hlY2staW5wdXQuaXMtdmFsaWR+LnZhbGlkLWZlZWRiYWNrLC5mb3JtLWNoZWNrLWlucHV0LmlzLXZhbGlkfi52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OnZhbGlkfi52YWxpZC1mZWVkYmFjaywud2FzLXZhbGlkYXRlZCAuZm9ybS1jaGVjay1pbnB1dDp2YWxpZH4udmFsaWQtdG9vbHRpcHtkaXNwbGF5OmJsb2NrfS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWwsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OnZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbHtjb2xvcjojMjhhNzQ1fS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiMyOGE3NDV9LmN1c3RvbS1jb250cm9sLWlucHV0LmlzLXZhbGlkOmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OnZhbGlkOmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym9yZGVyLWNvbG9yOiMzNGNlNTc7YmFja2dyb3VuZC1jb2xvcjojMzRjZTU3fS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZDpmb2N1c34uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6dmFsaWQ6Zm9jdXN+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwuMjUpfS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy12YWxpZDpmb2N1czpub3QoOmNoZWNrZWQpfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDp2YWxpZDpmb2N1czpub3QoOmNoZWNrZWQpfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojMjhhNzQ1fS5jdXN0b20tZmlsZS1pbnB1dC5pcy12YWxpZH4uY3VzdG9tLWZpbGUtbGFiZWwsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1maWxlLWlucHV0OnZhbGlkfi5jdXN0b20tZmlsZS1sYWJlbHtib3JkZXItY29sb3I6IzI4YTc0NX0uY3VzdG9tLWZpbGUtaW5wdXQuaXMtdmFsaWQ6Zm9jdXN+LmN1c3RvbS1maWxlLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tZmlsZS1pbnB1dDp2YWxpZDpmb2N1c34uY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLWNvbG9yOiMyOGE3NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwuMjUpfS5pbnZhbGlkLWZlZWRiYWNre2Rpc3BsYXk6bm9uZTt3aWR0aDoxMDAlO21hcmdpbi10b3A6LjI1cmVtO2ZvbnQtc2l6ZTo4MCU7Y29sb3I6I2RjMzU0NX0uaW52YWxpZC10b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO2xlZnQ6MDt6LWluZGV4OjU7ZGlzcGxheTpub25lO21heC13aWR0aDoxMDAlO3BhZGRpbmc6LjI1cmVtIC41cmVtO21hcmdpbi10b3A6LjFyZW07Zm9udC1zaXplOi44NzVyZW07bGluZS1oZWlnaHQ6MS41O2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDIyMCw1Myw2OSwuOSk7Ym9yZGVyLXJhZGl1czouMjVyZW19LmlzLWludmFsaWR+LmludmFsaWQtZmVlZGJhY2ssLmlzLWludmFsaWR+LmludmFsaWQtdG9vbHRpcCwud2FzLXZhbGlkYXRlZCA6aW52YWxpZH4uaW52YWxpZC1mZWVkYmFjaywud2FzLXZhbGlkYXRlZCA6aW52YWxpZH4uaW52YWxpZC10b29sdGlwe2Rpc3BsYXk6YmxvY2t9LmZvcm0tY29udHJvbC5pcy1pbnZhbGlkLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6aW52YWxpZHtib3JkZXItY29sb3I6I2RjMzU0NTtwYWRkaW5nLXJpZ2h0OmNhbGMoMS41ZW0gKyAuNzVyZW0pO2JhY2tncm91bmQtaW1hZ2U6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyBmaWxsPSdub25lJyBzdHJva2U9JyUyM2RjMzU0NScgdmlld0JveD0nMCAwIDEyIDEyJyUzZSUzY2NpcmNsZSBjeD0nNicgY3k9JzYnIHI9JzQuNScvJTNlJTNjcGF0aCBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBkPSdNNS44IDMuNmguNEw2IDYuNXonLyUzZSUzY2NpcmNsZSBjeD0nNicgY3k9JzguMicgcj0nLjYnIGZpbGw9JyUyM2RjMzU0NScgc3Ryb2tlPSdub25lJy8lM2UlM2Mvc3ZnJTNlXFxcIik7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246cmlnaHQgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSkgY2VudGVyO2JhY2tncm91bmQtc2l6ZTpjYWxjKC43NWVtICsgLjM3NXJlbSkgY2FsYyguNzVlbSArIC4zNzVyZW0pfS5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZDpmb2N1cywud2FzLXZhbGlkYXRlZCAuZm9ybS1jb250cm9sOmludmFsaWQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOiNkYzM1NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuMjUpfS53YXMtdmFsaWRhdGVkIHRleHRhcmVhLmZvcm0tY29udHJvbDppbnZhbGlkLHRleHRhcmVhLmZvcm0tY29udHJvbC5pcy1pbnZhbGlke3BhZGRpbmctcmlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSk7YmFja2dyb3VuZC1wb3NpdGlvbjp0b3AgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSkgcmlnaHQgY2FsYyguMzc1ZW0gKyAuMTg3NXJlbSl9LmN1c3RvbS1zZWxlY3QuaXMtaW52YWxpZCwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLXNlbGVjdDppbnZhbGlke2JvcmRlci1jb2xvcjojZGMzNTQ1O3BhZGRpbmctcmlnaHQ6Y2FsYyguNzVlbSArIDIuMzEyNXJlbSk7YmFja2dyb3VuZDp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nNCcgaGVpZ2h0PSc1JyB2aWV3Qm94PScwIDAgNCA1JyUzZSUzY3BhdGggZmlsbD0nJTIzMzQzYTQwJyBkPSdNMiAwTDAgMmg0em0wIDVMMCAzaDR6Jy8lM2UlM2Mvc3ZnJTNlXFxcIikgbm8tcmVwZWF0IHJpZ2h0IC43NXJlbSBjZW50ZXIvOHB4IDEwcHgsdXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzEyJyBoZWlnaHQ9JzEyJyBmaWxsPSdub25lJyBzdHJva2U9JyUyM2RjMzU0NScgdmlld0JveD0nMCAwIDEyIDEyJyUzZSUzY2NpcmNsZSBjeD0nNicgY3k9JzYnIHI9JzQuNScvJTNlJTNjcGF0aCBzdHJva2UtbGluZWpvaW49J3JvdW5kJyBkPSdNNS44IDMuNmguNEw2IDYuNXonLyUzZSUzY2NpcmNsZSBjeD0nNicgY3k9JzguMicgcj0nLjYnIGZpbGw9JyUyM2RjMzU0NScgc3Ryb2tlPSdub25lJy8lM2UlM2Mvc3ZnJTNlXFxcIikgI2ZmZiBuby1yZXBlYXQgY2VudGVyIHJpZ2h0IDEuNzVyZW0vY2FsYyguNzVlbSArIC4zNzVyZW0pIGNhbGMoLjc1ZW0gKyAuMzc1cmVtKX0uY3VzdG9tLXNlbGVjdC5pcy1pbnZhbGlkOmZvY3VzLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tc2VsZWN0OmludmFsaWQ6Zm9jdXN7Ym9yZGVyLWNvbG9yOiNkYzM1NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuMjUpfS5mb3JtLWNoZWNrLWlucHV0LmlzLWludmFsaWR+LmZvcm0tY2hlY2stbGFiZWwsLndhcy12YWxpZGF0ZWQgLmZvcm0tY2hlY2staW5wdXQ6aW52YWxpZH4uZm9ybS1jaGVjay1sYWJlbHtjb2xvcjojZGMzNTQ1fS5mb3JtLWNoZWNrLWlucHV0LmlzLWludmFsaWR+LmludmFsaWQtZmVlZGJhY2ssLmZvcm0tY2hlY2staW5wdXQuaXMtaW52YWxpZH4uaW52YWxpZC10b29sdGlwLC53YXMtdmFsaWRhdGVkIC5mb3JtLWNoZWNrLWlucHV0OmludmFsaWR+LmludmFsaWQtZmVlZGJhY2ssLndhcy12YWxpZGF0ZWQgLmZvcm0tY2hlY2staW5wdXQ6aW52YWxpZH4uaW52YWxpZC10b29sdGlwe2Rpc3BsYXk6YmxvY2t9LmN1c3RvbS1jb250cm9sLWlucHV0LmlzLWludmFsaWR+LmN1c3RvbS1jb250cm9sLWxhYmVsLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbHtjb2xvcjojZGMzNTQ1fS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy1pbnZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC53YXMtdmFsaWRhdGVkIC5jdXN0b20tY29udHJvbC1pbnB1dDppbnZhbGlkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojZGMzNTQ1fS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy1pbnZhbGlkOmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OmludmFsaWQ6Y2hlY2tlZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6I2U0NjA2ZDtiYWNrZ3JvdW5kLWNvbG9yOiNlNDYwNmR9LmN1c3RvbS1jb250cm9sLWlucHV0LmlzLWludmFsaWQ6Zm9jdXN+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OmludmFsaWQ6Zm9jdXN+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuMjUpfS5jdXN0b20tY29udHJvbC1pbnB1dC5pcy1pbnZhbGlkOmZvY3VzOm5vdCg6Y2hlY2tlZCl+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmUsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1jb250cm9sLWlucHV0OmludmFsaWQ6Zm9jdXM6bm90KDpjaGVja2VkKX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6I2RjMzU0NX0uY3VzdG9tLWZpbGUtaW5wdXQuaXMtaW52YWxpZH4uY3VzdG9tLWZpbGUtbGFiZWwsLndhcy12YWxpZGF0ZWQgLmN1c3RvbS1maWxlLWlucHV0OmludmFsaWR+LmN1c3RvbS1maWxlLWxhYmVse2JvcmRlci1jb2xvcjojZGMzNTQ1fS5jdXN0b20tZmlsZS1pbnB1dC5pcy1pbnZhbGlkOmZvY3Vzfi5jdXN0b20tZmlsZS1sYWJlbCwud2FzLXZhbGlkYXRlZCAuY3VzdG9tLWZpbGUtaW5wdXQ6aW52YWxpZDpmb2N1c34uY3VzdG9tLWZpbGUtbGFiZWx7Ym9yZGVyLWNvbG9yOiNkYzM1NDU7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuMjUpfS5mb3JtLWlubGluZXtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1mbG93OnJvdyB3cmFwO2ZsZXgtZmxvdzpyb3cgd3JhcDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5mb3JtLWlubGluZSAuZm9ybS1jaGVja3t3aWR0aDoxMDAlfUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsuZm9ybS1pbmxpbmUgbGFiZWx7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO21hcmdpbi1ib3R0b206MH0uZm9ybS1pbmxpbmUgLmZvcm0tZ3JvdXB7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXg6MCAwIGF1dG87ZmxleDowIDAgYXV0bzstbXMtZmxleC1mbG93OnJvdyB3cmFwO2ZsZXgtZmxvdzpyb3cgd3JhcDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO21hcmdpbi1ib3R0b206MH0uZm9ybS1pbmxpbmUgLmZvcm0tY29udHJvbHtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDphdXRvO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0uZm9ybS1pbmxpbmUgLmZvcm0tY29udHJvbC1wbGFpbnRleHR7ZGlzcGxheTppbmxpbmUtYmxvY2t9LmZvcm0taW5saW5lIC5jdXN0b20tc2VsZWN0LC5mb3JtLWlubGluZSAuaW5wdXQtZ3JvdXB7d2lkdGg6YXV0b30uZm9ybS1pbmxpbmUgLmZvcm0tY2hlY2t7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOmF1dG87cGFkZGluZy1sZWZ0OjB9LmZvcm0taW5saW5lIC5mb3JtLWNoZWNrLWlucHV0e3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4LW5lZ2F0aXZlOjA7ZmxleC1zaHJpbms6MDttYXJnaW4tdG9wOjA7bWFyZ2luLXJpZ2h0Oi4yNXJlbTttYXJnaW4tbGVmdDowfS5mb3JtLWlubGluZSAuY3VzdG9tLWNvbnRyb2x7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5mb3JtLWlubGluZSAuY3VzdG9tLWNvbnRyb2wtbGFiZWx7bWFyZ2luLWJvdHRvbTowfX0uYnRue2Rpc3BsYXk6aW5saW5lLWJsb2NrO2ZvbnQtd2VpZ2h0OjQwMDtjb2xvcjojMjEyNTI5O3RleHQtYWxpZ246Y2VudGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O3BhZGRpbmc6LjM3NXJlbSAuNzVyZW07Zm9udC1zaXplOjFyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6LjI1cmVtO3RyYW5zaXRpb246Y29sb3IgLjE1cyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5idG57dHJhbnNpdGlvbjpub25lfX0uYnRuOmhvdmVye2NvbG9yOiMyMTI1Mjk7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmJ0bi5mb2N1cywuYnRuOmZvY3Vze291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmJ0bi5kaXNhYmxlZCwuYnRuOmRpc2FibGVke29wYWNpdHk6LjY1fS5idG46bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCl7Y3Vyc29yOnBvaW50ZXJ9YS5idG4uZGlzYWJsZWQsZmllbGRzZXQ6ZGlzYWJsZWQgYS5idG57cG9pbnRlci1ldmVudHM6bm9uZX0uYnRuLXByaW1hcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmZ9LmJ0bi1wcmltYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA2OWQ5O2JvcmRlci1jb2xvcjojMDA2MmNjfS5idG4tcHJpbWFyeS5mb2N1cywuYnRuLXByaW1hcnk6Zm9jdXN7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDY5ZDk7Ym9yZGVyLWNvbG9yOiMwMDYyY2M7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDM4LDE0MywyNTUsLjUpfS5idG4tcHJpbWFyeS5kaXNhYmxlZCwuYnRuLXByaW1hcnk6ZGlzYWJsZWR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmZ9LmJ0bi1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tcHJpbWFyeS5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDYyY2M7Ym9yZGVyLWNvbG9yOiMwMDVjYmZ9LmJ0bi1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tcHJpbWFyeS5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDM4LDE0MywyNTUsLjUpfS5idG4tc2Vjb25kYXJ5e2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNmM3NTdkO2JvcmRlci1jb2xvcjojNmM3NTdkfS5idG4tc2Vjb25kYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNWE2MjY4O2JvcmRlci1jb2xvcjojNTQ1YjYyfS5idG4tc2Vjb25kYXJ5LmZvY3VzLC5idG4tc2Vjb25kYXJ5OmZvY3Vze2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNWE2MjY4O2JvcmRlci1jb2xvcjojNTQ1YjYyO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgxMzAsMTM4LDE0NSwuNSl9LmJ0bi1zZWNvbmRhcnkuZGlzYWJsZWQsLmJ0bi1zZWNvbmRhcnk6ZGlzYWJsZWR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM2Yzc1N2Q7Ym9yZGVyLWNvbG9yOiM2Yzc1N2R9LmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLXNlY29uZGFyeS5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM1NDViNjI7Ym9yZGVyLWNvbG9yOiM0ZTU1NWJ9LmJ0bi1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tc2Vjb25kYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLXNlY29uZGFyeS5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDEzMCwxMzgsMTQ1LC41KX0uYnRuLXN1Y2Nlc3N7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyOGE3NDU7Ym9yZGVyLWNvbG9yOiMyOGE3NDV9LmJ0bi1zdWNjZXNzOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMjE4ODM4O2JvcmRlci1jb2xvcjojMWU3ZTM0fS5idG4tc3VjY2Vzcy5mb2N1cywuYnRuLXN1Y2Nlc3M6Zm9jdXN7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyMTg4Mzg7Ym9yZGVyLWNvbG9yOiMxZTdlMzQ7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDcyLDE4MCw5NywuNSl9LmJ0bi1zdWNjZXNzLmRpc2FibGVkLC5idG4tc3VjY2VzczpkaXNhYmxlZHtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFlN2UzNDtib3JkZXItY29sb3I6IzFjNzQzMH0uYnRuLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tc3VjY2Vzczpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1zdWNjZXNzLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNzIsMTgwLDk3LC41KX0uYnRuLWluZm97Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxN2EyYjg7Ym9yZGVyLWNvbG9yOiMxN2EyYjh9LmJ0bi1pbmZvOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTM4NDk2O2JvcmRlci1jb2xvcjojMTE3YThifS5idG4taW5mby5mb2N1cywuYnRuLWluZm86Zm9jdXN7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxMzg0OTY7Ym9yZGVyLWNvbG9yOiMxMTdhOGI7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDU4LDE3NiwxOTUsLjUpfS5idG4taW5mby5kaXNhYmxlZCwuYnRuLWluZm86ZGlzYWJsZWR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxN2EyYjg7Ym9yZGVyLWNvbG9yOiMxN2EyYjh9LmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4taW5mby5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxMTdhOGI7Ym9yZGVyLWNvbG9yOiMxMDcwN2Z9LmJ0bi1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLWluZm86bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4taW5mby5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDU4LDE3NiwxOTUsLjUpfS5idG4td2FybmluZ3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2ZmYzEwNztib3JkZXItY29sb3I6I2ZmYzEwN30uYnRuLXdhcm5pbmc6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNlMGE4MDA7Ym9yZGVyLWNvbG9yOiNkMzllMDB9LmJ0bi13YXJuaW5nLmZvY3VzLC5idG4td2FybmluZzpmb2N1c3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2UwYTgwMDtib3JkZXItY29sb3I6I2QzOWUwMDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjIyLDE3MCwxMiwuNSl9LmJ0bi13YXJuaW5nLmRpc2FibGVkLC5idG4td2FybmluZzpkaXNhYmxlZHtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2ZmYzEwNztib3JkZXItY29sb3I6I2ZmYzEwN30uYnRuLXdhcm5pbmc6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi13YXJuaW5nLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2QzOWUwMDtib3JkZXItY29sb3I6I2M2OTUwMH0uYnRuLXdhcm5pbmc6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4td2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi13YXJuaW5nLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjIyLDE3MCwxMiwuNSl9LmJ0bi1kYW5nZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNkYzM1NDU7Ym9yZGVyLWNvbG9yOiNkYzM1NDV9LmJ0bi1kYW5nZXI6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNjODIzMzM7Ym9yZGVyLWNvbG9yOiNiZDIxMzB9LmJ0bi1kYW5nZXIuZm9jdXMsLmJ0bi1kYW5nZXI6Zm9jdXN7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNjODIzMzM7Ym9yZGVyLWNvbG9yOiNiZDIxMzA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyNSw4Myw5NywuNSl9LmJ0bi1kYW5nZXIuZGlzYWJsZWQsLmJ0bi1kYW5nZXI6ZGlzYWJsZWR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNkYzM1NDU7Ym9yZGVyLWNvbG9yOiNkYzM1NDV9LmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLWRhbmdlci5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNiZDIxMzA7Ym9yZGVyLWNvbG9yOiNiMjFmMmR9LmJ0bi1kYW5nZXI6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLWRhbmdlci5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyNSw4Myw5NywuNSl9LmJ0bi1saWdodHtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYTtib3JkZXItY29sb3I6I2Y4ZjlmYX0uYnRuLWxpZ2h0OmhvdmVye2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZTJlNmVhO2JvcmRlci1jb2xvcjojZGFlMGU1fS5idG4tbGlnaHQuZm9jdXMsLmJ0bi1saWdodDpmb2N1c3tjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2UyZTZlYTtib3JkZXItY29sb3I6I2RhZTBlNTtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjE2LDIxNywyMTksLjUpfS5idG4tbGlnaHQuZGlzYWJsZWQsLmJ0bi1saWdodDpkaXNhYmxlZHtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYTtib3JkZXItY29sb3I6I2Y4ZjlmYX0uYnRuLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLWxpZ2h0LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2RhZTBlNTtib3JkZXItY29sb3I6I2QzZDlkZn0uYnRuLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLWxpZ2h0LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjE2LDIxNywyMTksLjUpfS5idG4tZGFya3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLWRhcms6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyMzI3MmI7Ym9yZGVyLWNvbG9yOiMxZDIxMjR9LmJ0bi1kYXJrLmZvY3VzLC5idG4tZGFyazpmb2N1c3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzIzMjcyYjtib3JkZXItY29sb3I6IzFkMjEyNDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoODIsODgsOTMsLjUpfS5idG4tZGFyay5kaXNhYmxlZCwuYnRuLWRhcms6ZGlzYWJsZWR7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzNDNhNDA7Ym9yZGVyLWNvbG9yOiMzNDNhNDB9LmJ0bi1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tZGFyay5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxZDIxMjQ7Ym9yZGVyLWNvbG9yOiMxNzFhMWR9LmJ0bi1kYXJrOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tZGFyay5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDgyLDg4LDkzLC41KX0uYnRuLW91dGxpbmUtcHJpbWFyeXtjb2xvcjojMDA3YmZmO2JvcmRlci1jb2xvcjojMDA3YmZmfS5idG4tb3V0bGluZS1wcmltYXJ5OmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlci1jb2xvcjojMDA3YmZmfS5idG4tb3V0bGluZS1wcmltYXJ5LmZvY3VzLC5idG4tb3V0bGluZS1wcmltYXJ5OmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjUpfS5idG4tb3V0bGluZS1wcmltYXJ5LmRpc2FibGVkLC5idG4tb3V0bGluZS1wcmltYXJ5OmRpc2FibGVke2NvbG9yOiMwMDdiZmY7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXItY29sb3I6IzAwN2JmZn0uYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1wcmltYXJ5LmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC41KX0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5e2NvbG9yOiM2Yzc1N2Q7Ym9yZGVyLWNvbG9yOiM2Yzc1N2R9LmJ0bi1vdXRsaW5lLXNlY29uZGFyeTpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZDtib3JkZXItY29sb3I6IzZjNzU3ZH0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5LmZvY3VzLC5idG4tb3V0bGluZS1zZWNvbmRhcnk6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDEwOCwxMTcsMTI1LC41KX0uYnRuLW91dGxpbmUtc2Vjb25kYXJ5LmRpc2FibGVkLC5idG4tb3V0bGluZS1zZWNvbmRhcnk6ZGlzYWJsZWR7Y29sb3I6IzZjNzU3ZDtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tb3V0bGluZS1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1zZWNvbmRhcnkuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNmM3NTdkO2JvcmRlci1jb2xvcjojNmM3NTdkfS5idG4tb3V0bGluZS1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS1zZWNvbmRhcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1zZWNvbmRhcnkuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgxMDgsMTE3LDEyNSwuNSl9LmJ0bi1vdXRsaW5lLXN1Y2Nlc3N7Y29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLW91dGxpbmUtc3VjY2Vzczpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NTtib3JkZXItY29sb3I6IzI4YTc0NX0uYnRuLW91dGxpbmUtc3VjY2Vzcy5mb2N1cywuYnRuLW91dGxpbmUtc3VjY2Vzczpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNDAsMTY3LDY5LC41KX0uYnRuLW91dGxpbmUtc3VjY2Vzcy5kaXNhYmxlZCwuYnRuLW91dGxpbmUtc3VjY2VzczpkaXNhYmxlZHtjb2xvcjojMjhhNzQ1O2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnR9LmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlLC5idG4tb3V0bGluZS1zdWNjZXNzOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtc3VjY2Vzcy5kcm9wZG93bi10b2dnbGV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMyOGE3NDU7Ym9yZGVyLWNvbG9yOiMyOGE3NDV9LmJ0bi1vdXRsaW5lLXN1Y2Nlc3M6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlOmZvY3VzLC5idG4tb3V0bGluZS1zdWNjZXNzOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtc3VjY2Vzcy5kcm9wZG93bi10b2dnbGU6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDQwLDE2Nyw2OSwuNSl9LmJ0bi1vdXRsaW5lLWluZm97Y29sb3I6IzE3YTJiODtib3JkZXItY29sb3I6IzE3YTJiOH0uYnRuLW91dGxpbmUtaW5mbzpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzE3YTJiODtib3JkZXItY29sb3I6IzE3YTJiOH0uYnRuLW91dGxpbmUtaW5mby5mb2N1cywuYnRuLW91dGxpbmUtaW5mbzpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjMsMTYyLDE4NCwuNSl9LmJ0bi1vdXRsaW5lLWluZm8uZGlzYWJsZWQsLmJ0bi1vdXRsaW5lLWluZm86ZGlzYWJsZWR7Y29sb3I6IzE3YTJiODtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLW91dGxpbmUtaW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmUsLnNob3c+LmJ0bi1vdXRsaW5lLWluZm8uZHJvcGRvd24tdG9nZ2xle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTdhMmI4O2JvcmRlci1jb2xvcjojMTdhMmI4fS5idG4tb3V0bGluZS1pbmZvOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtaW5mbzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKTphY3RpdmU6Zm9jdXMsLnNob3c+LmJ0bi1vdXRsaW5lLWluZm8uZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyMywxNjIsMTg0LC41KX0uYnRuLW91dGxpbmUtd2FybmluZ3tjb2xvcjojZmZjMTA3O2JvcmRlci1jb2xvcjojZmZjMTA3fS5idG4tb3V0bGluZS13YXJuaW5nOmhvdmVye2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3O2JvcmRlci1jb2xvcjojZmZjMTA3fS5idG4tb3V0bGluZS13YXJuaW5nLmZvY3VzLC5idG4tb3V0bGluZS13YXJuaW5nOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyNTUsMTkzLDcsLjUpfS5idG4tb3V0bGluZS13YXJuaW5nLmRpc2FibGVkLC5idG4tb3V0bGluZS13YXJuaW5nOmRpc2FibGVke2NvbG9yOiNmZmMxMDc7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtd2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1vdXRsaW5lLXdhcm5pbmc6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS13YXJuaW5nLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2ZmYzEwNztib3JkZXItY29sb3I6I2ZmYzEwN30uYnRuLW91dGxpbmUtd2FybmluZzpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLXdhcm5pbmc6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS13YXJuaW5nLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjU1LDE5Myw3LC41KX0uYnRuLW91dGxpbmUtZGFuZ2Vye2NvbG9yOiNkYzM1NDU7Ym9yZGVyLWNvbG9yOiNkYzM1NDV9LmJ0bi1vdXRsaW5lLWRhbmdlcjpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NTtib3JkZXItY29sb3I6I2RjMzU0NX0uYnRuLW91dGxpbmUtZGFuZ2VyLmZvY3VzLC5idG4tb3V0bGluZS1kYW5nZXI6Zm9jdXN7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuNSl9LmJ0bi1vdXRsaW5lLWRhbmdlci5kaXNhYmxlZCwuYnRuLW91dGxpbmUtZGFuZ2VyOmRpc2FibGVke2NvbG9yOiNkYzM1NDU7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwuYnRuLW91dGxpbmUtZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtZGFuZ2VyLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NTtib3JkZXItY29sb3I6I2RjMzU0NX0uYnRuLW91dGxpbmUtZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZTpmb2N1cywuYnRuLW91dGxpbmUtZGFuZ2VyOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtZGFuZ2VyLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjIwLDUzLDY5LC41KX0uYnRuLW91dGxpbmUtbGlnaHR7Y29sb3I6I2Y4ZjlmYTtib3JkZXItY29sb3I6I2Y4ZjlmYX0uYnRuLW91dGxpbmUtbGlnaHQ6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNmOGY5ZmE7Ym9yZGVyLWNvbG9yOiNmOGY5ZmF9LmJ0bi1vdXRsaW5lLWxpZ2h0LmZvY3VzLC5idG4tb3V0bGluZS1saWdodDpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMjQ4LDI0OSwyNTAsLjUpfS5idG4tb3V0bGluZS1saWdodC5kaXNhYmxlZCwuYnRuLW91dGxpbmUtbGlnaHQ6ZGlzYWJsZWR7Y29sb3I6I2Y4ZjlmYTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5idG4tb3V0bGluZS1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZSwuc2hvdz4uYnRuLW91dGxpbmUtbGlnaHQuZHJvcGRvd24tdG9nZ2xle2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhO2JvcmRlci1jb2xvcjojZjhmOWZhfS5idG4tb3V0bGluZS1saWdodDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLWxpZ2h0Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywuc2hvdz4uYnRuLW91dGxpbmUtbGlnaHQuZHJvcGRvd24tdG9nZ2xlOmZvY3Vze2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyNDgsMjQ5LDI1MCwuNSl9LmJ0bi1vdXRsaW5lLWRhcmt7Y29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLW91dGxpbmUtZGFyazpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLW91dGxpbmUtZGFyay5mb2N1cywuYnRuLW91dGxpbmUtZGFyazpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNTIsNTgsNjQsLjUpfS5idG4tb3V0bGluZS1kYXJrLmRpc2FibGVkLC5idG4tb3V0bGluZS1kYXJrOmRpc2FibGVke2NvbG9yOiMzNDNhNDA7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudH0uYnRuLW91dGxpbmUtZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUsLmJ0bi1vdXRsaW5lLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLC5zaG93Pi5idG4tb3V0bGluZS1kYXJrLmRyb3Bkb3duLXRvZ2dsZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzM0M2E0MDtib3JkZXItY29sb3I6IzM0M2E0MH0uYnRuLW91dGxpbmUtZGFyazpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsLmJ0bi1vdXRsaW5lLWRhcms6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlOmZvY3VzLC5zaG93Pi5idG4tb3V0bGluZS1kYXJrLmRyb3Bkb3duLXRvZ2dsZTpmb2N1c3tib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNTIsNTgsNjQsLjUpfS5idG4tbGlua3tmb250LXdlaWdodDo0MDA7Y29sb3I6IzAwN2JmZjt0ZXh0LWRlY29yYXRpb246bm9uZX0uYnRuLWxpbms6aG92ZXJ7Y29sb3I6IzAwNTZiMzt0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lfS5idG4tbGluay5mb2N1cywuYnRuLWxpbms6Zm9jdXN7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0uYnRuLWxpbmsuZGlzYWJsZWQsLmJ0bi1saW5rOmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZX0uYnRuLWdyb3VwLWxnPi5idG4sLmJ0bi1sZ3twYWRkaW5nOi41cmVtIDFyZW07Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6LjNyZW19LmJ0bi1ncm91cC1zbT4uYnRuLC5idG4tc217cGFkZGluZzouMjVyZW0gLjVyZW07Zm9udC1zaXplOi44NzVyZW07bGluZS1oZWlnaHQ6MS41O2JvcmRlci1yYWRpdXM6LjJyZW19LmJ0bi1ibG9ja3tkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCV9LmJ0bi1ibG9jaysuYnRuLWJsb2Nre21hcmdpbi10b3A6LjVyZW19aW5wdXRbdHlwZT1idXR0b25dLmJ0bi1ibG9jayxpbnB1dFt0eXBlPXJlc2V0XS5idG4tYmxvY2ssaW5wdXRbdHlwZT1zdWJtaXRdLmJ0bi1ibG9ja3t3aWR0aDoxMDAlfS5mYWRle3RyYW5zaXRpb246b3BhY2l0eSAuMTVzIGxpbmVhcn1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuZmFkZXt0cmFuc2l0aW9uOm5vbmV9fS5mYWRlOm5vdCguc2hvdyl7b3BhY2l0eTowfS5jb2xsYXBzZTpub3QoLnNob3cpe2Rpc3BsYXk6bm9uZX0uY29sbGFwc2luZ3twb3NpdGlvbjpyZWxhdGl2ZTtoZWlnaHQ6MDtvdmVyZmxvdzpoaWRkZW47dHJhbnNpdGlvbjpoZWlnaHQgLjM1cyBlYXNlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jb2xsYXBzaW5ne3RyYW5zaXRpb246bm9uZX19LmRyb3Bkb3duLC5kcm9wbGVmdCwuZHJvcHJpZ2h0LC5kcm9wdXB7cG9zaXRpb246cmVsYXRpdmV9LmRyb3Bkb3duLXRvZ2dsZXt3aGl0ZS1zcGFjZTpub3dyYXB9LmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6LjI1NWVtO3ZlcnRpY2FsLWFsaWduOi4yNTVlbTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci10b3A6LjNlbSBzb2xpZDtib3JkZXItcmlnaHQ6LjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjA7Ym9yZGVyLWxlZnQ6LjNlbSBzb2xpZCB0cmFuc3BhcmVudH0uZHJvcGRvd24tdG9nZ2xlOmVtcHR5OjphZnRlcnttYXJnaW4tbGVmdDowfS5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO2xlZnQ6MDt6LWluZGV4OjEwMDA7ZGlzcGxheTpub25lO2Zsb2F0OmxlZnQ7bWluLXdpZHRoOjEwcmVtO3BhZGRpbmc6LjVyZW0gMDttYXJnaW46LjEyNXJlbSAwIDA7Zm9udC1zaXplOjFyZW07Y29sb3I6IzIxMjUyOTt0ZXh0LWFsaWduOmxlZnQ7bGlzdC1zdHlsZTpub25lO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xNSk7Ym9yZGVyLXJhZGl1czouMjVyZW19LmRyb3Bkb3duLW1lbnUtbGVmdHtyaWdodDphdXRvO2xlZnQ6MH0uZHJvcGRvd24tbWVudS1yaWdodHtyaWdodDowO2xlZnQ6YXV0b31AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmRyb3Bkb3duLW1lbnUtc20tbGVmdHtyaWdodDphdXRvO2xlZnQ6MH0uZHJvcGRvd24tbWVudS1zbS1yaWdodHtyaWdodDowO2xlZnQ6YXV0b319QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5kcm9wZG93bi1tZW51LW1kLWxlZnR7cmlnaHQ6YXV0bztsZWZ0OjB9LmRyb3Bkb3duLW1lbnUtbWQtcmlnaHR7cmlnaHQ6MDtsZWZ0OmF1dG99fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsuZHJvcGRvd24tbWVudS1sZy1sZWZ0e3JpZ2h0OmF1dG87bGVmdDowfS5kcm9wZG93bi1tZW51LWxnLXJpZ2h0e3JpZ2h0OjA7bGVmdDphdXRvfX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5kcm9wZG93bi1tZW51LXhsLWxlZnR7cmlnaHQ6YXV0bztsZWZ0OjB9LmRyb3Bkb3duLW1lbnUteGwtcmlnaHR7cmlnaHQ6MDtsZWZ0OmF1dG99fS5kcm9wdXAgLmRyb3Bkb3duLW1lbnV7dG9wOmF1dG87Ym90dG9tOjEwMCU7bWFyZ2luLXRvcDowO21hcmdpbi1ib3R0b206LjEyNXJlbX0uZHJvcHVwIC5kcm9wZG93bi10b2dnbGU6OmFmdGVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbi1sZWZ0Oi4yNTVlbTt2ZXJ0aWNhbC1hbGlnbjouMjU1ZW07Y29udGVudDpcXFwiXFxcIjtib3JkZXItdG9wOjA7Ym9yZGVyLXJpZ2h0Oi4zZW0gc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLWJvdHRvbTouM2VtIHNvbGlkO2JvcmRlci1sZWZ0Oi4zZW0gc29saWQgdHJhbnNwYXJlbnR9LmRyb3B1cCAuZHJvcGRvd24tdG9nZ2xlOmVtcHR5OjphZnRlcnttYXJnaW4tbGVmdDowfS5kcm9wcmlnaHQgLmRyb3Bkb3duLW1lbnV7dG9wOjA7cmlnaHQ6YXV0bztsZWZ0OjEwMCU7bWFyZ2luLXRvcDowO21hcmdpbi1sZWZ0Oi4xMjVyZW19LmRyb3ByaWdodCAuZHJvcGRvd24tdG9nZ2xlOjphZnRlcntkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tbGVmdDouMjU1ZW07dmVydGljYWwtYWxpZ246LjI1NWVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLXRvcDouM2VtIHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yaWdodDowO2JvcmRlci1ib3R0b206LjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItbGVmdDouM2VtIHNvbGlkfS5kcm9wcmlnaHQgLmRyb3Bkb3duLXRvZ2dsZTplbXB0eTo6YWZ0ZXJ7bWFyZ2luLWxlZnQ6MH0uZHJvcHJpZ2h0IC5kcm9wZG93bi10b2dnbGU6OmFmdGVye3ZlcnRpY2FsLWFsaWduOjB9LmRyb3BsZWZ0IC5kcm9wZG93bi1tZW51e3RvcDowO3JpZ2h0OjEwMCU7bGVmdDphdXRvO21hcmdpbi10b3A6MDttYXJnaW4tcmlnaHQ6LjEyNXJlbX0uZHJvcGxlZnQgLmRyb3Bkb3duLXRvZ2dsZTo6YWZ0ZXJ7ZGlzcGxheTppbmxpbmUtYmxvY2s7bWFyZ2luLWxlZnQ6LjI1NWVtO3ZlcnRpY2FsLWFsaWduOi4yNTVlbTtjb250ZW50OlxcXCJcXFwifS5kcm9wbGVmdCAuZHJvcGRvd24tdG9nZ2xlOjphZnRlcntkaXNwbGF5Om5vbmV9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6OmJlZm9yZXtkaXNwbGF5OmlubGluZS1ibG9jazttYXJnaW4tcmlnaHQ6LjI1NWVtO3ZlcnRpY2FsLWFsaWduOi4yNTVlbTtjb250ZW50OlxcXCJcXFwiO2JvcmRlci10b3A6LjNlbSBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmlnaHQ6LjNlbSBzb2xpZDtib3JkZXItYm90dG9tOi4zZW0gc29saWQgdHJhbnNwYXJlbnR9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6ZW1wdHk6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGU6OmJlZm9yZXt2ZXJ0aWNhbC1hbGlnbjowfS5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj1ib3R0b21dLC5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj1sZWZ0XSwuZHJvcGRvd24tbWVudVt4LXBsYWNlbWVudF49cmlnaHRdLC5kcm9wZG93bi1tZW51W3gtcGxhY2VtZW50Xj10b3Bde3JpZ2h0OmF1dG87Ym90dG9tOmF1dG99LmRyb3Bkb3duLWRpdmlkZXJ7aGVpZ2h0OjA7bWFyZ2luOi41cmVtIDA7b3ZlcmZsb3c6aGlkZGVuO2JvcmRlci10b3A6MXB4IHNvbGlkICNlOWVjZWZ9LmRyb3Bkb3duLWl0ZW17ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO3BhZGRpbmc6LjI1cmVtIDEuNXJlbTtjbGVhcjpib3RoO2ZvbnQtd2VpZ2h0OjQwMDtjb2xvcjojMjEyNTI5O3RleHQtYWxpZ246aW5oZXJpdDt3aGl0ZS1zcGFjZTpub3dyYXA7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MH0uZHJvcGRvd24taXRlbTpmb2N1cywuZHJvcGRvd24taXRlbTpob3Zlcntjb2xvcjojMTYxODFiO3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYX0uZHJvcGRvd24taXRlbS5hY3RpdmUsLmRyb3Bkb3duLWl0ZW06YWN0aXZle2NvbG9yOiNmZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfS5kcm9wZG93bi1pdGVtLmRpc2FibGVkLC5kcm9wZG93bi1pdGVtOmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50fS5kcm9wZG93bi1tZW51LnNob3d7ZGlzcGxheTpibG9ja30uZHJvcGRvd24taGVhZGVye2Rpc3BsYXk6YmxvY2s7cGFkZGluZzouNXJlbSAxLjVyZW07bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZTouODc1cmVtO2NvbG9yOiM2Yzc1N2Q7d2hpdGUtc3BhY2U6bm93cmFwfS5kcm9wZG93bi1pdGVtLXRleHR7ZGlzcGxheTpibG9jaztwYWRkaW5nOi4yNXJlbSAxLjVyZW07Y29sb3I6IzIxMjUyOX0uYnRuLWdyb3VwLC5idG4tZ3JvdXAtdmVydGljYWx7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3g7ZGlzcGxheTppbmxpbmUtZmxleDt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuLC5idG4tZ3JvdXA+LmJ0bntwb3NpdGlvbjpyZWxhdGl2ZTstbXMtZmxleDoxIDEgYXV0bztmbGV4OjEgMSBhdXRvfS5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bjpob3ZlciwuYnRuLWdyb3VwPi5idG46aG92ZXJ7ei1pbmRleDoxfS5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bi5hY3RpdmUsLmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOmFjdGl2ZSwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG46Zm9jdXMsLmJ0bi1ncm91cD4uYnRuLmFjdGl2ZSwuYnRuLWdyb3VwPi5idG46YWN0aXZlLC5idG4tZ3JvdXA+LmJ0bjpmb2N1c3t6LWluZGV4OjF9LmJ0bi10b29sYmFye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5idG4tdG9vbGJhciAuaW5wdXQtZ3JvdXB7d2lkdGg6YXV0b30uYnRuLWdyb3VwPi5idG4tZ3JvdXA6bm90KDpmaXJzdC1jaGlsZCksLmJ0bi1ncm91cD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpe21hcmdpbi1sZWZ0Oi0xcHh9LmJ0bi1ncm91cD4uYnRuLWdyb3VwOm5vdCg6bGFzdC1jaGlsZCk+LmJ0biwuYnRuLWdyb3VwPi5idG46bm90KDpsYXN0LWNoaWxkKTpub3QoLmRyb3Bkb3duLXRvZ2dsZSl7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5idG4tZ3JvdXA+LmJ0bi1ncm91cDpub3QoOmZpcnN0LWNoaWxkKT4uYnRuLC5idG4tZ3JvdXA+LmJ0bjpub3QoOmZpcnN0LWNoaWxkKXtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5kcm9wZG93bi10b2dnbGUtc3BsaXR7cGFkZGluZy1yaWdodDouNTYyNXJlbTtwYWRkaW5nLWxlZnQ6LjU2MjVyZW19LmRyb3Bkb3duLXRvZ2dsZS1zcGxpdDo6YWZ0ZXIsLmRyb3ByaWdodCAuZHJvcGRvd24tdG9nZ2xlLXNwbGl0OjphZnRlciwuZHJvcHVwIC5kcm9wZG93bi10b2dnbGUtc3BsaXQ6OmFmdGVye21hcmdpbi1sZWZ0OjB9LmRyb3BsZWZ0IC5kcm9wZG93bi10b2dnbGUtc3BsaXQ6OmJlZm9yZXttYXJnaW4tcmlnaHQ6MH0uYnRuLWdyb3VwLXNtPi5idG4rLmRyb3Bkb3duLXRvZ2dsZS1zcGxpdCwuYnRuLXNtKy5kcm9wZG93bi10b2dnbGUtc3BsaXR7cGFkZGluZy1yaWdodDouMzc1cmVtO3BhZGRpbmctbGVmdDouMzc1cmVtfS5idG4tZ3JvdXAtbGc+LmJ0bisuZHJvcGRvd24tdG9nZ2xlLXNwbGl0LC5idG4tbGcrLmRyb3Bkb3duLXRvZ2dsZS1zcGxpdHtwYWRkaW5nLXJpZ2h0Oi43NXJlbTtwYWRkaW5nLWxlZnQ6Ljc1cmVtfS5idG4tZ3JvdXAtdmVydGljYWx7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfS5idG4tZ3JvdXAtdmVydGljYWw+LmJ0biwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXB7d2lkdGg6MTAwJX0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXA6bm90KDpmaXJzdC1jaGlsZCksLmJ0bi1ncm91cC12ZXJ0aWNhbD4uYnRuOm5vdCg6Zmlyc3QtY2hpbGQpe21hcmdpbi10b3A6LTFweH0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXA6bm90KDpsYXN0LWNoaWxkKT4uYnRuLC5idG4tZ3JvdXAtdmVydGljYWw+LmJ0bjpub3QoOmxhc3QtY2hpbGQpOm5vdCguZHJvcGRvd24tdG9nZ2xlKXtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0uYnRuLWdyb3VwLXZlcnRpY2FsPi5idG4tZ3JvdXA6bm90KDpmaXJzdC1jaGlsZCk+LmJ0biwuYnRuLWdyb3VwLXZlcnRpY2FsPi5idG46bm90KDpmaXJzdC1jaGlsZCl7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9LmJ0bi1ncm91cC10b2dnbGU+LmJ0biwuYnRuLWdyb3VwLXRvZ2dsZT4uYnRuLWdyb3VwPi5idG57bWFyZ2luLWJvdHRvbTowfS5idG4tZ3JvdXAtdG9nZ2xlPi5idG4gaW5wdXRbdHlwZT1jaGVja2JveF0sLmJ0bi1ncm91cC10b2dnbGU+LmJ0biBpbnB1dFt0eXBlPXJhZGlvXSwuYnRuLWdyb3VwLXRvZ2dsZT4uYnRuLWdyb3VwPi5idG4gaW5wdXRbdHlwZT1jaGVja2JveF0sLmJ0bi1ncm91cC10b2dnbGU+LmJ0bi1ncm91cD4uYnRuIGlucHV0W3R5cGU9cmFkaW9de3Bvc2l0aW9uOmFic29sdXRlO2NsaXA6cmVjdCgwLDAsMCwwKTtwb2ludGVyLWV2ZW50czpub25lfS5pbnB1dC1ncm91cHtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtYWxpZ246c3RyZXRjaDthbGlnbi1pdGVtczpzdHJldGNoO3dpZHRoOjEwMCV9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSwuaW5wdXQtZ3JvdXA+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0e3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjEgMSBhdXRvO2ZsZXg6MSAxIGF1dG87d2lkdGg6MSU7bWluLXdpZHRoOjA7bWFyZ2luLWJvdHRvbTowfS5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGUrLmN1c3RvbS1maWxlLC5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGUrLmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5jdXN0b20tc2VsZWN0Ky5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdCsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sKy5jdXN0b20tZmlsZSwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbCsuY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbCsuZm9ybS1jb250cm9sLC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sLXBsYWludGV4dCsuY3VzdG9tLWZpbGUsLmlucHV0LWdyb3VwPi5mb3JtLWNvbnRyb2wtcGxhaW50ZXh0Ky5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sLXBsYWludGV4dCsuZm9ybS1jb250cm9se21hcmdpbi1sZWZ0Oi0xcHh9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSAuY3VzdG9tLWZpbGUtaW5wdXQ6Zm9jdXN+LmN1c3RvbS1maWxlLWxhYmVsLC5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpmb2N1cywuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpmb2N1c3t6LWluZGV4OjN9LmlucHV0LWdyb3VwPi5jdXN0b20tZmlsZSAuY3VzdG9tLWZpbGUtaW5wdXQ6Zm9jdXN7ei1pbmRleDo0fS5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpub3QoOmxhc3QtY2hpbGQpLC5pbnB1dC1ncm91cD4uZm9ybS1jb250cm9sOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5pbnB1dC1ncm91cD4uY3VzdG9tLXNlbGVjdDpub3QoOmZpcnN0LWNoaWxkKSwuaW5wdXQtZ3JvdXA+LmZvcm0tY29udHJvbDpub3QoOmZpcnN0LWNoaWxkKXtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGV7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0uaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxlOm5vdCg6bGFzdC1jaGlsZCkgLmN1c3RvbS1maWxlLWxhYmVsLC5pbnB1dC1ncm91cD4uY3VzdG9tLWZpbGU6bm90KDpsYXN0LWNoaWxkKSAuY3VzdG9tLWZpbGUtbGFiZWw6OmFmdGVye2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6MH0uaW5wdXQtZ3JvdXA+LmN1c3RvbS1maWxlOm5vdCg6Zmlyc3QtY2hpbGQpIC5jdXN0b20tZmlsZS1sYWJlbHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5pbnB1dC1ncm91cC1hcHBlbmQsLmlucHV0LWdyb3VwLXByZXBlbmR7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmlucHV0LWdyb3VwLWFwcGVuZCAuYnRuLC5pbnB1dC1ncm91cC1wcmVwZW5kIC5idG57cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoyfS5pbnB1dC1ncm91cC1hcHBlbmQgLmJ0bjpmb2N1cywuaW5wdXQtZ3JvdXAtcHJlcGVuZCAuYnRuOmZvY3Vze3otaW5kZXg6M30uaW5wdXQtZ3JvdXAtYXBwZW5kIC5idG4rLmJ0biwuaW5wdXQtZ3JvdXAtYXBwZW5kIC5idG4rLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLWFwcGVuZCAuaW5wdXQtZ3JvdXAtdGV4dCsuYnRuLC5pbnB1dC1ncm91cC1hcHBlbmQgLmlucHV0LWdyb3VwLXRleHQrLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLXByZXBlbmQgLmJ0bisuYnRuLC5pbnB1dC1ncm91cC1wcmVwZW5kIC5idG4rLmlucHV0LWdyb3VwLXRleHQsLmlucHV0LWdyb3VwLXByZXBlbmQgLmlucHV0LWdyb3VwLXRleHQrLmJ0biwuaW5wdXQtZ3JvdXAtcHJlcGVuZCAuaW5wdXQtZ3JvdXAtdGV4dCsuaW5wdXQtZ3JvdXAtdGV4dHttYXJnaW4tbGVmdDotMXB4fS5pbnB1dC1ncm91cC1wcmVwZW5ke21hcmdpbi1yaWdodDotMXB4fS5pbnB1dC1ncm91cC1hcHBlbmR7bWFyZ2luLWxlZnQ6LTFweH0uaW5wdXQtZ3JvdXAtdGV4dHtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO3BhZGRpbmc6LjM3NXJlbSAuNzVyZW07bWFyZ2luLWJvdHRvbTowO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1Nzt0ZXh0LWFsaWduOmNlbnRlcjt3aGl0ZS1zcGFjZTpub3dyYXA7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlcjoxcHggc29saWQgI2NlZDRkYTtib3JkZXItcmFkaXVzOi4yNXJlbX0uaW5wdXQtZ3JvdXAtdGV4dCBpbnB1dFt0eXBlPWNoZWNrYm94XSwuaW5wdXQtZ3JvdXAtdGV4dCBpbnB1dFt0eXBlPXJhZGlvXXttYXJnaW4tdG9wOjB9LmlucHV0LWdyb3VwLWxnPi5jdXN0b20tc2VsZWN0LC5pbnB1dC1ncm91cC1sZz4uZm9ybS1jb250cm9sOm5vdCh0ZXh0YXJlYSl7aGVpZ2h0OmNhbGMoMS41ZW0gKyAxcmVtICsgMnB4KX0uaW5wdXQtZ3JvdXAtbGc+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwLWxnPi5mb3JtLWNvbnRyb2wsLmlucHV0LWdyb3VwLWxnPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLWFwcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXAtbGc+LmlucHV0LWdyb3VwLXByZXBlbmQ+LmlucHV0LWdyb3VwLXRleHR7cGFkZGluZzouNXJlbSAxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjEuNTtib3JkZXItcmFkaXVzOi4zcmVtfS5pbnB1dC1ncm91cC1zbT4uY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXAtc20+LmZvcm0tY29udHJvbDpub3QodGV4dGFyZWEpe2hlaWdodDpjYWxjKDEuNWVtICsgLjVyZW0gKyAycHgpfS5pbnB1dC1ncm91cC1zbT4uY3VzdG9tLXNlbGVjdCwuaW5wdXQtZ3JvdXAtc20+LmZvcm0tY29udHJvbCwuaW5wdXQtZ3JvdXAtc20+LmlucHV0LWdyb3VwLWFwcGVuZD4uYnRuLC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtYXBwZW5kPi5pbnB1dC1ncm91cC10ZXh0LC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uYnRuLC5pbnB1dC1ncm91cC1zbT4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dHtwYWRkaW5nOi4yNXJlbSAuNXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjU7Ym9yZGVyLXJhZGl1czouMnJlbX0uaW5wdXQtZ3JvdXAtbGc+LmN1c3RvbS1zZWxlY3QsLmlucHV0LWdyb3VwLXNtPi5jdXN0b20tc2VsZWN0e3BhZGRpbmctcmlnaHQ6MS43NXJlbX0uaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZDpsYXN0LWNoaWxkPi5idG46bm90KDpsYXN0LWNoaWxkKTpub3QoLmRyb3Bkb3duLXRvZ2dsZSksLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ6bGFzdC1jaGlsZD4uaW5wdXQtZ3JvdXAtdGV4dDpub3QoOmxhc3QtY2hpbGQpLC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtYXBwZW5kOm5vdCg6bGFzdC1jaGlsZCk+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZDpub3QoOmxhc3QtY2hpbGQpPi5pbnB1dC1ncm91cC10ZXh0LC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uYnRuLC5pbnB1dC1ncm91cD4uaW5wdXQtZ3JvdXAtcHJlcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjB9LmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1hcHBlbmQ+LmJ0biwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLWFwcGVuZD4uaW5wdXQtZ3JvdXAtdGV4dCwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ6Zmlyc3QtY2hpbGQ+LmJ0bjpub3QoOmZpcnN0LWNoaWxkKSwuaW5wdXQtZ3JvdXA+LmlucHV0LWdyb3VwLXByZXBlbmQ6Zmlyc3QtY2hpbGQ+LmlucHV0LWdyb3VwLXRleHQ6bm90KDpmaXJzdC1jaGlsZCksLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1wcmVwZW5kOm5vdCg6Zmlyc3QtY2hpbGQpPi5idG4sLmlucHV0LWdyb3VwPi5pbnB1dC1ncm91cC1wcmVwZW5kOm5vdCg6Zmlyc3QtY2hpbGQpPi5pbnB1dC1ncm91cC10ZXh0e2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmN1c3RvbS1jb250cm9se3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MTtkaXNwbGF5OmJsb2NrO21pbi1oZWlnaHQ6MS41cmVtO3BhZGRpbmctbGVmdDoxLjVyZW19LmN1c3RvbS1jb250cm9sLWlubGluZXtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveDtkaXNwbGF5OmlubGluZS1mbGV4O21hcmdpbi1yaWdodDoxcmVtfS5jdXN0b20tY29udHJvbC1pbnB1dHtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7ei1pbmRleDotMTt3aWR0aDoxcmVtO2hlaWdodDoxLjI1cmVtO29wYWNpdHk6MH0uY3VzdG9tLWNvbnRyb2wtaW5wdXQ6Y2hlY2tlZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtjb2xvcjojZmZmO2JvcmRlci1jb2xvcjojMDA3YmZmO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZn0uY3VzdG9tLWNvbnRyb2wtaW5wdXQ6Zm9jdXN+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuMjUpfS5jdXN0b20tY29udHJvbC1pbnB1dDpmb2N1czpub3QoOmNoZWNrZWQpfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1jb2xvcjojODBiZGZmfS5jdXN0b20tY29udHJvbC1pbnB1dDpub3QoOmRpc2FibGVkKTphY3RpdmV+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmY7Ym9yZGVyLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1jb250cm9sLWlucHV0OmRpc2FibGVkfi5jdXN0b20tY29udHJvbC1sYWJlbCwuY3VzdG9tLWNvbnRyb2wtaW5wdXRbZGlzYWJsZWRdfi5jdXN0b20tY29udHJvbC1sYWJlbHtjb2xvcjojNmM3NTdkfS5jdXN0b20tY29udHJvbC1pbnB1dDpkaXNhYmxlZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwuY3VzdG9tLWNvbnRyb2wtaW5wdXRbZGlzYWJsZWRdfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZn0uY3VzdG9tLWNvbnRyb2wtbGFiZWx7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLWJvdHRvbTowO3ZlcnRpY2FsLWFsaWduOnRvcH0uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LjI1cmVtO2xlZnQ6LTEuNXJlbTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07cG9pbnRlci1ldmVudHM6bm9uZTtjb250ZW50OlxcXCJcXFwiO2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6I2FkYjViZCBzb2xpZCAxcHh9LmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LjI1cmVtO2xlZnQ6LTEuNXJlbTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07Y29udGVudDpcXFwiXFxcIjtiYWNrZ3JvdW5kOm5vLXJlcGVhdCA1MCUvNTAlIDUwJX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JvcmRlci1yYWRpdXM6LjI1cmVtfS5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmNoZWNrZWR+LmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc4JyBoZWlnaHQ9JzgnIHZpZXdCb3g9JzAgMCA4IDgnJTNlJTNjcGF0aCBmaWxsPSclMjNmZmYnIGQ9J002LjU2NC43NWwtMy41OSAzLjYxMi0xLjUzOC0xLjU1TDAgNC4yNmwyLjk3NCAyLjk5TDggMi4xOTN6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW5kZXRlcm1pbmF0ZX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItY29sb3I6IzAwN2JmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmZ9LmN1c3RvbS1jaGVja2JveCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6aW5kZXRlcm1pbmF0ZX4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmFmdGVye2JhY2tncm91bmQtaW1hZ2U6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Zycgd2lkdGg9JzQnIGhlaWdodD0nNCcgdmlld0JveD0nMCAwIDQgNCclM2UlM2NwYXRoIHN0cm9rZT0nJTIzZmZmJyBkPSdNMCAyaDQnLyUzZSUzYy9zdmclM2VcXFwiKX0uY3VzdG9tLWNoZWNrYm94IC5jdXN0b20tY29udHJvbC1pbnB1dDpkaXNhYmxlZDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDEyMywyNTUsLjUpfS5jdXN0b20tY2hlY2tib3ggLmN1c3RvbS1jb250cm9sLWlucHV0OmRpc2FibGVkOmluZGV0ZXJtaW5hdGV+LmN1c3RvbS1jb250cm9sLWxhYmVsOjpiZWZvcmV7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMTIzLDI1NSwuNSl9LmN1c3RvbS1yYWRpbyAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtib3JkZXItcmFkaXVzOjUwJX0uY3VzdG9tLXJhZGlvIC5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMTInIGhlaWdodD0nMTInIHZpZXdCb3g9Jy00IC00IDggOCclM2UlM2NjaXJjbGUgcj0nMycgZmlsbD0nJTIzZmZmJy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmN1c3RvbS1yYWRpbyAuY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWQ6Y2hlY2tlZH4uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwxMjMsMjU1LC41KX0uY3VzdG9tLXN3aXRjaHtwYWRkaW5nLWxlZnQ6Mi4yNXJlbX0uY3VzdG9tLXN3aXRjaCAuY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZXtsZWZ0Oi0yLjI1cmVtO3dpZHRoOjEuNzVyZW07cG9pbnRlci1ldmVudHM6YWxsO2JvcmRlci1yYWRpdXM6LjVyZW19LmN1c3RvbS1zd2l0Y2ggLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcnt0b3A6Y2FsYyguMjVyZW0gKyAycHgpO2xlZnQ6Y2FsYygtMi4yNXJlbSArIDJweCk7d2lkdGg6Y2FsYygxcmVtIC0gNHB4KTtoZWlnaHQ6Y2FsYygxcmVtIC0gNHB4KTtiYWNrZ3JvdW5kLWNvbG9yOiNhZGI1YmQ7Ym9yZGVyLXJhZGl1czouNXJlbTt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQsLXdlYmtpdC10cmFuc2Zvcm0gLjE1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOnRyYW5zZm9ybSAuMTVzIGVhc2UtaW4tb3V0LGJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gLjE1cyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0LC13ZWJraXQtdHJhbnNmb3JtIC4xNXMgZWFzZS1pbi1vdXR9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOnJlZHVjZSl7LmN1c3RvbS1zd2l0Y2ggLmN1c3RvbS1jb250cm9sLWxhYmVsOjphZnRlcnt0cmFuc2l0aW9uOm5vbmV9fS5jdXN0b20tc3dpdGNoIC5jdXN0b20tY29udHJvbC1pbnB1dDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YWZ0ZXJ7YmFja2dyb3VuZC1jb2xvcjojZmZmOy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLjc1cmVtKTt0cmFuc2Zvcm06dHJhbnNsYXRlWCguNzVyZW0pfS5jdXN0b20tc3dpdGNoIC5jdXN0b20tY29udHJvbC1pbnB1dDpkaXNhYmxlZDpjaGVja2Vkfi5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3Jle2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDEyMywyNTUsLjUpfS5jdXN0b20tc2VsZWN0e2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjEwMCU7aGVpZ2h0OmNhbGMoMS41ZW0gKyAuNzVyZW0gKyAycHgpO3BhZGRpbmc6LjM3NXJlbSAxLjc1cmVtIC4zNzVyZW0gLjc1cmVtO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1Nzt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7YmFja2dyb3VuZDojZmZmIHVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSc0JyBoZWlnaHQ9JzUnIHZpZXdCb3g9JzAgMCA0IDUnJTNlJTNjcGF0aCBmaWxsPSclMjMzNDNhNDAnIGQ9J00yIDBMMCAyaDR6bTAgNUwwIDNoNHonLyUzZSUzYy9zdmclM2VcXFwiKSBuby1yZXBlYXQgcmlnaHQgLjc1cmVtIGNlbnRlci84cHggMTBweDtib3JkZXI6MXB4IHNvbGlkICNjZWQ0ZGE7Ym9yZGVyLXJhZGl1czouMjVyZW07LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfS5jdXN0b20tc2VsZWN0OmZvY3Vze2JvcmRlci1jb2xvcjojODBiZGZmO291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmN1c3RvbS1zZWxlY3Q6Zm9jdXM6Oi1tcy12YWx1ZXtjb2xvcjojNDk1MDU3O2JhY2tncm91bmQtY29sb3I6I2ZmZn0uY3VzdG9tLXNlbGVjdFttdWx0aXBsZV0sLmN1c3RvbS1zZWxlY3Rbc2l6ZV06bm90KFtzaXplPVxcXCIxXFxcIl0pe2hlaWdodDphdXRvO3BhZGRpbmctcmlnaHQ6Ljc1cmVtO2JhY2tncm91bmQtaW1hZ2U6bm9uZX0uY3VzdG9tLXNlbGVjdDpkaXNhYmxlZHtjb2xvcjojNmM3NTdkO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZn0uY3VzdG9tLXNlbGVjdDo6LW1zLWV4cGFuZHtkaXNwbGF5Om5vbmV9LmN1c3RvbS1zZWxlY3Q6LW1vei1mb2N1c3Jpbmd7Y29sb3I6dHJhbnNwYXJlbnQ7dGV4dC1zaGFkb3c6MCAwIDAgIzQ5NTA1N30uY3VzdG9tLXNlbGVjdC1zbXtoZWlnaHQ6Y2FsYygxLjVlbSArIC41cmVtICsgMnB4KTtwYWRkaW5nLXRvcDouMjVyZW07cGFkZGluZy1ib3R0b206LjI1cmVtO3BhZGRpbmctbGVmdDouNXJlbTtmb250LXNpemU6Ljg3NXJlbX0uY3VzdG9tLXNlbGVjdC1sZ3toZWlnaHQ6Y2FsYygxLjVlbSArIDFyZW0gKyAycHgpO3BhZGRpbmctdG9wOi41cmVtO3BhZGRpbmctYm90dG9tOi41cmVtO3BhZGRpbmctbGVmdDoxcmVtO2ZvbnQtc2l6ZToxLjI1cmVtfS5jdXN0b20tZmlsZXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtICsgMnB4KTttYXJnaW4tYm90dG9tOjB9LmN1c3RvbS1maWxlLWlucHV0e3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6Mjt3aWR0aDoxMDAlO2hlaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtICsgMnB4KTttYXJnaW46MDtvcGFjaXR5OjB9LmN1c3RvbS1maWxlLWlucHV0OmZvY3Vzfi5jdXN0b20tZmlsZS1sYWJlbHtib3JkZXItY29sb3I6IzgwYmRmZjtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoMCwxMjMsMjU1LC4yNSl9LmN1c3RvbS1maWxlLWlucHV0OmRpc2FibGVkfi5jdXN0b20tZmlsZS1sYWJlbCwuY3VzdG9tLWZpbGUtaW5wdXRbZGlzYWJsZWRdfi5jdXN0b20tZmlsZS1sYWJlbHtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWZ9LmN1c3RvbS1maWxlLWlucHV0OmxhbmcoZW4pfi5jdXN0b20tZmlsZS1sYWJlbDo6YWZ0ZXJ7Y29udGVudDpcXFwiQnJvd3NlXFxcIn0uY3VzdG9tLWZpbGUtaW5wdXR+LmN1c3RvbS1maWxlLWxhYmVsW2RhdGEtYnJvd3NlXTo6YWZ0ZXJ7Y29udGVudDphdHRyKGRhdGEtYnJvd3NlKX0uY3VzdG9tLWZpbGUtbGFiZWx7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtsZWZ0OjA7ei1pbmRleDoxO2hlaWdodDpjYWxjKDEuNWVtICsgLjc1cmVtICsgMnB4KTtwYWRkaW5nOi4zNzVyZW0gLjc1cmVtO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyOjFweCBzb2xpZCAjY2VkNGRhO2JvcmRlci1yYWRpdXM6LjI1cmVtfS5jdXN0b20tZmlsZS1sYWJlbDo6YWZ0ZXJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDtib3R0b206MDt6LWluZGV4OjM7ZGlzcGxheTpibG9jaztoZWlnaHQ6Y2FsYygxLjVlbSArIC43NXJlbSk7cGFkZGluZzouMzc1cmVtIC43NXJlbTtsaW5lLWhlaWdodDoxLjU7Y29sb3I6IzQ5NTA1Nztjb250ZW50OlxcXCJCcm93c2VcXFwiO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtib3JkZXItbGVmdDppbmhlcml0O2JvcmRlci1yYWRpdXM6MCAuMjVyZW0gLjI1cmVtIDB9LmN1c3RvbS1yYW5nZXt3aWR0aDoxMDAlO2hlaWdodDoxLjRyZW07cGFkZGluZzowO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfS5jdXN0b20tcmFuZ2U6Zm9jdXN7b3V0bGluZTowfS5jdXN0b20tcmFuZ2U6Zm9jdXM6Oi13ZWJraXQtc2xpZGVyLXRodW1ie2JveC1zaGFkb3c6MCAwIDAgMXB4ICNmZmYsMCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjI1KX0uY3VzdG9tLXJhbmdlOmZvY3VzOjotbW96LXJhbmdlLXRodW1ie2JveC1zaGFkb3c6MCAwIDAgMXB4ICNmZmYsMCAwIDAgLjJyZW0gcmdiYSgwLDEyMywyNTUsLjI1KX0uY3VzdG9tLXJhbmdlOmZvY3VzOjotbXMtdGh1bWJ7Ym94LXNoYWRvdzowIDAgMCAxcHggI2ZmZiwwIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuMjUpfS5jdXN0b20tcmFuZ2U6Oi1tb3otZm9jdXMtb3V0ZXJ7Ym9yZGVyOjB9LmN1c3RvbS1yYW5nZTo6LXdlYmtpdC1zbGlkZXItdGh1bWJ7d2lkdGg6MXJlbTtoZWlnaHQ6MXJlbTttYXJnaW4tdG9wOi0uMjVyZW07YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlcjowO2JvcmRlci1yYWRpdXM6MXJlbTstd2Via2l0LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQ7LXdlYmtpdC1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jdXN0b20tcmFuZ2U6Oi13ZWJraXQtc2xpZGVyLXRodW1iey13ZWJraXQtdHJhbnNpdGlvbjpub25lO3RyYW5zaXRpb246bm9uZX19LmN1c3RvbS1yYW5nZTo6LXdlYmtpdC1zbGlkZXItdGh1bWI6YWN0aXZle2JhY2tncm91bmQtY29sb3I6I2IzZDdmZn0uY3VzdG9tLXJhbmdlOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFja3t3aWR0aDoxMDAlO2hlaWdodDouNXJlbTtjb2xvcjp0cmFuc3BhcmVudDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNkZWUyZTY7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6MXJlbX0uY3VzdG9tLXJhbmdlOjotbW96LXJhbmdlLXRodW1ie3dpZHRoOjFyZW07aGVpZ2h0OjFyZW07YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmO2JvcmRlcjowO2JvcmRlci1yYWRpdXM6MXJlbTstbW96LXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQ7LW1vei1hcHBlYXJhbmNlOm5vbmU7YXBwZWFyYW5jZTpub25lfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jdXN0b20tcmFuZ2U6Oi1tb3otcmFuZ2UtdGh1bWJ7LW1vei10cmFuc2l0aW9uOm5vbmU7dHJhbnNpdGlvbjpub25lfX0uY3VzdG9tLXJhbmdlOjotbW96LXJhbmdlLXRodW1iOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1yYW5nZTo6LW1vei1yYW5nZS10cmFja3t3aWR0aDoxMDAlO2hlaWdodDouNXJlbTtjb2xvcjp0cmFuc3BhcmVudDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNkZWUyZTY7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6MXJlbX0uY3VzdG9tLXJhbmdlOjotbXMtdGh1bWJ7d2lkdGg6MXJlbTtoZWlnaHQ6MXJlbTttYXJnaW4tdG9wOjA7bWFyZ2luLXJpZ2h0Oi4ycmVtO21hcmdpbi1sZWZ0Oi4ycmVtO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjtib3JkZXI6MDtib3JkZXItcmFkaXVzOjFyZW07LW1zLXRyYW5zaXRpb246YmFja2dyb3VuZC1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJvcmRlci1jb2xvciAuMTVzIGVhc2UtaW4tb3V0LGJveC1zaGFkb3cgLjE1cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOmJhY2tncm91bmQtY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3JkZXItY29sb3IgLjE1cyBlYXNlLWluLW91dCxib3gtc2hhZG93IC4xNXMgZWFzZS1pbi1vdXQ7YXBwZWFyYW5jZTpub25lfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jdXN0b20tcmFuZ2U6Oi1tcy10aHVtYnstbXMtdHJhbnNpdGlvbjpub25lO3RyYW5zaXRpb246bm9uZX19LmN1c3RvbS1yYW5nZTo6LW1zLXRodW1iOmFjdGl2ZXtiYWNrZ3JvdW5kLWNvbG9yOiNiM2Q3ZmZ9LmN1c3RvbS1yYW5nZTo6LW1zLXRyYWNre3dpZHRoOjEwMCU7aGVpZ2h0Oi41cmVtO2NvbG9yOnRyYW5zcGFyZW50O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci13aWR0aDouNXJlbX0uY3VzdG9tLXJhbmdlOjotbXMtZmlsbC1sb3dlcntiYWNrZ3JvdW5kLWNvbG9yOiNkZWUyZTY7Ym9yZGVyLXJhZGl1czoxcmVtfS5jdXN0b20tcmFuZ2U6Oi1tcy1maWxsLXVwcGVye21hcmdpbi1yaWdodDoxNXB4O2JhY2tncm91bmQtY29sb3I6I2RlZTJlNjtib3JkZXItcmFkaXVzOjFyZW19LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LXdlYmtpdC1zbGlkZXItdGh1bWJ7YmFja2dyb3VuZC1jb2xvcjojYWRiNWJkfS5jdXN0b20tcmFuZ2U6ZGlzYWJsZWQ6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNre2N1cnNvcjpkZWZhdWx0fS5jdXN0b20tcmFuZ2U6ZGlzYWJsZWQ6Oi1tb3otcmFuZ2UtdGh1bWJ7YmFja2dyb3VuZC1jb2xvcjojYWRiNWJkfS5jdXN0b20tcmFuZ2U6ZGlzYWJsZWQ6Oi1tb3otcmFuZ2UtdHJhY2t7Y3Vyc29yOmRlZmF1bHR9LmN1c3RvbS1yYW5nZTpkaXNhYmxlZDo6LW1zLXRodW1ie2JhY2tncm91bmQtY29sb3I6I2FkYjViZH0uY3VzdG9tLWNvbnRyb2wtbGFiZWw6OmJlZm9yZSwuY3VzdG9tLWZpbGUtbGFiZWwsLmN1c3RvbS1zZWxlY3R7dHJhbnNpdGlvbjpiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jdXN0b20tY29udHJvbC1sYWJlbDo6YmVmb3JlLC5jdXN0b20tZmlsZS1sYWJlbCwuY3VzdG9tLXNlbGVjdHt0cmFuc2l0aW9uOm5vbmV9fS5uYXZ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwO3BhZGRpbmctbGVmdDowO21hcmdpbi1ib3R0b206MDtsaXN0LXN0eWxlOm5vbmV9Lm5hdi1saW5re2Rpc3BsYXk6YmxvY2s7cGFkZGluZzouNXJlbSAxcmVtfS5uYXYtbGluazpmb2N1cywubmF2LWxpbms6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdi1saW5rLmRpc2FibGVke2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZTtjdXJzb3I6ZGVmYXVsdH0ubmF2LXRhYnN7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZTJlNn0ubmF2LXRhYnMgLm5hdi1pdGVte21hcmdpbi1ib3R0b206LTFweH0ubmF2LXRhYnMgLm5hdi1saW5re2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW07Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtfS5uYXYtdGFicyAubmF2LWxpbms6Zm9jdXMsLm5hdi10YWJzIC5uYXYtbGluazpob3Zlcntib3JkZXItY29sb3I6I2U5ZWNlZiAjZTllY2VmICNkZWUyZTZ9Lm5hdi10YWJzIC5uYXYtbGluay5kaXNhYmxlZHtjb2xvcjojNmM3NTdkO2JhY2tncm91bmQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50fS5uYXYtdGFicyAubmF2LWl0ZW0uc2hvdyAubmF2LWxpbmssLm5hdi10YWJzIC5uYXYtbGluay5hY3RpdmV7Y29sb3I6IzQ5NTA1NztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiNkZWUyZTYgI2RlZTJlNiAjZmZmfS5uYXYtdGFicyAuZHJvcGRvd24tbWVudXttYXJnaW4tdG9wOi0xcHg7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lm5hdi1waWxscyAubmF2LWxpbmt7Ym9yZGVyLXJhZGl1czouMjVyZW19Lm5hdi1waWxscyAubmF2LWxpbmsuYWN0aXZlLC5uYXYtcGlsbHMgLnNob3c+Lm5hdi1saW5re2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfS5uYXYtZmlsbCAubmF2LWl0ZW0sLm5hdi1maWxsPi5uYXYtbGlua3stbXMtZmxleDoxIDEgYXV0bztmbGV4OjEgMSBhdXRvO3RleHQtYWxpZ246Y2VudGVyfS5uYXYtanVzdGlmaWVkIC5uYXYtaXRlbSwubmF2LWp1c3RpZmllZD4ubmF2LWxpbmt7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6MDtmbGV4LWJhc2lzOjA7LW1zLWZsZXgtcG9zaXRpdmU6MTtmbGV4LWdyb3c6MTt0ZXh0LWFsaWduOmNlbnRlcn0udGFiLWNvbnRlbnQ+LnRhYi1wYW5le2Rpc3BsYXk6bm9uZX0udGFiLWNvbnRlbnQ+LmFjdGl2ZXtkaXNwbGF5OmJsb2NrfS5uYXZiYXJ7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuO3BhZGRpbmc6LjVyZW0gMXJlbX0ubmF2YmFyIC5jb250YWluZXIsLm5hdmJhciAuY29udGFpbmVyLWZsdWlkLC5uYXZiYXIgLmNvbnRhaW5lci1sZywubmF2YmFyIC5jb250YWluZXItbWQsLm5hdmJhciAuY29udGFpbmVyLXNtLC5uYXZiYXIgLmNvbnRhaW5lci14bHtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59Lm5hdmJhci1icmFuZHtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXRvcDouMzEyNXJlbTtwYWRkaW5nLWJvdHRvbTouMzEyNXJlbTttYXJnaW4tcmlnaHQ6MXJlbTtmb250LXNpemU6MS4yNXJlbTtsaW5lLWhlaWdodDppbmhlcml0O3doaXRlLXNwYWNlOm5vd3JhcH0ubmF2YmFyLWJyYW5kOmZvY3VzLC5uYXZiYXItYnJhbmQ6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdmJhci1uYXZ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47cGFkZGluZy1sZWZ0OjA7bWFyZ2luLWJvdHRvbTowO2xpc3Qtc3R5bGU6bm9uZX0ubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowfS5uYXZiYXItbmF2IC5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOnN0YXRpYztmbG9hdDpub25lfS5uYXZiYXItdGV4dHtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXRvcDouNXJlbTtwYWRkaW5nLWJvdHRvbTouNXJlbX0ubmF2YmFyLWNvbGxhcHNley1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjEwMCU7ZmxleC1iYXNpczoxMDAlOy1tcy1mbGV4LXBvc2l0aXZlOjE7ZmxleC1ncm93OjE7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0ubmF2YmFyLXRvZ2dsZXJ7cGFkZGluZzouMjVyZW0gLjc1cmVtO2ZvbnQtc2l6ZToxLjI1cmVtO2xpbmUtaGVpZ2h0OjE7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MXB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1yYWRpdXM6LjI1cmVtfS5uYXZiYXItdG9nZ2xlcjpmb2N1cywubmF2YmFyLXRvZ2dsZXI6aG92ZXJ7dGV4dC1kZWNvcmF0aW9uOm5vbmV9Lm5hdmJhci10b2dnbGVyLWljb257ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MS41ZW07aGVpZ2h0OjEuNWVtO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjb250ZW50OlxcXCJcXFwiO2JhY2tncm91bmQ6bm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7YmFja2dyb3VuZC1zaXplOjEwMCUgMTAwJX1AbWVkaWEgKG1heC13aWR0aDo1NzUuOThweCl7Lm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXIteGx7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowfX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7Lm5hdmJhci1leHBhbmQtc217LW1zLWZsZXgtZmxvdzpyb3cgbm93cmFwO2ZsZXgtZmxvdzpyb3cgbm93cmFwOy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1uYXZ7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1uYXYgLmRyb3Bkb3duLW1lbnV7cG9zaXRpb246YWJzb2x1dGV9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1uYXYgLm5hdi1saW5re3BhZGRpbmctcmlnaHQ6LjVyZW07cGFkZGluZy1sZWZ0Oi41cmVtfS5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1mbHVpZCwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kLXNtPi5jb250YWluZXItbWQsLm5hdmJhci1leHBhbmQtc20+LmNvbnRhaW5lci1zbSwubmF2YmFyLWV4cGFuZC1zbT4uY29udGFpbmVyLXhsey1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9Lm5hdmJhci1leHBhbmQtc20gLm5hdmJhci1jb2xsYXBzZXtkaXNwbGF5Oi1tcy1mbGV4Ym94IWltcG9ydGFudDtkaXNwbGF5OmZsZXghaW1wb3J0YW50Oy1tcy1mbGV4LXByZWZlcnJlZC1zaXplOmF1dG87ZmxleC1iYXNpczphdXRvfS5uYXZiYXItZXhwYW5kLXNtIC5uYXZiYXItdG9nZ2xlcntkaXNwbGF5Om5vbmV9fUBtZWRpYSAobWF4LXdpZHRoOjc2Ny45OHB4KXsubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItZmx1aWQsLm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lci1sZywubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLW1kLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lci14bHtwYWRkaW5nLXJpZ2h0OjA7cGFkZGluZy1sZWZ0OjB9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsubmF2YmFyLWV4cGFuZC1tZHstbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLW5hdnstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLW5hdiAuZHJvcGRvd24tbWVudXtwb3NpdGlvbjphYnNvbHV0ZX0ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDouNXJlbTtwYWRkaW5nLWxlZnQ6LjVyZW19Lm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQtbWQ+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZC1tZD4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kLW1kPi5jb250YWluZXIteGx7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ubmF2YmFyLWV4cGFuZC1tZCAubmF2YmFyLWNvbGxhcHNle2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnQ7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6YXV0bztmbGV4LWJhc2lzOmF1dG99Lm5hdmJhci1leHBhbmQtbWQgLm5hdmJhci10b2dnbGVye2Rpc3BsYXk6bm9uZX19QG1lZGlhIChtYXgtd2lkdGg6OTkxLjk4cHgpey5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1mbHVpZCwubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXItbWQsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1zbSwubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLXhse3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5uYXZiYXItZXhwYW5kLWxney1tcy1mbGV4LWZsb3c6cm93IG5vd3JhcDtmbGV4LWZsb3c6cm93IG5vd3JhcDstbXMtZmxleC1wYWNrOnN0YXJ0O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0fS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItbmF2ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItbmF2IC5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOmFic29sdXRlfS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItbmF2IC5uYXYtbGlua3twYWRkaW5nLXJpZ2h0Oi41cmVtO3BhZGRpbmctbGVmdDouNXJlbX0ubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXItZmx1aWQsLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci1sZywubmF2YmFyLWV4cGFuZC1sZz4uY29udGFpbmVyLW1kLC5uYXZiYXItZXhwYW5kLWxnPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQtbGc+LmNvbnRhaW5lci14bHstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5uYXZiYXItZXhwYW5kLWxnIC5uYXZiYXItY29sbGFwc2V7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZC1sZyAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfX1AbWVkaWEgKG1heC13aWR0aDoxMTk5Ljk4cHgpey5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXIsLm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lci1mbHVpZCwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLWxnLC5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXItbWQsLm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lci1zbSwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLXhse3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsubmF2YmFyLWV4cGFuZC14bHstbXMtZmxleC1mbG93OnJvdyBub3dyYXA7ZmxleC1mbG93OnJvdyBub3dyYXA7LW1zLWZsZXgtcGFjazpzdGFydDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydH0ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLW5hdnstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvd30ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLW5hdiAuZHJvcGRvd24tbWVudXtwb3NpdGlvbjphYnNvbHV0ZX0ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLW5hdiAubmF2LWxpbmt7cGFkZGluZy1yaWdodDouNXJlbTtwYWRkaW5nLWxlZnQ6LjVyZW19Lm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQteGw+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZC14bD4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kLXhsPi5jb250YWluZXIteGx7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ubmF2YmFyLWV4cGFuZC14bCAubmF2YmFyLWNvbGxhcHNle2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnQ7LW1zLWZsZXgtcHJlZmVycmVkLXNpemU6YXV0bztmbGV4LWJhc2lzOmF1dG99Lm5hdmJhci1leHBhbmQteGwgLm5hdmJhci10b2dnbGVye2Rpc3BsYXk6bm9uZX19Lm5hdmJhci1leHBhbmR7LW1zLWZsZXgtZmxvdzpyb3cgbm93cmFwO2ZsZXgtZmxvdzpyb3cgbm93cmFwOy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnR9Lm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lciwubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLWZsdWlkLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXItbGcsLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci1tZCwubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLXNtLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXIteGx7cGFkZGluZy1yaWdodDowO3BhZGRpbmctbGVmdDowfS5uYXZiYXItZXhwYW5kIC5uYXZiYXItbmF2ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5uYXZiYXItZXhwYW5kIC5uYXZiYXItbmF2IC5kcm9wZG93bi1tZW51e3Bvc2l0aW9uOmFic29sdXRlfS5uYXZiYXItZXhwYW5kIC5uYXZiYXItbmF2IC5uYXYtbGlua3twYWRkaW5nLXJpZ2h0Oi41cmVtO3BhZGRpbmctbGVmdDouNXJlbX0ubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXItZmx1aWQsLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci1sZywubmF2YmFyLWV4cGFuZD4uY29udGFpbmVyLW1kLC5uYXZiYXItZXhwYW5kPi5jb250YWluZXItc20sLm5hdmJhci1leHBhbmQ+LmNvbnRhaW5lci14bHstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5uYXZiYXItZXhwYW5kIC5uYXZiYXItY29sbGFwc2V7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudDstbXMtZmxleC1wcmVmZXJyZWQtc2l6ZTphdXRvO2ZsZXgtYmFzaXM6YXV0b30ubmF2YmFyLWV4cGFuZCAubmF2YmFyLXRvZ2dsZXJ7ZGlzcGxheTpub25lfS5uYXZiYXItbGlnaHQgLm5hdmJhci1icmFuZHtjb2xvcjpyZ2JhKDAsMCwwLC45KX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItYnJhbmQ6Zm9jdXMsLm5hdmJhci1saWdodCAubmF2YmFyLWJyYW5kOmhvdmVye2NvbG9yOnJnYmEoMCwwLDAsLjkpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5re2NvbG9yOnJnYmEoMCwwLDAsLjUpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rOmZvY3VzLC5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rOmhvdmVye2NvbG9yOnJnYmEoMCwwLDAsLjcpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rLmRpc2FibGVke2NvbG9yOnJnYmEoMCwwLDAsLjMpfS5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLmFjdGl2ZT4ubmF2LWxpbmssLm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAubmF2LWxpbmsuYWN0aXZlLC5uYXZiYXItbGlnaHQgLm5hdmJhci1uYXYgLm5hdi1saW5rLnNob3csLm5hdmJhci1saWdodCAubmF2YmFyLW5hdiAuc2hvdz4ubmF2LWxpbmt7Y29sb3I6cmdiYSgwLDAsMCwuOSl9Lm5hdmJhci1saWdodCAubmF2YmFyLXRvZ2dsZXJ7Y29sb3I6cmdiYSgwLDAsMCwuNSk7Ym9yZGVyLWNvbG9yOnJnYmEoMCwwLDAsLjEpfS5uYXZiYXItbGlnaHQgLm5hdmJhci10b2dnbGVyLWljb257YmFja2dyb3VuZC1pbWFnZTp1cmwoXFxcImRhdGE6aW1hZ2Uvc3ZnK3htbCwlM2NzdmcgeG1sbnM9J2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyB3aWR0aD0nMzAnIGhlaWdodD0nMzAnIHZpZXdCb3g9JzAgMCAzMCAzMCclM2UlM2NwYXRoIHN0cm9rZT0ncmdiYSUyODAsIDAsIDAsIDAuNSUyOScgc3Ryb2tlLWxpbmVjYXA9J3JvdW5kJyBzdHJva2UtbWl0ZXJsaW1pdD0nMTAnIHN0cm9rZS13aWR0aD0nMicgZD0nTTQgN2gyMk00IDE1aDIyTTQgMjNoMjInLyUzZSUzYy9zdmclM2VcXFwiKX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItdGV4dHtjb2xvcjpyZ2JhKDAsMCwwLC41KX0ubmF2YmFyLWxpZ2h0IC5uYXZiYXItdGV4dCBhe2NvbG9yOnJnYmEoMCwwLDAsLjkpfS5uYXZiYXItbGlnaHQgLm5hdmJhci10ZXh0IGE6Zm9jdXMsLm5hdmJhci1saWdodCAubmF2YmFyLXRleHQgYTpob3Zlcntjb2xvcjpyZ2JhKDAsMCwwLC45KX0ubmF2YmFyLWRhcmsgLm5hdmJhci1icmFuZHtjb2xvcjojZmZmfS5uYXZiYXItZGFyayAubmF2YmFyLWJyYW5kOmZvY3VzLC5uYXZiYXItZGFyayAubmF2YmFyLWJyYW5kOmhvdmVye2NvbG9yOiNmZmZ9Lm5hdmJhci1kYXJrIC5uYXZiYXItbmF2IC5uYXYtbGlua3tjb2xvcjpyZ2JhKDI1NSwyNTUsMjU1LC41KX0ubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rOmZvY3VzLC5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbms6aG92ZXJ7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNzUpfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAubmF2LWxpbmsuZGlzYWJsZWR7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuMjUpfS5uYXZiYXItZGFyayAubmF2YmFyLW5hdiAuYWN0aXZlPi5uYXYtbGluaywubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rLmFjdGl2ZSwubmF2YmFyLWRhcmsgLm5hdmJhci1uYXYgLm5hdi1saW5rLnNob3csLm5hdmJhci1kYXJrIC5uYXZiYXItbmF2IC5zaG93Pi5uYXYtbGlua3tjb2xvcjojZmZmfS5uYXZiYXItZGFyayAubmF2YmFyLXRvZ2dsZXJ7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNSk7Ym9yZGVyLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjEpfS5uYXZiYXItZGFyayAubmF2YmFyLXRvZ2dsZXItaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHdpZHRoPSczMCcgaGVpZ2h0PSczMCcgdmlld0JveD0nMCAwIDMwIDMwJyUzZSUzY3BhdGggc3Ryb2tlPSdyZ2JhJTI4MjU1LCAyNTUsIDI1NSwgMC41JTI5JyBzdHJva2UtbGluZWNhcD0ncm91bmQnIHN0cm9rZS1taXRlcmxpbWl0PScxMCcgc3Ryb2tlLXdpZHRoPScyJyBkPSdNNCA3aDIyTTQgMTVoMjJNNCAyM2gyMicvJTNlJTNjL3N2ZyUzZVxcXCIpfS5uYXZiYXItZGFyayAubmF2YmFyLXRleHR7Y29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuNSl9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dCBhe2NvbG9yOiNmZmZ9Lm5hdmJhci1kYXJrIC5uYXZiYXItdGV4dCBhOmZvY3VzLC5uYXZiYXItZGFyayAubmF2YmFyLXRleHQgYTpob3Zlcntjb2xvcjojZmZmfS5jYXJke3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO21pbi13aWR0aDowO3dvcmQtd3JhcDpicmVhay13b3JkO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6Ym9yZGVyLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEyNSk7Ym9yZGVyLXJhZGl1czouMjVyZW19LmNhcmQ+aHJ7bWFyZ2luLXJpZ2h0OjA7bWFyZ2luLWxlZnQ6MH0uY2FyZD4ubGlzdC1ncm91cHtib3JkZXItdG9wOmluaGVyaXQ7Ym9yZGVyLWJvdHRvbTppbmhlcml0fS5jYXJkPi5saXN0LWdyb3VwOmZpcnN0LWNoaWxke2JvcmRlci10b3Atd2lkdGg6MDtib3JkZXItdG9wLWxlZnQtcmFkaXVzOmNhbGMoLjI1cmVtIC0gMXB4KTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czpjYWxjKC4yNXJlbSAtIDFweCl9LmNhcmQ+Lmxpc3QtZ3JvdXA6bGFzdC1jaGlsZHtib3JkZXItYm90dG9tLXdpZHRoOjA7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6Y2FsYyguMjVyZW0gLSAxcHgpO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6Y2FsYyguMjVyZW0gLSAxcHgpfS5jYXJkPi5jYXJkLWhlYWRlcisubGlzdC1ncm91cCwuY2FyZD4ubGlzdC1ncm91cCsuY2FyZC1mb290ZXJ7Ym9yZGVyLXRvcDowfS5jYXJkLWJvZHl7LW1zLWZsZXg6MSAxIGF1dG87ZmxleDoxIDEgYXV0bzttaW4taGVpZ2h0OjFweDtwYWRkaW5nOjEuMjVyZW19LmNhcmQtdGl0bGV7bWFyZ2luLWJvdHRvbTouNzVyZW19LmNhcmQtc3VidGl0bGV7bWFyZ2luLXRvcDotLjM3NXJlbTttYXJnaW4tYm90dG9tOjB9LmNhcmQtdGV4dDpsYXN0LWNoaWxke21hcmdpbi1ib3R0b206MH0uY2FyZC1saW5rOmhvdmVye3RleHQtZGVjb3JhdGlvbjpub25lfS5jYXJkLWxpbmsrLmNhcmQtbGlua3ttYXJnaW4tbGVmdDoxLjI1cmVtfS5jYXJkLWhlYWRlcntwYWRkaW5nOi43NXJlbSAxLjI1cmVtO21hcmdpbi1ib3R0b206MDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMCwwLDAsLjAzKTtib3JkZXItYm90dG9tOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4xMjUpfS5jYXJkLWhlYWRlcjpmaXJzdC1jaGlsZHtib3JkZXItcmFkaXVzOmNhbGMoLjI1cmVtIC0gMXB4KSBjYWxjKC4yNXJlbSAtIDFweCkgMCAwfS5jYXJkLWZvb3RlcntwYWRkaW5nOi43NXJlbSAxLjI1cmVtO2JhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMDMpO2JvcmRlci10b3A6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEyNSl9LmNhcmQtZm9vdGVyOmxhc3QtY2hpbGR7Ym9yZGVyLXJhZGl1czowIDAgY2FsYyguMjVyZW0gLSAxcHgpIGNhbGMoLjI1cmVtIC0gMXB4KX0uY2FyZC1oZWFkZXItdGFic3ttYXJnaW4tcmlnaHQ6LS42MjVyZW07bWFyZ2luLWJvdHRvbTotLjc1cmVtO21hcmdpbi1sZWZ0Oi0uNjI1cmVtO2JvcmRlci1ib3R0b206MH0uY2FyZC1oZWFkZXItcGlsbHN7bWFyZ2luLXJpZ2h0Oi0uNjI1cmVtO21hcmdpbi1sZWZ0Oi0uNjI1cmVtfS5jYXJkLWltZy1vdmVybGF5e3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3BhZGRpbmc6MS4yNXJlbTtib3JkZXItcmFkaXVzOmNhbGMoLjI1cmVtIC0gMXB4KX0uY2FyZC1pbWcsLmNhcmQtaW1nLWJvdHRvbSwuY2FyZC1pbWctdG9wey1tcy1mbGV4LW5lZ2F0aXZlOjA7ZmxleC1zaHJpbms6MDt3aWR0aDoxMDAlfS5jYXJkLWltZywuY2FyZC1pbWctdG9we2JvcmRlci10b3AtbGVmdC1yYWRpdXM6Y2FsYyguMjVyZW0gLSAxcHgpO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOmNhbGMoLjI1cmVtIC0gMXB4KX0uY2FyZC1pbWcsLmNhcmQtaW1nLWJvdHRvbXtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czpjYWxjKC4yNXJlbSAtIDFweCk7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czpjYWxjKC4yNXJlbSAtIDFweCl9LmNhcmQtZGVjayAuY2FyZHttYXJnaW4tYm90dG9tOjE1cHh9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5jYXJkLWRlY2t7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZmxvdzpyb3cgd3JhcDtmbGV4LWZsb3c6cm93IHdyYXA7bWFyZ2luLXJpZ2h0Oi0xNXB4O21hcmdpbi1sZWZ0Oi0xNXB4fS5jYXJkLWRlY2sgLmNhcmR7LW1zLWZsZXg6MSAwIDAlO2ZsZXg6MSAwIDAlO21hcmdpbi1yaWdodDoxNXB4O21hcmdpbi1ib3R0b206MDttYXJnaW4tbGVmdDoxNXB4fX0uY2FyZC1ncm91cD4uY2FyZHttYXJnaW4tYm90dG9tOjE1cHh9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5jYXJkLWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWZsb3c6cm93IHdyYXA7ZmxleC1mbG93OnJvdyB3cmFwfS5jYXJkLWdyb3VwPi5jYXJkey1tcy1mbGV4OjEgMCAwJTtmbGV4OjEgMCAwJTttYXJnaW4tYm90dG9tOjB9LmNhcmQtZ3JvdXA+LmNhcmQrLmNhcmR7bWFyZ2luLWxlZnQ6MDtib3JkZXItbGVmdDowfS5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCl7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MDtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCkgLmNhcmQtaGVhZGVyLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCkgLmNhcmQtaW1nLXRvcHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCkgLmNhcmQtZm9vdGVyLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6bGFzdC1jaGlsZCkgLmNhcmQtaW1nLWJvdHRvbXtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czowfS5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6Zmlyc3QtY2hpbGQpe2JvcmRlci10b3AtbGVmdC1yYWRpdXM6MDtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9LmNhcmQtZ3JvdXA+LmNhcmQ6bm90KDpmaXJzdC1jaGlsZCkgLmNhcmQtaGVhZGVyLC5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6Zmlyc3QtY2hpbGQpIC5jYXJkLWltZy10b3B7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czowfS5jYXJkLWdyb3VwPi5jYXJkOm5vdCg6Zmlyc3QtY2hpbGQpIC5jYXJkLWZvb3RlciwuY2FyZC1ncm91cD4uY2FyZDpub3QoOmZpcnN0LWNoaWxkKSAuY2FyZC1pbWctYm90dG9te2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH19LmNhcmQtY29sdW1ucyAuY2FyZHttYXJnaW4tYm90dG9tOi43NXJlbX1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmNhcmQtY29sdW1uc3std2Via2l0LWNvbHVtbi1jb3VudDozOy1tb3otY29sdW1uLWNvdW50OjM7Y29sdW1uLWNvdW50OjM7LXdlYmtpdC1jb2x1bW4tZ2FwOjEuMjVyZW07LW1vei1jb2x1bW4tZ2FwOjEuMjVyZW07Y29sdW1uLWdhcDoxLjI1cmVtO29ycGhhbnM6MTt3aWRvd3M6MX0uY2FyZC1jb2x1bW5zIC5jYXJke2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjEwMCV9fS5hY2NvcmRpb257b3ZlcmZsb3ctYW5jaG9yOm5vbmV9LmFjY29yZGlvbj4uY2FyZHtvdmVyZmxvdzpoaWRkZW59LmFjY29yZGlvbj4uY2FyZDpub3QoOmxhc3Qtb2YtdHlwZSl7Ym9yZGVyLWJvdHRvbTowO2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOjA7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czowfS5hY2NvcmRpb24+LmNhcmQ6bm90KDpmaXJzdC1vZi10eXBlKXtib3JkZXItdG9wLWxlZnQtcmFkaXVzOjA7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6MH0uYWNjb3JkaW9uPi5jYXJkPi5jYXJkLWhlYWRlcntib3JkZXItcmFkaXVzOjA7bWFyZ2luLWJvdHRvbTotMXB4fS5icmVhZGNydW1ie2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDtwYWRkaW5nOi43NXJlbSAxcmVtO21hcmdpbi1ib3R0b206MXJlbTtsaXN0LXN0eWxlOm5vbmU7YmFja2dyb3VuZC1jb2xvcjojZTllY2VmO2JvcmRlci1yYWRpdXM6LjI1cmVtfS5icmVhZGNydW1iLWl0ZW17ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXh9LmJyZWFkY3J1bWItaXRlbSsuYnJlYWRjcnVtYi1pdGVte3BhZGRpbmctbGVmdDouNXJlbX0uYnJlYWRjcnVtYi1pdGVtKy5icmVhZGNydW1iLWl0ZW06OmJlZm9yZXtkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nLXJpZ2h0Oi41cmVtO2NvbG9yOiM2Yzc1N2Q7Y29udGVudDpcXFwiL1xcXCJ9LmJyZWFkY3J1bWItaXRlbSsuYnJlYWRjcnVtYi1pdGVtOmhvdmVyOjpiZWZvcmV7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZX0uYnJlYWRjcnVtYi1pdGVtKy5icmVhZGNydW1iLWl0ZW06aG92ZXI6OmJlZm9yZXt0ZXh0LWRlY29yYXRpb246bm9uZX0uYnJlYWRjcnVtYi1pdGVtLmFjdGl2ZXtjb2xvcjojNmM3NTdkfS5wYWdpbmF0aW9ue2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O3BhZGRpbmctbGVmdDowO2xpc3Qtc3R5bGU6bm9uZTtib3JkZXItcmFkaXVzOi4yNXJlbX0ucGFnZS1saW5re3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7cGFkZGluZzouNXJlbSAuNzVyZW07bWFyZ2luLWxlZnQ6LTFweDtsaW5lLWhlaWdodDoxLjI1O2NvbG9yOiMwMDdiZmY7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgI2RlZTJlNn0ucGFnZS1saW5rOmhvdmVye3otaW5kZXg6Mjtjb2xvcjojMDA1NmIzO3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtib3JkZXItY29sb3I6I2RlZTJlNn0ucGFnZS1saW5rOmZvY3Vze3otaW5kZXg6MztvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuMjUpfS5wYWdlLWl0ZW06Zmlyc3QtY2hpbGQgLnBhZ2UtbGlua3ttYXJnaW4tbGVmdDowO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtfS5wYWdlLWl0ZW06bGFzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOi4yNXJlbTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czouMjVyZW19LnBhZ2UtaXRlbS5hY3RpdmUgLnBhZ2UtbGlua3t6LWluZGV4OjM7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmZ9LnBhZ2UtaXRlbS5kaXNhYmxlZCAucGFnZS1saW5re2NvbG9yOiM2Yzc1N2Q7cG9pbnRlci1ldmVudHM6bm9uZTtjdXJzb3I6YXV0bztiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Ym9yZGVyLWNvbG9yOiNkZWUyZTZ9LnBhZ2luYXRpb24tbGcgLnBhZ2UtbGlua3twYWRkaW5nOi43NXJlbSAxLjVyZW07Zm9udC1zaXplOjEuMjVyZW07bGluZS1oZWlnaHQ6MS41fS5wYWdpbmF0aW9uLWxnIC5wYWdlLWl0ZW06Zmlyc3QtY2hpbGQgLnBhZ2UtbGlua3tib3JkZXItdG9wLWxlZnQtcmFkaXVzOi4zcmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjNyZW19LnBhZ2luYXRpb24tbGcgLnBhZ2UtaXRlbTpsYXN0LWNoaWxkIC5wYWdlLWxpbmt7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjNyZW07Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6LjNyZW19LnBhZ2luYXRpb24tc20gLnBhZ2UtbGlua3twYWRkaW5nOi4yNXJlbSAuNXJlbTtmb250LXNpemU6Ljg3NXJlbTtsaW5lLWhlaWdodDoxLjV9LnBhZ2luYXRpb24tc20gLnBhZ2UtaXRlbTpmaXJzdC1jaGlsZCAucGFnZS1saW5re2JvcmRlci10b3AtbGVmdC1yYWRpdXM6LjJyZW07Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMnJlbX0ucGFnaW5hdGlvbi1zbSAucGFnZS1pdGVtOmxhc3QtY2hpbGQgLnBhZ2UtbGlua3tib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMnJlbTtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czouMnJlbX0uYmFkZ2V7ZGlzcGxheTppbmxpbmUtYmxvY2s7cGFkZGluZzouMjVlbSAuNGVtO2ZvbnQtc2l6ZTo3NSU7Zm9udC13ZWlnaHQ6NzAwO2xpbmUtaGVpZ2h0OjE7dGV4dC1hbGlnbjpjZW50ZXI7d2hpdGUtc3BhY2U6bm93cmFwO3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lO2JvcmRlci1yYWRpdXM6LjI1cmVtO3RyYW5zaXRpb246Y29sb3IgLjE1cyBlYXNlLWluLW91dCxiYWNrZ3JvdW5kLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm9yZGVyLWNvbG9yIC4xNXMgZWFzZS1pbi1vdXQsYm94LXNoYWRvdyAuMTVzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5iYWRnZXt0cmFuc2l0aW9uOm5vbmV9fWEuYmFkZ2U6Zm9jdXMsYS5iYWRnZTpob3Zlcnt0ZXh0LWRlY29yYXRpb246bm9uZX0uYmFkZ2U6ZW1wdHl7ZGlzcGxheTpub25lfS5idG4gLmJhZGdle3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDotMXB4fS5iYWRnZS1waWxse3BhZGRpbmctcmlnaHQ6LjZlbTtwYWRkaW5nLWxlZnQ6LjZlbTtib3JkZXItcmFkaXVzOjEwcmVtfS5iYWRnZS1wcmltYXJ5e2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmfWEuYmFkZ2UtcHJpbWFyeTpmb2N1cyxhLmJhZGdlLXByaW1hcnk6aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDYyY2N9YS5iYWRnZS1wcmltYXJ5LmZvY3VzLGEuYmFkZ2UtcHJpbWFyeTpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDAsMTIzLDI1NSwuNSl9LmJhZGdlLXNlY29uZGFyeXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzZjNzU3ZH1hLmJhZGdlLXNlY29uZGFyeTpmb2N1cyxhLmJhZGdlLXNlY29uZGFyeTpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzU0NWI2Mn1hLmJhZGdlLXNlY29uZGFyeS5mb2N1cyxhLmJhZGdlLXNlY29uZGFyeTpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDEwOCwxMTcsMTI1LC41KX0uYmFkZ2Utc3VjY2Vzc3tjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzI4YTc0NX1hLmJhZGdlLXN1Y2Nlc3M6Zm9jdXMsYS5iYWRnZS1zdWNjZXNzOmhvdmVye2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMWU3ZTM0fWEuYmFkZ2Utc3VjY2Vzcy5mb2N1cyxhLmJhZGdlLXN1Y2Nlc3M6Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSg0MCwxNjcsNjksLjUpfS5iYWRnZS1pbmZve2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMTdhMmI4fWEuYmFkZ2UtaW5mbzpmb2N1cyxhLmJhZGdlLWluZm86aG92ZXJ7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxMTdhOGJ9YS5iYWRnZS1pbmZvLmZvY3VzLGEuYmFkZ2UtaW5mbzpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIzLDE2MiwxODQsLjUpfS5iYWRnZS13YXJuaW5ne2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZmZjMTA3fWEuYmFkZ2Utd2FybmluZzpmb2N1cyxhLmJhZGdlLXdhcm5pbmc6aG92ZXJ7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNkMzllMDB9YS5iYWRnZS13YXJuaW5nLmZvY3VzLGEuYmFkZ2Utd2FybmluZzpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDI1NSwxOTMsNywuNSl9LmJhZGdlLWRhbmdlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2RjMzU0NX1hLmJhZGdlLWRhbmdlcjpmb2N1cyxhLmJhZGdlLWRhbmdlcjpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6I2JkMjEzMH1hLmJhZGdlLWRhbmdlci5mb2N1cyxhLmJhZGdlLWRhbmdlcjpmb2N1c3tvdXRsaW5lOjA7Ym94LXNoYWRvdzowIDAgMCAuMnJlbSByZ2JhKDIyMCw1Myw2OSwuNSl9LmJhZGdlLWxpZ2h0e2NvbG9yOiMyMTI1Mjk7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhfWEuYmFkZ2UtbGlnaHQ6Zm9jdXMsYS5iYWRnZS1saWdodDpob3Zlcntjb2xvcjojMjEyNTI5O2JhY2tncm91bmQtY29sb3I6I2RhZTBlNX1hLmJhZGdlLWxpZ2h0LmZvY3VzLGEuYmFkZ2UtbGlnaHQ6Zm9jdXN7b3V0bGluZTowO2JveC1zaGFkb3c6MCAwIDAgLjJyZW0gcmdiYSgyNDgsMjQ5LDI1MCwuNSl9LmJhZGdlLWRhcmt7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzNDNhNDB9YS5iYWRnZS1kYXJrOmZvY3VzLGEuYmFkZ2UtZGFyazpob3Zlcntjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzFkMjEyNH1hLmJhZGdlLWRhcmsuZm9jdXMsYS5iYWRnZS1kYXJrOmZvY3Vze291dGxpbmU6MDtib3gtc2hhZG93OjAgMCAwIC4ycmVtIHJnYmEoNTIsNTgsNjQsLjUpfS5qdW1ib3Ryb257cGFkZGluZzoycmVtIDFyZW07bWFyZ2luLWJvdHRvbToycmVtO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtib3JkZXItcmFkaXVzOi4zcmVtfUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsuanVtYm90cm9ue3BhZGRpbmc6NHJlbSAycmVtfX0uanVtYm90cm9uLWZsdWlke3BhZGRpbmctcmlnaHQ6MDtwYWRkaW5nLWxlZnQ6MDtib3JkZXItcmFkaXVzOjB9LmFsZXJ0e3Bvc2l0aW9uOnJlbGF0aXZlO3BhZGRpbmc6Ljc1cmVtIDEuMjVyZW07bWFyZ2luLWJvdHRvbToxcmVtO2JvcmRlcjoxcHggc29saWQgdHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czouMjVyZW19LmFsZXJ0LWhlYWRpbmd7Y29sb3I6aW5oZXJpdH0uYWxlcnQtbGlua3tmb250LXdlaWdodDo3MDB9LmFsZXJ0LWRpc21pc3NpYmxle3BhZGRpbmctcmlnaHQ6NHJlbX0uYWxlcnQtZGlzbWlzc2libGUgLmNsb3Nle3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7cGFkZGluZzouNzVyZW0gMS4yNXJlbTtjb2xvcjppbmhlcml0fS5hbGVydC1wcmltYXJ5e2NvbG9yOiMwMDQwODU7YmFja2dyb3VuZC1jb2xvcjojY2NlNWZmO2JvcmRlci1jb2xvcjojYjhkYWZmfS5hbGVydC1wcmltYXJ5IGhye2JvcmRlci10b3AtY29sb3I6IzlmY2RmZn0uYWxlcnQtcHJpbWFyeSAuYWxlcnQtbGlua3tjb2xvcjojMDAyNzUyfS5hbGVydC1zZWNvbmRhcnl7Y29sb3I6IzM4M2Q0MTtiYWNrZ3JvdW5kLWNvbG9yOiNlMmUzZTU7Ym9yZGVyLWNvbG9yOiNkNmQ4ZGJ9LmFsZXJ0LXNlY29uZGFyeSBocntib3JkZXItdG9wLWNvbG9yOiNjOGNiY2Z9LmFsZXJ0LXNlY29uZGFyeSAuYWxlcnQtbGlua3tjb2xvcjojMjAyMzI2fS5hbGVydC1zdWNjZXNze2NvbG9yOiMxNTU3MjQ7YmFja2dyb3VuZC1jb2xvcjojZDRlZGRhO2JvcmRlci1jb2xvcjojYzNlNmNifS5hbGVydC1zdWNjZXNzIGhye2JvcmRlci10b3AtY29sb3I6I2IxZGZiYn0uYWxlcnQtc3VjY2VzcyAuYWxlcnQtbGlua3tjb2xvcjojMGIyZTEzfS5hbGVydC1pbmZve2NvbG9yOiMwYzU0NjA7YmFja2dyb3VuZC1jb2xvcjojZDFlY2YxO2JvcmRlci1jb2xvcjojYmVlNWVifS5hbGVydC1pbmZvIGhye2JvcmRlci10b3AtY29sb3I6I2FiZGRlNX0uYWxlcnQtaW5mbyAuYWxlcnQtbGlua3tjb2xvcjojMDYyYzMzfS5hbGVydC13YXJuaW5ne2NvbG9yOiM4NTY0MDQ7YmFja2dyb3VuZC1jb2xvcjojZmZmM2NkO2JvcmRlci1jb2xvcjojZmZlZWJhfS5hbGVydC13YXJuaW5nIGhye2JvcmRlci10b3AtY29sb3I6I2ZmZThhMX0uYWxlcnQtd2FybmluZyAuYWxlcnQtbGlua3tjb2xvcjojNTMzZjAzfS5hbGVydC1kYW5nZXJ7Y29sb3I6IzcyMWMyNDtiYWNrZ3JvdW5kLWNvbG9yOiNmOGQ3ZGE7Ym9yZGVyLWNvbG9yOiNmNWM2Y2J9LmFsZXJ0LWRhbmdlciBocntib3JkZXItdG9wLWNvbG9yOiNmMWIwYjd9LmFsZXJ0LWRhbmdlciAuYWxlcnQtbGlua3tjb2xvcjojNDkxMjE3fS5hbGVydC1saWdodHtjb2xvcjojODE4MTgyO2JhY2tncm91bmQtY29sb3I6I2ZlZmVmZTtib3JkZXItY29sb3I6I2ZkZmRmZX0uYWxlcnQtbGlnaHQgaHJ7Ym9yZGVyLXRvcC1jb2xvcjojZWNlY2Y2fS5hbGVydC1saWdodCAuYWxlcnQtbGlua3tjb2xvcjojNjg2ODY4fS5hbGVydC1kYXJre2NvbG9yOiMxYjFlMjE7YmFja2dyb3VuZC1jb2xvcjojZDZkOGQ5O2JvcmRlci1jb2xvcjojYzZjOGNhfS5hbGVydC1kYXJrIGhye2JvcmRlci10b3AtY29sb3I6I2I5YmJiZX0uYWxlcnQtZGFyayAuYWxlcnQtbGlua3tjb2xvcjojMDQwNTA1fUAtd2Via2l0LWtleWZyYW1lcyBwcm9ncmVzcy1iYXItc3RyaXBlc3tmcm9te2JhY2tncm91bmQtcG9zaXRpb246MXJlbSAwfXRve2JhY2tncm91bmQtcG9zaXRpb246MCAwfX1Aa2V5ZnJhbWVzIHByb2dyZXNzLWJhci1zdHJpcGVze2Zyb217YmFja2dyb3VuZC1wb3NpdGlvbjoxcmVtIDB9dG97YmFja2dyb3VuZC1wb3NpdGlvbjowIDB9fS5wcm9ncmVzc3tkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDtoZWlnaHQ6MXJlbTtvdmVyZmxvdzpoaWRkZW47bGluZS1oZWlnaHQ6MDtmb250LXNpemU6Ljc1cmVtO2JhY2tncm91bmQtY29sb3I6I2U5ZWNlZjtib3JkZXItcmFkaXVzOi4yNXJlbX0ucHJvZ3Jlc3MtYmFye2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7b3ZlcmZsb3c6aGlkZGVuO2NvbG9yOiNmZmY7dGV4dC1hbGlnbjpjZW50ZXI7d2hpdGUtc3BhY2U6bm93cmFwO2JhY2tncm91bmQtY29sb3I6IzAwN2JmZjt0cmFuc2l0aW9uOndpZHRoIC42cyBlYXNlfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5wcm9ncmVzcy1iYXJ7dHJhbnNpdGlvbjpub25lfX0ucHJvZ3Jlc3MtYmFyLXN0cmlwZWR7YmFja2dyb3VuZC1pbWFnZTpsaW5lYXItZ3JhZGllbnQoNDVkZWcscmdiYSgyNTUsMjU1LDI1NSwuMTUpIDI1JSx0cmFuc3BhcmVudCAyNSUsdHJhbnNwYXJlbnQgNTAlLHJnYmEoMjU1LDI1NSwyNTUsLjE1KSA1MCUscmdiYSgyNTUsMjU1LDI1NSwuMTUpIDc1JSx0cmFuc3BhcmVudCA3NSUsdHJhbnNwYXJlbnQpO2JhY2tncm91bmQtc2l6ZToxcmVtIDFyZW19LnByb2dyZXNzLWJhci1hbmltYXRlZHstd2Via2l0LWFuaW1hdGlvbjpwcm9ncmVzcy1iYXItc3RyaXBlcyAxcyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOnByb2dyZXNzLWJhci1zdHJpcGVzIDFzIGxpbmVhciBpbmZpbml0ZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsucHJvZ3Jlc3MtYmFyLWFuaW1hdGVkey13ZWJraXQtYW5pbWF0aW9uOm5vbmU7YW5pbWF0aW9uOm5vbmV9fS5tZWRpYXtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fS5tZWRpYS1ib2R5ey1tcy1mbGV4OjE7ZmxleDoxfS5saXN0LWdyb3Vwe2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO3BhZGRpbmctbGVmdDowO21hcmdpbi1ib3R0b206MDtib3JkZXItcmFkaXVzOi4yNXJlbX0ubGlzdC1ncm91cC1pdGVtLWFjdGlvbnt3aWR0aDoxMDAlO2NvbG9yOiM0OTUwNTc7dGV4dC1hbGlnbjppbmhlcml0fS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3VzLC5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVye3otaW5kZXg6MTtjb2xvcjojNDk1MDU3O3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQtY29sb3I6I2Y4ZjlmYX0ubGlzdC1ncm91cC1pdGVtLWFjdGlvbjphY3RpdmV7Y29sb3I6IzIxMjUyOTtiYWNrZ3JvdW5kLWNvbG9yOiNlOWVjZWZ9Lmxpc3QtZ3JvdXAtaXRlbXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO3BhZGRpbmc6Ljc1cmVtIDEuMjVyZW07YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgcmdiYSgwLDAsMCwuMTI1KX0ubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci10b3AtbGVmdC1yYWRpdXM6aW5oZXJpdDtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czppbmhlcml0fS5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHtib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czppbmhlcml0O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6aW5oZXJpdH0ubGlzdC1ncm91cC1pdGVtLmRpc2FibGVkLC5saXN0LWdyb3VwLWl0ZW06ZGlzYWJsZWR7Y29sb3I6IzZjNzU3ZDtwb2ludGVyLWV2ZW50czpub25lO2JhY2tncm91bmQtY29sb3I6I2ZmZn0ubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXt6LWluZGV4OjI7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMwMDdiZmY7Ym9yZGVyLWNvbG9yOiMwMDdiZmZ9Lmxpc3QtZ3JvdXAtaXRlbSsubGlzdC1ncm91cC1pdGVte2JvcmRlci10b3Atd2lkdGg6MH0ubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle21hcmdpbi10b3A6LTFweDtib3JkZXItdG9wLXdpZHRoOjFweH0ubGlzdC1ncm91cC1ob3Jpem9udGFsey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5saXN0LWdyb3VwLWhvcml6b250YWw+Lmxpc3QtZ3JvdXAtaXRlbTpmaXJzdC1jaGlsZHtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4yNXJlbTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5saXN0LWdyb3VwLWhvcml6b250YWw+Lmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOi4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbD4ubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tdG9wOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbD4ubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXRvcC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsPi5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLWxlZnQ6LTFweDtib3JkZXItbGVmdC13aWR0aDoxcHh9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5saXN0LWdyb3VwLWhvcml6b250YWwtc217LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbT4ubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1zbT4ubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLXNtPi5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle21hcmdpbi10b3A6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLXNtPi5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbXtib3JkZXItdG9wLXdpZHRoOjFweDtib3JkZXItbGVmdC13aWR0aDowfS5saXN0LWdyb3VwLWhvcml6b250YWwtc20+Lmxpc3QtZ3JvdXAtaXRlbSsubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tbGVmdDotMXB4O2JvcmRlci1sZWZ0LXdpZHRoOjFweH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5saXN0LWdyb3VwLWhvcml6b250YWwtbWR7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZD4ubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1tZD4ubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLW1kPi5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle21hcmdpbi10b3A6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLW1kPi5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbXtib3JkZXItdG9wLXdpZHRoOjFweDtib3JkZXItbGVmdC13aWR0aDowfS5saXN0LWdyb3VwLWhvcml6b250YWwtbWQ+Lmxpc3QtZ3JvdXAtaXRlbSsubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tbGVmdDotMXB4O2JvcmRlci1sZWZ0LXdpZHRoOjFweH19QG1lZGlhIChtaW4td2lkdGg6OTkycHgpey5saXN0LWdyb3VwLWhvcml6b250YWwtbGd7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZz4ubGlzdC1ncm91cC1pdGVtOmZpcnN0LWNoaWxke2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC1sZz4ubGlzdC1ncm91cC1pdGVtOmxhc3QtY2hpbGR7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtO2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLWxnPi5saXN0LWdyb3VwLWl0ZW0uYWN0aXZle21hcmdpbi10b3A6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLWxnPi5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbXtib3JkZXItdG9wLXdpZHRoOjFweDtib3JkZXItbGVmdC13aWR0aDowfS5saXN0LWdyb3VwLWhvcml6b250YWwtbGc+Lmxpc3QtZ3JvdXAtaXRlbSsubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tbGVmdDotMXB4O2JvcmRlci1sZWZ0LXdpZHRoOjFweH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsubGlzdC1ncm91cC1ob3Jpem9udGFsLXhsey1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93fS5saXN0LWdyb3VwLWhvcml6b250YWwteGw+Lmxpc3QtZ3JvdXAtaXRlbTpmaXJzdC1jaGlsZHtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOi4yNXJlbTtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czowfS5saXN0LWdyb3VwLWhvcml6b250YWwteGw+Lmxpc3QtZ3JvdXAtaXRlbTpsYXN0LWNoaWxke2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOi4yNXJlbTtib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC14bD4ubGlzdC1ncm91cC1pdGVtLmFjdGl2ZXttYXJnaW4tdG9wOjB9Lmxpc3QtZ3JvdXAtaG9yaXpvbnRhbC14bD4ubGlzdC1ncm91cC1pdGVtKy5saXN0LWdyb3VwLWl0ZW17Ym9yZGVyLXRvcC13aWR0aDoxcHg7Ym9yZGVyLWxlZnQtd2lkdGg6MH0ubGlzdC1ncm91cC1ob3Jpem9udGFsLXhsPi5saXN0LWdyb3VwLWl0ZW0rLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmV7bWFyZ2luLWxlZnQ6LTFweDtib3JkZXItbGVmdC13aWR0aDoxcHh9fS5saXN0LWdyb3VwLWZsdXNoe2JvcmRlci1yYWRpdXM6MH0ubGlzdC1ncm91cC1mbHVzaD4ubGlzdC1ncm91cC1pdGVte2JvcmRlci13aWR0aDowIDAgMXB4fS5saXN0LWdyb3VwLWZsdXNoPi5saXN0LWdyb3VwLWl0ZW06bGFzdC1jaGlsZHtib3JkZXItYm90dG9tLXdpZHRoOjB9Lmxpc3QtZ3JvdXAtaXRlbS1wcmltYXJ5e2NvbG9yOiMwMDQwODU7YmFja2dyb3VuZC1jb2xvcjojYjhkYWZmfS5saXN0LWdyb3VwLWl0ZW0tcHJpbWFyeS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3VzLC5saXN0LWdyb3VwLWl0ZW0tcHJpbWFyeS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVye2NvbG9yOiMwMDQwODU7YmFja2dyb3VuZC1jb2xvcjojOWZjZGZmfS5saXN0LWdyb3VwLWl0ZW0tcHJpbWFyeS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzAwNDA4NTtib3JkZXItY29sb3I6IzAwNDA4NX0ubGlzdC1ncm91cC1pdGVtLXNlY29uZGFyeXtjb2xvcjojMzgzZDQxO2JhY2tncm91bmQtY29sb3I6I2Q2ZDhkYn0ubGlzdC1ncm91cC1pdGVtLXNlY29uZGFyeS5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3VzLC5saXN0LWdyb3VwLWl0ZW0tc2Vjb25kYXJ5Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXJ7Y29sb3I6IzM4M2Q0MTtiYWNrZ3JvdW5kLWNvbG9yOiNjOGNiY2Z9Lmxpc3QtZ3JvdXAtaXRlbS1zZWNvbmRhcnkubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMzODNkNDE7Ym9yZGVyLWNvbG9yOiMzODNkNDF9Lmxpc3QtZ3JvdXAtaXRlbS1zdWNjZXNze2NvbG9yOiMxNTU3MjQ7YmFja2dyb3VuZC1jb2xvcjojYzNlNmNifS5saXN0LWdyb3VwLWl0ZW0tc3VjY2Vzcy5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3VzLC5saXN0LWdyb3VwLWl0ZW0tc3VjY2Vzcy5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVye2NvbG9yOiMxNTU3MjQ7YmFja2dyb3VuZC1jb2xvcjojYjFkZmJifS5saXN0LWdyb3VwLWl0ZW0tc3VjY2Vzcy5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uLmFjdGl2ZXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzE1NTcyNDtib3JkZXItY29sb3I6IzE1NTcyNH0ubGlzdC1ncm91cC1pdGVtLWluZm97Y29sb3I6IzBjNTQ2MDtiYWNrZ3JvdW5kLWNvbG9yOiNiZWU1ZWJ9Lmxpc3QtZ3JvdXAtaXRlbS1pbmZvLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246Zm9jdXMsLmxpc3QtZ3JvdXAtaXRlbS1pbmZvLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb246aG92ZXJ7Y29sb3I6IzBjNTQ2MDtiYWNrZ3JvdW5kLWNvbG9yOiNhYmRkZTV9Lmxpc3QtZ3JvdXAtaXRlbS1pbmZvLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojMGM1NDYwO2JvcmRlci1jb2xvcjojMGM1NDYwfS5saXN0LWdyb3VwLWl0ZW0td2FybmluZ3tjb2xvcjojODU2NDA0O2JhY2tncm91bmQtY29sb3I6I2ZmZWViYX0ubGlzdC1ncm91cC1pdGVtLXdhcm5pbmcubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLXdhcm5pbmcubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcntjb2xvcjojODU2NDA0O2JhY2tncm91bmQtY29sb3I6I2ZmZThhMX0ubGlzdC1ncm91cC1pdGVtLXdhcm5pbmcubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM4NTY0MDQ7Ym9yZGVyLWNvbG9yOiM4NTY0MDR9Lmxpc3QtZ3JvdXAtaXRlbS1kYW5nZXJ7Y29sb3I6IzcyMWMyNDtiYWNrZ3JvdW5kLWNvbG9yOiNmNWM2Y2J9Lmxpc3QtZ3JvdXAtaXRlbS1kYW5nZXIubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLWRhbmdlci5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmhvdmVye2NvbG9yOiM3MjFjMjQ7YmFja2dyb3VuZC1jb2xvcjojZjFiMGI3fS5saXN0LWdyb3VwLWl0ZW0tZGFuZ2VyLmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojNzIxYzI0O2JvcmRlci1jb2xvcjojNzIxYzI0fS5saXN0LWdyb3VwLWl0ZW0tbGlnaHR7Y29sb3I6IzgxODE4MjtiYWNrZ3JvdW5kLWNvbG9yOiNmZGZkZmV9Lmxpc3QtZ3JvdXAtaXRlbS1saWdodC5saXN0LWdyb3VwLWl0ZW0tYWN0aW9uOmZvY3VzLC5saXN0LWdyb3VwLWl0ZW0tbGlnaHQubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcntjb2xvcjojODE4MTgyO2JhY2tncm91bmQtY29sb3I6I2VjZWNmNn0ubGlzdC1ncm91cC1pdGVtLWxpZ2h0Lmxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24uYWN0aXZle2NvbG9yOiNmZmY7YmFja2dyb3VuZC1jb2xvcjojODE4MTgyO2JvcmRlci1jb2xvcjojODE4MTgyfS5saXN0LWdyb3VwLWl0ZW0tZGFya3tjb2xvcjojMWIxZTIxO2JhY2tncm91bmQtY29sb3I6I2M2YzhjYX0ubGlzdC1ncm91cC1pdGVtLWRhcmsubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpmb2N1cywubGlzdC1ncm91cC1pdGVtLWRhcmsubGlzdC1ncm91cC1pdGVtLWFjdGlvbjpob3Zlcntjb2xvcjojMWIxZTIxO2JhY2tncm91bmQtY29sb3I6I2I5YmJiZX0ubGlzdC1ncm91cC1pdGVtLWRhcmsubGlzdC1ncm91cC1pdGVtLWFjdGlvbi5hY3RpdmV7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiMxYjFlMjE7Ym9yZGVyLWNvbG9yOiMxYjFlMjF9LmNsb3Nle2Zsb2F0OnJpZ2h0O2ZvbnQtc2l6ZToxLjVyZW07Zm9udC13ZWlnaHQ6NzAwO2xpbmUtaGVpZ2h0OjE7Y29sb3I6IzAwMDt0ZXh0LXNoYWRvdzowIDFweCAwICNmZmY7b3BhY2l0eTouNX0uY2xvc2U6aG92ZXJ7Y29sb3I6IzAwMDt0ZXh0LWRlY29yYXRpb246bm9uZX0uY2xvc2U6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6Zm9jdXMsLmNsb3NlOm5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmhvdmVye29wYWNpdHk6Ljc1fWJ1dHRvbi5jbG9zZXtwYWRkaW5nOjA7YmFja2dyb3VuZC1jb2xvcjp0cmFuc3BhcmVudDtib3JkZXI6MH1hLmNsb3NlLmRpc2FibGVke3BvaW50ZXItZXZlbnRzOm5vbmV9LnRvYXN0ey1tcy1mbGV4LXByZWZlcnJlZC1zaXplOjM1MHB4O2ZsZXgtYmFzaXM6MzUwcHg7bWF4LXdpZHRoOjM1MHB4O2ZvbnQtc2l6ZTouODc1cmVtO2JhY2tncm91bmQtY29sb3I6cmdiYSgyNTUsMjU1LDI1NSwuODUpO2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEpO2JveC1zaGFkb3c6MCAuMjVyZW0gLjc1cmVtIHJnYmEoMCwwLDAsLjEpO29wYWNpdHk6MDtib3JkZXItcmFkaXVzOi4yNXJlbX0udG9hc3Q6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOi43NXJlbX0udG9hc3Quc2hvd2luZ3tvcGFjaXR5OjF9LnRvYXN0LnNob3d7ZGlzcGxheTpibG9jaztvcGFjaXR5OjF9LnRvYXN0LmhpZGV7ZGlzcGxheTpub25lfS50b2FzdC1oZWFkZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtwYWRkaW5nOi4yNXJlbSAuNzVyZW07Y29sb3I6IzZjNzU3ZDtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjg1KTtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgcmdiYSgwLDAsMCwuMDUpO2JvcmRlci10b3AtbGVmdC1yYWRpdXM6Y2FsYyguMjVyZW0gLSAxcHgpO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOmNhbGMoLjI1cmVtIC0gMXB4KX0udG9hc3QtYm9keXtwYWRkaW5nOi43NXJlbX0ubW9kYWwtb3BlbntvdmVyZmxvdzpoaWRkZW59Lm1vZGFsLW9wZW4gLm1vZGFse292ZXJmbG93LXg6aGlkZGVuO292ZXJmbG93LXk6YXV0b30ubW9kYWx7cG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowO3otaW5kZXg6MTA1MDtkaXNwbGF5Om5vbmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdzpoaWRkZW47b3V0bGluZTowfS5tb2RhbC1kaWFsb2d7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6YXV0bzttYXJnaW46LjVyZW07cG9pbnRlci1ldmVudHM6bm9uZX0ubW9kYWwuZmFkZSAubW9kYWwtZGlhbG9ne3RyYW5zaXRpb246LXdlYmtpdC10cmFuc2Zvcm0gLjNzIGVhc2Utb3V0O3RyYW5zaXRpb246dHJhbnNmb3JtIC4zcyBlYXNlLW91dDt0cmFuc2l0aW9uOnRyYW5zZm9ybSAuM3MgZWFzZS1vdXQsLXdlYmtpdC10cmFuc2Zvcm0gLjNzIGVhc2Utb3V0Oy13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgwLC01MHB4KTt0cmFuc2Zvcm06dHJhbnNsYXRlKDAsLTUwcHgpfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5tb2RhbC5mYWRlIC5tb2RhbC1kaWFsb2d7dHJhbnNpdGlvbjpub25lfX0ubW9kYWwuc2hvdyAubW9kYWwtZGlhbG9ney13ZWJraXQtdHJhbnNmb3JtOm5vbmU7dHJhbnNmb3JtOm5vbmV9Lm1vZGFsLm1vZGFsLXN0YXRpYyAubW9kYWwtZGlhbG9ney13ZWJraXQtdHJhbnNmb3JtOnNjYWxlKDEuMDIpO3RyYW5zZm9ybTpzY2FsZSgxLjAyKX0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGV7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7bWF4LWhlaWdodDpjYWxjKDEwMCUgLSAxcmVtKX0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWNvbnRlbnR7bWF4LWhlaWdodDpjYWxjKDEwMHZoIC0gMXJlbSk7b3ZlcmZsb3c6aGlkZGVufS5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZSAubW9kYWwtZm9vdGVyLC5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZSAubW9kYWwtaGVhZGVyey1tcy1mbGV4LW5lZ2F0aXZlOjA7ZmxleC1zaHJpbms6MH0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWJvZHl7b3ZlcmZsb3cteTphdXRvfS5tb2RhbC1kaWFsb2ctY2VudGVyZWR7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjttaW4taGVpZ2h0OmNhbGMoMTAwJSAtIDFyZW0pfS5tb2RhbC1kaWFsb2ctY2VudGVyZWQ6OmJlZm9yZXtkaXNwbGF5OmJsb2NrO2hlaWdodDpjYWxjKDEwMHZoIC0gMXJlbSk7aGVpZ2h0Oi13ZWJraXQtbWluLWNvbnRlbnQ7aGVpZ2h0Oi1tb3otbWluLWNvbnRlbnQ7aGVpZ2h0Om1pbi1jb250ZW50O2NvbnRlbnQ6XFxcIlxcXCJ9Lm1vZGFsLWRpYWxvZy1jZW50ZXJlZC5tb2RhbC1kaWFsb2ctc2Nyb2xsYWJsZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2hlaWdodDoxMDAlfS5tb2RhbC1kaWFsb2ctY2VudGVyZWQubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWNvbnRlbnR7bWF4LWhlaWdodDpub25lfS5tb2RhbC1kaWFsb2ctY2VudGVyZWQubW9kYWwtZGlhbG9nLXNjcm9sbGFibGU6OmJlZm9yZXtjb250ZW50Om5vbmV9Lm1vZGFsLWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47d2lkdGg6MTAwJTtwb2ludGVyLWV2ZW50czphdXRvO2JhY2tncm91bmQtY29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNsaXA6cGFkZGluZy1ib3g7Ym9yZGVyOjFweCBzb2xpZCByZ2JhKDAsMCwwLC4yKTtib3JkZXItcmFkaXVzOi4zcmVtO291dGxpbmU6MH0ubW9kYWwtYmFja2Ryb3B7cG9zaXRpb246Zml4ZWQ7dG9wOjA7bGVmdDowO3otaW5kZXg6MTA0MDt3aWR0aDoxMDB2dztoZWlnaHQ6MTAwdmg7YmFja2dyb3VuZC1jb2xvcjojMDAwfS5tb2RhbC1iYWNrZHJvcC5mYWRle29wYWNpdHk6MH0ubW9kYWwtYmFja2Ryb3Auc2hvd3tvcGFjaXR5Oi41fS5tb2RhbC1oZWFkZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47cGFkZGluZzoxcmVtIDFyZW07Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2RlZTJlNjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOmNhbGMoLjNyZW0gLSAxcHgpO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOmNhbGMoLjNyZW0gLSAxcHgpfS5tb2RhbC1oZWFkZXIgLmNsb3Nle3BhZGRpbmc6MXJlbSAxcmVtO21hcmdpbjotMXJlbSAtMXJlbSAtMXJlbSBhdXRvfS5tb2RhbC10aXRsZXttYXJnaW4tYm90dG9tOjA7bGluZS1oZWlnaHQ6MS41fS5tb2RhbC1ib2R5e3Bvc2l0aW9uOnJlbGF0aXZlOy1tcy1mbGV4OjEgMSBhdXRvO2ZsZXg6MSAxIGF1dG87cGFkZGluZzoxcmVtfS5tb2RhbC1mb290ZXJ7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtcGFjazplbmQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kO3BhZGRpbmc6Ljc1cmVtO2JvcmRlci10b3A6MXB4IHNvbGlkICNkZWUyZTY7Ym9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6Y2FsYyguM3JlbSAtIDFweCk7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czpjYWxjKC4zcmVtIC0gMXB4KX0ubW9kYWwtZm9vdGVyPip7bWFyZ2luOi4yNXJlbX0ubW9kYWwtc2Nyb2xsYmFyLW1lYXN1cmV7cG9zaXRpb246YWJzb2x1dGU7dG9wOi05OTk5cHg7d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtvdmVyZmxvdzpzY3JvbGx9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5tb2RhbC1kaWFsb2d7bWF4LXdpZHRoOjUwMHB4O21hcmdpbjoxLjc1cmVtIGF1dG99Lm1vZGFsLWRpYWxvZy1zY3JvbGxhYmxle21heC1oZWlnaHQ6Y2FsYygxMDAlIC0gMy41cmVtKX0ubW9kYWwtZGlhbG9nLXNjcm9sbGFibGUgLm1vZGFsLWNvbnRlbnR7bWF4LWhlaWdodDpjYWxjKDEwMHZoIC0gMy41cmVtKX0ubW9kYWwtZGlhbG9nLWNlbnRlcmVke21pbi1oZWlnaHQ6Y2FsYygxMDAlIC0gMy41cmVtKX0ubW9kYWwtZGlhbG9nLWNlbnRlcmVkOjpiZWZvcmV7aGVpZ2h0OmNhbGMoMTAwdmggLSAzLjVyZW0pO2hlaWdodDotd2Via2l0LW1pbi1jb250ZW50O2hlaWdodDotbW96LW1pbi1jb250ZW50O2hlaWdodDptaW4tY29udGVudH0ubW9kYWwtc217bWF4LXdpZHRoOjMwMHB4fX1AbWVkaWEgKG1pbi13aWR0aDo5OTJweCl7Lm1vZGFsLWxnLC5tb2RhbC14bHttYXgtd2lkdGg6ODAwcHh9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7Lm1vZGFsLXhse21heC13aWR0aDoxMTQwcHh9fS50b29sdGlwe3Bvc2l0aW9uOmFic29sdXRlO3otaW5kZXg6MTA3MDtkaXNwbGF5OmJsb2NrO21hcmdpbjowO2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsXFxcIk5vdG8gU2Fuc1xcXCIsc2Fucy1zZXJpZixcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLFxcXCJTZWdvZSBVSSBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7dGV4dC1hbGlnbjpsZWZ0O3RleHQtYWxpZ246c3RhcnQ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC1zaGFkb3c6bm9uZTt0ZXh0LXRyYW5zZm9ybTpub25lO2xldHRlci1zcGFjaW5nOm5vcm1hbDt3b3JkLWJyZWFrOm5vcm1hbDt3b3JkLXNwYWNpbmc6bm9ybWFsO3doaXRlLXNwYWNlOm5vcm1hbDtsaW5lLWJyZWFrOmF1dG87Zm9udC1zaXplOi44NzVyZW07d29yZC13cmFwOmJyZWFrLXdvcmQ7b3BhY2l0eTowfS50b29sdGlwLnNob3d7b3BhY2l0eTouOX0udG9vbHRpcCAuYXJyb3d7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jazt3aWR0aDouOHJlbTtoZWlnaHQ6LjRyZW19LnRvb2x0aXAgLmFycm93OjpiZWZvcmV7cG9zaXRpb246YWJzb2x1dGU7Y29udGVudDpcXFwiXFxcIjtib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXN0eWxlOnNvbGlkfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePXRvcF0sLmJzLXRvb2x0aXAtdG9we3BhZGRpbmc6LjRyZW0gMH0uYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj10b3BdIC5hcnJvdywuYnMtdG9vbHRpcC10b3AgLmFycm93e2JvdHRvbTowfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePXRvcF0gLmFycm93OjpiZWZvcmUsLmJzLXRvb2x0aXAtdG9wIC5hcnJvdzo6YmVmb3Jle3RvcDowO2JvcmRlci13aWR0aDouNHJlbSAuNHJlbSAwO2JvcmRlci10b3AtY29sb3I6IzAwMH0uYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1yaWdodF0sLmJzLXRvb2x0aXAtcmlnaHR7cGFkZGluZzowIC40cmVtfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePXJpZ2h0XSAuYXJyb3csLmJzLXRvb2x0aXAtcmlnaHQgLmFycm93e2xlZnQ6MDt3aWR0aDouNHJlbTtoZWlnaHQ6LjhyZW19LmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49cmlnaHRdIC5hcnJvdzo6YmVmb3JlLC5icy10b29sdGlwLXJpZ2h0IC5hcnJvdzo6YmVmb3Jle3JpZ2h0OjA7Ym9yZGVyLXdpZHRoOi40cmVtIC40cmVtIC40cmVtIDA7Ym9yZGVyLXJpZ2h0LWNvbG9yOiMwMDB9LmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49Ym90dG9tXSwuYnMtdG9vbHRpcC1ib3R0b217cGFkZGluZzouNHJlbSAwfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0gLmFycm93LC5icy10b29sdGlwLWJvdHRvbSAuYXJyb3d7dG9wOjB9LmJzLXRvb2x0aXAtYXV0b1t4LXBsYWNlbWVudF49Ym90dG9tXSAuYXJyb3c6OmJlZm9yZSwuYnMtdG9vbHRpcC1ib3R0b20gLmFycm93OjpiZWZvcmV7Ym90dG9tOjA7Ym9yZGVyLXdpZHRoOjAgLjRyZW0gLjRyZW07Ym9yZGVyLWJvdHRvbS1jb2xvcjojMDAwfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePWxlZnRdLC5icy10b29sdGlwLWxlZnR7cGFkZGluZzowIC40cmVtfS5icy10b29sdGlwLWF1dG9beC1wbGFjZW1lbnRePWxlZnRdIC5hcnJvdywuYnMtdG9vbHRpcC1sZWZ0IC5hcnJvd3tyaWdodDowO3dpZHRoOi40cmVtO2hlaWdodDouOHJlbX0uYnMtdG9vbHRpcC1hdXRvW3gtcGxhY2VtZW50Xj1sZWZ0XSAuYXJyb3c6OmJlZm9yZSwuYnMtdG9vbHRpcC1sZWZ0IC5hcnJvdzo6YmVmb3Jle2xlZnQ6MDtib3JkZXItd2lkdGg6LjRyZW0gMCAuNHJlbSAuNHJlbTtib3JkZXItbGVmdC1jb2xvcjojMDAwfS50b29sdGlwLWlubmVye21heC13aWR0aDoyMDBweDtwYWRkaW5nOi4yNXJlbSAuNXJlbTtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQtY29sb3I6IzAwMDtib3JkZXItcmFkaXVzOi4yNXJlbX0ucG9wb3Zlcntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjA7ei1pbmRleDoxMDYwO2Rpc3BsYXk6YmxvY2s7bWF4LXdpZHRoOjI3NnB4O2ZvbnQtZmFtaWx5Oi1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LFxcXCJTZWdvZSBVSVxcXCIsUm9ib3RvLFxcXCJIZWx2ZXRpY2EgTmV1ZVxcXCIsQXJpYWwsXFxcIk5vdG8gU2Fuc1xcXCIsc2Fucy1zZXJpZixcXFwiQXBwbGUgQ29sb3IgRW1vamlcXFwiLFxcXCJTZWdvZSBVSSBFbW9qaVxcXCIsXFxcIlNlZ29lIFVJIFN5bWJvbFxcXCIsXFxcIk5vdG8gQ29sb3IgRW1vamlcXFwiO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OjQwMDtsaW5lLWhlaWdodDoxLjU7dGV4dC1hbGlnbjpsZWZ0O3RleHQtYWxpZ246c3RhcnQ7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC1zaGFkb3c6bm9uZTt0ZXh0LXRyYW5zZm9ybTpub25lO2xldHRlci1zcGFjaW5nOm5vcm1hbDt3b3JkLWJyZWFrOm5vcm1hbDt3b3JkLXNwYWNpbmc6bm9ybWFsO3doaXRlLXNwYWNlOm5vcm1hbDtsaW5lLWJyZWFrOmF1dG87Zm9udC1zaXplOi44NzVyZW07d29yZC13cmFwOmJyZWFrLXdvcmQ7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveDtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsLjIpO2JvcmRlci1yYWRpdXM6LjNyZW19LnBvcG92ZXIgLmFycm93e3Bvc2l0aW9uOmFic29sdXRlO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MXJlbTtoZWlnaHQ6LjVyZW07bWFyZ2luOjAgLjNyZW19LnBvcG92ZXIgLmFycm93OjphZnRlciwucG9wb3ZlciAuYXJyb3c6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlci1zdHlsZTpzb2xpZH0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdLC5icy1wb3BvdmVyLXRvcHttYXJnaW4tYm90dG9tOi41cmVtfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePXRvcF0+LmFycm93LC5icy1wb3BvdmVyLXRvcD4uYXJyb3d7Ym90dG9tOmNhbGMoLS41cmVtIC0gMXB4KX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdPi5hcnJvdzo6YmVmb3JlLC5icy1wb3BvdmVyLXRvcD4uYXJyb3c6OmJlZm9yZXtib3R0b206MDtib3JkZXItd2lkdGg6LjVyZW0gLjVyZW0gMDtib3JkZXItdG9wLWNvbG9yOnJnYmEoMCwwLDAsLjI1KX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdPi5hcnJvdzo6YWZ0ZXIsLmJzLXBvcG92ZXItdG9wPi5hcnJvdzo6YWZ0ZXJ7Ym90dG9tOjFweDtib3JkZXItd2lkdGg6LjVyZW0gLjVyZW0gMDtib3JkZXItdG9wLWNvbG9yOiNmZmZ9LmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49cmlnaHRdLC5icy1wb3BvdmVyLXJpZ2h0e21hcmdpbi1sZWZ0Oi41cmVtfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePXJpZ2h0XT4uYXJyb3csLmJzLXBvcG92ZXItcmlnaHQ+LmFycm93e2xlZnQ6Y2FsYygtLjVyZW0gLSAxcHgpO3dpZHRoOi41cmVtO2hlaWdodDoxcmVtO21hcmdpbjouM3JlbSAwfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePXJpZ2h0XT4uYXJyb3c6OmJlZm9yZSwuYnMtcG9wb3Zlci1yaWdodD4uYXJyb3c6OmJlZm9yZXtsZWZ0OjA7Ym9yZGVyLXdpZHRoOi41cmVtIC41cmVtIC41cmVtIDA7Ym9yZGVyLXJpZ2h0LWNvbG9yOnJnYmEoMCwwLDAsLjI1KX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1yaWdodF0+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1yaWdodD4uYXJyb3c6OmFmdGVye2xlZnQ6MXB4O2JvcmRlci13aWR0aDouNXJlbSAuNXJlbSAuNXJlbSAwO2JvcmRlci1yaWdodC1jb2xvcjojZmZmfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0sLmJzLXBvcG92ZXItYm90dG9te21hcmdpbi10b3A6LjVyZW19LmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49Ym90dG9tXT4uYXJyb3csLmJzLXBvcG92ZXItYm90dG9tPi5hcnJvd3t0b3A6Y2FsYygtLjVyZW0gLSAxcHgpfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0+LmFycm93OjpiZWZvcmUsLmJzLXBvcG92ZXItYm90dG9tPi5hcnJvdzo6YmVmb3Jle3RvcDowO2JvcmRlci13aWR0aDowIC41cmVtIC41cmVtIC41cmVtO2JvcmRlci1ib3R0b20tY29sb3I6cmdiYSgwLDAsMCwuMjUpfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWJvdHRvbV0+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1ib3R0b20+LmFycm93OjphZnRlcnt0b3A6MXB4O2JvcmRlci13aWR0aDowIC41cmVtIC41cmVtIC41cmVtO2JvcmRlci1ib3R0b20tY29sb3I6I2ZmZn0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1ib3R0b21dIC5wb3BvdmVyLWhlYWRlcjo6YmVmb3JlLC5icy1wb3BvdmVyLWJvdHRvbSAucG9wb3Zlci1oZWFkZXI6OmJlZm9yZXtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtsZWZ0OjUwJTtkaXNwbGF5OmJsb2NrO3dpZHRoOjFyZW07bWFyZ2luLWxlZnQ6LS41cmVtO2NvbnRlbnQ6XFxcIlxcXCI7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2Y3ZjdmN30uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1sZWZ0XSwuYnMtcG9wb3Zlci1sZWZ0e21hcmdpbi1yaWdodDouNXJlbX0uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj1sZWZ0XT4uYXJyb3csLmJzLXBvcG92ZXItbGVmdD4uYXJyb3d7cmlnaHQ6Y2FsYygtLjVyZW0gLSAxcHgpO3dpZHRoOi41cmVtO2hlaWdodDoxcmVtO21hcmdpbjouM3JlbSAwfS5icy1wb3BvdmVyLWF1dG9beC1wbGFjZW1lbnRePWxlZnRdPi5hcnJvdzo6YmVmb3JlLC5icy1wb3BvdmVyLWxlZnQ+LmFycm93OjpiZWZvcmV7cmlnaHQ6MDtib3JkZXItd2lkdGg6LjVyZW0gMCAuNXJlbSAuNXJlbTtib3JkZXItbGVmdC1jb2xvcjpyZ2JhKDAsMCwwLC4yNSl9LmJzLXBvcG92ZXItYXV0b1t4LXBsYWNlbWVudF49bGVmdF0+LmFycm93OjphZnRlciwuYnMtcG9wb3Zlci1sZWZ0Pi5hcnJvdzo6YWZ0ZXJ7cmlnaHQ6MXB4O2JvcmRlci13aWR0aDouNXJlbSAwIC41cmVtIC41cmVtO2JvcmRlci1sZWZ0LWNvbG9yOiNmZmZ9LnBvcG92ZXItaGVhZGVye3BhZGRpbmc6LjVyZW0gLjc1cmVtO21hcmdpbi1ib3R0b206MDtmb250LXNpemU6MXJlbTtiYWNrZ3JvdW5kLWNvbG9yOiNmN2Y3Zjc7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2ViZWJlYjtib3JkZXItdG9wLWxlZnQtcmFkaXVzOmNhbGMoLjNyZW0gLSAxcHgpO2JvcmRlci10b3AtcmlnaHQtcmFkaXVzOmNhbGMoLjNyZW0gLSAxcHgpfS5wb3BvdmVyLWhlYWRlcjplbXB0eXtkaXNwbGF5Om5vbmV9LnBvcG92ZXItYm9keXtwYWRkaW5nOi41cmVtIC43NXJlbTtjb2xvcjojMjEyNTI5fS5jYXJvdXNlbHtwb3NpdGlvbjpyZWxhdGl2ZX0uY2Fyb3VzZWwucG9pbnRlci1ldmVudHstbXMtdG91Y2gtYWN0aW9uOnBhbi15O3RvdWNoLWFjdGlvbjpwYW4teX0uY2Fyb3VzZWwtaW5uZXJ7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtvdmVyZmxvdzpoaWRkZW59LmNhcm91c2VsLWlubmVyOjphZnRlcntkaXNwbGF5OmJsb2NrO2NsZWFyOmJvdGg7Y29udGVudDpcXFwiXFxcIn0uY2Fyb3VzZWwtaXRlbXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Om5vbmU7ZmxvYXQ6bGVmdDt3aWR0aDoxMDAlO21hcmdpbi1yaWdodDotMTAwJTstd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6aGlkZGVuO2JhY2tmYWNlLXZpc2liaWxpdHk6aGlkZGVuO3RyYW5zaXRpb246LXdlYmtpdC10cmFuc2Zvcm0gLjZzIGVhc2UtaW4tb3V0O3RyYW5zaXRpb246dHJhbnNmb3JtIC42cyBlYXNlLWluLW91dDt0cmFuc2l0aW9uOnRyYW5zZm9ybSAuNnMgZWFzZS1pbi1vdXQsLXdlYmtpdC10cmFuc2Zvcm0gLjZzIGVhc2UtaW4tb3V0fUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jYXJvdXNlbC1pdGVte3RyYW5zaXRpb246bm9uZX19LmNhcm91c2VsLWl0ZW0tbmV4dCwuY2Fyb3VzZWwtaXRlbS1wcmV2LC5jYXJvdXNlbC1pdGVtLmFjdGl2ZXtkaXNwbGF5OmJsb2NrfS5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1yaWdodCwuY2Fyb3VzZWwtaXRlbS1uZXh0Om5vdCguY2Fyb3VzZWwtaXRlbS1sZWZ0KXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKDEwMCUpO3RyYW5zZm9ybTp0cmFuc2xhdGVYKDEwMCUpfS5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1pdGVtLXByZXY6bm90KC5jYXJvdXNlbC1pdGVtLXJpZ2h0KXstd2Via2l0LXRyYW5zZm9ybTp0cmFuc2xhdGVYKC0xMDAlKTt0cmFuc2Zvcm06dHJhbnNsYXRlWCgtMTAwJSl9LmNhcm91c2VsLWZhZGUgLmNhcm91c2VsLWl0ZW17b3BhY2l0eTowO3RyYW5zaXRpb24tcHJvcGVydHk6b3BhY2l0eTstd2Via2l0LXRyYW5zZm9ybTpub25lO3RyYW5zZm9ybTpub25lfS5jYXJvdXNlbC1mYWRlIC5jYXJvdXNlbC1pdGVtLW5leHQuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1mYWRlIC5jYXJvdXNlbC1pdGVtLXByZXYuY2Fyb3VzZWwtaXRlbS1yaWdodCwuY2Fyb3VzZWwtZmFkZSAuY2Fyb3VzZWwtaXRlbS5hY3RpdmV7ei1pbmRleDoxO29wYWNpdHk6MX0uY2Fyb3VzZWwtZmFkZSAuYWN0aXZlLmNhcm91c2VsLWl0ZW0tbGVmdCwuY2Fyb3VzZWwtZmFkZSAuYWN0aXZlLmNhcm91c2VsLWl0ZW0tcmlnaHR7ei1pbmRleDowO29wYWNpdHk6MDt0cmFuc2l0aW9uOm9wYWNpdHkgMHMgLjZzfUBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjpyZWR1Y2Upey5jYXJvdXNlbC1mYWRlIC5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1sZWZ0LC5jYXJvdXNlbC1mYWRlIC5hY3RpdmUuY2Fyb3VzZWwtaXRlbS1yaWdodHt0cmFuc2l0aW9uOm5vbmV9fS5jYXJvdXNlbC1jb250cm9sLW5leHQsLmNhcm91c2VsLWNvbnRyb2wtcHJldntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDt6LWluZGV4OjE7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3dpZHRoOjE1JTtjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO29wYWNpdHk6LjU7dHJhbnNpdGlvbjpvcGFjaXR5IC4xNXMgZWFzZX1AbWVkaWEgKHByZWZlcnMtcmVkdWNlZC1tb3Rpb246cmVkdWNlKXsuY2Fyb3VzZWwtY29udHJvbC1uZXh0LC5jYXJvdXNlbC1jb250cm9sLXByZXZ7dHJhbnNpdGlvbjpub25lfX0uY2Fyb3VzZWwtY29udHJvbC1uZXh0OmZvY3VzLC5jYXJvdXNlbC1jb250cm9sLW5leHQ6aG92ZXIsLmNhcm91c2VsLWNvbnRyb2wtcHJldjpmb2N1cywuY2Fyb3VzZWwtY29udHJvbC1wcmV2OmhvdmVye2NvbG9yOiNmZmY7dGV4dC1kZWNvcmF0aW9uOm5vbmU7b3V0bGluZTowO29wYWNpdHk6Ljl9LmNhcm91c2VsLWNvbnRyb2wtcHJldntsZWZ0OjB9LmNhcm91c2VsLWNvbnRyb2wtbmV4dHtyaWdodDowfS5jYXJvdXNlbC1jb250cm9sLW5leHQtaWNvbiwuY2Fyb3VzZWwtY29udHJvbC1wcmV2LWljb257ZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MjBweDtoZWlnaHQ6MjBweDtiYWNrZ3JvdW5kOm5vLXJlcGVhdCA1MCUvMTAwJSAxMDAlfS5jYXJvdXNlbC1jb250cm9sLXByZXYtaWNvbntiYWNrZ3JvdW5kLWltYWdlOnVybChcXFwiZGF0YTppbWFnZS9zdmcreG1sLCUzY3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIGZpbGw9JyUyM2ZmZicgd2lkdGg9JzgnIGhlaWdodD0nOCcgdmlld0JveD0nMCAwIDggOCclM2UlM2NwYXRoIGQ9J001LjI1IDBsLTQgNCA0IDQgMS41LTEuNUw0LjI1IDRsMi41LTIuNUw1LjI1IDB6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmNhcm91c2VsLWNvbnRyb2wtbmV4dC1pY29ue2JhY2tncm91bmQtaW1hZ2U6dXJsKFxcXCJkYXRhOmltYWdlL3N2Zyt4bWwsJTNjc3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgZmlsbD0nJTIzZmZmJyB3aWR0aD0nOCcgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgOCA4JyUzZSUzY3BhdGggZD0nTTIuNzUgMGwtMS41IDEuNUwzLjc1IDRsLTIuNSAyLjVMMi43NSA4bDQtNC00LTR6Jy8lM2UlM2Mvc3ZnJTNlXFxcIil9LmNhcm91c2VsLWluZGljYXRvcnN7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxNTtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3BhZGRpbmctbGVmdDowO21hcmdpbi1yaWdodDoxNSU7bWFyZ2luLWxlZnQ6MTUlO2xpc3Qtc3R5bGU6bm9uZX0uY2Fyb3VzZWwtaW5kaWNhdG9ycyBsaXtib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tcy1mbGV4OjAgMSBhdXRvO2ZsZXg6MCAxIGF1dG87d2lkdGg6MzBweDtoZWlnaHQ6M3B4O21hcmdpbi1yaWdodDozcHg7bWFyZ2luLWxlZnQ6M3B4O3RleHQtaW5kZW50Oi05OTlweDtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7YmFja2dyb3VuZC1jbGlwOnBhZGRpbmctYm94O2JvcmRlci10b3A6MTBweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItYm90dG9tOjEwcHggc29saWQgdHJhbnNwYXJlbnQ7b3BhY2l0eTouNTt0cmFuc2l0aW9uOm9wYWNpdHkgLjZzIGVhc2V9QG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOnJlZHVjZSl7LmNhcm91c2VsLWluZGljYXRvcnMgbGl7dHJhbnNpdGlvbjpub25lfX0uY2Fyb3VzZWwtaW5kaWNhdG9ycyAuYWN0aXZle29wYWNpdHk6MX0uY2Fyb3VzZWwtY2FwdGlvbntwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDoxNSU7Ym90dG9tOjIwcHg7bGVmdDoxNSU7ei1pbmRleDoxMDtwYWRkaW5nLXRvcDoyMHB4O3BhZGRpbmctYm90dG9tOjIwcHg7Y29sb3I6I2ZmZjt0ZXh0LWFsaWduOmNlbnRlcn1ALXdlYmtpdC1rZXlmcmFtZXMgc3Bpbm5lci1ib3JkZXJ7dG97LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKDM2MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpfX1Aa2V5ZnJhbWVzIHNwaW5uZXItYm9yZGVye3Rvey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgzNjBkZWcpO3RyYW5zZm9ybTpyb3RhdGUoMzYwZGVnKX19LnNwaW5uZXItYm9yZGVye2Rpc3BsYXk6aW5saW5lLWJsb2NrO3dpZHRoOjJyZW07aGVpZ2h0OjJyZW07dmVydGljYWwtYWxpZ246dGV4dC1ib3R0b207Ym9yZGVyOi4yNWVtIHNvbGlkIGN1cnJlbnRDb2xvcjtib3JkZXItcmlnaHQtY29sb3I6dHJhbnNwYXJlbnQ7Ym9yZGVyLXJhZGl1czo1MCU7LXdlYmtpdC1hbmltYXRpb246c3Bpbm5lci1ib3JkZXIgLjc1cyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOnNwaW5uZXItYm9yZGVyIC43NXMgbGluZWFyIGluZmluaXRlfS5zcGlubmVyLWJvcmRlci1zbXt3aWR0aDoxcmVtO2hlaWdodDoxcmVtO2JvcmRlci13aWR0aDouMmVtfUAtd2Via2l0LWtleWZyYW1lcyBzcGlubmVyLWdyb3d7MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06bm9uZTt0cmFuc2Zvcm06bm9uZX19QGtleWZyYW1lcyBzcGlubmVyLWdyb3d7MCV7LXdlYmtpdC10cmFuc2Zvcm06c2NhbGUoMCk7dHJhbnNmb3JtOnNjYWxlKDApfTUwJXtvcGFjaXR5OjE7LXdlYmtpdC10cmFuc2Zvcm06bm9uZTt0cmFuc2Zvcm06bm9uZX19LnNwaW5uZXItZ3Jvd3tkaXNwbGF5OmlubGluZS1ibG9jazt3aWR0aDoycmVtO2hlaWdodDoycmVtO3ZlcnRpY2FsLWFsaWduOnRleHQtYm90dG9tO2JhY2tncm91bmQtY29sb3I6Y3VycmVudENvbG9yO2JvcmRlci1yYWRpdXM6NTAlO29wYWNpdHk6MDstd2Via2l0LWFuaW1hdGlvbjpzcGlubmVyLWdyb3cgLjc1cyBsaW5lYXIgaW5maW5pdGU7YW5pbWF0aW9uOnNwaW5uZXItZ3JvdyAuNzVzIGxpbmVhciBpbmZpbml0ZX0uc3Bpbm5lci1ncm93LXNte3dpZHRoOjFyZW07aGVpZ2h0OjFyZW19LmFsaWduLWJhc2VsaW5le3ZlcnRpY2FsLWFsaWduOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24tdG9we3ZlcnRpY2FsLWFsaWduOnRvcCFpbXBvcnRhbnR9LmFsaWduLW1pZGRsZXt2ZXJ0aWNhbC1hbGlnbjptaWRkbGUhaW1wb3J0YW50fS5hbGlnbi1ib3R0b217dmVydGljYWwtYWxpZ246Ym90dG9tIWltcG9ydGFudH0uYWxpZ24tdGV4dC1ib3R0b217dmVydGljYWwtYWxpZ246dGV4dC1ib3R0b20haW1wb3J0YW50fS5hbGlnbi10ZXh0LXRvcHt2ZXJ0aWNhbC1hbGlnbjp0ZXh0LXRvcCFpbXBvcnRhbnR9LmJnLXByaW1hcnl7YmFja2dyb3VuZC1jb2xvcjojMDA3YmZmIWltcG9ydGFudH1hLmJnLXByaW1hcnk6Zm9jdXMsYS5iZy1wcmltYXJ5OmhvdmVyLGJ1dHRvbi5iZy1wcmltYXJ5OmZvY3VzLGJ1dHRvbi5iZy1wcmltYXJ5OmhvdmVye2JhY2tncm91bmQtY29sb3I6IzAwNjJjYyFpbXBvcnRhbnR9LmJnLXNlY29uZGFyeXtiYWNrZ3JvdW5kLWNvbG9yOiM2Yzc1N2QhaW1wb3J0YW50fWEuYmctc2Vjb25kYXJ5OmZvY3VzLGEuYmctc2Vjb25kYXJ5OmhvdmVyLGJ1dHRvbi5iZy1zZWNvbmRhcnk6Zm9jdXMsYnV0dG9uLmJnLXNlY29uZGFyeTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiM1NDViNjIhaW1wb3J0YW50fS5iZy1zdWNjZXNze2JhY2tncm91bmQtY29sb3I6IzI4YTc0NSFpbXBvcnRhbnR9YS5iZy1zdWNjZXNzOmZvY3VzLGEuYmctc3VjY2Vzczpob3ZlcixidXR0b24uYmctc3VjY2Vzczpmb2N1cyxidXR0b24uYmctc3VjY2Vzczpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiMxZTdlMzQhaW1wb3J0YW50fS5iZy1pbmZve2JhY2tncm91bmQtY29sb3I6IzE3YTJiOCFpbXBvcnRhbnR9YS5iZy1pbmZvOmZvY3VzLGEuYmctaW5mbzpob3ZlcixidXR0b24uYmctaW5mbzpmb2N1cyxidXR0b24uYmctaW5mbzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiMxMTdhOGIhaW1wb3J0YW50fS5iZy13YXJuaW5ne2JhY2tncm91bmQtY29sb3I6I2ZmYzEwNyFpbXBvcnRhbnR9YS5iZy13YXJuaW5nOmZvY3VzLGEuYmctd2FybmluZzpob3ZlcixidXR0b24uYmctd2FybmluZzpmb2N1cyxidXR0b24uYmctd2FybmluZzpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNkMzllMDAhaW1wb3J0YW50fS5iZy1kYW5nZXJ7YmFja2dyb3VuZC1jb2xvcjojZGMzNTQ1IWltcG9ydGFudH1hLmJnLWRhbmdlcjpmb2N1cyxhLmJnLWRhbmdlcjpob3ZlcixidXR0b24uYmctZGFuZ2VyOmZvY3VzLGJ1dHRvbi5iZy1kYW5nZXI6aG92ZXJ7YmFja2dyb3VuZC1jb2xvcjojYmQyMTMwIWltcG9ydGFudH0uYmctbGlnaHR7YmFja2dyb3VuZC1jb2xvcjojZjhmOWZhIWltcG9ydGFudH1hLmJnLWxpZ2h0OmZvY3VzLGEuYmctbGlnaHQ6aG92ZXIsYnV0dG9uLmJnLWxpZ2h0OmZvY3VzLGJ1dHRvbi5iZy1saWdodDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNkYWUwZTUhaW1wb3J0YW50fS5iZy1kYXJre2JhY2tncm91bmQtY29sb3I6IzM0M2E0MCFpbXBvcnRhbnR9YS5iZy1kYXJrOmZvY3VzLGEuYmctZGFyazpob3ZlcixidXR0b24uYmctZGFyazpmb2N1cyxidXR0b24uYmctZGFyazpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiMxZDIxMjQhaW1wb3J0YW50fS5iZy13aGl0ZXtiYWNrZ3JvdW5kLWNvbG9yOiNmZmYhaW1wb3J0YW50fS5iZy10cmFuc3BhcmVudHtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50IWltcG9ydGFudH0uYm9yZGVye2JvcmRlcjoxcHggc29saWQgI2RlZTJlNiFpbXBvcnRhbnR9LmJvcmRlci10b3B7Ym9yZGVyLXRvcDoxcHggc29saWQgI2RlZTJlNiFpbXBvcnRhbnR9LmJvcmRlci1yaWdodHtib3JkZXItcmlnaHQ6MXB4IHNvbGlkICNkZWUyZTYhaW1wb3J0YW50fS5ib3JkZXItYm90dG9te2JvcmRlci1ib3R0b206MXB4IHNvbGlkICNkZWUyZTYhaW1wb3J0YW50fS5ib3JkZXItbGVmdHtib3JkZXItbGVmdDoxcHggc29saWQgI2RlZTJlNiFpbXBvcnRhbnR9LmJvcmRlci0we2JvcmRlcjowIWltcG9ydGFudH0uYm9yZGVyLXRvcC0we2JvcmRlci10b3A6MCFpbXBvcnRhbnR9LmJvcmRlci1yaWdodC0we2JvcmRlci1yaWdodDowIWltcG9ydGFudH0uYm9yZGVyLWJvdHRvbS0we2JvcmRlci1ib3R0b206MCFpbXBvcnRhbnR9LmJvcmRlci1sZWZ0LTB7Ym9yZGVyLWxlZnQ6MCFpbXBvcnRhbnR9LmJvcmRlci1wcmltYXJ5e2JvcmRlci1jb2xvcjojMDA3YmZmIWltcG9ydGFudH0uYm9yZGVyLXNlY29uZGFyeXtib3JkZXItY29sb3I6IzZjNzU3ZCFpbXBvcnRhbnR9LmJvcmRlci1zdWNjZXNze2JvcmRlci1jb2xvcjojMjhhNzQ1IWltcG9ydGFudH0uYm9yZGVyLWluZm97Ym9yZGVyLWNvbG9yOiMxN2EyYjghaW1wb3J0YW50fS5ib3JkZXItd2FybmluZ3tib3JkZXItY29sb3I6I2ZmYzEwNyFpbXBvcnRhbnR9LmJvcmRlci1kYW5nZXJ7Ym9yZGVyLWNvbG9yOiNkYzM1NDUhaW1wb3J0YW50fS5ib3JkZXItbGlnaHR7Ym9yZGVyLWNvbG9yOiNmOGY5ZmEhaW1wb3J0YW50fS5ib3JkZXItZGFya3tib3JkZXItY29sb3I6IzM0M2E0MCFpbXBvcnRhbnR9LmJvcmRlci13aGl0ZXtib3JkZXItY29sb3I6I2ZmZiFpbXBvcnRhbnR9LnJvdW5kZWQtc217Ym9yZGVyLXJhZGl1czouMnJlbSFpbXBvcnRhbnR9LnJvdW5kZWR7Ym9yZGVyLXJhZGl1czouMjVyZW0haW1wb3J0YW50fS5yb3VuZGVkLXRvcHtib3JkZXItdG9wLWxlZnQtcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnQ7Ym9yZGVyLXRvcC1yaWdodC1yYWRpdXM6LjI1cmVtIWltcG9ydGFudH0ucm91bmRlZC1yaWdodHtib3JkZXItdG9wLXJpZ2h0LXJhZGl1czouMjVyZW0haW1wb3J0YW50O2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnR9LnJvdW5kZWQtYm90dG9te2JvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOi4yNXJlbSFpbXBvcnRhbnQ7Ym9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czouMjVyZW0haW1wb3J0YW50fS5yb3VuZGVkLWxlZnR7Ym9yZGVyLXRvcC1sZWZ0LXJhZGl1czouMjVyZW0haW1wb3J0YW50O2JvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6LjI1cmVtIWltcG9ydGFudH0ucm91bmRlZC1sZ3tib3JkZXItcmFkaXVzOi4zcmVtIWltcG9ydGFudH0ucm91bmRlZC1jaXJjbGV7Ym9yZGVyLXJhZGl1czo1MCUhaW1wb3J0YW50fS5yb3VuZGVkLXBpbGx7Ym9yZGVyLXJhZGl1czo1MHJlbSFpbXBvcnRhbnR9LnJvdW5kZWQtMHtib3JkZXItcmFkaXVzOjAhaW1wb3J0YW50fS5jbGVhcmZpeDo6YWZ0ZXJ7ZGlzcGxheTpibG9jaztjbGVhcjpib3RoO2NvbnRlbnQ6XFxcIlxcXCJ9LmQtbm9uZXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5kLWlubGluZXtkaXNwbGF5OmlubGluZSFpbXBvcnRhbnR9LmQtaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH0uZC1ibG9ja3tkaXNwbGF5OmJsb2NrIWltcG9ydGFudH0uZC10YWJsZXtkaXNwbGF5OnRhYmxlIWltcG9ydGFudH0uZC10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3chaW1wb3J0YW50fS5kLXRhYmxlLWNlbGx7ZGlzcGxheTp0YWJsZS1jZWxsIWltcG9ydGFudH0uZC1mbGV4e2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnR9LmQtaW5saW5lLWZsZXh7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWZsZXghaW1wb3J0YW50fUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsuZC1zbS1ub25le2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmQtc20taW5saW5le2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZC1zbS1pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fS5kLXNtLWJsb2Nre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5kLXNtLXRhYmxle2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50fS5kLXNtLXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvdyFpbXBvcnRhbnR9LmQtc20tdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwhaW1wb3J0YW50fS5kLXNtLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudH0uZC1zbS1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsuZC1tZC1ub25le2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmQtbWQtaW5saW5le2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZC1tZC1pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fS5kLW1kLWJsb2Nre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5kLW1kLXRhYmxle2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50fS5kLW1kLXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvdyFpbXBvcnRhbnR9LmQtbWQtdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwhaW1wb3J0YW50fS5kLW1kLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudH0uZC1tZC1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsuZC1sZy1ub25le2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9LmQtbGctaW5saW5le2Rpc3BsYXk6aW5saW5lIWltcG9ydGFudH0uZC1sZy1pbmxpbmUtYmxvY2t7ZGlzcGxheTppbmxpbmUtYmxvY2shaW1wb3J0YW50fS5kLWxnLWJsb2Nre2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50fS5kLWxnLXRhYmxle2Rpc3BsYXk6dGFibGUhaW1wb3J0YW50fS5kLWxnLXRhYmxlLXJvd3tkaXNwbGF5OnRhYmxlLXJvdyFpbXBvcnRhbnR9LmQtbGctdGFibGUtY2VsbHtkaXNwbGF5OnRhYmxlLWNlbGwhaW1wb3J0YW50fS5kLWxnLWZsZXh7ZGlzcGxheTotbXMtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTpmbGV4IWltcG9ydGFudH0uZC1sZy1pbmxpbmUtZmxleHtkaXNwbGF5Oi1tcy1pbmxpbmUtZmxleGJveCFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtZmxleCFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7LmQteGwtbm9uZXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5kLXhsLWlubGluZXtkaXNwbGF5OmlubGluZSFpbXBvcnRhbnR9LmQteGwtaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH0uZC14bC1ibG9ja3tkaXNwbGF5OmJsb2NrIWltcG9ydGFudH0uZC14bC10YWJsZXtkaXNwbGF5OnRhYmxlIWltcG9ydGFudH0uZC14bC10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3chaW1wb3J0YW50fS5kLXhsLXRhYmxlLWNlbGx7ZGlzcGxheTp0YWJsZS1jZWxsIWltcG9ydGFudH0uZC14bC1mbGV4e2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnR9LmQteGwtaW5saW5lLWZsZXh7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWZsZXghaW1wb3J0YW50fX1AbWVkaWEgcHJpbnR7LmQtcHJpbnQtbm9uZXtkaXNwbGF5Om5vbmUhaW1wb3J0YW50fS5kLXByaW50LWlubGluZXtkaXNwbGF5OmlubGluZSFpbXBvcnRhbnR9LmQtcHJpbnQtaW5saW5lLWJsb2Nre2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudH0uZC1wcmludC1ibG9ja3tkaXNwbGF5OmJsb2NrIWltcG9ydGFudH0uZC1wcmludC10YWJsZXtkaXNwbGF5OnRhYmxlIWltcG9ydGFudH0uZC1wcmludC10YWJsZS1yb3d7ZGlzcGxheTp0YWJsZS1yb3chaW1wb3J0YW50fS5kLXByaW50LXRhYmxlLWNlbGx7ZGlzcGxheTp0YWJsZS1jZWxsIWltcG9ydGFudH0uZC1wcmludC1mbGV4e2Rpc3BsYXk6LW1zLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6ZmxleCFpbXBvcnRhbnR9LmQtcHJpbnQtaW5saW5lLWZsZXh7ZGlzcGxheTotbXMtaW5saW5lLWZsZXhib3ghaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWZsZXghaW1wb3J0YW50fX0uZW1iZWQtcmVzcG9uc2l2ZXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7cGFkZGluZzowO292ZXJmbG93OmhpZGRlbn0uZW1iZWQtcmVzcG9uc2l2ZTo6YmVmb3Jle2Rpc3BsYXk6YmxvY2s7Y29udGVudDpcXFwiXFxcIn0uZW1iZWQtcmVzcG9uc2l2ZSAuZW1iZWQtcmVzcG9uc2l2ZS1pdGVtLC5lbWJlZC1yZXNwb25zaXZlIGVtYmVkLC5lbWJlZC1yZXNwb25zaXZlIGlmcmFtZSwuZW1iZWQtcmVzcG9uc2l2ZSBvYmplY3QsLmVtYmVkLXJlc3BvbnNpdmUgdmlkZW97cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7bGVmdDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Ym9yZGVyOjB9LmVtYmVkLXJlc3BvbnNpdmUtMjFieTk6OmJlZm9yZXtwYWRkaW5nLXRvcDo0Mi44NTcxNDMlfS5lbWJlZC1yZXNwb25zaXZlLTE2Ynk5OjpiZWZvcmV7cGFkZGluZy10b3A6NTYuMjUlfS5lbWJlZC1yZXNwb25zaXZlLTRieTM6OmJlZm9yZXtwYWRkaW5nLXRvcDo3NSV9LmVtYmVkLXJlc3BvbnNpdmUtMWJ5MTo6YmVmb3Jle3BhZGRpbmctdG9wOjEwMCV9LmZsZXgtcm93ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3chaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnR9LmZsZXgtY29sdW1uey1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnR9LmZsZXgtcm93LXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtY29sdW1uLXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtd3JhcHstbXMtZmxleC13cmFwOndyYXAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwIWltcG9ydGFudH0uZmxleC1ub3dyYXB7LW1zLWZsZXgtd3JhcDpub3dyYXAhaW1wb3J0YW50O2ZsZXgtd3JhcDpub3dyYXAhaW1wb3J0YW50fS5mbGV4LXdyYXAtcmV2ZXJzZXstbXMtZmxleC13cmFwOndyYXAtcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAtcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtZmlsbHstbXMtZmxleDoxIDEgYXV0byFpbXBvcnRhbnQ7ZmxleDoxIDEgYXV0byFpbXBvcnRhbnR9LmZsZXgtZ3Jvdy0wey1tcy1mbGV4LXBvc2l0aXZlOjAhaW1wb3J0YW50O2ZsZXgtZ3JvdzowIWltcG9ydGFudH0uZmxleC1ncm93LTF7LW1zLWZsZXgtcG9zaXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1ncm93OjEhaW1wb3J0YW50fS5mbGV4LXNocmluay0wey1tcy1mbGV4LW5lZ2F0aXZlOjAhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjAhaW1wb3J0YW50fS5mbGV4LXNocmluay0xey1tcy1mbGV4LW5lZ2F0aXZlOjEhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjEhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc3RhcnR7LW1zLWZsZXgtcGFjazpzdGFydCFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtZW5key1tcy1mbGV4LXBhY2s6ZW5kIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtY2VudGVyey1tcy1mbGV4LXBhY2s6Y2VudGVyIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWJldHdlZW57LW1zLWZsZXgtcGFjazpqdXN0aWZ5IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1hcm91bmR7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMtc3RhcnR7LW1zLWZsZXgtYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1lbmR7LW1zLWZsZXgtYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWNlbnRlcnstbXMtZmxleC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWJhc2VsaW5ley1tcy1mbGV4LWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1pdGVtczpiYXNlbGluZSFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXN0cmV0Y2h7LW1zLWZsZXgtYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6c3RyZXRjaCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc3RhcnR7LW1zLWZsZXgtbGluZS1wYWNrOnN0YXJ0IWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWVuZHstbXMtZmxleC1saW5lLXBhY2s6ZW5kIWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1jZW50ZXJ7LW1zLWZsZXgtbGluZS1wYWNrOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWJldHdlZW57LW1zLWZsZXgtbGluZS1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtYXJvdW5key1tcy1mbGV4LWxpbmUtcGFjazpkaXN0cmlidXRlIWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWFyb3VuZCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc3RyZXRjaHstbXMtZmxleC1saW5lLXBhY2s6c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tc2VsZi1hdXRvey1tcy1mbGV4LWl0ZW0tYWxpZ246YXV0byFpbXBvcnRhbnQ7YWxpZ24tc2VsZjphdXRvIWltcG9ydGFudH0uYWxpZ24tc2VsZi1zdGFydHstbXMtZmxleC1pdGVtLWFsaWduOnN0YXJ0IWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1zZWxmLWVuZHstbXMtZmxleC1pdGVtLWFsaWduOmVuZCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtY2VudGVyey1tcy1mbGV4LWl0ZW0tYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1zZWxmOmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLXNlbGYtYmFzZWxpbmV7LW1zLWZsZXgtaXRlbS1hbGlnbjpiYXNlbGluZSFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpiYXNlbGluZSFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc3RyZXRjaHstbXMtZmxleC1pdGVtLWFsaWduOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLXNlbGY6c3RyZXRjaCFpbXBvcnRhbnR9QG1lZGlhIChtaW4td2lkdGg6NTc2cHgpey5mbGV4LXNtLXJvd3stbXMtZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3chaW1wb3J0YW50fS5mbGV4LXNtLWNvbHVtbnstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50fS5mbGV4LXNtLXJvdy1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LXNtLWNvbHVtbi1yZXZlcnNley1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LXNtLXdyYXB7LW1zLWZsZXgtd3JhcDp3cmFwIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnR9LmZsZXgtc20tbm93cmFwey1tcy1mbGV4LXdyYXA6bm93cmFwIWltcG9ydGFudDtmbGV4LXdyYXA6bm93cmFwIWltcG9ydGFudH0uZmxleC1zbS13cmFwLXJldmVyc2V7LW1zLWZsZXgtd3JhcDp3cmFwLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwLXJldmVyc2UhaW1wb3J0YW50fS5mbGV4LXNtLWZpbGx7LW1zLWZsZXg6MSAxIGF1dG8haW1wb3J0YW50O2ZsZXg6MSAxIGF1dG8haW1wb3J0YW50fS5mbGV4LXNtLWdyb3ctMHstbXMtZmxleC1wb3NpdGl2ZTowIWltcG9ydGFudDtmbGV4LWdyb3c6MCFpbXBvcnRhbnR9LmZsZXgtc20tZ3Jvdy0xey1tcy1mbGV4LXBvc2l0aXZlOjEhaW1wb3J0YW50O2ZsZXgtZ3JvdzoxIWltcG9ydGFudH0uZmxleC1zbS1zaHJpbmstMHstbXMtZmxleC1uZWdhdGl2ZTowIWltcG9ydGFudDtmbGV4LXNocmluazowIWltcG9ydGFudH0uZmxleC1zbS1zaHJpbmstMXstbXMtZmxleC1uZWdhdGl2ZToxIWltcG9ydGFudDtmbGV4LXNocmluazoxIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXNtLXN0YXJ0ey1tcy1mbGV4LXBhY2s6c3RhcnQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0IWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXNtLWVuZHstbXMtZmxleC1wYWNrOmVuZCFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtZW5kIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXNtLWNlbnRlcnstbXMtZmxleC1wYWNrOmNlbnRlciFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1zbS1iZXR3ZWVuey1tcy1mbGV4LXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW4haW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtc20tYXJvdW5key1tcy1mbGV4LXBhY2s6ZGlzdHJpYnV0ZSFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXNtLXN0YXJ0ey1tcy1mbGV4LWFsaWduOnN0YXJ0IWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24taXRlbXMtc20tZW5key1tcy1mbGV4LWFsaWduOmVuZCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zbS1jZW50ZXJ7LW1zLWZsZXgtYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1pdGVtczpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zbS1iYXNlbGluZXstbXMtZmxleC1hbGlnbjpiYXNlbGluZSFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1zbS1zdHJldGNoey1tcy1mbGV4LWFsaWduOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLWl0ZW1zOnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLXN0YXJ0ey1tcy1mbGV4LWxpbmUtcGFjazpzdGFydCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zbS1lbmR7LW1zLWZsZXgtbGluZS1wYWNrOmVuZCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtc20tY2VudGVyey1tcy1mbGV4LWxpbmUtcGFjazpjZW50ZXIhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1zbS1iZXR3ZWVuey1tcy1mbGV4LWxpbmUtcGFjazpqdXN0aWZ5IWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWJldHdlZW4haW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLWFyb3VuZHstbXMtZmxleC1saW5lLXBhY2s6ZGlzdHJpYnV0ZSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXNtLXN0cmV0Y2h7LW1zLWZsZXgtbGluZS1wYWNrOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3RyZXRjaCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc20tYXV0b3stbXMtZmxleC1pdGVtLWFsaWduOmF1dG8haW1wb3J0YW50O2FsaWduLXNlbGY6YXV0byFpbXBvcnRhbnR9LmFsaWduLXNlbGYtc20tc3RhcnR7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LXN0YXJ0IWltcG9ydGFudH0uYWxpZ24tc2VsZi1zbS1lbmR7LW1zLWZsZXgtaXRlbS1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXNtLWNlbnRlcnstbXMtZmxleC1pdGVtLWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXNtLWJhc2VsaW5ley1tcy1mbGV4LWl0ZW0tYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLXNlbGY6YmFzZWxpbmUhaW1wb3J0YW50fS5hbGlnbi1zZWxmLXNtLXN0cmV0Y2h7LW1zLWZsZXgtaXRlbS1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1zZWxmOnN0cmV0Y2ghaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDo3NjhweCl7LmZsZXgtbWQtcm93ey1tcy1mbGV4LWRpcmVjdGlvbjpyb3chaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnR9LmZsZXgtbWQtY29sdW1uey1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW4haW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnR9LmZsZXgtbWQtcm93LXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpyb3ctcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtbWQtY29sdW1uLXJldmVyc2V7LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudDtmbGV4LWRpcmVjdGlvbjpjb2x1bW4tcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtbWQtd3JhcHstbXMtZmxleC13cmFwOndyYXAhaW1wb3J0YW50O2ZsZXgtd3JhcDp3cmFwIWltcG9ydGFudH0uZmxleC1tZC1ub3dyYXB7LW1zLWZsZXgtd3JhcDpub3dyYXAhaW1wb3J0YW50O2ZsZXgtd3JhcDpub3dyYXAhaW1wb3J0YW50fS5mbGV4LW1kLXdyYXAtcmV2ZXJzZXstbXMtZmxleC13cmFwOndyYXAtcmV2ZXJzZSFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAtcmV2ZXJzZSFpbXBvcnRhbnR9LmZsZXgtbWQtZmlsbHstbXMtZmxleDoxIDEgYXV0byFpbXBvcnRhbnQ7ZmxleDoxIDEgYXV0byFpbXBvcnRhbnR9LmZsZXgtbWQtZ3Jvdy0wey1tcy1mbGV4LXBvc2l0aXZlOjAhaW1wb3J0YW50O2ZsZXgtZ3JvdzowIWltcG9ydGFudH0uZmxleC1tZC1ncm93LTF7LW1zLWZsZXgtcG9zaXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1ncm93OjEhaW1wb3J0YW50fS5mbGV4LW1kLXNocmluay0wey1tcy1mbGV4LW5lZ2F0aXZlOjAhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjAhaW1wb3J0YW50fS5mbGV4LW1kLXNocmluay0xey1tcy1mbGV4LW5lZ2F0aXZlOjEhaW1wb3J0YW50O2ZsZXgtc2hyaW5rOjEhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbWQtc3RhcnR7LW1zLWZsZXgtcGFjazpzdGFydCFpbXBvcnRhbnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbWQtZW5key1tcy1mbGV4LXBhY2s6ZW5kIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbWQtY2VudGVyey1tcy1mbGV4LXBhY2s6Y2VudGVyIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LW1kLWJldHdlZW57LW1zLWZsZXgtcGFjazpqdXN0aWZ5IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1tZC1hcm91bmR7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlIWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbWQtc3RhcnR7LW1zLWZsZXgtYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1tZC1lbmR7LW1zLWZsZXgtYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1pdGVtczpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLW1kLWNlbnRlcnstbXMtZmxleC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLW1kLWJhc2VsaW5ley1tcy1mbGV4LWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1pdGVtczpiYXNlbGluZSFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLW1kLXN0cmV0Y2h7LW1zLWZsZXgtYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6c3RyZXRjaCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtc3RhcnR7LW1zLWZsZXgtbGluZS1wYWNrOnN0YXJ0IWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LW1kLWVuZHstbXMtZmxleC1saW5lLXBhY2s6ZW5kIWltcG9ydGFudDthbGlnbi1jb250ZW50OmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1tZC1jZW50ZXJ7LW1zLWZsZXgtbGluZS1wYWNrOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LW1kLWJldHdlZW57LW1zLWZsZXgtbGluZS1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYmV0d2VlbiFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtYXJvdW5key1tcy1mbGV4LWxpbmUtcGFjazpkaXN0cmlidXRlIWltcG9ydGFudDthbGlnbi1jb250ZW50OnNwYWNlLWFyb3VuZCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbWQtc3RyZXRjaHstbXMtZmxleC1saW5lLXBhY2s6c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tc2VsZi1tZC1hdXRvey1tcy1mbGV4LWl0ZW0tYWxpZ246YXV0byFpbXBvcnRhbnQ7YWxpZ24tc2VsZjphdXRvIWltcG9ydGFudH0uYWxpZ24tc2VsZi1tZC1zdGFydHstbXMtZmxleC1pdGVtLWFsaWduOnN0YXJ0IWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtc3RhcnQhaW1wb3J0YW50fS5hbGlnbi1zZWxmLW1kLWVuZHstbXMtZmxleC1pdGVtLWFsaWduOmVuZCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpmbGV4LWVuZCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbWQtY2VudGVyey1tcy1mbGV4LWl0ZW0tYWxpZ246Y2VudGVyIWltcG9ydGFudDthbGlnbi1zZWxmOmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbWQtYmFzZWxpbmV7LW1zLWZsZXgtaXRlbS1hbGlnbjpiYXNlbGluZSFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpiYXNlbGluZSFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbWQtc3RyZXRjaHstbXMtZmxleC1pdGVtLWFsaWduOnN0cmV0Y2ghaW1wb3J0YW50O2FsaWduLXNlbGY6c3RyZXRjaCFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsuZmxleC1sZy1yb3d7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudH0uZmxleC1sZy1jb2x1bW57LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudH0uZmxleC1sZy1yb3ctcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1sZy1jb2x1bW4tcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1sZy13cmFwey1tcy1mbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAhaW1wb3J0YW50fS5mbGV4LWxnLW5vd3JhcHstbXMtZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnR9LmZsZXgtbGctd3JhcC1yZXZlcnNley1tcy1mbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudH0uZmxleC1sZy1maWxsey1tcy1mbGV4OjEgMSBhdXRvIWltcG9ydGFudDtmbGV4OjEgMSBhdXRvIWltcG9ydGFudH0uZmxleC1sZy1ncm93LTB7LW1zLWZsZXgtcG9zaXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1ncm93OjAhaW1wb3J0YW50fS5mbGV4LWxnLWdyb3ctMXstbXMtZmxleC1wb3NpdGl2ZToxIWltcG9ydGFudDtmbGV4LWdyb3c6MSFpbXBvcnRhbnR9LmZsZXgtbGctc2hyaW5rLTB7LW1zLWZsZXgtbmVnYXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MCFpbXBvcnRhbnR9LmZsZXgtbGctc2hyaW5rLTF7LW1zLWZsZXgtbmVnYXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MSFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1sZy1zdGFydHstbXMtZmxleC1wYWNrOnN0YXJ0IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1sZy1lbmR7LW1zLWZsZXgtcGFjazplbmQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC1sZy1jZW50ZXJ7LW1zLWZsZXgtcGFjazpjZW50ZXIhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQtbGctYmV0d2VlbnstbXMtZmxleC1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LWxnLWFyb3VuZHstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy1sZy1zdGFydHstbXMtZmxleC1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLWxnLWVuZHstbXMtZmxleC1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbGctY2VudGVyey1tcy1mbGV4LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbGctYmFzZWxpbmV7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24taXRlbXMtbGctc3RyZXRjaHstbXMtZmxleC1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1pdGVtczpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1zdGFydHstbXMtZmxleC1saW5lLXBhY2s6c3RhcnQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbGctZW5key1tcy1mbGV4LWxpbmUtcGFjazplbmQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LWxnLWNlbnRlcnstbXMtZmxleC1saW5lLXBhY2s6Y2VudGVyIWltcG9ydGFudDthbGlnbi1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQtbGctYmV0d2VlbnstbXMtZmxleC1saW5lLXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1hcm91bmR7LW1zLWZsZXgtbGluZS1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC1sZy1zdHJldGNoey1tcy1mbGV4LWxpbmUtcGFjazpzdHJldGNoIWltcG9ydGFudDthbGlnbi1jb250ZW50OnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1zZWxmLWxnLWF1dG97LW1zLWZsZXgtaXRlbS1hbGlnbjphdXRvIWltcG9ydGFudDthbGlnbi1zZWxmOmF1dG8haW1wb3J0YW50fS5hbGlnbi1zZWxmLWxnLXN0YXJ0ey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLXNlbGYtbGctZW5key1tcy1mbGV4LWl0ZW0tYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tc2VsZi1sZy1jZW50ZXJ7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLXNlbGY6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tc2VsZi1sZy1iYXNlbGluZXstbXMtZmxleC1pdGVtLWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1zZWxmOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24tc2VsZi1sZy1zdHJldGNoey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpzdHJldGNoIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6MTIwMHB4KXsuZmxleC14bC1yb3d7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdyFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246cm93IWltcG9ydGFudH0uZmxleC14bC1jb2x1bW57LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbiFpbXBvcnRhbnQ7ZmxleC1kaXJlY3Rpb246Y29sdW1uIWltcG9ydGFudH0uZmxleC14bC1yb3ctcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246cm93LXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOnJvdy1yZXZlcnNlIWltcG9ydGFudH0uZmxleC14bC1jb2x1bW4tcmV2ZXJzZXstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uLXJldmVyc2UhaW1wb3J0YW50O2ZsZXgtZGlyZWN0aW9uOmNvbHVtbi1yZXZlcnNlIWltcG9ydGFudH0uZmxleC14bC13cmFwey1tcy1mbGV4LXdyYXA6d3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOndyYXAhaW1wb3J0YW50fS5mbGV4LXhsLW5vd3JhcHstbXMtZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnQ7ZmxleC13cmFwOm5vd3JhcCFpbXBvcnRhbnR9LmZsZXgteGwtd3JhcC1yZXZlcnNley1tcy1mbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudDtmbGV4LXdyYXA6d3JhcC1yZXZlcnNlIWltcG9ydGFudH0uZmxleC14bC1maWxsey1tcy1mbGV4OjEgMSBhdXRvIWltcG9ydGFudDtmbGV4OjEgMSBhdXRvIWltcG9ydGFudH0uZmxleC14bC1ncm93LTB7LW1zLWZsZXgtcG9zaXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1ncm93OjAhaW1wb3J0YW50fS5mbGV4LXhsLWdyb3ctMXstbXMtZmxleC1wb3NpdGl2ZToxIWltcG9ydGFudDtmbGV4LWdyb3c6MSFpbXBvcnRhbnR9LmZsZXgteGwtc2hyaW5rLTB7LW1zLWZsZXgtbmVnYXRpdmU6MCFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MCFpbXBvcnRhbnR9LmZsZXgteGwtc2hyaW5rLTF7LW1zLWZsZXgtbmVnYXRpdmU6MSFpbXBvcnRhbnQ7ZmxleC1zaHJpbms6MSFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC14bC1zdGFydHstbXMtZmxleC1wYWNrOnN0YXJ0IWltcG9ydGFudDtqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC14bC1lbmR7LW1zLWZsZXgtcGFjazplbmQhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpmbGV4LWVuZCFpbXBvcnRhbnR9Lmp1c3RpZnktY29udGVudC14bC1jZW50ZXJ7LW1zLWZsZXgtcGFjazpjZW50ZXIhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpjZW50ZXIhaW1wb3J0YW50fS5qdXN0aWZ5LWNvbnRlbnQteGwtYmV0d2VlbnstbXMtZmxleC1wYWNrOmp1c3RpZnkhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uanVzdGlmeS1jb250ZW50LXhsLWFyb3VuZHstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQhaW1wb3J0YW50fS5hbGlnbi1pdGVtcy14bC1zdGFydHstbXMtZmxleC1hbGlnbjpzdGFydCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWl0ZW1zLXhsLWVuZHstbXMtZmxleC1hbGlnbjplbmQhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24taXRlbXMteGwtY2VudGVyey1tcy1mbGV4LWFsaWduOmNlbnRlciFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24taXRlbXMteGwtYmFzZWxpbmV7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmUhaW1wb3J0YW50O2FsaWduLWl0ZW1zOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24taXRlbXMteGwtc3RyZXRjaHstbXMtZmxleC1hbGlnbjpzdHJldGNoIWltcG9ydGFudDthbGlnbi1pdGVtczpzdHJldGNoIWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1zdGFydHstbXMtZmxleC1saW5lLXBhY2s6c3RhcnQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQteGwtZW5key1tcy1mbGV4LWxpbmUtcGFjazplbmQhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6ZmxleC1lbmQhaW1wb3J0YW50fS5hbGlnbi1jb250ZW50LXhsLWNlbnRlcnstbXMtZmxleC1saW5lLXBhY2s6Y2VudGVyIWltcG9ydGFudDthbGlnbi1jb250ZW50OmNlbnRlciFpbXBvcnRhbnR9LmFsaWduLWNvbnRlbnQteGwtYmV0d2VlbnstbXMtZmxleC1saW5lLXBhY2s6anVzdGlmeSFpbXBvcnRhbnQ7YWxpZ24tY29udGVudDpzcGFjZS1iZXR3ZWVuIWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1hcm91bmR7LW1zLWZsZXgtbGluZS1wYWNrOmRpc3RyaWJ1dGUhaW1wb3J0YW50O2FsaWduLWNvbnRlbnQ6c3BhY2UtYXJvdW5kIWltcG9ydGFudH0uYWxpZ24tY29udGVudC14bC1zdHJldGNoey1tcy1mbGV4LWxpbmUtcGFjazpzdHJldGNoIWltcG9ydGFudDthbGlnbi1jb250ZW50OnN0cmV0Y2ghaW1wb3J0YW50fS5hbGlnbi1zZWxmLXhsLWF1dG97LW1zLWZsZXgtaXRlbS1hbGlnbjphdXRvIWltcG9ydGFudDthbGlnbi1zZWxmOmF1dG8haW1wb3J0YW50fS5hbGlnbi1zZWxmLXhsLXN0YXJ0ey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RhcnQhaW1wb3J0YW50O2FsaWduLXNlbGY6ZmxleC1zdGFydCFpbXBvcnRhbnR9LmFsaWduLXNlbGYteGwtZW5key1tcy1mbGV4LWl0ZW0tYWxpZ246ZW5kIWltcG9ydGFudDthbGlnbi1zZWxmOmZsZXgtZW5kIWltcG9ydGFudH0uYWxpZ24tc2VsZi14bC1jZW50ZXJ7LW1zLWZsZXgtaXRlbS1hbGlnbjpjZW50ZXIhaW1wb3J0YW50O2FsaWduLXNlbGY6Y2VudGVyIWltcG9ydGFudH0uYWxpZ24tc2VsZi14bC1iYXNlbGluZXstbXMtZmxleC1pdGVtLWFsaWduOmJhc2VsaW5lIWltcG9ydGFudDthbGlnbi1zZWxmOmJhc2VsaW5lIWltcG9ydGFudH0uYWxpZ24tc2VsZi14bC1zdHJldGNoey1tcy1mbGV4LWl0ZW0tYWxpZ246c3RyZXRjaCFpbXBvcnRhbnQ7YWxpZ24tc2VsZjpzdHJldGNoIWltcG9ydGFudH19LmZsb2F0LWxlZnR7ZmxvYXQ6bGVmdCFpbXBvcnRhbnR9LmZsb2F0LXJpZ2h0e2Zsb2F0OnJpZ2h0IWltcG9ydGFudH0uZmxvYXQtbm9uZXtmbG9hdDpub25lIWltcG9ydGFudH1AbWVkaWEgKG1pbi13aWR0aDo1NzZweCl7LmZsb2F0LXNtLWxlZnR7ZmxvYXQ6bGVmdCFpbXBvcnRhbnR9LmZsb2F0LXNtLXJpZ2h0e2Zsb2F0OnJpZ2h0IWltcG9ydGFudH0uZmxvYXQtc20tbm9uZXtmbG9hdDpub25lIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey5mbG9hdC1tZC1sZWZ0e2Zsb2F0OmxlZnQhaW1wb3J0YW50fS5mbG9hdC1tZC1yaWdodHtmbG9hdDpyaWdodCFpbXBvcnRhbnR9LmZsb2F0LW1kLW5vbmV7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsuZmxvYXQtbGctbGVmdHtmbG9hdDpsZWZ0IWltcG9ydGFudH0uZmxvYXQtbGctcmlnaHR7ZmxvYXQ6cmlnaHQhaW1wb3J0YW50fS5mbG9hdC1sZy1ub25le2Zsb2F0Om5vbmUhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDoxMjAwcHgpey5mbG9hdC14bC1sZWZ0e2Zsb2F0OmxlZnQhaW1wb3J0YW50fS5mbG9hdC14bC1yaWdodHtmbG9hdDpyaWdodCFpbXBvcnRhbnR9LmZsb2F0LXhsLW5vbmV7ZmxvYXQ6bm9uZSFpbXBvcnRhbnR9fS51c2VyLXNlbGVjdC1hbGx7LXdlYmtpdC11c2VyLXNlbGVjdDphbGwhaW1wb3J0YW50Oy1tb3otdXNlci1zZWxlY3Q6YWxsIWltcG9ydGFudDstbXMtdXNlci1zZWxlY3Q6YWxsIWltcG9ydGFudDt1c2VyLXNlbGVjdDphbGwhaW1wb3J0YW50fS51c2VyLXNlbGVjdC1hdXRvey13ZWJraXQtdXNlci1zZWxlY3Q6YXV0byFpbXBvcnRhbnQ7LW1vei11c2VyLXNlbGVjdDphdXRvIWltcG9ydGFudDstbXMtdXNlci1zZWxlY3Q6YXV0byFpbXBvcnRhbnQ7dXNlci1zZWxlY3Q6YXV0byFpbXBvcnRhbnR9LnVzZXItc2VsZWN0LW5vbmV7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lIWltcG9ydGFudDstbW96LXVzZXItc2VsZWN0Om5vbmUhaW1wb3J0YW50Oy1tcy11c2VyLXNlbGVjdDpub25lIWltcG9ydGFudDt1c2VyLXNlbGVjdDpub25lIWltcG9ydGFudH0ub3ZlcmZsb3ctYXV0b3tvdmVyZmxvdzphdXRvIWltcG9ydGFudH0ub3ZlcmZsb3ctaGlkZGVue292ZXJmbG93OmhpZGRlbiFpbXBvcnRhbnR9LnBvc2l0aW9uLXN0YXRpY3twb3NpdGlvbjpzdGF0aWMhaW1wb3J0YW50fS5wb3NpdGlvbi1yZWxhdGl2ZXtwb3NpdGlvbjpyZWxhdGl2ZSFpbXBvcnRhbnR9LnBvc2l0aW9uLWFic29sdXRle3Bvc2l0aW9uOmFic29sdXRlIWltcG9ydGFudH0ucG9zaXRpb24tZml4ZWR7cG9zaXRpb246Zml4ZWQhaW1wb3J0YW50fS5wb3NpdGlvbi1zdGlja3l7cG9zaXRpb246LXdlYmtpdC1zdGlja3khaW1wb3J0YW50O3Bvc2l0aW9uOnN0aWNreSFpbXBvcnRhbnR9LmZpeGVkLXRvcHtwb3NpdGlvbjpmaXhlZDt0b3A6MDtyaWdodDowO2xlZnQ6MDt6LWluZGV4OjEwMzB9LmZpeGVkLWJvdHRvbXtwb3NpdGlvbjpmaXhlZDtyaWdodDowO2JvdHRvbTowO2xlZnQ6MDt6LWluZGV4OjEwMzB9QHN1cHBvcnRzICgocG9zaXRpb246LXdlYmtpdC1zdGlja3kpIG9yIChwb3NpdGlvbjpzdGlja3kpKXsuc3RpY2t5LXRvcHtwb3NpdGlvbjotd2Via2l0LXN0aWNreTtwb3NpdGlvbjpzdGlja3k7dG9wOjA7ei1pbmRleDoxMDIwfX0uc3Itb25seXtwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxcHg7aGVpZ2h0OjFweDtwYWRkaW5nOjA7bWFyZ2luOi0xcHg7b3ZlcmZsb3c6aGlkZGVuO2NsaXA6cmVjdCgwLDAsMCwwKTt3aGl0ZS1zcGFjZTpub3dyYXA7Ym9yZGVyOjB9LnNyLW9ubHktZm9jdXNhYmxlOmFjdGl2ZSwuc3Itb25seS1mb2N1c2FibGU6Zm9jdXN7cG9zaXRpb246c3RhdGljO3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87b3ZlcmZsb3c6dmlzaWJsZTtjbGlwOmF1dG87d2hpdGUtc3BhY2U6bm9ybWFsfS5zaGFkb3ctc217Ym94LXNoYWRvdzowIC4xMjVyZW0gLjI1cmVtIHJnYmEoMCwwLDAsLjA3NSkhaW1wb3J0YW50fS5zaGFkb3d7Ym94LXNoYWRvdzowIC41cmVtIDFyZW0gcmdiYSgwLDAsMCwuMTUpIWltcG9ydGFudH0uc2hhZG93LWxne2JveC1zaGFkb3c6MCAxcmVtIDNyZW0gcmdiYSgwLDAsMCwuMTc1KSFpbXBvcnRhbnR9LnNoYWRvdy1ub25le2JveC1zaGFkb3c6bm9uZSFpbXBvcnRhbnR9LnctMjV7d2lkdGg6MjUlIWltcG9ydGFudH0udy01MHt3aWR0aDo1MCUhaW1wb3J0YW50fS53LTc1e3dpZHRoOjc1JSFpbXBvcnRhbnR9LnctMTAwe3dpZHRoOjEwMCUhaW1wb3J0YW50fS53LWF1dG97d2lkdGg6YXV0byFpbXBvcnRhbnR9LmgtMjV7aGVpZ2h0OjI1JSFpbXBvcnRhbnR9LmgtNTB7aGVpZ2h0OjUwJSFpbXBvcnRhbnR9LmgtNzV7aGVpZ2h0Ojc1JSFpbXBvcnRhbnR9LmgtMTAwe2hlaWdodDoxMDAlIWltcG9ydGFudH0uaC1hdXRve2hlaWdodDphdXRvIWltcG9ydGFudH0ubXctMTAwe21heC13aWR0aDoxMDAlIWltcG9ydGFudH0ubWgtMTAwe21heC1oZWlnaHQ6MTAwJSFpbXBvcnRhbnR9Lm1pbi12dy0xMDB7bWluLXdpZHRoOjEwMHZ3IWltcG9ydGFudH0ubWluLXZoLTEwMHttaW4taGVpZ2h0OjEwMHZoIWltcG9ydGFudH0udnctMTAwe3dpZHRoOjEwMHZ3IWltcG9ydGFudH0udmgtMTAwe2hlaWdodDoxMDB2aCFpbXBvcnRhbnR9Lm0tMHttYXJnaW46MCFpbXBvcnRhbnR9Lm10LTAsLm15LTB7bWFyZ2luLXRvcDowIWltcG9ydGFudH0ubXItMCwubXgtMHttYXJnaW4tcmlnaHQ6MCFpbXBvcnRhbnR9Lm1iLTAsLm15LTB7bWFyZ2luLWJvdHRvbTowIWltcG9ydGFudH0ubWwtMCwubXgtMHttYXJnaW4tbGVmdDowIWltcG9ydGFudH0ubS0xe21hcmdpbjouMjVyZW0haW1wb3J0YW50fS5tdC0xLC5teS0xe21hcmdpbi10b3A6LjI1cmVtIWltcG9ydGFudH0ubXItMSwubXgtMXttYXJnaW4tcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ubWItMSwubXktMXttYXJnaW4tYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9Lm1sLTEsLm14LTF7bWFyZ2luLWxlZnQ6LjI1cmVtIWltcG9ydGFudH0ubS0ye21hcmdpbjouNXJlbSFpbXBvcnRhbnR9Lm10LTIsLm15LTJ7bWFyZ2luLXRvcDouNXJlbSFpbXBvcnRhbnR9Lm1yLTIsLm14LTJ7bWFyZ2luLXJpZ2h0Oi41cmVtIWltcG9ydGFudH0ubWItMiwubXktMnttYXJnaW4tYm90dG9tOi41cmVtIWltcG9ydGFudH0ubWwtMiwubXgtMnttYXJnaW4tbGVmdDouNXJlbSFpbXBvcnRhbnR9Lm0tM3ttYXJnaW46MXJlbSFpbXBvcnRhbnR9Lm10LTMsLm15LTN7bWFyZ2luLXRvcDoxcmVtIWltcG9ydGFudH0ubXItMywubXgtM3ttYXJnaW4tcmlnaHQ6MXJlbSFpbXBvcnRhbnR9Lm1iLTMsLm15LTN7bWFyZ2luLWJvdHRvbToxcmVtIWltcG9ydGFudH0ubWwtMywubXgtM3ttYXJnaW4tbGVmdDoxcmVtIWltcG9ydGFudH0ubS00e21hcmdpbjoxLjVyZW0haW1wb3J0YW50fS5tdC00LC5teS00e21hcmdpbi10b3A6MS41cmVtIWltcG9ydGFudH0ubXItNCwubXgtNHttYXJnaW4tcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ubWItNCwubXktNHttYXJnaW4tYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9Lm1sLTQsLm14LTR7bWFyZ2luLWxlZnQ6MS41cmVtIWltcG9ydGFudH0ubS01e21hcmdpbjozcmVtIWltcG9ydGFudH0ubXQtNSwubXktNXttYXJnaW4tdG9wOjNyZW0haW1wb3J0YW50fS5tci01LC5teC01e21hcmdpbi1yaWdodDozcmVtIWltcG9ydGFudH0ubWItNSwubXktNXttYXJnaW4tYm90dG9tOjNyZW0haW1wb3J0YW50fS5tbC01LC5teC01e21hcmdpbi1sZWZ0OjNyZW0haW1wb3J0YW50fS5wLTB7cGFkZGluZzowIWltcG9ydGFudH0ucHQtMCwucHktMHtwYWRkaW5nLXRvcDowIWltcG9ydGFudH0ucHItMCwucHgtMHtwYWRkaW5nLXJpZ2h0OjAhaW1wb3J0YW50fS5wYi0wLC5weS0we3BhZGRpbmctYm90dG9tOjAhaW1wb3J0YW50fS5wbC0wLC5weC0we3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0ucC0xe3BhZGRpbmc6LjI1cmVtIWltcG9ydGFudH0ucHQtMSwucHktMXtwYWRkaW5nLXRvcDouMjVyZW0haW1wb3J0YW50fS5wci0xLC5weC0xe3BhZGRpbmctcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ucGItMSwucHktMXtwYWRkaW5nLWJvdHRvbTouMjVyZW0haW1wb3J0YW50fS5wbC0xLC5weC0xe3BhZGRpbmctbGVmdDouMjVyZW0haW1wb3J0YW50fS5wLTJ7cGFkZGluZzouNXJlbSFpbXBvcnRhbnR9LnB0LTIsLnB5LTJ7cGFkZGluZy10b3A6LjVyZW0haW1wb3J0YW50fS5wci0yLC5weC0ye3BhZGRpbmctcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5wYi0yLC5weS0ye3BhZGRpbmctYm90dG9tOi41cmVtIWltcG9ydGFudH0ucGwtMiwucHgtMntwYWRkaW5nLWxlZnQ6LjVyZW0haW1wb3J0YW50fS5wLTN7cGFkZGluZzoxcmVtIWltcG9ydGFudH0ucHQtMywucHktM3twYWRkaW5nLXRvcDoxcmVtIWltcG9ydGFudH0ucHItMywucHgtM3twYWRkaW5nLXJpZ2h0OjFyZW0haW1wb3J0YW50fS5wYi0zLC5weS0ze3BhZGRpbmctYm90dG9tOjFyZW0haW1wb3J0YW50fS5wbC0zLC5weC0ze3BhZGRpbmctbGVmdDoxcmVtIWltcG9ydGFudH0ucC00e3BhZGRpbmc6MS41cmVtIWltcG9ydGFudH0ucHQtNCwucHktNHtwYWRkaW5nLXRvcDoxLjVyZW0haW1wb3J0YW50fS5wci00LC5weC00e3BhZGRpbmctcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ucGItNCwucHktNHtwYWRkaW5nLWJvdHRvbToxLjVyZW0haW1wb3J0YW50fS5wbC00LC5weC00e3BhZGRpbmctbGVmdDoxLjVyZW0haW1wb3J0YW50fS5wLTV7cGFkZGluZzozcmVtIWltcG9ydGFudH0ucHQtNSwucHktNXtwYWRkaW5nLXRvcDozcmVtIWltcG9ydGFudH0ucHItNSwucHgtNXtwYWRkaW5nLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5wYi01LC5weS01e3BhZGRpbmctYm90dG9tOjNyZW0haW1wb3J0YW50fS5wbC01LC5weC01e3BhZGRpbmctbGVmdDozcmVtIWltcG9ydGFudH0ubS1uMXttYXJnaW46LS4yNXJlbSFpbXBvcnRhbnR9Lm10LW4xLC5teS1uMXttYXJnaW4tdG9wOi0uMjVyZW0haW1wb3J0YW50fS5tci1uMSwubXgtbjF7bWFyZ2luLXJpZ2h0Oi0uMjVyZW0haW1wb3J0YW50fS5tYi1uMSwubXktbjF7bWFyZ2luLWJvdHRvbTotLjI1cmVtIWltcG9ydGFudH0ubWwtbjEsLm14LW4xe21hcmdpbi1sZWZ0Oi0uMjVyZW0haW1wb3J0YW50fS5tLW4ye21hcmdpbjotLjVyZW0haW1wb3J0YW50fS5tdC1uMiwubXktbjJ7bWFyZ2luLXRvcDotLjVyZW0haW1wb3J0YW50fS5tci1uMiwubXgtbjJ7bWFyZ2luLXJpZ2h0Oi0uNXJlbSFpbXBvcnRhbnR9Lm1iLW4yLC5teS1uMnttYXJnaW4tYm90dG9tOi0uNXJlbSFpbXBvcnRhbnR9Lm1sLW4yLC5teC1uMnttYXJnaW4tbGVmdDotLjVyZW0haW1wb3J0YW50fS5tLW4ze21hcmdpbjotMXJlbSFpbXBvcnRhbnR9Lm10LW4zLC5teS1uM3ttYXJnaW4tdG9wOi0xcmVtIWltcG9ydGFudH0ubXItbjMsLm14LW4ze21hcmdpbi1yaWdodDotMXJlbSFpbXBvcnRhbnR9Lm1iLW4zLC5teS1uM3ttYXJnaW4tYm90dG9tOi0xcmVtIWltcG9ydGFudH0ubWwtbjMsLm14LW4ze21hcmdpbi1sZWZ0Oi0xcmVtIWltcG9ydGFudH0ubS1uNHttYXJnaW46LTEuNXJlbSFpbXBvcnRhbnR9Lm10LW40LC5teS1uNHttYXJnaW4tdG9wOi0xLjVyZW0haW1wb3J0YW50fS5tci1uNCwubXgtbjR7bWFyZ2luLXJpZ2h0Oi0xLjVyZW0haW1wb3J0YW50fS5tYi1uNCwubXktbjR7bWFyZ2luLWJvdHRvbTotMS41cmVtIWltcG9ydGFudH0ubWwtbjQsLm14LW40e21hcmdpbi1sZWZ0Oi0xLjVyZW0haW1wb3J0YW50fS5tLW41e21hcmdpbjotM3JlbSFpbXBvcnRhbnR9Lm10LW41LC5teS1uNXttYXJnaW4tdG9wOi0zcmVtIWltcG9ydGFudH0ubXItbjUsLm14LW41e21hcmdpbi1yaWdodDotM3JlbSFpbXBvcnRhbnR9Lm1iLW41LC5teS1uNXttYXJnaW4tYm90dG9tOi0zcmVtIWltcG9ydGFudH0ubWwtbjUsLm14LW41e21hcmdpbi1sZWZ0Oi0zcmVtIWltcG9ydGFudH0ubS1hdXRve21hcmdpbjphdXRvIWltcG9ydGFudH0ubXQtYXV0bywubXktYXV0b3ttYXJnaW4tdG9wOmF1dG8haW1wb3J0YW50fS5tci1hdXRvLC5teC1hdXRve21hcmdpbi1yaWdodDphdXRvIWltcG9ydGFudH0ubWItYXV0bywubXktYXV0b3ttYXJnaW4tYm90dG9tOmF1dG8haW1wb3J0YW50fS5tbC1hdXRvLC5teC1hdXRve21hcmdpbi1sZWZ0OmF1dG8haW1wb3J0YW50fUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsubS1zbS0we21hcmdpbjowIWltcG9ydGFudH0ubXQtc20tMCwubXktc20tMHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5tci1zbS0wLC5teC1zbS0we21hcmdpbi1yaWdodDowIWltcG9ydGFudH0ubWItc20tMCwubXktc20tMHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5tbC1zbS0wLC5teC1zbS0we21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50fS5tLXNtLTF7bWFyZ2luOi4yNXJlbSFpbXBvcnRhbnR9Lm10LXNtLTEsLm15LXNtLTF7bWFyZ2luLXRvcDouMjVyZW0haW1wb3J0YW50fS5tci1zbS0xLC5teC1zbS0xe21hcmdpbi1yaWdodDouMjVyZW0haW1wb3J0YW50fS5tYi1zbS0xLC5teS1zbS0xe21hcmdpbi1ib3R0b206LjI1cmVtIWltcG9ydGFudH0ubWwtc20tMSwubXgtc20tMXttYXJnaW4tbGVmdDouMjVyZW0haW1wb3J0YW50fS5tLXNtLTJ7bWFyZ2luOi41cmVtIWltcG9ydGFudH0ubXQtc20tMiwubXktc20tMnttYXJnaW4tdG9wOi41cmVtIWltcG9ydGFudH0ubXItc20tMiwubXgtc20tMnttYXJnaW4tcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5tYi1zbS0yLC5teS1zbS0ye21hcmdpbi1ib3R0b206LjVyZW0haW1wb3J0YW50fS5tbC1zbS0yLC5teC1zbS0ye21hcmdpbi1sZWZ0Oi41cmVtIWltcG9ydGFudH0ubS1zbS0ze21hcmdpbjoxcmVtIWltcG9ydGFudH0ubXQtc20tMywubXktc20tM3ttYXJnaW4tdG9wOjFyZW0haW1wb3J0YW50fS5tci1zbS0zLC5teC1zbS0ze21hcmdpbi1yaWdodDoxcmVtIWltcG9ydGFudH0ubWItc20tMywubXktc20tM3ttYXJnaW4tYm90dG9tOjFyZW0haW1wb3J0YW50fS5tbC1zbS0zLC5teC1zbS0ze21hcmdpbi1sZWZ0OjFyZW0haW1wb3J0YW50fS5tLXNtLTR7bWFyZ2luOjEuNXJlbSFpbXBvcnRhbnR9Lm10LXNtLTQsLm15LXNtLTR7bWFyZ2luLXRvcDoxLjVyZW0haW1wb3J0YW50fS5tci1zbS00LC5teC1zbS00e21hcmdpbi1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5tYi1zbS00LC5teS1zbS00e21hcmdpbi1ib3R0b206MS41cmVtIWltcG9ydGFudH0ubWwtc20tNCwubXgtc20tNHttYXJnaW4tbGVmdDoxLjVyZW0haW1wb3J0YW50fS5tLXNtLTV7bWFyZ2luOjNyZW0haW1wb3J0YW50fS5tdC1zbS01LC5teS1zbS01e21hcmdpbi10b3A6M3JlbSFpbXBvcnRhbnR9Lm1yLXNtLTUsLm14LXNtLTV7bWFyZ2luLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5tYi1zbS01LC5teS1zbS01e21hcmdpbi1ib3R0b206M3JlbSFpbXBvcnRhbnR9Lm1sLXNtLTUsLm14LXNtLTV7bWFyZ2luLWxlZnQ6M3JlbSFpbXBvcnRhbnR9LnAtc20tMHtwYWRkaW5nOjAhaW1wb3J0YW50fS5wdC1zbS0wLC5weS1zbS0we3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fS5wci1zbS0wLC5weC1zbS0we3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LnBiLXNtLTAsLnB5LXNtLTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnR9LnBsLXNtLTAsLnB4LXNtLTB7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fS5wLXNtLTF7cGFkZGluZzouMjVyZW0haW1wb3J0YW50fS5wdC1zbS0xLC5weS1zbS0xe3BhZGRpbmctdG9wOi4yNXJlbSFpbXBvcnRhbnR9LnByLXNtLTEsLnB4LXNtLTF7cGFkZGluZy1yaWdodDouMjVyZW0haW1wb3J0YW50fS5wYi1zbS0xLC5weS1zbS0xe3BhZGRpbmctYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9LnBsLXNtLTEsLnB4LXNtLTF7cGFkZGluZy1sZWZ0Oi4yNXJlbSFpbXBvcnRhbnR9LnAtc20tMntwYWRkaW5nOi41cmVtIWltcG9ydGFudH0ucHQtc20tMiwucHktc20tMntwYWRkaW5nLXRvcDouNXJlbSFpbXBvcnRhbnR9LnByLXNtLTIsLnB4LXNtLTJ7cGFkZGluZy1yaWdodDouNXJlbSFpbXBvcnRhbnR9LnBiLXNtLTIsLnB5LXNtLTJ7cGFkZGluZy1ib3R0b206LjVyZW0haW1wb3J0YW50fS5wbC1zbS0yLC5weC1zbS0ye3BhZGRpbmctbGVmdDouNXJlbSFpbXBvcnRhbnR9LnAtc20tM3twYWRkaW5nOjFyZW0haW1wb3J0YW50fS5wdC1zbS0zLC5weS1zbS0ze3BhZGRpbmctdG9wOjFyZW0haW1wb3J0YW50fS5wci1zbS0zLC5weC1zbS0ze3BhZGRpbmctcmlnaHQ6MXJlbSFpbXBvcnRhbnR9LnBiLXNtLTMsLnB5LXNtLTN7cGFkZGluZy1ib3R0b206MXJlbSFpbXBvcnRhbnR9LnBsLXNtLTMsLnB4LXNtLTN7cGFkZGluZy1sZWZ0OjFyZW0haW1wb3J0YW50fS5wLXNtLTR7cGFkZGluZzoxLjVyZW0haW1wb3J0YW50fS5wdC1zbS00LC5weS1zbS00e3BhZGRpbmctdG9wOjEuNXJlbSFpbXBvcnRhbnR9LnByLXNtLTQsLnB4LXNtLTR7cGFkZGluZy1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5wYi1zbS00LC5weS1zbS00e3BhZGRpbmctYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9LnBsLXNtLTQsLnB4LXNtLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSFpbXBvcnRhbnR9LnAtc20tNXtwYWRkaW5nOjNyZW0haW1wb3J0YW50fS5wdC1zbS01LC5weS1zbS01e3BhZGRpbmctdG9wOjNyZW0haW1wb3J0YW50fS5wci1zbS01LC5weC1zbS01e3BhZGRpbmctcmlnaHQ6M3JlbSFpbXBvcnRhbnR9LnBiLXNtLTUsLnB5LXNtLTV7cGFkZGluZy1ib3R0b206M3JlbSFpbXBvcnRhbnR9LnBsLXNtLTUsLnB4LXNtLTV7cGFkZGluZy1sZWZ0OjNyZW0haW1wb3J0YW50fS5tLXNtLW4xe21hcmdpbjotLjI1cmVtIWltcG9ydGFudH0ubXQtc20tbjEsLm15LXNtLW4xe21hcmdpbi10b3A6LS4yNXJlbSFpbXBvcnRhbnR9Lm1yLXNtLW4xLC5teC1zbS1uMXttYXJnaW4tcmlnaHQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm1iLXNtLW4xLC5teS1zbS1uMXttYXJnaW4tYm90dG9tOi0uMjVyZW0haW1wb3J0YW50fS5tbC1zbS1uMSwubXgtc20tbjF7bWFyZ2luLWxlZnQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm0tc20tbjJ7bWFyZ2luOi0uNXJlbSFpbXBvcnRhbnR9Lm10LXNtLW4yLC5teS1zbS1uMnttYXJnaW4tdG9wOi0uNXJlbSFpbXBvcnRhbnR9Lm1yLXNtLW4yLC5teC1zbS1uMnttYXJnaW4tcmlnaHQ6LS41cmVtIWltcG9ydGFudH0ubWItc20tbjIsLm15LXNtLW4ye21hcmdpbi1ib3R0b206LS41cmVtIWltcG9ydGFudH0ubWwtc20tbjIsLm14LXNtLW4ye21hcmdpbi1sZWZ0Oi0uNXJlbSFpbXBvcnRhbnR9Lm0tc20tbjN7bWFyZ2luOi0xcmVtIWltcG9ydGFudH0ubXQtc20tbjMsLm15LXNtLW4ze21hcmdpbi10b3A6LTFyZW0haW1wb3J0YW50fS5tci1zbS1uMywubXgtc20tbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtIWltcG9ydGFudH0ubWItc20tbjMsLm15LXNtLW4ze21hcmdpbi1ib3R0b206LTFyZW0haW1wb3J0YW50fS5tbC1zbS1uMywubXgtc20tbjN7bWFyZ2luLWxlZnQ6LTFyZW0haW1wb3J0YW50fS5tLXNtLW40e21hcmdpbjotMS41cmVtIWltcG9ydGFudH0ubXQtc20tbjQsLm15LXNtLW40e21hcmdpbi10b3A6LTEuNXJlbSFpbXBvcnRhbnR9Lm1yLXNtLW40LC5teC1zbS1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm1iLXNtLW40LC5teS1zbS1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0haW1wb3J0YW50fS5tbC1zbS1uNCwubXgtc20tbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm0tc20tbjV7bWFyZ2luOi0zcmVtIWltcG9ydGFudH0ubXQtc20tbjUsLm15LXNtLW41e21hcmdpbi10b3A6LTNyZW0haW1wb3J0YW50fS5tci1zbS1uNSwubXgtc20tbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtIWltcG9ydGFudH0ubWItc20tbjUsLm15LXNtLW41e21hcmdpbi1ib3R0b206LTNyZW0haW1wb3J0YW50fS5tbC1zbS1uNSwubXgtc20tbjV7bWFyZ2luLWxlZnQ6LTNyZW0haW1wb3J0YW50fS5tLXNtLWF1dG97bWFyZ2luOmF1dG8haW1wb3J0YW50fS5tdC1zbS1hdXRvLC5teS1zbS1hdXRve21hcmdpbi10b3A6YXV0byFpbXBvcnRhbnR9Lm1yLXNtLWF1dG8sLm14LXNtLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8haW1wb3J0YW50fS5tYi1zbS1hdXRvLC5teS1zbS1hdXRve21hcmdpbi1ib3R0b206YXV0byFpbXBvcnRhbnR9Lm1sLXNtLWF1dG8sLm14LXNtLWF1dG97bWFyZ2luLWxlZnQ6YXV0byFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjc2OHB4KXsubS1tZC0we21hcmdpbjowIWltcG9ydGFudH0ubXQtbWQtMCwubXktbWQtMHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5tci1tZC0wLC5teC1tZC0we21hcmdpbi1yaWdodDowIWltcG9ydGFudH0ubWItbWQtMCwubXktbWQtMHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5tbC1tZC0wLC5teC1tZC0we21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50fS5tLW1kLTF7bWFyZ2luOi4yNXJlbSFpbXBvcnRhbnR9Lm10LW1kLTEsLm15LW1kLTF7bWFyZ2luLXRvcDouMjVyZW0haW1wb3J0YW50fS5tci1tZC0xLC5teC1tZC0xe21hcmdpbi1yaWdodDouMjVyZW0haW1wb3J0YW50fS5tYi1tZC0xLC5teS1tZC0xe21hcmdpbi1ib3R0b206LjI1cmVtIWltcG9ydGFudH0ubWwtbWQtMSwubXgtbWQtMXttYXJnaW4tbGVmdDouMjVyZW0haW1wb3J0YW50fS5tLW1kLTJ7bWFyZ2luOi41cmVtIWltcG9ydGFudH0ubXQtbWQtMiwubXktbWQtMnttYXJnaW4tdG9wOi41cmVtIWltcG9ydGFudH0ubXItbWQtMiwubXgtbWQtMnttYXJnaW4tcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5tYi1tZC0yLC5teS1tZC0ye21hcmdpbi1ib3R0b206LjVyZW0haW1wb3J0YW50fS5tbC1tZC0yLC5teC1tZC0ye21hcmdpbi1sZWZ0Oi41cmVtIWltcG9ydGFudH0ubS1tZC0ze21hcmdpbjoxcmVtIWltcG9ydGFudH0ubXQtbWQtMywubXktbWQtM3ttYXJnaW4tdG9wOjFyZW0haW1wb3J0YW50fS5tci1tZC0zLC5teC1tZC0ze21hcmdpbi1yaWdodDoxcmVtIWltcG9ydGFudH0ubWItbWQtMywubXktbWQtM3ttYXJnaW4tYm90dG9tOjFyZW0haW1wb3J0YW50fS5tbC1tZC0zLC5teC1tZC0ze21hcmdpbi1sZWZ0OjFyZW0haW1wb3J0YW50fS5tLW1kLTR7bWFyZ2luOjEuNXJlbSFpbXBvcnRhbnR9Lm10LW1kLTQsLm15LW1kLTR7bWFyZ2luLXRvcDoxLjVyZW0haW1wb3J0YW50fS5tci1tZC00LC5teC1tZC00e21hcmdpbi1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5tYi1tZC00LC5teS1tZC00e21hcmdpbi1ib3R0b206MS41cmVtIWltcG9ydGFudH0ubWwtbWQtNCwubXgtbWQtNHttYXJnaW4tbGVmdDoxLjVyZW0haW1wb3J0YW50fS5tLW1kLTV7bWFyZ2luOjNyZW0haW1wb3J0YW50fS5tdC1tZC01LC5teS1tZC01e21hcmdpbi10b3A6M3JlbSFpbXBvcnRhbnR9Lm1yLW1kLTUsLm14LW1kLTV7bWFyZ2luLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5tYi1tZC01LC5teS1tZC01e21hcmdpbi1ib3R0b206M3JlbSFpbXBvcnRhbnR9Lm1sLW1kLTUsLm14LW1kLTV7bWFyZ2luLWxlZnQ6M3JlbSFpbXBvcnRhbnR9LnAtbWQtMHtwYWRkaW5nOjAhaW1wb3J0YW50fS5wdC1tZC0wLC5weS1tZC0we3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fS5wci1tZC0wLC5weC1tZC0we3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LnBiLW1kLTAsLnB5LW1kLTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnR9LnBsLW1kLTAsLnB4LW1kLTB7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fS5wLW1kLTF7cGFkZGluZzouMjVyZW0haW1wb3J0YW50fS5wdC1tZC0xLC5weS1tZC0xe3BhZGRpbmctdG9wOi4yNXJlbSFpbXBvcnRhbnR9LnByLW1kLTEsLnB4LW1kLTF7cGFkZGluZy1yaWdodDouMjVyZW0haW1wb3J0YW50fS5wYi1tZC0xLC5weS1tZC0xe3BhZGRpbmctYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9LnBsLW1kLTEsLnB4LW1kLTF7cGFkZGluZy1sZWZ0Oi4yNXJlbSFpbXBvcnRhbnR9LnAtbWQtMntwYWRkaW5nOi41cmVtIWltcG9ydGFudH0ucHQtbWQtMiwucHktbWQtMntwYWRkaW5nLXRvcDouNXJlbSFpbXBvcnRhbnR9LnByLW1kLTIsLnB4LW1kLTJ7cGFkZGluZy1yaWdodDouNXJlbSFpbXBvcnRhbnR9LnBiLW1kLTIsLnB5LW1kLTJ7cGFkZGluZy1ib3R0b206LjVyZW0haW1wb3J0YW50fS5wbC1tZC0yLC5weC1tZC0ye3BhZGRpbmctbGVmdDouNXJlbSFpbXBvcnRhbnR9LnAtbWQtM3twYWRkaW5nOjFyZW0haW1wb3J0YW50fS5wdC1tZC0zLC5weS1tZC0ze3BhZGRpbmctdG9wOjFyZW0haW1wb3J0YW50fS5wci1tZC0zLC5weC1tZC0ze3BhZGRpbmctcmlnaHQ6MXJlbSFpbXBvcnRhbnR9LnBiLW1kLTMsLnB5LW1kLTN7cGFkZGluZy1ib3R0b206MXJlbSFpbXBvcnRhbnR9LnBsLW1kLTMsLnB4LW1kLTN7cGFkZGluZy1sZWZ0OjFyZW0haW1wb3J0YW50fS5wLW1kLTR7cGFkZGluZzoxLjVyZW0haW1wb3J0YW50fS5wdC1tZC00LC5weS1tZC00e3BhZGRpbmctdG9wOjEuNXJlbSFpbXBvcnRhbnR9LnByLW1kLTQsLnB4LW1kLTR7cGFkZGluZy1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5wYi1tZC00LC5weS1tZC00e3BhZGRpbmctYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9LnBsLW1kLTQsLnB4LW1kLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSFpbXBvcnRhbnR9LnAtbWQtNXtwYWRkaW5nOjNyZW0haW1wb3J0YW50fS5wdC1tZC01LC5weS1tZC01e3BhZGRpbmctdG9wOjNyZW0haW1wb3J0YW50fS5wci1tZC01LC5weC1tZC01e3BhZGRpbmctcmlnaHQ6M3JlbSFpbXBvcnRhbnR9LnBiLW1kLTUsLnB5LW1kLTV7cGFkZGluZy1ib3R0b206M3JlbSFpbXBvcnRhbnR9LnBsLW1kLTUsLnB4LW1kLTV7cGFkZGluZy1sZWZ0OjNyZW0haW1wb3J0YW50fS5tLW1kLW4xe21hcmdpbjotLjI1cmVtIWltcG9ydGFudH0ubXQtbWQtbjEsLm15LW1kLW4xe21hcmdpbi10b3A6LS4yNXJlbSFpbXBvcnRhbnR9Lm1yLW1kLW4xLC5teC1tZC1uMXttYXJnaW4tcmlnaHQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm1iLW1kLW4xLC5teS1tZC1uMXttYXJnaW4tYm90dG9tOi0uMjVyZW0haW1wb3J0YW50fS5tbC1tZC1uMSwubXgtbWQtbjF7bWFyZ2luLWxlZnQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm0tbWQtbjJ7bWFyZ2luOi0uNXJlbSFpbXBvcnRhbnR9Lm10LW1kLW4yLC5teS1tZC1uMnttYXJnaW4tdG9wOi0uNXJlbSFpbXBvcnRhbnR9Lm1yLW1kLW4yLC5teC1tZC1uMnttYXJnaW4tcmlnaHQ6LS41cmVtIWltcG9ydGFudH0ubWItbWQtbjIsLm15LW1kLW4ye21hcmdpbi1ib3R0b206LS41cmVtIWltcG9ydGFudH0ubWwtbWQtbjIsLm14LW1kLW4ye21hcmdpbi1sZWZ0Oi0uNXJlbSFpbXBvcnRhbnR9Lm0tbWQtbjN7bWFyZ2luOi0xcmVtIWltcG9ydGFudH0ubXQtbWQtbjMsLm15LW1kLW4ze21hcmdpbi10b3A6LTFyZW0haW1wb3J0YW50fS5tci1tZC1uMywubXgtbWQtbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtIWltcG9ydGFudH0ubWItbWQtbjMsLm15LW1kLW4ze21hcmdpbi1ib3R0b206LTFyZW0haW1wb3J0YW50fS5tbC1tZC1uMywubXgtbWQtbjN7bWFyZ2luLWxlZnQ6LTFyZW0haW1wb3J0YW50fS5tLW1kLW40e21hcmdpbjotMS41cmVtIWltcG9ydGFudH0ubXQtbWQtbjQsLm15LW1kLW40e21hcmdpbi10b3A6LTEuNXJlbSFpbXBvcnRhbnR9Lm1yLW1kLW40LC5teC1tZC1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm1iLW1kLW40LC5teS1tZC1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0haW1wb3J0YW50fS5tbC1tZC1uNCwubXgtbWQtbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm0tbWQtbjV7bWFyZ2luOi0zcmVtIWltcG9ydGFudH0ubXQtbWQtbjUsLm15LW1kLW41e21hcmdpbi10b3A6LTNyZW0haW1wb3J0YW50fS5tci1tZC1uNSwubXgtbWQtbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtIWltcG9ydGFudH0ubWItbWQtbjUsLm15LW1kLW41e21hcmdpbi1ib3R0b206LTNyZW0haW1wb3J0YW50fS5tbC1tZC1uNSwubXgtbWQtbjV7bWFyZ2luLWxlZnQ6LTNyZW0haW1wb3J0YW50fS5tLW1kLWF1dG97bWFyZ2luOmF1dG8haW1wb3J0YW50fS5tdC1tZC1hdXRvLC5teS1tZC1hdXRve21hcmdpbi10b3A6YXV0byFpbXBvcnRhbnR9Lm1yLW1kLWF1dG8sLm14LW1kLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8haW1wb3J0YW50fS5tYi1tZC1hdXRvLC5teS1tZC1hdXRve21hcmdpbi1ib3R0b206YXV0byFpbXBvcnRhbnR9Lm1sLW1kLWF1dG8sLm14LW1kLWF1dG97bWFyZ2luLWxlZnQ6YXV0byFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjk5MnB4KXsubS1sZy0we21hcmdpbjowIWltcG9ydGFudH0ubXQtbGctMCwubXktbGctMHttYXJnaW4tdG9wOjAhaW1wb3J0YW50fS5tci1sZy0wLC5teC1sZy0we21hcmdpbi1yaWdodDowIWltcG9ydGFudH0ubWItbGctMCwubXktbGctMHttYXJnaW4tYm90dG9tOjAhaW1wb3J0YW50fS5tbC1sZy0wLC5teC1sZy0we21hcmdpbi1sZWZ0OjAhaW1wb3J0YW50fS5tLWxnLTF7bWFyZ2luOi4yNXJlbSFpbXBvcnRhbnR9Lm10LWxnLTEsLm15LWxnLTF7bWFyZ2luLXRvcDouMjVyZW0haW1wb3J0YW50fS5tci1sZy0xLC5teC1sZy0xe21hcmdpbi1yaWdodDouMjVyZW0haW1wb3J0YW50fS5tYi1sZy0xLC5teS1sZy0xe21hcmdpbi1ib3R0b206LjI1cmVtIWltcG9ydGFudH0ubWwtbGctMSwubXgtbGctMXttYXJnaW4tbGVmdDouMjVyZW0haW1wb3J0YW50fS5tLWxnLTJ7bWFyZ2luOi41cmVtIWltcG9ydGFudH0ubXQtbGctMiwubXktbGctMnttYXJnaW4tdG9wOi41cmVtIWltcG9ydGFudH0ubXItbGctMiwubXgtbGctMnttYXJnaW4tcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5tYi1sZy0yLC5teS1sZy0ye21hcmdpbi1ib3R0b206LjVyZW0haW1wb3J0YW50fS5tbC1sZy0yLC5teC1sZy0ye21hcmdpbi1sZWZ0Oi41cmVtIWltcG9ydGFudH0ubS1sZy0ze21hcmdpbjoxcmVtIWltcG9ydGFudH0ubXQtbGctMywubXktbGctM3ttYXJnaW4tdG9wOjFyZW0haW1wb3J0YW50fS5tci1sZy0zLC5teC1sZy0ze21hcmdpbi1yaWdodDoxcmVtIWltcG9ydGFudH0ubWItbGctMywubXktbGctM3ttYXJnaW4tYm90dG9tOjFyZW0haW1wb3J0YW50fS5tbC1sZy0zLC5teC1sZy0ze21hcmdpbi1sZWZ0OjFyZW0haW1wb3J0YW50fS5tLWxnLTR7bWFyZ2luOjEuNXJlbSFpbXBvcnRhbnR9Lm10LWxnLTQsLm15LWxnLTR7bWFyZ2luLXRvcDoxLjVyZW0haW1wb3J0YW50fS5tci1sZy00LC5teC1sZy00e21hcmdpbi1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5tYi1sZy00LC5teS1sZy00e21hcmdpbi1ib3R0b206MS41cmVtIWltcG9ydGFudH0ubWwtbGctNCwubXgtbGctNHttYXJnaW4tbGVmdDoxLjVyZW0haW1wb3J0YW50fS5tLWxnLTV7bWFyZ2luOjNyZW0haW1wb3J0YW50fS5tdC1sZy01LC5teS1sZy01e21hcmdpbi10b3A6M3JlbSFpbXBvcnRhbnR9Lm1yLWxnLTUsLm14LWxnLTV7bWFyZ2luLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5tYi1sZy01LC5teS1sZy01e21hcmdpbi1ib3R0b206M3JlbSFpbXBvcnRhbnR9Lm1sLWxnLTUsLm14LWxnLTV7bWFyZ2luLWxlZnQ6M3JlbSFpbXBvcnRhbnR9LnAtbGctMHtwYWRkaW5nOjAhaW1wb3J0YW50fS5wdC1sZy0wLC5weS1sZy0we3BhZGRpbmctdG9wOjAhaW1wb3J0YW50fS5wci1sZy0wLC5weC1sZy0we3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnR9LnBiLWxnLTAsLnB5LWxnLTB7cGFkZGluZy1ib3R0b206MCFpbXBvcnRhbnR9LnBsLWxnLTAsLnB4LWxnLTB7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50fS5wLWxnLTF7cGFkZGluZzouMjVyZW0haW1wb3J0YW50fS5wdC1sZy0xLC5weS1sZy0xe3BhZGRpbmctdG9wOi4yNXJlbSFpbXBvcnRhbnR9LnByLWxnLTEsLnB4LWxnLTF7cGFkZGluZy1yaWdodDouMjVyZW0haW1wb3J0YW50fS5wYi1sZy0xLC5weS1sZy0xe3BhZGRpbmctYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9LnBsLWxnLTEsLnB4LWxnLTF7cGFkZGluZy1sZWZ0Oi4yNXJlbSFpbXBvcnRhbnR9LnAtbGctMntwYWRkaW5nOi41cmVtIWltcG9ydGFudH0ucHQtbGctMiwucHktbGctMntwYWRkaW5nLXRvcDouNXJlbSFpbXBvcnRhbnR9LnByLWxnLTIsLnB4LWxnLTJ7cGFkZGluZy1yaWdodDouNXJlbSFpbXBvcnRhbnR9LnBiLWxnLTIsLnB5LWxnLTJ7cGFkZGluZy1ib3R0b206LjVyZW0haW1wb3J0YW50fS5wbC1sZy0yLC5weC1sZy0ye3BhZGRpbmctbGVmdDouNXJlbSFpbXBvcnRhbnR9LnAtbGctM3twYWRkaW5nOjFyZW0haW1wb3J0YW50fS5wdC1sZy0zLC5weS1sZy0ze3BhZGRpbmctdG9wOjFyZW0haW1wb3J0YW50fS5wci1sZy0zLC5weC1sZy0ze3BhZGRpbmctcmlnaHQ6MXJlbSFpbXBvcnRhbnR9LnBiLWxnLTMsLnB5LWxnLTN7cGFkZGluZy1ib3R0b206MXJlbSFpbXBvcnRhbnR9LnBsLWxnLTMsLnB4LWxnLTN7cGFkZGluZy1sZWZ0OjFyZW0haW1wb3J0YW50fS5wLWxnLTR7cGFkZGluZzoxLjVyZW0haW1wb3J0YW50fS5wdC1sZy00LC5weS1sZy00e3BhZGRpbmctdG9wOjEuNXJlbSFpbXBvcnRhbnR9LnByLWxnLTQsLnB4LWxnLTR7cGFkZGluZy1yaWdodDoxLjVyZW0haW1wb3J0YW50fS5wYi1sZy00LC5weS1sZy00e3BhZGRpbmctYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9LnBsLWxnLTQsLnB4LWxnLTR7cGFkZGluZy1sZWZ0OjEuNXJlbSFpbXBvcnRhbnR9LnAtbGctNXtwYWRkaW5nOjNyZW0haW1wb3J0YW50fS5wdC1sZy01LC5weS1sZy01e3BhZGRpbmctdG9wOjNyZW0haW1wb3J0YW50fS5wci1sZy01LC5weC1sZy01e3BhZGRpbmctcmlnaHQ6M3JlbSFpbXBvcnRhbnR9LnBiLWxnLTUsLnB5LWxnLTV7cGFkZGluZy1ib3R0b206M3JlbSFpbXBvcnRhbnR9LnBsLWxnLTUsLnB4LWxnLTV7cGFkZGluZy1sZWZ0OjNyZW0haW1wb3J0YW50fS5tLWxnLW4xe21hcmdpbjotLjI1cmVtIWltcG9ydGFudH0ubXQtbGctbjEsLm15LWxnLW4xe21hcmdpbi10b3A6LS4yNXJlbSFpbXBvcnRhbnR9Lm1yLWxnLW4xLC5teC1sZy1uMXttYXJnaW4tcmlnaHQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm1iLWxnLW4xLC5teS1sZy1uMXttYXJnaW4tYm90dG9tOi0uMjVyZW0haW1wb3J0YW50fS5tbC1sZy1uMSwubXgtbGctbjF7bWFyZ2luLWxlZnQ6LS4yNXJlbSFpbXBvcnRhbnR9Lm0tbGctbjJ7bWFyZ2luOi0uNXJlbSFpbXBvcnRhbnR9Lm10LWxnLW4yLC5teS1sZy1uMnttYXJnaW4tdG9wOi0uNXJlbSFpbXBvcnRhbnR9Lm1yLWxnLW4yLC5teC1sZy1uMnttYXJnaW4tcmlnaHQ6LS41cmVtIWltcG9ydGFudH0ubWItbGctbjIsLm15LWxnLW4ye21hcmdpbi1ib3R0b206LS41cmVtIWltcG9ydGFudH0ubWwtbGctbjIsLm14LWxnLW4ye21hcmdpbi1sZWZ0Oi0uNXJlbSFpbXBvcnRhbnR9Lm0tbGctbjN7bWFyZ2luOi0xcmVtIWltcG9ydGFudH0ubXQtbGctbjMsLm15LWxnLW4ze21hcmdpbi10b3A6LTFyZW0haW1wb3J0YW50fS5tci1sZy1uMywubXgtbGctbjN7bWFyZ2luLXJpZ2h0Oi0xcmVtIWltcG9ydGFudH0ubWItbGctbjMsLm15LWxnLW4ze21hcmdpbi1ib3R0b206LTFyZW0haW1wb3J0YW50fS5tbC1sZy1uMywubXgtbGctbjN7bWFyZ2luLWxlZnQ6LTFyZW0haW1wb3J0YW50fS5tLWxnLW40e21hcmdpbjotMS41cmVtIWltcG9ydGFudH0ubXQtbGctbjQsLm15LWxnLW40e21hcmdpbi10b3A6LTEuNXJlbSFpbXBvcnRhbnR9Lm1yLWxnLW40LC5teC1sZy1uNHttYXJnaW4tcmlnaHQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm1iLWxnLW40LC5teS1sZy1uNHttYXJnaW4tYm90dG9tOi0xLjVyZW0haW1wb3J0YW50fS5tbC1sZy1uNCwubXgtbGctbjR7bWFyZ2luLWxlZnQ6LTEuNXJlbSFpbXBvcnRhbnR9Lm0tbGctbjV7bWFyZ2luOi0zcmVtIWltcG9ydGFudH0ubXQtbGctbjUsLm15LWxnLW41e21hcmdpbi10b3A6LTNyZW0haW1wb3J0YW50fS5tci1sZy1uNSwubXgtbGctbjV7bWFyZ2luLXJpZ2h0Oi0zcmVtIWltcG9ydGFudH0ubWItbGctbjUsLm15LWxnLW41e21hcmdpbi1ib3R0b206LTNyZW0haW1wb3J0YW50fS5tbC1sZy1uNSwubXgtbGctbjV7bWFyZ2luLWxlZnQ6LTNyZW0haW1wb3J0YW50fS5tLWxnLWF1dG97bWFyZ2luOmF1dG8haW1wb3J0YW50fS5tdC1sZy1hdXRvLC5teS1sZy1hdXRve21hcmdpbi10b3A6YXV0byFpbXBvcnRhbnR9Lm1yLWxnLWF1dG8sLm14LWxnLWF1dG97bWFyZ2luLXJpZ2h0OmF1dG8haW1wb3J0YW50fS5tYi1sZy1hdXRvLC5teS1sZy1hdXRve21hcmdpbi1ib3R0b206YXV0byFpbXBvcnRhbnR9Lm1sLWxnLWF1dG8sLm14LWxnLWF1dG97bWFyZ2luLWxlZnQ6YXV0byFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7Lm0teGwtMHttYXJnaW46MCFpbXBvcnRhbnR9Lm10LXhsLTAsLm15LXhsLTB7bWFyZ2luLXRvcDowIWltcG9ydGFudH0ubXIteGwtMCwubXgteGwtMHttYXJnaW4tcmlnaHQ6MCFpbXBvcnRhbnR9Lm1iLXhsLTAsLm15LXhsLTB7bWFyZ2luLWJvdHRvbTowIWltcG9ydGFudH0ubWwteGwtMCwubXgteGwtMHttYXJnaW4tbGVmdDowIWltcG9ydGFudH0ubS14bC0xe21hcmdpbjouMjVyZW0haW1wb3J0YW50fS5tdC14bC0xLC5teS14bC0xe21hcmdpbi10b3A6LjI1cmVtIWltcG9ydGFudH0ubXIteGwtMSwubXgteGwtMXttYXJnaW4tcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ubWIteGwtMSwubXkteGwtMXttYXJnaW4tYm90dG9tOi4yNXJlbSFpbXBvcnRhbnR9Lm1sLXhsLTEsLm14LXhsLTF7bWFyZ2luLWxlZnQ6LjI1cmVtIWltcG9ydGFudH0ubS14bC0ye21hcmdpbjouNXJlbSFpbXBvcnRhbnR9Lm10LXhsLTIsLm15LXhsLTJ7bWFyZ2luLXRvcDouNXJlbSFpbXBvcnRhbnR9Lm1yLXhsLTIsLm14LXhsLTJ7bWFyZ2luLXJpZ2h0Oi41cmVtIWltcG9ydGFudH0ubWIteGwtMiwubXkteGwtMnttYXJnaW4tYm90dG9tOi41cmVtIWltcG9ydGFudH0ubWwteGwtMiwubXgteGwtMnttYXJnaW4tbGVmdDouNXJlbSFpbXBvcnRhbnR9Lm0teGwtM3ttYXJnaW46MXJlbSFpbXBvcnRhbnR9Lm10LXhsLTMsLm15LXhsLTN7bWFyZ2luLXRvcDoxcmVtIWltcG9ydGFudH0ubXIteGwtMywubXgteGwtM3ttYXJnaW4tcmlnaHQ6MXJlbSFpbXBvcnRhbnR9Lm1iLXhsLTMsLm15LXhsLTN7bWFyZ2luLWJvdHRvbToxcmVtIWltcG9ydGFudH0ubWwteGwtMywubXgteGwtM3ttYXJnaW4tbGVmdDoxcmVtIWltcG9ydGFudH0ubS14bC00e21hcmdpbjoxLjVyZW0haW1wb3J0YW50fS5tdC14bC00LC5teS14bC00e21hcmdpbi10b3A6MS41cmVtIWltcG9ydGFudH0ubXIteGwtNCwubXgteGwtNHttYXJnaW4tcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ubWIteGwtNCwubXkteGwtNHttYXJnaW4tYm90dG9tOjEuNXJlbSFpbXBvcnRhbnR9Lm1sLXhsLTQsLm14LXhsLTR7bWFyZ2luLWxlZnQ6MS41cmVtIWltcG9ydGFudH0ubS14bC01e21hcmdpbjozcmVtIWltcG9ydGFudH0ubXQteGwtNSwubXkteGwtNXttYXJnaW4tdG9wOjNyZW0haW1wb3J0YW50fS5tci14bC01LC5teC14bC01e21hcmdpbi1yaWdodDozcmVtIWltcG9ydGFudH0ubWIteGwtNSwubXkteGwtNXttYXJnaW4tYm90dG9tOjNyZW0haW1wb3J0YW50fS5tbC14bC01LC5teC14bC01e21hcmdpbi1sZWZ0OjNyZW0haW1wb3J0YW50fS5wLXhsLTB7cGFkZGluZzowIWltcG9ydGFudH0ucHQteGwtMCwucHkteGwtMHtwYWRkaW5nLXRvcDowIWltcG9ydGFudH0ucHIteGwtMCwucHgteGwtMHtwYWRkaW5nLXJpZ2h0OjAhaW1wb3J0YW50fS5wYi14bC0wLC5weS14bC0we3BhZGRpbmctYm90dG9tOjAhaW1wb3J0YW50fS5wbC14bC0wLC5weC14bC0we3BhZGRpbmctbGVmdDowIWltcG9ydGFudH0ucC14bC0xe3BhZGRpbmc6LjI1cmVtIWltcG9ydGFudH0ucHQteGwtMSwucHkteGwtMXtwYWRkaW5nLXRvcDouMjVyZW0haW1wb3J0YW50fS5wci14bC0xLC5weC14bC0xe3BhZGRpbmctcmlnaHQ6LjI1cmVtIWltcG9ydGFudH0ucGIteGwtMSwucHkteGwtMXtwYWRkaW5nLWJvdHRvbTouMjVyZW0haW1wb3J0YW50fS5wbC14bC0xLC5weC14bC0xe3BhZGRpbmctbGVmdDouMjVyZW0haW1wb3J0YW50fS5wLXhsLTJ7cGFkZGluZzouNXJlbSFpbXBvcnRhbnR9LnB0LXhsLTIsLnB5LXhsLTJ7cGFkZGluZy10b3A6LjVyZW0haW1wb3J0YW50fS5wci14bC0yLC5weC14bC0ye3BhZGRpbmctcmlnaHQ6LjVyZW0haW1wb3J0YW50fS5wYi14bC0yLC5weS14bC0ye3BhZGRpbmctYm90dG9tOi41cmVtIWltcG9ydGFudH0ucGwteGwtMiwucHgteGwtMntwYWRkaW5nLWxlZnQ6LjVyZW0haW1wb3J0YW50fS5wLXhsLTN7cGFkZGluZzoxcmVtIWltcG9ydGFudH0ucHQteGwtMywucHkteGwtM3twYWRkaW5nLXRvcDoxcmVtIWltcG9ydGFudH0ucHIteGwtMywucHgteGwtM3twYWRkaW5nLXJpZ2h0OjFyZW0haW1wb3J0YW50fS5wYi14bC0zLC5weS14bC0ze3BhZGRpbmctYm90dG9tOjFyZW0haW1wb3J0YW50fS5wbC14bC0zLC5weC14bC0ze3BhZGRpbmctbGVmdDoxcmVtIWltcG9ydGFudH0ucC14bC00e3BhZGRpbmc6MS41cmVtIWltcG9ydGFudH0ucHQteGwtNCwucHkteGwtNHtwYWRkaW5nLXRvcDoxLjVyZW0haW1wb3J0YW50fS5wci14bC00LC5weC14bC00e3BhZGRpbmctcmlnaHQ6MS41cmVtIWltcG9ydGFudH0ucGIteGwtNCwucHkteGwtNHtwYWRkaW5nLWJvdHRvbToxLjVyZW0haW1wb3J0YW50fS5wbC14bC00LC5weC14bC00e3BhZGRpbmctbGVmdDoxLjVyZW0haW1wb3J0YW50fS5wLXhsLTV7cGFkZGluZzozcmVtIWltcG9ydGFudH0ucHQteGwtNSwucHkteGwtNXtwYWRkaW5nLXRvcDozcmVtIWltcG9ydGFudH0ucHIteGwtNSwucHgteGwtNXtwYWRkaW5nLXJpZ2h0OjNyZW0haW1wb3J0YW50fS5wYi14bC01LC5weS14bC01e3BhZGRpbmctYm90dG9tOjNyZW0haW1wb3J0YW50fS5wbC14bC01LC5weC14bC01e3BhZGRpbmctbGVmdDozcmVtIWltcG9ydGFudH0ubS14bC1uMXttYXJnaW46LS4yNXJlbSFpbXBvcnRhbnR9Lm10LXhsLW4xLC5teS14bC1uMXttYXJnaW4tdG9wOi0uMjVyZW0haW1wb3J0YW50fS5tci14bC1uMSwubXgteGwtbjF7bWFyZ2luLXJpZ2h0Oi0uMjVyZW0haW1wb3J0YW50fS5tYi14bC1uMSwubXkteGwtbjF7bWFyZ2luLWJvdHRvbTotLjI1cmVtIWltcG9ydGFudH0ubWwteGwtbjEsLm14LXhsLW4xe21hcmdpbi1sZWZ0Oi0uMjVyZW0haW1wb3J0YW50fS5tLXhsLW4ye21hcmdpbjotLjVyZW0haW1wb3J0YW50fS5tdC14bC1uMiwubXkteGwtbjJ7bWFyZ2luLXRvcDotLjVyZW0haW1wb3J0YW50fS5tci14bC1uMiwubXgteGwtbjJ7bWFyZ2luLXJpZ2h0Oi0uNXJlbSFpbXBvcnRhbnR9Lm1iLXhsLW4yLC5teS14bC1uMnttYXJnaW4tYm90dG9tOi0uNXJlbSFpbXBvcnRhbnR9Lm1sLXhsLW4yLC5teC14bC1uMnttYXJnaW4tbGVmdDotLjVyZW0haW1wb3J0YW50fS5tLXhsLW4ze21hcmdpbjotMXJlbSFpbXBvcnRhbnR9Lm10LXhsLW4zLC5teS14bC1uM3ttYXJnaW4tdG9wOi0xcmVtIWltcG9ydGFudH0ubXIteGwtbjMsLm14LXhsLW4ze21hcmdpbi1yaWdodDotMXJlbSFpbXBvcnRhbnR9Lm1iLXhsLW4zLC5teS14bC1uM3ttYXJnaW4tYm90dG9tOi0xcmVtIWltcG9ydGFudH0ubWwteGwtbjMsLm14LXhsLW4ze21hcmdpbi1sZWZ0Oi0xcmVtIWltcG9ydGFudH0ubS14bC1uNHttYXJnaW46LTEuNXJlbSFpbXBvcnRhbnR9Lm10LXhsLW40LC5teS14bC1uNHttYXJnaW4tdG9wOi0xLjVyZW0haW1wb3J0YW50fS5tci14bC1uNCwubXgteGwtbjR7bWFyZ2luLXJpZ2h0Oi0xLjVyZW0haW1wb3J0YW50fS5tYi14bC1uNCwubXkteGwtbjR7bWFyZ2luLWJvdHRvbTotMS41cmVtIWltcG9ydGFudH0ubWwteGwtbjQsLm14LXhsLW40e21hcmdpbi1sZWZ0Oi0xLjVyZW0haW1wb3J0YW50fS5tLXhsLW41e21hcmdpbjotM3JlbSFpbXBvcnRhbnR9Lm10LXhsLW41LC5teS14bC1uNXttYXJnaW4tdG9wOi0zcmVtIWltcG9ydGFudH0ubXIteGwtbjUsLm14LXhsLW41e21hcmdpbi1yaWdodDotM3JlbSFpbXBvcnRhbnR9Lm1iLXhsLW41LC5teS14bC1uNXttYXJnaW4tYm90dG9tOi0zcmVtIWltcG9ydGFudH0ubWwteGwtbjUsLm14LXhsLW41e21hcmdpbi1sZWZ0Oi0zcmVtIWltcG9ydGFudH0ubS14bC1hdXRve21hcmdpbjphdXRvIWltcG9ydGFudH0ubXQteGwtYXV0bywubXkteGwtYXV0b3ttYXJnaW4tdG9wOmF1dG8haW1wb3J0YW50fS5tci14bC1hdXRvLC5teC14bC1hdXRve21hcmdpbi1yaWdodDphdXRvIWltcG9ydGFudH0ubWIteGwtYXV0bywubXkteGwtYXV0b3ttYXJnaW4tYm90dG9tOmF1dG8haW1wb3J0YW50fS5tbC14bC1hdXRvLC5teC14bC1hdXRve21hcmdpbi1sZWZ0OmF1dG8haW1wb3J0YW50fX0uc3RyZXRjaGVkLWxpbms6OmFmdGVye3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3otaW5kZXg6MTtwb2ludGVyLWV2ZW50czphdXRvO2NvbnRlbnQ6XFxcIlxcXCI7YmFja2dyb3VuZC1jb2xvcjpyZ2JhKDAsMCwwLDApfS50ZXh0LW1vbm9zcGFjZXtmb250LWZhbWlseTpTRk1vbm8tUmVndWxhcixNZW5sbyxNb25hY28sQ29uc29sYXMsXFxcIkxpYmVyYXRpb24gTW9ub1xcXCIsXFxcIkNvdXJpZXIgTmV3XFxcIixtb25vc3BhY2UhaW1wb3J0YW50fS50ZXh0LWp1c3RpZnl7dGV4dC1hbGlnbjpqdXN0aWZ5IWltcG9ydGFudH0udGV4dC13cmFwe3doaXRlLXNwYWNlOm5vcm1hbCFpbXBvcnRhbnR9LnRleHQtbm93cmFwe3doaXRlLXNwYWNlOm5vd3JhcCFpbXBvcnRhbnR9LnRleHQtdHJ1bmNhdGV7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXM7d2hpdGUtc3BhY2U6bm93cmFwfS50ZXh0LWxlZnR7dGV4dC1hbGlnbjpsZWZ0IWltcG9ydGFudH0udGV4dC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0IWltcG9ydGFudH0udGV4dC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50fUBtZWRpYSAobWluLXdpZHRoOjU3NnB4KXsudGV4dC1zbS1sZWZ0e3RleHQtYWxpZ246bGVmdCFpbXBvcnRhbnR9LnRleHQtc20tcmlnaHR7dGV4dC1hbGlnbjpyaWdodCFpbXBvcnRhbnR9LnRleHQtc20tY2VudGVye3RleHQtYWxpZ246Y2VudGVyIWltcG9ydGFudH19QG1lZGlhIChtaW4td2lkdGg6NzY4cHgpey50ZXh0LW1kLWxlZnR7dGV4dC1hbGlnbjpsZWZ0IWltcG9ydGFudH0udGV4dC1tZC1yaWdodHt0ZXh0LWFsaWduOnJpZ2h0IWltcG9ydGFudH0udGV4dC1tZC1jZW50ZXJ7dGV4dC1hbGlnbjpjZW50ZXIhaW1wb3J0YW50fX1AbWVkaWEgKG1pbi13aWR0aDo5OTJweCl7LnRleHQtbGctbGVmdHt0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50fS50ZXh0LWxnLXJpZ2h0e3RleHQtYWxpZ246cmlnaHQhaW1wb3J0YW50fS50ZXh0LWxnLWNlbnRlcnt0ZXh0LWFsaWduOmNlbnRlciFpbXBvcnRhbnR9fUBtZWRpYSAobWluLXdpZHRoOjEyMDBweCl7LnRleHQteGwtbGVmdHt0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50fS50ZXh0LXhsLXJpZ2h0e3RleHQtYWxpZ246cmlnaHQhaW1wb3J0YW50fS50ZXh0LXhsLWNlbnRlcnt0ZXh0LWFsaWduOmNlbnRlciFpbXBvcnRhbnR9fS50ZXh0LWxvd2VyY2FzZXt0ZXh0LXRyYW5zZm9ybTpsb3dlcmNhc2UhaW1wb3J0YW50fS50ZXh0LXVwcGVyY2FzZXt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2UhaW1wb3J0YW50fS50ZXh0LWNhcGl0YWxpemV7dGV4dC10cmFuc2Zvcm06Y2FwaXRhbGl6ZSFpbXBvcnRhbnR9LmZvbnQtd2VpZ2h0LWxpZ2h0e2ZvbnQtd2VpZ2h0OjMwMCFpbXBvcnRhbnR9LmZvbnQtd2VpZ2h0LWxpZ2h0ZXJ7Zm9udC13ZWlnaHQ6bGlnaHRlciFpbXBvcnRhbnR9LmZvbnQtd2VpZ2h0LW5vcm1hbHtmb250LXdlaWdodDo0MDAhaW1wb3J0YW50fS5mb250LXdlaWdodC1ib2xke2ZvbnQtd2VpZ2h0OjcwMCFpbXBvcnRhbnR9LmZvbnQtd2VpZ2h0LWJvbGRlcntmb250LXdlaWdodDpib2xkZXIhaW1wb3J0YW50fS5mb250LWl0YWxpY3tmb250LXN0eWxlOml0YWxpYyFpbXBvcnRhbnR9LnRleHQtd2hpdGV7Y29sb3I6I2ZmZiFpbXBvcnRhbnR9LnRleHQtcHJpbWFyeXtjb2xvcjojMDA3YmZmIWltcG9ydGFudH1hLnRleHQtcHJpbWFyeTpmb2N1cyxhLnRleHQtcHJpbWFyeTpob3Zlcntjb2xvcjojMDA1NmIzIWltcG9ydGFudH0udGV4dC1zZWNvbmRhcnl7Y29sb3I6IzZjNzU3ZCFpbXBvcnRhbnR9YS50ZXh0LXNlY29uZGFyeTpmb2N1cyxhLnRleHQtc2Vjb25kYXJ5OmhvdmVye2NvbG9yOiM0OTRmNTQhaW1wb3J0YW50fS50ZXh0LXN1Y2Nlc3N7Y29sb3I6IzI4YTc0NSFpbXBvcnRhbnR9YS50ZXh0LXN1Y2Nlc3M6Zm9jdXMsYS50ZXh0LXN1Y2Nlc3M6aG92ZXJ7Y29sb3I6IzE5NjkyYyFpbXBvcnRhbnR9LnRleHQtaW5mb3tjb2xvcjojMTdhMmI4IWltcG9ydGFudH1hLnRleHQtaW5mbzpmb2N1cyxhLnRleHQtaW5mbzpob3Zlcntjb2xvcjojMGY2Njc0IWltcG9ydGFudH0udGV4dC13YXJuaW5ne2NvbG9yOiNmZmMxMDchaW1wb3J0YW50fWEudGV4dC13YXJuaW5nOmZvY3VzLGEudGV4dC13YXJuaW5nOmhvdmVye2NvbG9yOiNiYThiMDAhaW1wb3J0YW50fS50ZXh0LWRhbmdlcntjb2xvcjojZGMzNTQ1IWltcG9ydGFudH1hLnRleHQtZGFuZ2VyOmZvY3VzLGEudGV4dC1kYW5nZXI6aG92ZXJ7Y29sb3I6I2E3MWQyYSFpbXBvcnRhbnR9LnRleHQtbGlnaHR7Y29sb3I6I2Y4ZjlmYSFpbXBvcnRhbnR9YS50ZXh0LWxpZ2h0OmZvY3VzLGEudGV4dC1saWdodDpob3Zlcntjb2xvcjojY2JkM2RhIWltcG9ydGFudH0udGV4dC1kYXJre2NvbG9yOiMzNDNhNDAhaW1wb3J0YW50fWEudGV4dC1kYXJrOmZvY3VzLGEudGV4dC1kYXJrOmhvdmVye2NvbG9yOiMxMjE0MTYhaW1wb3J0YW50fS50ZXh0LWJvZHl7Y29sb3I6IzIxMjUyOSFpbXBvcnRhbnR9LnRleHQtbXV0ZWR7Y29sb3I6IzZjNzU3ZCFpbXBvcnRhbnR9LnRleHQtYmxhY2stNTB7Y29sb3I6cmdiYSgwLDAsMCwuNSkhaW1wb3J0YW50fS50ZXh0LXdoaXRlLTUwe2NvbG9yOnJnYmEoMjU1LDI1NSwyNTUsLjUpIWltcG9ydGFudH0udGV4dC1oaWRle2ZvbnQ6MC8wIGE7Y29sb3I6dHJhbnNwYXJlbnQ7dGV4dC1zaGFkb3c6bm9uZTtiYWNrZ3JvdW5kLWNvbG9yOnRyYW5zcGFyZW50O2JvcmRlcjowfS50ZXh0LWRlY29yYXRpb24tbm9uZXt0ZXh0LWRlY29yYXRpb246bm9uZSFpbXBvcnRhbnR9LnRleHQtYnJlYWt7d29yZC1icmVhazpicmVhay13b3JkIWltcG9ydGFudDtvdmVyZmxvdy13cmFwOmJyZWFrLXdvcmQhaW1wb3J0YW50fS50ZXh0LXJlc2V0e2NvbG9yOmluaGVyaXQhaW1wb3J0YW50fS52aXNpYmxle3Zpc2liaWxpdHk6dmlzaWJsZSFpbXBvcnRhbnR9LmludmlzaWJsZXt2aXNpYmlsaXR5OmhpZGRlbiFpbXBvcnRhbnR9QG1lZGlhIHByaW50eyosOjphZnRlciw6OmJlZm9yZXt0ZXh0LXNoYWRvdzpub25lIWltcG9ydGFudDtib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50fWE6bm90KC5idG4pe3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmV9YWJiclt0aXRsZV06OmFmdGVye2NvbnRlbnQ6XFxcIiAoXFxcIiBhdHRyKHRpdGxlKSBcXFwiKVxcXCJ9cHJle3doaXRlLXNwYWNlOnByZS13cmFwIWltcG9ydGFudH1ibG9ja3F1b3RlLHByZXtib3JkZXI6MXB4IHNvbGlkICNhZGI1YmQ7cGFnZS1icmVhay1pbnNpZGU6YXZvaWR9dGhlYWR7ZGlzcGxheTp0YWJsZS1oZWFkZXItZ3JvdXB9aW1nLHRye3BhZ2UtYnJlYWstaW5zaWRlOmF2b2lkfWgyLGgzLHB7b3JwaGFuczozO3dpZG93czozfWgyLGgze3BhZ2UtYnJlYWstYWZ0ZXI6YXZvaWR9QHBhZ2V7c2l6ZTphM31ib2R5e21pbi13aWR0aDo5OTJweCFpbXBvcnRhbnR9LmNvbnRhaW5lcnttaW4td2lkdGg6OTkycHghaW1wb3J0YW50fS5uYXZiYXJ7ZGlzcGxheTpub25lfS5iYWRnZXtib3JkZXI6MXB4IHNvbGlkICMwMDB9LnRhYmxle2JvcmRlci1jb2xsYXBzZTpjb2xsYXBzZSFpbXBvcnRhbnR9LnRhYmxlIHRkLC50YWJsZSB0aHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmYhaW1wb3J0YW50fS50YWJsZS1ib3JkZXJlZCB0ZCwudGFibGUtYm9yZGVyZWQgdGh7Ym9yZGVyOjFweCBzb2xpZCAjZGVlMmU2IWltcG9ydGFudH0udGFibGUtZGFya3tjb2xvcjppbmhlcml0fS50YWJsZS1kYXJrIHRib2R5K3Rib2R5LC50YWJsZS1kYXJrIHRkLC50YWJsZS1kYXJrIHRoLC50YWJsZS1kYXJrIHRoZWFkIHRoe2JvcmRlci1jb2xvcjojZGVlMmU2fS50YWJsZSAudGhlYWQtZGFyayB0aHtjb2xvcjppbmhlcml0O2JvcmRlci1jb2xvcjojZGVlMmU2fX1cIiwgXCJcIl0pO1xuLy8gRXhwb3J0c1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzO1xuIiwiLyogZ2xvYmFsIHdpbmRvdyAqL1xuaW1wb3J0IHBvbnlmaWxsIGZyb20gJy4vcG9ueWZpbGwuanMnO1xuXG52YXIgcm9vdDtcblxuaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gc2VsZjtcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IGdsb2JhbDtcbn0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IG1vZHVsZTtcbn0gZWxzZSB7XG4gIHJvb3QgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xufVxuXG52YXIgcmVzdWx0ID0gcG9ueWZpbGwocm9vdCk7XG5leHBvcnQgZGVmYXVsdCByZXN1bHQ7XG4iLCIhZnVuY3Rpb24ocm9vdCwgZmFjdG9yeSkge1xuICAgIFwib2JqZWN0XCIgPT0gdHlwZW9mIGV4cG9ydHMgJiYgXCJvYmplY3RcIiA9PSB0eXBlb2YgbW9kdWxlID8gbW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KHJlcXVpcmUoXCJyZWFjdFwiKSkgOiBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIGRlZmluZSAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKFsgXCJyZWFjdFwiIF0sIGZhY3RvcnkpIDogXCJvYmplY3RcIiA9PSB0eXBlb2YgZXhwb3J0cyA/IGV4cG9ydHMuTWVkaWFRdWVyeSA9IGZhY3RvcnkocmVxdWlyZShcInJlYWN0XCIpKSA6IHJvb3QuTWVkaWFRdWVyeSA9IGZhY3Rvcnkocm9vdC5SZWFjdCk7XG59KFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIHNlbGYgPyBzZWxmIDogdGhpcywgZnVuY3Rpb24oX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV8xX18pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24obW9kdWxlcykge1xuICAgICAgICBmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4gICAgICAgICAgICBpZiAoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuICAgICAgICAgICAgdmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuICAgICAgICAgICAgICAgIGk6IG1vZHVsZUlkLFxuICAgICAgICAgICAgICAgIGw6ICExLFxuICAgICAgICAgICAgICAgIGV4cG9ydHM6IHt9XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pLCBcbiAgICAgICAgICAgIG1vZHVsZS5sID0gITAsIG1vZHVsZS5leHBvcnRzO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4gICAgICAgIHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzLCBfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzLCBcbiAgICAgICAgX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gICAgICAgICAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkgfHwgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6ICExLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6ICEwLFxuICAgICAgICAgICAgICAgIGdldDogZ2V0dGVyXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gICAgICAgICAgICB2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID8gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1vZHVsZS5kZWZhdWx0O1xuICAgICAgICAgICAgfSA6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtb2R1bGU7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIFwiYVwiLCBnZXR0ZXIpLCBnZXR0ZXI7XG4gICAgICAgIH0sIF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7XG4gICAgICAgIH0sIF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCIsIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNyk7XG4gICAgfShbIGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAgICAgZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7XG4gICAgICAgICAgICByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcbiAgICAgICAgICAgIGlmIChvKSB7XG4gICAgICAgICAgICAgICAgaWYgKFwic3RyaW5nXCIgPT0gdHlwZW9mIG8pIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICAgICAgICAgICAgICAgIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJPYmplY3RcIiA9PT0gbiAmJiBvLmNvbnN0cnVjdG9yICYmIChuID0gby5jb25zdHJ1Y3Rvci5uYW1lKSwgXCJNYXBcIiA9PT0gbiB8fCBcIlNldFwiID09PSBuID8gQXJyYXkuZnJvbShvKSA6IFwiQXJndW1lbnRzXCIgPT09IG4gfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikgPyBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pIDogdm9pZCAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XG4gICAgICAgICAgICAobnVsbCA9PSBsZW4gfHwgbGVuID4gYXJyLmxlbmd0aCkgJiYgKGxlbiA9IGFyci5sZW5ndGgpO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldO1xuICAgICAgICAgICAgcmV0dXJuIGFycjI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICAgICAgICAgICAgaWYgKFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2FyciA9IFtdLCBfbiA9ICEwLCBfZCA9ICExLCBfZSA9IHZvaWQgMDtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBfcywgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKSAmJiAoX2Fyci5wdXNoKF9zLnZhbHVlKSwgXG4gICAgICAgICAgICAgICAgICAgICFpIHx8IF9hcnIubGVuZ3RoICE9PSBpKTsgX24gPSAhMCkgO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBfZCA9ICEwLCBfZSA9IGVycjtcbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX24gfHwgbnVsbCA9PSBfaS5yZXR1cm4gfHwgX2kucmV0dXJuKCk7XG4gICAgICAgICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoX2QpIHRocm93IF9lO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBfYXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxKSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3JlYWN0X19fZGVmYXVsdCA9IF9fd2VicGFja19yZXF1aXJlX18ubihfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfXyksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9tYXRjaG1lZGlhcXVlcnlfXyA9IF9fd2VicGFja19yZXF1aXJlX18oOCksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9tYXRjaG1lZGlhcXVlcnlfX19kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9tYXRjaG1lZGlhcXVlcnlfXyksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9oeXBoZW5hdGVfc3R5bGVfbmFtZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygyKSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX3NoYWxsb3dfZXF1YWxfb2JqZWN0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMCksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19zaGFsbG93X2VxdWFsX29iamVjdHNfX19kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19zaGFsbG93X2VxdWFsX29iamVjdHNfXyksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNF9fdG9RdWVyeV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV81X19Db250ZXh0X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYpLCBtYWtlUXVlcnkgPSBmdW5jdGlvbihzZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIHNldHRpbmdzLnF1ZXJ5IHx8IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzRfX3RvUXVlcnlfXy5hKShzZXR0aW5ncyk7XG4gICAgICAgIH0sIGh5cGhlbmF0ZUtleXMgPSBmdW5jdGlvbihvYmopIHtcbiAgICAgICAgICAgIGlmICghb2JqKSByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqKTtcbiAgICAgICAgICAgIHJldHVybiAwID09PSBrZXlzLmxlbmd0aCA/IG51bGwgOiBrZXlzLnJlZHVjZShmdW5jdGlvbihyZXN1bHQsIGtleSkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHRbT2JqZWN0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9oeXBoZW5hdGVfc3R5bGVfbmFtZV9fLmEpKGtleSldID0gb2JqW2tleV0sIFxuICAgICAgICAgICAgICAgIHJlc3VsdDtcbiAgICAgICAgICAgIH0sIHt9KTtcbiAgICAgICAgfSwgdXNlSXNVcGRhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciByZWYgPSBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfX19kZWZhdWx0LmEudXNlUmVmKCExKTtcbiAgICAgICAgICAgIHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfX19kZWZhdWx0LmEudXNlRWZmZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJlZi5jdXJyZW50ID0gITA7XG4gICAgICAgICAgICB9LCBbXSksIHJlZi5jdXJyZW50O1xuICAgICAgICB9LCB1c2VEZXZpY2UgPSBmdW5jdGlvbihkZXZpY2VGcm9tUHJvcHMpIHtcbiAgICAgICAgICAgIHZhciBkZXZpY2VGcm9tQ29udGV4dCA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQuYS51c2VDb250ZXh0KF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfNV9fQ29udGV4dF9fLmEpLCBnZXREZXZpY2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaHlwaGVuYXRlS2V5cyhkZXZpY2VGcm9tUHJvcHMpIHx8IGh5cGhlbmF0ZUtleXMoZGV2aWNlRnJvbUNvbnRleHQpO1xuICAgICAgICAgICAgfSwgX1JlYWN0JHVzZVN0YXRlID0gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3JlYWN0X19fZGVmYXVsdC5hLnVzZVN0YXRlKGdldERldmljZSksIF9SZWFjdCR1c2VTdGF0ZTIgPSBfc2xpY2VkVG9BcnJheShfUmVhY3QkdXNlU3RhdGUsIDIpLCBkZXZpY2UgPSBfUmVhY3QkdXNlU3RhdGUyWzBdLCBzZXREZXZpY2UgPSBfUmVhY3QkdXNlU3RhdGUyWzFdO1xuICAgICAgICAgICAgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQuYS51c2VFZmZlY3QoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgdmFyIG5ld0RldmljZSA9IGdldERldmljZSgpO1xuICAgICAgICAgICAgICAgIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfM19zaGFsbG93X2VxdWFsX29iamVjdHNfX19kZWZhdWx0KCkoZGV2aWNlLCBuZXdEZXZpY2UpIHx8IHNldERldmljZShuZXdEZXZpY2UpO1xuICAgICAgICAgICAgfSwgWyBkZXZpY2VGcm9tUHJvcHMsIGRldmljZUZyb21Db250ZXh0IF0pLCBkZXZpY2U7XG4gICAgICAgIH0sIHVzZVF1ZXJ5ID0gZnVuY3Rpb24oc2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHZhciBnZXRRdWVyeSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBtYWtlUXVlcnkoc2V0dGluZ3MpO1xuICAgICAgICAgICAgfSwgX1JlYWN0JHVzZVN0YXRlMyA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQuYS51c2VTdGF0ZShnZXRRdWVyeSksIF9SZWFjdCR1c2VTdGF0ZTQgPSBfc2xpY2VkVG9BcnJheShfUmVhY3QkdXNlU3RhdGUzLCAyKSwgcXVlcnkgPSBfUmVhY3QkdXNlU3RhdGU0WzBdLCBzZXRRdWVyeSA9IF9SZWFjdCR1c2VTdGF0ZTRbMV07XG4gICAgICAgICAgICByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3JlYWN0X19fZGVmYXVsdC5hLnVzZUVmZmVjdChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmV3UXVlcnkgPSBnZXRRdWVyeSgpO1xuICAgICAgICAgICAgICAgIHF1ZXJ5ICE9PSBuZXdRdWVyeSAmJiBzZXRRdWVyeShuZXdRdWVyeSk7XG4gICAgICAgICAgICB9LCBbIHNldHRpbmdzIF0pLCBxdWVyeTtcbiAgICAgICAgfSwgdXNlTWF0Y2hNZWRpYSA9IGZ1bmN0aW9uKHF1ZXJ5LCBkZXZpY2UpIHtcbiAgICAgICAgICAgIHZhciBnZXRNYXRjaE1lZGlhID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9tYXRjaG1lZGlhcXVlcnlfX19kZWZhdWx0KCkocXVlcnksIGRldmljZSB8fCB7fSwgISFkZXZpY2UpO1xuICAgICAgICAgICAgfSwgX1JlYWN0JHVzZVN0YXRlNSA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQuYS51c2VTdGF0ZShnZXRNYXRjaE1lZGlhKSwgX1JlYWN0JHVzZVN0YXRlNiA9IF9zbGljZWRUb0FycmF5KF9SZWFjdCR1c2VTdGF0ZTUsIDIpLCBtcSA9IF9SZWFjdCR1c2VTdGF0ZTZbMF0sIHNldE1xID0gX1JlYWN0JHVzZVN0YXRlNlsxXSwgaXNVcGRhdGUgPSB1c2VJc1VwZGF0ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQuYS51c2VFZmZlY3QoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzVXBkYXRlICYmIHNldE1xKGdldE1hdGNoTWVkaWEoKSksIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBtcS5kaXNwb3NlKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sIFsgcXVlcnksIGRldmljZSBdKSwgbXE7XG4gICAgICAgIH0sIHVzZU1hdGNoZXMgPSBmdW5jdGlvbihtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgICB2YXIgX1JlYWN0JHVzZVN0YXRlNyA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQuYS51c2VTdGF0ZShtZWRpYVF1ZXJ5Lm1hdGNoZXMpLCBfUmVhY3QkdXNlU3RhdGU4ID0gX3NsaWNlZFRvQXJyYXkoX1JlYWN0JHVzZVN0YXRlNywgMiksIG1hdGNoZXMgPSBfUmVhY3QkdXNlU3RhdGU4WzBdLCBzZXRNYXRjaGVzID0gX1JlYWN0JHVzZVN0YXRlOFsxXTtcbiAgICAgICAgICAgIHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfX19kZWZhdWx0LmEudXNlRWZmZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHZhciB1cGRhdGVNYXRjaGVzID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldE1hdGNoZXMobWVkaWFRdWVyeS5tYXRjaGVzKTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHJldHVybiBtZWRpYVF1ZXJ5LmFkZExpc3RlbmVyKHVwZGF0ZU1hdGNoZXMpLCB1cGRhdGVNYXRjaGVzKCksIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBtZWRpYVF1ZXJ5LnJlbW92ZUxpc3RlbmVyKHVwZGF0ZU1hdGNoZXMpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LCBbIG1lZGlhUXVlcnkgXSksIG1hdGNoZXM7XG4gICAgICAgIH0sIHVzZU1lZGlhUXVlcnkgPSBmdW5jdGlvbihzZXR0aW5ncywgZGV2aWNlLCBvbkNoYW5nZSkge1xuICAgICAgICAgICAgdmFyIGRldmljZVNldHRpbmdzID0gdXNlRGV2aWNlKGRldmljZSksIHF1ZXJ5ID0gdXNlUXVlcnkoc2V0dGluZ3MpO1xuICAgICAgICAgICAgaWYgKCFxdWVyeSkgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBvciBtaXNzaW5nIE1lZGlhUXVlcnkhXCIpO1xuICAgICAgICAgICAgdmFyIG1xID0gdXNlTWF0Y2hNZWRpYShxdWVyeSwgZGV2aWNlU2V0dGluZ3MpLCBtYXRjaGVzID0gdXNlTWF0Y2hlcyhtcSksIGlzVXBkYXRlID0gdXNlSXNVcGRhdGUoKTtcbiAgICAgICAgICAgIHJldHVybiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfX19kZWZhdWx0LmEudXNlRWZmZWN0KGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIGlzVXBkYXRlICYmIG9uQ2hhbmdlICYmIG9uQ2hhbmdlKG1hdGNoZXMpO1xuICAgICAgICAgICAgfSwgWyBtYXRjaGVzIF0pLCBtYXRjaGVzO1xuICAgICAgICB9O1xuICAgICAgICBfX3dlYnBhY2tfZXhwb3J0c19fLmEgPSB1c2VNZWRpYVF1ZXJ5O1xuICAgIH0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMV9fO1xuICAgIH0sIGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAgICAgZnVuY3Rpb24gdG9IeXBoZW5Mb3dlcihtYXRjaCkge1xuICAgICAgICAgICAgcmV0dXJuIFwiLVwiICsgbWF0Y2gudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoeXBoZW5hdGVTdHlsZU5hbWUobmFtZSkge1xuICAgICAgICAgICAgaWYgKGNhY2hlLmhhc093blByb3BlcnR5KG5hbWUpKSByZXR1cm4gY2FjaGVbbmFtZV07XG4gICAgICAgICAgICB2YXIgaE5hbWUgPSBuYW1lLnJlcGxhY2UodXBwZXJjYXNlUGF0dGVybiwgdG9IeXBoZW5Mb3dlcik7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbbmFtZV0gPSBtc1BhdHRlcm4udGVzdChoTmFtZSkgPyBcIi1cIiArIGhOYW1lIDogaE5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVwcGVyY2FzZVBhdHRlcm4gPSAvW0EtWl0vZywgbXNQYXR0ZXJuID0gL15tcy0vLCBjYWNoZSA9IHt9O1xuICAgICAgICBfX3dlYnBhY2tfZXhwb3J0c19fLmEgPSBoeXBoZW5hdGVTdHlsZU5hbWU7XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX2h5cGhlbmF0ZV9zdHlsZV9uYW1lX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21lZGlhUXVlcnlfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMTEpLCBuZWdhdGUgPSBmdW5jdGlvbihjb25kKSB7XG4gICAgICAgICAgICByZXR1cm4gXCJub3QgXCIuY29uY2F0KGNvbmQpO1xuICAgICAgICB9LCBrZXlWYWwgPSBmdW5jdGlvbihrLCB2KSB7XG4gICAgICAgICAgICB2YXIgcmVhbEtleSA9IE9iamVjdChfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfaHlwaGVuYXRlX3N0eWxlX25hbWVfXy5hKShrKTtcbiAgICAgICAgICAgIHJldHVybiBcIm51bWJlclwiID09IHR5cGVvZiB2ICYmICh2ID0gXCJcIi5jb25jYXQodiwgXCJweFwiKSksICEwID09PSB2ID8gcmVhbEtleSA6ICExID09PSB2ID8gbmVnYXRlKHJlYWxLZXkpIDogXCIoXCIuY29uY2F0KHJlYWxLZXksIFwiOiBcIikuY29uY2F0KHYsIFwiKVwiKTtcbiAgICAgICAgfSwgam9pbiA9IGZ1bmN0aW9uKGNvbmRzKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uZHMuam9pbihcIiBhbmQgXCIpO1xuICAgICAgICB9LCB0b1F1ZXJ5ID0gZnVuY3Rpb24ob2JqKSB7XG4gICAgICAgICAgICB2YXIgcnVsZXMgPSBbXTtcbiAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX21lZGlhUXVlcnlfXy5hLmFsbCkuZm9yRWFjaChmdW5jdGlvbihrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHYgPSBvYmpba107XG4gICAgICAgICAgICAgICAgbnVsbCAhPSB2ICYmIHJ1bGVzLnB1c2goa2V5VmFsKGssIHYpKTtcbiAgICAgICAgICAgIH0pLCBqb2luKHJ1bGVzKTtcbiAgICAgICAgfTtcbiAgICAgICAgX193ZWJwYWNrX2V4cG9ydHNfXy5hID0gdG9RdWVyeTtcbiAgICB9LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3JlcXVpcmVfXygxMyk7XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IFwiU0VDUkVUX0RPX05PVF9QQVNTX1RISVNfT1JfWU9VX1dJTExfQkVfRklSRURcIjtcbiAgICB9LCBmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIHZhciBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcmVhY3RfXyA9IF9fd2VicGFja19yZXF1aXJlX18oMSksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9yZWFjdF9fX2RlZmF1bHQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLm4oX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3JlYWN0X18pLCBDb250ZXh0ID0gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3JlYWN0X19fZGVmYXVsdC5hLmNyZWF0ZUNvbnRleHQoKTtcbiAgICAgICAgX193ZWJwYWNrX2V4cG9ydHNfXy5hID0gQ29udGV4dDtcbiAgICB9LCBmdW5jdGlvbihtb2R1bGUsIF9fd2VicGFja19leHBvcnRzX18sIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShfX3dlYnBhY2tfZXhwb3J0c19fLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgICAgICAgICAgdmFsdWU6ICEwXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191c2VNZWRpYVF1ZXJ5X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDApLCBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzFfX0NvbXBvbmVudF9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygxNyksIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMl9fdG9RdWVyeV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygzKSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19Db250ZXh0X18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDYpO1xuICAgICAgICBfX3dlYnBhY2tfcmVxdWlyZV9fLmQoX193ZWJwYWNrX2V4cG9ydHNfXywgXCJkZWZhdWx0XCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMV9fQ29tcG9uZW50X18uYTtcbiAgICAgICAgfSksIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcInVzZU1lZGlhUXVlcnlcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191c2VNZWRpYVF1ZXJ5X18uYTtcbiAgICAgICAgfSksIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcInRvUXVlcnlcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8yX190b1F1ZXJ5X18uYTtcbiAgICAgICAgfSksIF9fd2VicGFja19yZXF1aXJlX18uZChfX3dlYnBhY2tfZXhwb3J0c19fLCBcIkNvbnRleHRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8zX19Db250ZXh0X18uYTtcbiAgICAgICAgfSk7XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICBmdW5jdGlvbiBNcWwocXVlcnksIHZhbHVlcywgZm9yY2VTdGF0aWMpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGFkZExpc3RlbmVyKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgbXFsICYmIG1xbC5hZGRMaXN0ZW5lcihsaXN0ZW5lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiByZW1vdmVMaXN0ZW5lcihsaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgIG1xbCAmJiBtcWwucmVtb3ZlTGlzdGVuZXIobGlzdGVuZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gdXBkYXRlKGV2dCkge1xuICAgICAgICAgICAgICAgIHNlbGYubWF0Y2hlcyA9IGV2dC5tYXRjaGVzLCBzZWxmLm1lZGlhID0gZXZ0Lm1lZGlhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICAgICAgICAgICBtcWwgJiYgbXFsLnJlbW92ZUxpc3RlbmVyKHVwZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoZHluYW1pY01hdGNoICYmICFmb3JjZVN0YXRpYykge1xuICAgICAgICAgICAgICAgIHZhciBtcWwgPSBkeW5hbWljTWF0Y2guY2FsbCh3aW5kb3csIHF1ZXJ5KTtcbiAgICAgICAgICAgICAgICB0aGlzLm1hdGNoZXMgPSBtcWwubWF0Y2hlcywgdGhpcy5tZWRpYSA9IG1xbC5tZWRpYSwgbXFsLmFkZExpc3RlbmVyKHVwZGF0ZSk7XG4gICAgICAgICAgICB9IGVsc2UgdGhpcy5tYXRjaGVzID0gc3RhdGljTWF0Y2gocXVlcnksIHZhbHVlcyksIHRoaXMubWVkaWEgPSBxdWVyeTtcbiAgICAgICAgICAgIHRoaXMuYWRkTGlzdGVuZXIgPSBhZGRMaXN0ZW5lciwgdGhpcy5yZW1vdmVMaXN0ZW5lciA9IHJlbW92ZUxpc3RlbmVyLCB0aGlzLmRpc3Bvc2UgPSBkaXNwb3NlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1hdGNoTWVkaWEocXVlcnksIHZhbHVlcywgZm9yY2VTdGF0aWMpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgTXFsKHF1ZXJ5LCB2YWx1ZXMsIGZvcmNlU3RhdGljKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RhdGljTWF0Y2ggPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkpLm1hdGNoLCBkeW5hbWljTWF0Y2ggPSBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiB3aW5kb3cgPyB3aW5kb3cubWF0Y2hNZWRpYSA6IG51bGw7XG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gbWF0Y2hNZWRpYTtcbiAgICB9LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAgICAgXCJ1c2Ugc3RyaWN0XCI7XG4gICAgICAgIGZ1bmN0aW9uIG1hdGNoUXVlcnkobWVkaWFRdWVyeSwgdmFsdWVzKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyc2VRdWVyeShtZWRpYVF1ZXJ5KS5zb21lKGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgdmFyIGludmVyc2UgPSBxdWVyeS5pbnZlcnNlLCB0eXBlTWF0Y2ggPSBcImFsbFwiID09PSBxdWVyeS50eXBlIHx8IHZhbHVlcy50eXBlID09PSBxdWVyeS50eXBlO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlTWF0Y2ggJiYgaW52ZXJzZSB8fCAhdHlwZU1hdGNoICYmICFpbnZlcnNlKSByZXR1cm4gITE7XG4gICAgICAgICAgICAgICAgdmFyIGV4cHJlc3Npb25zTWF0Y2ggPSBxdWVyeS5leHByZXNzaW9ucy5ldmVyeShmdW5jdGlvbihleHByZXNzaW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBmZWF0dXJlID0gZXhwcmVzc2lvbi5mZWF0dXJlLCBtb2RpZmllciA9IGV4cHJlc3Npb24ubW9kaWZpZXIsIGV4cFZhbHVlID0gZXhwcmVzc2lvbi52YWx1ZSwgdmFsdWUgPSB2YWx1ZXNbZmVhdHVyZV07XG4gICAgICAgICAgICAgICAgICAgIGlmICghdmFsdWUpIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChmZWF0dXJlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIm9yaWVudGF0aW9uXCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcInNjYW5cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS50b0xvd2VyQ2FzZSgpID09PSBleHBWYWx1ZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIndpZHRoXCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImhlaWdodFwiOlxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJkZXZpY2Utd2lkdGhcIjpcbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFwiZGV2aWNlLWhlaWdodFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwVmFsdWUgPSB0b1B4KGV4cFZhbHVlKSwgdmFsdWUgPSB0b1B4KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcInJlc29sdXRpb25cIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cFZhbHVlID0gdG9EcGkoZXhwVmFsdWUpLCB2YWx1ZSA9IHRvRHBpKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImFzcGVjdC1yYXRpb1wiOlxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJkZXZpY2UtYXNwZWN0LXJhdGlvXCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImRldmljZS1waXhlbC1yYXRpb1wiOlxuICAgICAgICAgICAgICAgICAgICAgICAgZXhwVmFsdWUgPSB0b0RlY2ltYWwoZXhwVmFsdWUpLCB2YWx1ZSA9IHRvRGVjaW1hbCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICAgIGNhc2UgXCJncmlkXCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImNvbG9yXCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcImNvbG9yLWluZGV4XCI6XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIm1vbm9jaHJvbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cFZhbHVlID0gcGFyc2VJbnQoZXhwVmFsdWUsIDEwKSB8fCAxLCB2YWx1ZSA9IHBhcnNlSW50KHZhbHVlLCAxMCkgfHwgMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKG1vZGlmaWVyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIm1pblwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlID49IGV4cFZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBcIm1heFwiOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlIDw9IGV4cFZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gZXhwVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZXhwcmVzc2lvbnNNYXRjaCAmJiAhaW52ZXJzZSB8fCAhZXhwcmVzc2lvbnNNYXRjaCAmJiBpbnZlcnNlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcGFyc2VRdWVyeShtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgICByZXR1cm4gbWVkaWFRdWVyeS5zcGxpdChcIixcIikubWFwKGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgPSBxdWVyeS50cmltKCk7XG4gICAgICAgICAgICAgICAgdmFyIGNhcHR1cmVzID0gcXVlcnkubWF0Y2goUkVfTUVESUFfUVVFUlkpLCBtb2RpZmllciA9IGNhcHR1cmVzWzFdLCB0eXBlID0gY2FwdHVyZXNbMl0sIGV4cHJlc3Npb25zID0gY2FwdHVyZXNbM10gfHwgXCJcIiwgcGFyc2VkID0ge307XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlZC5pbnZlcnNlID0gISFtb2RpZmllciAmJiBcIm5vdFwiID09PSBtb2RpZmllci50b0xvd2VyQ2FzZSgpLCBwYXJzZWQudHlwZSA9IHR5cGUgPyB0eXBlLnRvTG93ZXJDYXNlKCkgOiBcImFsbFwiLCBcbiAgICAgICAgICAgICAgICBleHByZXNzaW9ucyA9IGV4cHJlc3Npb25zLm1hdGNoKC9cXChbXlxcKV0rXFwpL2cpIHx8IFtdLCBwYXJzZWQuZXhwcmVzc2lvbnMgPSBleHByZXNzaW9ucy5tYXAoZnVuY3Rpb24oZXhwcmVzc2lvbikge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2FwdHVyZXMgPSBleHByZXNzaW9uLm1hdGNoKFJFX01RX0VYUFJFU1NJT04pLCBmZWF0dXJlID0gY2FwdHVyZXNbMV0udG9Mb3dlckNhc2UoKS5tYXRjaChSRV9NUV9GRUFUVVJFKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGlmaWVyOiBmZWF0dXJlWzFdLFxuICAgICAgICAgICAgICAgICAgICAgICAgZmVhdHVyZTogZmVhdHVyZVsyXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBjYXB0dXJlc1syXVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH0pLCBwYXJzZWQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b0RlY2ltYWwocmF0aW8pIHtcbiAgICAgICAgICAgIHZhciBudW1iZXJzLCBkZWNpbWFsID0gTnVtYmVyKHJhdGlvKTtcbiAgICAgICAgICAgIHJldHVybiBkZWNpbWFsIHx8IChudW1iZXJzID0gcmF0aW8ubWF0Y2goL14oXFxkKylcXHMqXFwvXFxzKihcXGQrKSQvKSwgZGVjaW1hbCA9IG51bWJlcnNbMV0gLyBudW1iZXJzWzJdKSwgXG4gICAgICAgICAgICBkZWNpbWFsO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvRHBpKHJlc29sdXRpb24pIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHBhcnNlRmxvYXQocmVzb2x1dGlvbik7XG4gICAgICAgICAgICBzd2l0Y2ggKFN0cmluZyhyZXNvbHV0aW9uKS5tYXRjaChSRV9SRVNPTFVUSU9OX1VOSVQpWzFdKSB7XG4gICAgICAgICAgICAgIGNhc2UgXCJkcGNtXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlIC8gMi41NDtcblxuICAgICAgICAgICAgICBjYXNlIFwiZHBweFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiA5NiAqIHZhbHVlO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvUHgobGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBwYXJzZUZsb2F0KGxlbmd0aCk7XG4gICAgICAgICAgICBzd2l0Y2ggKFN0cmluZyhsZW5ndGgpLm1hdGNoKFJFX0xFTkdUSF9VTklUKVsxXSkge1xuICAgICAgICAgICAgICBjYXNlIFwiZW1cIjpcbiAgICAgICAgICAgICAgY2FzZSBcInJlbVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiAxNiAqIHZhbHVlO1xuXG4gICAgICAgICAgICAgIGNhc2UgXCJjbVwiOlxuICAgICAgICAgICAgICAgIHJldHVybiA5NiAqIHZhbHVlIC8gMi41NDtcblxuICAgICAgICAgICAgICBjYXNlIFwibW1cIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gOTYgKiB2YWx1ZSAvIDIuNTQgLyAxMDtcblxuICAgICAgICAgICAgICBjYXNlIFwiaW5cIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gOTYgKiB2YWx1ZTtcblxuICAgICAgICAgICAgICBjYXNlIFwicHRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gNzIgKiB2YWx1ZTtcblxuICAgICAgICAgICAgICBjYXNlIFwicGNcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gNzIgKiB2YWx1ZSAvIDEyO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGV4cG9ydHMubWF0Y2ggPSBtYXRjaFF1ZXJ5LCBleHBvcnRzLnBhcnNlID0gcGFyc2VRdWVyeTtcbiAgICAgICAgdmFyIFJFX01FRElBX1FVRVJZID0gLyg/Oihvbmx5fG5vdCk/XFxzKihbXlxcc1xcKFxcKV0rKSg/OlxccyphbmQpP1xccyopPyguKyk/L2ksIFJFX01RX0VYUFJFU1NJT04gPSAvXFwoXFxzKihbXlxcc1xcOlxcKV0rKVxccyooPzpcXDpcXHMqKFteXFxzXFwpXSspKT9cXHMqXFwpLywgUkVfTVFfRkVBVFVSRSA9IC9eKD86KG1pbnxtYXgpLSk/KC4rKS8sIFJFX0xFTkdUSF9VTklUID0gLyhlbXxyZW18cHh8Y218bW18aW58cHR8cGMpPyQvLCBSRV9SRVNPTFVUSU9OX1VOSVQgPSAvKGRwaXxkcGNtfGRwcHgpPyQvO1xuICAgIH0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAgICAgZnVuY3Rpb24gc2hhbGxvd0VxdWFsT2JqZWN0cyhvYmpBLCBvYmpCKSB7XG4gICAgICAgICAgICBpZiAob2JqQSA9PT0gb2JqQikgcmV0dXJuICEwO1xuICAgICAgICAgICAgaWYgKCFvYmpBIHx8ICFvYmpCKSByZXR1cm4gITE7XG4gICAgICAgICAgICB2YXIgYUtleXMgPSBPYmplY3Qua2V5cyhvYmpBKSwgYktleXMgPSBPYmplY3Qua2V5cyhvYmpCKSwgbGVuID0gYUtleXMubGVuZ3RoO1xuICAgICAgICAgICAgaWYgKGJLZXlzLmxlbmd0aCAhPT0gbGVuKSByZXR1cm4gITE7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IGFLZXlzW2ldO1xuICAgICAgICAgICAgICAgIGlmIChvYmpBW2tleV0gIT09IG9iakJba2V5XSB8fCAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iakIsIGtleSkpIHJldHVybiAhMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhMDtcbiAgICAgICAgfVxuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IHNoYWxsb3dFcXVhbE9iamVjdHM7XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBfX3dlYnBhY2tfZXhwb3J0c19fLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICBmdW5jdGlvbiBvd25LZXlzKG9iamVjdCwgZW51bWVyYWJsZU9ubHkpIHtcbiAgICAgICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcbiAgICAgICAgICAgIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZU9ubHkgJiYgKHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbihzeW0pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7XG4gICAgICAgICAgICAgICAgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ga2V5cztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkge1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICB2YXIgc291cmNlID0gbnVsbCAhPSBhcmd1bWVudHNbaV0gPyBhcmd1bWVudHNbaV0gOiB7fTtcbiAgICAgICAgICAgICAgICBpICUgMiA/IG93bktleXMoT2JqZWN0KHNvdXJjZSksICEwKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgICAgICAgICAgICB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKSA6IG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4ga2V5IGluIG9iaiA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiAhMCxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6ICEwLFxuICAgICAgICAgICAgICAgIHdyaXRhYmxlOiAhMFxuICAgICAgICAgICAgfSkgOiBvYmpba2V5XSA9IHZhbHVlLCBvYmo7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEyKSwgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5uKF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX18pLCBzdHJpbmdPck51bWJlciA9IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm9uZU9mVHlwZShbIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLnN0cmluZywgX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEubnVtYmVyIF0pLCBtYXRjaGVycyA9IHtcbiAgICAgICAgICAgIG9yaWVudGF0aW9uOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQuYS5vbmVPZihbIFwicG9ydHJhaXRcIiwgXCJsYW5kc2NhcGVcIiBdKSxcbiAgICAgICAgICAgIHNjYW46IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm9uZU9mKFsgXCJwcm9ncmVzc2l2ZVwiLCBcImludGVybGFjZVwiIF0pLFxuICAgICAgICAgICAgYXNwZWN0UmF0aW86IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLnN0cmluZyxcbiAgICAgICAgICAgIGRldmljZUFzcGVjdFJhdGlvOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQuYS5zdHJpbmcsXG4gICAgICAgICAgICBoZWlnaHQ6IHN0cmluZ09yTnVtYmVyLFxuICAgICAgICAgICAgZGV2aWNlSGVpZ2h0OiBzdHJpbmdPck51bWJlcixcbiAgICAgICAgICAgIHdpZHRoOiBzdHJpbmdPck51bWJlcixcbiAgICAgICAgICAgIGRldmljZVdpZHRoOiBzdHJpbmdPck51bWJlcixcbiAgICAgICAgICAgIGNvbG9yOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQuYS5ib29sLFxuICAgICAgICAgICAgY29sb3JJbmRleDogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIG1vbm9jaHJvbWU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLmJvb2wsXG4gICAgICAgICAgICByZXNvbHV0aW9uOiBzdHJpbmdPck51bWJlclxuICAgICAgICB9LCBmZWF0dXJlcyA9IF9vYmplY3RTcHJlYWQoe1xuICAgICAgICAgICAgbWluQXNwZWN0UmF0aW86IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLnN0cmluZyxcbiAgICAgICAgICAgIG1heEFzcGVjdFJhdGlvOiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQuYS5zdHJpbmcsXG4gICAgICAgICAgICBtaW5EZXZpY2VBc3BlY3RSYXRpbzogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuc3RyaW5nLFxuICAgICAgICAgICAgbWF4RGV2aWNlQXNwZWN0UmF0aW86IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLnN0cmluZyxcbiAgICAgICAgICAgIG1pbkhlaWdodDogc3RyaW5nT3JOdW1iZXIsXG4gICAgICAgICAgICBtYXhIZWlnaHQ6IHN0cmluZ09yTnVtYmVyLFxuICAgICAgICAgICAgbWluRGV2aWNlSGVpZ2h0OiBzdHJpbmdPck51bWJlcixcbiAgICAgICAgICAgIG1heERldmljZUhlaWdodDogc3RyaW5nT3JOdW1iZXIsXG4gICAgICAgICAgICBtaW5XaWR0aDogc3RyaW5nT3JOdW1iZXIsXG4gICAgICAgICAgICBtYXhXaWR0aDogc3RyaW5nT3JOdW1iZXIsXG4gICAgICAgICAgICBtaW5EZXZpY2VXaWR0aDogc3RyaW5nT3JOdW1iZXIsXG4gICAgICAgICAgICBtYXhEZXZpY2VXaWR0aDogc3RyaW5nT3JOdW1iZXIsXG4gICAgICAgICAgICBtaW5Db2xvcjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEubnVtYmVyLFxuICAgICAgICAgICAgbWF4Q29sb3I6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm51bWJlcixcbiAgICAgICAgICAgIG1pbkNvbG9ySW5kZXg6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm51bWJlcixcbiAgICAgICAgICAgIG1heENvbG9ySW5kZXg6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm51bWJlcixcbiAgICAgICAgICAgIG1pbk1vbm9jaHJvbWU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm51bWJlcixcbiAgICAgICAgICAgIG1heE1vbm9jaHJvbWU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLm51bWJlcixcbiAgICAgICAgICAgIG1pblJlc29sdXRpb246IHN0cmluZ09yTnVtYmVyLFxuICAgICAgICAgICAgbWF4UmVzb2x1dGlvbjogc3RyaW5nT3JOdW1iZXJcbiAgICAgICAgfSwgbWF0Y2hlcnMpLCB0eXBlcyA9IHtcbiAgICAgICAgICAgIGFsbDogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIGdyaWQ6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLmJvb2wsXG4gICAgICAgICAgICBhdXJhbDogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIGJyYWlsbGU6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLmJvb2wsXG4gICAgICAgICAgICBoYW5kaGVsZDogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIHByaW50OiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQuYS5ib29sLFxuICAgICAgICAgICAgcHJvamVjdGlvbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIHNjcmVlbjogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIHR0eTogX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX3Byb3BfdHlwZXNfX19kZWZhdWx0LmEuYm9vbCxcbiAgICAgICAgICAgIHR2OiBfX1dFQlBBQ0tfSU1QT1JURURfTU9EVUxFXzBfcHJvcF90eXBlc19fX2RlZmF1bHQuYS5ib29sLFxuICAgICAgICAgICAgZW1ib3NzZWQ6IF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9wcm9wX3R5cGVzX19fZGVmYXVsdC5hLmJvb2xcbiAgICAgICAgfSwgYWxsID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0eXBlcyksIGZlYXR1cmVzKTtcbiAgICAgICAgbWF0Y2hlcnMudHlwZSA9IE9iamVjdC5rZXlzKHR5cGVzKSwgX193ZWJwYWNrX2V4cG9ydHNfXy5hID0ge1xuICAgICAgICAgICAgYWxsOiBhbGwsXG4gICAgICAgICAgICB0eXBlczogdHlwZXMsXG4gICAgICAgICAgICBtYXRjaGVyczogbWF0Y2hlcnMsXG4gICAgICAgICAgICBmZWF0dXJlczogZmVhdHVyZXNcbiAgICAgICAgfTtcbiAgICB9LCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pIHtcbiAgICAgICAgdmFyIFJlYWN0SXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpO1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMTQpKFJlYWN0SXMuaXNFbGVtZW50LCAhMCk7XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICAhZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBmdW5jdGlvbiBpc1ZhbGlkRWxlbWVudFR5cGUodHlwZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcInN0cmluZ1wiID09IHR5cGVvZiB0eXBlIHx8IFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgdHlwZSB8fCB0eXBlID09PSBSRUFDVF9GUkFHTUVOVF9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEUgfHwgdHlwZSA9PT0gUkVBQ1RfU1RSSUNUX01PREVfVFlQRSB8fCB0eXBlID09PSBSRUFDVF9TVVNQRU5TRV9UWVBFIHx8IHR5cGUgPT09IFJFQUNUX1NVU1BFTlNFX0xJU1RfVFlQRSB8fCBcIm9iamVjdFwiID09IHR5cGVvZiB0eXBlICYmIG51bGwgIT09IHR5cGUgJiYgKHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX0xBWllfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9NRU1PX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfUFJPVklERVJfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9DT05URVhUX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRSB8fCB0eXBlLiQkdHlwZW9mID09PSBSRUFDVF9GVU5EQU1FTlRBTF9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1JFU1BPTkRFUl9UWVBFIHx8IHR5cGUuJCR0eXBlb2YgPT09IFJFQUNUX1NDT1BFX1RZUEUgfHwgdHlwZS4kJHR5cGVvZiA9PT0gUkVBQ1RfQkxPQ0tfVFlQRSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiB0eXBlT2Yob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgaWYgKFwib2JqZWN0XCIgPT0gdHlwZW9mIG9iamVjdCAmJiBudWxsICE9PSBvYmplY3QpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyICQkdHlwZW9mID0gb2JqZWN0LiQkdHlwZW9mO1xuICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKCQkdHlwZW9mKSB7XG4gICAgICAgICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9FTEVNRU5UX1RZUEU6XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHlwZSA9IG9iamVjdC50eXBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgUkVBQ1RfQVNZTkNfTU9ERV9UWVBFOlxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFOlxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX0ZSQUdNRU5UX1RZUEU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgUkVBQ1RfUFJPRklMRVJfVFlQRTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFOlxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX1NVU1BFTlNFX1RZUEU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJCR0eXBlb2ZUeXBlID0gdHlwZSAmJiB0eXBlLiQkdHlwZW9mO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoJCR0eXBlb2ZUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX0NPTlRFWFRfVFlQRTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgUkVBQ1RfRk9SV0FSRF9SRUZfVFlQRTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgUkVBQ1RfTEFaWV9UWVBFOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBSRUFDVF9NRU1PX1RZUEU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX1BST1ZJREVSX1RZUEU6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkJHR5cGVvZlR5cGU7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAkJHR5cGVvZjtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICBjYXNlIFJFQUNUX1BPUlRBTF9UWVBFOlxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICQkdHlwZW9mO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNBc3luY01vZGUob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlIHx8IChoYXNXYXJuZWRBYm91dERlcHJlY2F0ZWRJc0FzeW5jTW9kZSA9ICEwLCBcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oXCJUaGUgUmVhY3RJcy5pc0FzeW5jTW9kZSgpIGFsaWFzIGhhcyBiZWVuIGRlcHJlY2F0ZWQsIGFuZCB3aWxsIGJlIHJlbW92ZWQgaW4gUmVhY3QgMTcrLiBVcGRhdGUgeW91ciBjb2RlIHRvIHVzZSBSZWFjdElzLmlzQ29uY3VycmVudE1vZGUoKSBpbnN0ZWFkLiBJdCBoYXMgdGhlIGV4YWN0IHNhbWUgQVBJLlwiKSksIFxuICAgICAgICAgICAgICAgIGlzQ29uY3VycmVudE1vZGUob2JqZWN0KSB8fCB0eXBlT2Yob2JqZWN0KSA9PT0gUkVBQ1RfQVNZTkNfTU9ERV9UWVBFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNDb25jdXJyZW50TW9kZShvYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNDb250ZXh0Q29uc3VtZXIob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9DT05URVhUX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc0NvbnRleHRQcm92aWRlcihvYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST1ZJREVSX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc0VsZW1lbnQob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFwib2JqZWN0XCIgPT0gdHlwZW9mIG9iamVjdCAmJiBudWxsICE9PSBvYmplY3QgJiYgb2JqZWN0LiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc0ZvcndhcmRSZWYob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNGcmFnbWVudChvYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX0ZSQUdNRU5UX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc0xhenkob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9MQVpZX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc01lbW8ob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9NRU1PX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc1BvcnRhbChvYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BPUlRBTF9UWVBFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNQcm9maWxlcihvYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1BST0ZJTEVSX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpc1N0cmljdE1vZGUob2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVPZihvYmplY3QpID09PSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNTdXNwZW5zZShvYmplY3QpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZU9mKG9iamVjdCkgPT09IFJFQUNUX1NVU1BFTlNFX1RZUEU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgaGFzU3ltYm9sID0gXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgU3ltYm9sLmZvciwgUkVBQ1RfRUxFTUVOVF9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIikgOiA2MDEwMywgUkVBQ1RfUE9SVEFMX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpIDogNjAxMDYsIFJFQUNUX0ZSQUdNRU5UX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIikgOiA2MDEwNywgUkVBQ1RfU1RSSUNUX01PREVfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKSA6IDYwMTA4LCBSRUFDVF9QUk9GSUxFUl9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpIDogNjAxMTQsIFJFQUNUX1BST1ZJREVSX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIikgOiA2MDEwOSwgUkVBQ1RfQ09OVEVYVF9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIikgOiA2MDExMCwgUkVBQ1RfQVNZTkNfTU9ERV9UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIikgOiA2MDExMSwgUkVBQ1RfQ09OQ1VSUkVOVF9NT0RFX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpIDogNjAxMTEsIFJFQUNUX0ZPUldBUkRfUkVGX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIikgOiA2MDExMiwgUkVBQ1RfU1VTUEVOU0VfVFlQRSA9IGhhc1N5bWJvbCA/IFN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZVwiKSA6IDYwMTEzLCBSRUFDVF9TVVNQRU5TRV9MSVNUX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKSA6IDYwMTIwLCBSRUFDVF9NRU1PX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKSA6IDYwMTE1LCBSRUFDVF9MQVpZX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKSA6IDYwMTE2LCBSRUFDVF9CTE9DS19UWVBFID0gaGFzU3ltYm9sID8gU3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpIDogNjAxMjEsIFJFQUNUX0ZVTkRBTUVOVEFMX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIikgOiA2MDExNywgUkVBQ1RfUkVTUE9OREVSX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpIDogNjAxMTgsIFJFQUNUX1NDT1BFX1RZUEUgPSBoYXNTeW1ib2wgPyBTeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIikgOiA2MDExOSwgQXN5bmNNb2RlID0gUkVBQ1RfQVNZTkNfTU9ERV9UWVBFLCBDb25jdXJyZW50TW9kZSA9IFJFQUNUX0NPTkNVUlJFTlRfTU9ERV9UWVBFLCBDb250ZXh0Q29uc3VtZXIgPSBSRUFDVF9DT05URVhUX1RZUEUsIENvbnRleHRQcm92aWRlciA9IFJFQUNUX1BST1ZJREVSX1RZUEUsIEVsZW1lbnQgPSBSRUFDVF9FTEVNRU5UX1RZUEUsIEZvcndhcmRSZWYgPSBSRUFDVF9GT1JXQVJEX1JFRl9UWVBFLCBGcmFnbWVudCA9IFJFQUNUX0ZSQUdNRU5UX1RZUEUsIExhenkgPSBSRUFDVF9MQVpZX1RZUEUsIE1lbW8gPSBSRUFDVF9NRU1PX1RZUEUsIFBvcnRhbCA9IFJFQUNUX1BPUlRBTF9UWVBFLCBQcm9maWxlciA9IFJFQUNUX1BST0ZJTEVSX1RZUEUsIFN0cmljdE1vZGUgPSBSRUFDVF9TVFJJQ1RfTU9ERV9UWVBFLCBTdXNwZW5zZSA9IFJFQUNUX1NVU1BFTlNFX1RZUEUsIGhhc1dhcm5lZEFib3V0RGVwcmVjYXRlZElzQXN5bmNNb2RlID0gITE7XG4gICAgICAgICAgICBleHBvcnRzLkFzeW5jTW9kZSA9IEFzeW5jTW9kZSwgZXhwb3J0cy5Db25jdXJyZW50TW9kZSA9IENvbmN1cnJlbnRNb2RlLCBleHBvcnRzLkNvbnRleHRDb25zdW1lciA9IENvbnRleHRDb25zdW1lciwgXG4gICAgICAgICAgICBleHBvcnRzLkNvbnRleHRQcm92aWRlciA9IENvbnRleHRQcm92aWRlciwgZXhwb3J0cy5FbGVtZW50ID0gRWxlbWVudCwgZXhwb3J0cy5Gb3J3YXJkUmVmID0gRm9yd2FyZFJlZiwgXG4gICAgICAgICAgICBleHBvcnRzLkZyYWdtZW50ID0gRnJhZ21lbnQsIGV4cG9ydHMuTGF6eSA9IExhenksIGV4cG9ydHMuTWVtbyA9IE1lbW8sIGV4cG9ydHMuUG9ydGFsID0gUG9ydGFsLCBcbiAgICAgICAgICAgIGV4cG9ydHMuUHJvZmlsZXIgPSBQcm9maWxlciwgZXhwb3J0cy5TdHJpY3RNb2RlID0gU3RyaWN0TW9kZSwgZXhwb3J0cy5TdXNwZW5zZSA9IFN1c3BlbnNlLCBcbiAgICAgICAgICAgIGV4cG9ydHMuaXNBc3luY01vZGUgPSBpc0FzeW5jTW9kZSwgZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlID0gaXNDb25jdXJyZW50TW9kZSwgXG4gICAgICAgICAgICBleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyID0gaXNDb250ZXh0Q29uc3VtZXIsIGV4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXIgPSBpc0NvbnRleHRQcm92aWRlciwgXG4gICAgICAgICAgICBleHBvcnRzLmlzRWxlbWVudCA9IGlzRWxlbWVudCwgZXhwb3J0cy5pc0ZvcndhcmRSZWYgPSBpc0ZvcndhcmRSZWYsIGV4cG9ydHMuaXNGcmFnbWVudCA9IGlzRnJhZ21lbnQsIFxuICAgICAgICAgICAgZXhwb3J0cy5pc0xhenkgPSBpc0xhenksIGV4cG9ydHMuaXNNZW1vID0gaXNNZW1vLCBleHBvcnRzLmlzUG9ydGFsID0gaXNQb3J0YWwsIGV4cG9ydHMuaXNQcm9maWxlciA9IGlzUHJvZmlsZXIsIFxuICAgICAgICAgICAgZXhwb3J0cy5pc1N0cmljdE1vZGUgPSBpc1N0cmljdE1vZGUsIGV4cG9ydHMuaXNTdXNwZW5zZSA9IGlzU3VzcGVuc2UsIGV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlID0gaXNWYWxpZEVsZW1lbnRUeXBlLCBcbiAgICAgICAgICAgIGV4cG9ydHMudHlwZU9mID0gdHlwZU9mO1xuICAgICAgICB9KCk7XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsKCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIFJlYWN0SXMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDQpLCBhc3NpZ24gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDE1KSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpLCBjaGVja1Byb3BUeXBlcyA9IF9fd2VicGFja19yZXF1aXJlX18oMTYpLCBoYXMgPSBGdW5jdGlvbi5jYWxsLmJpbmQoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSksIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKCkge307XG4gICAgICAgIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKHRleHQpIHtcbiAgICAgICAgICAgIHZhciBtZXNzYWdlID0gXCJXYXJuaW5nOiBcIiArIHRleHQ7XG4gICAgICAgICAgICBcInVuZGVmaW5lZFwiICE9IHR5cGVvZiBjb25zb2xlICYmIGNvbnNvbGUuZXJyb3IobWVzc2FnZSk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKHgpIHt9XG4gICAgICAgIH0sIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oaXNWYWxpZEVsZW1lbnQsIHRocm93T25EaXJlY3RBY2Nlc3MpIHtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldEl0ZXJhdG9yRm4obWF5YmVJdGVyYWJsZSkge1xuICAgICAgICAgICAgICAgIHZhciBpdGVyYXRvckZuID0gbWF5YmVJdGVyYWJsZSAmJiAoSVRFUkFUT1JfU1lNQk9MICYmIG1heWJlSXRlcmFibGVbSVRFUkFUT1JfU1lNQk9MXSB8fCBtYXliZUl0ZXJhYmxlW0ZBVVhfSVRFUkFUT1JfU1lNQk9MXSk7XG4gICAgICAgICAgICAgICAgaWYgKFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgaXRlcmF0b3JGbikgcmV0dXJuIGl0ZXJhdG9yRm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHggPT09IHkgPyAwICE9PSB4IHx8IDEgLyB4ID09IDEgLyB5IDogeCAhPT0geCAmJiB5ICE9PSB5O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gUHJvcFR5cGVFcnJvcihtZXNzYWdlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZSwgdGhpcy5zdGFjayA9IFwiXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIGNoZWNrVHlwZShpc1JlcXVpcmVkLCBwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIHNlY3JldCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudE5hbWUgfHwgQU5PTllNT1VTLCBwcm9wRnVsbE5hbWUgPSBwcm9wRnVsbE5hbWUgfHwgcHJvcE5hbWUsIFxuICAgICAgICAgICAgICAgICAgICBzZWNyZXQgIT09IFJlYWN0UHJvcFR5cGVzU2VjcmV0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhyb3dPbkRpcmVjdEFjY2Vzcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBlcnIgPSBuZXcgRXJyb3IoXCJDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiBVc2UgYFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcygpYCB0byBjYWxsIHRoZW0uIFJlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXNcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyLm5hbWUgPSBcIkludmFyaWFudCBWaW9sYXRpb25cIiwgZXJyO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIGNvbnNvbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2FjaGVLZXkgPSBjb21wb25lbnROYW1lICsgXCI6XCIgKyBwcm9wTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAhbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldICYmIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50IDwgMyAmJiAocHJpbnRXYXJuaW5nKFwiWW91IGFyZSBtYW51YWxseSBjYWxsaW5nIGEgUmVhY3QuUHJvcFR5cGVzIHZhbGlkYXRpb24gZnVuY3Rpb24gZm9yIHRoZSBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgcHJvcCBvbiBgXCIgKyBjb21wb25lbnROYW1lICsgXCJgLiBUaGlzIGlzIGRlcHJlY2F0ZWQgYW5kIHdpbGwgdGhyb3cgaW4gdGhlIHN0YW5kYWxvbmUgYHByb3AtdHlwZXNgIHBhY2thZ2UuIFlvdSBtYXkgYmUgc2VlaW5nIHRoaXMgd2FybmluZyBkdWUgdG8gYSB0aGlyZC1wYXJ0eSBQcm9wVHlwZXMgbGlicmFyeS4gU2VlIGh0dHBzOi8vZmIubWUvcmVhY3Qtd2FybmluZy1kb250LWNhbGwtcHJvcHR5cGVzIGZvciBkZXRhaWxzLlwiKSwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFudWFsUHJvcFR5cGVDYWxsQ2FjaGVbY2FjaGVLZXldID0gITAsIG1hbnVhbFByb3BUeXBlV2FybmluZ0NvdW50KyspO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsID09IHByb3BzW3Byb3BOYW1lXSA/IGlzUmVxdWlyZWQgPyBuZXcgUHJvcFR5cGVFcnJvcihudWxsID09PSBwcm9wc1twcm9wTmFtZV0gPyBcIlRoZSBcIiArIGxvY2F0aW9uICsgXCIgYFwiICsgcHJvcEZ1bGxOYW1lICsgXCJgIGlzIG1hcmtlZCBhcyByZXF1aXJlZCBpbiBgXCIgKyBjb21wb25lbnROYW1lICsgXCJgLCBidXQgaXRzIHZhbHVlIGlzIGBudWxsYC5cIiA6IFwiVGhlIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgaXMgbWFya2VkIGFzIHJlcXVpcmVkIGluIGBcIiArIGNvbXBvbmVudE5hbWUgKyBcImAsIGJ1dCBpdHMgdmFsdWUgaXMgYHVuZGVmaW5lZGAuXCIpIDogbnVsbCA6IHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHZhciBtYW51YWxQcm9wVHlwZUNhbGxDYWNoZSA9IHt9LCBtYW51YWxQcm9wVHlwZVdhcm5pbmdDb3VudCA9IDAsIGNoYWluZWRDaGVja1R5cGUgPSBjaGVja1R5cGUuYmluZChudWxsLCAhMSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoYWluZWRDaGVja1R5cGUuaXNSZXF1aXJlZCA9IGNoZWNrVHlwZS5iaW5kKG51bGwsICEwKSwgY2hhaW5lZENoZWNrVHlwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKGV4cGVjdGVkVHlwZSkge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSwgc2VjcmV0KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChnZXRQcm9wVHlwZShwcm9wVmFsdWUpICE9PSBleHBlY3RlZFR5cGUpIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIgKyBsb2NhdGlvbiArIFwiIGBcIiArIHByb3BGdWxsTmFtZSArIFwiYCBvZiB0eXBlIGBcIiArIGdldFByZWNpc2VUeXBlKHByb3BWYWx1ZSkgKyBcImAgc3VwcGxpZWQgdG8gYFwiICsgY29tcG9uZW50TmFtZSArIFwiYCwgZXhwZWN0ZWQgYFwiICsgZXhwZWN0ZWRUeXBlICsgXCJgLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVBcnJheU9mVHlwZUNoZWNrZXIodHlwZUNoZWNrZXIpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFwiZnVuY3Rpb25cIiAhPSB0eXBlb2YgdHlwZUNoZWNrZXIpIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIlByb3BlcnR5IGBcIiArIHByb3BGdWxsTmFtZSArIFwiYCBvZiBjb21wb25lbnQgYFwiICsgY29tcG9uZW50TmFtZSArIFwiYCBoYXMgaW52YWxpZCBQcm9wVHlwZSBub3RhdGlvbiBpbnNpZGUgYXJyYXlPZi5cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShwcm9wVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgb2YgdHlwZSBgXCIgKyBnZXRQcm9wVHlwZShwcm9wVmFsdWUpICsgXCJgIHN1cHBsaWVkIHRvIGBcIiArIGNvbXBvbmVudE5hbWUgKyBcImAsIGV4cGVjdGVkIGFuIGFycmF5LlwiKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BWYWx1ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yID0gdHlwZUNoZWNrZXIocHJvcFZhbHVlLCBpLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgXCJbXCIgKyBpICsgXCJdXCIsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVJbnN0YW5jZVR5cGVDaGVja2VyKGV4cGVjdGVkQ2xhc3MpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEocHJvcHNbcHJvcE5hbWVdIGluc3RhbmNlb2YgZXhwZWN0ZWRDbGFzcykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBleHBlY3RlZENsYXNzTmFtZSA9IGV4cGVjdGVkQ2xhc3MubmFtZSB8fCBBTk9OWU1PVVM7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgb2YgdHlwZSBgXCIgKyBnZXRDbGFzc05hbWUocHJvcHNbcHJvcE5hbWVdKSArIFwiYCBzdXBwbGllZCB0byBgXCIgKyBjb21wb25lbnROYW1lICsgXCJgLCBleHBlY3RlZCBpbnN0YW5jZSBvZiBgXCIgKyBleHBlY3RlZENsYXNzTmFtZSArIFwiYC5cIik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVFbnVtVHlwZUNoZWNrZXIoZXhwZWN0ZWRWYWx1ZXMpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgcHJvcFZhbHVlID0gcHJvcHNbcHJvcE5hbWVdLCBpID0gMDsgaSA8IGV4cGVjdGVkVmFsdWVzLmxlbmd0aDsgaSsrKSBpZiAoaXMocHJvcFZhbHVlLCBleHBlY3RlZFZhbHVlc1tpXSkpIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdmFsdWVzU3RyaW5nID0gSlNPTi5zdHJpbmdpZnkoZXhwZWN0ZWRWYWx1ZXMsIGZ1bmN0aW9uKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBcInN5bWJvbFwiID09PSBnZXRQcmVjaXNlVHlwZSh2YWx1ZSkgPyBTdHJpbmcodmFsdWUpIDogdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgb2YgdmFsdWUgYFwiICsgU3RyaW5nKHByb3BWYWx1ZSkgKyBcImAgc3VwcGxpZWQgdG8gYFwiICsgY29tcG9uZW50TmFtZSArIFwiYCwgZXhwZWN0ZWQgb25lIG9mIFwiICsgdmFsdWVzU3RyaW5nICsgXCIuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXkuaXNBcnJheShleHBlY3RlZFZhbHVlcykgPyBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSkgOiAocHJpbnRXYXJuaW5nKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gXCJJbnZhbGlkIGFyZ3VtZW50cyBzdXBwbGllZCB0byBvbmVPZiwgZXhwZWN0ZWQgYW4gYXJyYXksIGdvdCBcIiArIGFyZ3VtZW50cy5sZW5ndGggKyBcIiBhcmd1bWVudHMuIEEgY29tbW9uIG1pc3Rha2UgaXMgdG8gd3JpdGUgb25lT2YoeCwgeSwgeikgaW5zdGVhZCBvZiBvbmVPZihbeCwgeSwgel0pLlwiIDogXCJJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mLCBleHBlY3RlZCBhbiBhcnJheS5cIiksIFxuICAgICAgICAgICAgICAgIGVtcHR5RnVuY3Rpb25UaGF0UmV0dXJuc051bGwpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gY3JlYXRlT2JqZWN0T2ZUeXBlQ2hlY2tlcih0eXBlQ2hlY2tlcikge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiB0eXBlQ2hlY2tlcikgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFwiUHJvcGVydHkgYFwiICsgcHJvcEZ1bGxOYW1lICsgXCJgIG9mIGNvbXBvbmVudCBgXCIgKyBjb21wb25lbnROYW1lICsgXCJgIGhhcyBpbnZhbGlkIFByb3BUeXBlIG5vdGF0aW9uIGluc2lkZSBvYmplY3RPZi5cIik7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV0sIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFwib2JqZWN0XCIgIT09IHByb3BUeXBlKSByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgb2YgdHlwZSBgXCIgKyBwcm9wVHlwZSArIFwiYCBzdXBwbGllZCB0byBgXCIgKyBjb21wb25lbnROYW1lICsgXCJgLCBleHBlY3RlZCBhbiBvYmplY3QuXCIpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gcHJvcFZhbHVlKSBpZiAoaGFzKHByb3BWYWx1ZSwga2V5KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yID0gdHlwZUNoZWNrZXIocHJvcFZhbHVlLCBrZXksIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUgKyBcIi5cIiArIGtleSwgUmVhY3RQcm9wVHlwZXNTZWNyZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHJldHVybiBlcnJvcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVVuaW9uVHlwZUNoZWNrZXIoYXJyYXlPZlR5cGVDaGVja2Vycykge1xuICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFycmF5T2ZUeXBlQ2hlY2tlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChudWxsID09ICgwLCBhcnJheU9mVHlwZUNoZWNrZXJzW2ldKShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KSkgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFwiSW52YWxpZCBcIiArIGxvY2F0aW9uICsgXCIgYFwiICsgcHJvcEZ1bGxOYW1lICsgXCJgIHN1cHBsaWVkIHRvIGBcIiArIGNvbXBvbmVudE5hbWUgKyBcImAuXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoYXJyYXlPZlR5cGVDaGVja2VycykpIHJldHVybiBwcmludFdhcm5pbmcoXCJJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mVHlwZSwgZXhwZWN0ZWQgYW4gaW5zdGFuY2Ugb2YgYXJyYXkuXCIpLCBcbiAgICAgICAgICAgICAgICBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgYXJyYXlPZlR5cGVDaGVja2Vycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2tlciA9IGFycmF5T2ZUeXBlQ2hlY2tlcnNbaV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChcImZ1bmN0aW9uXCIgIT0gdHlwZW9mIGNoZWNrZXIpIHJldHVybiBwcmludFdhcm5pbmcoXCJJbnZhbGlkIGFyZ3VtZW50IHN1cHBsaWVkIHRvIG9uZU9mVHlwZS4gRXhwZWN0ZWQgYW4gYXJyYXkgb2YgY2hlY2sgZnVuY3Rpb25zLCBidXQgcmVjZWl2ZWQgXCIgKyBnZXRQb3N0Zml4Rm9yVHlwZVdhcm5pbmcoY2hlY2tlcikgKyBcIiBhdCBpbmRleCBcIiArIGkgKyBcIi5cIiksIFxuICAgICAgICAgICAgICAgICAgICBlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gY3JlYXRlU2hhcGVUeXBlQ2hlY2tlcihzaGFwZVR5cGVzKSB7XG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV0sIHByb3BUeXBlID0gZ2V0UHJvcFR5cGUocHJvcFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKFwib2JqZWN0XCIgIT09IHByb3BUeXBlKSByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgb2YgdHlwZSBgXCIgKyBwcm9wVHlwZSArIFwiYCBzdXBwbGllZCB0byBgXCIgKyBjb21wb25lbnROYW1lICsgXCJgLCBleHBlY3RlZCBgb2JqZWN0YC5cIik7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBzaGFwZVR5cGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGVja2VyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVycm9yID0gY2hlY2tlcihwcm9wVmFsdWUsIGtleSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSArIFwiLlwiICsga2V5LCBSZWFjdFByb3BUeXBlc1NlY3JldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSByZXR1cm4gZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBjcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyKHNoYXBlVHlwZXMpIHtcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXSwgcHJvcFR5cGUgPSBnZXRQcm9wVHlwZShwcm9wVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoXCJvYmplY3RcIiAhPT0gcHJvcFR5cGUpIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIgKyBsb2NhdGlvbiArIFwiIGBcIiArIHByb3BGdWxsTmFtZSArIFwiYCBvZiB0eXBlIGBcIiArIHByb3BUeXBlICsgXCJgIHN1cHBsaWVkIHRvIGBcIiArIGNvbXBvbmVudE5hbWUgKyBcImAsIGV4cGVjdGVkIGBvYmplY3RgLlwiKTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGFsbEtleXMgPSBhc3NpZ24oe30sIHByb3BzW3Byb3BOYW1lXSwgc2hhcGVUeXBlcyk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBhbGxLZXlzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2hlY2tlciA9IHNoYXBlVHlwZXNba2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghY2hlY2tlcikgcmV0dXJuIG5ldyBQcm9wVHlwZUVycm9yKFwiSW52YWxpZCBcIiArIGxvY2F0aW9uICsgXCIgYFwiICsgcHJvcEZ1bGxOYW1lICsgXCJgIGtleSBgXCIgKyBrZXkgKyBcImAgc3VwcGxpZWQgdG8gYFwiICsgY29tcG9uZW50TmFtZSArIFwiYC5cXG5CYWQgb2JqZWN0OiBcIiArIEpTT04uc3RyaW5naWZ5KHByb3BzW3Byb3BOYW1lXSwgbnVsbCwgXCIgIFwiKSArIFwiXFxuVmFsaWQga2V5czogXCIgKyBKU09OLnN0cmluZ2lmeShPYmplY3Qua2V5cyhzaGFwZVR5cGVzKSwgbnVsbCwgXCIgIFwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgZXJyb3IgPSBjaGVja2VyKHByb3BWYWx1ZSwga2V5LCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lICsgXCIuXCIgKyBrZXksIFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlcnJvcikgcmV0dXJuIGVycm9yO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNOb2RlKHByb3BWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAodHlwZW9mIHByb3BWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgY2FzZSBcIm51bWJlclwiOlxuICAgICAgICAgICAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgICAgICAgY2FzZSBcInVuZGVmaW5lZFwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gITA7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJib29sZWFuXCI6XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhcHJvcFZhbHVlO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIFwib2JqZWN0XCI6XG4gICAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHByb3BWYWx1ZSkpIHJldHVybiBwcm9wVmFsdWUuZXZlcnkoaXNOb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgPT09IHByb3BWYWx1ZSB8fCBpc1ZhbGlkRWxlbWVudChwcm9wVmFsdWUpKSByZXR1cm4gITA7XG4gICAgICAgICAgICAgICAgICAgIHZhciBpdGVyYXRvckZuID0gZ2V0SXRlcmF0b3JGbihwcm9wVmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWl0ZXJhdG9yRm4pIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0ZXAsIGl0ZXJhdG9yID0gaXRlcmF0b3JGbi5jYWxsKHByb3BWYWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpdGVyYXRvckZuICE9PSBwcm9wVmFsdWUuZW50cmllcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICg7IShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyApIGlmICghaXNOb2RlKHN0ZXAudmFsdWUpKSByZXR1cm4gITE7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSBmb3IgKDshKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7ICkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVudHJ5ID0gc3RlcC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlbnRyeSAmJiAhaXNOb2RlKGVudHJ5WzFdKSkgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhMDtcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGlzU3ltYm9sKHByb3BUeXBlLCBwcm9wVmFsdWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJzeW1ib2xcIiA9PT0gcHJvcFR5cGUgfHwgISFwcm9wVmFsdWUgJiYgKFwiU3ltYm9sXCIgPT09IHByb3BWYWx1ZVtcIkBAdG9TdHJpbmdUYWdcIl0gfHwgXCJmdW5jdGlvblwiID09IHR5cGVvZiBTeW1ib2wgJiYgcHJvcFZhbHVlIGluc3RhbmNlb2YgU3ltYm9sKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldFByb3BUeXBlKHByb3BWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBwcm9wVHlwZSA9IHR5cGVvZiBwcm9wVmFsdWU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkocHJvcFZhbHVlKSA/IFwiYXJyYXlcIiA6IHByb3BWYWx1ZSBpbnN0YW5jZW9mIFJlZ0V4cCA/IFwib2JqZWN0XCIgOiBpc1N5bWJvbChwcm9wVHlwZSwgcHJvcFZhbHVlKSA/IFwic3ltYm9sXCIgOiBwcm9wVHlwZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZ1bmN0aW9uIGdldFByZWNpc2VUeXBlKHByb3BWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGlmICh2b2lkIDAgPT09IHByb3BWYWx1ZSB8fCBudWxsID09PSBwcm9wVmFsdWUpIHJldHVybiBcIlwiICsgcHJvcFZhbHVlO1xuICAgICAgICAgICAgICAgIHZhciBwcm9wVHlwZSA9IGdldFByb3BUeXBlKHByb3BWYWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKFwib2JqZWN0XCIgPT09IHByb3BUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBEYXRlKSByZXR1cm4gXCJkYXRlXCI7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9wVmFsdWUgaW5zdGFuY2VvZiBSZWdFeHApIHJldHVybiBcInJlZ2V4cFwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcFR5cGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmdW5jdGlvbiBnZXRQb3N0Zml4Rm9yVHlwZVdhcm5pbmcodmFsdWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgdHlwZSA9IGdldFByZWNpc2VUeXBlKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJhcnJheVwiOlxuICAgICAgICAgICAgICAgICAgY2FzZSBcIm9iamVjdFwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJhbiBcIiArIHR5cGU7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgXCJib29sZWFuXCI6XG4gICAgICAgICAgICAgICAgICBjYXNlIFwiZGF0ZVwiOlxuICAgICAgICAgICAgICAgICAgY2FzZSBcInJlZ2V4cFwiOlxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gXCJhIFwiICsgdHlwZTtcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gZ2V0Q2xhc3NOYW1lKHByb3BWYWx1ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wVmFsdWUuY29uc3RydWN0b3IgJiYgcHJvcFZhbHVlLmNvbnN0cnVjdG9yLm5hbWUgPyBwcm9wVmFsdWUuY29uc3RydWN0b3IubmFtZSA6IEFOT05ZTU9VUztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBJVEVSQVRPUl9TWU1CT0wgPSBcImZ1bmN0aW9uXCIgPT0gdHlwZW9mIFN5bWJvbCAmJiBTeW1ib2wuaXRlcmF0b3IsIEZBVVhfSVRFUkFUT1JfU1lNQk9MID0gXCJAQGl0ZXJhdG9yXCIsIEFOT05ZTU9VUyA9IFwiPDxhbm9ueW1vdXM+PlwiLCBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICAgICAgICAgICAgICBhcnJheTogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJhcnJheVwiKSxcbiAgICAgICAgICAgICAgICBib29sOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcihcImJvb2xlYW5cIiksXG4gICAgICAgICAgICAgICAgZnVuYzogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJmdW5jdGlvblwiKSxcbiAgICAgICAgICAgICAgICBudW1iZXI6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKFwibnVtYmVyXCIpLFxuICAgICAgICAgICAgICAgIG9iamVjdDogY3JlYXRlUHJpbWl0aXZlVHlwZUNoZWNrZXIoXCJvYmplY3RcIiksXG4gICAgICAgICAgICAgICAgc3RyaW5nOiBjcmVhdGVQcmltaXRpdmVUeXBlQ2hlY2tlcihcInN0cmluZ1wiKSxcbiAgICAgICAgICAgICAgICBzeW1ib2w6IGNyZWF0ZVByaW1pdGl2ZVR5cGVDaGVja2VyKFwic3ltYm9sXCIpLFxuICAgICAgICAgICAgICAgIGFueTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcihlbXB0eUZ1bmN0aW9uVGhhdFJldHVybnNOdWxsKTtcbiAgICAgICAgICAgICAgICB9KCksXG4gICAgICAgICAgICAgICAgYXJyYXlPZjogY3JlYXRlQXJyYXlPZlR5cGVDaGVja2VyLFxuICAgICAgICAgICAgICAgIGVsZW1lbnQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiB2YWxpZGF0ZShwcm9wcywgcHJvcE5hbWUsIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm9wVmFsdWUgPSBwcm9wc1twcm9wTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzVmFsaWRFbGVtZW50KHByb3BWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgb2YgdHlwZSBgXCIgKyBnZXRQcm9wVHlwZShwcm9wVmFsdWUpICsgXCJgIHN1cHBsaWVkIHRvIGBcIiArIGNvbXBvbmVudE5hbWUgKyBcImAsIGV4cGVjdGVkIGEgc2luZ2xlIFJlYWN0RWxlbWVudC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ2hhaW5hYmxlVHlwZUNoZWNrZXIodmFsaWRhdGUpO1xuICAgICAgICAgICAgICAgIH0oKSxcbiAgICAgICAgICAgICAgICBlbGVtZW50VHlwZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIHZhbGlkYXRlKHByb3BzLCBwcm9wTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIHByb3BGdWxsTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHByb3BWYWx1ZSA9IHByb3BzW3Byb3BOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghUmVhY3RJcy5pc1ZhbGlkRWxlbWVudFR5cGUocHJvcFZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvcFR5cGVFcnJvcihcIkludmFsaWQgXCIgKyBsb2NhdGlvbiArIFwiIGBcIiArIHByb3BGdWxsTmFtZSArIFwiYCBvZiB0eXBlIGBcIiArIGdldFByb3BUeXBlKHByb3BWYWx1ZSkgKyBcImAgc3VwcGxpZWQgdG8gYFwiICsgY29tcG9uZW50TmFtZSArIFwiYCwgZXhwZWN0ZWQgYSBzaW5nbGUgUmVhY3RFbGVtZW50IHR5cGUuXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZUNoYWluYWJsZVR5cGVDaGVja2VyKHZhbGlkYXRlKTtcbiAgICAgICAgICAgICAgICB9KCksXG4gICAgICAgICAgICAgICAgaW5zdGFuY2VPZjogY3JlYXRlSW5zdGFuY2VUeXBlQ2hlY2tlcixcbiAgICAgICAgICAgICAgICBub2RlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gdmFsaWRhdGUocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNOb2RlKHByb3BzW3Byb3BOYW1lXSkgPyBudWxsIDogbmV3IFByb3BUeXBlRXJyb3IoXCJJbnZhbGlkIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyBwcm9wRnVsbE5hbWUgKyBcImAgc3VwcGxpZWQgdG8gYFwiICsgY29tcG9uZW50TmFtZSArIFwiYCwgZXhwZWN0ZWQgYSBSZWFjdE5vZGUuXCIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVDaGFpbmFibGVUeXBlQ2hlY2tlcih2YWxpZGF0ZSk7XG4gICAgICAgICAgICAgICAgfSgpLFxuICAgICAgICAgICAgICAgIG9iamVjdE9mOiBjcmVhdGVPYmplY3RPZlR5cGVDaGVja2VyLFxuICAgICAgICAgICAgICAgIG9uZU9mOiBjcmVhdGVFbnVtVHlwZUNoZWNrZXIsXG4gICAgICAgICAgICAgICAgb25lT2ZUeXBlOiBjcmVhdGVVbmlvblR5cGVDaGVja2VyLFxuICAgICAgICAgICAgICAgIHNoYXBlOiBjcmVhdGVTaGFwZVR5cGVDaGVja2VyLFxuICAgICAgICAgICAgICAgIGV4YWN0OiBjcmVhdGVTdHJpY3RTaGFwZVR5cGVDaGVja2VyXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIFByb3BUeXBlRXJyb3IucHJvdG90eXBlID0gRXJyb3IucHJvdG90eXBlLCBSZWFjdFByb3BUeXBlcy5jaGVja1Byb3BUeXBlcyA9IGNoZWNrUHJvcFR5cGVzLCBcbiAgICAgICAgICAgIFJlYWN0UHJvcFR5cGVzLnJlc2V0V2FybmluZ0NhY2hlID0gY2hlY2tQcm9wVHlwZXMucmVzZXRXYXJuaW5nQ2FjaGUsIFJlYWN0UHJvcFR5cGVzLlByb3BUeXBlcyA9IFJlYWN0UHJvcFR5cGVzLCBcbiAgICAgICAgICAgIFJlYWN0UHJvcFR5cGVzO1xuICAgICAgICB9O1xuICAgIH0sIGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAgICAgZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG4gICAgICAgICAgICBpZiAobnVsbCA9PT0gdmFsIHx8IHZvaWQgMCA9PT0gdmFsKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWRcIik7XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0KHZhbCk7XG4gICAgICAgIH1cbiAgICAgICAgLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG4gICAgICAgIHZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzLCBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksIHByb3BJc0VudW1lcmFibGUgPSBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBpZiAoIU9iamVjdC5hc3NpZ24pIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgICB2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKFwiYWJjXCIpO1xuICAgICAgICAgICAgICAgIGlmICh0ZXN0MVs1XSA9IFwiZGVcIiwgXCI1XCIgPT09IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSkgcmV0dXJuICExO1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHRlc3QyID0ge30sIGkgPSAwOyBpIDwgMTA7IGkrKykgdGVzdDJbXCJfXCIgKyBTdHJpbmcuZnJvbUNoYXJDb2RlKGkpXSA9IGk7XG4gICAgICAgICAgICAgICAgaWYgKFwiMDEyMzQ1Njc4OVwiICE9PSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MikubWFwKGZ1bmN0aW9uKG4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRlc3QyW25dO1xuICAgICAgICAgICAgICAgIH0pLmpvaW4oXCJcIikpIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgICB2YXIgdGVzdDMgPSB7fTtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJhYmNkZWZnaGlqa2xtbm9wcXJzdFwiLnNwbGl0KFwiXCIpLmZvckVhY2goZnVuY3Rpb24obGV0dGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG4gICAgICAgICAgICAgICAgfSksIFwiYWJjZGVmZ2hpamtsbW5vcHFyc3RcIiA9PT0gT2JqZWN0LmtleXMoT2JqZWN0LmFzc2lnbih7fSwgdGVzdDMpKS5qb2luKFwiXCIpO1xuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24odGFyZ2V0LCBzb3VyY2UpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGZyb20sIHN5bWJvbHMsIHRvID0gdG9PYmplY3QodGFyZ2V0KSwgcyA9IDE7IHMgPCBhcmd1bWVudHMubGVuZ3RoOyBzKyspIHtcbiAgICAgICAgICAgICAgICBmcm9tID0gT2JqZWN0KGFyZ3VtZW50c1tzXSk7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGZyb20pIGhhc093blByb3BlcnR5LmNhbGwoZnJvbSwga2V5KSAmJiAodG9ba2V5XSA9IGZyb21ba2V5XSk7XG4gICAgICAgICAgICAgICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAgICAgICAgICBzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN5bWJvbHMubGVuZ3RoOyBpKyspIHByb3BJc0VudW1lcmFibGUuY2FsbChmcm9tLCBzeW1ib2xzW2ldKSAmJiAodG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdG87XG4gICAgICAgIH07XG4gICAgfSwgZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG4gICAgICAgIFwidXNlIHN0cmljdFwiO1xuICAgICAgICBmdW5jdGlvbiBjaGVja1Byb3BUeXBlcyh0eXBlU3BlY3MsIHZhbHVlcywgbG9jYXRpb24sIGNvbXBvbmVudE5hbWUsIGdldFN0YWNrKSB7XG4gICAgICAgICAgICBmb3IgKHZhciB0eXBlU3BlY05hbWUgaW4gdHlwZVNwZWNzKSBpZiAoaGFzKHR5cGVTcGVjcywgdHlwZVNwZWNOYW1lKSkge1xuICAgICAgICAgICAgICAgIHZhciBlcnJvcjtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoXCJmdW5jdGlvblwiICE9IHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGVyciA9IEVycm9yKChjb21wb25lbnROYW1lIHx8IFwiUmVhY3QgY2xhc3NcIikgKyBcIjogXCIgKyBsb2NhdGlvbiArIFwiIHR5cGUgYFwiICsgdHlwZVNwZWNOYW1lICsgXCJgIGlzIGludmFsaWQ7IGl0IG11c3QgYmUgYSBmdW5jdGlvbiwgdXN1YWxseSBmcm9tIHRoZSBgcHJvcC10eXBlc2AgcGFja2FnZSwgYnV0IHJlY2VpdmVkIGBcIiArIHR5cGVvZiB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSArIFwiYC5cIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnIubmFtZSA9IFwiSW52YXJpYW50IFZpb2xhdGlvblwiLCBlcnI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZXJyb3IgPSB0eXBlU3BlY3NbdHlwZVNwZWNOYW1lXSh2YWx1ZXMsIHR5cGVTcGVjTmFtZSwgY29tcG9uZW50TmFtZSwgbG9jYXRpb24sIG51bGwsIFJlYWN0UHJvcFR5cGVzU2VjcmV0KTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICAgICAgICAgICAgICBlcnJvciA9IGV4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWVycm9yIHx8IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgfHwgcHJpbnRXYXJuaW5nKChjb21wb25lbnROYW1lIHx8IFwiUmVhY3QgY2xhc3NcIikgKyBcIjogdHlwZSBzcGVjaWZpY2F0aW9uIG9mIFwiICsgbG9jYXRpb24gKyBcIiBgXCIgKyB0eXBlU3BlY05hbWUgKyBcImAgaXMgaW52YWxpZDsgdGhlIHR5cGUgY2hlY2tlciBmdW5jdGlvbiBtdXN0IHJldHVybiBgbnVsbGAgb3IgYW4gYEVycm9yYCBidXQgcmV0dXJuZWQgYSBcIiArIHR5cGVvZiBlcnJvciArIFwiLiBZb3UgbWF5IGhhdmUgZm9yZ290dGVuIHRvIHBhc3MgYW4gYXJndW1lbnQgdG8gdGhlIHR5cGUgY2hlY2tlciBjcmVhdG9yIChhcnJheU9mLCBpbnN0YW5jZU9mLCBvYmplY3RPZiwgb25lT2YsIG9uZU9mVHlwZSwgYW5kIHNoYXBlIGFsbCByZXF1aXJlIGFuIGFyZ3VtZW50KS5cIiksIFxuICAgICAgICAgICAgICAgIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgIShlcnJvci5tZXNzYWdlIGluIGxvZ2dlZFR5cGVGYWlsdXJlcykpIHtcbiAgICAgICAgICAgICAgICAgICAgbG9nZ2VkVHlwZUZhaWx1cmVzW2Vycm9yLm1lc3NhZ2VdID0gITA7XG4gICAgICAgICAgICAgICAgICAgIHZhciBzdGFjayA9IGdldFN0YWNrID8gZ2V0U3RhY2soKSA6IFwiXCI7XG4gICAgICAgICAgICAgICAgICAgIHByaW50V2FybmluZyhcIkZhaWxlZCBcIiArIGxvY2F0aW9uICsgXCIgdHlwZTogXCIgKyBlcnJvci5tZXNzYWdlICsgKG51bGwgIT0gc3RhY2sgPyBzdGFjayA6IFwiXCIpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHByaW50V2FybmluZyA9IGZ1bmN0aW9uKCkge30sIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gX193ZWJwYWNrX3JlcXVpcmVfXyg1KSwgbG9nZ2VkVHlwZUZhaWx1cmVzID0ge30sIGhhcyA9IEZ1bmN0aW9uLmNhbGwuYmluZChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5KTtcbiAgICAgICAgcHJpbnRXYXJuaW5nID0gZnVuY3Rpb24odGV4dCkge1xuICAgICAgICAgICAgdmFyIG1lc3NhZ2UgPSBcIldhcm5pbmc6IFwiICsgdGV4dDtcbiAgICAgICAgICAgIFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIGNvbnNvbGUgJiYgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgICAgICAgfSBjYXRjaCAoeCkge31cbiAgICAgICAgfSwgY2hlY2tQcm9wVHlwZXMucmVzZXRXYXJuaW5nQ2FjaGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGxvZ2dlZFR5cGVGYWlsdXJlcyA9IHt9O1xuICAgICAgICB9LCBtb2R1bGUuZXhwb3J0cyA9IGNoZWNrUHJvcFR5cGVzO1xuICAgIH0sIGZ1bmN0aW9uKG1vZHVsZSwgX193ZWJwYWNrX2V4cG9ydHNfXywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuICAgICAgICBcInVzZSBzdHJpY3RcIjtcbiAgICAgICAgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHNvdXJjZSwgZXhjbHVkZWQpIHtcbiAgICAgICAgICAgIGlmIChudWxsID09IHNvdXJjZSkgcmV0dXJuIHt9O1xuICAgICAgICAgICAgdmFyIGtleSwgaSwgdGFyZ2V0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCk7XG4gICAgICAgICAgICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAgICAgICAgICAgIHZhciBzb3VyY2VTeW1ib2xLZXlzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2UpO1xuICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBzb3VyY2VTeW1ib2xLZXlzLmxlbmd0aDsgaSsrKSBrZXkgPSBzb3VyY2VTeW1ib2xLZXlzW2ldLCBleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCB8fCBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoc291cmNlLCBrZXkpICYmICh0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0YXJnZXQ7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICAgICAgICAgICAgaWYgKG51bGwgPT0gc291cmNlKSByZXR1cm4ge307XG4gICAgICAgICAgICB2YXIga2V5LCBpLCB0YXJnZXQgPSB7fSwgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgc291cmNlS2V5cy5sZW5ndGg7IGkrKykga2V5ID0gc291cmNlS2V5c1tpXSwgZXhjbHVkZWQuaW5kZXhPZihrZXkpID49IDAgfHwgKHRhcmdldFtrZXldID0gc291cmNlW2tleV0pO1xuICAgICAgICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBNZWRpYVF1ZXJ5KF9yZWYpIHtcbiAgICAgICAgICAgIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sIGRldmljZSA9IF9yZWYuZGV2aWNlLCBvbkNoYW5nZSA9IF9yZWYub25DaGFuZ2UsIHNldHRpbmdzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsgXCJjaGlsZHJlblwiLCBcImRldmljZVwiLCBcIm9uQ2hhbmdlXCIgXSksIG1hdGNoZXMgPSBPYmplY3QoX19XRUJQQUNLX0lNUE9SVEVEX01PRFVMRV8wX191c2VNZWRpYVF1ZXJ5X18uYSkoc2V0dGluZ3MsIGRldmljZSwgb25DaGFuZ2UpO1xuICAgICAgICAgICAgcmV0dXJuIFwiZnVuY3Rpb25cIiA9PSB0eXBlb2YgY2hpbGRyZW4gPyBjaGlsZHJlbihtYXRjaGVzKSA6IG1hdGNoZXMgPyBjaGlsZHJlbiA6IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgX193ZWJwYWNrX2V4cG9ydHNfXy5hID0gTWVkaWFRdWVyeTtcbiAgICAgICAgdmFyIF9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fdXNlTWVkaWFRdWVyeV9fID0gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcbiAgICB9IF0pO1xufSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdC1yZXNwb25zaXZlLmpzLm1hcCIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXJldHVybi1hc3NpZ24gKi9cbmltcG9ydCBjYW5Vc2VET00gZnJvbSAnLi9jYW5Vc2VET00nO1xuZXhwb3J0IHZhciBvcHRpb25zU3VwcG9ydGVkID0gZmFsc2U7XG5leHBvcnQgdmFyIG9uY2VTdXBwb3J0ZWQgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIG9wdGlvbnMgPSB7XG4gICAgZ2V0IHBhc3NpdmUoKSB7XG4gICAgICByZXR1cm4gb3B0aW9uc1N1cHBvcnRlZCA9IHRydWU7XG4gICAgfSxcblxuICAgIGdldCBvbmNlKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW11bHRpLWFzc2lnblxuICAgICAgcmV0dXJuIG9uY2VTdXBwb3J0ZWQgPSBvcHRpb25zU3VwcG9ydGVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgfTtcblxuICBpZiAoY2FuVXNlRE9NKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Rlc3QnLCBvcHRpb25zLCBvcHRpb25zKTtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGVzdCcsIG9wdGlvbnMsIHRydWUpO1xuICB9XG59IGNhdGNoIChlKSB7XG4gIC8qICovXG59XG5cbi8qKlxuICogQW4gYGFkZEV2ZW50TGlzdGVuZXJgIHBvbnlmaWxsLCBzdXBwb3J0cyB0aGUgYG9uY2VgIG9wdGlvblxuICovXG5mdW5jdGlvbiBhZGRFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucykge1xuICBpZiAob3B0aW9ucyAmJiB0eXBlb2Ygb3B0aW9ucyAhPT0gJ2Jvb2xlYW4nICYmICFvbmNlU3VwcG9ydGVkKSB7XG4gICAgdmFyIG9uY2UgPSBvcHRpb25zLm9uY2UsXG4gICAgICAgIGNhcHR1cmUgPSBvcHRpb25zLmNhcHR1cmU7XG4gICAgdmFyIHdyYXBwZWRIYW5kbGVyID0gaGFuZGxlcjtcblxuICAgIGlmICghb25jZVN1cHBvcnRlZCAmJiBvbmNlKSB7XG4gICAgICB3cmFwcGVkSGFuZGxlciA9IGhhbmRsZXIuX19vbmNlIHx8IGZ1bmN0aW9uIG9uY2VIYW5kbGVyKGV2ZW50KSB7XG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIG9uY2VIYW5kbGVyLCBjYXB0dXJlKTtcbiAgICAgICAgaGFuZGxlci5jYWxsKHRoaXMsIGV2ZW50KTtcbiAgICAgIH07XG5cbiAgICAgIGhhbmRsZXIuX19vbmNlID0gd3JhcHBlZEhhbmRsZXI7XG4gICAgfVxuXG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgd3JhcHBlZEhhbmRsZXIsIG9wdGlvbnNTdXBwb3J0ZWQgPyBvcHRpb25zIDogY2FwdHVyZSk7XG4gIH1cblxuICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYWRkRXZlbnRMaXN0ZW5lcjsiLCJmdW5jdGlvbiByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucykge1xuICB2YXIgY2FwdHVyZSA9IG9wdGlvbnMgJiYgdHlwZW9mIG9wdGlvbnMgIT09ICdib29sZWFuJyA/IG9wdGlvbnMuY2FwdHVyZSA6IG9wdGlvbnM7XG4gIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXIsIGNhcHR1cmUpO1xuXG4gIGlmIChoYW5kbGVyLl9fb25jZSkge1xuICAgIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhhbmRsZXIuX19vbmNlLCBjYXB0dXJlKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCByZW1vdmVFdmVudExpc3RlbmVyOyIsImltcG9ydCBhZGRFdmVudExpc3RlbmVyIGZyb20gJy4vYWRkRXZlbnRMaXN0ZW5lcic7XG5pbXBvcnQgcmVtb3ZlRXZlbnRMaXN0ZW5lciBmcm9tICcuL3JlbW92ZUV2ZW50TGlzdGVuZXInO1xuXG5mdW5jdGlvbiBsaXN0ZW4obm9kZSwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKSB7XG4gIGFkZEV2ZW50TGlzdGVuZXIobm9kZSwgZXZlbnROYW1lLCBoYW5kbGVyLCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZW1vdmVFdmVudExpc3RlbmVyKG5vZGUsIGV2ZW50TmFtZSwgaGFuZGxlciwgb3B0aW9ucyk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RlbjsiLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnQGVtb3Rpb24vbWVtb2l6ZSc7XG5cbnZhciByZWFjdFByb3BzUmVnZXggPSAvXigoY2hpbGRyZW58ZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUx8a2V5fHJlZnxhdXRvRm9jdXN8ZGVmYXVsdFZhbHVlfGRlZmF1bHRDaGVja2VkfGlubmVySFRNTHxzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmd8c3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nfHZhbHVlTGlua3xhY2NlcHR8YWNjZXB0Q2hhcnNldHxhY2Nlc3NLZXl8YWN0aW9ufGFsbG93fGFsbG93VXNlck1lZGlhfGFsbG93UGF5bWVudFJlcXVlc3R8YWxsb3dGdWxsU2NyZWVufGFsbG93VHJhbnNwYXJlbmN5fGFsdHxhc3luY3xhdXRvQ29tcGxldGV8YXV0b1BsYXl8Y2FwdHVyZXxjZWxsUGFkZGluZ3xjZWxsU3BhY2luZ3xjaGFsbGVuZ2V8Y2hhclNldHxjaGVja2VkfGNpdGV8Y2xhc3NJRHxjbGFzc05hbWV8Y29sc3xjb2xTcGFufGNvbnRlbnR8Y29udGVudEVkaXRhYmxlfGNvbnRleHRNZW51fGNvbnRyb2xzfGNvbnRyb2xzTGlzdHxjb29yZHN8Y3Jvc3NPcmlnaW58ZGF0YXxkYXRlVGltZXxkZWNvZGluZ3xkZWZhdWx0fGRlZmVyfGRpcnxkaXNhYmxlZHxkaXNhYmxlUGljdHVyZUluUGljdHVyZXxkb3dubG9hZHxkcmFnZ2FibGV8ZW5jVHlwZXxmb3JtfGZvcm1BY3Rpb258Zm9ybUVuY1R5cGV8Zm9ybU1ldGhvZHxmb3JtTm9WYWxpZGF0ZXxmb3JtVGFyZ2V0fGZyYW1lQm9yZGVyfGhlYWRlcnN8aGVpZ2h0fGhpZGRlbnxoaWdofGhyZWZ8aHJlZkxhbmd8aHRtbEZvcnxodHRwRXF1aXZ8aWR8aW5wdXRNb2RlfGludGVncml0eXxpc3xrZXlQYXJhbXN8a2V5VHlwZXxraW5kfGxhYmVsfGxhbmd8bGlzdHxsb2FkaW5nfGxvb3B8bG93fG1hcmdpbkhlaWdodHxtYXJnaW5XaWR0aHxtYXh8bWF4TGVuZ3RofG1lZGlhfG1lZGlhR3JvdXB8bWV0aG9kfG1pbnxtaW5MZW5ndGh8bXVsdGlwbGV8bXV0ZWR8bmFtZXxub25jZXxub1ZhbGlkYXRlfG9wZW58b3B0aW11bXxwYXR0ZXJufHBsYWNlaG9sZGVyfHBsYXlzSW5saW5lfHBvc3RlcnxwcmVsb2FkfHByb2ZpbGV8cmFkaW9Hcm91cHxyZWFkT25seXxyZWZlcnJlclBvbGljeXxyZWx8cmVxdWlyZWR8cmV2ZXJzZWR8cm9sZXxyb3dzfHJvd1NwYW58c2FuZGJveHxzY29wZXxzY29wZWR8c2Nyb2xsaW5nfHNlYW1sZXNzfHNlbGVjdGVkfHNoYXBlfHNpemV8c2l6ZXN8c2xvdHxzcGFufHNwZWxsQ2hlY2t8c3JjfHNyY0RvY3xzcmNMYW5nfHNyY1NldHxzdGFydHxzdGVwfHN0eWxlfHN1bW1hcnl8dGFiSW5kZXh8dGFyZ2V0fHRpdGxlfHR5cGV8dXNlTWFwfHZhbHVlfHdpZHRofHdtb2RlfHdyYXB8YWJvdXR8ZGF0YXR5cGV8aW5saXN0fHByZWZpeHxwcm9wZXJ0eXxyZXNvdXJjZXx0eXBlb2Z8dm9jYWJ8YXV0b0NhcGl0YWxpemV8YXV0b0NvcnJlY3R8YXV0b1NhdmV8Y29sb3J8aW5lcnR8aXRlbVByb3B8aXRlbVNjb3BlfGl0ZW1UeXBlfGl0ZW1JRHxpdGVtUmVmfG9ufHJlc3VsdHN8c2VjdXJpdHl8dW5zZWxlY3RhYmxlfGFjY2VudEhlaWdodHxhY2N1bXVsYXRlfGFkZGl0aXZlfGFsaWdubWVudEJhc2VsaW5lfGFsbG93UmVvcmRlcnxhbHBoYWJldGljfGFtcGxpdHVkZXxhcmFiaWNGb3JtfGFzY2VudHxhdHRyaWJ1dGVOYW1lfGF0dHJpYnV0ZVR5cGV8YXV0b1JldmVyc2V8YXppbXV0aHxiYXNlRnJlcXVlbmN5fGJhc2VsaW5lU2hpZnR8YmFzZVByb2ZpbGV8YmJveHxiZWdpbnxiaWFzfGJ5fGNhbGNNb2RlfGNhcEhlaWdodHxjbGlwfGNsaXBQYXRoVW5pdHN8Y2xpcFBhdGh8Y2xpcFJ1bGV8Y29sb3JJbnRlcnBvbGF0aW9ufGNvbG9ySW50ZXJwb2xhdGlvbkZpbHRlcnN8Y29sb3JQcm9maWxlfGNvbG9yUmVuZGVyaW5nfGNvbnRlbnRTY3JpcHRUeXBlfGNvbnRlbnRTdHlsZVR5cGV8Y3Vyc29yfGN4fGN5fGR8ZGVjZWxlcmF0ZXxkZXNjZW50fGRpZmZ1c2VDb25zdGFudHxkaXJlY3Rpb258ZGlzcGxheXxkaXZpc29yfGRvbWluYW50QmFzZWxpbmV8ZHVyfGR4fGR5fGVkZ2VNb2RlfGVsZXZhdGlvbnxlbmFibGVCYWNrZ3JvdW5kfGVuZHxleHBvbmVudHxleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkfGZpbGx8ZmlsbE9wYWNpdHl8ZmlsbFJ1bGV8ZmlsdGVyfGZpbHRlclJlc3xmaWx0ZXJVbml0c3xmbG9vZENvbG9yfGZsb29kT3BhY2l0eXxmb2N1c2FibGV8Zm9udEZhbWlseXxmb250U2l6ZXxmb250U2l6ZUFkanVzdHxmb250U3RyZXRjaHxmb250U3R5bGV8Zm9udFZhcmlhbnR8Zm9udFdlaWdodHxmb3JtYXR8ZnJvbXxmcnxmeHxmeXxnMXxnMnxnbHlwaE5hbWV8Z2x5cGhPcmllbnRhdGlvbkhvcml6b250YWx8Z2x5cGhPcmllbnRhdGlvblZlcnRpY2FsfGdseXBoUmVmfGdyYWRpZW50VHJhbnNmb3JtfGdyYWRpZW50VW5pdHN8aGFuZ2luZ3xob3JpekFkdlh8aG9yaXpPcmlnaW5YfGlkZW9ncmFwaGljfGltYWdlUmVuZGVyaW5nfGlufGluMnxpbnRlcmNlcHR8a3xrMXxrMnxrM3xrNHxrZXJuZWxNYXRyaXh8a2VybmVsVW5pdExlbmd0aHxrZXJuaW5nfGtleVBvaW50c3xrZXlTcGxpbmVzfGtleVRpbWVzfGxlbmd0aEFkanVzdHxsZXR0ZXJTcGFjaW5nfGxpZ2h0aW5nQ29sb3J8bGltaXRpbmdDb25lQW5nbGV8bG9jYWx8bWFya2VyRW5kfG1hcmtlck1pZHxtYXJrZXJTdGFydHxtYXJrZXJIZWlnaHR8bWFya2VyVW5pdHN8bWFya2VyV2lkdGh8bWFza3xtYXNrQ29udGVudFVuaXRzfG1hc2tVbml0c3xtYXRoZW1hdGljYWx8bW9kZXxudW1PY3RhdmVzfG9mZnNldHxvcGFjaXR5fG9wZXJhdG9yfG9yZGVyfG9yaWVudHxvcmllbnRhdGlvbnxvcmlnaW58b3ZlcmZsb3d8b3ZlcmxpbmVQb3NpdGlvbnxvdmVybGluZVRoaWNrbmVzc3xwYW5vc2UxfHBhaW50T3JkZXJ8cGF0aExlbmd0aHxwYXR0ZXJuQ29udGVudFVuaXRzfHBhdHRlcm5UcmFuc2Zvcm18cGF0dGVyblVuaXRzfHBvaW50ZXJFdmVudHN8cG9pbnRzfHBvaW50c0F0WHxwb2ludHNBdFl8cG9pbnRzQXRafHByZXNlcnZlQWxwaGF8cHJlc2VydmVBc3BlY3RSYXRpb3xwcmltaXRpdmVVbml0c3xyfHJhZGl1c3xyZWZYfHJlZll8cmVuZGVyaW5nSW50ZW50fHJlcGVhdENvdW50fHJlcGVhdER1cnxyZXF1aXJlZEV4dGVuc2lvbnN8cmVxdWlyZWRGZWF0dXJlc3xyZXN0YXJ0fHJlc3VsdHxyb3RhdGV8cnh8cnl8c2NhbGV8c2VlZHxzaGFwZVJlbmRlcmluZ3xzbG9wZXxzcGFjaW5nfHNwZWN1bGFyQ29uc3RhbnR8c3BlY3VsYXJFeHBvbmVudHxzcGVlZHxzcHJlYWRNZXRob2R8c3RhcnRPZmZzZXR8c3RkRGV2aWF0aW9ufHN0ZW1ofHN0ZW12fHN0aXRjaFRpbGVzfHN0b3BDb2xvcnxzdG9wT3BhY2l0eXxzdHJpa2V0aHJvdWdoUG9zaXRpb258c3RyaWtldGhyb3VnaFRoaWNrbmVzc3xzdHJpbmd8c3Ryb2tlfHN0cm9rZURhc2hhcnJheXxzdHJva2VEYXNob2Zmc2V0fHN0cm9rZUxpbmVjYXB8c3Ryb2tlTGluZWpvaW58c3Ryb2tlTWl0ZXJsaW1pdHxzdHJva2VPcGFjaXR5fHN0cm9rZVdpZHRofHN1cmZhY2VTY2FsZXxzeXN0ZW1MYW5ndWFnZXx0YWJsZVZhbHVlc3x0YXJnZXRYfHRhcmdldFl8dGV4dEFuY2hvcnx0ZXh0RGVjb3JhdGlvbnx0ZXh0UmVuZGVyaW5nfHRleHRMZW5ndGh8dG98dHJhbnNmb3JtfHUxfHUyfHVuZGVybGluZVBvc2l0aW9ufHVuZGVybGluZVRoaWNrbmVzc3x1bmljb2RlfHVuaWNvZGVCaWRpfHVuaWNvZGVSYW5nZXx1bml0c1BlckVtfHZBbHBoYWJldGljfHZIYW5naW5nfHZJZGVvZ3JhcGhpY3x2TWF0aGVtYXRpY2FsfHZhbHVlc3x2ZWN0b3JFZmZlY3R8dmVyc2lvbnx2ZXJ0QWR2WXx2ZXJ0T3JpZ2luWHx2ZXJ0T3JpZ2luWXx2aWV3Qm94fHZpZXdUYXJnZXR8dmlzaWJpbGl0eXx3aWR0aHN8d29yZFNwYWNpbmd8d3JpdGluZ01vZGV8eHx4SGVpZ2h0fHgxfHgyfHhDaGFubmVsU2VsZWN0b3J8eGxpbmtBY3R1YXRlfHhsaW5rQXJjcm9sZXx4bGlua0hyZWZ8eGxpbmtSb2xlfHhsaW5rU2hvd3x4bGlua1RpdGxlfHhsaW5rVHlwZXx4bWxCYXNlfHhtbG5zfHhtbG5zWGxpbmt8eG1sTGFuZ3x4bWxTcGFjZXx5fHkxfHkyfHlDaGFubmVsU2VsZWN0b3J8enx6b29tQW5kUGFufGZvcnxjbGFzc3xhdXRvZm9jdXMpfCgoW0RkXVtBYV1bVHRdW0FhXXxbQWFdW1JyXVtJaV1bQWFdfHgpLS4qKSkkLzsgLy8gaHR0cHM6Ly9lc2JlbmNoLmNvbS9iZW5jaC81YmZlZTY4YTRjZDdlNjAwOWVmNjFkMjNcblxudmFyIGluZGV4ID0gbWVtb2l6ZShmdW5jdGlvbiAocHJvcCkge1xuICByZXR1cm4gcmVhY3RQcm9wc1JlZ2V4LnRlc3QocHJvcCkgfHwgcHJvcC5jaGFyQ29kZUF0KDApID09PSAxMTFcbiAgLyogbyAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMSkgPT09IDExMFxuICAvKiBuICovXG4gICYmIHByb3AuY2hhckNvZGVBdCgyKSA8IDkxO1xufVxuLyogWisxICovXG4pO1xuXG5leHBvcnQgZGVmYXVsdCBpbmRleDtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcbiIsInZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlJbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pIGlmIChrZXkgIT0gSUVfUFJPVE8pIGhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+YXJyYXlJbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuIiwiLy8gZmFsbGJhY2sgZm9yIElFMTEgYnVnZ3kgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgd2l0aCBpZnJhbWUgYW5kIHdpbmRvd1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbnZhciB3aW5kb3dOYW1lcyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzXG4gID8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KSA6IFtdO1xuXG52YXIgZ2V0V2luZG93TmFtZXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZ09QTihpdCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gd2luZG93TmFtZXMuc2xpY2UoKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nID8gZ2V0V2luZG93TmFtZXMoaXQpIDogZ09QTih0b0lPYmplY3QoaXQpKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjIuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlLCAuLi4pXG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgJGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIHNob3VsZCB3b3JrIHdpdGggc3ltYm9scyBhbmQgc2hvdWxkIGhhdmUgZGV0ZXJtaW5pc3RpYyBwcm9wZXJ0eSBvcmRlciAoVjggYnVnKVxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBTID0gU3ltYm9sKCk7XG4gIHZhciBLID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtTXSA9IDc7XG4gIEsuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGspIHsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdmFyIFQgPSB0b09iamVjdCh0YXJnZXQpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICB2YXIgaXNFbnVtID0gcElFLmY7XG4gIHdoaWxlIChhTGVuID4gaW5kZXgpIHtcbiAgICB2YXIgUyA9IElPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICB2YXIga2V5cyA9IGdldFN5bWJvbHMgPyBnZXRLZXlzKFMpLmNvbmNhdChnZXRTeW1ib2xzKFMpKSA6IGdldEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSB7XG4gICAgICBrZXkgPSBrZXlzW2orK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGlzRW51bS5jYWxsKFMsIGtleSkpIFRba2V5XSA9IFNba2V5XTtcbiAgICB9XG4gIH0gcmV0dXJuIFQ7XG59IDogJGFzc2lnbjtcbiIsIi8vIDcuMi45IFNhbWVWYWx1ZSh4LCB5KVxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuaXMgfHwgZnVuY3Rpb24gaXMoeCwgeSkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiB4ID09PSB5ID8geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHkgOiB4ICE9IHggJiYgeSAhPSB5O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBpbnZva2UgPSByZXF1aXJlKCcuL19pbnZva2UnKTtcbnZhciBhcnJheVNsaWNlID0gW10uc2xpY2U7XG52YXIgZmFjdG9yaWVzID0ge307XG5cbnZhciBjb25zdHJ1Y3QgPSBmdW5jdGlvbiAoRiwgbGVuLCBhcmdzKSB7XG4gIGlmICghKGxlbiBpbiBmYWN0b3JpZXMpKSB7XG4gICAgZm9yICh2YXIgbiA9IFtdLCBpID0gMDsgaSA8IGxlbjsgaSsrKSBuW2ldID0gJ2FbJyArIGkgKyAnXSc7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgZmFjdG9yaWVzW2xlbl0gPSBGdW5jdGlvbignRixhJywgJ3JldHVybiBuZXcgRignICsgbi5qb2luKCcsJykgKyAnKScpO1xuICB9IHJldHVybiBmYWN0b3JpZXNbbGVuXShGLCBhcmdzKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRnVuY3Rpb24uYmluZCB8fCBmdW5jdGlvbiBiaW5kKHRoYXQgLyogLCAuLi5hcmdzICovKSB7XG4gIHZhciBmbiA9IGFGdW5jdGlvbih0aGlzKTtcbiAgdmFyIHBhcnRBcmdzID0gYXJyYXlTbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gIHZhciBib3VuZCA9IGZ1bmN0aW9uICgvKiBhcmdzLi4uICovKSB7XG4gICAgdmFyIGFyZ3MgPSBwYXJ0QXJncy5jb25jYXQoYXJyYXlTbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgYm91bmQgPyBjb25zdHJ1Y3QoZm4sIGFyZ3MubGVuZ3RoLCBhcmdzKSA6IGludm9rZShmbiwgYXJncywgdGhhdCk7XG4gIH07XG4gIGlmIChpc09iamVjdChmbi5wcm90b3R5cGUpKSBib3VuZC5wcm90b3R5cGUgPSBmbi5wcm90b3R5cGU7XG4gIHJldHVybiBib3VuZDtcbn07XG4iLCIvLyBmYXN0IGFwcGx5LCBodHRwOi8vanNwZXJmLmxua2l0LmNvbS9mYXN0LWFwcGx5LzVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCBhcmdzLCB0aGF0KSB7XG4gIHZhciB1biA9IHRoYXQgPT09IHVuZGVmaW5lZDtcbiAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgIGNhc2UgMDogcmV0dXJuIHVuID8gZm4oKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0KTtcbiAgICBjYXNlIDE6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0pO1xuICAgIGNhc2UgMjogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgY2FzZSAzOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICBjYXNlIDQ6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICB9IHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmdzKTtcbn07XG4iLCJ2YXIgJHBhcnNlSW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucGFyc2VJbnQ7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgd3MgPSByZXF1aXJlKCcuL19zdHJpbmctd3MnKTtcbnZhciBoZXggPSAvXlstK10/MFt4WF0vO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICRwYXJzZUludCh3cyArICcwOCcpICE9PSA4IHx8ICRwYXJzZUludCh3cyArICcweDE2JykgIT09IDIyID8gZnVuY3Rpb24gcGFyc2VJbnQoc3RyLCByYWRpeCkge1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpO1xuICByZXR1cm4gJHBhcnNlSW50KHN0cmluZywgKHJhZGl4ID4+PiAwKSB8fCAoaGV4LnRlc3Qoc3RyaW5nKSA/IDE2IDogMTApKTtcbn0gOiAkcGFyc2VJbnQ7XG4iLCJ2YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5wYXJzZUZsb2F0O1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xuXG5tb2R1bGUuZXhwb3J0cyA9IDEgLyAkcGFyc2VGbG9hdChyZXF1aXJlKCcuL19zdHJpbmctd3MnKSArICctMCcpICE9PSAtSW5maW5pdHkgPyBmdW5jdGlvbiBwYXJzZUZsb2F0KHN0cikge1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpO1xuICB2YXIgcmVzdWx0ID0gJHBhcnNlRmxvYXQoc3RyaW5nKTtcbiAgcmV0dXJuIHJlc3VsdCA9PT0gMCAmJiBzdHJpbmcuY2hhckF0KDApID09ICctJyA/IC0wIDogcmVzdWx0O1xufSA6ICRwYXJzZUZsb2F0O1xuIiwidmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIG1zZykge1xuICBpZiAodHlwZW9mIGl0ICE9ICdudW1iZXInICYmIGNvZihpdCkgIT0gJ051bWJlcicpIHRocm93IFR5cGVFcnJvcihtc2cpO1xuICByZXR1cm4gK2l0O1xufTtcbiIsIi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0ludGVnZXIoaXQpIHtcbiAgcmV0dXJuICFpc09iamVjdChpdCkgJiYgaXNGaW5pdGUoaXQpICYmIGZsb29yKGl0KSA9PT0gaXQ7XG59O1xuIiwiLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5sb2cxcCB8fCBmdW5jdGlvbiBsb2cxcCh4KSB7XG4gIHJldHVybiAoeCA9ICt4KSA+IC0xZS04ICYmIHggPCAxZS04ID8geCAtIHggKiB4IC8gMiA6IE1hdGgubG9nKDEgKyB4KTtcbn07XG4iLCIvLyAyMC4yLjIuMTYgTWF0aC5mcm91bmQoeClcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgRVBTSUxPTiA9IHBvdygyLCAtNTIpO1xudmFyIEVQU0lMT04zMiA9IHBvdygyLCAtMjMpO1xudmFyIE1BWDMyID0gcG93KDIsIDEyNykgKiAoMiAtIEVQU0lMT04zMik7XG52YXIgTUlOMzIgPSBwb3coMiwgLTEyNik7XG5cbnZhciByb3VuZFRpZXNUb0V2ZW4gPSBmdW5jdGlvbiAobikge1xuICByZXR1cm4gbiArIDEgLyBFUFNJTE9OIC0gMSAvIEVQU0lMT047XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1hdGguZnJvdW5kIHx8IGZ1bmN0aW9uIGZyb3VuZCh4KSB7XG4gIHZhciAkYWJzID0gTWF0aC5hYnMoeCk7XG4gIHZhciAkc2lnbiA9IHNpZ24oeCk7XG4gIHZhciBhLCByZXN1bHQ7XG4gIGlmICgkYWJzIDwgTUlOMzIpIHJldHVybiAkc2lnbiAqIHJvdW5kVGllc1RvRXZlbigkYWJzIC8gTUlOMzIgLyBFUFNJTE9OMzIpICogTUlOMzIgKiBFUFNJTE9OMzI7XG4gIGEgPSAoMSArIEVQU0lMT04zMiAvIEVQU0lMT04pICogJGFicztcbiAgcmVzdWx0ID0gYSAtIChhIC0gJGFicyk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHJlc3VsdCA+IE1BWDMyIHx8IHJlc3VsdCAhPSByZXN1bHQpIHJldHVybiAkc2lnbiAqIEluZmluaXR5O1xuICByZXR1cm4gJHNpZ24gKiByZXN1bHQ7XG59O1xuIiwiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBlbnRyaWVzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaCAoZSkge1xuICAgIHZhciByZXQgPSBpdGVyYXRvclsncmV0dXJuJ107XG4gICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSBhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG4iLCJ2YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBjYWxsYmFja2ZuLCBhTGVuLCBtZW1vLCBpc1JpZ2h0KSB7XG4gIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGF0KTtcbiAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgaW5kZXggPSBpc1JpZ2h0ID8gbGVuZ3RoIC0gMSA6IDA7XG4gIHZhciBpID0gaXNSaWdodCA/IC0xIDogMTtcbiAgaWYgKGFMZW4gPCAyKSBmb3IgKDs7KSB7XG4gICAgaWYgKGluZGV4IGluIHNlbGYpIHtcbiAgICAgIG1lbW8gPSBzZWxmW2luZGV4XTtcbiAgICAgIGluZGV4ICs9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgaW5kZXggKz0gaTtcbiAgICBpZiAoaXNSaWdodCA/IGluZGV4IDwgMCA6IGxlbmd0aCA8PSBpbmRleCkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlJyk7XG4gICAgfVxuICB9XG4gIGZvciAoO2lzUmlnaHQgPyBpbmRleCA+PSAwIDogbGVuZ3RoID4gaW5kZXg7IGluZGV4ICs9IGkpIGlmIChpbmRleCBpbiBzZWxmKSB7XG4gICAgbWVtbyA9IGNhbGxiYWNrZm4obWVtbywgc2VsZltpbmRleF0sIGluZGV4LCBPKTtcbiAgfVxuICByZXR1cm4gbWVtbztcbn07XG4iLCIvLyAyMi4xLjMuMyBBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbih0YXJnZXQsIHN0YXJ0LCBlbmQgPSB0aGlzLmxlbmd0aClcbid1c2Ugc3RyaWN0JztcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBbXS5jb3B5V2l0aGluIHx8IGZ1bmN0aW9uIGNvcHlXaXRoaW4odGFyZ2V0IC8qID0gMCAqLywgc3RhcnQgLyogPSAwLCBlbmQgPSBAbGVuZ3RoICovKSB7XG4gIHZhciBPID0gdG9PYmplY3QodGhpcyk7XG4gIHZhciBsZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gIHZhciB0byA9IHRvQWJzb2x1dGVJbmRleCh0YXJnZXQsIGxlbik7XG4gIHZhciBmcm9tID0gdG9BYnNvbHV0ZUluZGV4KHN0YXJ0LCBsZW4pO1xuICB2YXIgZW5kID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7XG4gIHZhciBjb3VudCA9IE1hdGgubWluKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbikpIC0gZnJvbSwgbGVuIC0gdG8pO1xuICB2YXIgaW5jID0gMTtcbiAgaWYgKGZyb20gPCB0byAmJiB0byA8IGZyb20gKyBjb3VudCkge1xuICAgIGluYyA9IC0xO1xuICAgIGZyb20gKz0gY291bnQgLSAxO1xuICAgIHRvICs9IGNvdW50IC0gMTtcbiAgfVxuICB3aGlsZSAoY291bnQtLSA+IDApIHtcbiAgICBpZiAoZnJvbSBpbiBPKSBPW3RvXSA9IE9bZnJvbV07XG4gICAgZWxzZSBkZWxldGUgT1t0b107XG4gICAgdG8gKz0gaW5jO1xuICAgIGZyb20gKz0gaW5jO1xuICB9IHJldHVybiBPO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRvbmUsIHZhbHVlKSB7XG4gIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xucmVxdWlyZSgnLi9fZXhwb3J0Jykoe1xuICB0YXJnZXQ6ICdSZWdFeHAnLFxuICBwcm90bzogdHJ1ZSxcbiAgZm9yY2VkOiByZWdleHBFeGVjICE9PSAvLi8uZXhlY1xufSwge1xuICBleGVjOiByZWdleHBFeGVjXG59KTtcbiIsIi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzKClcbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIC8uL2cuZmxhZ3MgIT0gJ2cnKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IHJlcXVpcmUoJy4vX2ZsYWdzJylcbn0pO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiB7IGU6IGZhbHNlLCB2OiBleGVjKCkgfTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB7IGU6IHRydWUsIHY6IGUgfTtcbiAgfVxufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEMsIHgpIHtcbiAgYW5PYmplY3QoQyk7XG4gIGlmIChpc09iamVjdCh4KSAmJiB4LmNvbnN0cnVjdG9yID09PSBDKSByZXR1cm4geDtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZihDKTtcbiAgdmFyIHJlc29sdmUgPSBwcm9taXNlQ2FwYWJpbGl0eS5yZXNvbHZlO1xuICByZXNvbHZlKHgpO1xuICByZXR1cm4gcHJvbWlzZUNhcGFiaWxpdHkucHJvbWlzZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBNQVAgPSAnTWFwJztcblxuLy8gMjMuMSBNYXAgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoTUFQLCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBNYXAoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy4xLjMuNiBNYXAucHJvdG90eXBlLmdldChrZXkpXG4gIGdldDogZnVuY3Rpb24gZ2V0KGtleSkge1xuICAgIHZhciBlbnRyeSA9IHN0cm9uZy5nZXRFbnRyeSh2YWxpZGF0ZSh0aGlzLCBNQVApLCBrZXkpO1xuICAgIHJldHVybiBlbnRyeSAmJiBlbnRyeS52O1xuICB9LFxuICAvLyAyMy4xLjMuOSBNYXAucHJvdG90eXBlLnNldChrZXksIHZhbHVlKVxuICBzZXQ6IGZ1bmN0aW9uIHNldChrZXksIHZhbHVlKSB7XG4gICAgcmV0dXJuIHN0cm9uZy5kZWYodmFsaWRhdGUodGhpcywgTUFQKSwga2V5ID09PSAwID8gMCA6IGtleSwgdmFsdWUpO1xuICB9XG59LCBzdHJvbmcsIHRydWUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyICRpdGVyRGVmaW5lID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgc2V0U3BlY2llcyA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGZhc3RLZXkgPSByZXF1aXJlKCcuL19tZXRhJykuZmFzdEtleTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTSVpFID0gREVTQ1JJUFRPUlMgPyAnX3MnIDogJ3NpemUnO1xuXG52YXIgZ2V0RW50cnkgPSBmdW5jdGlvbiAodGhhdCwga2V5KSB7XG4gIC8vIGZhc3QgY2FzZVxuICB2YXIgaW5kZXggPSBmYXN0S2V5KGtleSk7XG4gIHZhciBlbnRyeTtcbiAgaWYgKGluZGV4ICE9PSAnRicpIHJldHVybiB0aGF0Ll9pW2luZGV4XTtcbiAgLy8gZnJvemVuIG9iamVjdCBjYXNlXG4gIGZvciAoZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgaWYgKGVudHJ5LmsgPT0ga2V5KSByZXR1cm4gZW50cnk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24gKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpIHtcbiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGl0ZXJhYmxlKSB7XG4gICAgICBhbkluc3RhbmNlKHRoYXQsIEMsIE5BTUUsICdfaScpO1xuICAgICAgdGhhdC5fdCA9IE5BTUU7ICAgICAgICAgLy8gY29sbGVjdGlvbiB0eXBlXG4gICAgICB0aGF0Ll9pID0gY3JlYXRlKG51bGwpOyAvLyBpbmRleFxuICAgICAgdGhhdC5fZiA9IHVuZGVmaW5lZDsgICAgLy8gZmlyc3QgZW50cnlcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7ICAgIC8vIGxhc3QgZW50cnlcbiAgICAgIHRoYXRbU0laRV0gPSAwOyAgICAgICAgIC8vIHNpemVcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMS4zLjEgTWFwLnByb3RvdHlwZS5jbGVhcigpXG4gICAgICAvLyAyMy4yLjMuMiBTZXQucHJvdG90eXBlLmNsZWFyKClcbiAgICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgICAgZm9yICh2YXIgdGhhdCA9IHZhbGlkYXRlKHRoaXMsIE5BTUUpLCBkYXRhID0gdGhhdC5faSwgZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYgKGVudHJ5LnApIGVudHJ5LnAgPSBlbnRyeS5wLm4gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgZGVsZXRlIGRhdGFbZW50cnkuaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhhdC5fZiA9IHRoYXQuX2wgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoYXRbU0laRV0gPSAwO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy4zIE1hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjIuMy40IFNldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKVxuICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHRoYXQgPSB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBlbnRyeS5uO1xuICAgICAgICAgIHZhciBwcmV2ID0gZW50cnkucDtcbiAgICAgICAgICBkZWxldGUgdGhhdC5faVtlbnRyeS5pXTtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZiAocHJldikgcHJldi5uID0gbmV4dDtcbiAgICAgICAgICBpZiAobmV4dCkgbmV4dC5wID0gcHJldjtcbiAgICAgICAgICBpZiAodGhhdC5fZiA9PSBlbnRyeSkgdGhhdC5fZiA9IG5leHQ7XG4gICAgICAgICAgaWYgKHRoYXQuX2wgPT0gZW50cnkpIHRoYXQuX2wgPSBwcmV2O1xuICAgICAgICAgIHRoYXRbU0laRV0tLTtcbiAgICAgICAgfSByZXR1cm4gISFlbnRyeTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4yLjMuNiBTZXQucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIC8vIDIzLjEuMy41IE1hcC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICAgICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgICAgICB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIDMpO1xuICAgICAgICB2YXIgZW50cnk7XG4gICAgICAgIHdoaWxlIChlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoaXMuX2YpIHtcbiAgICAgICAgICBmKGVudHJ5LnYsIGVudHJ5LmssIHRoaXMpO1xuICAgICAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgICAgIHdoaWxlIChlbnRyeSAmJiBlbnRyeS5yKSBlbnRyeSA9IGVudHJ5LnA7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuNyBNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy4yLjMuNyBTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSlcbiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICByZXR1cm4gISFnZXRFbnRyeSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSwga2V5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoREVTQ1JJUFRPUlMpIGRQKEMucHJvdG90eXBlLCAnc2l6ZScsIHtcbiAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUodGhpcywgTkFNRSlbU0laRV07XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24gKHRoYXQsIGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpO1xuICAgIHZhciBwcmV2LCBpbmRleDtcbiAgICAvLyBjaGFuZ2UgZXhpc3RpbmcgZW50cnlcbiAgICBpZiAoZW50cnkpIHtcbiAgICAgIGVudHJ5LnYgPSB2YWx1ZTtcbiAgICAvLyBjcmVhdGUgbmV3IGVudHJ5XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoYXQuX2wgPSBlbnRyeSA9IHtcbiAgICAgICAgaTogaW5kZXggPSBmYXN0S2V5KGtleSwgdHJ1ZSksIC8vIDwtIGluZGV4XG4gICAgICAgIGs6IGtleSwgICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSBrZXlcbiAgICAgICAgdjogdmFsdWUsICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHZhbHVlXG4gICAgICAgIHA6IHByZXYgPSB0aGF0Ll9sLCAgICAgICAgICAgICAvLyA8LSBwcmV2aW91cyBlbnRyeVxuICAgICAgICBuOiB1bmRlZmluZWQsICAgICAgICAgICAgICAgICAgLy8gPC0gbmV4dCBlbnRyeVxuICAgICAgICByOiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gcmVtb3ZlZFxuICAgICAgfTtcbiAgICAgIGlmICghdGhhdC5fZikgdGhhdC5fZiA9IGVudHJ5O1xuICAgICAgaWYgKHByZXYpIHByZXYubiA9IGVudHJ5O1xuICAgICAgdGhhdFtTSVpFXSsrO1xuICAgICAgLy8gYWRkIHRvIGluZGV4XG4gICAgICBpZiAoaW5kZXggIT09ICdGJykgdGhhdC5faVtpbmRleF0gPSBlbnRyeTtcbiAgICB9IHJldHVybiB0aGF0O1xuICB9LFxuICBnZXRFbnRyeTogZ2V0RW50cnksXG4gIHNldFN0cm9uZzogZnVuY3Rpb24gKEMsIE5BTUUsIElTX01BUCkge1xuICAgIC8vIGFkZCAua2V5cywgLnZhbHVlcywgLmVudHJpZXMsIFtAQGl0ZXJhdG9yXVxuICAgIC8vIDIzLjEuMy40LCAyMy4xLjMuOCwgMjMuMS4zLjExLCAyMy4xLjMuMTIsIDIzLjIuMy41LCAyMy4yLjMuOCwgMjMuMi4zLjEwLCAyMy4yLjMuMTFcbiAgICAkaXRlckRlZmluZShDLCBOQU1FLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgICAgIHRoaXMuX3QgPSB2YWxpZGF0ZShpdGVyYXRlZCwgTkFNRSk7IC8vIHRhcmdldFxuICAgICAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgICAgICAgLy8ga2luZFxuICAgICAgdGhpcy5fbCA9IHVuZGVmaW5lZDsgICAgICAgICAgICAgICAgLy8gcHJldmlvdXNcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIga2luZCA9IHRoYXQuX2s7XG4gICAgICB2YXIgZW50cnkgPSB0aGF0Ll9sO1xuICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5XG4gICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucikgZW50cnkgPSBlbnRyeS5wO1xuICAgICAgLy8gZ2V0IG5leHQgZW50cnlcbiAgICAgIGlmICghdGhhdC5fdCB8fCAhKHRoYXQuX2wgPSBlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoYXQuX3QuX2YpKSB7XG4gICAgICAgIC8vIG9yIGZpbmlzaCB0aGUgaXRlcmF0aW9uXG4gICAgICAgIHRoYXQuX3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBzdGVwKDEpO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIHN0ZXAgYnkga2luZFxuICAgICAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS5rKTtcbiAgICAgIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS52KTtcbiAgICAgIHJldHVybiBzdGVwKDAsIFtlbnRyeS5rLCBlbnRyeS52XSk7XG4gICAgfSwgSVNfTUFQID8gJ2VudHJpZXMnIDogJ3ZhbHVlcycsICFJU19NQVAsIHRydWUpO1xuXG4gICAgLy8gYWRkIFtAQHNwZWNpZXNdLCAyMy4xLjIuMiwgMjMuMi4yLjJcbiAgICBzZXRTcGVjaWVzKE5BTUUpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHN0cm9uZyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tc3Ryb25nJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgU0VUID0gJ1NldCc7XG5cbi8vIDIzLjIgU2V0IE9iamVjdHNcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFNFVCwgZnVuY3Rpb24gKGdldCkge1xuICByZXR1cm4gZnVuY3Rpb24gU2V0KCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuMi4zLjEgU2V0LnByb3RvdHlwZS5hZGQodmFsdWUpXG4gIGFkZDogZnVuY3Rpb24gYWRkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHN0cm9uZy5kZWYodmFsaWRhdGUodGhpcywgU0VUKSwgdmFsdWUgPSB2YWx1ZSA9PT0gMCA/IDAgOiB2YWx1ZSwgdmFsdWUpO1xuICB9XG59LCBzdHJvbmcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJyk7XG52YXIgYXNzaWduID0gcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpO1xudmFyIHdlYWsgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXdlYWsnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE5BVElWRV9XRUFLX01BUCA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBJU19JRTExID0gIWdsb2JhbC5BY3RpdmVYT2JqZWN0ICYmICdBY3RpdmVYT2JqZWN0JyBpbiBnbG9iYWw7XG52YXIgV0VBS19NQVAgPSAnV2Vha01hcCc7XG52YXIgZ2V0V2VhayA9IG1ldGEuZ2V0V2VhaztcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlO1xudmFyIHVuY2F1Z2h0RnJvemVuU3RvcmUgPSB3ZWFrLnVmc3RvcmU7XG52YXIgSW50ZXJuYWxNYXA7XG5cbnZhciB3cmFwcGVyID0gZnVuY3Rpb24gKGdldCkge1xuICByZXR1cm4gZnVuY3Rpb24gV2Vha01hcCgpIHtcbiAgICByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgfTtcbn07XG5cbnZhciBtZXRob2RzID0ge1xuICAvLyAyMy4zLjMuMyBXZWFrTWFwLnByb3RvdHlwZS5nZXQoa2V5KVxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICBpZiAoaXNPYmplY3Qoa2V5KSkge1xuICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodmFsaWRhdGUodGhpcywgV0VBS19NQVApKS5nZXQoa2V5KTtcbiAgICAgIHJldHVybiBkYXRhID8gZGF0YVt0aGlzLl9pXSA6IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0sXG4gIC8vIDIzLjMuMy41IFdlYWtNYXAucHJvdG90eXBlLnNldChrZXksIHZhbHVlKVxuICBzZXQ6IGZ1bmN0aW9uIHNldChrZXksIHZhbHVlKSB7XG4gICAgcmV0dXJuIHdlYWsuZGVmKHZhbGlkYXRlKHRoaXMsIFdFQUtfTUFQKSwga2V5LCB2YWx1ZSk7XG4gIH1cbn07XG5cbi8vIDIzLjMgV2Vha01hcCBPYmplY3RzXG52YXIgJFdlYWtNYXAgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShXRUFLX01BUCwgd3JhcHBlciwgbWV0aG9kcywgd2VhaywgdHJ1ZSwgdHJ1ZSk7XG5cbi8vIElFMTEgV2Vha01hcCBmcm96ZW4ga2V5cyBmaXhcbmlmIChOQVRJVkVfV0VBS19NQVAgJiYgSVNfSUUxMSkge1xuICBJbnRlcm5hbE1hcCA9IHdlYWsuZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgV0VBS19NQVApO1xuICBhc3NpZ24oSW50ZXJuYWxNYXAucHJvdG90eXBlLCBtZXRob2RzKTtcbiAgbWV0YS5ORUVEID0gdHJ1ZTtcbiAgZWFjaChbJ2RlbGV0ZScsICdoYXMnLCAnZ2V0JywgJ3NldCddLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHByb3RvID0gJFdlYWtNYXAucHJvdG90eXBlO1xuICAgIHZhciBtZXRob2QgPSBwcm90b1trZXldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBrZXksIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAvLyBzdG9yZSBmcm96ZW4gb2JqZWN0cyBvbiBpbnRlcm5hbCB3ZWFrbWFwIHNoaW1cbiAgICAgIGlmIChpc09iamVjdChhKSAmJiAhaXNFeHRlbnNpYmxlKGEpKSB7XG4gICAgICAgIGlmICghdGhpcy5fZikgdGhpcy5fZiA9IG5ldyBJbnRlcm5hbE1hcCgpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5fZltrZXldKGEsIGIpO1xuICAgICAgICByZXR1cm4ga2V5ID09ICdzZXQnID8gdGhpcyA6IHJlc3VsdDtcbiAgICAgIC8vIHN0b3JlIGFsbCB0aGUgcmVzdCBvbiBuYXRpdmUgd2Vha21hcFxuICAgICAgfSByZXR1cm4gbWV0aG9kLmNhbGwodGhpcywgYSwgYik7XG4gICAgfSk7XG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgZ2V0V2VhayA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xudmFyICRoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBhcnJheUZpbmQgPSBjcmVhdGVBcnJheU1ldGhvZCg1KTtcbnZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xudmFyIGlkID0gMDtcblxuLy8gZmFsbGJhY2sgZm9yIHVuY2F1Z2h0IGZyb3plbiBrZXlzXG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uICh0aGF0KSB7XG4gIHJldHVybiB0aGF0Ll9sIHx8ICh0aGF0Ll9sID0gbmV3IFVuY2F1Z2h0RnJvemVuU3RvcmUoKSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuYSA9IFtdO1xufTtcbnZhciBmaW5kVW5jYXVnaHRGcm96ZW4gPSBmdW5jdGlvbiAoc3RvcmUsIGtleSkge1xuICByZXR1cm4gYXJyYXlGaW5kKHN0b3JlLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSByZXR1cm4gZW50cnlbMV07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSBlbnRyeVsxXSA9IHZhbHVlO1xuICAgIGVsc2UgdGhpcy5hLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSxcbiAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgcmV0dXJuIGl0WzBdID09PSBrZXk7XG4gICAgfSk7XG4gICAgaWYgKH5pbmRleCkgdGhpcy5hLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuICEhfmluZGV4O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGlkKys7ICAgICAgLy8gY29sbGVjdGlvbiBpZFxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgLy8gbGVhayBzdG9yZSBmb3IgdW5jYXVnaHQgZnJvemVuIG9iamVjdHNcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKVsnZGVsZXRlJ10oa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKSAmJiBkZWxldGUgZGF0YVt0aGlzLl9pXTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4zLjMuNCBXZWFrTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuNC4zLjQgV2Vha1NldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKS5oYXMoa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gQztcbiAgfSxcbiAgZGVmOiBmdW5jdGlvbiAodGhhdCwga2V5LCB2YWx1ZSkge1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgdW5jYXVnaHRGcm96ZW5TdG9yZSh0aGF0KS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgZWxzZSBkYXRhW3RoYXQuX2ldID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIHVmc3RvcmU6IHVuY2F1Z2h0RnJvemVuU3RvcmVcbn07XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy10b2luZGV4XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIDA7XG4gIHZhciBudW1iZXIgPSB0b0ludGVnZXIoaXQpO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgobnVtYmVyKTtcbiAgaWYgKG51bWJlciAhPT0gbGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKCdXcm9uZyBsZW5ndGghJyk7XG4gIHJldHVybiBsZW5ndGg7XG59O1xuIiwiLy8gYWxsIG9iamVjdCBrZXlzLCBpbmNsdWRlcyBub24tZW51bWVyYWJsZSBhbmQgc3ltYm9sc1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgUmVmbGVjdCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3Q7XG5tb2R1bGUuZXhwb3J0cyA9IFJlZmxlY3QgJiYgUmVmbGVjdC5vd25LZXlzIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpIHtcbiAgdmFyIGtleXMgPSBnT1BOLmYoYW5PYmplY3QoaXQpKTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIHJldHVybiBnZXRTeW1ib2xzID8ga2V5cy5jb25jYXQoZ2V0U3ltYm9scyhpdCkpIDoga2V5cztcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1GbGF0dGVuSW50b0FycmF5XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElTX0NPTkNBVF9TUFJFQURBQkxFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2lzQ29uY2F0U3ByZWFkYWJsZScpO1xuXG5mdW5jdGlvbiBmbGF0dGVuSW50b0FycmF5KHRhcmdldCwgb3JpZ2luYWwsIHNvdXJjZSwgc291cmNlTGVuLCBzdGFydCwgZGVwdGgsIG1hcHBlciwgdGhpc0FyZykge1xuICB2YXIgdGFyZ2V0SW5kZXggPSBzdGFydDtcbiAgdmFyIHNvdXJjZUluZGV4ID0gMDtcbiAgdmFyIG1hcEZuID0gbWFwcGVyID8gY3R4KG1hcHBlciwgdGhpc0FyZywgMykgOiBmYWxzZTtcbiAgdmFyIGVsZW1lbnQsIHNwcmVhZGFibGU7XG5cbiAgd2hpbGUgKHNvdXJjZUluZGV4IDwgc291cmNlTGVuKSB7XG4gICAgaWYgKHNvdXJjZUluZGV4IGluIHNvdXJjZSkge1xuICAgICAgZWxlbWVudCA9IG1hcEZuID8gbWFwRm4oc291cmNlW3NvdXJjZUluZGV4XSwgc291cmNlSW5kZXgsIG9yaWdpbmFsKSA6IHNvdXJjZVtzb3VyY2VJbmRleF07XG5cbiAgICAgIHNwcmVhZGFibGUgPSBmYWxzZTtcbiAgICAgIGlmIChpc09iamVjdChlbGVtZW50KSkge1xuICAgICAgICBzcHJlYWRhYmxlID0gZWxlbWVudFtJU19DT05DQVRfU1BSRUFEQUJMRV07XG4gICAgICAgIHNwcmVhZGFibGUgPSBzcHJlYWRhYmxlICE9PSB1bmRlZmluZWQgPyAhIXNwcmVhZGFibGUgOiBpc0FycmF5KGVsZW1lbnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3ByZWFkYWJsZSAmJiBkZXB0aCA+IDApIHtcbiAgICAgICAgdGFyZ2V0SW5kZXggPSBmbGF0dGVuSW50b0FycmF5KHRhcmdldCwgb3JpZ2luYWwsIGVsZW1lbnQsIHRvTGVuZ3RoKGVsZW1lbnQubGVuZ3RoKSwgdGFyZ2V0SW5kZXgsIGRlcHRoIC0gMSkgLSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRhcmdldEluZGV4ID49IDB4MWZmZmZmZmZmZmZmZmYpIHRocm93IFR5cGVFcnJvcigpO1xuICAgICAgICB0YXJnZXRbdGFyZ2V0SW5kZXhdID0gZWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgdGFyZ2V0SW5kZXgrKztcbiAgICB9XG4gICAgc291cmNlSW5kZXgrKztcbiAgfVxuICByZXR1cm4gdGFyZ2V0SW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmxhdHRlbkludG9BcnJheTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciByZXBlYXQgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGhhdCwgbWF4TGVuZ3RoLCBmaWxsU3RyaW5nLCBsZWZ0KSB7XG4gIHZhciBTID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICB2YXIgc3RyaW5nTGVuZ3RoID0gUy5sZW5ndGg7XG4gIHZhciBmaWxsU3RyID0gZmlsbFN0cmluZyA9PT0gdW5kZWZpbmVkID8gJyAnIDogU3RyaW5nKGZpbGxTdHJpbmcpO1xuICB2YXIgaW50TWF4TGVuZ3RoID0gdG9MZW5ndGgobWF4TGVuZ3RoKTtcbiAgaWYgKGludE1heExlbmd0aCA8PSBzdHJpbmdMZW5ndGggfHwgZmlsbFN0ciA9PSAnJykgcmV0dXJuIFM7XG4gIHZhciBmaWxsTGVuID0gaW50TWF4TGVuZ3RoIC0gc3RyaW5nTGVuZ3RoO1xuICB2YXIgc3RyaW5nRmlsbGVyID0gcmVwZWF0LmNhbGwoZmlsbFN0ciwgTWF0aC5jZWlsKGZpbGxMZW4gLyBmaWxsU3RyLmxlbmd0aCkpO1xuICBpZiAoc3RyaW5nRmlsbGVyLmxlbmd0aCA+IGZpbGxMZW4pIHN0cmluZ0ZpbGxlciA9IHN0cmluZ0ZpbGxlci5zbGljZSgwLCBmaWxsTGVuKTtcbiAgcmV0dXJuIGxlZnQgPyBzdHJpbmdGaWxsZXIgKyBTIDogUyArIHN0cmluZ0ZpbGxlcjtcbn07XG4iLCJ2YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBpc0VudW0gPSByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGlzRW50cmllcykge1xuICByZXR1cm4gZnVuY3Rpb24gKGl0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3QoaXQpO1xuICAgIHZhciBrZXlzID0gZ2V0S2V5cyhPKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciByZXN1bHQgPSBbXTtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBpKSB7XG4gICAgICBrZXkgPSBrZXlzW2krK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGlzRW51bS5jYWxsKE8sIGtleSkpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goaXNFbnRyaWVzID8gW2tleSwgT1trZXldXSA6IE9ba2V5XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL0RhdmlkQnJ1YW50L01hcC1TZXQucHJvdG90eXBlLnRvSlNPTlxudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgZnJvbSA9IHJlcXVpcmUoJy4vX2FycmF5LWZyb20taXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRvSlNPTigpIHtcbiAgICBpZiAoY2xhc3NvZih0aGlzKSAhPSBOQU1FKSB0aHJvdyBUeXBlRXJyb3IoTkFNRSArIFwiI3RvSlNPTiBpc24ndCBnZW5lcmljXCIpO1xuICAgIHJldHVybiBmcm9tKHRoaXMpO1xuICB9O1xufTtcbiIsInZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyLCBJVEVSQVRPUikge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGZvck9mKGl0ZXIsIGZhbHNlLCByZXN1bHQucHVzaCwgcmVzdWx0LCBJVEVSQVRPUik7XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiLy8gaHR0cHM6Ly9yd2FsZHJvbi5naXRodWIuaW8vcHJvcG9zYWwtbWF0aC1leHRlbnNpb25zL1xubW9kdWxlLmV4cG9ydHMgPSBNYXRoLnNjYWxlIHx8IGZ1bmN0aW9uIHNjYWxlKHgsIGluTG93LCBpbkhpZ2gsIG91dExvdywgb3V0SGlnaCkge1xuICBpZiAoXG4gICAgYXJndW1lbnRzLmxlbmd0aCA9PT0gMFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgfHwgeCAhPSB4XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgICB8fCBpbkxvdyAhPSBpbkxvd1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgfHwgaW5IaWdoICE9IGluSGlnaFxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgfHwgb3V0TG93ICE9IG91dExvd1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgICAgfHwgb3V0SGlnaCAhPSBvdXRIaWdoXG4gICkgcmV0dXJuIE5hTjtcbiAgaWYgKHggPT09IEluZmluaXR5IHx8IHggPT09IC1JbmZpbml0eSkgcmV0dXJuIHg7XG4gIHJldHVybiAoeCAtIGluTG93KSAqIChvdXRIaWdoIC0gb3V0TG93KSAvIChpbkhpZ2ggLSBpbkxvdykgKyBvdXRMb3c7XG59O1xuIiwiLypcbm9iamVjdC1hc3NpZ25cbihjKSBTaW5kcmUgU29yaHVzXG5AbGljZW5zZSBNSVRcbiovXG5cbid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIG5vLXVudXNlZC12YXJzICovXG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbnZhciBoYXNPd25Qcm9wZXJ0eSA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgcHJvcElzRW51bWVyYWJsZSA9IE9iamVjdC5wcm90b3R5cGUucHJvcGVydHlJc0VudW1lcmFibGU7XG5cbmZ1bmN0aW9uIHRvT2JqZWN0KHZhbCkge1xuXHRpZiAodmFsID09PSBudWxsIHx8IHZhbCA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dGhyb3cgbmV3IFR5cGVFcnJvcignT2JqZWN0LmFzc2lnbiBjYW5ub3QgYmUgY2FsbGVkIHdpdGggbnVsbCBvciB1bmRlZmluZWQnKTtcblx0fVxuXG5cdHJldHVybiBPYmplY3QodmFsKTtcbn1cblxuZnVuY3Rpb24gc2hvdWxkVXNlTmF0aXZlKCkge1xuXHR0cnkge1xuXHRcdGlmICghT2JqZWN0LmFzc2lnbikge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIERldGVjdCBidWdneSBwcm9wZXJ0eSBlbnVtZXJhdGlvbiBvcmRlciBpbiBvbGRlciBWOCB2ZXJzaW9ucy5cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTQxMThcblx0XHR2YXIgdGVzdDEgPSBuZXcgU3RyaW5nKCdhYmMnKTsgIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3LXdyYXBwZXJzXG5cdFx0dGVzdDFbNV0gPSAnZGUnO1xuXHRcdGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0ZXN0MSlbMF0gPT09ICc1Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDIgPSB7fTtcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IDEwOyBpKyspIHtcblx0XHRcdHRlc3QyWydfJyArIFN0cmluZy5mcm9tQ2hhckNvZGUoaSldID0gaTtcblx0XHR9XG5cdFx0dmFyIG9yZGVyMiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QyKS5tYXAoZnVuY3Rpb24gKG4pIHtcblx0XHRcdHJldHVybiB0ZXN0MltuXTtcblx0XHR9KTtcblx0XHRpZiAob3JkZXIyLmpvaW4oJycpICE9PSAnMDEyMzQ1Njc4OScpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zMDU2XG5cdFx0dmFyIHRlc3QzID0ge307XG5cdFx0J2FiY2RlZmdoaWprbG1ub3BxcnN0Jy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyKSB7XG5cdFx0XHR0ZXN0M1tsZXR0ZXJdID0gbGV0dGVyO1xuXHRcdH0pO1xuXHRcdGlmIChPYmplY3Qua2V5cyhPYmplY3QuYXNzaWduKHt9LCB0ZXN0MykpLmpvaW4oJycpICE9PVxuXHRcdFx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRydWU7XG5cdH0gY2F0Y2ggKGVycikge1xuXHRcdC8vIFdlIGRvbid0IGV4cGVjdCBhbnkgb2YgdGhlIGFib3ZlIHRvIHRocm93LCBidXQgYmV0dGVyIHRvIGJlIHNhZmUuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2hvdWxkVXNlTmF0aXZlKCkgPyBPYmplY3QuYXNzaWduIDogZnVuY3Rpb24gKHRhcmdldCwgc291cmNlKSB7XG5cdHZhciBmcm9tO1xuXHR2YXIgdG8gPSB0b09iamVjdCh0YXJnZXQpO1xuXHR2YXIgc3ltYm9scztcblxuXHRmb3IgKHZhciBzID0gMTsgcyA8IGFyZ3VtZW50cy5sZW5ndGg7IHMrKykge1xuXHRcdGZyb20gPSBPYmplY3QoYXJndW1lbnRzW3NdKTtcblxuXHRcdGZvciAodmFyIGtleSBpbiBmcm9tKSB7XG5cdFx0XHRpZiAoaGFzT3duUHJvcGVydHkuY2FsbChmcm9tLCBrZXkpKSB7XG5cdFx0XHRcdHRvW2tleV0gPSBmcm9tW2tleV07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuXHRcdFx0c3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9scyhmcm9tKTtcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgc3ltYm9scy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHRpZiAocHJvcElzRW51bWVyYWJsZS5jYWxsKGZyb20sIHN5bWJvbHNbaV0pKSB7XG5cdFx0XHRcdFx0dG9bc3ltYm9sc1tpXV0gPSBmcm9tW3N5bWJvbHNbaV1dO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHRvO1xufTtcbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIndXNlIHN0cmljdCc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYmluZChmbiwgdGhpc0FyZykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcCgpIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoKTtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuICAgIHJldHVybiBmbi5hcHBseSh0aGlzQXJnLCBhcmdzKTtcbiAgfTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuZnVuY3Rpb24gZW5jb2RlKHZhbCkge1xuICByZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHZhbCkuXG4gICAgcmVwbGFjZSgvJTNBL2dpLCAnOicpLlxuICAgIHJlcGxhY2UoLyUyNC9nLCAnJCcpLlxuICAgIHJlcGxhY2UoLyUyQy9naSwgJywnKS5cbiAgICByZXBsYWNlKC8lMjAvZywgJysnKS5cbiAgICByZXBsYWNlKC8lNUIvZ2ksICdbJykuXG4gICAgcmVwbGFjZSgvJTVEL2dpLCAnXScpO1xufVxuXG4vKipcbiAqIEJ1aWxkIGEgVVJMIGJ5IGFwcGVuZGluZyBwYXJhbXMgdG8gdGhlIGVuZFxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIGJhc2Ugb2YgdGhlIHVybCAoZS5nLiwgaHR0cDovL3d3dy5nb29nbGUuY29tKVxuICogQHBhcmFtIHtvYmplY3R9IFtwYXJhbXNdIFRoZSBwYXJhbXMgdG8gYmUgYXBwZW5kZWRcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBmb3JtYXR0ZWQgdXJsXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRVUkwodXJsLCBwYXJhbXMsIHBhcmFtc1NlcmlhbGl6ZXIpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIGlmICghcGFyYW1zKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHZhciBzZXJpYWxpemVkUGFyYW1zO1xuICBpZiAocGFyYW1zU2VyaWFsaXplcikge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXNTZXJpYWxpemVyKHBhcmFtcyk7XG4gIH0gZWxzZSBpZiAodXRpbHMuaXNVUkxTZWFyY2hQYXJhbXMocGFyYW1zKSkge1xuICAgIHNlcmlhbGl6ZWRQYXJhbXMgPSBwYXJhbXMudG9TdHJpbmcoKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgcGFydHMgPSBbXTtcblxuICAgIHV0aWxzLmZvckVhY2gocGFyYW1zLCBmdW5jdGlvbiBzZXJpYWxpemUodmFsLCBrZXkpIHtcbiAgICAgIGlmICh2YWwgPT09IG51bGwgfHwgdHlwZW9mIHZhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAodXRpbHMuaXNBcnJheSh2YWwpKSB7XG4gICAgICAgIGtleSA9IGtleSArICdbXSc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YWwgPSBbdmFsXTtcbiAgICAgIH1cblxuICAgICAgdXRpbHMuZm9yRWFjaCh2YWwsIGZ1bmN0aW9uIHBhcnNlVmFsdWUodikge1xuICAgICAgICBpZiAodXRpbHMuaXNEYXRlKHYpKSB7XG4gICAgICAgICAgdiA9IHYudG9JU09TdHJpbmcoKTtcbiAgICAgICAgfSBlbHNlIGlmICh1dGlscy5pc09iamVjdCh2KSkge1xuICAgICAgICAgIHYgPSBKU09OLnN0cmluZ2lmeSh2KTtcbiAgICAgICAgfVxuICAgICAgICBwYXJ0cy5wdXNoKGVuY29kZShrZXkpICsgJz0nICsgZW5jb2RlKHYpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgc2VyaWFsaXplZFBhcmFtcyA9IHBhcnRzLmpvaW4oJyYnKTtcbiAgfVxuXG4gIGlmIChzZXJpYWxpemVkUGFyYW1zKSB7XG4gICAgdmFyIGhhc2htYXJrSW5kZXggPSB1cmwuaW5kZXhPZignIycpO1xuICAgIGlmIChoYXNobWFya0luZGV4ICE9PSAtMSkge1xuICAgICAgdXJsID0gdXJsLnNsaWNlKDAsIGhhc2htYXJrSW5kZXgpO1xuICAgIH1cblxuICAgIHVybCArPSAodXJsLmluZGV4T2YoJz8nKSA9PT0gLTEgPyAnPycgOiAnJicpICsgc2VyaWFsaXplZFBhcmFtcztcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzQ2FuY2VsKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiB2YWx1ZS5fX0NBTkNFTF9fKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vdXRpbHMnKTtcbnZhciBub3JtYWxpemVIZWFkZXJOYW1lID0gcmVxdWlyZSgnLi9oZWxwZXJzL25vcm1hbGl6ZUhlYWRlck5hbWUnKTtcblxudmFyIERFRkFVTFRfQ09OVEVOVF9UWVBFID0ge1xuICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCdcbn07XG5cbmZ1bmN0aW9uIHNldENvbnRlbnRUeXBlSWZVbnNldChoZWFkZXJzLCB2YWx1ZSkge1xuICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnMpICYmIHV0aWxzLmlzVW5kZWZpbmVkKGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddKSkge1xuICAgIGhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddID0gdmFsdWU7XG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdEFkYXB0ZXIoKSB7XG4gIHZhciBhZGFwdGVyO1xuICBpZiAodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIEZvciBicm93c2VycyB1c2UgWEhSIGFkYXB0ZXJcbiAgICBhZGFwdGVyID0gcmVxdWlyZSgnLi9hZGFwdGVycy94aHInKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvY2VzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpIHtcbiAgICAvLyBGb3Igbm9kZSB1c2UgSFRUUCBhZGFwdGVyXG4gICAgYWRhcHRlciA9IHJlcXVpcmUoJy4vYWRhcHRlcnMvaHR0cCcpO1xuICB9XG4gIHJldHVybiBhZGFwdGVyO1xufVxuXG52YXIgZGVmYXVsdHMgPSB7XG4gIGFkYXB0ZXI6IGdldERlZmF1bHRBZGFwdGVyKCksXG5cbiAgdHJhbnNmb3JtUmVxdWVzdDogW2Z1bmN0aW9uIHRyYW5zZm9ybVJlcXVlc3QoZGF0YSwgaGVhZGVycykge1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0FjY2VwdCcpO1xuICAgIG5vcm1hbGl6ZUhlYWRlck5hbWUoaGVhZGVycywgJ0NvbnRlbnQtVHlwZScpO1xuICAgIGlmICh1dGlscy5pc0Zvcm1EYXRhKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0FycmF5QnVmZmVyKGRhdGEpIHx8XG4gICAgICB1dGlscy5pc0J1ZmZlcihkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNTdHJlYW0oZGF0YSkgfHxcbiAgICAgIHV0aWxzLmlzRmlsZShkYXRhKSB8fFxuICAgICAgdXRpbHMuaXNCbG9iKGRhdGEpXG4gICAgKSB7XG4gICAgICByZXR1cm4gZGF0YTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzQXJyYXlCdWZmZXJWaWV3KGRhdGEpKSB7XG4gICAgICByZXR1cm4gZGF0YS5idWZmZXI7XG4gICAgfVxuICAgIGlmICh1dGlscy5pc1VSTFNlYXJjaFBhcmFtcyhkYXRhKSkge1xuICAgICAgc2V0Q29udGVudFR5cGVJZlVuc2V0KGhlYWRlcnMsICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIGRhdGEudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgaWYgKHV0aWxzLmlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICBzZXRDb250ZW50VHlwZUlmVW5zZXQoaGVhZGVycywgJ2FwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtOCcpO1xuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gZGF0YTtcbiAgfV0sXG5cbiAgdHJhbnNmb3JtUmVzcG9uc2U6IFtmdW5jdGlvbiB0cmFuc2Zvcm1SZXNwb25zZShkYXRhKSB7XG4gICAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gICAgaWYgKHR5cGVvZiBkYXRhID09PSAnc3RyaW5nJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7XG4gICAgICB9IGNhdGNoIChlKSB7IC8qIElnbm9yZSAqLyB9XG4gICAgfVxuICAgIHJldHVybiBkYXRhO1xuICB9XSxcblxuICAvKipcbiAgICogQSB0aW1lb3V0IGluIG1pbGxpc2Vjb25kcyB0byBhYm9ydCBhIHJlcXVlc3QuIElmIHNldCB0byAwIChkZWZhdWx0KSBhXG4gICAqIHRpbWVvdXQgaXMgbm90IGNyZWF0ZWQuXG4gICAqL1xuICB0aW1lb3V0OiAwLFxuXG4gIHhzcmZDb29raWVOYW1lOiAnWFNSRi1UT0tFTicsXG4gIHhzcmZIZWFkZXJOYW1lOiAnWC1YU1JGLVRPS0VOJyxcblxuICBtYXhDb250ZW50TGVuZ3RoOiAtMSxcbiAgbWF4Qm9keUxlbmd0aDogLTEsXG5cbiAgdmFsaWRhdGVTdGF0dXM6IGZ1bmN0aW9uIHZhbGlkYXRlU3RhdHVzKHN0YXR1cykge1xuICAgIHJldHVybiBzdGF0dXMgPj0gMjAwICYmIHN0YXR1cyA8IDMwMDtcbiAgfVxufTtcblxuZGVmYXVsdHMuaGVhZGVycyA9IHtcbiAgY29tbW9uOiB7XG4gICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyonXG4gIH1cbn07XG5cbnV0aWxzLmZvckVhY2goWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0ge307XG59KTtcblxudXRpbHMuZm9yRWFjaChbJ3Bvc3QnLCAncHV0JywgJ3BhdGNoJ10sIGZ1bmN0aW9uIGZvckVhY2hNZXRob2RXaXRoRGF0YShtZXRob2QpIHtcbiAgZGVmYXVsdHMuaGVhZGVyc1ttZXRob2RdID0gdXRpbHMubWVyZ2UoREVGQVVMVF9DT05URU5UX1RZUEUpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZGVmYXVsdHM7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciBzZXR0bGUgPSByZXF1aXJlKCcuLy4uL2NvcmUvc2V0dGxlJyk7XG52YXIgY29va2llcyA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9jb29raWVzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLy4uL2hlbHBlcnMvYnVpbGRVUkwnKTtcbnZhciBidWlsZEZ1bGxQYXRoID0gcmVxdWlyZSgnLi4vY29yZS9idWlsZEZ1bGxQYXRoJyk7XG52YXIgcGFyc2VIZWFkZXJzID0gcmVxdWlyZSgnLi8uLi9oZWxwZXJzL3BhcnNlSGVhZGVycycpO1xudmFyIGlzVVJMU2FtZU9yaWdpbiA9IHJlcXVpcmUoJy4vLi4vaGVscGVycy9pc1VSTFNhbWVPcmlnaW4nKTtcbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4uL2NvcmUvY3JlYXRlRXJyb3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB4aHJBZGFwdGVyKGNvbmZpZykge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gZGlzcGF0Y2hYaHJSZXF1ZXN0KHJlc29sdmUsIHJlamVjdCkge1xuICAgIHZhciByZXF1ZXN0RGF0YSA9IGNvbmZpZy5kYXRhO1xuICAgIHZhciByZXF1ZXN0SGVhZGVycyA9IGNvbmZpZy5oZWFkZXJzO1xuXG4gICAgaWYgKHV0aWxzLmlzRm9ybURhdGEocmVxdWVzdERhdGEpKSB7XG4gICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNbJ0NvbnRlbnQtVHlwZSddOyAvLyBMZXQgdGhlIGJyb3dzZXIgc2V0IGl0XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgKHV0aWxzLmlzQmxvYihyZXF1ZXN0RGF0YSkgfHwgdXRpbHMuaXNGaWxlKHJlcXVlc3REYXRhKSkgJiZcbiAgICAgIHJlcXVlc3REYXRhLnR5cGVcbiAgICApIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0SGVhZGVyc1snQ29udGVudC1UeXBlJ107IC8vIExldCB0aGUgYnJvd3NlciBzZXQgaXRcbiAgICB9XG5cbiAgICB2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgLy8gSFRUUCBiYXNpYyBhdXRoZW50aWNhdGlvblxuICAgIGlmIChjb25maWcuYXV0aCkge1xuICAgICAgdmFyIHVzZXJuYW1lID0gY29uZmlnLmF1dGgudXNlcm5hbWUgfHwgJyc7XG4gICAgICB2YXIgcGFzc3dvcmQgPSB1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoY29uZmlnLmF1dGgucGFzc3dvcmQpKSB8fCAnJztcbiAgICAgIHJlcXVlc3RIZWFkZXJzLkF1dGhvcml6YXRpb24gPSAnQmFzaWMgJyArIGJ0b2EodXNlcm5hbWUgKyAnOicgKyBwYXNzd29yZCk7XG4gICAgfVxuXG4gICAgdmFyIGZ1bGxQYXRoID0gYnVpbGRGdWxsUGF0aChjb25maWcuYmFzZVVSTCwgY29uZmlnLnVybCk7XG4gICAgcmVxdWVzdC5vcGVuKGNvbmZpZy5tZXRob2QudG9VcHBlckNhc2UoKSwgYnVpbGRVUkwoZnVsbFBhdGgsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKSwgdHJ1ZSk7XG5cbiAgICAvLyBTZXQgdGhlIHJlcXVlc3QgdGltZW91dCBpbiBNU1xuICAgIHJlcXVlc3QudGltZW91dCA9IGNvbmZpZy50aW1lb3V0O1xuXG4gICAgLy8gTGlzdGVuIGZvciByZWFkeSBzdGF0ZVxuICAgIHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gaGFuZGxlTG9hZCgpIHtcbiAgICAgIGlmICghcmVxdWVzdCB8fCByZXF1ZXN0LnJlYWR5U3RhdGUgIT09IDQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBUaGUgcmVxdWVzdCBlcnJvcmVkIG91dCBhbmQgd2UgZGlkbid0IGdldCBhIHJlc3BvbnNlLCB0aGlzIHdpbGwgYmVcbiAgICAgIC8vIGhhbmRsZWQgYnkgb25lcnJvciBpbnN0ZWFkXG4gICAgICAvLyBXaXRoIG9uZSBleGNlcHRpb246IHJlcXVlc3QgdGhhdCB1c2luZyBmaWxlOiBwcm90b2NvbCwgbW9zdCBicm93c2Vyc1xuICAgICAgLy8gd2lsbCByZXR1cm4gc3RhdHVzIGFzIDAgZXZlbiB0aG91Z2ggaXQncyBhIHN1Y2Nlc3NmdWwgcmVxdWVzdFxuICAgICAgaWYgKHJlcXVlc3Quc3RhdHVzID09PSAwICYmICEocmVxdWVzdC5yZXNwb25zZVVSTCAmJiByZXF1ZXN0LnJlc3BvbnNlVVJMLmluZGV4T2YoJ2ZpbGU6JykgPT09IDApKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gUHJlcGFyZSB0aGUgcmVzcG9uc2VcbiAgICAgIHZhciByZXNwb25zZUhlYWRlcnMgPSAnZ2V0QWxsUmVzcG9uc2VIZWFkZXJzJyBpbiByZXF1ZXN0ID8gcGFyc2VIZWFkZXJzKHJlcXVlc3QuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkpIDogbnVsbDtcbiAgICAgIHZhciByZXNwb25zZURhdGEgPSAhY29uZmlnLnJlc3BvbnNlVHlwZSB8fCBjb25maWcucmVzcG9uc2VUeXBlID09PSAndGV4dCcgPyByZXF1ZXN0LnJlc3BvbnNlVGV4dCA6IHJlcXVlc3QucmVzcG9uc2U7XG4gICAgICB2YXIgcmVzcG9uc2UgPSB7XG4gICAgICAgIGRhdGE6IHJlc3BvbnNlRGF0YSxcbiAgICAgICAgc3RhdHVzOiByZXF1ZXN0LnN0YXR1cyxcbiAgICAgICAgc3RhdHVzVGV4dDogcmVxdWVzdC5zdGF0dXNUZXh0LFxuICAgICAgICBoZWFkZXJzOiByZXNwb25zZUhlYWRlcnMsXG4gICAgICAgIGNvbmZpZzogY29uZmlnLFxuICAgICAgICByZXF1ZXN0OiByZXF1ZXN0XG4gICAgICB9O1xuXG4gICAgICBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBIYW5kbGUgYnJvd3NlciByZXF1ZXN0IGNhbmNlbGxhdGlvbiAoYXMgb3Bwb3NlZCB0byBhIG1hbnVhbCBjYW5jZWxsYXRpb24pXG4gICAgcmVxdWVzdC5vbmFib3J0ID0gZnVuY3Rpb24gaGFuZGxlQWJvcnQoKSB7XG4gICAgICBpZiAoIXJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ1JlcXVlc3QgYWJvcnRlZCcsIGNvbmZpZywgJ0VDT05OQUJPUlRFRCcsIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSBsb3cgbGV2ZWwgbmV0d29yayBlcnJvcnNcbiAgICByZXF1ZXN0Lm9uZXJyb3IgPSBmdW5jdGlvbiBoYW5kbGVFcnJvcigpIHtcbiAgICAgIC8vIFJlYWwgZXJyb3JzIGFyZSBoaWRkZW4gZnJvbSB1cyBieSB0aGUgYnJvd3NlclxuICAgICAgLy8gb25lcnJvciBzaG91bGQgb25seSBmaXJlIGlmIGl0J3MgYSBuZXR3b3JrIGVycm9yXG4gICAgICByZWplY3QoY3JlYXRlRXJyb3IoJ05ldHdvcmsgRXJyb3InLCBjb25maWcsIG51bGwsIHJlcXVlc3QpKTtcblxuICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgcmVxdWVzdCA9IG51bGw7XG4gICAgfTtcblxuICAgIC8vIEhhbmRsZSB0aW1lb3V0XG4gICAgcmVxdWVzdC5vbnRpbWVvdXQgPSBmdW5jdGlvbiBoYW5kbGVUaW1lb3V0KCkge1xuICAgICAgdmFyIHRpbWVvdXRFcnJvck1lc3NhZ2UgPSAndGltZW91dCBvZiAnICsgY29uZmlnLnRpbWVvdXQgKyAnbXMgZXhjZWVkZWQnO1xuICAgICAgaWYgKGNvbmZpZy50aW1lb3V0RXJyb3JNZXNzYWdlKSB7XG4gICAgICAgIHRpbWVvdXRFcnJvck1lc3NhZ2UgPSBjb25maWcudGltZW91dEVycm9yTWVzc2FnZTtcbiAgICAgIH1cbiAgICAgIHJlamVjdChjcmVhdGVFcnJvcih0aW1lb3V0RXJyb3JNZXNzYWdlLCBjb25maWcsICdFQ09OTkFCT1JURUQnLFxuICAgICAgICByZXF1ZXN0KSk7XG5cbiAgICAgIC8vIENsZWFuIHVwIHJlcXVlc3RcbiAgICAgIHJlcXVlc3QgPSBudWxsO1xuICAgIH07XG5cbiAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAvLyBUaGlzIGlzIG9ubHkgZG9uZSBpZiBydW5uaW5nIGluIGEgc3RhbmRhcmQgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAgICAvLyBTcGVjaWZpY2FsbHkgbm90IGlmIHdlJ3JlIGluIGEgd2ViIHdvcmtlciwgb3IgcmVhY3QtbmF0aXZlLlxuICAgIGlmICh1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpKSB7XG4gICAgICAvLyBBZGQgeHNyZiBoZWFkZXJcbiAgICAgIHZhciB4c3JmVmFsdWUgPSAoY29uZmlnLndpdGhDcmVkZW50aWFscyB8fCBpc1VSTFNhbWVPcmlnaW4oZnVsbFBhdGgpKSAmJiBjb25maWcueHNyZkNvb2tpZU5hbWUgP1xuICAgICAgICBjb29raWVzLnJlYWQoY29uZmlnLnhzcmZDb29raWVOYW1lKSA6XG4gICAgICAgIHVuZGVmaW5lZDtcblxuICAgICAgaWYgKHhzcmZWYWx1ZSkge1xuICAgICAgICByZXF1ZXN0SGVhZGVyc1tjb25maWcueHNyZkhlYWRlck5hbWVdID0geHNyZlZhbHVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCBoZWFkZXJzIHRvIHRoZSByZXF1ZXN0XG4gICAgaWYgKCdzZXRSZXF1ZXN0SGVhZGVyJyBpbiByZXF1ZXN0KSB7XG4gICAgICB1dGlscy5mb3JFYWNoKHJlcXVlc3RIZWFkZXJzLCBmdW5jdGlvbiBzZXRSZXF1ZXN0SGVhZGVyKHZhbCwga2V5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgcmVxdWVzdERhdGEgPT09ICd1bmRlZmluZWQnICYmIGtleS50b0xvd2VyQ2FzZSgpID09PSAnY29udGVudC10eXBlJykge1xuICAgICAgICAgIC8vIFJlbW92ZSBDb250ZW50LVR5cGUgaWYgZGF0YSBpcyB1bmRlZmluZWRcbiAgICAgICAgICBkZWxldGUgcmVxdWVzdEhlYWRlcnNba2V5XTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBPdGhlcndpc2UgYWRkIGhlYWRlciB0byB0aGUgcmVxdWVzdFxuICAgICAgICAgIHJlcXVlc3Quc2V0UmVxdWVzdEhlYWRlcihrZXksIHZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIC8vIEFkZCB3aXRoQ3JlZGVudGlhbHMgdG8gcmVxdWVzdCBpZiBuZWVkZWRcbiAgICBpZiAoIXV0aWxzLmlzVW5kZWZpbmVkKGNvbmZpZy53aXRoQ3JlZGVudGlhbHMpKSB7XG4gICAgICByZXF1ZXN0LndpdGhDcmVkZW50aWFscyA9ICEhY29uZmlnLndpdGhDcmVkZW50aWFscztcbiAgICB9XG5cbiAgICAvLyBBZGQgcmVzcG9uc2VUeXBlIHRvIHJlcXVlc3QgaWYgbmVlZGVkXG4gICAgaWYgKGNvbmZpZy5yZXNwb25zZVR5cGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlcXVlc3QucmVzcG9uc2VUeXBlID0gY29uZmlnLnJlc3BvbnNlVHlwZTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gRXhwZWN0ZWQgRE9NRXhjZXB0aW9uIHRocm93biBieSBicm93c2VycyBub3QgY29tcGF0aWJsZSBYTUxIdHRwUmVxdWVzdCBMZXZlbCAyLlxuICAgICAgICAvLyBCdXQsIHRoaXMgY2FuIGJlIHN1cHByZXNzZWQgZm9yICdqc29uJyB0eXBlIGFzIGl0IGNhbiBiZSBwYXJzZWQgYnkgZGVmYXVsdCAndHJhbnNmb3JtUmVzcG9uc2UnIGZ1bmN0aW9uLlxuICAgICAgICBpZiAoY29uZmlnLnJlc3BvbnNlVHlwZSAhPT0gJ2pzb24nKSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEhhbmRsZSBwcm9ncmVzcyBpZiBuZWVkZWRcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5vbkRvd25sb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJlcXVlc3QuYWRkRXZlbnRMaXN0ZW5lcigncHJvZ3Jlc3MnLCBjb25maWcub25Eb3dubG9hZFByb2dyZXNzKTtcbiAgICB9XG5cbiAgICAvLyBOb3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdXBsb2FkIGV2ZW50c1xuICAgIGlmICh0eXBlb2YgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MgPT09ICdmdW5jdGlvbicgJiYgcmVxdWVzdC51cGxvYWQpIHtcbiAgICAgIHJlcXVlc3QudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoJ3Byb2dyZXNzJywgY29uZmlnLm9uVXBsb2FkUHJvZ3Jlc3MpO1xuICAgIH1cblxuICAgIGlmIChjb25maWcuY2FuY2VsVG9rZW4pIHtcbiAgICAgIC8vIEhhbmRsZSBjYW5jZWxsYXRpb25cbiAgICAgIGNvbmZpZy5jYW5jZWxUb2tlbi5wcm9taXNlLnRoZW4oZnVuY3Rpb24gb25DYW5jZWxlZChjYW5jZWwpIHtcbiAgICAgICAgaWYgKCFyZXF1ZXN0KSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVxdWVzdC5hYm9ydCgpO1xuICAgICAgICByZWplY3QoY2FuY2VsKTtcbiAgICAgICAgLy8gQ2xlYW4gdXAgcmVxdWVzdFxuICAgICAgICByZXF1ZXN0ID0gbnVsbDtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmICghcmVxdWVzdERhdGEpIHtcbiAgICAgIHJlcXVlc3REYXRhID0gbnVsbDtcbiAgICB9XG5cbiAgICAvLyBTZW5kIHRoZSByZXF1ZXN0XG4gICAgcmVxdWVzdC5zZW5kKHJlcXVlc3REYXRhKTtcbiAgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW5oYW5jZUVycm9yID0gcmVxdWlyZSgnLi9lbmhhbmNlRXJyb3InKTtcblxuLyoqXG4gKiBDcmVhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIG1lc3NhZ2UsIGNvbmZpZywgZXJyb3IgY29kZSwgcmVxdWVzdCBhbmQgcmVzcG9uc2UuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IG1lc3NhZ2UgVGhlIGVycm9yIG1lc3NhZ2UuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGNyZWF0ZWQgZXJyb3IuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3JlYXRlRXJyb3IobWVzc2FnZSwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICB2YXIgZXJyb3IgPSBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIHJldHVybiBlbmhhbmNlRXJyb3IoZXJyb3IsIGNvbmZpZywgY29kZSwgcmVxdWVzdCwgcmVzcG9uc2UpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBDb25maWctc3BlY2lmaWMgbWVyZ2UtZnVuY3Rpb24gd2hpY2ggY3JlYXRlcyBhIG5ldyBjb25maWctb2JqZWN0XG4gKiBieSBtZXJnaW5nIHR3byBjb25maWd1cmF0aW9uIG9iamVjdHMgdG9nZXRoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZzFcbiAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWcyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBOZXcgb2JqZWN0IHJlc3VsdGluZyBmcm9tIG1lcmdpbmcgY29uZmlnMiB0byBjb25maWcxXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbWVyZ2VDb25maWcoY29uZmlnMSwgY29uZmlnMikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgY29uZmlnMiA9IGNvbmZpZzIgfHwge307XG4gIHZhciBjb25maWcgPSB7fTtcblxuICB2YXIgdmFsdWVGcm9tQ29uZmlnMktleXMgPSBbJ3VybCcsICdtZXRob2QnLCAnZGF0YSddO1xuICB2YXIgbWVyZ2VEZWVwUHJvcGVydGllc0tleXMgPSBbJ2hlYWRlcnMnLCAnYXV0aCcsICdwcm94eScsICdwYXJhbXMnXTtcbiAgdmFyIGRlZmF1bHRUb0NvbmZpZzJLZXlzID0gW1xuICAgICdiYXNlVVJMJywgJ3RyYW5zZm9ybVJlcXVlc3QnLCAndHJhbnNmb3JtUmVzcG9uc2UnLCAncGFyYW1zU2VyaWFsaXplcicsXG4gICAgJ3RpbWVvdXQnLCAndGltZW91dE1lc3NhZ2UnLCAnd2l0aENyZWRlbnRpYWxzJywgJ2FkYXB0ZXInLCAncmVzcG9uc2VUeXBlJywgJ3hzcmZDb29raWVOYW1lJyxcbiAgICAneHNyZkhlYWRlck5hbWUnLCAnb25VcGxvYWRQcm9ncmVzcycsICdvbkRvd25sb2FkUHJvZ3Jlc3MnLCAnZGVjb21wcmVzcycsXG4gICAgJ21heENvbnRlbnRMZW5ndGgnLCAnbWF4Qm9keUxlbmd0aCcsICdtYXhSZWRpcmVjdHMnLCAndHJhbnNwb3J0JywgJ2h0dHBBZ2VudCcsXG4gICAgJ2h0dHBzQWdlbnQnLCAnY2FuY2VsVG9rZW4nLCAnc29ja2V0UGF0aCcsICdyZXNwb25zZUVuY29kaW5nJ1xuICBdO1xuICB2YXIgZGlyZWN0TWVyZ2VLZXlzID0gWyd2YWxpZGF0ZVN0YXR1cyddO1xuXG4gIGZ1bmN0aW9uIGdldE1lcmdlZFZhbHVlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKHV0aWxzLmlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiB1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh0YXJnZXQsIHNvdXJjZSk7XG4gICAgfSBlbHNlIGlmICh1dGlscy5pc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgIHJldHVybiB1dGlscy5tZXJnZSh7fSwgc291cmNlKTtcbiAgICB9IGVsc2UgaWYgKHV0aWxzLmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgcmV0dXJuIHNvdXJjZS5zbGljZSgpO1xuICAgIH1cbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgZnVuY3Rpb24gbWVyZ2VEZWVwUHJvcGVydGllcyhwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUoY29uZmlnMVtwcm9wXSwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9XG5cbiAgdXRpbHMuZm9yRWFjaCh2YWx1ZUZyb21Db25maWcyS2V5cywgZnVuY3Rpb24gdmFsdWVGcm9tQ29uZmlnMihwcm9wKSB7XG4gICAgaWYgKCF1dGlscy5pc1VuZGVmaW5lZChjb25maWcyW3Byb3BdKSkge1xuICAgICAgY29uZmlnW3Byb3BdID0gZ2V0TWVyZ2VkVmFsdWUodW5kZWZpbmVkLCBjb25maWcyW3Byb3BdKTtcbiAgICB9XG4gIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gobWVyZ2VEZWVwUHJvcGVydGllc0tleXMsIG1lcmdlRGVlcFByb3BlcnRpZXMpO1xuXG4gIHV0aWxzLmZvckVhY2goZGVmYXVsdFRvQ29uZmlnMktleXMsIGZ1bmN0aW9uIGRlZmF1bHRUb0NvbmZpZzIocHJvcCkge1xuICAgIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMltwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMltwcm9wXSk7XG4gICAgfSBlbHNlIGlmICghdXRpbHMuaXNVbmRlZmluZWQoY29uZmlnMVtwcm9wXSkpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKHVuZGVmaW5lZCwgY29uZmlnMVtwcm9wXSk7XG4gICAgfVxuICB9KTtcblxuICB1dGlscy5mb3JFYWNoKGRpcmVjdE1lcmdlS2V5cywgZnVuY3Rpb24gbWVyZ2UocHJvcCkge1xuICAgIGlmIChwcm9wIGluIGNvbmZpZzIpIHtcbiAgICAgIGNvbmZpZ1twcm9wXSA9IGdldE1lcmdlZFZhbHVlKGNvbmZpZzFbcHJvcF0sIGNvbmZpZzJbcHJvcF0pO1xuICAgIH0gZWxzZSBpZiAocHJvcCBpbiBjb25maWcxKSB7XG4gICAgICBjb25maWdbcHJvcF0gPSBnZXRNZXJnZWRWYWx1ZSh1bmRlZmluZWQsIGNvbmZpZzFbcHJvcF0pO1xuICAgIH1cbiAgfSk7XG5cbiAgdmFyIGF4aW9zS2V5cyA9IHZhbHVlRnJvbUNvbmZpZzJLZXlzXG4gICAgLmNvbmNhdChtZXJnZURlZXBQcm9wZXJ0aWVzS2V5cylcbiAgICAuY29uY2F0KGRlZmF1bHRUb0NvbmZpZzJLZXlzKVxuICAgIC5jb25jYXQoZGlyZWN0TWVyZ2VLZXlzKTtcblxuICB2YXIgb3RoZXJLZXlzID0gT2JqZWN0XG4gICAgLmtleXMoY29uZmlnMSlcbiAgICAuY29uY2F0KE9iamVjdC5rZXlzKGNvbmZpZzIpKVxuICAgIC5maWx0ZXIoZnVuY3Rpb24gZmlsdGVyQXhpb3NLZXlzKGtleSkge1xuICAgICAgcmV0dXJuIGF4aW9zS2V5cy5pbmRleE9mKGtleSkgPT09IC0xO1xuICAgIH0pO1xuXG4gIHV0aWxzLmZvckVhY2gob3RoZXJLZXlzLCBtZXJnZURlZXBQcm9wZXJ0aWVzKTtcblxuICByZXR1cm4gY29uZmlnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBBIGBDYW5jZWxgIGlzIGFuIG9iamVjdCB0aGF0IGlzIHRocm93biB3aGVuIGFuIG9wZXJhdGlvbiBpcyBjYW5jZWxlZC5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7c3RyaW5nPX0gbWVzc2FnZSBUaGUgbWVzc2FnZS5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsKG1lc3NhZ2UpIHtcbiAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbn1cblxuQ2FuY2VsLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gJ0NhbmNlbCcgKyAodGhpcy5tZXNzYWdlID8gJzogJyArIHRoaXMubWVzc2FnZSA6ICcnKTtcbn07XG5cbkNhbmNlbC5wcm90b3R5cGUuX19DQU5DRUxfXyA9IHRydWU7XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3ltYm9sT2JzZXJ2YWJsZVBvbnlmaWxsKHJvb3QpIHtcblx0dmFyIHJlc3VsdDtcblx0dmFyIFN5bWJvbCA9IHJvb3QuU3ltYm9sO1xuXG5cdGlmICh0eXBlb2YgU3ltYm9sID09PSAnZnVuY3Rpb24nKSB7XG5cdFx0aWYgKFN5bWJvbC5vYnNlcnZhYmxlKSB7XG5cdFx0XHRyZXN1bHQgPSBTeW1ib2wub2JzZXJ2YWJsZTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sKCdvYnNlcnZhYmxlJyk7XG5cdFx0XHRTeW1ib2wub2JzZXJ2YWJsZSA9IHJlc3VsdDtcblx0XHR9XG5cdH0gZWxzZSB7XG5cdFx0cmVzdWx0ID0gJ0BAb2JzZXJ2YWJsZSc7XG5cdH1cblxuXHRyZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIsIGNvbXBhcmUsIGNvbXBhcmVDb250ZXh0KSB7XG4gIHZhciByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCBvYmpBLCBvYmpCKSA6IHZvaWQgMDtcblxuICBpZiAocmV0ICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gISFyZXQ7XG4gIH1cblxuICBpZiAob2JqQSA9PT0gb2JqQikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSBcIm9iamVjdFwiIHx8ICFvYmpBIHx8IHR5cGVvZiBvYmpCICE9PSBcIm9iamVjdFwiIHx8ICFvYmpCKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBiSGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmJpbmQob2JqQik7XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwga2V5c0EubGVuZ3RoOyBpZHgrKykge1xuICAgIHZhciBrZXkgPSBrZXlzQVtpZHhdO1xuXG4gICAgaWYgKCFiSGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZUEgPSBvYmpBW2tleV07XG4gICAgdmFyIHZhbHVlQiA9IG9iakJba2V5XTtcblxuICAgIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIHZhbHVlQSwgdmFsdWVCLCBrZXkpIDogdm9pZCAwO1xuXG4gICAgaWYgKHJldCA9PT0gZmFsc2UgfHwgKHJldCA9PT0gdm9pZCAwICYmIHZhbHVlQSAhPT0gdmFsdWVCKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbiIsImZ1bmN0aW9uIHN0eWxpc19taW4gKFcpIHtcbiAgZnVuY3Rpb24gTShkLCBjLCBlLCBoLCBhKSB7XG4gICAgZm9yICh2YXIgbSA9IDAsIGIgPSAwLCB2ID0gMCwgbiA9IDAsIHEsIGcsIHggPSAwLCBLID0gMCwgaywgdSA9IGsgPSBxID0gMCwgbCA9IDAsIHIgPSAwLCBJID0gMCwgdCA9IDAsIEIgPSBlLmxlbmd0aCwgSiA9IEIgLSAxLCB5LCBmID0gJycsIHAgPSAnJywgRiA9ICcnLCBHID0gJycsIEM7IGwgPCBCOykge1xuICAgICAgZyA9IGUuY2hhckNvZGVBdChsKTtcbiAgICAgIGwgPT09IEogJiYgMCAhPT0gYiArIG4gKyB2ICsgbSAmJiAoMCAhPT0gYiAmJiAoZyA9IDQ3ID09PSBiID8gMTAgOiA0NyksIG4gPSB2ID0gbSA9IDAsIEIrKywgSisrKTtcblxuICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgaWYgKGwgPT09IEogJiYgKDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSksIDAgPCBmLnRyaW0oKS5sZW5ndGgpKSB7XG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgZiArPSBlLmNoYXJBdChsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBnID0gNTk7XG4gICAgICAgIH1cblxuICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgIGYgPSBmLnRyaW0oKTtcbiAgICAgICAgICAgIHEgPSBmLmNoYXJDb2RlQXQoMCk7XG4gICAgICAgICAgICBrID0gMTtcblxuICAgICAgICAgICAgZm9yICh0ID0gKytsOyBsIDwgQjspIHtcbiAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwpKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAxMjM6XG4gICAgICAgICAgICAgICAgICBrKys7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgICAgICAgICAgay0tO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgc3dpdGNoIChnID0gZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgIGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodSA9IGwgKyAxOyB1IDwgSjsgKyt1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoZS5jaGFyQ29kZUF0KHUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0MiA9PT0gZyAmJiA0MiA9PT0gZS5jaGFyQ29kZUF0KHUgLSAxKSAmJiBsICsgMiAhPT0gdSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxMDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICg0NyA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsID0gdSArIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrIGE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBsID0gdTtcbiAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDkxOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgICAgIGcrKztcblxuICAgICAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgICAgIGZvciAoOyBsKysgPCBKICYmIGUuY2hhckNvZGVBdChsKSAhPT0gZzspIHtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKDAgPT09IGspIGJyZWFrO1xuICAgICAgICAgICAgICBsKys7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGsgPSBlLnN1YnN0cmluZyh0LCBsKTtcbiAgICAgICAgICAgIDAgPT09IHEgJiYgKHEgPSAoZiA9IGYucmVwbGFjZShjYSwgJycpLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICAgICAgICAgIHN3aXRjaCAocSkge1xuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIDAgPCByICYmIChmID0gZi5yZXBsYWNlKE4sICcnKSk7XG4gICAgICAgICAgICAgICAgZyA9IGYuY2hhckNvZGVBdCgxKTtcblxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgY2FzZSA0NTpcbiAgICAgICAgICAgICAgICAgICAgciA9IGM7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICByID0gTztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBrID0gTShjLCByLCBrLCBnLCBhICsgMSk7XG4gICAgICAgICAgICAgICAgdCA9IGsubGVuZ3RoO1xuICAgICAgICAgICAgICAgIDAgPCBBICYmIChyID0gWChPLCBmLCBJKSwgQyA9IEgoMywgaywgciwgYywgRCwgeiwgdCwgZywgYSwgaCksIGYgPSByLmpvaW4oJycpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHQgPSAoayA9IEMudHJpbSgpKS5sZW5ndGgpICYmIChnID0gMCwgayA9ICcnKSk7XG4gICAgICAgICAgICAgICAgaWYgKDAgPCB0KSBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGRhLCBlYSk7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTAwOlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDk6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArICd7JyArIGsgKyAnfSc7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBjYXNlIDEwNzpcbiAgICAgICAgICAgICAgICAgICAgZiA9IGYucmVwbGFjZShmYSwgJyQxICQyJyk7XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgayA9IDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKCdAJyArIGssIDMpID8gJ0Atd2Via2l0LScgKyBrICsgJ0AnICsgayA6ICdAJyArIGs7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBrID0gZiArIGssIDExMiA9PT0gaCAmJiAoayA9IChwICs9IGssICcnKSk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIGsgPSAnJztcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIFgoYywgZiwgSSksIGssIGgsIGEgKyAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgRiArPSBrO1xuICAgICAgICAgICAgayA9IEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDEyNTpcbiAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgZiA9ICgwIDwgciA/IGYucmVwbGFjZShOLCAnJykgOiBmKS50cmltKCk7XG4gICAgICAgICAgICBpZiAoMSA8ICh0ID0gZi5sZW5ndGgpKSBzd2l0Y2ggKDAgPT09IHUgJiYgKHEgPSBmLmNoYXJDb2RlQXQoMCksIDQ1ID09PSBxIHx8IDk2IDwgcSAmJiAxMjMgPiBxKSAmJiAodCA9IChmID0gZi5yZXBsYWNlKCcgJywgJzonKSkubGVuZ3RoKSwgMCA8IEEgJiYgdm9pZCAwICE9PSAoQyA9IEgoMSwgZiwgYywgZCwgRCwgeiwgcC5sZW5ndGgsIGgsIGEsIGgpKSAmJiAwID09PSAodCA9IChmID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGYgPSAnXFx4MDBcXHgwMCcpLCBxID0gZi5jaGFyQ29kZUF0KDApLCBnID0gZi5jaGFyQ29kZUF0KDEpLCBxKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAgIGlmICgxMDUgPT09IGcgfHwgOTkgPT09IGcpIHtcbiAgICAgICAgICAgICAgICAgIEcgKz0gZiArIGUuY2hhckF0KGwpO1xuICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgNTggIT09IGYuY2hhckNvZGVBdCh0IC0gMSkgJiYgKHAgKz0gUChmLCBxLCBnLCBmLmNoYXJDb2RlQXQoMikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIEkgPSByID0gdSA9IHEgPSAwO1xuICAgICAgICAgICAgZiA9ICcnO1xuICAgICAgICAgICAgZyA9IGUuY2hhckNvZGVBdCgrK2wpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICBjYXNlIDEzOlxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIDQ3ID09PSBiID8gYiA9IDAgOiAwID09PSAxICsgcSAmJiAxMDcgIT09IGggJiYgMCA8IGYubGVuZ3RoICYmIChyID0gMSwgZiArPSAnXFx4MDAnKTtcbiAgICAgICAgICAwIDwgQSAqIFkgJiYgSCgwLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCk7XG4gICAgICAgICAgeiA9IDE7XG4gICAgICAgICAgRCsrO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgNTk6XG4gICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGlmICgwID09PSBiICsgbiArIHYgKyBtKSB7XG4gICAgICAgICAgICB6Kys7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB6Kys7XG4gICAgICAgICAgeSA9IGUuY2hhckF0KGwpO1xuXG4gICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDMyOlxuICAgICAgICAgICAgICBpZiAoMCA9PT0gbiArIG0gKyBiKSBzd2l0Y2ggKHgpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAgIGNhc2UgNTg6XG4gICAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgICAgICB5ID0gJyc7XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAzMiAhPT0gZyAmJiAoeSA9ICcgJyk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcMCc7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFxmJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXHYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAzODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIChyID0gSSA9IDEsIHkgPSAnXFxmJyArIHkpO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMDg6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0gKyBFICYmIDAgPCB1KSBzd2l0Y2ggKGwgLSB1KSB7XG4gICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgMTEyID09PSB4ICYmIDU4ID09PSBlLmNoYXJDb2RlQXQobCAtIDMpICYmIChFID0geCk7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgICAxMTEgPT09IEsgJiYgKEUgPSBLKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmICh1ID0gbCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQ0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICYmIChyID0gMSwgeSArPSAnXFxyJyk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM0OlxuICAgICAgICAgICAgY2FzZSAzOTpcbiAgICAgICAgICAgICAgMCA9PT0gYiAmJiAobiA9IG4gPT09IGcgPyAwIDogMCA9PT0gbiA/IGcgOiBuKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtKys7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDkzOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIHYgJiYgbS0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyBtICYmIHYtLTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDA6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgYiArIG0pIHtcbiAgICAgICAgICAgICAgICBpZiAoMCA9PT0gcSkgc3dpdGNoICgyICogeCArIDMgKiBLKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDUzMzpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHEgPSAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB2Kys7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA2NDpcbiAgICAgICAgICAgICAgMCA9PT0gYiArIHYgKyBuICsgbSArIHUgKyBrICYmIChrID0gMSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgY2FzZSA0NzpcbiAgICAgICAgICAgICAgaWYgKCEoMCA8IG4gKyBtICsgdikpIHN3aXRjaCAoYikge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoMiAqIGcgKyAzICogZS5jaGFyQ29kZUF0KGwgKyAxKSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDIzNTpcbiAgICAgICAgICAgICAgICAgICAgICBiID0gNDc7XG4gICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICAgICAgICAgICAgdCA9IGwsIGIgPSA0MjtcbiAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQyOlxuICAgICAgICAgICAgICAgICAgNDcgPT09IGcgJiYgNDIgPT09IHggJiYgdCArIDIgIT09IGwgJiYgKDMzID09PSBlLmNoYXJDb2RlQXQodCArIDIpICYmIChwICs9IGUuc3Vic3RyaW5nKHQsIGwgKyAxKSksIHkgPSAnJywgYiA9IDApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgMCA9PT0gYiAmJiAoZiArPSB5KTtcbiAgICAgIH1cblxuICAgICAgSyA9IHg7XG4gICAgICB4ID0gZztcbiAgICAgIGwrKztcbiAgICB9XG5cbiAgICB0ID0gcC5sZW5ndGg7XG5cbiAgICBpZiAoMCA8IHQpIHtcbiAgICAgIHIgPSBjO1xuICAgICAgaWYgKDAgPCBBICYmIChDID0gSCgyLCBwLCByLCBkLCBELCB6LCB0LCBoLCBhLCBoKSwgdm9pZCAwICE9PSBDICYmIDAgPT09IChwID0gQykubGVuZ3RoKSkgcmV0dXJuIEcgKyBwICsgRjtcbiAgICAgIHAgPSByLmpvaW4oJywnKSArICd7JyArIHAgKyAnfSc7XG5cbiAgICAgIGlmICgwICE9PSB3ICogRSkge1xuICAgICAgICAyICE9PSB3IHx8IEwocCwgMikgfHwgKEUgPSAwKTtcblxuICAgICAgICBzd2l0Y2ggKEUpIHtcbiAgICAgICAgICBjYXNlIDExMTpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoaGEsICc6LW1vei0kMScpICsgcDtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTI6XG4gICAgICAgICAgICBwID0gcC5yZXBsYWNlKFEsICc6Oi13ZWJraXQtaW5wdXQtJDEnKSArIHAucmVwbGFjZShRLCAnOjotbW96LSQxJykgKyBwLnJlcGxhY2UoUSwgJzotbXMtaW5wdXQtJDEnKSArIHA7XG4gICAgICAgIH1cblxuICAgICAgICBFID0gMDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gRyArIHAgKyBGO1xuICB9XG5cbiAgZnVuY3Rpb24gWChkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLnRyaW0oKS5zcGxpdChpYSk7XG4gICAgYyA9IGg7XG4gICAgdmFyIGEgPSBoLmxlbmd0aCxcbiAgICAgICAgbSA9IGQubGVuZ3RoO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDA6XG4gICAgICBjYXNlIDE6XG4gICAgICAgIHZhciBiID0gMDtcblxuICAgICAgICBmb3IgKGQgPSAwID09PSBtID8gJycgOiBkWzBdICsgJyAnOyBiIDwgYTsgKytiKSB7XG4gICAgICAgICAgY1tiXSA9IFooZCwgY1tiXSwgZSkudHJpbSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHZhciB2ID0gYiA9IDA7XG5cbiAgICAgICAgZm9yIChjID0gW107IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBmb3IgKHZhciBuID0gMDsgbiA8IG07ICsrbikge1xuICAgICAgICAgICAgY1t2KytdID0gWihkW25dICsgJyAnLCBoW2JdLCBlKS50cmltKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICByZXR1cm4gYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFooZCwgYywgZSkge1xuICAgIHZhciBoID0gYy5jaGFyQ29kZUF0KDApO1xuICAgIDMzID4gaCAmJiAoaCA9IChjID0gYy50cmltKCkpLmNoYXJDb2RlQXQoMCkpO1xuXG4gICAgc3dpdGNoIChoKSB7XG4gICAgICBjYXNlIDM4OlxuICAgICAgICByZXR1cm4gYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGNhc2UgNTg6XG4gICAgICAgIHJldHVybiBkLnRyaW0oKSArIGMucmVwbGFjZShGLCAnJDEnICsgZC50cmltKCkpO1xuXG4gICAgICBkZWZhdWx0OlxuICAgICAgICBpZiAoMCA8IDEgKiBlICYmIDAgPCBjLmluZGV4T2YoJ1xcZicpKSByZXR1cm4gYy5yZXBsYWNlKEYsICg1OCA9PT0gZC5jaGFyQ29kZUF0KDApID8gJycgOiAnJDEnKSArIGQudHJpbSgpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZCArIGM7XG4gIH1cblxuICBmdW5jdGlvbiBQKGQsIGMsIGUsIGgpIHtcbiAgICB2YXIgYSA9IGQgKyAnOycsXG4gICAgICAgIG0gPSAyICogYyArIDMgKiBlICsgNCAqIGg7XG5cbiAgICBpZiAoOTQ0ID09PSBtKSB7XG4gICAgICBkID0gYS5pbmRleE9mKCc6JywgOSkgKyAxO1xuICAgICAgdmFyIGIgPSBhLnN1YnN0cmluZyhkLCBhLmxlbmd0aCAtIDEpLnRyaW0oKTtcbiAgICAgIGIgPSBhLnN1YnN0cmluZygwLCBkKS50cmltKCkgKyBiICsgJzsnO1xuICAgICAgcmV0dXJuIDEgPT09IHcgfHwgMiA9PT0gdyAmJiBMKGIsIDEpID8gJy13ZWJraXQtJyArIGIgKyBiIDogYjtcbiAgICB9XG5cbiAgICBpZiAoMCA9PT0gdyB8fCAyID09PSB3ICYmICFMKGEsIDEpKSByZXR1cm4gYTtcblxuICAgIHN3aXRjaCAobSkge1xuICAgICAgY2FzZSAxMDE1OlxuICAgICAgICByZXR1cm4gOTcgPT09IGEuY2hhckNvZGVBdCgxMCkgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk1MTpcbiAgICAgICAgcmV0dXJuIDExNiA9PT0gYS5jaGFyQ29kZUF0KDMpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSA5NjM6XG4gICAgICAgIHJldHVybiAxMTAgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgMTAwOTpcbiAgICAgICAgaWYgKDEwMCAhPT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5Njk6XG4gICAgICBjYXNlIDk0MjpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5Nzg6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgYTtcblxuICAgICAgY2FzZSAxMDE5OlxuICAgICAgY2FzZSA5ODM6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbW96LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgODgzOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg4KSkgcmV0dXJuICctd2Via2l0LScgKyBhICsgYTtcbiAgICAgICAgaWYgKDAgPCBhLmluZGV4T2YoJ2ltYWdlLXNldCgnLCAxMSkpIHJldHVybiBhLnJlcGxhY2UoamEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDkzMjpcbiAgICAgICAgaWYgKDQ1ID09PSBhLmNoYXJDb2RlQXQoNCkpIHN3aXRjaCAoYS5jaGFyQ29kZUF0KDUpKSB7XG4gICAgICAgICAgY2FzZSAxMDM6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtYm94LScgKyBhLnJlcGxhY2UoJy1ncm93JywgJycpICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhLnJlcGxhY2UoJ2dyb3cnLCAncG9zaXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnc2hyaW5rJywgJ25lZ2F0aXZlJykgKyBhO1xuXG4gICAgICAgICAgY2FzZSA5ODpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnYmFzaXMnLCAncHJlZmVycmVkLXNpemUnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgOTY0OlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMjM6XG4gICAgICAgIGlmICg5OSAhPT0gYS5jaGFyQ29kZUF0KDgpKSBicmVhaztcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKGEuaW5kZXhPZignOicsIDE1KSkucmVwbGFjZSgnZmxleC0nLCAnJykucmVwbGFjZSgnc3BhY2UtYmV0d2VlbicsICdqdXN0aWZ5Jyk7XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtcGFjaycgKyBiICsgJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtcGFjaycgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDA1OlxuICAgICAgICByZXR1cm4ga2EudGVzdChhKSA/IGEucmVwbGFjZShhYSwgJzotd2Via2l0LScpICsgYS5yZXBsYWNlKGFhLCAnOi1tb3otJykgKyBhIDogYTtcblxuICAgICAgY2FzZSAxZTM6XG4gICAgICAgIGIgPSBhLnN1YnN0cmluZygxMykudHJpbSgpO1xuICAgICAgICBjID0gYi5pbmRleE9mKCctJykgKyAxO1xuXG4gICAgICAgIHN3aXRjaCAoYi5jaGFyQ29kZUF0KDApICsgYi5jaGFyQ29kZUF0KGMpKSB7XG4gICAgICAgICAgY2FzZSAyMjY6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICd0YicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDIzMjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiLXJsJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjIwOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAnbHInKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYiArIGE7XG5cbiAgICAgIGNhc2UgMTAxNzpcbiAgICAgICAgaWYgKC0xID09PSBhLmluZGV4T2YoJ3N0aWNreScsIDkpKSBicmVhaztcblxuICAgICAgY2FzZSA5NzU6XG4gICAgICAgIGMgPSAoYSA9IGQpLmxlbmd0aCAtIDEwO1xuICAgICAgICBiID0gKDMzID09PSBhLmNoYXJDb2RlQXQoYykgPyBhLnN1YnN0cmluZygwLCBjKSA6IGEpLnN1YnN0cmluZyhkLmluZGV4T2YoJzonLCA3KSArIDEpLnRyaW0oKTtcblxuICAgICAgICBzd2l0Y2ggKG0gPSBiLmNoYXJDb2RlQXQoMCkgKyAoYi5jaGFyQ29kZUF0KDcpIHwgMCkpIHtcbiAgICAgICAgICBjYXNlIDIwMzpcbiAgICAgICAgICAgIGlmICgxMTEgPiBiLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyBiKSArICc7JyArIGE7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjA3OlxuICAgICAgICAgIGNhc2UgMTAyOlxuICAgICAgICAgICAgYSA9IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgKDEwMiA8IG0gPyAnaW5saW5lLScgOiAnJykgKyAnYm94JykgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYS5yZXBsYWNlKGIsICctbXMtJyArIGIgKyAnYm94JykgKyAnOycgKyBhO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGEgKyAnOyc7XG5cbiAgICAgIGNhc2UgOTM4OlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg1KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNikpIHtcbiAgICAgICAgICBjYXNlIDEwNTpcbiAgICAgICAgICAgIHJldHVybiBiID0gYS5yZXBsYWNlKCctaXRlbXMnLCAnJyksICctd2Via2l0LScgKyBhICsgJy13ZWJraXQtYm94LScgKyBiICsgJy1tcy1mbGV4LScgKyBiICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy1mbGV4LWl0ZW0tJyArIGEucmVwbGFjZShiYSwgJycpICsgYTtcblxuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtbGluZS1wYWNrJyArIGEucmVwbGFjZSgnYWxpZ24tY29udGVudCcsICcnKS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3MzpcbiAgICAgIGNhc2UgOTg5OlxuICAgICAgICBpZiAoNDUgIT09IGEuY2hhckNvZGVBdCgzKSB8fCAxMjIgPT09IGEuY2hhckNvZGVBdCg0KSkgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMxOlxuICAgICAgY2FzZSA5NTM6XG4gICAgICAgIGlmICghMCA9PT0gbGEudGVzdChkKSkgcmV0dXJuIDExNSA9PT0gKGIgPSBkLnN1YnN0cmluZyhkLmluZGV4T2YoJzonKSArIDEpKS5jaGFyQ29kZUF0KDApID8gUChkLnJlcGxhY2UoJ3N0cmV0Y2gnLCAnZmlsbC1hdmFpbGFibGUnKSwgYywgZSwgaCkucmVwbGFjZSgnOmZpbGwtYXZhaWxhYmxlJywgJzpzdHJldGNoJykgOiBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgYS5yZXBsYWNlKGIsICctbW96LScgKyBiLnJlcGxhY2UoJ2ZpbGwtJywgJycpKSArIGE7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2MjpcbiAgICAgICAgaWYgKGEgPSAnLXdlYmtpdC0nICsgYSArICgxMDIgPT09IGEuY2hhckNvZGVBdCg1KSA/ICctbXMtJyArIGEgOiAnJykgKyBhLCAyMTEgPT09IGUgKyBoICYmIDEwNSA9PT0gYS5jaGFyQ29kZUF0KDEzKSAmJiAwIDwgYS5pbmRleE9mKCd0cmFuc2Zvcm0nLCAxMCkpIHJldHVybiBhLnN1YnN0cmluZygwLCBhLmluZGV4T2YoJzsnLCAyNykgKyAxKS5yZXBsYWNlKG1hLCAnJDEtd2Via2l0LSQyJykgKyBhO1xuICAgIH1cblxuICAgIHJldHVybiBhO1xuICB9XG5cbiAgZnVuY3Rpb24gTChkLCBjKSB7XG4gICAgdmFyIGUgPSBkLmluZGV4T2YoMSA9PT0gYyA/ICc6JyA6ICd7JyksXG4gICAgICAgIGggPSBkLnN1YnN0cmluZygwLCAzICE9PSBjID8gZSA6IDEwKTtcbiAgICBlID0gZC5zdWJzdHJpbmcoZSArIDEsIGQubGVuZ3RoIC0gMSk7XG4gICAgcmV0dXJuIFIoMiAhPT0gYyA/IGggOiBoLnJlcGxhY2UobmEsICckMScpLCBlLCBjKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVhKGQsIGMpIHtcbiAgICB2YXIgZSA9IFAoYywgYy5jaGFyQ29kZUF0KDApLCBjLmNoYXJDb2RlQXQoMSksIGMuY2hhckNvZGVBdCgyKSk7XG4gICAgcmV0dXJuIGUgIT09IGMgKyAnOycgPyBlLnJlcGxhY2Uob2EsICcgb3IgKCQxKScpLnN1YnN0cmluZyg0KSA6ICcoJyArIGMgKyAnKSc7XG4gIH1cblxuICBmdW5jdGlvbiBIKGQsIGMsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpIHtcbiAgICBmb3IgKHZhciBnID0gMCwgeCA9IGMsIHc7IGcgPCBBOyArK2cpIHtcbiAgICAgIHN3aXRjaCAodyA9IFNbZ10uY2FsbChCLCBkLCB4LCBlLCBoLCBhLCBtLCBiLCB2LCBuLCBxKSkge1xuICAgICAgICBjYXNlIHZvaWQgMDpcbiAgICAgICAgY2FzZSAhMTpcbiAgICAgICAgY2FzZSAhMDpcbiAgICAgICAgY2FzZSBudWxsOlxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgeCA9IHc7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHggIT09IGMpIHJldHVybiB4O1xuICB9XG5cbiAgZnVuY3Rpb24gVChkKSB7XG4gICAgc3dpdGNoIChkKSB7XG4gICAgICBjYXNlIHZvaWQgMDpcbiAgICAgIGNhc2UgbnVsbDpcbiAgICAgICAgQSA9IFMubGVuZ3RoID0gMDtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgnZnVuY3Rpb24nID09PSB0eXBlb2YgZCkgU1tBKytdID0gZDtlbHNlIGlmICgnb2JqZWN0JyA9PT0gdHlwZW9mIGQpIGZvciAodmFyIGMgPSAwLCBlID0gZC5sZW5ndGg7IGMgPCBlOyArK2MpIHtcbiAgICAgICAgICBUKGRbY10pO1xuICAgICAgICB9IGVsc2UgWSA9ICEhZCB8IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIFQ7XG4gIH1cblxuICBmdW5jdGlvbiBVKGQpIHtcbiAgICBkID0gZC5wcmVmaXg7XG4gICAgdm9pZCAwICE9PSBkICYmIChSID0gbnVsbCwgZCA/ICdmdW5jdGlvbicgIT09IHR5cGVvZiBkID8gdyA9IDEgOiAodyA9IDIsIFIgPSBkKSA6IHcgPSAwKTtcbiAgICByZXR1cm4gVTtcbiAgfVxuXG4gIGZ1bmN0aW9uIEIoZCwgYykge1xuICAgIHZhciBlID0gZDtcbiAgICAzMyA+IGUuY2hhckNvZGVBdCgwKSAmJiAoZSA9IGUudHJpbSgpKTtcbiAgICBWID0gZTtcbiAgICBlID0gW1ZdO1xuXG4gICAgaWYgKDAgPCBBKSB7XG4gICAgICB2YXIgaCA9IEgoLTEsIGMsIGUsIGUsIEQsIHosIDAsIDAsIDAsIDApO1xuICAgICAgdm9pZCAwICE9PSBoICYmICdzdHJpbmcnID09PSB0eXBlb2YgaCAmJiAoYyA9IGgpO1xuICAgIH1cblxuICAgIHZhciBhID0gTShPLCBlLCBjLCAwLCAwKTtcbiAgICAwIDwgQSAmJiAoaCA9IEgoLTIsIGEsIGUsIGUsIEQsIHosIGEubGVuZ3RoLCAwLCAwLCAwKSwgdm9pZCAwICE9PSBoICYmIChhID0gaCkpO1xuICAgIFYgPSAnJztcbiAgICBFID0gMDtcbiAgICB6ID0gRCA9IDE7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICB2YXIgY2EgPSAvXlxcMCsvZyxcbiAgICAgIE4gPSAvW1xcMFxcclxcZl0vZyxcbiAgICAgIGFhID0gLzogKi9nLFxuICAgICAga2EgPSAvem9vfGdyYS8sXG4gICAgICBtYSA9IC8oWyw6IF0pKHRyYW5zZm9ybSkvZyxcbiAgICAgIGlhID0gLyxcXHIrPy9nLFxuICAgICAgRiA9IC8oW1xcdFxcclxcbiBdKSpcXGY/Ji9nLFxuICAgICAgZmEgPSAvQChrXFx3KylcXHMqKFxcUyopXFxzKi8sXG4gICAgICBRID0gLzo6KHBsYWNlKS9nLFxuICAgICAgaGEgPSAvOihyZWFkLW9ubHkpL2csXG4gICAgICBHID0gL1tzdmhdXFx3Ky1bdGJscl17Mn0vLFxuICAgICAgZGEgPSAvXFwoXFxzKiguKilcXHMqXFwpL2csXG4gICAgICBvYSA9IC8oW1xcc1xcU10qPyk7L2csXG4gICAgICBiYSA9IC8tc2VsZnxmbGV4LS9nLFxuICAgICAgbmEgPSAvW15dKj8oOltycF1bZWxdYVtcXHctXSspW15dKi8sXG4gICAgICBsYSA9IC9zdHJldGNofDpcXHMqXFx3K1xcLSg/OmNvbnRlfGF2YWlsKS8sXG4gICAgICBqYSA9IC8oW14tXSkoaW1hZ2Utc2V0XFwoKS8sXG4gICAgICB6ID0gMSxcbiAgICAgIEQgPSAxLFxuICAgICAgRSA9IDAsXG4gICAgICB3ID0gMSxcbiAgICAgIE8gPSBbXSxcbiAgICAgIFMgPSBbXSxcbiAgICAgIEEgPSAwLFxuICAgICAgUiA9IG51bGwsXG4gICAgICBZID0gMCxcbiAgICAgIFYgPSAnJztcbiAgQi51c2UgPSBUO1xuICBCLnNldCA9IFU7XG4gIHZvaWQgMCAhPT0gVyAmJiBVKFcpO1xuICByZXR1cm4gQjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R5bGlzX21pbjtcbiIsInZhciB1bml0bGVzc0tleXMgPSB7XG4gIGFuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiAxLFxuICBib3JkZXJJbWFnZU91dHNldDogMSxcbiAgYm9yZGVySW1hZ2VTbGljZTogMSxcbiAgYm9yZGVySW1hZ2VXaWR0aDogMSxcbiAgYm94RmxleDogMSxcbiAgYm94RmxleEdyb3VwOiAxLFxuICBib3hPcmRpbmFsR3JvdXA6IDEsXG4gIGNvbHVtbkNvdW50OiAxLFxuICBjb2x1bW5zOiAxLFxuICBmbGV4OiAxLFxuICBmbGV4R3JvdzogMSxcbiAgZmxleFBvc2l0aXZlOiAxLFxuICBmbGV4U2hyaW5rOiAxLFxuICBmbGV4TmVnYXRpdmU6IDEsXG4gIGZsZXhPcmRlcjogMSxcbiAgZ3JpZFJvdzogMSxcbiAgZ3JpZFJvd0VuZDogMSxcbiAgZ3JpZFJvd1NwYW46IDEsXG4gIGdyaWRSb3dTdGFydDogMSxcbiAgZ3JpZENvbHVtbjogMSxcbiAgZ3JpZENvbHVtbkVuZDogMSxcbiAgZ3JpZENvbHVtblNwYW46IDEsXG4gIGdyaWRDb2x1bW5TdGFydDogMSxcbiAgbXNHcmlkUm93OiAxLFxuICBtc0dyaWRSb3dTcGFuOiAxLFxuICBtc0dyaWRDb2x1bW46IDEsXG4gIG1zR3JpZENvbHVtblNwYW46IDEsXG4gIGZvbnRXZWlnaHQ6IDEsXG4gIGxpbmVIZWlnaHQ6IDEsXG4gIG9wYWNpdHk6IDEsXG4gIG9yZGVyOiAxLFxuICBvcnBoYW5zOiAxLFxuICB0YWJTaXplOiAxLFxuICB3aWRvd3M6IDEsXG4gIHpJbmRleDogMSxcbiAgem9vbTogMSxcbiAgV2Via2l0TGluZUNsYW1wOiAxLFxuICAvLyBTVkctcmVsYXRlZCBwcm9wZXJ0aWVzXG4gIGZpbGxPcGFjaXR5OiAxLFxuICBmbG9vZE9wYWNpdHk6IDEsXG4gIHN0b3BPcGFjaXR5OiAxLFxuICBzdHJva2VEYXNoYXJyYXk6IDEsXG4gIHN0cm9rZURhc2hvZmZzZXQ6IDEsXG4gIHN0cm9rZU1pdGVybGltaXQ6IDEsXG4gIHN0cm9rZU9wYWNpdHk6IDEsXG4gIHN0cm9rZVdpZHRoOiAxXG59O1xuXG5leHBvcnQgZGVmYXVsdCB1bml0bGVzc0tleXM7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vZGlzdC9pbmRleCcpOyIsIid1c2Ugc3RyaWN0JztcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxudmFyIF9yZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbnZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG52YXIgX2ltcGxlbWVudGF0aW9uID0gcmVxdWlyZSgnLi9pbXBsZW1lbnRhdGlvbicpO1xuXG52YXIgX2ltcGxlbWVudGF0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2ltcGxlbWVudGF0aW9uKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUNvbnRleHQgfHwgX2ltcGxlbWVudGF0aW9uMi5kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG5mdW5jdGlvbiBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gIC8vIENhbGwgdGhpcy5jb25zdHJ1Y3Rvci5nRFNGUCB0byBzdXBwb3J0IHN1Yi1jbGFzc2VzLlxuICB2YXIgc3RhdGUgPSB0aGlzLmNvbnN0cnVjdG9yLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyh0aGlzLnByb3BzLCB0aGlzLnN0YXRlKTtcbiAgaWYgKHN0YXRlICE9PSBudWxsICYmIHN0YXRlICE9PSB1bmRlZmluZWQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHN0YXRlKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAvLyBDYWxsIHRoaXMuY29uc3RydWN0b3IuZ0RTRlAgdG8gc3VwcG9ydCBzdWItY2xhc3Nlcy5cbiAgLy8gVXNlIHRoZSBzZXRTdGF0ZSgpIHVwZGF0ZXIgdG8gZW5zdXJlIHN0YXRlIGlzbid0IHN0YWxlIGluIGNlcnRhaW4gZWRnZSBjYXNlcy5cbiAgZnVuY3Rpb24gdXBkYXRlcihwcmV2U3RhdGUpIHtcbiAgICB2YXIgc3RhdGUgPSB0aGlzLmNvbnN0cnVjdG9yLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhuZXh0UHJvcHMsIHByZXZTdGF0ZSk7XG4gICAgcmV0dXJuIHN0YXRlICE9PSBudWxsICYmIHN0YXRlICE9PSB1bmRlZmluZWQgPyBzdGF0ZSA6IG51bGw7XG4gIH1cbiAgLy8gQmluZGluZyBcInRoaXNcIiBpcyBpbXBvcnRhbnQgZm9yIHNoYWxsb3cgcmVuZGVyZXIgc3VwcG9ydC5cbiAgdGhpcy5zZXRTdGF0ZSh1cGRhdGVyLmJpbmQodGhpcykpO1xufVxuXG5mdW5jdGlvbiBjb21wb25lbnRXaWxsVXBkYXRlKG5leHRQcm9wcywgbmV4dFN0YXRlKSB7XG4gIHRyeSB7XG4gICAgdmFyIHByZXZQcm9wcyA9IHRoaXMucHJvcHM7XG4gICAgdmFyIHByZXZTdGF0ZSA9IHRoaXMuc3RhdGU7XG4gICAgdGhpcy5wcm9wcyA9IG5leHRQcm9wcztcbiAgICB0aGlzLnN0YXRlID0gbmV4dFN0YXRlO1xuICAgIHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3RGbGFnID0gdHJ1ZTtcbiAgICB0aGlzLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90ID0gdGhpcy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShcbiAgICAgIHByZXZQcm9wcyxcbiAgICAgIHByZXZTdGF0ZVxuICAgICk7XG4gIH0gZmluYWxseSB7XG4gICAgdGhpcy5wcm9wcyA9IHByZXZQcm9wcztcbiAgICB0aGlzLnN0YXRlID0gcHJldlN0YXRlO1xuICB9XG59XG5cbi8vIFJlYWN0IG1heSB3YXJuIGFib3V0IGNXTS9jV1JQL2NXVSBtZXRob2RzIGJlaW5nIGRlcHJlY2F0ZWQuXG4vLyBBZGQgYSBmbGFnIHRvIHN1cHByZXNzIHRoZXNlIHdhcm5pbmdzIGZvciB0aGlzIHNwZWNpYWwgY2FzZS5cbmNvbXBvbmVudFdpbGxNb3VudC5fX3N1cHByZXNzRGVwcmVjYXRpb25XYXJuaW5nID0gdHJ1ZTtcbmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMuX19zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZyA9IHRydWU7XG5jb21wb25lbnRXaWxsVXBkYXRlLl9fc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmcgPSB0cnVlO1xuXG5mdW5jdGlvbiBwb2x5ZmlsbChDb21wb25lbnQpIHtcbiAgdmFyIHByb3RvdHlwZSA9IENvbXBvbmVudC5wcm90b3R5cGU7XG5cbiAgaWYgKCFwcm90b3R5cGUgfHwgIXByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdDYW4gb25seSBwb2x5ZmlsbCBjbGFzcyBjb21wb25lbnRzJyk7XG4gIH1cblxuICBpZiAoXG4gICAgdHlwZW9mIENvbXBvbmVudC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgIT09ICdmdW5jdGlvbicgJiZcbiAgICB0eXBlb2YgcHJvdG90eXBlLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlICE9PSAnZnVuY3Rpb24nXG4gICkge1xuICAgIHJldHVybiBDb21wb25lbnQ7XG4gIH1cblxuICAvLyBJZiBuZXcgY29tcG9uZW50IEFQSXMgYXJlIGRlZmluZWQsIFwidW5zYWZlXCIgbGlmZWN5Y2xlcyB3b24ndCBiZSBjYWxsZWQuXG4gIC8vIEVycm9yIGlmIGFueSBvZiB0aGVzZSBsaWZlY3ljbGVzIGFyZSBwcmVzZW50LFxuICAvLyBCZWNhdXNlIHRoZXkgd291bGQgd29yayBkaWZmZXJlbnRseSBiZXR3ZWVuIG9sZGVyIGFuZCBuZXdlciAoMTYuMyspIHZlcnNpb25zIG9mIFJlYWN0LlxuICB2YXIgZm91bmRXaWxsTW91bnROYW1lID0gbnVsbDtcbiAgdmFyIGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWUgPSBudWxsO1xuICB2YXIgZm91bmRXaWxsVXBkYXRlTmFtZSA9IG51bGw7XG4gIGlmICh0eXBlb2YgcHJvdG90eXBlLmNvbXBvbmVudFdpbGxNb3VudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbE1vdW50TmFtZSA9ICdjb21wb25lbnRXaWxsTW91bnQnO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBwcm90b3R5cGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbE1vdW50TmFtZSA9ICdVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JztcbiAgfVxuICBpZiAodHlwZW9mIHByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSA9ICdjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJztcbiAgfSBlbHNlIGlmICh0eXBlb2YgcHJvdG90eXBlLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSA9ICdVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyc7XG4gIH1cbiAgaWYgKHR5cGVvZiBwcm90b3R5cGUuY29tcG9uZW50V2lsbFVwZGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbFVwZGF0ZU5hbWUgPSAnY29tcG9uZW50V2lsbFVwZGF0ZSc7XG4gIH0gZWxzZSBpZiAodHlwZW9mIHByb3RvdHlwZS5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGZvdW5kV2lsbFVwZGF0ZU5hbWUgPSAnVU5TQUZFX2NvbXBvbmVudFdpbGxVcGRhdGUnO1xuICB9XG4gIGlmIChcbiAgICBmb3VuZFdpbGxNb3VudE5hbWUgIT09IG51bGwgfHxcbiAgICBmb3VuZFdpbGxSZWNlaXZlUHJvcHNOYW1lICE9PSBudWxsIHx8XG4gICAgZm91bmRXaWxsVXBkYXRlTmFtZSAhPT0gbnVsbFxuICApIHtcbiAgICB2YXIgY29tcG9uZW50TmFtZSA9IENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZTtcbiAgICB2YXIgbmV3QXBpTmFtZSA9XG4gICAgICB0eXBlb2YgQ29tcG9uZW50LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/ICdnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMoKSdcbiAgICAgICAgOiAnZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoKSc7XG5cbiAgICB0aHJvdyBFcnJvcihcbiAgICAgICdVbnNhZmUgbGVnYWN5IGxpZmVjeWNsZXMgd2lsbCBub3QgYmUgY2FsbGVkIGZvciBjb21wb25lbnRzIHVzaW5nIG5ldyBjb21wb25lbnQgQVBJcy5cXG5cXG4nICtcbiAgICAgICAgY29tcG9uZW50TmFtZSArXG4gICAgICAgICcgdXNlcyAnICtcbiAgICAgICAgbmV3QXBpTmFtZSArXG4gICAgICAgICcgYnV0IGFsc28gY29udGFpbnMgdGhlIGZvbGxvd2luZyBsZWdhY3kgbGlmZWN5Y2xlczonICtcbiAgICAgICAgKGZvdW5kV2lsbE1vdW50TmFtZSAhPT0gbnVsbCA/ICdcXG4gICcgKyBmb3VuZFdpbGxNb3VudE5hbWUgOiAnJykgK1xuICAgICAgICAoZm91bmRXaWxsUmVjZWl2ZVByb3BzTmFtZSAhPT0gbnVsbFxuICAgICAgICAgID8gJ1xcbiAgJyArIGZvdW5kV2lsbFJlY2VpdmVQcm9wc05hbWVcbiAgICAgICAgICA6ICcnKSArXG4gICAgICAgIChmb3VuZFdpbGxVcGRhdGVOYW1lICE9PSBudWxsID8gJ1xcbiAgJyArIGZvdW5kV2lsbFVwZGF0ZU5hbWUgOiAnJykgK1xuICAgICAgICAnXFxuXFxuVGhlIGFib3ZlIGxpZmVjeWNsZXMgc2hvdWxkIGJlIHJlbW92ZWQuIExlYXJuIG1vcmUgYWJvdXQgdGhpcyB3YXJuaW5nIGhlcmU6XFxuJyArXG4gICAgICAgICdodHRwczovL2ZiLm1lL3JlYWN0LWFzeW5jLWNvbXBvbmVudC1saWZlY3ljbGUtaG9va3MnXG4gICAgKTtcbiAgfVxuXG4gIC8vIFJlYWN0IDw9IDE2LjIgZG9lcyBub3Qgc3VwcG9ydCBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLlxuICAvLyBBcyBhIHdvcmthcm91bmQsIHVzZSBjV00gYW5kIGNXUlAgdG8gaW52b2tlIHRoZSBuZXcgc3RhdGljIGxpZmVjeWNsZS5cbiAgLy8gTmV3ZXIgdmVyc2lvbnMgb2YgUmVhY3Qgd2lsbCBpZ25vcmUgdGhlc2UgbGlmZWN5Y2xlcyBpZiBnRFNGUCBleGlzdHMuXG4gIGlmICh0eXBlb2YgQ29tcG9uZW50LmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHByb3RvdHlwZS5jb21wb25lbnRXaWxsTW91bnQgPSBjb21wb25lbnRXaWxsTW91bnQ7XG4gICAgcHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzO1xuICB9XG5cbiAgLy8gUmVhY3QgPD0gMTYuMiBkb2VzIG5vdCBzdXBwb3J0IGdldFNuYXBzaG90QmVmb3JlVXBkYXRlLlxuICAvLyBBcyBhIHdvcmthcm91bmQsIHVzZSBjV1UgdG8gaW52b2tlIHRoZSBuZXcgbGlmZWN5Y2xlLlxuICAvLyBOZXdlciB2ZXJzaW9ucyBvZiBSZWFjdCB3aWxsIGlnbm9yZSB0aGF0IGxpZmVjeWNsZSBpZiBnU0JVIGV4aXN0cy5cbiAgaWYgKHR5cGVvZiBwcm90b3R5cGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICBpZiAodHlwZW9mIHByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ0Nhbm5vdCBwb2x5ZmlsbCBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSgpIGZvciBjb21wb25lbnRzIHRoYXQgZG8gbm90IGRlZmluZSBjb21wb25lbnREaWRVcGRhdGUoKSBvbiB0aGUgcHJvdG90eXBlJ1xuICAgICAgKTtcbiAgICB9XG5cbiAgICBwcm90b3R5cGUuY29tcG9uZW50V2lsbFVwZGF0ZSA9IGNvbXBvbmVudFdpbGxVcGRhdGU7XG5cbiAgICB2YXIgY29tcG9uZW50RGlkVXBkYXRlID0gcHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZTtcblxuICAgIHByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGVQb2x5ZmlsbChcbiAgICAgIHByZXZQcm9wcyxcbiAgICAgIHByZXZTdGF0ZSxcbiAgICAgIG1heWJlU25hcHNob3RcbiAgICApIHtcbiAgICAgIC8vIDE2LjMrIHdpbGwgbm90IGV4ZWN1dGUgb3VyIHdpbGwtdXBkYXRlIG1ldGhvZDtcbiAgICAgIC8vIEl0IHdpbGwgcGFzcyBhIHNuYXBzaG90IHZhbHVlIHRvIGRpZC11cGRhdGUgdGhvdWdoLlxuICAgICAgLy8gT2xkZXIgdmVyc2lvbnMgd2lsbCByZXF1aXJlIG91ciBwb2x5ZmlsbGVkIHdpbGwtdXBkYXRlIHZhbHVlLlxuICAgICAgLy8gV2UgbmVlZCB0byBoYW5kbGUgYm90aCBjYXNlcywgYnV0IGNhbid0IGp1c3QgY2hlY2sgZm9yIHRoZSBwcmVzZW5jZSBvZiBcIm1heWJlU25hcHNob3RcIixcbiAgICAgIC8vIEJlY2F1c2UgZm9yIDw9IDE1LnggdmVyc2lvbnMgdGhpcyBtaWdodCBiZSBhIFwicHJldkNvbnRleHRcIiBvYmplY3QuXG4gICAgICAvLyBXZSBhbHNvIGNhbid0IGp1c3QgY2hlY2sgXCJfX3JlYWN0SW50ZXJuYWxTbmFwc2hvdFwiLFxuICAgICAgLy8gQmVjYXVzZSBnZXQtc25hcHNob3QgbWlnaHQgcmV0dXJuIGEgZmFsc3kgdmFsdWUuXG4gICAgICAvLyBTbyBjaGVjayBmb3IgdGhlIGV4cGxpY2l0IF9fcmVhY3RJbnRlcm5hbFNuYXBzaG90RmxhZyBmbGFnIHRvIGRldGVybWluZSBiZWhhdmlvci5cbiAgICAgIHZhciBzbmFwc2hvdCA9IHRoaXMuX19yZWFjdEludGVybmFsU25hcHNob3RGbGFnXG4gICAgICAgID8gdGhpcy5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdFxuICAgICAgICA6IG1heWJlU25hcHNob3Q7XG5cbiAgICAgIGNvbXBvbmVudERpZFVwZGF0ZS5jYWxsKHRoaXMsIHByZXZQcm9wcywgcHJldlN0YXRlLCBzbmFwc2hvdCk7XG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBDb21wb25lbnQ7XG59XG5cbmV4cG9ydCB7IHBvbHlmaWxsIH07XG4iLCJpbXBvcnQgeyB1c2VSZWYsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogVHJhY2sgd2hldGhlciBhIGNvbXBvbmVudCBpcyBjdXJyZW50IG1vdW50ZWQuIEdlbmVyYWxseSBsZXNzIHByZWZlcmFibGUgdGhhblxuICogcHJvcGVybGx5IGNhbmNlbGluZyBlZmZlY3RzIHNvIHRoZXkgZG9uJ3QgcnVuIGFmdGVyIGEgY29tcG9uZW50IGlzIHVubW91bnRlZCxcbiAqIGJ1dCBoZWxwZnVsIGluIGNhc2VzIHdoZXJlIHRoYXQgaXNuJ3QgZmVhc2libGUsIHN1Y2ggYXMgYSBgUHJvbWlzZWAgcmVzb2x1dGlvbi5cbiAqXG4gKiBAcmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgY3VycmVudCBpc01vdW50ZWQgc3RhdGUgb2YgdGhlIGNvbXBvbmVudFxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZShudWxsKVxuICogY29uc3QgaXNNb3VudGVkID0gdXNlTW91bnRlZCgpXG4gKlxuICogdXNlRWZmZWN0KCgpID0+IHtcbiAqICAgZmV0Y2hkYXRhKCkudGhlbigobmV3RGF0YSkgPT4ge1xuICogICAgICBpZiAoaXNNb3VudGVkKCkpIHtcbiAqICAgICAgICBzZXREYXRhKG5ld0RhdGEpO1xuICogICAgICB9XG4gKiAgIH0pXG4gKiB9KVxuICogYGBgXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlTW91bnRlZCgpIHtcbiAgdmFyIG1vdW50ZWQgPSB1c2VSZWYodHJ1ZSk7XG4gIHZhciBpc01vdW50ZWQgPSB1c2VSZWYoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBtb3VudGVkLmN1cnJlbnQ7XG4gIH0pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBtb3VudGVkLmN1cnJlbnQgPSBmYWxzZTtcbiAgICB9O1xuICB9LCBbXSk7XG4gIHJldHVybiBpc01vdW50ZWQuY3VycmVudDtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvd25lckRvY3VtZW50KG5vZGUpIHtcbiAgcmV0dXJuIG5vZGUgJiYgbm9kZS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50O1xufSIsImV4cG9ydCBkZWZhdWx0ICEhKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5kb2N1bWVudCAmJiB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7IiwiaW1wb3J0IG93bmVyV2luZG93IGZyb20gJy4vb3duZXJXaW5kb3cnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZShub2RlLCBwc3VlZG9FbGVtZW50KSB7XG4gIHJldHVybiBvd25lcldpbmRvdyhub2RlKS5nZXRDb21wdXRlZFN0eWxlKG5vZGUsIHBzdWVkb0VsZW1lbnQpO1xufSIsImltcG9ydCBvd25lckRvY3VtZW50IGZyb20gJy4vb3duZXJEb2N1bWVudCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvd25lcldpbmRvdyhub2RlKSB7XG4gIHZhciBkb2MgPSBvd25lckRvY3VtZW50KG5vZGUpO1xuICByZXR1cm4gZG9jICYmIGRvYy5kZWZhdWx0VmlldyB8fCB3aW5kb3c7XG59IiwidmFyIHJVcHBlciA9IC8oW0EtWl0pL2c7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoeXBoZW5hdGUoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcucmVwbGFjZShyVXBwZXIsICctJDEnKS50b0xvd2VyQ2FzZSgpO1xufSIsIi8qKlxuICogQ29weXJpZ2h0IDIwMTMtMjAxNCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVhY3QvYmxvYi8yYWViOGEyYTZiZWIwMDYxN2E0MjE3ZjdmODI4NDkyNGZhMmFkODE5L3NyYy92ZW5kb3IvY29yZS9oeXBoZW5hdGVTdHlsZU5hbWUuanNcbiAqL1xuaW1wb3J0IGh5cGhlbmF0ZSBmcm9tICcuL2h5cGhlbmF0ZSc7XG52YXIgbXNQYXR0ZXJuID0gL15tcy0vO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaHlwaGVuYXRlU3R5bGVOYW1lKHN0cmluZykge1xuICByZXR1cm4gaHlwaGVuYXRlKHN0cmluZykucmVwbGFjZShtc1BhdHRlcm4sICctbXMtJyk7XG59IiwidmFyIHN1cHBvcnRlZFRyYW5zZm9ybXMgPSAvXigodHJhbnNsYXRlfHJvdGF0ZXxzY2FsZSkoWHxZfFp8M2QpP3xtYXRyaXgoM2QpP3xwZXJzcGVjdGl2ZXxza2V3KFh8WSk/KSQvaTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzVHJhbnNmb3JtKHZhbHVlKSB7XG4gIHJldHVybiAhISh2YWx1ZSAmJiBzdXBwb3J0ZWRUcmFuc2Zvcm1zLnRlc3QodmFsdWUpKTtcbn0iLCJpbXBvcnQgZ2V0Q29tcHV0ZWRTdHlsZSBmcm9tICcuL2dldENvbXB1dGVkU3R5bGUnO1xuaW1wb3J0IGh5cGhlbmF0ZSBmcm9tICcuL2h5cGhlbmF0ZVN0eWxlJztcbmltcG9ydCBpc1RyYW5zZm9ybSBmcm9tICcuL2lzVHJhbnNmb3JtJztcblxuZnVuY3Rpb24gc3R5bGUobm9kZSwgcHJvcGVydHkpIHtcbiAgdmFyIGNzcyA9ICcnO1xuICB2YXIgdHJhbnNmb3JtcyA9ICcnO1xuXG4gIGlmICh0eXBlb2YgcHJvcGVydHkgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIG5vZGUuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShoeXBoZW5hdGUocHJvcGVydHkpKSB8fCBnZXRDb21wdXRlZFN0eWxlKG5vZGUpLmdldFByb3BlcnR5VmFsdWUoaHlwaGVuYXRlKHByb3BlcnR5KSk7XG4gIH1cblxuICBPYmplY3Qua2V5cyhwcm9wZXJ0eSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHZhbHVlID0gcHJvcGVydHlba2V5XTtcblxuICAgIGlmICghdmFsdWUgJiYgdmFsdWUgIT09IDApIHtcbiAgICAgIG5vZGUuc3R5bGUucmVtb3ZlUHJvcGVydHkoaHlwaGVuYXRlKGtleSkpO1xuICAgIH0gZWxzZSBpZiAoaXNUcmFuc2Zvcm0oa2V5KSkge1xuICAgICAgdHJhbnNmb3JtcyArPSBrZXkgKyBcIihcIiArIHZhbHVlICsgXCIpIFwiO1xuICAgIH0gZWxzZSB7XG4gICAgICBjc3MgKz0gaHlwaGVuYXRlKGtleSkgKyBcIjogXCIgKyB2YWx1ZSArIFwiO1wiO1xuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHRyYW5zZm9ybXMpIHtcbiAgICBjc3MgKz0gXCJ0cmFuc2Zvcm06IFwiICsgdHJhbnNmb3JtcyArIFwiO1wiO1xuICB9XG5cbiAgbm9kZS5zdHlsZS5jc3NUZXh0ICs9IFwiO1wiICsgY3NzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHlsZTsiLCJpbXBvcnQgdXNlVXBkYXRlZFJlZiBmcm9tICcuL3VzZVVwZGF0ZWRSZWYnO1xuaW1wb3J0IHsgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0aGF0IGZpcmVzIHdoZW4gYSBjb21wb25lbnQgdW5tb3VudHNcbiAqXG4gKiBAcGFyYW0gZm4gSGFuZGxlciB0byBydW4gd2hlbiB0aGUgY29tcG9uZW50IHVubW91bnRzXG4gKiBAY2F0ZWdvcnkgZWZmZWN0c1xuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVzZVdpbGxVbm1vdW50KGZuKSB7XG4gIHZhciBvblVubW91bnQgPSB1c2VVcGRhdGVkUmVmKGZuKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIG9uVW5tb3VudC5jdXJyZW50KCk7XG4gICAgfTtcbiAgfSwgW10pO1xufSIsImltcG9ydCB7IHVzZVJlZiB9IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogUmV0dXJucyBhIHJlZiB0aGF0IGlzIGltbWVkaWF0ZWx5IHVwZGF0ZWQgd2l0aCB0aGUgbmV3IHZhbHVlXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBSZWYgdmFsdWVcbiAqIEBjYXRlZ29yeSByZWZzXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVXBkYXRlZFJlZih2YWx1ZSkge1xuICB2YXIgdmFsdWVSZWYgPSB1c2VSZWYodmFsdWUpO1xuICB2YWx1ZVJlZi5jdXJyZW50ID0gdmFsdWU7XG4gIHJldHVybiB2YWx1ZVJlZjtcbn0iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0Jztcbi8qKlxuICogQ3JlYXRlcyBhIGBSZWZgIHdob3NlIHZhbHVlIGlzIHVwZGF0ZWQgaW4gYW4gZWZmZWN0LCBlbnN1cmluZyB0aGUgbW9zdCByZWNlbnRcbiAqIHZhbHVlIGlzIHRoZSBvbmUgcmVuZGVyZWQgd2l0aC4gR2VuZXJhbGx5IG9ubHkgcmVxdWlyZWQgZm9yIENvbmN1cnJlbnQgbW9kZSB1c2FnZVxuICogd2hlcmUgcHJldmlvdXMgd29yayBpbiBgcmVuZGVyKClgIG1heSBiZSBkaXNjYXJkZWQgYmVmb3IgYmVpbmcgdXNlZC5cbiAqXG4gKiBUaGlzIGlzIHNhZmUgdG8gYWNjZXNzIGluIGFuIGV2ZW50IGhhbmRsZXIuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBgUmVmYCB2YWx1ZVxuICovXG5cbmZ1bmN0aW9uIHVzZUNvbW1pdHRlZFJlZih2YWx1ZSkge1xuICB2YXIgcmVmID0gdXNlUmVmKHZhbHVlKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICByZWYuY3VycmVudCA9IHZhbHVlO1xuICB9LCBbdmFsdWVdKTtcbiAgcmV0dXJuIHJlZjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdXNlQ29tbWl0dGVkUmVmOyIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUNvbW1pdHRlZFJlZiBmcm9tICcuL3VzZUNvbW1pdHRlZFJlZic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VFdmVudENhbGxiYWNrKGZuKSB7XG4gIHZhciByZWYgPSB1c2VDb21taXR0ZWRSZWYoZm4pO1xuICByZXR1cm4gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiByZWYuY3VycmVudCAmJiByZWYuY3VycmVudC5hcHBseShyZWYsIGFyZ3VtZW50cyk7XG4gIH0sIFtyZWZdKTtcbn0iLCJcInVzZSBzdHJpY3RcIjtcblxucmVxdWlyZShcImNvcmUtanMvc2hpbVwiKTtcblxucmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vcmVnZXhwL2VzY2FwZVwiKTtcblxuaWYgKGdsb2JhbC5fYmFiZWxQb2x5ZmlsbCkge1xuICB0aHJvdyBuZXcgRXJyb3IoXCJvbmx5IG9uZSBpbnN0YW5jZSBvZiBiYWJlbC1wb2x5ZmlsbCBpcyBhbGxvd2VkXCIpO1xufVxuZ2xvYmFsLl9iYWJlbFBvbHlmaWxsID0gdHJ1ZTtcblxudmFyIERFRklORV9QUk9QRVJUWSA9IFwiZGVmaW5lUHJvcGVydHlcIjtcbmZ1bmN0aW9uIGRlZmluZShPLCBrZXksIHZhbHVlKSB7XG4gIE9ba2V5XSB8fCBPYmplY3RbREVGSU5FX1BST1BFUlRZXShPLCBrZXksIHtcbiAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgdmFsdWU6IHZhbHVlXG4gIH0pO1xufVxuXG5kZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgXCJwYWRMZWZ0XCIsIFwiXCIucGFkU3RhcnQpO1xuZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIFwicGFkUmlnaHRcIiwgXCJcIi5wYWRFbmQpO1xuXG5cInBvcCxyZXZlcnNlLHNoaWZ0LGtleXMsdmFsdWVzLGVudHJpZXMsaW5kZXhPZixldmVyeSxzb21lLGZvckVhY2gsbWFwLGZpbHRlcixmaW5kLGZpbmRJbmRleCxpbmNsdWRlcyxqb2luLHNsaWNlLGNvbmNhdCxwdXNoLHNwbGljZSx1bnNoaWZ0LHNvcnQsbGFzdEluZGV4T2YscmVkdWNlLHJlZHVjZVJpZ2h0LGNvcHlXaXRoaW4sZmlsbFwiLnNwbGl0KFwiLFwiKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgW11ba2V5XSAmJiBkZWZpbmUoQXJyYXksIGtleSwgRnVuY3Rpb24uY2FsbC5iaW5kKFtdW2tleV0pKTtcbn0pOyIsInJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3ltYm9sJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZGVmaW5lLXByb3BlcnRpZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5zZWFsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5vYmplY3QuaXMtc2VhbGVkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5pcy1leHRlbnNpYmxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYub2JqZWN0LmlzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZnVuY3Rpb24uYmluZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5mdW5jdGlvbi5uYW1lJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5wYXJzZS1pbnQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci50by1maXhlZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tcHJlY2lzaW9uJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5pcy1maW5pdGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1mbG9hdCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguYWNvc2gnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5hc2luaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmF0YW5oJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguY2JydCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmNsejMyJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguY29zaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguZnJvdW5kJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguaHlwb3QnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5pbXVsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGgubG9nMTAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5sb2cxcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC5zaWduJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2Lm1hdGguc2luaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5tYXRoLnRhbmgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWF0aC50cnVuYycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuZnJvbS1jb2RlLXBvaW50Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5yYXcnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnRyaW0nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5lbmRzLXdpdGgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmluY2x1ZGVzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5hbmNob3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJpZycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmJvbGQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5mb250Y29sb3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLmZvbnRzaXplJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5pdGFsaWNzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5saW5rJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnN0cmluZy5zdWInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuc3RyaW5nLnN1cCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLm5vdycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5kYXRlLnRvLWpzb24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuZGF0ZS50by1pc28tc3RyaW5nJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmRhdGUudG8tcHJpbWl0aXZlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmlzLWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZyb20nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkub2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuam9pbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5zb3J0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lm1hcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc29tZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlLXJpZ2h0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5Lmxhc3QtaW5kZXgtb2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuZmlsbCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5maW5kJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5yZXBsYWNlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2gnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnByb21pc2UnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYubWFwJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi53ZWFrLW1hcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi53ZWFrLXNldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuZGF0YS12aWV3Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDgtY2xhbXBlZC1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC5pbnQxNi1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuaW50MzItYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQudWludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0MzItYXJyYXknKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmFwcGx5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVmaW5lLXByb3BlcnR5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVsZXRlLXByb3BlcnR5Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmhhcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmlzLWV4dGVuc2libGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnByZXZlbnQtZXh0ZW5zaW9ucycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuaW5jbHVkZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuYXJyYXkuZmxhdHRlbicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcuYXQnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1zdGFydCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zdHJpbmcudHJpbS1sZWZ0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN0cmluZy5tYXRjaC1hbGwnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN5bWJvbC5vYnNlcnZhYmxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmVudHJpZXMnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmRlZmluZS1nZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0LmRlZmluZS1zZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0Lmxvb2t1cC1nZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcub2JqZWN0Lmxvb2t1cC1zZXR0ZXInKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWFwLnRvLWpzb24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuc2V0LnRvLWpzb24nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWFwLm9mJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnNldC5vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy53ZWFrLW1hcC5vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy53ZWFrLXNldC5vZicpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXAuZnJvbScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5zZXQuZnJvbScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy53ZWFrLW1hcC5mcm9tJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LndlYWstc2V0LmZyb20nKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuZ2xvYmFsJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnN5c3RlbS5nbG9iYWwnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcuZXJyb3IuaXMtZXJyb3InKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5jbGFtcCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmRlZy1wZXItcmFkJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGguZGVncmVlcycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmZzY2FsZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLmlhZGRoJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGguaXN1YmgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5pbXVsaCcpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLnJhZC1wZXItZGVnJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGgucmFkaWFucycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5tYXRoLnNjYWxlJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm1hdGgudW11bGgnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcubWF0aC5zaWduYml0Jyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5wcm9taXNlLnRyeScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlZmluZS1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmRlbGV0ZS1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1tZXRhZGF0YS1rZXlzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3LnJlZmxlY3QuZ2V0LW93bi1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0LmdldC1vd24tbWV0YWRhdGEta2V5cycpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5yZWZsZWN0Lmhhcy1vd24tbWV0YWRhdGEnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy9lczcucmVmbGVjdC5tZXRhZGF0YScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL2VzNy5hc2FwJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvZXM3Lm9ic2VydmFibGUnKTtcbnJlcXVpcmUoJy4vbW9kdWxlcy93ZWIudGltZXJzJyk7XG5yZXF1aXJlKCcuL21vZHVsZXMvd2ViLmltbWVkaWF0ZScpO1xucmVxdWlyZSgnLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9tb2R1bGVzL19jb3JlJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBFQ01BU2NyaXB0IDYgc3ltYm9scyBzaGltXG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgTUVUQSA9IHJlcXVpcmUoJy4vX21ldGEnKS5LRVk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuL19zaGFyZWQnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgd2tzID0gcmVxdWlyZSgnLi9fd2tzJyk7XG52YXIgd2tzRXh0ID0gcmVxdWlyZSgnLi9fd2tzLWV4dCcpO1xudmFyIHdrc0RlZmluZSA9IHJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKTtcbnZhciBlbnVtS2V5cyA9IHJlcXVpcmUoJy4vX2VudW0ta2V5cycpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgX2NyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBnT1BORXh0ID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0Jyk7XG52YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICRHT1BTID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcHMnKTtcbnZhciAkRFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QRCA9ICRHT1BELmY7XG52YXIgZFAgPSAkRFAuZjtcbnZhciBnT1BOID0gZ09QTkV4dC5mO1xudmFyICRTeW1ib2wgPSBnbG9iYWwuU3ltYm9sO1xudmFyICRKU09OID0gZ2xvYmFsLkpTT047XG52YXIgX3N0cmluZ2lmeSA9ICRKU09OICYmICRKU09OLnN0cmluZ2lmeTtcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBISURERU4gPSB3a3MoJ19oaWRkZW4nKTtcbnZhciBUT19QUklNSVRJVkUgPSB3a3MoJ3RvUHJpbWl0aXZlJyk7XG52YXIgaXNFbnVtID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG52YXIgU3ltYm9sUmVnaXN0cnkgPSBzaGFyZWQoJ3N5bWJvbC1yZWdpc3RyeScpO1xudmFyIEFsbFN5bWJvbHMgPSBzaGFyZWQoJ3N5bWJvbHMnKTtcbnZhciBPUFN5bWJvbHMgPSBzaGFyZWQoJ29wLXN5bWJvbHMnKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdFtQUk9UT1RZUEVdO1xudmFyIFVTRV9OQVRJVkUgPSB0eXBlb2YgJFN5bWJvbCA9PSAnZnVuY3Rpb24nICYmICEhJEdPUFMuZjtcbnZhciBRT2JqZWN0ID0gZ2xvYmFsLlFPYmplY3Q7XG4vLyBEb24ndCB1c2Ugc2V0dGVycyBpbiBRdCBTY3JpcHQsIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xNzNcbnZhciBzZXR0ZXIgPSAhUU9iamVjdCB8fCAhUU9iamVjdFtQUk9UT1RZUEVdIHx8ICFRT2JqZWN0W1BST1RPVFlQRV0uZmluZENoaWxkO1xuXG4vLyBmYWxsYmFjayBmb3Igb2xkIEFuZHJvaWQsIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD02ODdcbnZhciBzZXRTeW1ib2xEZXNjID0gREVTQ1JJUFRPUlMgJiYgJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIF9jcmVhdGUoZFAoe30sICdhJywge1xuICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZFAodGhpcywgJ2EnLCB7IHZhbHVlOiA3IH0pLmE7IH1cbiAgfSkpLmEgIT0gNztcbn0pID8gZnVuY3Rpb24gKGl0LCBrZXksIEQpIHtcbiAgdmFyIHByb3RvRGVzYyA9IGdPUEQoT2JqZWN0UHJvdG8sIGtleSk7XG4gIGlmIChwcm90b0Rlc2MpIGRlbGV0ZSBPYmplY3RQcm90b1trZXldO1xuICBkUChpdCwga2V5LCBEKTtcbiAgaWYgKHByb3RvRGVzYyAmJiBpdCAhPT0gT2JqZWN0UHJvdG8pIGRQKE9iamVjdFByb3RvLCBrZXksIHByb3RvRGVzYyk7XG59IDogZFA7XG5cbnZhciB3cmFwID0gZnVuY3Rpb24gKHRhZykge1xuICB2YXIgc3ltID0gQWxsU3ltYm9sc1t0YWddID0gX2NyZWF0ZSgkU3ltYm9sW1BST1RPVFlQRV0pO1xuICBzeW0uX2sgPSB0YWc7XG4gIHJldHVybiBzeW07XG59O1xuXG52YXIgaXNTeW1ib2wgPSBVU0VfTkFUSVZFICYmIHR5cGVvZiAkU3ltYm9sLml0ZXJhdG9yID09ICdzeW1ib2wnID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCc7XG59IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCBpbnN0YW5jZW9mICRTeW1ib2w7XG59O1xuXG52YXIgJGRlZmluZVByb3BlcnR5ID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoaXQsIGtleSwgRCkge1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvKSAkZGVmaW5lUHJvcGVydHkoT1BTeW1ib2xzLCBrZXksIEQpO1xuICBhbk9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEQpO1xuICBpZiAoaGFzKEFsbFN5bWJvbHMsIGtleSkpIHtcbiAgICBpZiAoIUQuZW51bWVyYWJsZSkge1xuICAgICAgaWYgKCFoYXMoaXQsIEhJRERFTikpIGRQKGl0LCBISURERU4sIGNyZWF0ZURlc2MoMSwge30pKTtcbiAgICAgIGl0W0hJRERFTl1ba2V5XSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSBpdFtISURERU5dW2tleV0gPSBmYWxzZTtcbiAgICAgIEQgPSBfY3JlYXRlKEQsIHsgZW51bWVyYWJsZTogY3JlYXRlRGVzYygwLCBmYWxzZSkgfSk7XG4gICAgfSByZXR1cm4gc2V0U3ltYm9sRGVzYyhpdCwga2V5LCBEKTtcbiAgfSByZXR1cm4gZFAoaXQsIGtleSwgRCk7XG59O1xudmFyICRkZWZpbmVQcm9wZXJ0aWVzID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhpdCwgUCkge1xuICBhbk9iamVjdChpdCk7XG4gIHZhciBrZXlzID0gZW51bUtleXMoUCA9IHRvSU9iamVjdChQKSk7XG4gIHZhciBpID0gMDtcbiAgdmFyIGwgPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKGwgPiBpKSAkZGVmaW5lUHJvcGVydHkoaXQsIGtleSA9IGtleXNbaSsrXSwgUFtrZXldKTtcbiAgcmV0dXJuIGl0O1xufTtcbnZhciAkY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGl0LCBQKSB7XG4gIHJldHVybiBQID09PSB1bmRlZmluZWQgPyBfY3JlYXRlKGl0KSA6ICRkZWZpbmVQcm9wZXJ0aWVzKF9jcmVhdGUoaXQpLCBQKTtcbn07XG52YXIgJHByb3BlcnR5SXNFbnVtZXJhYmxlID0gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoa2V5KSB7XG4gIHZhciBFID0gaXNFbnVtLmNhbGwodGhpcywga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSk7XG4gIGlmICh0aGlzID09PSBPYmplY3RQcm90byAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhaGFzKE9QU3ltYm9scywga2V5KSkgcmV0dXJuIGZhbHNlO1xuICByZXR1cm4gRSB8fCAhaGFzKHRoaXMsIGtleSkgfHwgIWhhcyhBbGxTeW1ib2xzLCBrZXkpIHx8IGhhcyh0aGlzLCBISURERU4pICYmIHRoaXNbSElEREVOXVtrZXldID8gRSA6IHRydWU7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICBpdCA9IHRvSU9iamVjdChpdCk7XG4gIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSk7XG4gIGlmIChpdCA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybjtcbiAgdmFyIEQgPSBnT1BEKGl0LCBrZXkpO1xuICBpZiAoRCAmJiBoYXMoQWxsU3ltYm9scywga2V5KSAmJiAhKGhhcyhpdCwgSElEREVOKSAmJiBpdFtISURERU5dW2tleV0pKSBELmVudW1lcmFibGUgPSB0cnVlO1xuICByZXR1cm4gRDtcbn07XG52YXIgJGdldE93blByb3BlcnR5TmFtZXMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKGl0KSB7XG4gIHZhciBuYW1lcyA9IGdPUE4odG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmICghaGFzKEFsbFN5bWJvbHMsIGtleSA9IG5hbWVzW2krK10pICYmIGtleSAhPSBISURERU4gJiYga2V5ICE9IE1FVEEpIHJlc3VsdC5wdXNoKGtleSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG52YXIgJGdldE93blByb3BlcnR5U3ltYm9scyA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICB2YXIgSVNfT1AgPSBpdCA9PT0gT2JqZWN0UHJvdG87XG4gIHZhciBuYW1lcyA9IGdPUE4oSVNfT1AgPyBPUFN5bWJvbHMgOiB0b0lPYmplY3QoaXQpKTtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIgaSA9IDA7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChuYW1lcy5sZW5ndGggPiBpKSB7XG4gICAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiAoSVNfT1AgPyBoYXMoT2JqZWN0UHJvdG8sIGtleSkgOiB0cnVlKSkgcmVzdWx0LnB1c2goQWxsU3ltYm9sc1trZXldKTtcbiAgfSByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gMTkuNC4xLjEgU3ltYm9sKFtkZXNjcmlwdGlvbl0pXG5pZiAoIVVTRV9OQVRJVkUpIHtcbiAgJFN5bWJvbCA9IGZ1bmN0aW9uIFN5bWJvbCgpIHtcbiAgICBpZiAodGhpcyBpbnN0YW5jZW9mICRTeW1ib2wpIHRocm93IFR5cGVFcnJvcignU3ltYm9sIGlzIG5vdCBhIGNvbnN0cnVjdG9yIScpO1xuICAgIHZhciB0YWcgPSB1aWQoYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpO1xuICAgIHZhciAkc2V0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8pICRzZXQuY2FsbChPUFN5bWJvbHMsIHZhbHVlKTtcbiAgICAgIGlmIChoYXModGhpcywgSElEREVOKSAmJiBoYXModGhpc1tISURERU5dLCB0YWcpKSB0aGlzW0hJRERFTl1bdGFnXSA9IGZhbHNlO1xuICAgICAgc2V0U3ltYm9sRGVzYyh0aGlzLCB0YWcsIGNyZWF0ZURlc2MoMSwgdmFsdWUpKTtcbiAgICB9O1xuICAgIGlmIChERVNDUklQVE9SUyAmJiBzZXR0ZXIpIHNldFN5bWJvbERlc2MoT2JqZWN0UHJvdG8sIHRhZywgeyBjb25maWd1cmFibGU6IHRydWUsIHNldDogJHNldCB9KTtcbiAgICByZXR1cm4gd3JhcCh0YWcpO1xuICB9O1xuICByZWRlZmluZSgkU3ltYm9sW1BST1RPVFlQRV0sICd0b1N0cmluZycsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLl9rO1xuICB9KTtcblxuICAkR09QRC5mID0gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbiAgJERQLmYgPSAkZGVmaW5lUHJvcGVydHk7XG4gIHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZiA9IGdPUE5FeHQuZiA9ICRnZXRPd25Qcm9wZXJ0eU5hbWVzO1xuICByZXF1aXJlKCcuL19vYmplY3QtcGllJykuZiA9ICRwcm9wZXJ0eUlzRW51bWVyYWJsZTtcbiAgJEdPUFMuZiA9ICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbiAgaWYgKERFU0NSSVBUT1JTICYmICFyZXF1aXJlKCcuL19saWJyYXJ5JykpIHtcbiAgICByZWRlZmluZShPYmplY3RQcm90bywgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJywgJHByb3BlcnR5SXNFbnVtZXJhYmxlLCB0cnVlKTtcbiAgfVxuXG4gIHdrc0V4dC5mID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gd3JhcCh3a3MobmFtZSkpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFN5bWJvbDogJFN5bWJvbCB9KTtcblxuZm9yICh2YXIgZXM2U3ltYm9scyA9IChcbiAgLy8gMTkuNC4yLjIsIDE5LjQuMi4zLCAxOS40LjIuNCwgMTkuNC4yLjYsIDE5LjQuMi44LCAxOS40LjIuOSwgMTkuNC4yLjEwLCAxOS40LjIuMTEsIDE5LjQuMi4xMiwgMTkuNC4yLjEzLCAxOS40LjIuMTRcbiAgJ2hhc0luc3RhbmNlLGlzQ29uY2F0U3ByZWFkYWJsZSxpdGVyYXRvcixtYXRjaCxyZXBsYWNlLHNlYXJjaCxzcGVjaWVzLHNwbGl0LHRvUHJpbWl0aXZlLHRvU3RyaW5nVGFnLHVuc2NvcGFibGVzJ1xuKS5zcGxpdCgnLCcpLCBqID0gMDsgZXM2U3ltYm9scy5sZW5ndGggPiBqOyl3a3MoZXM2U3ltYm9sc1tqKytdKTtcblxuZm9yICh2YXIgd2VsbEtub3duU3ltYm9scyA9ICRrZXlzKHdrcy5zdG9yZSksIGsgPSAwOyB3ZWxsS25vd25TeW1ib2xzLmxlbmd0aCA+IGs7KSB3a3NEZWZpbmUod2VsbEtub3duU3ltYm9sc1trKytdKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ1N5bWJvbCcsIHtcbiAgLy8gMTkuNC4yLjEgU3ltYm9sLmZvcihrZXkpXG4gICdmb3InOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIGhhcyhTeW1ib2xSZWdpc3RyeSwga2V5ICs9ICcnKVxuICAgICAgPyBTeW1ib2xSZWdpc3RyeVtrZXldXG4gICAgICA6IFN5bWJvbFJlZ2lzdHJ5W2tleV0gPSAkU3ltYm9sKGtleSk7XG4gIH0sXG4gIC8vIDE5LjQuMi41IFN5bWJvbC5rZXlGb3Ioc3ltKVxuICBrZXlGb3I6IGZ1bmN0aW9uIGtleUZvcihzeW0pIHtcbiAgICBpZiAoIWlzU3ltYm9sKHN5bSkpIHRocm93IFR5cGVFcnJvcihzeW0gKyAnIGlzIG5vdCBhIHN5bWJvbCEnKTtcbiAgICBmb3IgKHZhciBrZXkgaW4gU3ltYm9sUmVnaXN0cnkpIGlmIChTeW1ib2xSZWdpc3RyeVtrZXldID09PSBzeW0pIHJldHVybiBrZXk7XG4gIH0sXG4gIHVzZVNldHRlcjogZnVuY3Rpb24gKCkgeyBzZXR0ZXIgPSB0cnVlOyB9LFxuICB1c2VTaW1wbGU6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gZmFsc2U7IH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCAnT2JqZWN0Jywge1xuICAvLyAxOS4xLjIuMiBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4gIGNyZWF0ZTogJGNyZWF0ZSxcbiAgLy8gMTkuMS4yLjQgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4gIGRlZmluZVByb3BlcnR5OiAkZGVmaW5lUHJvcGVydHksXG4gIC8vIDE5LjEuMi4zIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4gIGRlZmluZVByb3BlcnRpZXM6ICRkZWZpbmVQcm9wZXJ0aWVzLFxuICAvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldE93blByb3BlcnR5RGVzY3JpcHRvcixcbiAgLy8gMTkuMS4yLjcgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoTylcbiAgZ2V0T3duUHJvcGVydHlOYW1lczogJGdldE93blByb3BlcnR5TmFtZXMsXG4gIC8vIDE5LjEuMi44IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoTylcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiAkZ2V0T3duUHJvcGVydHlTeW1ib2xzXG59KTtcblxuLy8gQ2hyb21lIDM4IGFuZCAzOSBgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9sc2AgZmFpbHMgb24gcHJpbWl0aXZlc1xuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzQ0M1xudmFyIEZBSUxTX09OX1BSSU1JVElWRVMgPSAkZmFpbHMoZnVuY3Rpb24gKCkgeyAkR09QUy5mKDEpOyB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiBGQUlMU19PTl9QUklNSVRJVkVTLCAnT2JqZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eVN5bWJvbHM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkge1xuICAgIHJldHVybiAkR09QUy5mKHRvT2JqZWN0KGl0KSk7XG4gIH1cbn0pO1xuXG4vLyAyNC4zLjIgSlNPTi5zdHJpbmdpZnkodmFsdWUgWywgcmVwbGFjZXIgWywgc3BhY2VdXSlcbiRKU09OICYmICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKCFVU0VfTkFUSVZFIHx8ICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHZhciBTID0gJFN5bWJvbCgpO1xuICAvLyBNUyBFZGdlIGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyB7fVxuICAvLyBXZWJLaXQgY29udmVydHMgc3ltYm9sIHZhbHVlcyB0byBKU09OIGFzIG51bGxcbiAgLy8gVjggdGhyb3dzIG9uIGJveGVkIHN5bWJvbHNcbiAgcmV0dXJuIF9zdHJpbmdpZnkoW1NdKSAhPSAnW251bGxdJyB8fCBfc3RyaW5naWZ5KHsgYTogUyB9KSAhPSAne30nIHx8IF9zdHJpbmdpZnkoT2JqZWN0KFMpKSAhPSAne30nO1xufSkpLCAnSlNPTicsIHtcbiAgc3RyaW5naWZ5OiBmdW5jdGlvbiBzdHJpbmdpZnkoaXQpIHtcbiAgICB2YXIgYXJncyA9IFtpdF07XG4gICAgdmFyIGkgPSAxO1xuICAgIHZhciByZXBsYWNlciwgJHJlcGxhY2VyO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICAkcmVwbGFjZXIgPSByZXBsYWNlciA9IGFyZ3NbMV07XG4gICAgaWYgKCFpc09iamVjdChyZXBsYWNlcikgJiYgaXQgPT09IHVuZGVmaW5lZCB8fCBpc1N5bWJvbChpdCkpIHJldHVybjsgLy8gSUU4IHJldHVybnMgc3RyaW5nIG9uIHVuZGVmaW5lZFxuICAgIGlmICghaXNBcnJheShyZXBsYWNlcikpIHJlcGxhY2VyID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgICAgIGlmICh0eXBlb2YgJHJlcGxhY2VyID09ICdmdW5jdGlvbicpIHZhbHVlID0gJHJlcGxhY2VyLmNhbGwodGhpcywga2V5LCB2YWx1ZSk7XG4gICAgICBpZiAoIWlzU3ltYm9sKHZhbHVlKSkgcmV0dXJuIHZhbHVlO1xuICAgIH07XG4gICAgYXJnc1sxXSA9IHJlcGxhY2VyO1xuICAgIHJldHVybiBfc3RyaW5naWZ5LmFwcGx5KCRKU09OLCBhcmdzKTtcbiAgfVxufSk7XG5cbi8vIDE5LjQuMy40IFN5bWJvbC5wcm90b3R5cGVbQEB0b1ByaW1pdGl2ZV0oaGludClcbiRTeW1ib2xbUFJPVE9UWVBFXVtUT19QUklNSVRJVkVdIHx8IHJlcXVpcmUoJy4vX2hpZGUnKSgkU3ltYm9sW1BST1RPVFlQRV0sIFRPX1BSSU1JVElWRSwgJFN5bWJvbFtQUk9UT1RZUEVdLnZhbHVlT2YpO1xuLy8gMTkuNC4zLjUgU3ltYm9sLnByb3RvdHlwZVtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoJFN5bWJvbCwgJ1N5bWJvbCcpO1xuLy8gMjAuMi4xLjkgTWF0aFtAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoTWF0aCwgJ01hdGgnLCB0cnVlKTtcbi8vIDI0LjMuMyBKU09OW0BAdG9TdHJpbmdUYWddXG5zZXRUb1N0cmluZ1RhZyhnbG9iYWwuSlNPTiwgJ0pTT04nLCB0cnVlKTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ25hdGl2ZS1mdW5jdGlvbi10by1zdHJpbmcnLCBGdW5jdGlvbi50b1N0cmluZyk7XG4iLCIvLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciByZXN1bHQgPSBnZXRLZXlzKGl0KTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIGlmIChnZXRTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KTtcbiAgICB2YXIgaXNFbnVtID0gcElFLmY7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKHN5bWJvbHMubGVuZ3RoID4gaSkgaWYgKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IGNyZWF0ZTogcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4vLyAxOS4xLjIuMyAvIDE1LjIuMy43IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0aWVzOiByZXF1aXJlKCcuL19vYmplY3QtZHBzJykgfSk7XG4iLCIvLyAxOS4xLjIuNiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgICByZXR1cm4gJGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0b0lPYmplY3QoaXQpLCBrZXkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTQgT2JqZWN0LmtleXMoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRrZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdrZXlzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZnVuY3Rpb24ga2V5cyhpdCkge1xuICAgIHJldHVybiAka2V5cyh0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuNyBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhPKVxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eU5hbWVzJywgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4tZXh0JykuZjtcbn0pO1xuIiwiLy8gMTkuMS4yLjUgT2JqZWN0LmZyZWV6ZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdmcmVlemUnLCBmdW5jdGlvbiAoJGZyZWV6ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gZnJlZXplKGl0KSB7XG4gICAgcmV0dXJuICRmcmVlemUgJiYgaXNPYmplY3QoaXQpID8gJGZyZWV6ZShtZXRhKGl0KSkgOiBpdDtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjE3IE9iamVjdC5zZWFsKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpLm9uRnJlZXplO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ3NlYWwnLCBmdW5jdGlvbiAoJHNlYWwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHNlYWwoaXQpIHtcbiAgICByZXR1cm4gJHNlYWwgJiYgaXNPYmplY3QoaXQpID8gJHNlYWwobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xNSBPYmplY3QucHJldmVudEV4dGVuc2lvbnMoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgncHJldmVudEV4dGVuc2lvbnMnLCBmdW5jdGlvbiAoJHByZXZlbnRFeHRlbnNpb25zKSB7XG4gIHJldHVybiBmdW5jdGlvbiBwcmV2ZW50RXh0ZW5zaW9ucyhpdCkge1xuICAgIHJldHVybiAkcHJldmVudEV4dGVuc2lvbnMgJiYgaXNPYmplY3QoaXQpID8gJHByZXZlbnRFeHRlbnNpb25zKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTIgT2JqZWN0LmlzRnJvemVuKE8pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdpc0Zyb3plbicsIGZ1bmN0aW9uICgkaXNGcm96ZW4pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRnJvemVuKGl0KSB7XG4gICAgcmV0dXJuIGlzT2JqZWN0KGl0KSA/ICRpc0Zyb3plbiA/ICRpc0Zyb3plbihpdCkgOiBmYWxzZSA6IHRydWU7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xMyBPYmplY3QuaXNTZWFsZWQoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzU2VhbGVkJywgZnVuY3Rpb24gKCRpc1NlYWxlZCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXNTZWFsZWQoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzU2VhbGVkID8gJGlzU2VhbGVkKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjExIE9iamVjdC5pc0V4dGVuc2libGUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRXh0ZW5zaWJsZScsIGZ1bmN0aW9uICgkaXNFeHRlbnNpYmxlKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpc0V4dGVuc2libGUoaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUoaXQpIDogdHJ1ZSA6IGZhbHNlO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYsICdPYmplY3QnLCB7IGFzc2lnbjogcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpIH0pO1xuIiwiLy8gMTkuMS4zLjEwIE9iamVjdC5pcyh2YWx1ZTEsIHZhbHVlMilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgaXM6IHJlcXVpcmUoJy4vX3NhbWUtdmFsdWUnKSB9KTtcbiIsIi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IHNldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIHRlc3QgPSB7fTtcbnRlc3RbcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyldID0gJ3onO1xuaWYgKHRlc3QgKyAnJyAhPSAnW29iamVjdCB6XScpIHtcbiAgcmVxdWlyZSgnLi9fcmVkZWZpbmUnKShPYmplY3QucHJvdG90eXBlLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJ1tvYmplY3QgJyArIGNsYXNzb2YodGhpcykgKyAnXSc7XG4gIH0sIHRydWUpO1xufVxuIiwiLy8gMTkuMi4zLjIgLyAxNS4zLjQuNSBGdW5jdGlvbi5wcm90b3R5cGUuYmluZCh0aGlzQXJnLCBhcmdzLi4uKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdGdW5jdGlvbicsIHsgYmluZDogcmVxdWlyZSgnLi9fYmluZCcpIH0pO1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBGUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7XG52YXIgbmFtZVJFID0gL15cXHMqZnVuY3Rpb24gKFteIChdKikvO1xudmFyIE5BTUUgPSAnbmFtZSc7XG5cbi8vIDE5LjIuNC4yIG5hbWVcbk5BTUUgaW4gRlByb3RvIHx8IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgZFAoRlByb3RvLCBOQU1FLCB7XG4gIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiAoJycgKyB0aGlzKS5tYXRjaChuYW1lUkUpWzFdO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiAnJztcbiAgICB9XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSEFTX0lOU1RBTkNFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2hhc0luc3RhbmNlJyk7XG52YXIgRnVuY3Rpb25Qcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbi8vIDE5LjIuMy42IEZ1bmN0aW9uLnByb3RvdHlwZVtAQGhhc0luc3RhbmNlXShWKVxuaWYgKCEoSEFTX0lOU1RBTkNFIGluIEZ1bmN0aW9uUHJvdG8pKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKEZ1bmN0aW9uUHJvdG8sIEhBU19JTlNUQU5DRSwgeyB2YWx1ZTogZnVuY3Rpb24gKE8pIHtcbiAgaWYgKHR5cGVvZiB0aGlzICE9ICdmdW5jdGlvbicgfHwgIWlzT2JqZWN0KE8pKSByZXR1cm4gZmFsc2U7XG4gIGlmICghaXNPYmplY3QodGhpcy5wcm90b3R5cGUpKSByZXR1cm4gTyBpbnN0YW5jZW9mIHRoaXM7XG4gIC8vIGZvciBlbnZpcm9ubWVudCB3L28gbmF0aXZlIGBAQGhhc0luc3RhbmNlYCBsb2dpYyBlbm91Z2ggYGluc3RhbmNlb2ZgLCBidXQgYWRkIHRoaXM6XG4gIHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpIGlmICh0aGlzLnByb3RvdHlwZSA9PT0gTykgcmV0dXJuIHRydWU7XG4gIHJldHVybiBmYWxzZTtcbn0gfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMTguMi41IHBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUludCAhPSAkcGFyc2VJbnQpLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDE4LjIuNCBwYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5GICogKHBhcnNlRmxvYXQgIT0gJHBhcnNlRmxvYXQpLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgTlVNQkVSID0gJ051bWJlcic7XG52YXIgJE51bWJlciA9IGdsb2JhbFtOVU1CRVJdO1xudmFyIEJhc2UgPSAkTnVtYmVyO1xudmFyIHByb3RvID0gJE51bWJlci5wcm90b3R5cGU7XG4vLyBPcGVyYSB+MTIgaGFzIGJyb2tlbiBPYmplY3QjdG9TdHJpbmdcbnZhciBCUk9LRU5fQ09GID0gY29mKHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKShwcm90bykpID09IE5VTUJFUjtcbnZhciBUUklNID0gJ3RyaW0nIGluIFN0cmluZy5wcm90b3R5cGU7XG5cbi8vIDcuMS4zIFRvTnVtYmVyKGFyZ3VtZW50KVxudmFyIHRvTnVtYmVyID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBpdCA9IHRvUHJpbWl0aXZlKGFyZ3VtZW50LCBmYWxzZSk7XG4gIGlmICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgJiYgaXQubGVuZ3RoID4gMikge1xuICAgIGl0ID0gVFJJTSA/IGl0LnRyaW0oKSA6ICR0cmltKGl0LCAzKTtcbiAgICB2YXIgZmlyc3QgPSBpdC5jaGFyQ29kZUF0KDApO1xuICAgIHZhciB0aGlyZCwgcmFkaXgsIG1heENvZGU7XG4gICAgaWYgKGZpcnN0ID09PSA0MyB8fCBmaXJzdCA9PT0gNDUpIHtcbiAgICAgIHRoaXJkID0gaXQuY2hhckNvZGVBdCgyKTtcbiAgICAgIGlmICh0aGlyZCA9PT0gODggfHwgdGhpcmQgPT09IDEyMCkgcmV0dXJuIE5hTjsgLy8gTnVtYmVyKCcrMHgxJykgc2hvdWxkIGJlIE5hTiwgb2xkIFY4IGZpeFxuICAgIH0gZWxzZSBpZiAoZmlyc3QgPT09IDQ4KSB7XG4gICAgICBzd2l0Y2ggKGl0LmNoYXJDb2RlQXQoMSkpIHtcbiAgICAgICAgY2FzZSA2NjogY2FzZSA5ODogcmFkaXggPSAyOyBtYXhDb2RlID0gNDk7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMGJbMDFdKyQvaVxuICAgICAgICBjYXNlIDc5OiBjYXNlIDExMTogcmFkaXggPSA4OyBtYXhDb2RlID0gNTU7IGJyZWFrOyAvLyBmYXN0IGVxdWFsIC9eMG9bMC03XSskL2lcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuICtpdDtcbiAgICAgIH1cbiAgICAgIGZvciAodmFyIGRpZ2l0cyA9IGl0LnNsaWNlKDIpLCBpID0gMCwgbCA9IGRpZ2l0cy5sZW5ndGgsIGNvZGU7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgY29kZSA9IGRpZ2l0cy5jaGFyQ29kZUF0KGkpO1xuICAgICAgICAvLyBwYXJzZUludCBwYXJzZXMgYSBzdHJpbmcgdG8gYSBmaXJzdCB1bmF2YWlsYWJsZSBzeW1ib2xcbiAgICAgICAgLy8gYnV0IFRvTnVtYmVyIHNob3VsZCByZXR1cm4gTmFOIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHVuYXZhaWxhYmxlIHN5bWJvbHNcbiAgICAgICAgaWYgKGNvZGUgPCA0OCB8fCBjb2RlID4gbWF4Q29kZSkgcmV0dXJuIE5hTjtcbiAgICAgIH0gcmV0dXJuIHBhcnNlSW50KGRpZ2l0cywgcmFkaXgpO1xuICAgIH1cbiAgfSByZXR1cm4gK2l0O1xufTtcblxuaWYgKCEkTnVtYmVyKCcgMG8xJykgfHwgISROdW1iZXIoJzBiMScpIHx8ICROdW1iZXIoJysweDEnKSkge1xuICAkTnVtYmVyID0gZnVuY3Rpb24gTnVtYmVyKHZhbHVlKSB7XG4gICAgdmFyIGl0ID0gYXJndW1lbnRzLmxlbmd0aCA8IDEgPyAwIDogdmFsdWU7XG4gICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgIHJldHVybiB0aGF0IGluc3RhbmNlb2YgJE51bWJlclxuICAgICAgLy8gY2hlY2sgb24gMS4uY29uc3RydWN0b3IoZm9vKSBjYXNlXG4gICAgICAmJiAoQlJPS0VOX0NPRiA/IGZhaWxzKGZ1bmN0aW9uICgpIHsgcHJvdG8udmFsdWVPZi5jYWxsKHRoYXQpOyB9KSA6IGNvZih0aGF0KSAhPSBOVU1CRVIpXG4gICAgICAgID8gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UodG9OdW1iZXIoaXQpKSwgdGhhdCwgJE51bWJlcikgOiB0b051bWJlcihpdCk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QTihCYXNlKSA6IChcbiAgICAvLyBFUzM6XG4gICAgJ01BWF9WQUxVRSxNSU5fVkFMVUUsTmFOLE5FR0FUSVZFX0lORklOSVRZLFBPU0lUSVZFX0lORklOSVRZLCcgK1xuICAgIC8vIEVTNiAoaW4gY2FzZSwgaWYgbW9kdWxlcyB3aXRoIEVTNiBOdW1iZXIgc3RhdGljcyByZXF1aXJlZCBiZWZvcmUpOlxuICAgICdFUFNJTE9OLGlzRmluaXRlLGlzSW50ZWdlcixpc05hTixpc1NhZmVJbnRlZ2VyLE1BWF9TQUZFX0lOVEVHRVIsJyArXG4gICAgJ01JTl9TQUZFX0lOVEVHRVIscGFyc2VGbG9hdCxwYXJzZUludCxpc0ludGVnZXInXG4gICkuc3BsaXQoJywnKSwgaiA9IDAsIGtleTsga2V5cy5sZW5ndGggPiBqOyBqKyspIHtcbiAgICBpZiAoaGFzKEJhc2UsIGtleSA9IGtleXNbal0pICYmICFoYXMoJE51bWJlciwga2V5KSkge1xuICAgICAgZFAoJE51bWJlciwga2V5LCBnT1BEKEJhc2UsIGtleSkpO1xuICAgIH1cbiAgfVxuICAkTnVtYmVyLnByb3RvdHlwZSA9IHByb3RvO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICROdW1iZXI7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCBOVU1CRVIsICROdW1iZXIpO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYU51bWJlclZhbHVlID0gcmVxdWlyZSgnLi9fYS1udW1iZXItdmFsdWUnKTtcbnZhciByZXBlYXQgPSByZXF1aXJlKCcuL19zdHJpbmctcmVwZWF0Jyk7XG52YXIgJHRvRml4ZWQgPSAxLjAudG9GaXhlZDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgZGF0YSA9IFswLCAwLCAwLCAwLCAwLCAwXTtcbnZhciBFUlJPUiA9ICdOdW1iZXIudG9GaXhlZDogaW5jb3JyZWN0IGludm9jYXRpb24hJztcbnZhciBaRVJPID0gJzAnO1xuXG52YXIgbXVsdGlwbHkgPSBmdW5jdGlvbiAobiwgYykge1xuICB2YXIgaSA9IC0xO1xuICB2YXIgYzIgPSBjO1xuICB3aGlsZSAoKytpIDwgNikge1xuICAgIGMyICs9IG4gKiBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBjMiAlIDFlNztcbiAgICBjMiA9IGZsb29yKGMyIC8gMWU3KTtcbiAgfVxufTtcbnZhciBkaXZpZGUgPSBmdW5jdGlvbiAobikge1xuICB2YXIgaSA9IDY7XG4gIHZhciBjID0gMDtcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgYyArPSBkYXRhW2ldO1xuICAgIGRhdGFbaV0gPSBmbG9vcihjIC8gbik7XG4gICAgYyA9IChjICUgbikgKiAxZTc7XG4gIH1cbn07XG52YXIgbnVtVG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIHMgPSAnJztcbiAgd2hpbGUgKC0taSA+PSAwKSB7XG4gICAgaWYgKHMgIT09ICcnIHx8IGkgPT09IDAgfHwgZGF0YVtpXSAhPT0gMCkge1xuICAgICAgdmFyIHQgPSBTdHJpbmcoZGF0YVtpXSk7XG4gICAgICBzID0gcyA9PT0gJycgPyB0IDogcyArIHJlcGVhdC5jYWxsKFpFUk8sIDcgLSB0Lmxlbmd0aCkgKyB0O1xuICAgIH1cbiAgfSByZXR1cm4gcztcbn07XG52YXIgcG93ID0gZnVuY3Rpb24gKHgsIG4sIGFjYykge1xuICByZXR1cm4gbiA9PT0gMCA/IGFjYyA6IG4gJSAyID09PSAxID8gcG93KHgsIG4gLSAxLCBhY2MgKiB4KSA6IHBvdyh4ICogeCwgbiAvIDIsIGFjYyk7XG59O1xudmFyIGxvZyA9IGZ1bmN0aW9uICh4KSB7XG4gIHZhciBuID0gMDtcbiAgdmFyIHgyID0geDtcbiAgd2hpbGUgKHgyID49IDQwOTYpIHtcbiAgICBuICs9IDEyO1xuICAgIHgyIC89IDQwOTY7XG4gIH1cbiAgd2hpbGUgKHgyID49IDIpIHtcbiAgICBuICs9IDE7XG4gICAgeDIgLz0gMjtcbiAgfSByZXR1cm4gbjtcbn07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKCEhJHRvRml4ZWQgJiYgKFxuICAwLjAwMDA4LnRvRml4ZWQoMykgIT09ICcwLjAwMCcgfHxcbiAgMC45LnRvRml4ZWQoMCkgIT09ICcxJyB8fFxuICAxLjI1NS50b0ZpeGVkKDIpICE9PSAnMS4yNScgfHxcbiAgMTAwMDAwMDAwMDAwMDAwMDEyOC4wLnRvRml4ZWQoMCkgIT09ICcxMDAwMDAwMDAwMDAwMDAwMTI4J1xuKSB8fCAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b0ZpeGVkLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b0ZpeGVkOiBmdW5jdGlvbiB0b0ZpeGVkKGZyYWN0aW9uRGlnaXRzKSB7XG4gICAgdmFyIHggPSBhTnVtYmVyVmFsdWUodGhpcywgRVJST1IpO1xuICAgIHZhciBmID0gdG9JbnRlZ2VyKGZyYWN0aW9uRGlnaXRzKTtcbiAgICB2YXIgcyA9ICcnO1xuICAgIHZhciBtID0gWkVSTztcbiAgICB2YXIgZSwgeiwgaiwgaztcbiAgICBpZiAoZiA8IDAgfHwgZiA+IDIwKSB0aHJvdyBSYW5nZUVycm9yKEVSUk9SKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKHggIT0geCkgcmV0dXJuICdOYU4nO1xuICAgIGlmICh4IDw9IC0xZTIxIHx8IHggPj0gMWUyMSkgcmV0dXJuIFN0cmluZyh4KTtcbiAgICBpZiAoeCA8IDApIHtcbiAgICAgIHMgPSAnLSc7XG4gICAgICB4ID0gLXg7XG4gICAgfVxuICAgIGlmICh4ID4gMWUtMjEpIHtcbiAgICAgIGUgPSBsb2coeCAqIHBvdygyLCA2OSwgMSkpIC0gNjk7XG4gICAgICB6ID0gZSA8IDAgPyB4ICogcG93KDIsIC1lLCAxKSA6IHggLyBwb3coMiwgZSwgMSk7XG4gICAgICB6ICo9IDB4MTAwMDAwMDAwMDAwMDA7XG4gICAgICBlID0gNTIgLSBlO1xuICAgICAgaWYgKGUgPiAwKSB7XG4gICAgICAgIG11bHRpcGx5KDAsIHopO1xuICAgICAgICBqID0gZjtcbiAgICAgICAgd2hpbGUgKGogPj0gNykge1xuICAgICAgICAgIG11bHRpcGx5KDFlNywgMCk7XG4gICAgICAgICAgaiAtPSA3O1xuICAgICAgICB9XG4gICAgICAgIG11bHRpcGx5KHBvdygxMCwgaiwgMSksIDApO1xuICAgICAgICBqID0gZSAtIDE7XG4gICAgICAgIHdoaWxlIChqID49IDIzKSB7XG4gICAgICAgICAgZGl2aWRlKDEgPDwgMjMpO1xuICAgICAgICAgIGogLT0gMjM7XG4gICAgICAgIH1cbiAgICAgICAgZGl2aWRlKDEgPDwgaik7XG4gICAgICAgIG11bHRpcGx5KDEsIDEpO1xuICAgICAgICBkaXZpZGUoMik7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIG11bHRpcGx5KDEgPDwgLWUsIDApO1xuICAgICAgICBtID0gbnVtVG9TdHJpbmcoKSArIHJlcGVhdC5jYWxsKFpFUk8sIGYpO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZiA+IDApIHtcbiAgICAgIGsgPSBtLmxlbmd0aDtcbiAgICAgIG0gPSBzICsgKGsgPD0gZiA/ICcwLicgKyByZXBlYXQuY2FsbChaRVJPLCBmIC0gaykgKyBtIDogbS5zbGljZSgwLCBrIC0gZikgKyAnLicgKyBtLnNsaWNlKGsgLSBmKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSBzICsgbTtcbiAgICB9IHJldHVybiBtO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyICR0b1ByZWNpc2lvbiA9IDEuMC50b1ByZWNpc2lvbjtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gSUU3LVxuICByZXR1cm4gJHRvUHJlY2lzaW9uLmNhbGwoMSwgdW5kZWZpbmVkKSAhPT0gJzEnO1xufSkgfHwgISRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IH4gQW5kcm9pZCA0LjMtXG4gICR0b1ByZWNpc2lvbi5jYWxsKHt9KTtcbn0pKSwgJ051bWJlcicsIHtcbiAgdG9QcmVjaXNpb246IGZ1bmN0aW9uIHRvUHJlY2lzaW9uKHByZWNpc2lvbikge1xuICAgIHZhciB0aGF0ID0gYU51bWJlclZhbHVlKHRoaXMsICdOdW1iZXIjdG9QcmVjaXNpb246IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICAgIHJldHVybiBwcmVjaXNpb24gPT09IHVuZGVmaW5lZCA/ICR0b1ByZWNpc2lvbi5jYWxsKHRoYXQpIDogJHRvUHJlY2lzaW9uLmNhbGwodGhhdCwgcHJlY2lzaW9uKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuMSBOdW1iZXIuRVBTSUxPTlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IEVQU0lMT046IE1hdGgucG93KDIsIC01MikgfSk7XG4iLCIvLyAyMC4xLjIuMiBOdW1iZXIuaXNGaW5pdGUobnVtYmVyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBfaXNGaW5pdGUgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5pc0Zpbml0ZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzRmluaXRlOiBmdW5jdGlvbiBpc0Zpbml0ZShpdCkge1xuICAgIHJldHVybiB0eXBlb2YgaXQgPT0gJ251bWJlcicgJiYgX2lzRmluaXRlKGl0KTtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuMyBOdW1iZXIuaXNJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBpc0ludGVnZXI6IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKSB9KTtcbiIsIi8vIDIwLjEuMi40IE51bWJlci5pc05hTihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNOYU46IGZ1bmN0aW9uIGlzTmFOKG51bWJlcikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICByZXR1cm4gbnVtYmVyICE9IG51bWJlcjtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuNSBOdW1iZXIuaXNTYWZlSW50ZWdlcihudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGlzSW50ZWdlciA9IHJlcXVpcmUoJy4vX2lzLWludGVnZXInKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7XG4gIGlzU2FmZUludGVnZXI6IGZ1bmN0aW9uIGlzU2FmZUludGVnZXIobnVtYmVyKSB7XG4gICAgcmV0dXJuIGlzSW50ZWdlcihudW1iZXIpICYmIGFicyhudW1iZXIpIDw9IDB4MWZmZmZmZmZmZmZmZmY7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMS4yLjYgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNQVhfU0FGRV9JTlRFR0VSOiAweDFmZmZmZmZmZmZmZmZmIH0pO1xuIiwiLy8gMjAuMS4yLjEwIE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsgTUlOX1NBRkVfSU5URUdFUjogLTB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUZsb2F0ID0gcmVxdWlyZSgnLi9fcGFyc2UtZmxvYXQnKTtcbi8vIDIwLjEuMi4xMiBOdW1iZXIucGFyc2VGbG9hdChzdHJpbmcpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChOdW1iZXIucGFyc2VGbG9hdCAhPSAkcGFyc2VGbG9hdCksICdOdW1iZXInLCB7IHBhcnNlRmxvYXQ6ICRwYXJzZUZsb2F0IH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFyc2VJbnQgPSByZXF1aXJlKCcuL19wYXJzZS1pbnQnKTtcbi8vIDIwLjEuMi4xMyBOdW1iZXIucGFyc2VJbnQoc3RyaW5nLCByYWRpeClcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUludCAhPSAkcGFyc2VJbnQpLCAnTnVtYmVyJywgeyBwYXJzZUludDogJHBhcnNlSW50IH0pO1xuIiwiLy8gMjAuMi4yLjMgTWF0aC5hY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBsb2cxcCA9IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKTtcbnZhciBzcXJ0ID0gTWF0aC5zcXJ0O1xudmFyICRhY29zaCA9IE1hdGguYWNvc2g7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogISgkYWNvc2hcbiAgLy8gVjggYnVnOiBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzUwOVxuICAmJiBNYXRoLmZsb29yKCRhY29zaChOdW1iZXIuTUFYX1ZBTFVFKSkgPT0gNzEwXG4gIC8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hY29zaChJbmZpbml0eSkgLT4gTmFOXG4gICYmICRhY29zaChJbmZpbml0eSkgPT0gSW5maW5pdHlcbiksICdNYXRoJywge1xuICBhY29zaDogZnVuY3Rpb24gYWNvc2goeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA8IDEgPyBOYU4gOiB4ID4gOTQ5MDYyNjUuNjI0MjUxNTZcbiAgICAgID8gTWF0aC5sb2coeCkgKyBNYXRoLkxOMlxuICAgICAgOiBsb2cxcCh4IC0gMSArIHNxcnQoeCAtIDEpICogc3FydCh4ICsgMSkpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi41IE1hdGguYXNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGFzaW5oID0gTWF0aC5hc2luaDtcblxuZnVuY3Rpb24gYXNpbmgoeCkge1xuICByZXR1cm4gIWlzRmluaXRlKHggPSAreCkgfHwgeCA9PSAwID8geCA6IHggPCAwID8gLWFzaW5oKC14KSA6IE1hdGgubG9nKHggKyBNYXRoLnNxcnQoeCAqIHggKyAxKSk7XG59XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hc2luaCgwKSAtPiAtMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhc2luaCAmJiAxIC8gJGFzaW5oKDApID4gMCksICdNYXRoJywgeyBhc2luaDogYXNpbmggfSk7XG4iLCIvLyAyMC4yLjIuNyBNYXRoLmF0YW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRhdGFuaCA9IE1hdGguYXRhbmg7XG5cbi8vIFRvciBCcm93c2VyIGJ1ZzogTWF0aC5hdGFuaCgtMCkgLT4gMFxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhdGFuaCAmJiAxIC8gJGF0YW5oKC0wKSA8IDApLCAnTWF0aCcsIHtcbiAgYXRhbmg6IGZ1bmN0aW9uIGF0YW5oKHgpIHtcbiAgICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiBNYXRoLmxvZygoMSArIHgpIC8gKDEgLSB4KSkgLyAyO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi45IE1hdGguY2JydCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzaWduID0gcmVxdWlyZSgnLi9fbWF0aC1zaWduJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY2JydDogZnVuY3Rpb24gY2JydCh4KSB7XG4gICAgcmV0dXJuIHNpZ24oeCA9ICt4KSAqIE1hdGgucG93KE1hdGguYWJzKHgpLCAxIC8gMyk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjExIE1hdGguY2x6MzIoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgY2x6MzI6IGZ1bmN0aW9uIGNsejMyKHgpIHtcbiAgICByZXR1cm4gKHggPj4+PSAwKSA/IDMxIC0gTWF0aC5mbG9vcihNYXRoLmxvZyh4ICsgMC41KSAqIE1hdGguTE9HMkUpIDogMzI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjEyIE1hdGguY29zaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjb3NoOiBmdW5jdGlvbiBjb3NoKHgpIHtcbiAgICByZXR1cm4gKGV4cCh4ID0gK3gpICsgZXhwKC14KSkgLyAyO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4xNCBNYXRoLmV4cG0xKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoJGV4cG0xICE9IE1hdGguZXhwbTEpLCAnTWF0aCcsIHsgZXhwbTE6ICRleHBtMSB9KTtcbiIsIi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBmcm91bmQ6IHJlcXVpcmUoJy4vX21hdGgtZnJvdW5kJykgfSk7XG4iLCIvLyAyMC4yLjIuMTcgTWF0aC5oeXBvdChbdmFsdWUxWywgdmFsdWUyWywg4oCmIF1dXSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYWJzID0gTWF0aC5hYnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaHlwb3Q6IGZ1bmN0aW9uIGh5cG90KHZhbHVlMSwgdmFsdWUyKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICB2YXIgc3VtID0gMDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBsYXJnID0gMDtcbiAgICB2YXIgYXJnLCBkaXY7XG4gICAgd2hpbGUgKGkgPCBhTGVuKSB7XG4gICAgICBhcmcgPSBhYnMoYXJndW1lbnRzW2krK10pO1xuICAgICAgaWYgKGxhcmcgPCBhcmcpIHtcbiAgICAgICAgZGl2ID0gbGFyZyAvIGFyZztcbiAgICAgICAgc3VtID0gc3VtICogZGl2ICogZGl2ICsgMTtcbiAgICAgICAgbGFyZyA9IGFyZztcbiAgICAgIH0gZWxzZSBpZiAoYXJnID4gMCkge1xuICAgICAgICBkaXYgPSBhcmcgLyBsYXJnO1xuICAgICAgICBzdW0gKz0gZGl2ICogZGl2O1xuICAgICAgfSBlbHNlIHN1bSArPSBhcmc7XG4gICAgfVxuICAgIHJldHVybiBsYXJnID09PSBJbmZpbml0eSA/IEluZmluaXR5IDogbGFyZyAqIE1hdGguc3FydChzdW0pO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4xOCBNYXRoLmltdWwoeCwgeSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGltdWwgPSBNYXRoLmltdWw7XG5cbi8vIHNvbWUgV2ViS2l0IHZlcnNpb25zIGZhaWxzIHdpdGggYmlnIG51bWJlcnMsIHNvbWUgaGFzIHdyb25nIGFyaXR5XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gJGltdWwoMHhmZmZmZmZmZiwgNSkgIT0gLTUgfHwgJGltdWwubGVuZ3RoICE9IDI7XG59KSwgJ01hdGgnLCB7XG4gIGltdWw6IGZ1bmN0aW9uIGltdWwoeCwgeSkge1xuICAgIHZhciBVSU5UMTYgPSAweGZmZmY7XG4gICAgdmFyIHhuID0gK3g7XG4gICAgdmFyIHluID0gK3k7XG4gICAgdmFyIHhsID0gVUlOVDE2ICYgeG47XG4gICAgdmFyIHlsID0gVUlOVDE2ICYgeW47XG4gICAgcmV0dXJuIDAgfCB4bCAqIHlsICsgKChVSU5UMTYgJiB4biA+Pj4gMTYpICogeWwgKyB4bCAqIChVSU5UMTYgJiB5biA+Pj4gMTYpIDw8IDE2ID4+PiAwKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMjEgTWF0aC5sb2cxMCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBsb2cxMDogZnVuY3Rpb24gbG9nMTAoeCkge1xuICAgIHJldHVybiBNYXRoLmxvZyh4KSAqIE1hdGguTE9HMTBFO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yMCBNYXRoLmxvZzFwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IGxvZzFwOiByZXF1aXJlKCcuL19tYXRoLWxvZzFwJykgfSk7XG4iLCIvLyAyMC4yLjIuMjIgTWF0aC5sb2cyKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzI6IGZ1bmN0aW9uIGxvZzIoeCkge1xuICAgIHJldHVybiBNYXRoLmxvZyh4KSAvIE1hdGguTE4yO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgc2lnbjogcmVxdWlyZSgnLi9fbWF0aC1zaWduJykgfSk7XG4iLCIvLyAyMC4yLjIuMzAgTWF0aC5zaW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4vLyBWOCBuZWFyIENocm9taXVtIDM4IGhhcyBhIHByb2JsZW0gd2l0aCB2ZXJ5IHNtYWxsIG51bWJlcnNcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhTWF0aC5zaW5oKC0yZS0xNykgIT0gLTJlLTE3O1xufSksICdNYXRoJywge1xuICBzaW5oOiBmdW5jdGlvbiBzaW5oKHgpIHtcbiAgICByZXR1cm4gTWF0aC5hYnMoeCA9ICt4KSA8IDFcbiAgICAgID8gKGV4cG0xKHgpIC0gZXhwbTEoLXgpKSAvIDJcbiAgICAgIDogKGV4cCh4IC0gMSkgLSBleHAoLXggLSAxKSkgKiAoTWF0aC5FIC8gMik7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjMzIE1hdGgudGFuaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBleHBtMSA9IHJlcXVpcmUoJy4vX21hdGgtZXhwbTEnKTtcbnZhciBleHAgPSBNYXRoLmV4cDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICB0YW5oOiBmdW5jdGlvbiB0YW5oKHgpIHtcbiAgICB2YXIgYSA9IGV4cG0xKHggPSAreCk7XG4gICAgdmFyIGIgPSBleHBtMSgteCk7XG4gICAgcmV0dXJuIGEgPT0gSW5maW5pdHkgPyAxIDogYiA9PSBJbmZpbml0eSA/IC0xIDogKGEgLSBiKSAvIChleHAoeCkgKyBleHAoLXgpKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMzQgTWF0aC50cnVuYyh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICB0cnVuYzogZnVuY3Rpb24gdHJ1bmMoaXQpIHtcbiAgICByZXR1cm4gKGl0ID4gMCA/IE1hdGguZmxvb3IgOiBNYXRoLmNlaWwpKGl0KTtcbiAgfVxufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgZnJvbUNoYXJDb2RlID0gU3RyaW5nLmZyb21DaGFyQ29kZTtcbnZhciAkZnJvbUNvZGVQb2ludCA9IFN0cmluZy5mcm9tQ29kZVBvaW50O1xuXG4vLyBsZW5ndGggc2hvdWxkIGJlIDEsIG9sZCBGRiBwcm9ibGVtXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghISRmcm9tQ29kZVBvaW50ICYmICRmcm9tQ29kZVBvaW50Lmxlbmd0aCAhPSAxKSwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4yLjIgU3RyaW5nLmZyb21Db2RlUG9pbnQoLi4uY29kZVBvaW50cylcbiAgZnJvbUNvZGVQb2ludDogZnVuY3Rpb24gZnJvbUNvZGVQb2ludCh4KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgICB2YXIgcmVzID0gW107XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgY29kZTtcbiAgICB3aGlsZSAoYUxlbiA+IGkpIHtcbiAgICAgIGNvZGUgPSArYXJndW1lbnRzW2krK107XG4gICAgICBpZiAodG9BYnNvbHV0ZUluZGV4KGNvZGUsIDB4MTBmZmZmKSAhPT0gY29kZSkgdGhyb3cgUmFuZ2VFcnJvcihjb2RlICsgJyBpcyBub3QgYSB2YWxpZCBjb2RlIHBvaW50Jyk7XG4gICAgICByZXMucHVzaChjb2RlIDwgMHgxMDAwMFxuICAgICAgICA/IGZyb21DaGFyQ29kZShjb2RlKVxuICAgICAgICA6IGZyb21DaGFyQ29kZSgoKGNvZGUgLT0gMHgxMDAwMCkgPj4gMTApICsgMHhkODAwLCBjb2RlICUgMHg0MDAgKyAweGRjMDApXG4gICAgICApO1xuICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTtcbiAgfVxufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4yLjQgU3RyaW5nLnJhdyhjYWxsU2l0ZSwgLi4uc3Vic3RpdHV0aW9ucylcbiAgcmF3OiBmdW5jdGlvbiByYXcoY2FsbFNpdGUpIHtcbiAgICB2YXIgdHBsID0gdG9JT2JqZWN0KGNhbGxTaXRlLnJhdyk7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRwbC5sZW5ndGgpO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzID0gW107XG4gICAgdmFyIGkgPSAwO1xuICAgIHdoaWxlIChsZW4gPiBpKSB7XG4gICAgICByZXMucHVzaChTdHJpbmcodHBsW2krK10pKTtcbiAgICAgIGlmIChpIDwgYUxlbikgcmVzLnB1c2goU3RyaW5nKGFyZ3VtZW50c1tpXSkpO1xuICAgIH0gcmV0dXJuIHJlcy5qb2luKCcnKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMS4xLjMuMjUgU3RyaW5nLnByb3RvdHlwZS50cmltKClcbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW0nLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW0oKSB7XG4gICAgcmV0dXJuICR0cmltKHRoaXMsIDMpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykoZmFsc2UpO1xuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4zIFN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXQocG9zKVxuICBjb2RlUG9pbnRBdDogZnVuY3Rpb24gY29kZVBvaW50QXQocG9zKSB7XG4gICAgcmV0dXJuICRhdCh0aGlzLCBwb3MpO1xuICB9XG59KTtcbiIsIi8vIDIxLjEuMy42IFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgoc2VhcmNoU3RyaW5nIFssIGVuZFBvc2l0aW9uXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBFTkRTX1dJVEggPSAnZW5kc1dpdGgnO1xudmFyICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiAsIGVuZFBvc2l0aW9uID0gQGxlbmd0aCAqLykge1xuICAgIHZhciB0aGF0ID0gY29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIEVORFNfV0lUSCk7XG4gICAgdmFyIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoYXQubGVuZ3RoKTtcbiAgICB2YXIgZW5kID0gZW5kUG9zaXRpb24gPT09IHVuZGVmaW5lZCA/IGxlbiA6IE1hdGgubWluKHRvTGVuZ3RoKGVuZFBvc2l0aW9uKSwgbGVuKTtcbiAgICB2YXIgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRlbmRzV2l0aFxuICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZClcbiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiLy8gMjEuMS4zLjcgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcsIHBvc2l0aW9uID0gMClcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29udGV4dCA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0Jyk7XG52YXIgSU5DTFVERVMgPSAnaW5jbHVkZXMnO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKElOQ0xVREVTKSwgJ1N0cmluZycsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaFN0cmluZyAvKiAsIHBvc2l0aW9uID0gMCAqLykge1xuICAgIHJldHVybiAhIX5jb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgSU5DTFVERVMpXG4gICAgICAuaW5kZXhPZihzZWFyY2hTdHJpbmcsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ1N0cmluZycsIHtcbiAgLy8gMjEuMS4zLjEzIFN0cmluZy5wcm90b3R5cGUucmVwZWF0KGNvdW50KVxuICByZXBlYXQ6IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKVxufSk7XG4iLCIvLyAyMS4xLjMuMTggU3RyaW5nLnByb3RvdHlwZS5zdGFydHNXaXRoKHNlYXJjaFN0cmluZyBbLCBwb3NpdGlvbiBdKVxuJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNvbnRleHQgPSByZXF1aXJlKCcuL19zdHJpbmctY29udGV4dCcpO1xudmFyIFNUQVJUU19XSVRIID0gJ3N0YXJ0c1dpdGgnO1xudmFyICRzdGFydHNXaXRoID0gJydbU1RBUlRTX1dJVEhdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKFNUQVJUU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgc3RhcnRzV2l0aDogZnVuY3Rpb24gc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgLyogLCBwb3NpdGlvbiA9IDAgKi8pIHtcbiAgICB2YXIgdGhhdCA9IGNvbnRleHQodGhpcywgc2VhcmNoU3RyaW5nLCBTVEFSVFNfV0lUSCk7XG4gICAgdmFyIGluZGV4ID0gdG9MZW5ndGgoTWF0aC5taW4oYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIHRoYXQubGVuZ3RoKSk7XG4gICAgdmFyIHNlYXJjaCA9IFN0cmluZyhzZWFyY2hTdHJpbmcpO1xuICAgIHJldHVybiAkc3RhcnRzV2l0aFxuICAgICAgPyAkc3RhcnRzV2l0aC5jYWxsKHRoYXQsIHNlYXJjaCwgaW5kZXgpXG4gICAgICA6IHRoYXQuc2xpY2UoaW5kZXgsIGluZGV4ICsgc2VhcmNoLmxlbmd0aCkgPT09IHNlYXJjaDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4yIFN0cmluZy5wcm90b3R5cGUuYW5jaG9yKG5hbWUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdhbmNob3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYW5jaG9yKG5hbWUpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYScsICduYW1lJywgbmFtZSk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjMgU3RyaW5nLnByb3RvdHlwZS5iaWcoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmlnJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpZygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYmlnJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNCBTdHJpbmcucHJvdG90eXBlLmJsaW5rKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJsaW5rKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdibGluaycsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjUgU3RyaW5nLnByb3RvdHlwZS5ib2xkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JvbGQnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYm9sZCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYicsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjYgU3RyaW5nLnByb3RvdHlwZS5maXhlZCgpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmaXhlZCcsIGZ1bmN0aW9uIChjcmVhdGVIVE1MKSB7XG4gIHJldHVybiBmdW5jdGlvbiBmaXhlZCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAndHQnLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy43IFN0cmluZy5wcm90b3R5cGUuZm9udGNvbG9yKGNvbG9yKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZm9udGNvbG9yJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZvbnRjb2xvcihjb2xvcikge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdmb250JywgJ2NvbG9yJywgY29sb3IpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy44IFN0cmluZy5wcm90b3R5cGUuZm9udHNpemUoc2l6ZSlcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZvbnRzaXplJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZvbnRzaXplKHNpemUpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnZm9udCcsICdzaXplJywgc2l6ZSk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjkgU3RyaW5nLnByb3RvdHlwZS5pdGFsaWNzKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2l0YWxpY3MnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gaXRhbGljcygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnaScsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEwIFN0cmluZy5wcm90b3R5cGUubGluayh1cmwpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGxpbmsodXJsKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2EnLCAnaHJlZicsIHVybCk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjExIFN0cmluZy5wcm90b3R5cGUuc21hbGwoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc21hbGwnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc21hbGwoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3NtYWxsJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTIgU3RyaW5nLnByb3RvdHlwZS5zdHJpa2UoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3RyaWtlJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN0cmlrZSgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3RyaWtlJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5zdWIoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3ViJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1YigpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3ViJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTQgU3RyaW5nLnByb3RvdHlwZS5zdXAoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3VwJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1cCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3VwJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiLy8gMjAuMy4zLjEgLyAxNS45LjQuNCBEYXRlLm5vdygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ0RhdGUnLCB7IG5vdzogZnVuY3Rpb24gKCkgeyByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0gfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKE5hTikudG9KU09OKCkgIT09IG51bGxcbiAgICB8fCBEYXRlLnByb3RvdHlwZS50b0pTT04uY2FsbCh7IHRvSVNPU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAxOyB9IH0pICE9PSAxO1xufSksICdEYXRlJywge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04oa2V5KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgcHYgPSB0b1ByaW1pdGl2ZShPKTtcbiAgICByZXR1cm4gdHlwZW9mIHB2ID09ICdudW1iZXInICYmICFpc0Zpbml0ZShwdikgPyBudWxsIDogTy50b0lTT1N0cmluZygpO1xuICB9XG59KTtcbiIsIi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSVNPU3RyaW5nID0gcmVxdWlyZSgnLi9fZGF0ZS10by1pc28tc3RyaW5nJyk7XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcgIT09IHRvSVNPU3RyaW5nKSwgJ0RhdGUnLCB7XG4gIHRvSVNPU3RyaW5nOiB0b0lTT1N0cmluZ1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMC4zLjQuMzYgLyAxNS45LjUuNDMgRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcoKVxudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBnZXRUaW1lID0gRGF0ZS5wcm90b3R5cGUuZ2V0VGltZTtcbnZhciAkdG9JU09TdHJpbmcgPSBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZztcblxudmFyIGx6ID0gZnVuY3Rpb24gKG51bSkge1xuICByZXR1cm4gbnVtID4gOSA/IG51bSA6ICcwJyArIG51bTtcbn07XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xubW9kdWxlLmV4cG9ydHMgPSAoZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gJHRvSVNPU3RyaW5nLmNhbGwobmV3IERhdGUoLTVlMTMgLSAxKSkgIT0gJzAzODUtMDctMjVUMDc6MDY6MzkuOTk5Wic7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAkdG9JU09TdHJpbmcuY2FsbChuZXcgRGF0ZShOYU4pKTtcbn0pKSA/IGZ1bmN0aW9uIHRvSVNPU3RyaW5nKCkge1xuICBpZiAoIWlzRmluaXRlKGdldFRpbWUuY2FsbCh0aGlzKSkpIHRocm93IFJhbmdlRXJyb3IoJ0ludmFsaWQgdGltZSB2YWx1ZScpO1xuICB2YXIgZCA9IHRoaXM7XG4gIHZhciB5ID0gZC5nZXRVVENGdWxsWWVhcigpO1xuICB2YXIgbSA9IGQuZ2V0VVRDTWlsbGlzZWNvbmRzKCk7XG4gIHZhciBzID0geSA8IDAgPyAnLScgOiB5ID4gOTk5OSA/ICcrJyA6ICcnO1xuICByZXR1cm4gcyArICgnMDAwMDAnICsgTWF0aC5hYnMoeSkpLnNsaWNlKHMgPyAtNiA6IC00KSArXG4gICAgJy0nICsgbHooZC5nZXRVVENNb250aCgpICsgMSkgKyAnLScgKyBseihkLmdldFVUQ0RhdGUoKSkgK1xuICAgICdUJyArIGx6KGQuZ2V0VVRDSG91cnMoKSkgKyAnOicgKyBseihkLmdldFVUQ01pbnV0ZXMoKSkgK1xuICAgICc6JyArIGx6KGQuZ2V0VVRDU2Vjb25kcygpKSArICcuJyArIChtID4gOTkgPyBtIDogJzAnICsgbHoobSkpICsgJ1onO1xufSA6ICR0b0lTT1N0cmluZztcbiIsInZhciBEYXRlUHJvdG8gPSBEYXRlLnByb3RvdHlwZTtcbnZhciBJTlZBTElEX0RBVEUgPSAnSW52YWxpZCBEYXRlJztcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyICR0b1N0cmluZyA9IERhdGVQcm90b1tUT19TVFJJTkddO1xudmFyIGdldFRpbWUgPSBEYXRlUHJvdG8uZ2V0VGltZTtcbmlmIChuZXcgRGF0ZShOYU4pICsgJycgIT0gSU5WQUxJRF9EQVRFKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoRGF0ZVByb3RvLCBUT19TVFJJTkcsIGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciB2YWx1ZSA9IGdldFRpbWUuY2FsbCh0aGlzKTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSA/ICR0b1N0cmluZy5jYWxsKHRoaXMpIDogSU5WQUxJRF9EQVRFO1xuICB9KTtcbn1cbiIsInZhciBUT19QUklNSVRJVkUgPSByZXF1aXJlKCcuL193a3MnKSgndG9QcmltaXRpdmUnKTtcbnZhciBwcm90byA9IERhdGUucHJvdG90eXBlO1xuXG5pZiAoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKSByZXF1aXJlKCcuL19oaWRlJykocHJvdG8sIFRPX1BSSU1JVElWRSwgcmVxdWlyZSgnLi9fZGF0ZS10by1wcmltaXRpdmUnKSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIE5VTUJFUiA9ICdudW1iZXInO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoaW50KSB7XG4gIGlmIChoaW50ICE9PSAnc3RyaW5nJyAmJiBoaW50ICE9PSBOVU1CRVIgJiYgaGludCAhPT0gJ2RlZmF1bHQnKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29ycmVjdCBoaW50Jyk7XG4gIHJldHVybiB0b1ByaW1pdGl2ZShhbk9iamVjdCh0aGlzKSwgaGludCAhPSBOVU1CRVIpO1xufTtcbiIsIi8vIDIyLjEuMi4yIC8gMTUuNC4zLjIgQXJyYXkuaXNBcnJheShhcmcpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ0FycmF5JywgeyBpc0FycmF5OiByZXF1aXJlKCcuL19pcy1hcnJheScpIH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikgeyBBcnJheS5mcm9tKGl0ZXIpOyB9KSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjIuMSBBcnJheS5mcm9tKGFycmF5TGlrZSwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gIGZyb206IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlIC8qICwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gICAgdmFyIEMgPSB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5O1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBsZW5ndGgsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKG1hcHBpbmcpIG1hcGZuID0gY3R4KG1hcGZuLCBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gICAgLy8gaWYgb2JqZWN0IGlzbid0IGl0ZXJhYmxlIG9yIGl0J3MgYXJyYXkgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yIC0gdXNlIHNpbXBsZSBjYXNlXG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyKGl0ZXJGbikpKSB7XG4gICAgICBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHJlc3VsdCA9IG5ldyBDKCk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gY2FsbChpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICAgIGZvciAocmVzdWx0ID0gbmV3IEMobGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IG1hcGZuKE9baW5kZXhdLCBpbmRleCkgOiBPW2luZGV4XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5sZW5ndGggPSBpbmRleDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuLy8gV2ViS2l0IEFycmF5Lm9mIGlzbid0IGdlbmVyaWNcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEYoKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuICEoQXJyYXkub2YuY2FsbChGKSBpbnN0YW5jZW9mIEYpO1xufSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4yLjMgQXJyYXkub2YoIC4uLml0ZW1zKVxuICBvZjogZnVuY3Rpb24gb2YoLyogLi4uYXJncyAqLykge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciByZXN1bHQgPSBuZXcgKHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXkpKGFMZW4pO1xuICAgIHdoaWxlIChhTGVuID4gaW5kZXgpIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGFMZW47XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmpvaW4oc2VwYXJhdG9yKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlKb2luID0gW10uam9pbjtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIHN0cmluZ3NcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKHJlcXVpcmUoJy4vX2lvYmplY3QnKSAhPSBPYmplY3QgfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShhcnJheUpvaW4pKSwgJ0FycmF5Jywge1xuICBqb2luOiBmdW5jdGlvbiBqb2luKHNlcGFyYXRvcikge1xuICAgIHJldHVybiBhcnJheUpvaW4uY2FsbCh0b0lPYmplY3QodGhpcyksIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkID8gJywnIDogc2VwYXJhdG9yKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuL19odG1sJyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFycmF5U2xpY2UgPSBbXS5zbGljZTtcblxuLy8gZmFsbGJhY2sgZm9yIG5vdCBhcnJheS1saWtlIEVTMyBzdHJpbmdzIGFuZCBET00gb2JqZWN0c1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgaWYgKGh0bWwpIGFycmF5U2xpY2UuY2FsbChodG1sKTtcbn0pLCAnQXJyYXknLCB7XG4gIHNsaWNlOiBmdW5jdGlvbiBzbGljZShiZWdpbiwgZW5kKSB7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoaXMubGVuZ3RoKTtcbiAgICB2YXIga2xhc3MgPSBjb2YodGhpcyk7XG4gICAgZW5kID0gZW5kID09PSB1bmRlZmluZWQgPyBsZW4gOiBlbmQ7XG4gICAgaWYgKGtsYXNzID09ICdBcnJheScpIHJldHVybiBhcnJheVNsaWNlLmNhbGwodGhpcywgYmVnaW4sIGVuZCk7XG4gICAgdmFyIHN0YXJ0ID0gdG9BYnNvbHV0ZUluZGV4KGJlZ2luLCBsZW4pO1xuICAgIHZhciB1cFRvID0gdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuKTtcbiAgICB2YXIgc2l6ZSA9IHRvTGVuZ3RoKHVwVG8gLSBzdGFydCk7XG4gICAgdmFyIGNsb25lZCA9IG5ldyBBcnJheShzaXplKTtcbiAgICB2YXIgaSA9IDA7XG4gICAgZm9yICg7IGkgPCBzaXplOyBpKyspIGNsb25lZFtpXSA9IGtsYXNzID09ICdTdHJpbmcnXG4gICAgICA/IHRoaXMuY2hhckF0KHN0YXJ0ICsgaSlcbiAgICAgIDogdGhpc1tzdGFydCArIGldO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgJHNvcnQgPSBbXS5zb3J0O1xudmFyIHRlc3QgPSBbMSwgMiwgM107XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gSUU4LVxuICB0ZXN0LnNvcnQodW5kZWZpbmVkKTtcbn0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIFY4IGJ1Z1xuICB0ZXN0LnNvcnQobnVsbCk7XG4gIC8vIE9sZCBXZWJLaXRcbn0pIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJHNvcnQpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjUgQXJyYXkucHJvdG90eXBlLnNvcnQoY29tcGFyZWZuKVxuICBzb3J0OiBmdW5jdGlvbiBzb3J0KGNvbXBhcmVmbikge1xuICAgIHJldHVybiBjb21wYXJlZm4gPT09IHVuZGVmaW5lZFxuICAgICAgPyAkc29ydC5jYWxsKHRvT2JqZWN0KHRoaXMpKVxuICAgICAgOiAkc29ydC5jYWxsKHRvT2JqZWN0KHRoaXMpLCBhRnVuY3Rpb24oY29tcGFyZWZuKSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZm9yRWFjaCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgwKTtcbnZhciBTVFJJQ1QgPSByZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uZm9yRWFjaCwgdHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIVNUUklDVCwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTAgLyAxNS40LjQuMTggQXJyYXkucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZm9yRWFjaCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGlzQXJyYXkgPSByZXF1aXJlKCcuL19pcy1hcnJheScpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcmlnaW5hbCkge1xuICB2YXIgQztcbiAgaWYgKGlzQXJyYXkob3JpZ2luYWwpKSB7XG4gICAgQyA9IG9yaWdpbmFsLmNvbnN0cnVjdG9yO1xuICAgIC8vIGNyb3NzLXJlYWxtIGZhbGxiYWNrXG4gICAgaWYgKHR5cGVvZiBDID09ICdmdW5jdGlvbicgJiYgKEMgPT09IEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBpZiAoaXNPYmplY3QoQykpIHtcbiAgICAgIEMgPSBDW1NQRUNJRVNdO1xuICAgICAgaWYgKEMgPT09IG51bGwpIEMgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9IHJldHVybiBDID09PSB1bmRlZmluZWQgPyBBcnJheSA6IEM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkbWFwID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDEpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ubWFwLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTUgLyAxNS40LjQuMTkgQXJyYXkucHJvdG90eXBlLm1hcChjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBtYXA6IGZ1bmN0aW9uIG1hcChjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkbWFwKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmlsdGVyID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDIpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uZmlsdGVyLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNyAvIDE1LjQuNC4yMCBBcnJheS5wcm90b3R5cGUuZmlsdGVyKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRmaWx0ZXIodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRzb21lID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDMpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10uc29tZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjIzIC8gMTUuNC40LjE3IEFycmF5LnByb3RvdHlwZS5zb21lKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIHNvbWU6IGZ1bmN0aW9uIHNvbWUoY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJHNvbWUodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRldmVyeSA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg0KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmV2ZXJ5LCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuNSAvIDE1LjQuNC4xNiBBcnJheS5wcm90b3R5cGUuZXZlcnkoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRldmVyeSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHJlZHVjZSA9IHJlcXVpcmUoJy4vX2FycmF5LXJlZHVjZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoW10ucmVkdWNlLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTggLyAxNS40LjQuMjEgQXJyYXkucHJvdG90eXBlLnJlZHVjZShjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZTogZnVuY3Rpb24gcmVkdWNlKGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pIHtcbiAgICByZXR1cm4gJHJlZHVjZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoLCBhcmd1bWVudHNbMV0sIGZhbHNlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZVJpZ2h0LCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTkgLyAxNS40LjQuMjIgQXJyYXkucHJvdG90eXBlLnJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gWywgaW5pdGlhbFZhbHVlXSlcbiAgcmVkdWNlUmlnaHQ6IGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNhbGxiYWNrZm4gLyogLCBpbml0aWFsVmFsdWUgKi8pIHtcbiAgICByZXR1cm4gJHJlZHVjZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoLCBhcmd1bWVudHNbMV0sIHRydWUpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciAkbmF0aXZlID0gW10uaW5kZXhPZjtcbnZhciBORUdBVElWRV9aRVJPID0gISEkbmF0aXZlICYmIDEgLyBbMV0uaW5kZXhPZigxLCAtMCkgPCAwO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xMSAvIDE1LjQuNC4xNCBBcnJheS5wcm90b3R5cGUuaW5kZXhPZihzZWFyY2hFbGVtZW50IFssIGZyb21JbmRleF0pXG4gIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCA9IDAgKi8pIHtcbiAgICByZXR1cm4gTkVHQVRJVkVfWkVST1xuICAgICAgLy8gY29udmVydCAtMCB0byArMFxuICAgICAgPyAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMFxuICAgICAgOiAkaW5kZXhPZih0aGlzLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyICRuYXRpdmUgPSBbXS5sYXN0SW5kZXhPZjtcbnZhciBORUdBVElWRV9aRVJPID0gISEkbmF0aXZlICYmIDEgLyBbMV0ubGFzdEluZGV4T2YoMSwgLTApIDwgMDtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoTkVHQVRJVkVfWkVSTyB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRuYXRpdmUpKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMTQgLyAxNS40LjQuMTUgQXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSlcbiAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggPSBAWyotMV0gKi8pIHtcbiAgICAvLyBjb252ZXJ0IC0wIHRvICswXG4gICAgaWYgKE5FR0FUSVZFX1pFUk8pIHJldHVybiAkbmF0aXZlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgMDtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCh0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IGxlbmd0aCAtIDE7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSBpbmRleCA9IE1hdGgubWluKGluZGV4LCB0b0ludGVnZXIoYXJndW1lbnRzWzFdKSk7XG4gICAgaWYgKGluZGV4IDwgMCkgaW5kZXggPSBsZW5ndGggKyBpbmRleDtcbiAgICBmb3IgKDtpbmRleCA+PSAwOyBpbmRleC0tKSBpZiAoaW5kZXggaW4gTykgaWYgKE9baW5kZXhdID09PSBzZWFyY2hFbGVtZW50KSByZXR1cm4gaW5kZXggfHwgMDtcbiAgICByZXR1cm4gLTE7XG4gIH1cbn0pO1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBjb3B5V2l0aGluOiByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnY29weVdpdGhpbicpO1xuIiwiLy8gMjIuMS4zLjYgQXJyYXkucHJvdG90eXBlLmZpbGwodmFsdWUsIHN0YXJ0ID0gMCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBmaWxsOiByZXF1aXJlKCcuL19hcnJheS1maWxsJykgfSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmaWxsJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyMi4xLjMuOCBBcnJheS5wcm90b3R5cGUuZmluZChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDUpO1xudmFyIEtFWSA9ICdmaW5kJztcbnZhciBmb3JjZWQgPSB0cnVlO1xuLy8gU2hvdWxkbid0IHNraXAgaG9sZXNcbmlmIChLRVkgaW4gW10pIEFycmF5KDEpW0tFWV0oZnVuY3Rpb24gKCkgeyBmb3JjZWQgPSBmYWxzZTsgfSk7XG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZvcmNlZCwgJ0FycmF5Jywge1xuICBmaW5kOiBmdW5jdGlvbiBmaW5kKGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDYpO1xudmFyIEtFWSA9ICdmaW5kSW5kZXgnO1xudmFyIGZvcmNlZCA9IHRydWU7XG4vLyBTaG91bGRuJ3Qgc2tpcCBob2xlc1xuaWYgKEtFWSBpbiBbXSkgQXJyYXkoMSlbS0VZXShmdW5jdGlvbiAoKSB7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwicmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKSgnQXJyYXknKTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpO1xudmFyICRmbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgJFJlZ0V4cCA9IGdsb2JhbC5SZWdFeHA7XG52YXIgQmFzZSA9ICRSZWdFeHA7XG52YXIgcHJvdG8gPSAkUmVnRXhwLnByb3RvdHlwZTtcbnZhciByZTEgPSAvYS9nO1xudmFyIHJlMiA9IC9hL2c7XG4vLyBcIm5ld1wiIGNyZWF0ZXMgYSBuZXcgb2JqZWN0LCBvbGQgd2Via2l0IGJ1Z2d5IGhlcmVcbnZhciBDT1JSRUNUX05FVyA9IG5ldyAkUmVnRXhwKHJlMSkgIT09IHJlMTtcblxuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgKCFDT1JSRUNUX05FVyB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmUyW3JlcXVpcmUoJy4vX3drcycpKCdtYXRjaCcpXSA9IGZhbHNlO1xuICAvLyBSZWdFeHAgY29uc3RydWN0b3IgY2FuIGFsdGVyIGZsYWdzIGFuZCBJc1JlZ0V4cCB3b3JrcyBjb3JyZWN0IHdpdGggQEBtYXRjaFxuICByZXR1cm4gJFJlZ0V4cChyZTEpICE9IHJlMSB8fCAkUmVnRXhwKHJlMikgPT0gcmUyIHx8ICRSZWdFeHAocmUxLCAnaScpICE9ICcvYS9pJztcbn0pKSkge1xuICAkUmVnRXhwID0gZnVuY3Rpb24gUmVnRXhwKHAsIGYpIHtcbiAgICB2YXIgdGlSRSA9IHRoaXMgaW5zdGFuY2VvZiAkUmVnRXhwO1xuICAgIHZhciBwaVJFID0gaXNSZWdFeHAocCk7XG4gICAgdmFyIGZpVSA9IGYgPT09IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gIXRpUkUgJiYgcGlSRSAmJiBwLmNvbnN0cnVjdG9yID09PSAkUmVnRXhwICYmIGZpVSA/IHBcbiAgICAgIDogaW5oZXJpdElmUmVxdWlyZWQoQ09SUkVDVF9ORVdcbiAgICAgICAgPyBuZXcgQmFzZShwaVJFICYmICFmaVUgPyBwLnNvdXJjZSA6IHAsIGYpXG4gICAgICAgIDogQmFzZSgocGlSRSA9IHAgaW5zdGFuY2VvZiAkUmVnRXhwKSA/IHAuc291cmNlIDogcCwgcGlSRSAmJiBmaVUgPyAkZmxhZ3MuY2FsbChwKSA6IGYpXG4gICAgICAsIHRpUkUgPyB0aGlzIDogcHJvdG8sICRSZWdFeHApO1xuICB9O1xuICB2YXIgcHJveHkgPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAga2V5IGluICRSZWdFeHAgfHwgZFAoJFJlZ0V4cCwga2V5LCB7XG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEJhc2Vba2V5XTsgfSxcbiAgICAgIHNldDogZnVuY3Rpb24gKGl0KSB7IEJhc2Vba2V5XSA9IGl0OyB9XG4gICAgfSk7XG4gIH07XG4gIGZvciAodmFyIGtleXMgPSBnT1BOKEJhc2UpLCBpID0gMDsga2V5cy5sZW5ndGggPiBpOykgcHJveHkoa2V5c1tpKytdKTtcbiAgcHJvdG8uY29uc3RydWN0b3IgPSAkUmVnRXhwO1xuICAkUmVnRXhwLnByb3RvdHlwZSA9IHByb3RvO1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgJ1JlZ0V4cCcsICRSZWdFeHApO1xufVxuXG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdSZWdFeHAnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4vZXM2LnJlZ2V4cC5mbGFncycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSAvLi9bVE9fU1RSSU5HXTtcblxudmFyIGRlZmluZSA9IGZ1bmN0aW9uIChmbikge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKFJlZ0V4cC5wcm90b3R5cGUsIFRPX1NUUklORywgZm4sIHRydWUpO1xufTtcblxuLy8gMjEuMi41LjE0IFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcoKVxuaWYgKHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkgeyByZXR1cm4gJHRvU3RyaW5nLmNhbGwoeyBzb3VyY2U6ICdhJywgZmxhZ3M6ICdiJyB9KSAhPSAnL2EvYic7IH0pKSB7XG4gIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgUiA9IGFuT2JqZWN0KHRoaXMpO1xuICAgIHJldHVybiAnLycuY29uY2F0KFIuc291cmNlLCAnLycsXG4gICAgICAnZmxhZ3MnIGluIFIgPyBSLmZsYWdzIDogIURFU0NSSVBUT1JTICYmIFIgaW5zdGFuY2VvZiBSZWdFeHAgPyAkZmxhZ3MuY2FsbChSKSA6IHVuZGVmaW5lZCk7XG4gIH0pO1xuLy8gRkY0NC0gUmVnRXhwI3RvU3RyaW5nIGhhcyBhIHdyb25nIG5hbWVcbn0gZWxzZSBpZiAoJHRvU3RyaW5nLm5hbWUgIT0gVE9fU1RSSU5HKSB7XG4gIGRlZmluZShmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJHRvU3RyaW5nLmNhbGwodGhpcyk7XG4gIH0pO1xufVxuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFMgPSAvXFwkKFskJmAnXXxcXGRcXGQ/fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJmAnXXxcXGRcXGQ/KS9nO1xuXG52YXIgbWF5YmVUb1N0cmluZyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG5cbi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFJFUExBQ0UsICRyZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBmbi5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAocmVnZXhwLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHJlcGxhY2UsIHJlZ2V4cCwgdGhpcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpO1xuICAgICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDtcbiAgICAgIGlmIChnbG9iYWwpIHtcbiAgICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrO1xuICAgICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrO1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cbiAgICAgIHZhciBhY2N1bXVsYXRlZFJlc3VsdCA9ICcnO1xuICAgICAgdmFyIG5leHRTb3VyY2VQb3NpdGlvbiA9IDA7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXIocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPj0gbmV4dFNvdXJjZVBvc2l0aW9uKSB7XG4gICAgICAgICAgYWNjdW11bGF0ZWRSZXN1bHQgKz0gUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRlZFJlc3VsdCArIFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG5cbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb25cbiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkge1xuICAgIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEO1xuICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICAgIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MUztcbiAgICB9XG4gICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHtcbiAgICAgIHZhciBjYXB0dXJlO1xuICAgICAgc3dpdGNoIChjaC5jaGFyQXQoMCkpIHtcbiAgICAgICAgY2FzZSAnJCc6IHJldHVybiAnJCc7XG4gICAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgICAgY2FzZSAnYCc6IHJldHVybiBzdHIuc2xpY2UoMCwgcG9zaXRpb24pO1xuICAgICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpO1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tjaC5zbGljZSgxLCAtMSldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgICAgdmFyIG4gPSArY2g7XG4gICAgICAgICAgaWYgKG4gPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTtcbiAgICAgICAgICAgIGlmIChmID09PSAwKSByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgICB9XG4gICAgICByZXR1cm4gY2FwdHVyZSA9PT0gdW5kZWZpbmVkID8gJycgOiBjYXB0dXJlO1xuICAgIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkbWluID0gTWF0aC5taW47XG52YXIgJHB1c2ggPSBbXS5wdXNoO1xudmFyICRTUExJVCA9ICdzcGxpdCc7XG52YXIgTEVOR1RIID0gJ2xlbmd0aCc7XG52YXIgTEFTVF9JTkRFWCA9ICdsYXN0SW5kZXgnO1xudmFyIE1BWF9VSU5UMzIgPSAweGZmZmZmZmZmO1xuXG4vLyBiYWJlbC1taW5pZnkgdHJhbnNwaWxlcyBSZWdFeHAoJ3gnLCAneScpIC0+IC94L3kgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyIFNVUFBPUlRTX1kgPSAhZmFpbHMoZnVuY3Rpb24gKCkgeyBSZWdFeHAoTUFYX1VJTlQzMiwgJ3knKTsgfSk7XG5cbi8vIEBAc3BsaXQgbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc3BsaXQnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgU1BMSVQsICRzcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHZhciBpbnRlcm5hbFNwbGl0O1xuICBpZiAoXG4gICAgJ2FiYmMnWyRTUExJVF0oLyhiKSovKVsxXSA9PSAnYycgfHxcbiAgICAndGVzdCdbJFNQTElUXSgvKD86KS8sIC0xKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnYWInWyRTUExJVF0oLyg/OmFiKSovKVtMRU5HVEhdICE9IDIgfHxcbiAgICAnLidbJFNQTElUXSgvKC4/KSguPykvKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnLidbJFNQTElUXSgvKCkoKS8pW0xFTkdUSF0gPiAxIHx8XG4gICAgJydbJFNQTElUXSgvLj8vKVtMRU5HVEhdXG4gICkge1xuICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdFxuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIHN0cmluZyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCkgcmV0dXJuIFtdO1xuICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXRcbiAgICAgIGlmICghaXNSZWdFeHAoc2VwYXJhdG9yKSkgcmV0dXJuICRzcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpO1xuICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHNwbGl0TGltaXQgPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwO1xuICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICB2YXIgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aDtcbiAgICAgIHdoaWxlIChtYXRjaCA9IHJlZ2V4cEV4ZWMuY2FsbChzZXBhcmF0b3JDb3B5LCBzdHJpbmcpKSB7XG4gICAgICAgIGxhc3RJbmRleCA9IHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF07XG4gICAgICAgIGlmIChsYXN0SW5kZXggPiBsYXN0TGFzdEluZGV4KSB7XG4gICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgaWYgKG1hdGNoW0xFTkdUSF0gPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nW0xFTkdUSF0pICRwdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpO1xuICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXVtMRU5HVEhdO1xuICAgICAgICAgIGxhc3RMYXN0SW5kZXggPSBsYXN0SW5kZXg7XG4gICAgICAgICAgaWYgKG91dHB1dFtMRU5HVEhdID49IHNwbGl0TGltaXQpIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdID09PSBtYXRjaC5pbmRleCkgc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXSsrOyAvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wXG4gICAgICB9XG4gICAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nW0xFTkdUSF0pIHtcbiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvckNvcHkudGVzdCgnJykpIG91dHB1dC5wdXNoKCcnKTtcbiAgICAgIH0gZWxzZSBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgICAgcmV0dXJuIG91dHB1dFtMRU5HVEhdID4gc3BsaXRMaW1pdCA/IG91dHB1dC5zbGljZSgwLCBzcGxpdExpbWl0KSA6IG91dHB1dDtcbiAgICB9O1xuICAvLyBDaGFrcmEsIFY4XG4gIH0gZWxzZSBpZiAoJzAnWyRTUExJVF0odW5kZWZpbmVkLCAwKVtMRU5HVEhdKSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICByZXR1cm4gc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDAgPyBbXSA6ICRzcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9ICRzcGxpdDtcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUuc3BsaXRgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3BsaXRcbiAgICBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7XG4gICAgICB2YXIgc3BsaXR0ZXIgPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTtcbiAgICAgIHJldHVybiBzcGxpdHRlciAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gc3BsaXR0ZXIuY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KVxuICAgICAgICA6IGludGVybmFsU3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdFxuICAgIC8vXG4gICAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydFxuICAgIC8vIHRoZSAneScgZmxhZy5cbiAgICBmdW5jdGlvbiAocmVnZXhwLCBsaW1pdCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShpbnRlcm5hbFNwbGl0LCByZWdleHAsIHRoaXMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSAkc3BsaXQpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3RvcihyeCwgUmVnRXhwKTtcblxuICAgICAgdmFyIHVuaWNvZGVNYXRjaGluZyA9IHJ4LnVuaWNvZGU7XG4gICAgICB2YXIgZmxhZ3MgPSAocnguaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAocngubXVsdGlsaW5lID8gJ20nIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChyeC51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChTVVBQT1JUU19ZID8gJ3knIDogJ2cnKTtcblxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIFMgc2xpY2luZywgdG9cbiAgICAgIC8vIHNpbXVsYXRlIHRoZSAneScgZmxhZy5cbiAgICAgIHZhciBzcGxpdHRlciA9IG5ldyBDKFNVUFBPUlRTX1kgPyByeCA6ICdeKD86JyArIHJ4LnNvdXJjZSArICcpJywgZmxhZ3MpO1xuICAgICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7XG4gICAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107XG4gICAgICBpZiAoUy5sZW5ndGggPT09IDApIHJldHVybiBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgUykgPT09IG51bGwgPyBbU10gOiBbXTtcbiAgICAgIHZhciBwID0gMDtcbiAgICAgIHZhciBxID0gMDtcbiAgICAgIHZhciBBID0gW107XG4gICAgICB3aGlsZSAocSA8IFMubGVuZ3RoKSB7XG4gICAgICAgIHNwbGl0dGVyLmxhc3RJbmRleCA9IFNVUFBPUlRTX1kgPyBxIDogMDtcbiAgICAgICAgdmFyIHogPSBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgU1VQUE9SVFNfWSA/IFMgOiBTLnNsaWNlKHEpKTtcbiAgICAgICAgdmFyIGU7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB6ID09PSBudWxsIHx8XG4gICAgICAgICAgKGUgPSAkbWluKHRvTGVuZ3RoKHNwbGl0dGVyLmxhc3RJbmRleCArIChTVVBQT1JUU19ZID8gMCA6IHEpKSwgUy5sZW5ndGgpKSA9PT0gcFxuICAgICAgICApIHtcbiAgICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpO1xuICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB6Lmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgQS5wdXNoKHpbaV0pO1xuICAgICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBO1xuICAgICAgICAgIH1cbiAgICAgICAgICBxID0gcCA9IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEEucHVzaChTLnNsaWNlKHApKTtcbiAgICAgIHJldHVybiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKS5zZXQ7XG52YXIgbWljcm90YXNrID0gcmVxdWlyZSgnLi9fbWljcm90YXNrJykoKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eU1vZHVsZSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcbnZhciBwZXJmb3JtID0gcmVxdWlyZSgnLi9fcGVyZm9ybScpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBwcm9taXNlUmVzb2x2ZSA9IHJlcXVpcmUoJy4vX3Byb21pc2UtcmVzb2x2ZScpO1xudmFyIFBST01JU0UgPSAnUHJvbWlzZSc7XG52YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbnZhciBwcm9jZXNzID0gZ2xvYmFsLnByb2Nlc3M7XG52YXIgdmVyc2lvbnMgPSBwcm9jZXNzICYmIHByb2Nlc3MudmVyc2lvbnM7XG52YXIgdjggPSB2ZXJzaW9ucyAmJiB2ZXJzaW9ucy52OCB8fCAnJztcbnZhciAkUHJvbWlzZSA9IGdsb2JhbFtQUk9NSVNFXTtcbnZhciBpc05vZGUgPSBjbGFzc29mKHByb2Nlc3MpID09ICdwcm9jZXNzJztcbnZhciBlbXB0eSA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBJbnRlcm5hbCwgbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5LCBPd25Qcm9taXNlQ2FwYWJpbGl0eSwgV3JhcHBlcjtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmY7XG5cbnZhciBVU0VfTkFUSVZFID0gISFmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgLy8gY29ycmVjdCBzdWJjbGFzc2luZyB3aXRoIEBAc3BlY2llcyBzdXBwb3J0XG4gICAgdmFyIHByb21pc2UgPSAkUHJvbWlzZS5yZXNvbHZlKDEpO1xuICAgIHZhciBGYWtlUHJvbWlzZSA9IChwcm9taXNlLmNvbnN0cnVjdG9yID0ge30pW3JlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyldID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgICAgIGV4ZWMoZW1wdHksIGVtcHR5KTtcbiAgICB9O1xuICAgIC8vIHVuaGFuZGxlZCByZWplY3Rpb25zIHRyYWNraW5nIHN1cHBvcnQsIE5vZGVKUyBQcm9taXNlIHdpdGhvdXQgaXQgZmFpbHMgQEBzcGVjaWVzIHRlc3RcbiAgICByZXR1cm4gKGlzTm9kZSB8fCB0eXBlb2YgUHJvbWlzZVJlamVjdGlvbkV2ZW50ID09ICdmdW5jdGlvbicpXG4gICAgICAmJiBwcm9taXNlLnRoZW4oZW1wdHkpIGluc3RhbmNlb2YgRmFrZVByb21pc2VcbiAgICAgIC8vIHY4IDYuNiAoTm9kZSAxMCBhbmQgQ2hyb21lIDY2KSBoYXZlIGEgYnVnIHdpdGggcmVzb2x2aW5nIGN1c3RvbSB0aGVuYWJsZXNcbiAgICAgIC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTgzMDU2NVxuICAgICAgLy8gd2UgY2FuJ3QgZGV0ZWN0IGl0IHN5bmNocm9ub3VzbHksIHNvIGp1c3QgY2hlY2sgdmVyc2lvbnNcbiAgICAgICYmIHY4LmluZGV4T2YoJzYuNicpICE9PSAwXG4gICAgICAmJiB1c2VyQWdlbnQuaW5kZXhPZignQ2hyb21lLzY2JykgPT09IC0xO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn0oKTtcblxuLy8gaGVscGVyc1xudmFyIGlzVGhlbmFibGUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIHRoZW47XG4gIHJldHVybiBpc09iamVjdChpdCkgJiYgdHlwZW9mICh0aGVuID0gaXQudGhlbikgPT0gJ2Z1bmN0aW9uJyA/IHRoZW4gOiBmYWxzZTtcbn07XG52YXIgbm90aWZ5ID0gZnVuY3Rpb24gKHByb21pc2UsIGlzUmVqZWN0KSB7XG4gIGlmIChwcm9taXNlLl9uKSByZXR1cm47XG4gIHByb21pc2UuX24gPSB0cnVlO1xuICB2YXIgY2hhaW4gPSBwcm9taXNlLl9jO1xuICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIG9rID0gcHJvbWlzZS5fcyA9PSAxO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgcnVuID0gZnVuY3Rpb24gKHJlYWN0aW9uKSB7XG4gICAgICB2YXIgaGFuZGxlciA9IG9rID8gcmVhY3Rpb24ub2sgOiByZWFjdGlvbi5mYWlsO1xuICAgICAgdmFyIHJlc29sdmUgPSByZWFjdGlvbi5yZXNvbHZlO1xuICAgICAgdmFyIHJlamVjdCA9IHJlYWN0aW9uLnJlamVjdDtcbiAgICAgIHZhciBkb21haW4gPSByZWFjdGlvbi5kb21haW47XG4gICAgICB2YXIgcmVzdWx0LCB0aGVuLCBleGl0ZWQ7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgIGlmICghb2spIHtcbiAgICAgICAgICAgIGlmIChwcm9taXNlLl9oID09IDIpIG9uSGFuZGxlVW5oYW5kbGVkKHByb21pc2UpO1xuICAgICAgICAgICAgcHJvbWlzZS5faCA9IDE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChoYW5kbGVyID09PSB0cnVlKSByZXN1bHQgPSB2YWx1ZTtcbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChkb21haW4pIGRvbWFpbi5lbnRlcigpO1xuICAgICAgICAgICAgcmVzdWx0ID0gaGFuZGxlcih2YWx1ZSk7IC8vIG1heSB0aHJvd1xuICAgICAgICAgICAgaWYgKGRvbWFpbikge1xuICAgICAgICAgICAgICBkb21haW4uZXhpdCgpO1xuICAgICAgICAgICAgICBleGl0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAocmVzdWx0ID09PSByZWFjdGlvbi5wcm9taXNlKSB7XG4gICAgICAgICAgICByZWplY3QoVHlwZUVycm9yKCdQcm9taXNlLWNoYWluIGN5Y2xlJykpO1xuICAgICAgICAgIH0gZWxzZSBpZiAodGhlbiA9IGlzVGhlbmFibGUocmVzdWx0KSkge1xuICAgICAgICAgICAgdGhlbi5jYWxsKHJlc3VsdCwgcmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgICAgICB9IGVsc2UgcmVzb2x2ZShyZXN1bHQpO1xuICAgICAgICB9IGVsc2UgcmVqZWN0KHZhbHVlKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGRvbWFpbiAmJiAhZXhpdGVkKSBkb21haW4uZXhpdCgpO1xuICAgICAgICByZWplY3QoZSk7XG4gICAgICB9XG4gICAgfTtcbiAgICB3aGlsZSAoY2hhaW4ubGVuZ3RoID4gaSkgcnVuKGNoYWluW2krK10pOyAvLyB2YXJpYWJsZSBsZW5ndGggLSBjYW4ndCB1c2UgZm9yRWFjaFxuICAgIHByb21pc2UuX2MgPSBbXTtcbiAgICBwcm9taXNlLl9uID0gZmFsc2U7XG4gICAgaWYgKGlzUmVqZWN0ICYmICFwcm9taXNlLl9oKSBvblVuaGFuZGxlZChwcm9taXNlKTtcbiAgfSk7XG59O1xudmFyIG9uVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciB2YWx1ZSA9IHByb21pc2UuX3Y7XG4gICAgdmFyIHVuaGFuZGxlZCA9IGlzVW5oYW5kbGVkKHByb21pc2UpO1xuICAgIHZhciByZXN1bHQsIGhhbmRsZXIsIGNvbnNvbGU7XG4gICAgaWYgKHVuaGFuZGxlZCkge1xuICAgICAgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChpc05vZGUpIHtcbiAgICAgICAgICBwcm9jZXNzLmVtaXQoJ3VuaGFuZGxlZFJlamVjdGlvbicsIHZhbHVlLCBwcm9taXNlKTtcbiAgICAgICAgfSBlbHNlIGlmIChoYW5kbGVyID0gZ2xvYmFsLm9udW5oYW5kbGVkcmVqZWN0aW9uKSB7XG4gICAgICAgICAgaGFuZGxlcih7IHByb21pc2U6IHByb21pc2UsIHJlYXNvbjogdmFsdWUgfSk7XG4gICAgICAgIH0gZWxzZSBpZiAoKGNvbnNvbGUgPSBnbG9iYWwuY29uc29sZSkgJiYgY29uc29sZS5lcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuaGFuZGxlZCBwcm9taXNlIHJlamVjdGlvbicsIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICAvLyBCcm93c2VycyBzaG91bGQgbm90IHRyaWdnZXIgYHJlamVjdGlvbkhhbmRsZWRgIGV2ZW50IGlmIGl0IHdhcyBoYW5kbGVkIGhlcmUsIE5vZGVKUyAtIHNob3VsZFxuICAgICAgcHJvbWlzZS5faCA9IGlzTm9kZSB8fCBpc1VuaGFuZGxlZChwcm9taXNlKSA/IDIgOiAxO1xuICAgIH0gcHJvbWlzZS5fYSA9IHVuZGVmaW5lZDtcbiAgICBpZiAodW5oYW5kbGVkICYmIHJlc3VsdC5lKSB0aHJvdyByZXN1bHQudjtcbiAgfSk7XG59O1xudmFyIGlzVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgcmV0dXJuIHByb21pc2UuX2ggIT09IDEgJiYgKHByb21pc2UuX2EgfHwgcHJvbWlzZS5fYykubGVuZ3RoID09PSAwO1xufTtcbnZhciBvbkhhbmRsZVVuaGFuZGxlZCA9IGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gIHRhc2suY2FsbChnbG9iYWwsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgaGFuZGxlcjtcbiAgICBpZiAoaXNOb2RlKSB7XG4gICAgICBwcm9jZXNzLmVtaXQoJ3JlamVjdGlvbkhhbmRsZWQnLCBwcm9taXNlKTtcbiAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub25yZWplY3Rpb25oYW5kbGVkKSB7XG4gICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiBwcm9taXNlLl92IH0pO1xuICAgIH1cbiAgfSk7XG59O1xudmFyICRyZWplY3QgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgdmFyIHByb21pc2UgPSB0aGlzO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHByb21pc2UuX3YgPSB2YWx1ZTtcbiAgcHJvbWlzZS5fcyA9IDI7XG4gIGlmICghcHJvbWlzZS5fYSkgcHJvbWlzZS5fYSA9IHByb21pc2UuX2Muc2xpY2UoKTtcbiAgbm90aWZ5KHByb21pc2UsIHRydWUpO1xufTtcbnZhciAkcmVzb2x2ZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIHZhciB0aGVuO1xuICBpZiAocHJvbWlzZS5fZCkgcmV0dXJuO1xuICBwcm9taXNlLl9kID0gdHJ1ZTtcbiAgcHJvbWlzZSA9IHByb21pc2UuX3cgfHwgcHJvbWlzZTsgLy8gdW53cmFwXG4gIHRyeSB7XG4gICAgaWYgKHByb21pc2UgPT09IHZhbHVlKSB0aHJvdyBUeXBlRXJyb3IoXCJQcm9taXNlIGNhbid0IGJlIHJlc29sdmVkIGl0c2VsZlwiKTtcbiAgICBpZiAodGhlbiA9IGlzVGhlbmFibGUodmFsdWUpKSB7XG4gICAgICBtaWNyb3Rhc2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgd3JhcHBlciA9IHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9OyAvLyB3cmFwXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgdGhlbi5jYWxsKHZhbHVlLCBjdHgoJHJlc29sdmUsIHdyYXBwZXIsIDEpLCBjdHgoJHJlamVjdCwgd3JhcHBlciwgMSkpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgJHJlamVjdC5jYWxsKHdyYXBwZXIsIGUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICAgICAgcHJvbWlzZS5fcyA9IDE7XG4gICAgICBub3RpZnkocHJvbWlzZSwgZmFsc2UpO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge1xuICAgICRyZWplY3QuY2FsbCh7IF93OiBwcm9taXNlLCBfZDogZmFsc2UgfSwgZSk7IC8vIHdyYXBcbiAgfVxufTtcblxuLy8gY29uc3RydWN0b3IgcG9seWZpbGxcbmlmICghVVNFX05BVElWRSkge1xuICAvLyAyNS40LjMuMSBQcm9taXNlKGV4ZWN1dG9yKVxuICAkUHJvbWlzZSA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICBhbkluc3RhbmNlKHRoaXMsICRQcm9taXNlLCBQUk9NSVNFLCAnX2gnKTtcbiAgICBhRnVuY3Rpb24oZXhlY3V0b3IpO1xuICAgIEludGVybmFsLmNhbGwodGhpcyk7XG4gICAgdHJ5IHtcbiAgICAgIGV4ZWN1dG9yKGN0eCgkcmVzb2x2ZSwgdGhpcywgMSksIGN0eCgkcmVqZWN0LCB0aGlzLCAxKSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAkcmVqZWN0LmNhbGwodGhpcywgZXJyKTtcbiAgICB9XG4gIH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICBJbnRlcm5hbCA9IGZ1bmN0aW9uIFByb21pc2UoZXhlY3V0b3IpIHtcbiAgICB0aGlzLl9jID0gW107ICAgICAgICAgICAgIC8vIDwtIGF3YWl0aW5nIHJlYWN0aW9uc1xuICAgIHRoaXMuX2EgPSB1bmRlZmluZWQ7ICAgICAgLy8gPC0gY2hlY2tlZCBpbiBpc1VuaGFuZGxlZCByZWFjdGlvbnNcbiAgICB0aGlzLl9zID0gMDsgICAgICAgICAgICAgIC8vIDwtIHN0YXRlXG4gICAgdGhpcy5fZCA9IGZhbHNlOyAgICAgICAgICAvLyA8LSBkb25lXG4gICAgdGhpcy5fdiA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSB2YWx1ZVxuICAgIHRoaXMuX2ggPSAwOyAgICAgICAgICAgICAgLy8gPC0gcmVqZWN0aW9uIHN0YXRlLCAwIC0gZGVmYXVsdCwgMSAtIGhhbmRsZWQsIDIgLSB1bmhhbmRsZWRcbiAgICB0aGlzLl9uID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIG5vdGlmeVxuICB9O1xuICBJbnRlcm5hbC5wcm90b3R5cGUgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKSgkUHJvbWlzZS5wcm90b3R5cGUsIHtcbiAgICAvLyAyNS40LjUuMyBQcm9taXNlLnByb3RvdHlwZS50aGVuKG9uRnVsZmlsbGVkLCBvblJlamVjdGVkKVxuICAgIHRoZW46IGZ1bmN0aW9uIHRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpIHtcbiAgICAgIHZhciByZWFjdGlvbiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkUHJvbWlzZSkpO1xuICAgICAgcmVhY3Rpb24ub2sgPSB0eXBlb2Ygb25GdWxmaWxsZWQgPT0gJ2Z1bmN0aW9uJyA/IG9uRnVsZmlsbGVkIDogdHJ1ZTtcbiAgICAgIHJlYWN0aW9uLmZhaWwgPSB0eXBlb2Ygb25SZWplY3RlZCA9PSAnZnVuY3Rpb24nICYmIG9uUmVqZWN0ZWQ7XG4gICAgICByZWFjdGlvbi5kb21haW4gPSBpc05vZGUgPyBwcm9jZXNzLmRvbWFpbiA6IHVuZGVmaW5lZDtcbiAgICAgIHRoaXMuX2MucHVzaChyZWFjdGlvbik7XG4gICAgICBpZiAodGhpcy5fYSkgdGhpcy5fYS5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9zKSBub3RpZnkodGhpcywgZmFsc2UpO1xuICAgICAgcmV0dXJuIHJlYWN0aW9uLnByb21pc2U7XG4gICAgfSxcbiAgICAvLyAyNS40LjUuMSBQcm9taXNlLnByb3RvdHlwZS5jYXRjaChvblJlamVjdGVkKVxuICAgICdjYXRjaCc6IGZ1bmN0aW9uIChvblJlamVjdGVkKSB7XG4gICAgICByZXR1cm4gdGhpcy50aGVuKHVuZGVmaW5lZCwgb25SZWplY3RlZCk7XG4gICAgfVxuICB9KTtcbiAgT3duUHJvbWlzZUNhcGFiaWxpdHkgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHByb21pc2UgPSBuZXcgSW50ZXJuYWwoKTtcbiAgICB0aGlzLnByb21pc2UgPSBwcm9taXNlO1xuICAgIHRoaXMucmVzb2x2ZSA9IGN0eCgkcmVzb2x2ZSwgcHJvbWlzZSwgMSk7XG4gICAgdGhpcy5yZWplY3QgPSBjdHgoJHJlamVjdCwgcHJvbWlzZSwgMSk7XG4gIH07XG4gIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlLmYgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uIChDKSB7XG4gICAgcmV0dXJuIEMgPT09ICRQcm9taXNlIHx8IEMgPT09IFdyYXBwZXJcbiAgICAgID8gbmV3IE93blByb21pc2VDYXBhYmlsaXR5KEMpXG4gICAgICA6IG5ld0dlbmVyaWNQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBQcm9taXNlOiAkUHJvbWlzZSB9KTtcbnJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJykoJFByb21pc2UsIFBST01JU0UpO1xucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShQUk9NSVNFKTtcbldyYXBwZXIgPSByZXF1aXJlKCcuL19jb3JlJylbUFJPTUlTRV07XG5cbi8vIHN0YXRpY3NcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjUgUHJvbWlzZS5yZWplY3QocilcbiAgcmVqZWN0OiBmdW5jdGlvbiByZWplY3Qocikge1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkodGhpcyk7XG4gICAgdmFyICQkcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgJCRyZWplY3Qocik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIChMSUJSQVJZIHx8ICFVU0VfTkFUSVZFKSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNiBQcm9taXNlLnJlc29sdmUoeClcbiAgcmVzb2x2ZTogZnVuY3Rpb24gcmVzb2x2ZSh4KSB7XG4gICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKExJQlJBUlkgJiYgdGhpcyA9PT0gV3JhcHBlciA/ICRQcm9taXNlIDogdGhpcywgeCk7XG4gIH1cbn0pO1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKFVTRV9OQVRJVkUgJiYgcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikge1xuICAkUHJvbWlzZS5hbGwoaXRlcilbJ2NhdGNoJ10oZW1wdHkpO1xufSkpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC4xIFByb21pc2UuYWxsKGl0ZXJhYmxlKVxuICBhbGw6IGZ1bmN0aW9uIGFsbChpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZXNvbHZlID0gY2FwYWJpbGl0eS5yZXNvbHZlO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHJlbWFpbmluZyA9IDE7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIHZhciAkaW5kZXggPSBpbmRleCsrO1xuICAgICAgICB2YXIgYWxyZWFkeUNhbGxlZCA9IGZhbHNlO1xuICAgICAgICB2YWx1ZXMucHVzaCh1bmRlZmluZWQpO1xuICAgICAgICByZW1haW5pbmcrKztcbiAgICAgICAgQy5yZXNvbHZlKHByb21pc2UpLnRoZW4oZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGFscmVhZHlDYWxsZWQpIHJldHVybjtcbiAgICAgICAgICBhbHJlYWR5Q2FsbGVkID0gdHJ1ZTtcbiAgICAgICAgICB2YWx1ZXNbJGluZGV4XSA9IHZhbHVlO1xuICAgICAgICAgIC0tcmVtYWluaW5nIHx8IHJlc29sdmUodmFsdWVzKTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9LFxuICAvLyAyNS40LjQuNCBQcm9taXNlLnJhY2UoaXRlcmFibGUpXG4gIHJhY2U6IGZ1bmN0aW9uIHJhY2UoaXRlcmFibGUpIHtcbiAgICB2YXIgQyA9IHRoaXM7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eShDKTtcbiAgICB2YXIgcmVqZWN0ID0gY2FwYWJpbGl0eS5yZWplY3Q7XG4gICAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oZnVuY3Rpb24gKCkge1xuICAgICAgZm9yT2YoaXRlcmFibGUsIGZhbHNlLCBmdW5jdGlvbiAocHJvbWlzZSkge1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihjYXBhYmlsaXR5LnJlc29sdmUsIHJlamVjdCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBpZiAocmVzdWx0LmUpIHJlamVjdChyZXN1bHQudik7XG4gICAgcmV0dXJuIGNhcGFiaWxpdHkucHJvbWlzZTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgd2VhayA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24td2VhaycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIFdFQUtfU0VUID0gJ1dlYWtTZXQnO1xuXG4vLyAyMy40IFdlYWtTZXQgT2JqZWN0c1xucmVxdWlyZSgnLi9fY29sbGVjdGlvbicpKFdFQUtfU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBXZWFrU2V0KCkgeyByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTsgfTtcbn0sIHtcbiAgLy8gMjMuNC4zLjEgV2Vha1NldC5wcm90b3R5cGUuYWRkKHZhbHVlKVxuICBhZGQ6IGZ1bmN0aW9uIGFkZCh2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX1NFVCksIHZhbHVlLCB0cnVlKTtcbiAgfVxufSwgd2VhaywgZmFsc2UsIHRydWUpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGJ1ZmZlciA9IHJlcXVpcmUoJy4vX3R5cGVkLWJ1ZmZlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgQXJyYXlCdWZmZXIgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5BcnJheUJ1ZmZlcjtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgJEFycmF5QnVmZmVyID0gYnVmZmVyLkFycmF5QnVmZmVyO1xudmFyICREYXRhVmlldyA9IGJ1ZmZlci5EYXRhVmlldztcbnZhciAkaXNWaWV3ID0gJHR5cGVkLkFCViAmJiBBcnJheUJ1ZmZlci5pc1ZpZXc7XG52YXIgJHNsaWNlID0gJEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZTtcbnZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG52YXIgQVJSQVlfQlVGRkVSID0gJ0FycmF5QnVmZmVyJztcblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoQXJyYXlCdWZmZXIgIT09ICRBcnJheUJ1ZmZlciksIHsgQXJyYXlCdWZmZXI6ICRBcnJheUJ1ZmZlciB9KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhJHR5cGVkLkNPTlNUUiwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuMy4xIEFycmF5QnVmZmVyLmlzVmlldyhhcmcpXG4gIGlzVmlldzogZnVuY3Rpb24gaXNWaWV3KGl0KSB7XG4gICAgcmV0dXJuICRpc1ZpZXcgJiYgJGlzVmlldyhpdCkgfHwgaXNPYmplY3QoaXQpICYmIFZJRVcgaW4gaXQ7XG4gIH1cbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuVSArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gIW5ldyAkQXJyYXlCdWZmZXIoMikuc2xpY2UoMSwgdW5kZWZpbmVkKS5ieXRlTGVuZ3RoO1xufSksIEFSUkFZX0JVRkZFUiwge1xuICAvLyAyNC4xLjQuMyBBcnJheUJ1ZmZlci5wcm90b3R5cGUuc2xpY2Uoc3RhcnQsIGVuZClcbiAgc2xpY2U6IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICBpZiAoJHNsaWNlICE9PSB1bmRlZmluZWQgJiYgZW5kID09PSB1bmRlZmluZWQpIHJldHVybiAkc2xpY2UuY2FsbChhbk9iamVjdCh0aGlzKSwgc3RhcnQpOyAvLyBGRiBmaXhcbiAgICB2YXIgbGVuID0gYW5PYmplY3QodGhpcykuYnl0ZUxlbmd0aDtcbiAgICB2YXIgZmlyc3QgPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gICAgdmFyIGZpbiA9IHRvQWJzb2x1dGVJbmRleChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbiA6IGVuZCwgbGVuKTtcbiAgICB2YXIgcmVzdWx0ID0gbmV3IChzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgJEFycmF5QnVmZmVyKSkodG9MZW5ndGgoZmluIC0gZmlyc3QpKTtcbiAgICB2YXIgdmlld1MgPSBuZXcgJERhdGFWaWV3KHRoaXMpO1xuICAgIHZhciB2aWV3VCA9IG5ldyAkRGF0YVZpZXcocmVzdWx0KTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHdoaWxlIChmaXJzdCA8IGZpbikge1xuICAgICAgdmlld1Quc2V0VWludDgoaW5kZXgrKywgdmlld1MuZ2V0VWludDgoZmlyc3QrKykpO1xuICAgIH0gcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoQVJSQVlfQlVGRkVSKTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL190eXBlZCcpLkFCViwge1xuICBEYXRhVmlldzogcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJykuRGF0YVZpZXdcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDgnLCAxLCBmdW5jdGlvbiAoaW5pdCkge1xuICByZXR1cm4gZnVuY3Rpb24gVWludDhBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OENsYW1wZWRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSwgdHJ1ZSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MTZBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQzMkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDY0JywgOCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0NjRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCIvLyAyNi4xLjEgUmVmbGVjdC5hcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgckFwcGx5ID0gKHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3QgfHwge30pLmFwcGx5O1xudmFyIGZBcHBseSA9IEZ1bmN0aW9uLmFwcGx5O1xuLy8gTVMgRWRnZSBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgckFwcGx5KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG59KSwgJ1JlZmxlY3QnLCB7XG4gIGFwcGx5OiBmdW5jdGlvbiBhcHBseSh0YXJnZXQsIHRoaXNBcmd1bWVudCwgYXJndW1lbnRzTGlzdCkge1xuICAgIHZhciBUID0gYUZ1bmN0aW9uKHRhcmdldCk7XG4gICAgdmFyIEwgPSBhbk9iamVjdChhcmd1bWVudHNMaXN0KTtcbiAgICByZXR1cm4gckFwcGx5ID8gckFwcGx5KFQsIHRoaXNBcmd1bWVudCwgTCkgOiBmQXBwbHkuY2FsbChULCB0aGlzQXJndW1lbnQsIEwpO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMiBSZWZsZWN0LmNvbnN0cnVjdCh0YXJnZXQsIGFyZ3VtZW50c0xpc3QgWywgbmV3VGFyZ2V0XSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGJpbmQgPSByZXF1aXJlKCcuL19iaW5kJyk7XG52YXIgckNvbnN0cnVjdCA9IChyZXF1aXJlKCcuL19nbG9iYWwnKS5SZWZsZWN0IHx8IHt9KS5jb25zdHJ1Y3Q7XG5cbi8vIE1TIEVkZ2Ugc3VwcG9ydHMgb25seSAyIGFyZ3VtZW50cyBhbmQgYXJndW1lbnRzTGlzdCBhcmd1bWVudCBpcyBvcHRpb25hbFxuLy8gRkYgTmlnaHRseSBzZXRzIHRoaXJkIGFyZ3VtZW50IGFzIGBuZXcudGFyZ2V0YCwgYnV0IGRvZXMgbm90IGNyZWF0ZSBgdGhpc2AgZnJvbSBpdFxudmFyIE5FV19UQVJHRVRfQlVHID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKHJDb25zdHJ1Y3QoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCBbXSwgRikgaW5zdGFuY2VvZiBGKTtcbn0pO1xudmFyIEFSR1NfQlVHID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgckNvbnN0cnVjdChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0pO1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE5FV19UQVJHRVRfQlVHIHx8IEFSR1NfQlVHKSwgJ1JlZmxlY3QnLCB7XG4gIGNvbnN0cnVjdDogZnVuY3Rpb24gY29uc3RydWN0KFRhcmdldCwgYXJncyAvKiAsIG5ld1RhcmdldCAqLykge1xuICAgIGFGdW5jdGlvbihUYXJnZXQpO1xuICAgIGFuT2JqZWN0KGFyZ3MpO1xuICAgIHZhciBuZXdUYXJnZXQgPSBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IFRhcmdldCA6IGFGdW5jdGlvbihhcmd1bWVudHNbMl0pO1xuICAgIGlmIChBUkdTX0JVRyAmJiAhTkVXX1RBUkdFVF9CVUcpIHJldHVybiByQ29uc3RydWN0KFRhcmdldCwgYXJncywgbmV3VGFyZ2V0KTtcbiAgICBpZiAoVGFyZ2V0ID09IG5ld1RhcmdldCkge1xuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBvcHRpbWl6YXRpb24gZm9yIDAtNCBhcmd1bWVudHNcbiAgICAgIHN3aXRjaCAoYXJncy5sZW5ndGgpIHtcbiAgICAgICAgY2FzZSAwOiByZXR1cm4gbmV3IFRhcmdldCgpO1xuICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0pO1xuICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICBjYXNlIDM6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgICAgICBjYXNlIDQ6IHJldHVybiBuZXcgVGFyZ2V0KGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0sIGFyZ3NbM10pO1xuICAgICAgfVxuICAgICAgLy8gdy9vIGFsdGVyZWQgbmV3VGFyZ2V0LCBsb3Qgb2YgYXJndW1lbnRzIGNhc2VcbiAgICAgIHZhciAkYXJncyA9IFtudWxsXTtcbiAgICAgICRhcmdzLnB1c2guYXBwbHkoJGFyZ3MsIGFyZ3MpO1xuICAgICAgcmV0dXJuIG5ldyAoYmluZC5hcHBseShUYXJnZXQsICRhcmdzKSkoKTtcbiAgICB9XG4gICAgLy8gd2l0aCBhbHRlcmVkIG5ld1RhcmdldCwgbm90IHN1cHBvcnQgYnVpbHQtaW4gY29uc3RydWN0b3JzXG4gICAgdmFyIHByb3RvID0gbmV3VGFyZ2V0LnByb3RvdHlwZTtcbiAgICB2YXIgaW5zdGFuY2UgPSBjcmVhdGUoaXNPYmplY3QocHJvdG8pID8gcHJvdG8gOiBPYmplY3QucHJvdG90eXBlKTtcbiAgICB2YXIgcmVzdWx0ID0gRnVuY3Rpb24uYXBwbHkuY2FsbChUYXJnZXQsIGluc3RhbmNlLCBhcmdzKTtcbiAgICByZXR1cm4gaXNPYmplY3QocmVzdWx0KSA/IHJlc3VsdCA6IGluc3RhbmNlO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMyBSZWZsZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXksIGF0dHJpYnV0ZXMpXG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xuXG4vLyBNUyBFZGdlIGhhcyBicm9rZW4gUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eSAtIHRocm93aW5nIGluc3RlYWQgb2YgcmV0dXJuaW5nIGZhbHNlXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgUmVmbGVjdC5kZWZpbmVQcm9wZXJ0eShkUC5mKHt9LCAxLCB7IHZhbHVlOiAxIH0pLCAxLCB7IHZhbHVlOiAyIH0pO1xufSksICdSZWZsZWN0Jywge1xuICBkZWZpbmVQcm9wZXJ0eTogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcykge1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgcHJvcGVydHlLZXkgPSB0b1ByaW1pdGl2ZShwcm9wZXJ0eUtleSwgdHJ1ZSk7XG4gICAgYW5PYmplY3QoYXR0cmlidXRlcyk7XG4gICAgdHJ5IHtcbiAgICAgIGRQLmYodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcyk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIi8vIDI2LjEuNCBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcGVydHlLZXkpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBkZWxldGVQcm9wZXJ0eTogZnVuY3Rpb24gZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHZhciBkZXNjID0gZ09QRChhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gICAgcmV0dXJuIGRlc2MgJiYgIWRlc2MuY29uZmlndXJhYmxlID8gZmFsc2UgOiBkZWxldGUgdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAyNi4xLjUgUmVmbGVjdC5lbnVtZXJhdGUodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIEVudW1lcmF0ZSA9IGZ1bmN0aW9uIChpdGVyYXRlZCkge1xuICB0aGlzLl90ID0gYW5PYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuICB2YXIga2V5cyA9IHRoaXMuX2sgPSBbXTsgICAgICAvLyBrZXlzXG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIGl0ZXJhdGVkKSBrZXlzLnB1c2goa2V5KTtcbn07XG5yZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpKEVudW1lcmF0ZSwgJ09iamVjdCcsIGZ1bmN0aW9uICgpIHtcbiAgdmFyIHRoYXQgPSB0aGlzO1xuICB2YXIga2V5cyA9IHRoYXQuX2s7XG4gIHZhciBrZXk7XG4gIGRvIHtcbiAgICBpZiAodGhhdC5faSA+PSBrZXlzLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9IHdoaWxlICghKChrZXkgPSBrZXlzW3RoYXQuX2krK10pIGluIHRoYXQuX3QpKTtcbiAgcmV0dXJuIHsgdmFsdWU6IGtleSwgZG9uZTogZmFsc2UgfTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGVudW1lcmF0ZTogZnVuY3Rpb24gZW51bWVyYXRlKHRhcmdldCkge1xuICAgIHJldHVybiBuZXcgRW51bWVyYXRlKHRhcmdldCk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS42IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgWywgcmVjZWl2ZXJdKVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGdldCh0YXJnZXQsIHByb3BlcnR5S2V5IC8qICwgcmVjZWl2ZXIgKi8pIHtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl07XG4gIHZhciBkZXNjLCBwcm90bztcbiAgaWYgKGFuT2JqZWN0KHRhcmdldCkgPT09IHJlY2VpdmVyKSByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYgKGRlc2MgPSBnT1BELmYodGFyZ2V0LCBwcm9wZXJ0eUtleSkpIHJldHVybiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICA/IGRlc2MudmFsdWVcbiAgICA6IGRlc2MuZ2V0ICE9PSB1bmRlZmluZWRcbiAgICAgID8gZGVzYy5nZXQuY2FsbChyZWNlaXZlcilcbiAgICAgIDogdW5kZWZpbmVkO1xuICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkgcmV0dXJuIGdldChwcm90bywgcHJvcGVydHlLZXksIHJlY2VpdmVyKTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBnZXQ6IGdldCB9KTtcbiIsIi8vIDI2LjEuNyBSZWZsZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwgcHJvcGVydHlLZXkpIHtcbiAgICByZXR1cm4gZ09QRC5mKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjggUmVmbGVjdC5nZXRQcm90b3R5cGVPZih0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGdldFByb3RvID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZ2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKHRhcmdldCkge1xuICAgIHJldHVybiBnZXRQcm90byhhbk9iamVjdCh0YXJnZXQpKTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjkgUmVmbGVjdC5oYXModGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaGFzOiBmdW5jdGlvbiBoYXModGFyZ2V0LCBwcm9wZXJ0eUtleSkge1xuICAgIHJldHVybiBwcm9wZXJ0eUtleSBpbiB0YXJnZXQ7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4xMCBSZWZsZWN0LmlzRXh0ZW5zaWJsZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgJGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGU7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgaXNFeHRlbnNpYmxlOiBmdW5jdGlvbiBpc0V4dGVuc2libGUodGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICByZXR1cm4gJGlzRXh0ZW5zaWJsZSA/ICRpc0V4dGVuc2libGUodGFyZ2V0KSA6IHRydWU7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4xMSBSZWZsZWN0Lm93bktleXModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBvd25LZXlzOiByZXF1aXJlKCcuL19vd24ta2V5cycpIH0pO1xuIiwiLy8gMjYuMS4xMiBSZWZsZWN0LnByZXZlbnRFeHRlbnNpb25zKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkcHJldmVudEV4dGVuc2lvbnMgPSBPYmplY3QucHJldmVudEV4dGVuc2lvbnM7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgcHJldmVudEV4dGVuc2lvbnM6IGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCkge1xuICAgIGFuT2JqZWN0KHRhcmdldCk7XG4gICAgdHJ5IHtcbiAgICAgIGlmICgkcHJldmVudEV4dGVuc2lvbnMpICRwcmV2ZW50RXh0ZW5zaW9ucyh0YXJnZXQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIiwiLy8gMjYuMS4xNCBSZWZsZWN0LnNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNldFByb3RvID0gcmVxdWlyZSgnLi9fc2V0LXByb3RvJyk7XG5cbmlmIChzZXRQcm90bykgJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBzZXRQcm90b3R5cGVPZjogZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YodGFyZ2V0LCBwcm90bykge1xuICAgIHNldFByb3RvLmNoZWNrKHRhcmdldCwgcHJvdG8pO1xuICAgIHRyeSB7XG4gICAgICBzZXRQcm90by5zZXQodGFyZ2V0LCBwcm90byk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L0FycmF5LnByb3RvdHlwZS5pbmNsdWRlc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5jbHVkZXMgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBpbmNsdWRlczogZnVuY3Rpb24gaW5jbHVkZXMoZWwgLyogLCBmcm9tSW5kZXggPSAwICovKSB7XG4gICAgcmV0dXJuICRpbmNsdWRlcyh0aGlzLCBlbCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2luY2x1ZGVzJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdE1hcFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0TWFwOiBmdW5jdGlvbiBmbGF0TWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgc291cmNlTGVuLCBBO1xuICAgIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgICBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBmbGF0dGVuSW50b0FycmF5KEEsIE8sIE8sIHNvdXJjZUxlbiwgMCwgMSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgICByZXR1cm4gQTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmbGF0TWFwJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdHRlblxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0dGVuOiBmdW5jdGlvbiBmbGF0dGVuKC8qIGRlcHRoQXJnID0gMSAqLykge1xuICAgIHZhciBkZXB0aEFyZyA9IGFyZ3VtZW50c1swXTtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIEEgPSBhcnJheVNwZWNpZXNDcmVhdGUoTywgMCk7XG4gICAgZmxhdHRlbkludG9BcnJheShBLCBPLCBPLCBzb3VyY2VMZW4sIDAsIGRlcHRoQXJnID09PSB1bmRlZmluZWQgPyAxIDogdG9JbnRlZ2VyKGRlcHRoQXJnKSk7XG4gICAgcmV0dXJuIEE7XG4gIH1cbn0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnZmxhdHRlbicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXNieW5lbnMvU3RyaW5nLnByb3RvdHlwZS5hdFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIGF0OiBmdW5jdGlvbiBhdChwb3MpIHtcbiAgICByZXR1cm4gJGF0KHRoaXMsIHBvcyk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhZCA9IHJlcXVpcmUoJy4vX3N0cmluZy1wYWQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8yODBcbnZhciBXRUJLSVRfQlVHID0gL1ZlcnNpb25cXC8xMFxcLlxcZCsoXFwuXFxkKyk/KCBNb2JpbGVcXC9cXHcrKT8gU2FmYXJpXFwvLy50ZXN0KHVzZXJBZ2VudCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogV0VCS0lUX0JVRywgJ1N0cmluZycsIHtcbiAgcGFkU3RhcnQ6IGZ1bmN0aW9uIHBhZFN0YXJ0KG1heExlbmd0aCAvKiAsIGZpbGxTdHJpbmcgPSAnICcgKi8pIHtcbiAgICByZXR1cm4gJHBhZCh0aGlzLCBtYXhMZW5ndGgsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0cnVlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFkID0gcmVxdWlyZSgnLi9fc3RyaW5nLXBhZCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzI4MFxudmFyIFdFQktJVF9CVUcgPSAvVmVyc2lvblxcLzEwXFwuXFxkKyhcXC5cXGQrKT8oIE1vYmlsZVxcL1xcdyspPyBTYWZhcmlcXC8vLnRlc3QodXNlckFnZW50KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBXRUJLSVRfQlVHLCAnU3RyaW5nJywge1xuICBwYWRFbmQ6IGZ1bmN0aW9uIHBhZEVuZChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgZmFsc2UpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zZWJtYXJrYmFnZS9lY21hc2NyaXB0LXN0cmluZy1sZWZ0LXJpZ2h0LXRyaW1cbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW1MZWZ0JywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltTGVmdCgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMSk7XG4gIH07XG59LCAndHJpbVN0YXJ0Jyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vc2VibWFya2JhZ2UvZWNtYXNjcmlwdC1zdHJpbmctbGVmdC1yaWdodC10cmltXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltUmlnaHQnLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1SaWdodCgpIHtcbiAgICByZXR1cm4gJHRyaW0odGhpcywgMik7XG4gIH07XG59LCAndHJpbUVuZCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9TdHJpbmcucHJvdG90eXBlLm1hdGNoQWxsL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBnZXRGbGFncyA9IHJlcXVpcmUoJy4vX2ZsYWdzJyk7XG52YXIgUmVnRXhwUHJvdG8gPSBSZWdFeHAucHJvdG90eXBlO1xuXG52YXIgJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yID0gZnVuY3Rpb24gKHJlZ2V4cCwgc3RyaW5nKSB7XG4gIHRoaXMuX3IgPSByZWdleHA7XG4gIHRoaXMuX3MgPSBzdHJpbmc7XG59O1xuXG5yZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpKCRSZWdFeHBTdHJpbmdJdGVyYXRvciwgJ1JlZ0V4cCBTdHJpbmcnLCBmdW5jdGlvbiBuZXh0KCkge1xuICB2YXIgbWF0Y2ggPSB0aGlzLl9yLmV4ZWModGhpcy5fcyk7XG4gIHJldHVybiB7IHZhbHVlOiBtYXRjaCwgZG9uZTogbWF0Y2ggPT09IG51bGwgfTtcbn0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ1N0cmluZycsIHtcbiAgbWF0Y2hBbGw6IGZ1bmN0aW9uIG1hdGNoQWxsKHJlZ2V4cCkge1xuICAgIGRlZmluZWQodGhpcyk7XG4gICAgaWYgKCFpc1JlZ0V4cChyZWdleHApKSB0aHJvdyBUeXBlRXJyb3IocmVnZXhwICsgJyBpcyBub3QgYSByZWdleHAhJyk7XG4gICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgdmFyIGZsYWdzID0gJ2ZsYWdzJyBpbiBSZWdFeHBQcm90byA/IFN0cmluZyhyZWdleHAuZmxhZ3MpIDogZ2V0RmxhZ3MuY2FsbChyZWdleHApO1xuICAgIHZhciByeCA9IG5ldyBSZWdFeHAocmVnZXhwLnNvdXJjZSwgfmZsYWdzLmluZGV4T2YoJ2cnKSA/IGZsYWdzIDogJ2cnICsgZmxhZ3MpO1xuICAgIHJ4Lmxhc3RJbmRleCA9IHRvTGVuZ3RoKHJlZ2V4cC5sYXN0SW5kZXgpO1xuICAgIHJldHVybiBuZXcgJFJlZ0V4cFN0cmluZ0l0ZXJhdG9yKHJ4LCBTKTtcbiAgfVxufSk7XG4iLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ2FzeW5jSXRlcmF0b3InKTtcbiIsInJlcXVpcmUoJy4vX3drcy1kZWZpbmUnKSgnb2JzZXJ2YWJsZScpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvcnNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgb3duS2V5cyA9IHJlcXVpcmUoJy4vX293bi1rZXlzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKG9iamVjdCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KG9iamVjdCk7XG4gICAgdmFyIGdldERlc2MgPSBnT1BELmY7XG4gICAgdmFyIGtleXMgPSBvd25LZXlzKE8pO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGtleSwgZGVzYztcbiAgICB3aGlsZSAoa2V5cy5sZW5ndGggPiBpKSB7XG4gICAgICBkZXNjID0gZ2V0RGVzYyhPLCBrZXkgPSBrZXlzW2krK10pO1xuICAgICAgaWYgKGRlc2MgIT09IHVuZGVmaW5lZCkgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBrZXksIGRlc2MpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9iamVjdC12YWx1ZXMtZW50cmllc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdmFsdWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykoZmFsc2UpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHtcbiAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoaXQpIHtcbiAgICByZXR1cm4gJHZhbHVlcyhpdCk7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKGl0KTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xuXG4vLyBCLjIuMi4yIE9iamVjdC5wcm90b3R5cGUuX19kZWZpbmVHZXR0ZXJfXyhQLCBnZXR0ZXIpXG5yZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICRleHBvcnQoJGV4cG9ydC5QICsgcmVxdWlyZSgnLi9fb2JqZWN0LWZvcmNlZC1wYW0nKSwgJ09iamVjdCcsIHtcbiAgX19kZWZpbmVHZXR0ZXJfXzogZnVuY3Rpb24gX19kZWZpbmVHZXR0ZXJfXyhQLCBnZXR0ZXIpIHtcbiAgICAkZGVmaW5lUHJvcGVydHkuZih0b09iamVjdCh0aGlzKSwgUCwgeyBnZXQ6IGFGdW5jdGlvbihnZXR0ZXIpLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUgfSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciAkZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcblxuLy8gQi4yLjIuMyBPYmplY3QucHJvdG90eXBlLl9fZGVmaW5lU2V0dGVyX18oUCwgc2V0dGVyKVxucmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAkZXhwb3J0KCRleHBvcnQuUCArIHJlcXVpcmUoJy4vX29iamVjdC1mb3JjZWQtcGFtJyksICdPYmplY3QnLCB7XG4gIF9fZGVmaW5lU2V0dGVyX186IGZ1bmN0aW9uIF9fZGVmaW5lU2V0dGVyX18oUCwgc2V0dGVyKSB7XG4gICAgJGRlZmluZVByb3BlcnR5LmYodG9PYmplY3QodGhpcyksIFAsIHsgc2V0OiBhRnVuY3Rpb24oc2V0dGVyKSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxuLy8gQi4yLjIuNCBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwR2V0dGVyX18oUClcbnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywge1xuICBfX2xvb2t1cEdldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cEdldHRlcl9fKFApIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBLID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gICAgdmFyIEQ7XG4gICAgZG8ge1xuICAgICAgaWYgKEQgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgSykpIHJldHVybiBELmdldDtcbiAgICB9IHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxuLy8gQi4yLjIuNSBPYmplY3QucHJvdG90eXBlLl9fbG9va3VwU2V0dGVyX18oUClcbnJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgJGV4cG9ydCgkZXhwb3J0LlAgKyByZXF1aXJlKCcuL19vYmplY3QtZm9yY2VkLXBhbScpLCAnT2JqZWN0Jywge1xuICBfX2xvb2t1cFNldHRlcl9fOiBmdW5jdGlvbiBfX2xvb2t1cFNldHRlcl9fKFApIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KHRoaXMpO1xuICAgIHZhciBLID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gICAgdmFyIEQ7XG4gICAgZG8ge1xuICAgICAgaWYgKEQgPSBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgSykpIHJldHVybiBELnNldDtcbiAgICB9IHdoaWxlIChPID0gZ2V0UHJvdG90eXBlT2YoTykpO1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnTWFwJywgeyB0b0pTT046IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tdG8tanNvbicpKCdNYXAnKSB9KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnU2V0JywgeyB0b0pTT046IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24tdG8tanNvbicpKCdTZXQnKSB9KTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS8jc2VjLW1hcC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnTWFwJyk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy1zZXQub2ZcbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLW9mJykoJ1NldCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtd2Vha21hcC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnV2Vha01hcCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtd2Vha3NldC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnV2Vha1NldCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtbWFwLmZyb21cbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLWZyb20nKSgnTWFwJyk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy1zZXQuZnJvbVxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tZnJvbScpKCdTZXQnKTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS8jc2VjLXdlYWttYXAuZnJvbVxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tZnJvbScpKCdXZWFrTWFwJyk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy13ZWFrc2V0LmZyb21cbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLWZyb20nKSgnV2Vha1NldCcpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuRywgeyBnbG9iYWw6IHJlcXVpcmUoJy4vX2dsb2JhbCcpIH0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1N5c3RlbScsIHsgZ2xvYmFsOiByZXF1aXJlKCcuL19nbG9iYWwnKSB9KTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9samhhcmIvcHJvcG9zYWwtaXMtZXJyb3JcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnRXJyb3InLCB7XG4gIGlzRXJyb3I6IGZ1bmN0aW9uIGlzRXJyb3IoaXQpIHtcbiAgICByZXR1cm4gY29mKGl0KSA9PT0gJ0Vycm9yJztcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL3J3YWxkcm9uLmdpdGh1Yi5pby9wcm9wb3NhbC1tYXRoLWV4dGVuc2lvbnMvXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNsYW1wOiBmdW5jdGlvbiBjbGFtcCh4LCBsb3dlciwgdXBwZXIpIHtcbiAgICByZXR1cm4gTWF0aC5taW4odXBwZXIsIE1hdGgubWF4KGxvd2VyLCB4KSk7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9yd2FsZHJvbi5naXRodWIuaW8vcHJvcG9zYWwtbWF0aC1leHRlbnNpb25zL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBERUdfUEVSX1JBRDogTWF0aC5QSSAvIDE4MCB9KTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgUkFEX1BFUl9ERUcgPSAxODAgLyBNYXRoLlBJO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGRlZ3JlZXM6IGZ1bmN0aW9uIGRlZ3JlZXMocmFkaWFucykge1xuICAgIHJldHVybiByYWRpYW5zICogUkFEX1BFUl9ERUc7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9yd2FsZHJvbi5naXRodWIuaW8vcHJvcG9zYWwtbWF0aC1leHRlbnNpb25zL1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzY2FsZSA9IHJlcXVpcmUoJy4vX21hdGgtc2NhbGUnKTtcbnZhciBmcm91bmQgPSByZXF1aXJlKCcuL19tYXRoLWZyb3VuZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGZzY2FsZTogZnVuY3Rpb24gZnNjYWxlKHgsIGluTG93LCBpbkhpZ2gsIG91dExvdywgb3V0SGlnaCkge1xuICAgIHJldHVybiBmcm91bmQoc2NhbGUoeCwgaW5Mb3csIGluSGlnaCwgb3V0TG93LCBvdXRIaWdoKSk7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaWFkZGg6IGZ1bmN0aW9uIGlhZGRoKHgwLCB4MSwgeTAsIHkxKSB7XG4gICAgdmFyICR4MCA9IHgwID4+PiAwO1xuICAgIHZhciAkeDEgPSB4MSA+Pj4gMDtcbiAgICB2YXIgJHkwID0geTAgPj4+IDA7XG4gICAgcmV0dXJuICR4MSArICh5MSA+Pj4gMCkgKyAoKCR4MCAmICR5MCB8ICgkeDAgfCAkeTApICYgfigkeDAgKyAkeTAgPj4+IDApKSA+Pj4gMzEpIHwgMDtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9CcmVuZGFuRWljaC80Mjk0ZDVjMjEyYTZkMjI1NDcwM1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBpc3ViaDogZnVuY3Rpb24gaXN1YmgoeDAsIHgxLCB5MCwgeTEpIHtcbiAgICB2YXIgJHgwID0geDAgPj4+IDA7XG4gICAgdmFyICR4MSA9IHgxID4+PiAwO1xuICAgIHZhciAkeTAgPSB5MCA+Pj4gMDtcbiAgICByZXR1cm4gJHgxIC0gKHkxID4+PiAwKSAtICgofiR4MCAmICR5MCB8IH4oJHgwIF4gJHkwKSAmICR4MCAtICR5MCA+Pj4gMCkgPj4+IDMxKSB8IDA7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vQnJlbmRhbkVpY2gvNDI5NGQ1YzIxMmE2ZDIyNTQ3MDNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgaW11bGg6IGZ1bmN0aW9uIGltdWxoKHUsIHYpIHtcbiAgICB2YXIgVUlOVDE2ID0gMHhmZmZmO1xuICAgIHZhciAkdSA9ICt1O1xuICAgIHZhciAkdiA9ICt2O1xuICAgIHZhciB1MCA9ICR1ICYgVUlOVDE2O1xuICAgIHZhciB2MCA9ICR2ICYgVUlOVDE2O1xuICAgIHZhciB1MSA9ICR1ID4+IDE2O1xuICAgIHZhciB2MSA9ICR2ID4+IDE2O1xuICAgIHZhciB0ID0gKHUxICogdjAgPj4+IDApICsgKHUwICogdjAgPj4+IDE2KTtcbiAgICByZXR1cm4gdTEgKiB2MSArICh0ID4+IDE2KSArICgodTAgKiB2MSA+Pj4gMCkgKyAodCAmIFVJTlQxNikgPj4gMTYpO1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgUkFEX1BFUl9ERUc6IDE4MCAvIE1hdGguUEkgfSk7XG4iLCIvLyBodHRwczovL3J3YWxkcm9uLmdpdGh1Yi5pby9wcm9wb3NhbC1tYXRoLWV4dGVuc2lvbnMvXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIERFR19QRVJfUkFEID0gTWF0aC5QSSAvIDE4MDtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICByYWRpYW5zOiBmdW5jdGlvbiByYWRpYW5zKGRlZ3JlZXMpIHtcbiAgICByZXR1cm4gZGVncmVlcyAqIERFR19QRVJfUkFEO1xuICB9XG59KTtcbiIsIi8vIGh0dHBzOi8vcndhbGRyb24uZ2l0aHViLmlvL3Byb3Bvc2FsLW1hdGgtZXh0ZW5zaW9ucy9cbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgc2NhbGU6IHJlcXVpcmUoJy4vX21hdGgtc2NhbGUnKSB9KTtcbiIsIi8vIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL0JyZW5kYW5FaWNoLzQyOTRkNWMyMTJhNmQyMjU0NzAzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHVtdWxoOiBmdW5jdGlvbiB1bXVsaCh1LCB2KSB7XG4gICAgdmFyIFVJTlQxNiA9IDB4ZmZmZjtcbiAgICB2YXIgJHUgPSArdTtcbiAgICB2YXIgJHYgPSArdjtcbiAgICB2YXIgdTAgPSAkdSAmIFVJTlQxNjtcbiAgICB2YXIgdjAgPSAkdiAmIFVJTlQxNjtcbiAgICB2YXIgdTEgPSAkdSA+Pj4gMTY7XG4gICAgdmFyIHYxID0gJHYgPj4+IDE2O1xuICAgIHZhciB0ID0gKHUxICogdjAgPj4+IDApICsgKHUwICogdjAgPj4+IDE2KTtcbiAgICByZXR1cm4gdTEgKiB2MSArICh0ID4+PiAxNikgKyAoKHUwICogdjEgPj4+IDApICsgKHQgJiBVSU5UMTYpID4+PiAxNik7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cDovL2pmYmFzdGllbi5naXRodWIuaW8vcGFwZXJzL01hdGguc2lnbmJpdC5odG1sXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IHNpZ25iaXQ6IGZ1bmN0aW9uIHNpZ25iaXQoeCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiAoeCA9ICt4KSAhPSB4ID8geCA6IHggPT0gMCA/IDEgLyB4ID09IEluZmluaXR5IDogeCA+IDA7XG59IH0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS1maW5hbGx5XG4ndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgc3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi9fc3BlY2llcy1jb25zdHJ1Y3RvcicpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5SLCAnUHJvbWlzZScsIHsgJ2ZpbmFsbHknOiBmdW5jdGlvbiAob25GaW5hbGx5KSB7XG4gIHZhciBDID0gc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsIGNvcmUuUHJvbWlzZSB8fCBnbG9iYWwuUHJvbWlzZSk7XG4gIHZhciBpc0Z1bmN0aW9uID0gdHlwZW9mIG9uRmluYWxseSA9PSAnZnVuY3Rpb24nO1xuICByZXR1cm4gdGhpcy50aGVuKFxuICAgIGlzRnVuY3Rpb24gPyBmdW5jdGlvbiAoeCkge1xuICAgICAgcmV0dXJuIHByb21pc2VSZXNvbHZlKEMsIG9uRmluYWxseSgpKS50aGVuKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHg7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHksXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uIChlKSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyB0aHJvdyBlOyB9KTtcbiAgICB9IDogb25GaW5hbGx5XG4gICk7XG59IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtcHJvbWlzZS10cnlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgbmV3UHJvbWlzZUNhcGFiaWxpdHkgPSByZXF1aXJlKCcuL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5Jyk7XG52YXIgcGVyZm9ybSA9IHJlcXVpcmUoJy4vX3BlcmZvcm0nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdQcm9taXNlJywgeyAndHJ5JzogZnVuY3Rpb24gKGNhbGxiYWNrZm4pIHtcbiAgdmFyIHByb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkuZih0aGlzKTtcbiAgdmFyIHJlc3VsdCA9IHBlcmZvcm0oY2FsbGJhY2tmbik7XG4gIChyZXN1bHQuZSA/IHByb21pc2VDYXBhYmlsaXR5LnJlamVjdCA6IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmUpKHJlc3VsdC52KTtcbiAgcmV0dXJuIHByb21pc2VDYXBhYmlsaXR5LnByb21pc2U7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvTWV0YUtleSA9IG1ldGFkYXRhLmtleTtcbnZhciBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhID0gbWV0YWRhdGEuc2V0O1xuXG5tZXRhZGF0YS5leHAoeyBkZWZpbmVNZXRhZGF0YTogZnVuY3Rpb24gZGVmaW5lTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIHRhcmdldCwgdGFyZ2V0S2V5KSB7XG4gIG9yZGluYXJ5RGVmaW5lT3duTWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUsIGFuT2JqZWN0KHRhcmdldCksIHRvTWV0YUtleSh0YXJnZXRLZXkpKTtcbn0gfSk7XG4iLCJ2YXIgbWV0YWRhdGEgPSByZXF1aXJlKCcuL19tZXRhZGF0YScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xudmFyIGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAgPSBtZXRhZGF0YS5tYXA7XG52YXIgc3RvcmUgPSBtZXRhZGF0YS5zdG9yZTtcblxubWV0YWRhdGEuZXhwKHsgZGVsZXRlTWV0YWRhdGE6IGZ1bmN0aW9uIGRlbGV0ZU1ldGFkYXRhKG1ldGFkYXRhS2V5LCB0YXJnZXQgLyogLCB0YXJnZXRLZXkgKi8pIHtcbiAgdmFyIHRhcmdldEtleSA9IGFyZ3VtZW50cy5sZW5ndGggPCAzID8gdW5kZWZpbmVkIDogdG9NZXRhS2V5KGFyZ3VtZW50c1syXSk7XG4gIHZhciBtZXRhZGF0YU1hcCA9IGdldE9yQ3JlYXRlTWV0YWRhdGFNYXAoYW5PYmplY3QodGFyZ2V0KSwgdGFyZ2V0S2V5LCBmYWxzZSk7XG4gIGlmIChtZXRhZGF0YU1hcCA9PT0gdW5kZWZpbmVkIHx8ICFtZXRhZGF0YU1hcFsnZGVsZXRlJ10obWV0YWRhdGFLZXkpKSByZXR1cm4gZmFsc2U7XG4gIGlmIChtZXRhZGF0YU1hcC5zaXplKSByZXR1cm4gdHJ1ZTtcbiAgdmFyIHRhcmdldE1ldGFkYXRhID0gc3RvcmUuZ2V0KHRhcmdldCk7XG4gIHRhcmdldE1ldGFkYXRhWydkZWxldGUnXSh0YXJnZXRLZXkpO1xuICByZXR1cm4gISF0YXJnZXRNZXRhZGF0YS5zaXplIHx8IHN0b3JlWydkZWxldGUnXSh0YXJnZXQpO1xufSB9KTtcbiIsInZhciBtZXRhZGF0YSA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBvcmRpbmFyeUhhc093bk1ldGFkYXRhID0gbWV0YWRhdGEuaGFzO1xudmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBtZXRhZGF0YS5nZXQ7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlHZXRNZXRhZGF0YSA9IGZ1bmN0aW9uIChNZXRhZGF0YUtleSwgTywgUCkge1xuICB2YXIgaGFzT3duID0gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShNZXRhZGF0YUtleSwgTywgUCk7XG4gIGlmIChoYXNPd24pIHJldHVybiBvcmRpbmFyeUdldE93bk1ldGFkYXRhKE1ldGFkYXRhS2V5LCBPLCBQKTtcbiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pO1xuICByZXR1cm4gcGFyZW50ICE9PSBudWxsID8gb3JkaW5hcnlHZXRNZXRhZGF0YShNZXRhZGF0YUtleSwgcGFyZW50LCBQKSA6IHVuZGVmaW5lZDtcbn07XG5cbm1ldGFkYXRhLmV4cCh7IGdldE1ldGFkYXRhOiBmdW5jdGlvbiBnZXRNZXRhZGF0YShtZXRhZGF0YUtleSwgdGFyZ2V0IC8qICwgdGFyZ2V0S2V5ICovKSB7XG4gIHJldHVybiBvcmRpbmFyeUdldE1ldGFkYXRhKG1ldGFkYXRhS2V5LCBhbk9iamVjdCh0YXJnZXQpLCBhcmd1bWVudHMubGVuZ3RoIDwgMyA/IHVuZGVmaW5lZCA6IHRvTWV0YUtleShhcmd1bWVudHNbMl0pKTtcbn0gfSk7XG4iLCJ2YXIgU2V0ID0gcmVxdWlyZSgnLi9lczYuc2V0Jyk7XG52YXIgZnJvbSA9IHJlcXVpcmUoJy4vX2FycmF5LWZyb20taXRlcmFibGUnKTtcbnZhciBtZXRhZGF0YSA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyA9IG1ldGFkYXRhLmtleXM7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlNZXRhZGF0YUtleXMgPSBmdW5jdGlvbiAoTywgUCkge1xuICB2YXIgb0tleXMgPSBvcmRpbmFyeU93bk1ldGFkYXRhS2V5cyhPLCBQKTtcbiAgdmFyIHBhcmVudCA9IGdldFByb3RvdHlwZU9mKE8pO1xuICBpZiAocGFyZW50ID09PSBudWxsKSByZXR1cm4gb0tleXM7XG4gIHZhciBwS2V5cyA9IG9yZGluYXJ5TWV0YWRhdGFLZXlzKHBhcmVudCwgUCk7XG4gIHJldHVybiBwS2V5cy5sZW5ndGggPyBvS2V5cy5sZW5ndGggPyBmcm9tKG5ldyBTZXQob0tleXMuY29uY2F0KHBLZXlzKSkpIDogcEtleXMgOiBvS2V5cztcbn07XG5cbm1ldGFkYXRhLmV4cCh7IGdldE1ldGFkYXRhS2V5czogZnVuY3Rpb24gZ2V0TWV0YWRhdGFLZXlzKHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlNZXRhZGF0YUtleXMoYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzFdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIG9yZGluYXJ5R2V0T3duTWV0YWRhdGEgPSBtZXRhZGF0YS5nZXQ7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG5tZXRhZGF0YS5leHAoeyBnZXRPd25NZXRhZGF0YTogZnVuY3Rpb24gZ2V0T3duTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlHZXRPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KVxuICAgICwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIG9yZGluYXJ5T3duTWV0YWRhdGFLZXlzID0gbWV0YWRhdGEua2V5cztcbnZhciB0b01ldGFLZXkgPSBtZXRhZGF0YS5rZXk7XG5cbm1ldGFkYXRhLmV4cCh7IGdldE93bk1ldGFkYXRhS2V5czogZnVuY3Rpb24gZ2V0T3duTWV0YWRhdGFLZXlzKHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlPd25NZXRhZGF0YUtleXMoYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDIgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzFdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5oYXM7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG52YXIgb3JkaW5hcnlIYXNNZXRhZGF0YSA9IGZ1bmN0aW9uIChNZXRhZGF0YUtleSwgTywgUCkge1xuICB2YXIgaGFzT3duID0gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShNZXRhZGF0YUtleSwgTywgUCk7XG4gIGlmIChoYXNPd24pIHJldHVybiB0cnVlO1xuICB2YXIgcGFyZW50ID0gZ2V0UHJvdG90eXBlT2YoTyk7XG4gIHJldHVybiBwYXJlbnQgIT09IG51bGwgPyBvcmRpbmFyeUhhc01ldGFkYXRhKE1ldGFkYXRhS2V5LCBwYXJlbnQsIFApIDogZmFsc2U7XG59O1xuXG5tZXRhZGF0YS5leHAoeyBoYXNNZXRhZGF0YTogZnVuY3Rpb24gaGFzTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlIYXNNZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KSwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59IH0pO1xuIiwidmFyIG1ldGFkYXRhID0gcmVxdWlyZSgnLi9fbWV0YWRhdGEnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIG9yZGluYXJ5SGFzT3duTWV0YWRhdGEgPSBtZXRhZGF0YS5oYXM7XG52YXIgdG9NZXRhS2V5ID0gbWV0YWRhdGEua2V5O1xuXG5tZXRhZGF0YS5leHAoeyBoYXNPd25NZXRhZGF0YTogZnVuY3Rpb24gaGFzT3duTWV0YWRhdGEobWV0YWRhdGFLZXksIHRhcmdldCAvKiAsIHRhcmdldEtleSAqLykge1xuICByZXR1cm4gb3JkaW5hcnlIYXNPd25NZXRhZGF0YShtZXRhZGF0YUtleSwgYW5PYmplY3QodGFyZ2V0KVxuICAgICwgYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB1bmRlZmluZWQgOiB0b01ldGFLZXkoYXJndW1lbnRzWzJdKSk7XG59IH0pO1xuIiwidmFyICRtZXRhZGF0YSA9IHJlcXVpcmUoJy4vX21ldGFkYXRhJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgdG9NZXRhS2V5ID0gJG1ldGFkYXRhLmtleTtcbnZhciBvcmRpbmFyeURlZmluZU93bk1ldGFkYXRhID0gJG1ldGFkYXRhLnNldDtcblxuJG1ldGFkYXRhLmV4cCh7IG1ldGFkYXRhOiBmdW5jdGlvbiBtZXRhZGF0YShtZXRhZGF0YUtleSwgbWV0YWRhdGFWYWx1ZSkge1xuICByZXR1cm4gZnVuY3Rpb24gZGVjb3JhdG9yKHRhcmdldCwgdGFyZ2V0S2V5KSB7XG4gICAgb3JkaW5hcnlEZWZpbmVPd25NZXRhZGF0YShcbiAgICAgIG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlLFxuICAgICAgKHRhcmdldEtleSAhPT0gdW5kZWZpbmVkID8gYW5PYmplY3QgOiBhRnVuY3Rpb24pKHRhcmdldCksXG4gICAgICB0b01ldGFLZXkodGFyZ2V0S2V5KVxuICAgICk7XG4gIH07XG59IH0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3J3YWxkcm9uL3RjMzktbm90ZXMvYmxvYi9tYXN0ZXIvZXM2LzIwMTQtMDkvc2VwdC0yNS5tZCM1MTAtZ2xvYmFsYXNhcC1mb3ItZW5xdWV1aW5nLWEtbWljcm90YXNrXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIG1pY3JvdGFzayA9IHJlcXVpcmUoJy4vX21pY3JvdGFzaycpKCk7XG52YXIgcHJvY2VzcyA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnByb2Nlc3M7XG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG4kZXhwb3J0KCRleHBvcnQuRywge1xuICBhc2FwOiBmdW5jdGlvbiBhc2FwKGZuKSB7XG4gICAgdmFyIGRvbWFpbiA9IGlzTm9kZSAmJiBwcm9jZXNzLmRvbWFpbjtcbiAgICBtaWNyb3Rhc2soZG9tYWluID8gZG9tYWluLmJpbmQoZm4pIDogZm4pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96ZW5wYXJzaW5nL2VzLW9ic2VydmFibGVcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpO1xudmFyIE9CU0VSVkFCTEUgPSByZXF1aXJlKCcuL193a3MnKSgnb2JzZXJ2YWJsZScpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIFJFVFVSTiA9IGZvck9mLlJFVFVSTjtcblxudmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChmbikge1xuICByZXR1cm4gZm4gPT0gbnVsbCA/IHVuZGVmaW5lZCA6IGFGdW5jdGlvbihmbik7XG59O1xuXG52YXIgY2xlYW51cFN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHtcbiAgdmFyIGNsZWFudXAgPSBzdWJzY3JpcHRpb24uX2M7XG4gIGlmIChjbGVhbnVwKSB7XG4gICAgc3Vic2NyaXB0aW9uLl9jID0gdW5kZWZpbmVkO1xuICAgIGNsZWFudXAoKTtcbiAgfVxufTtcblxudmFyIHN1YnNjcmlwdGlvbkNsb3NlZCA9IGZ1bmN0aW9uIChzdWJzY3JpcHRpb24pIHtcbiAgcmV0dXJuIHN1YnNjcmlwdGlvbi5fbyA9PT0gdW5kZWZpbmVkO1xufTtcblxudmFyIGNsb3NlU3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gKHN1YnNjcmlwdGlvbikge1xuICBpZiAoIXN1YnNjcmlwdGlvbkNsb3NlZChzdWJzY3JpcHRpb24pKSB7XG4gICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgIGNsZWFudXBTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbiAgfVxufTtcblxudmFyIFN1YnNjcmlwdGlvbiA9IGZ1bmN0aW9uIChvYnNlcnZlciwgc3Vic2NyaWJlcikge1xuICBhbk9iamVjdChvYnNlcnZlcik7XG4gIHRoaXMuX2MgPSB1bmRlZmluZWQ7XG4gIHRoaXMuX28gPSBvYnNlcnZlcjtcbiAgb2JzZXJ2ZXIgPSBuZXcgU3Vic2NyaXB0aW9uT2JzZXJ2ZXIodGhpcyk7XG4gIHRyeSB7XG4gICAgdmFyIGNsZWFudXAgPSBzdWJzY3JpYmVyKG9ic2VydmVyKTtcbiAgICB2YXIgc3Vic2NyaXB0aW9uID0gY2xlYW51cDtcbiAgICBpZiAoY2xlYW51cCAhPSBudWxsKSB7XG4gICAgICBpZiAodHlwZW9mIGNsZWFudXAudW5zdWJzY3JpYmUgPT09ICdmdW5jdGlvbicpIGNsZWFudXAgPSBmdW5jdGlvbiAoKSB7IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpOyB9O1xuICAgICAgZWxzZSBhRnVuY3Rpb24oY2xlYW51cCk7XG4gICAgICB0aGlzLl9jID0gY2xlYW51cDtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBvYnNlcnZlci5lcnJvcihlKTtcbiAgICByZXR1cm47XG4gIH0gaWYgKHN1YnNjcmlwdGlvbkNsb3NlZCh0aGlzKSkgY2xlYW51cFN1YnNjcmlwdGlvbih0aGlzKTtcbn07XG5cblN1YnNjcmlwdGlvbi5wcm90b3R5cGUgPSByZWRlZmluZUFsbCh7fSwge1xuICB1bnN1YnNjcmliZTogZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7IGNsb3NlU3Vic2NyaXB0aW9uKHRoaXMpOyB9XG59KTtcblxudmFyIFN1YnNjcmlwdGlvbk9ic2VydmVyID0gZnVuY3Rpb24gKHN1YnNjcmlwdGlvbikge1xuICB0aGlzLl9zID0gc3Vic2NyaXB0aW9uO1xufTtcblxuU3Vic2NyaXB0aW9uT2JzZXJ2ZXIucHJvdG90eXBlID0gcmVkZWZpbmVBbGwoe30sIHtcbiAgbmV4dDogZnVuY3Rpb24gbmV4dCh2YWx1ZSkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSB0aGlzLl9zO1xuICAgIGlmICghc3Vic2NyaXB0aW9uQ2xvc2VkKHN1YnNjcmlwdGlvbikpIHtcbiAgICAgIHZhciBvYnNlcnZlciA9IHN1YnNjcmlwdGlvbi5fbztcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBtID0gZ2V0TWV0aG9kKG9ic2VydmVyLm5leHQpO1xuICAgICAgICBpZiAobSkgcmV0dXJuIG0uY2FsbChvYnNlcnZlciwgdmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNsb3NlU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgZXJyb3I6IGZ1bmN0aW9uIGVycm9yKHZhbHVlKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuX3M7XG4gICAgaWYgKHN1YnNjcmlwdGlvbkNsb3NlZChzdWJzY3JpcHRpb24pKSB0aHJvdyB2YWx1ZTtcbiAgICB2YXIgb2JzZXJ2ZXIgPSBzdWJzY3JpcHRpb24uX287XG4gICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgIHRyeSB7XG4gICAgICB2YXIgbSA9IGdldE1ldGhvZChvYnNlcnZlci5lcnJvcik7XG4gICAgICBpZiAoIW0pIHRocm93IHZhbHVlO1xuICAgICAgdmFsdWUgPSBtLmNhbGwob2JzZXJ2ZXIsIHZhbHVlKTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0aHJvdyBlO1xuICAgICAgfVxuICAgIH0gY2xlYW51cFN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfSxcbiAgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHZhbHVlKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoaXMuX3M7XG4gICAgaWYgKCFzdWJzY3JpcHRpb25DbG9zZWQoc3Vic2NyaXB0aW9uKSkge1xuICAgICAgdmFyIG9ic2VydmVyID0gc3Vic2NyaXB0aW9uLl9vO1xuICAgICAgc3Vic2NyaXB0aW9uLl9vID0gdW5kZWZpbmVkO1xuICAgICAgdHJ5IHtcbiAgICAgICAgdmFyIG0gPSBnZXRNZXRob2Qob2JzZXJ2ZXIuY29tcGxldGUpO1xuICAgICAgICB2YWx1ZSA9IG0gPyBtLmNhbGwob2JzZXJ2ZXIsIHZhbHVlKSA6IHVuZGVmaW5lZDtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgfSBjbGVhbnVwU3Vic2NyaXB0aW9uKHN1YnNjcmlwdGlvbik7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICB9XG59KTtcblxudmFyICRPYnNlcnZhYmxlID0gZnVuY3Rpb24gT2JzZXJ2YWJsZShzdWJzY3JpYmVyKSB7XG4gIGFuSW5zdGFuY2UodGhpcywgJE9ic2VydmFibGUsICdPYnNlcnZhYmxlJywgJ19mJykuX2YgPSBhRnVuY3Rpb24oc3Vic2NyaWJlcik7XG59O1xuXG5yZWRlZmluZUFsbCgkT2JzZXJ2YWJsZS5wcm90b3R5cGUsIHtcbiAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUob2JzZXJ2ZXIpIHtcbiAgICByZXR1cm4gbmV3IFN1YnNjcmlwdGlvbihvYnNlcnZlciwgdGhpcy5fZik7XG4gIH0sXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goZm4pIHtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgcmV0dXJuIG5ldyAoY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICBhRnVuY3Rpb24oZm4pO1xuICAgICAgdmFyIHN1YnNjcmlwdGlvbiA9IHRoYXQuc3Vic2NyaWJlKHtcbiAgICAgICAgbmV4dDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbih2YWx1ZSk7XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgcmVqZWN0KGUpO1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBlcnJvcjogcmVqZWN0LFxuICAgICAgICBjb21wbGV0ZTogcmVzb2x2ZVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cbn0pO1xuXG5yZWRlZmluZUFsbCgkT2JzZXJ2YWJsZSwge1xuICBmcm9tOiBmdW5jdGlvbiBmcm9tKHgpIHtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09PSAnZnVuY3Rpb24nID8gdGhpcyA6ICRPYnNlcnZhYmxlO1xuICAgIHZhciBtZXRob2QgPSBnZXRNZXRob2QoYW5PYmplY3QoeClbT0JTRVJWQUJMRV0pO1xuICAgIGlmIChtZXRob2QpIHtcbiAgICAgIHZhciBvYnNlcnZhYmxlID0gYW5PYmplY3QobWV0aG9kLmNhbGwoeCkpO1xuICAgICAgcmV0dXJuIG9ic2VydmFibGUuY29uc3RydWN0b3IgPT09IEMgPyBvYnNlcnZhYmxlIDogbmV3IEMoZnVuY3Rpb24gKG9ic2VydmVyKSB7XG4gICAgICAgIHJldHVybiBvYnNlcnZhYmxlLnN1YnNjcmliZShvYnNlcnZlcik7XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBDKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgdmFyIGRvbmUgPSBmYWxzZTtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghZG9uZSkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoZm9yT2YoeCwgZmFsc2UsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgICAgICAgICBvYnNlcnZlci5uZXh0KGl0KTtcbiAgICAgICAgICAgICAgaWYgKGRvbmUpIHJldHVybiBSRVRVUk47XG4gICAgICAgICAgICB9KSA9PT0gUkVUVVJOKSByZXR1cm47XG4gICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgaWYgKGRvbmUpIHRocm93IGU7XG4gICAgICAgICAgICBvYnNlcnZlci5lcnJvcihlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9IG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgZG9uZSA9IHRydWU7IH07XG4gICAgfSk7XG4gIH0sXG4gIG9mOiBmdW5jdGlvbiBvZigpIHtcbiAgICBmb3IgKHZhciBpID0gMCwgbCA9IGFyZ3VtZW50cy5sZW5ndGgsIGl0ZW1zID0gbmV3IEFycmF5KGwpOyBpIDwgbDspIGl0ZW1zW2ldID0gYXJndW1lbnRzW2krK107XG4gICAgcmV0dXJuIG5ldyAodHlwZW9mIHRoaXMgPT09ICdmdW5jdGlvbicgPyB0aGlzIDogJE9ic2VydmFibGUpKGZ1bmN0aW9uIChvYnNlcnZlcikge1xuICAgICAgdmFyIGRvbmUgPSBmYWxzZTtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghZG9uZSkge1xuICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaXRlbXMubGVuZ3RoOyArK2opIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoaXRlbXNbal0pO1xuICAgICAgICAgICAgaWYgKGRvbmUpIHJldHVybjtcbiAgICAgICAgICB9IG9ic2VydmVyLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsgZG9uZSA9IHRydWU7IH07XG4gICAgfSk7XG4gIH1cbn0pO1xuXG5oaWRlKCRPYnNlcnZhYmxlLnByb3RvdHlwZSwgT0JTRVJWQUJMRSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbiRleHBvcnQoJGV4cG9ydC5HLCB7IE9ic2VydmFibGU6ICRPYnNlcnZhYmxlIH0pO1xuXG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKCdPYnNlcnZhYmxlJyk7XG4iLCIvLyBpZTktIHNldFRpbWVvdXQgJiBzZXRJbnRlcnZhbCBhZGRpdGlvbmFsIHBhcmFtZXRlcnMgZml4XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcbnZhciBzbGljZSA9IFtdLnNsaWNlO1xudmFyIE1TSUUgPSAvTVNJRSAuXFwuLy50ZXN0KHVzZXJBZ2VudCk7IC8vIDwtIGRpcnR5IGllOS0gY2hlY2tcbnZhciB3cmFwID0gZnVuY3Rpb24gKHNldCkge1xuICByZXR1cm4gZnVuY3Rpb24gKGZuLCB0aW1lIC8qICwgLi4uYXJncyAqLykge1xuICAgIHZhciBib3VuZEFyZ3MgPSBhcmd1bWVudHMubGVuZ3RoID4gMjtcbiAgICB2YXIgYXJncyA9IGJvdW5kQXJncyA/IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKSA6IGZhbHNlO1xuICAgIHJldHVybiBzZXQoYm91bmRBcmdzID8gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICAodHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbiA6IEZ1bmN0aW9uKGZuKSkuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSA6IGZuLCB0aW1lKTtcbiAgfTtcbn07XG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuQiArICRleHBvcnQuRiAqIE1TSUUsIHtcbiAgc2V0VGltZW91dDogd3JhcChnbG9iYWwuc2V0VGltZW91dCksXG4gIHNldEludGVydmFsOiB3cmFwKGdsb2JhbC5zZXRJbnRlcnZhbClcbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7XG4gIHNldEltbWVkaWF0ZTogJHRhc2suc2V0LFxuICBjbGVhckltbWVkaWF0ZTogJHRhc2suY2xlYXJcbn0pO1xuIiwidmFyICRpdGVyYXRvcnMgPSByZXF1aXJlKCcuL2VzNi5hcnJheS5pdGVyYXRvcicpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIElURVJBVE9SID0gd2tzKCdpdGVyYXRvcicpO1xudmFyIFRPX1NUUklOR19UQUcgPSB3a3MoJ3RvU3RyaW5nVGFnJyk7XG52YXIgQXJyYXlWYWx1ZXMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbnZhciBET01JdGVyYWJsZXMgPSB7XG4gIENTU1J1bGVMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgQ1NTU3R5bGVEZWNsYXJhdGlvbjogZmFsc2UsXG4gIENTU1ZhbHVlTGlzdDogZmFsc2UsXG4gIENsaWVudFJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NUmVjdExpc3Q6IGZhbHNlLFxuICBET01TdHJpbmdMaXN0OiBmYWxzZSxcbiAgRE9NVG9rZW5MaXN0OiB0cnVlLFxuICBEYXRhVHJhbnNmZXJJdGVtTGlzdDogZmFsc2UsXG4gIEZpbGVMaXN0OiBmYWxzZSxcbiAgSFRNTEFsbENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MQ29sbGVjdGlvbjogZmFsc2UsXG4gIEhUTUxGb3JtRWxlbWVudDogZmFsc2UsXG4gIEhUTUxTZWxlY3RFbGVtZW50OiBmYWxzZSxcbiAgTWVkaWFMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgTWltZVR5cGVBcnJheTogZmFsc2UsXG4gIE5hbWVkTm9kZU1hcDogZmFsc2UsXG4gIE5vZGVMaXN0OiB0cnVlLFxuICBQYWludFJlcXVlc3RMaXN0OiBmYWxzZSxcbiAgUGx1Z2luOiBmYWxzZSxcbiAgUGx1Z2luQXJyYXk6IGZhbHNlLFxuICBTVkdMZW5ndGhMaXN0OiBmYWxzZSxcbiAgU1ZHTnVtYmVyTGlzdDogZmFsc2UsXG4gIFNWR1BhdGhTZWdMaXN0OiBmYWxzZSxcbiAgU1ZHUG9pbnRMaXN0OiBmYWxzZSxcbiAgU1ZHU3RyaW5nTGlzdDogZmFsc2UsXG4gIFNWR1RyYW5zZm9ybUxpc3Q6IGZhbHNlLFxuICBTb3VyY2VCdWZmZXJMaXN0OiBmYWxzZSxcbiAgU3R5bGVTaGVldExpc3Q6IHRydWUsIC8vIFRPRE86IE5vdCBzcGVjIGNvbXBsaWFudCwgc2hvdWxkIGJlIGZhbHNlLlxuICBUZXh0VHJhY2tDdWVMaXN0OiBmYWxzZSxcbiAgVGV4dFRyYWNrTGlzdDogZmFsc2UsXG4gIFRvdWNoTGlzdDogZmFsc2Vcbn07XG5cbmZvciAodmFyIGNvbGxlY3Rpb25zID0gZ2V0S2V5cyhET01JdGVyYWJsZXMpLCBpID0gMDsgaSA8IGNvbGxlY3Rpb25zLmxlbmd0aDsgaSsrKSB7XG4gIHZhciBOQU1FID0gY29sbGVjdGlvbnNbaV07XG4gIHZhciBleHBsaWNpdCA9IERPTUl0ZXJhYmxlc1tOQU1FXTtcbiAgdmFyIENvbGxlY3Rpb24gPSBnbG9iYWxbTkFNRV07XG4gIHZhciBwcm90byA9IENvbGxlY3Rpb24gJiYgQ29sbGVjdGlvbi5wcm90b3R5cGU7XG4gIHZhciBrZXk7XG4gIGlmIChwcm90bykge1xuICAgIGlmICghcHJvdG9bSVRFUkFUT1JdKSBoaWRlKHByb3RvLCBJVEVSQVRPUiwgQXJyYXlWYWx1ZXMpO1xuICAgIGlmICghcHJvdG9bVE9fU1RSSU5HX1RBR10pIGhpZGUocHJvdG8sIFRPX1NUUklOR19UQUcsIE5BTUUpO1xuICAgIEl0ZXJhdG9yc1tOQU1FXSA9IEFycmF5VmFsdWVzO1xuICAgIGlmIChleHBsaWNpdCkgZm9yIChrZXkgaW4gJGl0ZXJhdG9ycykgaWYgKCFwcm90b1trZXldKSByZWRlZmluZShwcm90bywga2V5LCAkaXRlcmF0b3JzW2tleV0sIHRydWUpO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNCwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBodHRwczovL3Jhdy5naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL21hc3Rlci9MSUNFTlNFIGZpbGUuIEFuXG4gKiBhZGRpdGlvbmFsIGdyYW50IG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW5cbiAqIHRoZSBzYW1lIGRpcmVjdG9yeS5cbiAqL1xuXG4hKGZ1bmN0aW9uKGdsb2JhbCkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgT3AgPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHk7XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIHZhciBpbk1vZHVsZSA9IHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCI7XG4gIHZhciBydW50aW1lID0gZ2xvYmFsLnJlZ2VuZXJhdG9yUnVudGltZTtcbiAgaWYgKHJ1bnRpbWUpIHtcbiAgICBpZiAoaW5Nb2R1bGUpIHtcbiAgICAgIC8vIElmIHJlZ2VuZXJhdG9yUnVudGltZSBpcyBkZWZpbmVkIGdsb2JhbGx5IGFuZCB3ZSdyZSBpbiBhIG1vZHVsZSxcbiAgICAgIC8vIG1ha2UgdGhlIGV4cG9ydHMgb2JqZWN0IGlkZW50aWNhbCB0byByZWdlbmVyYXRvclJ1bnRpbWUuXG4gICAgICBtb2R1bGUuZXhwb3J0cyA9IHJ1bnRpbWU7XG4gICAgfVxuICAgIC8vIERvbid0IGJvdGhlciBldmFsdWF0aW5nIHRoZSByZXN0IG9mIHRoaXMgZmlsZSBpZiB0aGUgcnVudGltZSB3YXNcbiAgICAvLyBhbHJlYWR5IGRlZmluZWQgZ2xvYmFsbHkuXG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLy8gRGVmaW5lIHRoZSBydW50aW1lIGdsb2JhbGx5IChhcyBleHBlY3RlZCBieSBnZW5lcmF0ZWQgY29kZSkgYXMgZWl0aGVyXG4gIC8vIG1vZHVsZS5leHBvcnRzIChpZiB3ZSdyZSBpbiBhIG1vZHVsZSkgb3IgYSBuZXcsIGVtcHR5IG9iamVjdC5cbiAgcnVudGltZSA9IGdsb2JhbC5yZWdlbmVyYXRvclJ1bnRpbWUgPSBpbk1vZHVsZSA/IG1vZHVsZS5leHBvcnRzIDoge307XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcblxuICAgIHJldHVybiBnZW5lcmF0b3I7XG4gIH1cbiAgcnVudGltZS53cmFwID0gd3JhcDtcblxuICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb25cbiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkXG4gIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZVxuICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZ1xuICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZVxuICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGVcbiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaFxuICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IGZuLmNhbGwob2JqLCBhcmcpIH07XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcInRocm93XCIsIGFyZzogZXJyIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkU3RhcnQgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gXCJzdXNwZW5kZWRZaWVsZFwiO1xuICB2YXIgR2VuU3RhdGVFeGVjdXRpbmcgPSBcImV4ZWN1dGluZ1wiO1xuICB2YXIgR2VuU3RhdGVDb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xuXG4gIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXNcbiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50LlxuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZFxuICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXJcbiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgLy8gVGhpcyBpcyBhIHBvbHlmaWxsIGZvciAlSXRlcmF0b3JQcm90b3R5cGUlIGZvciBlbnZpcm9ubWVudHMgdGhhdFxuICAvLyBkb24ndCBuYXRpdmVseSBzdXBwb3J0IGl0LlxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgSXRlcmF0b3JQcm90b3R5cGVbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiAgdmFyIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBpZiAoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgJiZcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJlxuICAgICAgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSkge1xuICAgIC8vIFRoaXMgZW52aXJvbm1lbnQgaGFzIGEgbmF0aXZlICVJdGVyYXRvclByb3RvdHlwZSU7IHVzZSBpdCBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIHBvbHlmaWxsLlxuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gTmF0aXZlSXRlcmF0b3JQcm90b3R5cGU7XG4gIH1cblxuICB2YXIgR3AgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPVxuICAgIEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGVbdG9TdHJpbmdUYWdTeW1ib2xdID1cbiAgICBHZW5lcmF0b3JGdW5jdGlvbi5kaXNwbGF5TmFtZSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcblxuICAvLyBIZWxwZXIgZm9yIGRlZmluaW5nIHRoZSAubmV4dCwgLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzIG9mIHRoZVxuICAvLyBJdGVyYXRvciBpbnRlcmZhY2UgaW4gdGVybXMgb2YgYSBzaW5nbGUgLl9pbnZva2UgbWV0aG9kLlxuICBmdW5jdGlvbiBkZWZpbmVJdGVyYXRvck1ldGhvZHMocHJvdG90eXBlKSB7XG4gICAgW1wibmV4dFwiLCBcInRocm93XCIsIFwicmV0dXJuXCJdLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gICAgICBwcm90b3R5cGVbbWV0aG9kXSA9IGZ1bmN0aW9uKGFyZykge1xuICAgICAgICByZXR1cm4gdGhpcy5faW52b2tlKG1ldGhvZCwgYXJnKTtcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cblxuICBydW50aW1lLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICB2YXIgY3RvciA9IHR5cGVvZiBnZW5GdW4gPT09IFwiZnVuY3Rpb25cIiAmJiBnZW5GdW4uY29uc3RydWN0b3I7XG4gICAgcmV0dXJuIGN0b3JcbiAgICAgID8gY3RvciA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHxcbiAgICAgICAgLy8gRm9yIHRoZSBuYXRpdmUgR2VuZXJhdG9yRnVuY3Rpb24gY29uc3RydWN0b3IsIHRoZSBiZXN0IHdlIGNhblxuICAgICAgICAvLyBkbyBpcyB0byBjaGVjayBpdHMgLm5hbWUgcHJvcGVydHkuXG4gICAgICAgIChjdG9yLmRpc3BsYXlOYW1lIHx8IGN0b3IubmFtZSkgPT09IFwiR2VuZXJhdG9yRnVuY3Rpb25cIlxuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuICBydW50aW1lLm1hcmsgPSBmdW5jdGlvbihnZW5GdW4pIHtcbiAgICBpZiAoT2JqZWN0LnNldFByb3RvdHlwZU9mKSB7XG4gICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YoZ2VuRnVuLCBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdlbkZ1bi5fX3Byb3RvX18gPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgICAgIGlmICghKHRvU3RyaW5nVGFnU3ltYm9sIGluIGdlbkZ1bikpIHtcbiAgICAgICAgZ2VuRnVuW3RvU3RyaW5nVGFnU3ltYm9sXSA9IFwiR2VuZXJhdG9yRnVuY3Rpb25cIjtcbiAgICAgIH1cbiAgICB9XG4gICAgZ2VuRnVuLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoR3ApO1xuICAgIHJldHVybiBnZW5GdW47XG4gIH07XG5cbiAgLy8gV2l0aGluIHRoZSBib2R5IG9mIGFueSBhc3luYyBmdW5jdGlvbiwgYGF3YWl0IHhgIGlzIHRyYW5zZm9ybWVkIHRvXG4gIC8vIGB5aWVsZCByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoeClgLCBzbyB0aGF0IHRoZSBydW50aW1lIGNhbiB0ZXN0XG4gIC8vIGBoYXNPd24uY2FsbCh2YWx1ZSwgXCJfX2F3YWl0XCIpYCB0byBkZXRlcm1pbmUgaWYgdGhlIHlpZWxkZWQgdmFsdWUgaXNcbiAgLy8gbWVhbnQgdG8gYmUgYXdhaXRlZC5cbiAgcnVudGltZS5hd3JhcCA9IGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiB7IF9fYXdhaXQ6IGFyZyB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIEFzeW5jSXRlcmF0b3IoZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChnZW5lcmF0b3JbbWV0aG9kXSwgZ2VuZXJhdG9yLCBhcmcpO1xuICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgcmVqZWN0KHJlY29yZC5hcmcpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHJlY29yZC5hcmc7XG4gICAgICAgIHZhciB2YWx1ZSA9IHJlc3VsdC52YWx1ZTtcbiAgICAgICAgaWYgKHZhbHVlICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgICAgIGhhc093bi5jYWxsKHZhbHVlLCBcIl9fYXdhaXRcIikpIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJ0aHJvd1wiLCBlcnIsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKGZ1bmN0aW9uKHVud3JhcHBlZCkge1xuICAgICAgICAgIC8vIFdoZW4gYSB5aWVsZGVkIFByb21pc2UgaXMgcmVzb2x2ZWQsIGl0cyBmaW5hbCB2YWx1ZSBiZWNvbWVzXG4gICAgICAgICAgLy8gdGhlIC52YWx1ZSBvZiB0aGUgUHJvbWlzZTx7dmFsdWUsZG9uZX0+IHJlc3VsdCBmb3IgdGhlXG4gICAgICAgICAgLy8gY3VycmVudCBpdGVyYXRpb24uIElmIHRoZSBQcm9taXNlIGlzIHJlamVjdGVkLCBob3dldmVyLCB0aGVcbiAgICAgICAgICAvLyByZXN1bHQgZm9yIHRoaXMgaXRlcmF0aW9uIHdpbGwgYmUgcmVqZWN0ZWQgd2l0aCB0aGUgc2FtZVxuICAgICAgICAgIC8vIHJlYXNvbi4gTm90ZSB0aGF0IHJlamVjdGlvbnMgb2YgeWllbGRlZCBQcm9taXNlcyBhcmUgbm90XG4gICAgICAgICAgLy8gdGhyb3duIGJhY2sgaW50byB0aGUgZ2VuZXJhdG9yIGZ1bmN0aW9uLCBhcyBpcyB0aGUgY2FzZVxuICAgICAgICAgIC8vIHdoZW4gYW4gYXdhaXRlZCBQcm9taXNlIGlzIHJlamVjdGVkLiBUaGlzIGRpZmZlcmVuY2UgaW5cbiAgICAgICAgICAvLyBiZWhhdmlvciBiZXR3ZWVuIHlpZWxkIGFuZCBhd2FpdCBpcyBpbXBvcnRhbnQsIGJlY2F1c2UgaXRcbiAgICAgICAgICAvLyBhbGxvd3MgdGhlIGNvbnN1bWVyIHRvIGRlY2lkZSB3aGF0IHRvIGRvIHdpdGggdGhlIHlpZWxkZWRcbiAgICAgICAgICAvLyByZWplY3Rpb24gKHN3YWxsb3cgaXQgYW5kIGNvbnRpbnVlLCBtYW51YWxseSAudGhyb3cgaXQgYmFja1xuICAgICAgICAgIC8vIGludG8gdGhlIGdlbmVyYXRvciwgYWJhbmRvbiBpdGVyYXRpb24sIHdoYXRldmVyKS4gV2l0aFxuICAgICAgICAgIC8vIGF3YWl0LCBieSBjb250cmFzdCwgdGhlcmUgaXMgbm8gb3Bwb3J0dW5pdHkgdG8gZXhhbWluZSB0aGVcbiAgICAgICAgICAvLyByZWplY3Rpb24gcmVhc29uIG91dHNpZGUgdGhlIGdlbmVyYXRvciBmdW5jdGlvbiwgc28gdGhlXG4gICAgICAgICAgLy8gb25seSBvcHRpb24gaXMgdG8gdGhyb3cgaXQgZnJvbSB0aGUgYXdhaXQgZXhwcmVzc2lvbiwgYW5kXG4gICAgICAgICAgLy8gbGV0IHRoZSBnZW5lcmF0b3IgZnVuY3Rpb24gaGFuZGxlIHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmVzdWx0LnZhbHVlID0gdW53cmFwcGVkO1xuICAgICAgICAgIHJlc29sdmUocmVzdWx0KTtcbiAgICAgICAgfSwgcmVqZWN0KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGdsb2JhbC5wcm9jZXNzID09PSBcIm9iamVjdFwiICYmIGdsb2JhbC5wcm9jZXNzLmRvbWFpbikge1xuICAgICAgaW52b2tlID0gZ2xvYmFsLnByb2Nlc3MuZG9tYWluLmJpbmQoaW52b2tlKTtcbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgICBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcHJldmlvdXNQcm9taXNlID1cbiAgICAgICAgLy8gSWYgZW5xdWV1ZSBoYXMgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIHdlIHdhbnQgdG8gd2FpdCB1bnRpbFxuICAgICAgICAvLyBhbGwgcHJldmlvdXMgUHJvbWlzZXMgaGF2ZSBiZWVuIHJlc29sdmVkIGJlZm9yZSBjYWxsaW5nIGludm9rZSxcbiAgICAgICAgLy8gc28gdGhhdCByZXN1bHRzIGFyZSBhbHdheXMgZGVsaXZlcmVkIGluIHRoZSBjb3JyZWN0IG9yZGVyLiBJZlxuICAgICAgICAvLyBlbnF1ZXVlIGhhcyBub3QgYmVlbiBjYWxsZWQgYmVmb3JlLCB0aGVuIGl0IGlzIGltcG9ydGFudCB0b1xuICAgICAgICAvLyBjYWxsIGludm9rZSBpbW1lZGlhdGVseSwgd2l0aG91dCB3YWl0aW5nIG9uIGEgY2FsbGJhY2sgdG8gZmlyZSxcbiAgICAgICAgLy8gc28gdGhhdCB0aGUgYXN5bmMgZ2VuZXJhdG9yIGZ1bmN0aW9uIGhhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gZG9cbiAgICAgICAgLy8gYW55IG5lY2Vzc2FyeSBzZXR1cCBpbiBhIHByZWRpY3RhYmxlIHdheS4gVGhpcyBwcmVkaWN0YWJpbGl0eVxuICAgICAgICAvLyBpcyB3aHkgdGhlIFByb21pc2UgY29uc3RydWN0b3Igc3luY2hyb25vdXNseSBpbnZva2VzIGl0c1xuICAgICAgICAvLyBleGVjdXRvciBjYWxsYmFjaywgYW5kIHdoeSBhc3luYyBmdW5jdGlvbnMgc3luY2hyb25vdXNseVxuICAgICAgICAvLyBleGVjdXRlIGNvZGUgYmVmb3JlIHRoZSBmaXJzdCBhd2FpdC4gU2luY2Ugd2UgaW1wbGVtZW50IHNpbXBsZVxuICAgICAgICAvLyBhc3luYyBmdW5jdGlvbnMgaW4gdGVybXMgb2YgYXN5bmMgZ2VuZXJhdG9ycywgaXQgaXMgZXNwZWNpYWxseVxuICAgICAgICAvLyBpbXBvcnRhbnQgdG8gZ2V0IHRoaXMgcmlnaHQsIGV2ZW4gdGhvdWdoIGl0IHJlcXVpcmVzIGNhcmUuXG4gICAgICAgIHByZXZpb3VzUHJvbWlzZSA/IHByZXZpb3VzUHJvbWlzZS50aGVuKFxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLFxuICAgICAgICAgIC8vIEF2b2lkIHByb3BhZ2F0aW5nIGZhaWx1cmVzIHRvIFByb21pc2VzIHJldHVybmVkIGJ5IGxhdGVyXG4gICAgICAgICAgLy8gaW52b2NhdGlvbnMgb2YgdGhlIGl0ZXJhdG9yLlxuICAgICAgICAgIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnXG4gICAgICAgICkgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpO1xuICAgIH1cblxuICAgIC8vIERlZmluZSB0aGUgdW5pZmllZCBoZWxwZXIgbWV0aG9kIHRoYXQgaXMgdXNlZCB0byBpbXBsZW1lbnQgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiAoc2VlIGRlZmluZUl0ZXJhdG9yTWV0aG9kcykuXG4gICAgdGhpcy5faW52b2tlID0gZW5xdWV1ZTtcbiAgfVxuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSk7XG4gIEFzeW5jSXRlcmF0b3IucHJvdG90eXBlW2FzeW5jSXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuICBydW50aW1lLkFzeW5jSXRlcmF0b3IgPSBBc3luY0l0ZXJhdG9yO1xuXG4gIC8vIE5vdGUgdGhhdCBzaW1wbGUgYXN5bmMgZnVuY3Rpb25zIGFyZSBpbXBsZW1lbnRlZCBvbiB0b3Agb2ZcbiAgLy8gQXN5bmNJdGVyYXRvciBvYmplY3RzOyB0aGV5IGp1c3QgcmV0dXJuIGEgUHJvbWlzZSBmb3IgdGhlIHZhbHVlIG9mXG4gIC8vIHRoZSBmaW5hbCByZXN1bHQgcHJvZHVjZWQgYnkgdGhlIGl0ZXJhdG9yLlxuICBydW50aW1lLmFzeW5jID0gZnVuY3Rpb24oaW5uZXJGbiwgb3V0ZXJGbiwgc2VsZiwgdHJ5TG9jc0xpc3QpIHtcbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKFxuICAgICAgd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdClcbiAgICApO1xuXG4gICAgcmV0dXJuIHJ1bnRpbWUuaXNHZW5lcmF0b3JGdW5jdGlvbihvdXRlckZuKVxuICAgICAgPyBpdGVyIC8vIElmIG91dGVyRm4gaXMgYSBnZW5lcmF0b3IsIHJldHVybiB0aGUgZnVsbCBpdGVyYXRvci5cbiAgICAgIDogaXRlci5uZXh0KCkudGhlbihmdW5jdGlvbihyZXN1bHQpIHtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQudmFsdWUgOiBpdGVyLm5leHQoKTtcbiAgICAgICAgfSk7XG4gIH07XG5cbiAgZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KSB7XG4gICAgdmFyIHN0YXRlID0gR2VuU3RhdGVTdXNwZW5kZWRTdGFydDtcblxuICAgIHJldHVybiBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcpIHtcbiAgICAgIGlmIChzdGF0ZSA9PT0gR2VuU3RhdGVFeGVjdXRpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUNvbXBsZXRlZCkge1xuICAgICAgICBpZiAobWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICB0aHJvdyBhcmc7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBCZSBmb3JnaXZpbmcsIHBlciAyNS4zLjMuMy4zIG9mIHRoZSBzcGVjOlxuICAgICAgICAvLyBodHRwczovL3Blb3BsZS5tb3ppbGxhLm9yZy9+am9yZW5kb3JmZi9lczYtZHJhZnQuaHRtbCNzZWMtZ2VuZXJhdG9ycmVzdW1lXG4gICAgICAgIHJldHVybiBkb25lUmVzdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnRleHQubWV0aG9kID0gbWV0aG9kO1xuICAgICAgY29udGV4dC5hcmcgPSBhcmc7XG5cbiAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBkZWxlZ2F0ZSA9IGNvbnRleHQuZGVsZWdhdGU7XG4gICAgICAgIGlmIChkZWxlZ2F0ZSkge1xuICAgICAgICAgIHZhciBkZWxlZ2F0ZVJlc3VsdCA9IG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpO1xuICAgICAgICAgIGlmIChkZWxlZ2F0ZVJlc3VsdCkge1xuICAgICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0ID09PSBDb250aW51ZVNlbnRpbmVsKSBjb250aW51ZTtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVJlc3VsdDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwibmV4dFwiKSB7XG4gICAgICAgICAgLy8gU2V0dGluZyBjb250ZXh0Ll9zZW50IGZvciBsZWdhY3kgc3VwcG9ydCBvZiBCYWJlbCdzXG4gICAgICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgICAgICBjb250ZXh0LnNlbnQgPSBjb250ZXh0Ll9zZW50ID0gY29udGV4dC5hcmc7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0KSB7XG4gICAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgICAgdGhyb3cgY29udGV4dC5hcmc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29udGV4dC5kaXNwYXRjaEV4Y2VwdGlvbihjb250ZXh0LmFyZyk7XG5cbiAgICAgICAgfSBlbHNlIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICAgIGNvbnRleHQuYWJydXB0KFwicmV0dXJuXCIsIGNvbnRleHQuYXJnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN0YXRlID0gR2VuU3RhdGVFeGVjdXRpbmc7XG5cbiAgICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpO1xuICAgICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIpIHtcbiAgICAgICAgICAvLyBJZiBhbiBleGNlcHRpb24gaXMgdGhyb3duIGZyb20gaW5uZXJGbiwgd2UgbGVhdmUgc3RhdGUgPT09XG4gICAgICAgICAgLy8gR2VuU3RhdGVFeGVjdXRpbmcgYW5kIGxvb3AgYmFjayBmb3IgYW5vdGhlciBpbnZvY2F0aW9uLlxuICAgICAgICAgIHN0YXRlID0gY29udGV4dC5kb25lXG4gICAgICAgICAgICA/IEdlblN0YXRlQ29tcGxldGVkXG4gICAgICAgICAgICA6IEdlblN0YXRlU3VzcGVuZGVkWWllbGQ7XG5cbiAgICAgICAgICBpZiAocmVjb3JkLmFyZyA9PT0gQ29udGludWVTZW50aW5lbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZhbHVlOiByZWNvcmQuYXJnLFxuICAgICAgICAgICAgZG9uZTogY29udGV4dC5kb25lXG4gICAgICAgICAgfTtcblxuICAgICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBzdGF0ZSA9IEdlblN0YXRlQ29tcGxldGVkO1xuICAgICAgICAgIC8vIERpc3BhdGNoIHRoZSBleGNlcHRpb24gYnkgbG9vcGluZyBiYWNrIGFyb3VuZCB0byB0aGVcbiAgICAgICAgICAvLyBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKSBjYWxsIGFib3ZlLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyBDYWxsIGRlbGVnYXRlLml0ZXJhdG9yW2NvbnRleHQubWV0aG9kXShjb250ZXh0LmFyZykgYW5kIGhhbmRsZSB0aGVcbiAgLy8gcmVzdWx0LCBlaXRoZXIgYnkgcmV0dXJuaW5nIGEgeyB2YWx1ZSwgZG9uZSB9IHJlc3VsdCBmcm9tIHRoZVxuICAvLyBkZWxlZ2F0ZSBpdGVyYXRvciwgb3IgYnkgbW9kaWZ5aW5nIGNvbnRleHQubWV0aG9kIGFuZCBjb250ZXh0LmFyZyxcbiAgLy8gc2V0dGluZyBjb250ZXh0LmRlbGVnYXRlIHRvIG51bGwsIGFuZCByZXR1cm5pbmcgdGhlIENvbnRpbnVlU2VudGluZWwuXG4gIGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZGVsZWdhdGUsIGNvbnRleHQpIHtcbiAgICB2YXIgbWV0aG9kID0gZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdO1xuICAgIGlmIChtZXRob2QgPT09IHVuZGVmaW5lZCkge1xuICAgICAgLy8gQSAudGhyb3cgb3IgLnJldHVybiB3aGVuIHRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBoYXMgbm8gLnRocm93XG4gICAgICAvLyBtZXRob2QgYWx3YXlzIHRlcm1pbmF0ZXMgdGhlIHlpZWxkKiBsb29wLlxuICAgICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIGlmIChkZWxlZ2F0ZS5pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAvLyBJZiB0aGUgZGVsZWdhdGUgaXRlcmF0b3IgaGFzIGEgcmV0dXJuIG1ldGhvZCwgZ2l2ZSBpdCBhXG4gICAgICAgICAgLy8gY2hhbmNlIHRvIGNsZWFuIHVwLlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBtYXliZUludm9rZURlbGVnYXRlKGRlbGVnYXRlLCBjb250ZXh0KTtcblxuICAgICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICAvLyBJZiBtYXliZUludm9rZURlbGVnYXRlKGNvbnRleHQpIGNoYW5nZWQgY29udGV4dC5tZXRob2QgZnJvbVxuICAgICAgICAgICAgLy8gXCJyZXR1cm5cIiB0byBcInRocm93XCIsIGxldCB0aGF0IG92ZXJyaWRlIHRoZSBUeXBlRXJyb3IgYmVsb3cuXG4gICAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFxuICAgICAgICAgIFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKG1ldGhvZCwgZGVsZWdhdGUuaXRlcmF0b3IsIGNvbnRleHQuYXJnKTtcblxuICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICBjb250ZXh0Lm1ldGhvZCA9IFwidGhyb3dcIjtcbiAgICAgIGNvbnRleHQuYXJnID0gcmVjb3JkLmFyZztcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgdmFyIGluZm8gPSByZWNvcmQuYXJnO1xuXG4gICAgaWYgKCEgaW5mbykge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IG5ldyBUeXBlRXJyb3IoXCJpdGVyYXRvciByZXN1bHQgaXMgbm90IGFuIG9iamVjdFwiKTtcbiAgICAgIGNvbnRleHQuZGVsZWdhdGUgPSBudWxsO1xuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuXG4gICAgaWYgKGluZm8uZG9uZSkge1xuICAgICAgLy8gQXNzaWduIHRoZSByZXN1bHQgb2YgdGhlIGZpbmlzaGVkIGRlbGVnYXRlIHRvIHRoZSB0ZW1wb3JhcnlcbiAgICAgIC8vIHZhcmlhYmxlIHNwZWNpZmllZCBieSBkZWxlZ2F0ZS5yZXN1bHROYW1lIChzZWUgZGVsZWdhdGVZaWVsZCkuXG4gICAgICBjb250ZXh0W2RlbGVnYXRlLnJlc3VsdE5hbWVdID0gaW5mby52YWx1ZTtcblxuICAgICAgLy8gUmVzdW1lIGV4ZWN1dGlvbiBhdCB0aGUgZGVzaXJlZCBsb2NhdGlvbiAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dC5uZXh0ID0gZGVsZWdhdGUubmV4dExvYztcblxuICAgICAgLy8gSWYgY29udGV4dC5tZXRob2Qgd2FzIFwidGhyb3dcIiBidXQgdGhlIGRlbGVnYXRlIGhhbmRsZWQgdGhlXG4gICAgICAvLyBleGNlcHRpb24sIGxldCB0aGUgb3V0ZXIgZ2VuZXJhdG9yIHByb2NlZWQgbm9ybWFsbHkuIElmXG4gICAgICAvLyBjb250ZXh0Lm1ldGhvZCB3YXMgXCJuZXh0XCIsIGZvcmdldCBjb250ZXh0LmFyZyBzaW5jZSBpdCBoYXMgYmVlblxuICAgICAgLy8gXCJjb25zdW1lZFwiIGJ5IHRoZSBkZWxlZ2F0ZSBpdGVyYXRvci4gSWYgY29udGV4dC5tZXRob2Qgd2FzXG4gICAgICAvLyBcInJldHVyblwiLCBhbGxvdyB0aGUgb3JpZ2luYWwgLnJldHVybiBjYWxsIHRvIGNvbnRpbnVlIGluIHRoZVxuICAgICAgLy8gb3V0ZXIgZ2VuZXJhdG9yLlxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kICE9PSBcInJldHVyblwiKSB7XG4gICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFJlLXlpZWxkIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGRlbGVnYXRlIG1ldGhvZC5cbiAgICAgIHJldHVybiBpbmZvO1xuICAgIH1cblxuICAgIC8vIFRoZSBkZWxlZ2F0ZSBpdGVyYXRvciBpcyBmaW5pc2hlZCwgc28gZm9yZ2V0IGl0IGFuZCBjb250aW51ZSB3aXRoXG4gICAgLy8gdGhlIG91dGVyIGdlbmVyYXRvci5cbiAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgfVxuXG4gIC8vIERlZmluZSBHZW5lcmF0b3IucHJvdG90eXBlLntuZXh0LHRocm93LHJldHVybn0gaW4gdGVybXMgb2YgdGhlXG4gIC8vIHVuaWZpZWQgLl9pbnZva2UgaGVscGVyIG1ldGhvZC5cbiAgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEdwKTtcblxuICBHcFt0b1N0cmluZ1RhZ1N5bWJvbF0gPSBcIkdlbmVyYXRvclwiO1xuXG4gIC8vIEEgR2VuZXJhdG9yIHNob3VsZCBhbHdheXMgcmV0dXJuIGl0c2VsZiBhcyB0aGUgaXRlcmF0b3Igb2JqZWN0IHdoZW4gdGhlXG4gIC8vIEBAaXRlcmF0b3IgZnVuY3Rpb24gaXMgY2FsbGVkIG9uIGl0LiBTb21lIGJyb3dzZXJzJyBpbXBsZW1lbnRhdGlvbnMgb2YgdGhlXG4gIC8vIGl0ZXJhdG9yIHByb3RvdHlwZSBjaGFpbiBpbmNvcnJlY3RseSBpbXBsZW1lbnQgdGhpcywgY2F1c2luZyB0aGUgR2VuZXJhdG9yXG4gIC8vIG9iamVjdCB0byBub3QgYmUgcmV0dXJuZWQgZnJvbSB0aGlzIGNhbGwuIFRoaXMgZW5zdXJlcyB0aGF0IGRvZXNuJ3QgaGFwcGVuLlxuICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2ZhY2Vib29rL3JlZ2VuZXJhdG9yL2lzc3Vlcy8yNzQgZm9yIG1vcmUgZGV0YWlscy5cbiAgR3BbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgR3AudG9TdHJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gXCJbb2JqZWN0IEdlbmVyYXRvcl1cIjtcbiAgfTtcblxuICBmdW5jdGlvbiBwdXNoVHJ5RW50cnkobG9jcykge1xuICAgIHZhciBlbnRyeSA9IHsgdHJ5TG9jOiBsb2NzWzBdIH07XG5cbiAgICBpZiAoMSBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5jYXRjaExvYyA9IGxvY3NbMV07XG4gICAgfVxuXG4gICAgaWYgKDIgaW4gbG9jcykge1xuICAgICAgZW50cnkuZmluYWxseUxvYyA9IGxvY3NbMl07XG4gICAgICBlbnRyeS5hZnRlckxvYyA9IGxvY3NbM107XG4gICAgfVxuXG4gICAgdGhpcy50cnlFbnRyaWVzLnB1c2goZW50cnkpO1xuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXRUcnlFbnRyeShlbnRyeSkge1xuICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uIHx8IHt9O1xuICAgIHJlY29yZC50eXBlID0gXCJub3JtYWxcIjtcbiAgICBkZWxldGUgcmVjb3JkLmFyZztcbiAgICBlbnRyeS5jb21wbGV0aW9uID0gcmVjb3JkO1xuICB9XG5cbiAgZnVuY3Rpb24gQ29udGV4dCh0cnlMb2NzTGlzdCkge1xuICAgIC8vIFRoZSByb290IGVudHJ5IG9iamVjdCAoZWZmZWN0aXZlbHkgYSB0cnkgc3RhdGVtZW50IHdpdGhvdXQgYSBjYXRjaFxuICAgIC8vIG9yIGEgZmluYWxseSBibG9jaykgZ2l2ZXMgdXMgYSBwbGFjZSB0byBzdG9yZSB2YWx1ZXMgdGhyb3duIGZyb21cbiAgICAvLyBsb2NhdGlvbnMgd2hlcmUgdGhlcmUgaXMgbm8gZW5jbG9zaW5nIHRyeSBzdGF0ZW1lbnQuXG4gICAgdGhpcy50cnlFbnRyaWVzID0gW3sgdHJ5TG9jOiBcInJvb3RcIiB9XTtcbiAgICB0cnlMb2NzTGlzdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyk7XG4gICAgdGhpcy5yZXNldCh0cnVlKTtcbiAgfVxuXG4gIHJ1bnRpbWUua2V5cyA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHZhciBrZXlzID0gW107XG4gICAgZm9yICh2YXIga2V5IGluIG9iamVjdCkge1xuICAgICAga2V5cy5wdXNoKGtleSk7XG4gICAgfVxuICAgIGtleXMucmV2ZXJzZSgpO1xuXG4gICAgLy8gUmF0aGVyIHRoYW4gcmV0dXJuaW5nIGFuIG9iamVjdCB3aXRoIGEgbmV4dCBtZXRob2QsIHdlIGtlZXBcbiAgICAvLyB0aGluZ3Mgc2ltcGxlIGFuZCByZXR1cm4gdGhlIG5leHQgZnVuY3Rpb24gaXRzZWxmLlxuICAgIHJldHVybiBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgd2hpbGUgKGtleXMubGVuZ3RoKSB7XG4gICAgICAgIHZhciBrZXkgPSBrZXlzLnBvcCgpO1xuICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkge1xuICAgICAgICAgIG5leHQudmFsdWUgPSBrZXk7XG4gICAgICAgICAgbmV4dC5kb25lID0gZmFsc2U7XG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVG8gYXZvaWQgY3JlYXRpbmcgYW4gYWRkaXRpb25hbCBvYmplY3QsIHdlIGp1c3QgaGFuZyB0aGUgLnZhbHVlXG4gICAgICAvLyBhbmQgLmRvbmUgcHJvcGVydGllcyBvZmYgdGhlIG5leHQgZnVuY3Rpb24gb2JqZWN0IGl0c2VsZi4gVGhpc1xuICAgICAgLy8gYWxzbyBlbnN1cmVzIHRoYXQgdGhlIG1pbmlmaWVyIHdpbGwgbm90IGFub255bWl6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfTtcbiAgfTtcblxuICBmdW5jdGlvbiB2YWx1ZXMoaXRlcmFibGUpIHtcbiAgICBpZiAoaXRlcmFibGUpIHtcbiAgICAgIHZhciBpdGVyYXRvck1ldGhvZCA9IGl0ZXJhYmxlW2l0ZXJhdG9yU3ltYm9sXTtcbiAgICAgIGlmIChpdGVyYXRvck1ldGhvZCkge1xuICAgICAgICByZXR1cm4gaXRlcmF0b3JNZXRob2QuY2FsbChpdGVyYWJsZSk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0eXBlb2YgaXRlcmFibGUubmV4dCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBpdGVyYWJsZTtcbiAgICAgIH1cblxuICAgICAgaWYgKCFpc05hTihpdGVyYWJsZS5sZW5ndGgpKSB7XG4gICAgICAgIHZhciBpID0gLTEsIG5leHQgPSBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICAgIHdoaWxlICgrK2kgPCBpdGVyYWJsZS5sZW5ndGgpIHtcbiAgICAgICAgICAgIGlmIChoYXNPd24uY2FsbChpdGVyYWJsZSwgaSkpIHtcbiAgICAgICAgICAgICAgbmV4dC52YWx1ZSA9IGl0ZXJhYmxlW2ldO1xuICAgICAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgbmV4dC52YWx1ZSA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBuZXh0LmRvbmUgPSB0cnVlO1xuXG4gICAgICAgICAgcmV0dXJuIG5leHQ7XG4gICAgICAgIH07XG5cbiAgICAgICAgcmV0dXJuIG5leHQubmV4dCA9IG5leHQ7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmV0dXJuIGFuIGl0ZXJhdG9yIHdpdGggbm8gdmFsdWVzLlxuICAgIHJldHVybiB7IG5leHQ6IGRvbmVSZXN1bHQgfTtcbiAgfVxuICBydW50aW1lLnZhbHVlcyA9IHZhbHVlcztcblxuICBmdW5jdGlvbiBkb25lUmVzdWx0KCkge1xuICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgfVxuXG4gIENvbnRleHQucHJvdG90eXBlID0ge1xuICAgIGNvbnN0cnVjdG9yOiBDb250ZXh0LFxuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uKHNraXBUZW1wUmVzZXQpIHtcbiAgICAgIHRoaXMucHJldiA9IDA7XG4gICAgICB0aGlzLm5leHQgPSAwO1xuICAgICAgLy8gUmVzZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgIC8vIGZ1bmN0aW9uLnNlbnQgaW1wbGVtZW50YXRpb24uXG4gICAgICB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdW5kZWZpbmVkO1xuICAgICAgdGhpcy5kb25lID0gZmFsc2U7XG4gICAgICB0aGlzLmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgdGhpcy5tZXRob2QgPSBcIm5leHRcIjtcbiAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuXG4gICAgICB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KTtcblxuICAgICAgaWYgKCFza2lwVGVtcFJlc2V0KSB7XG4gICAgICAgIGZvciAodmFyIG5hbWUgaW4gdGhpcykge1xuICAgICAgICAgIC8vIE5vdCBzdXJlIGFib3V0IHRoZSBvcHRpbWFsIG9yZGVyIG9mIHRoZXNlIGNvbmRpdGlvbnM6XG4gICAgICAgICAgaWYgKG5hbWUuY2hhckF0KDApID09PSBcInRcIiAmJlxuICAgICAgICAgICAgICBoYXNPd24uY2FsbCh0aGlzLCBuYW1lKSAmJlxuICAgICAgICAgICAgICAhaXNOYU4oK25hbWUuc2xpY2UoMSkpKSB7XG4gICAgICAgICAgICB0aGlzW25hbWVdID0gdW5kZWZpbmVkO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBzdG9wOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZG9uZSA9IHRydWU7XG5cbiAgICAgIHZhciByb290RW50cnkgPSB0aGlzLnRyeUVudHJpZXNbMF07XG4gICAgICB2YXIgcm9vdFJlY29yZCA9IHJvb3RFbnRyeS5jb21wbGV0aW9uO1xuICAgICAgaWYgKHJvb3RSZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJvb3RSZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdGhpcy5ydmFsO1xuICAgIH0sXG5cbiAgICBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24oZXhjZXB0aW9uKSB7XG4gICAgICBpZiAodGhpcy5kb25lKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjtcbiAgICAgIH1cblxuICAgICAgdmFyIGNvbnRleHQgPSB0aGlzO1xuICAgICAgZnVuY3Rpb24gaGFuZGxlKGxvYywgY2F1Z2h0KSB7XG4gICAgICAgIHJlY29yZC50eXBlID0gXCJ0aHJvd1wiO1xuICAgICAgICByZWNvcmQuYXJnID0gZXhjZXB0aW9uO1xuICAgICAgICBjb250ZXh0Lm5leHQgPSBsb2M7XG5cbiAgICAgICAgaWYgKGNhdWdodCkge1xuICAgICAgICAgIC8vIElmIHRoZSBkaXNwYXRjaGVkIGV4Y2VwdGlvbiB3YXMgY2F1Z2h0IGJ5IGEgY2F0Y2ggYmxvY2ssXG4gICAgICAgICAgLy8gdGhlbiBsZXQgdGhhdCBjYXRjaCBibG9jayBoYW5kbGUgdGhlIGV4Y2VwdGlvbiBub3JtYWxseS5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICAgIGNvbnRleHQuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICEhIGNhdWdodDtcbiAgICAgIH1cblxuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IFwicm9vdFwiKSB7XG4gICAgICAgICAgLy8gRXhjZXB0aW9uIHRocm93biBvdXRzaWRlIG9mIGFueSB0cnkgYmxvY2sgdGhhdCBjb3VsZCBoYW5kbGVcbiAgICAgICAgICAvLyBpdCwgc28gc2V0IHRoZSBjb21wbGV0aW9uIHZhbHVlIG9mIHRoZSBlbnRpcmUgZnVuY3Rpb24gdG9cbiAgICAgICAgICAvLyB0aHJvdyB0aGUgZXhjZXB0aW9uLlxuICAgICAgICAgIHJldHVybiBoYW5kbGUoXCJlbmRcIik7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldikge1xuICAgICAgICAgIHZhciBoYXNDYXRjaCA9IGhhc093bi5jYWxsKGVudHJ5LCBcImNhdGNoTG9jXCIpO1xuICAgICAgICAgIHZhciBoYXNGaW5hbGx5ID0gaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKTtcblxuICAgICAgICAgIGlmIChoYXNDYXRjaCAmJiBoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuY2F0Y2hMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5jYXRjaExvYywgdHJ1ZSk7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzQ2F0Y2gpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSBpZiAoaGFzRmluYWxseSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZShlbnRyeS5maW5hbGx5TG9jKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgYWJydXB0OiBmdW5jdGlvbih0eXBlLCBhcmcpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkudHJ5TG9jIDw9IHRoaXMucHJldiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwoZW50cnksIFwiZmluYWxseUxvY1wiKSAmJlxuICAgICAgICAgICAgdGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgIHZhciBmaW5hbGx5RW50cnkgPSBlbnRyeTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoZmluYWxseUVudHJ5ICYmXG4gICAgICAgICAgKHR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgICB0eXBlID09PSBcImNvbnRpbnVlXCIpICYmXG4gICAgICAgICAgZmluYWxseUVudHJ5LnRyeUxvYyA8PSBhcmcgJiZcbiAgICAgICAgICBhcmcgPD0gZmluYWxseUVudHJ5LmZpbmFsbHlMb2MpIHtcbiAgICAgICAgLy8gSWdub3JlIHRoZSBmaW5hbGx5IGVudHJ5IGlmIGNvbnRyb2wgaXMgbm90IGp1bXBpbmcgdG8gYVxuICAgICAgICAvLyBsb2NhdGlvbiBvdXRzaWRlIHRoZSB0cnkvY2F0Y2ggYmxvY2suXG4gICAgICAgIGZpbmFsbHlFbnRyeSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciByZWNvcmQgPSBmaW5hbGx5RW50cnkgPyBmaW5hbGx5RW50cnkuY29tcGxldGlvbiA6IHt9O1xuICAgICAgcmVjb3JkLnR5cGUgPSB0eXBlO1xuICAgICAgcmVjb3JkLmFyZyA9IGFyZztcblxuICAgICAgaWYgKGZpbmFsbHlFbnRyeSkge1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICB0aGlzLm5leHQgPSBmaW5hbGx5RW50cnkuZmluYWxseUxvYztcbiAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlKHJlY29yZCk7XG4gICAgfSxcblxuICAgIGNvbXBsZXRlOiBmdW5jdGlvbihyZWNvcmQsIGFmdGVyTG9jKSB7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICB0aHJvdyByZWNvcmQuYXJnO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwiYnJlYWtcIiB8fFxuICAgICAgICAgIHJlY29yZC50eXBlID09PSBcImNvbnRpbnVlXCIpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gcmVjb3JkLmFyZztcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwicmV0dXJuXCIpIHtcbiAgICAgICAgdGhpcy5ydmFsID0gdGhpcy5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB0aGlzLm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgIHRoaXMubmV4dCA9IFwiZW5kXCI7XG4gICAgICB9IGVsc2UgaWYgKHJlY29yZC50eXBlID09PSBcIm5vcm1hbFwiICYmIGFmdGVyTG9jKSB7XG4gICAgICAgIHRoaXMubmV4dCA9IGFmdGVyTG9jO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9LFxuXG4gICAgZmluaXNoOiBmdW5jdGlvbihmaW5hbGx5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LmZpbmFsbHlMb2MgPT09IGZpbmFsbHlMb2MpIHtcbiAgICAgICAgICB0aGlzLmNvbXBsZXRlKGVudHJ5LmNvbXBsZXRpb24sIGVudHJ5LmFmdGVyTG9jKTtcbiAgICAgICAgICByZXNldFRyeUVudHJ5KGVudHJ5KTtcbiAgICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBcImNhdGNoXCI6IGZ1bmN0aW9uKHRyeUxvYykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPT09IHRyeUxvYykge1xuICAgICAgICAgIHZhciByZWNvcmQgPSBlbnRyeS5jb21wbGV0aW9uO1xuICAgICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgICAgICB2YXIgdGhyb3duID0gcmVjb3JkLmFyZztcbiAgICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gdGhyb3duO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSBjb250ZXh0LmNhdGNoIG1ldGhvZCBtdXN0IG9ubHkgYmUgY2FsbGVkIHdpdGggYSBsb2NhdGlvblxuICAgICAgLy8gYXJndW1lbnQgdGhhdCBjb3JyZXNwb25kcyB0byBhIGtub3duIGNhdGNoIGJsb2NrLlxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiaWxsZWdhbCBjYXRjaCBhdHRlbXB0XCIpO1xuICAgIH0sXG5cbiAgICBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbihpdGVyYWJsZSwgcmVzdWx0TmFtZSwgbmV4dExvYykge1xuICAgICAgdGhpcy5kZWxlZ2F0ZSA9IHtcbiAgICAgICAgaXRlcmF0b3I6IHZhbHVlcyhpdGVyYWJsZSksXG4gICAgICAgIHJlc3VsdE5hbWU6IHJlc3VsdE5hbWUsXG4gICAgICAgIG5leHRMb2M6IG5leHRMb2NcbiAgICAgIH07XG5cbiAgICAgIGlmICh0aGlzLm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgLy8gRGVsaWJlcmF0ZWx5IGZvcmdldCB0aGUgbGFzdCBzZW50IHZhbHVlIHNvIHRoYXQgd2UgZG9uJ3RcbiAgICAgICAgLy8gYWNjaWRlbnRhbGx5IHBhc3MgaXQgb24gdG8gdGhlIGRlbGVnYXRlLlxuICAgICAgICB0aGlzLmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgfVxuICB9O1xufSkoXG4gIC8vIEFtb25nIHRoZSB2YXJpb3VzIHRyaWNrcyBmb3Igb2J0YWluaW5nIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWxcbiAgLy8gb2JqZWN0LCB0aGlzIHNlZW1zIHRvIGJlIHRoZSBtb3N0IHJlbGlhYmxlIHRlY2huaXF1ZSB0aGF0IGRvZXMgbm90XG4gIC8vIHVzZSBpbmRpcmVjdCBldmFsICh3aGljaCB2aW9sYXRlcyBDb250ZW50IFNlY3VyaXR5IFBvbGljeSkuXG4gIHR5cGVvZiBnbG9iYWwgPT09IFwib2JqZWN0XCIgPyBnbG9iYWwgOlxuICB0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiID8gd2luZG93IDpcbiAgdHlwZW9mIHNlbGYgPT09IFwib2JqZWN0XCIgPyBzZWxmIDogdGhpc1xuKTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvY29yZS5yZWdleHAuZXNjYXBlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5SZWdFeHAuZXNjYXBlO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL2JlbmphbWluZ3IvUmV4RXhwLmVzY2FwZVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmUgPSByZXF1aXJlKCcuL19yZXBsYWNlcicpKC9bXFxcXF4kKis/LigpfFtcXF17fV0vZywgJ1xcXFwkJicpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZ0V4cCcsIHsgZXNjYXBlOiBmdW5jdGlvbiBlc2NhcGUoaXQpIHsgcmV0dXJuICRyZShpdCk7IH0gfSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChyZWdFeHAsIHJlcGxhY2UpIHtcbiAgdmFyIHJlcGxhY2VyID0gcmVwbGFjZSA9PT0gT2JqZWN0KHJlcGxhY2UpID8gZnVuY3Rpb24gKHBhcnQpIHtcbiAgICByZXR1cm4gcmVwbGFjZVtwYXJ0XTtcbiAgfSA6IHJlcGxhY2U7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gU3RyaW5nKGl0KS5yZXBsYWNlKHJlZ0V4cCwgcmVwbGFjZXIpO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKCFtb2R1bGUuaG90IHx8IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvcmVhY3QtaG90LWxvYWRlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvcmVhY3QtaG90LWxvYWRlci5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiXCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0KGUpe3JldHVybiBlJiZcIm9iamVjdFwiPT10eXBlb2YgZSYmXCJkZWZhdWx0XCJpbiBlP2UuZGVmYXVsdDplfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3ZhciBSZWFjdD1faW50ZXJvcERlZmF1bHQocmVxdWlyZShcInJlYWN0XCIpKTtmdW5jdGlvbiBBcHBDb250YWluZXIoZSl7cmV0dXJuIEFwcENvbnRhaW5lci53YXJuQWJvdXRITVJEaXNhYmxlZCYmKEFwcENvbnRhaW5lci53YXJuQWJvdXRITVJEaXNhYmxlZD0hMCxjb25zb2xlLmVycm9yKFwiUmVhY3QtSG90LUxvYWRlcjogbWlzY29uZmlndXJhdGlvbiBkZXRlY3RlZCwgdXNpbmcgcHJvZHVjdGlvbiB2ZXJzaW9uIGluIG5vbi1wcm9kdWN0aW9uIGVudmlyb25tZW50LlwiKSxjb25zb2xlLmVycm9yKFwiUmVhY3QtSG90LUxvYWRlcjogSG90IE1vZHVsZSBSZXBsYWNlbWVudCBpcyBub3QgZW5hYmxlZC5cIikpLFJlYWN0LkNoaWxkcmVuLm9ubHkoZS5jaGlsZHJlbil9QXBwQ29udGFpbmVyLndhcm5BYm91dEhNUkRpc2FibGVkPSExO3ZhciBob3Q9ZnVuY3Rpb24gZSgpe3JldHVybiBlLnNob3VsZFdyYXBXaXRoQXBwQ29udGFpbmVyP2Z1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChBcHBDb250YWluZXIsbnVsbCxSZWFjdC5jcmVhdGVFbGVtZW50KGUsbikpfX06ZnVuY3Rpb24oZSl7cmV0dXJuIGV9fTtob3Quc2hvdWxkV3JhcFdpdGhBcHBDb250YWluZXI9ITE7dmFyIGFyZUNvbXBvbmVudHNFcXVhbD1mdW5jdGlvbihlLG4pe3JldHVybiBlPT09bn0sc2V0Q29uZmlnPWZ1bmN0aW9uKCl7fSxjb2xkPWZ1bmN0aW9uKGUpe3JldHVybiBlfSxjb25maWd1cmVDb21wb25lbnQ9ZnVuY3Rpb24oKXt9O2V4cG9ydHMuQXBwQ29udGFpbmVyPUFwcENvbnRhaW5lcixleHBvcnRzLmhvdD1ob3QsZXhwb3J0cy5hcmVDb21wb25lbnRzRXF1YWw9YXJlQ29tcG9uZW50c0VxdWFsLGV4cG9ydHMuc2V0Q29uZmlnPXNldENvbmZpZyxleHBvcnRzLmNvbGQ9Y29sZCxleHBvcnRzLmNvbmZpZ3VyZUNvbXBvbmVudD1jb25maWd1cmVDb21wb25lbnQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcixwPW4/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMscT1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYscj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx0PW4/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHU9bj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsdj1uP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx3PW4/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAseD1uP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMix5PW4/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHo9bj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSxBPW4/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6XG42MDExNixCPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5pdGVyYXRvcjtmdW5jdGlvbiBDKGEpe2Zvcih2YXIgYj1cImh0dHBzOi8vcmVhY3Rqcy5vcmcvZG9jcy9lcnJvci1kZWNvZGVyLmh0bWw/aW52YXJpYW50PVwiK2EsYz0xO2M8YXJndW1lbnRzLmxlbmd0aDtjKyspYis9XCImYXJnc1tdPVwiK2VuY29kZVVSSUNvbXBvbmVudChhcmd1bWVudHNbY10pO3JldHVyblwiTWluaWZpZWQgUmVhY3QgZXJyb3IgI1wiK2ErXCI7IHZpc2l0IFwiK2IrXCIgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLlwifVxudmFyIEQ9e2lzTW91bnRlZDpmdW5jdGlvbigpe3JldHVybiExfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oKXt9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbigpe319LEU9e307ZnVuY3Rpb24gRihhLGIsYyl7dGhpcy5wcm9wcz1hO3RoaXMuY29udGV4dD1iO3RoaXMucmVmcz1FO3RoaXMudXBkYXRlcj1jfHxEfUYucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ9e307Ri5wcm90b3R5cGUuc2V0U3RhdGU9ZnVuY3Rpb24oYSxiKXtpZihcIm9iamVjdFwiIT09dHlwZW9mIGEmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBhJiZudWxsIT1hKXRocm93IEVycm9yKEMoODUpKTt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O1xuZnVuY3Rpb24gRygpe31HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUU7dGhpcy51cGRhdGVyPWN8fER9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2woSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsYyl7dmFyIGUsZD17fSxnPW51bGwsaz1udWxsO2lmKG51bGwhPWIpZm9yKGUgaW4gdm9pZCAwIT09Yi5yZWYmJihrPWIucmVmKSx2b2lkIDAhPT1iLmtleSYmKGc9XCJcIitiLmtleSksYilLLmNhbGwoYixlKSYmIUwuaGFzT3duUHJvcGVydHkoZSkmJihkW2VdPWJbZV0pO3ZhciBmPWFyZ3VtZW50cy5sZW5ndGgtMjtpZigxPT09ZilkLmNoaWxkcmVuPWM7ZWxzZSBpZigxPGYpe2Zvcih2YXIgaD1BcnJheShmKSxtPTA7bTxmO20rKyloW21dPWFyZ3VtZW50c1ttKzJdO2QuY2hpbGRyZW49aH1pZihhJiZhLmRlZmF1bHRQcm9wcylmb3IoZSBpbiBmPWEuZGVmYXVsdFByb3BzLGYpdm9pZCAwPT09ZFtlXSYmKGRbZV09ZltlXSk7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLGtleTpnLHJlZjprLHByb3BzOmQsX293bmVyOkouY3VycmVudH19XG5mdW5jdGlvbiBOKGEsYil7cmV0dXJueyQkdHlwZW9mOnAsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfX1mdW5jdGlvbiBPKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1wfWZ1bmN0aW9uIGVzY2FwZShhKXt2YXIgYj17XCI9XCI6XCI9MFwiLFwiOlwiOlwiPTJcIn07cmV0dXJuXCIkXCIrKFwiXCIrYSkucmVwbGFjZSgvWz06XS9nLGZ1bmN0aW9uKGEpe3JldHVybiBiW2FdfSl9dmFyIFA9L1xcLysvZyxRPVtdO2Z1bmN0aW9uIFIoYSxiLGMsZSl7aWYoUS5sZW5ndGgpe3ZhciBkPVEucG9wKCk7ZC5yZXN1bHQ9YTtkLmtleVByZWZpeD1iO2QuZnVuYz1jO2QuY29udGV4dD1lO2QuY291bnQ9MDtyZXR1cm4gZH1yZXR1cm57cmVzdWx0OmEsa2V5UHJlZml4OmIsZnVuYzpjLGNvbnRleHQ6ZSxjb3VudDowfX1cbmZ1bmN0aW9uIFMoYSl7YS5yZXN1bHQ9bnVsbDthLmtleVByZWZpeD1udWxsO2EuZnVuYz1udWxsO2EuY29udGV4dD1udWxsO2EuY291bnQ9MDsxMD5RLmxlbmd0aCYmUS5wdXNoKGEpfVxuZnVuY3Rpb24gVChhLGIsYyxlKXt2YXIgZD10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09ZHx8XCJib29sZWFuXCI9PT1kKWE9bnVsbDt2YXIgZz0hMTtpZihudWxsPT09YSlnPSEwO2Vsc2Ugc3dpdGNoKGQpe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6Zz0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgcDpjYXNlIHE6Zz0hMH19aWYoZylyZXR1cm4gYyhlLGEsXCJcIj09PWI/XCIuXCIrVShhLDApOmIpLDE7Zz0wO2I9XCJcIj09PWI/XCIuXCI6YitcIjpcIjtpZihBcnJheS5pc0FycmF5KGEpKWZvcih2YXIgaz0wO2s8YS5sZW5ndGg7aysrKXtkPWFba107dmFyIGY9YitVKGQsayk7Zys9VChkLGYsYyxlKX1lbHNlIGlmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGE/Zj1udWxsOihmPUImJmFbQl18fGFbXCJAQGl0ZXJhdG9yXCJdLGY9XCJmdW5jdGlvblwiPT09dHlwZW9mIGY/ZjpudWxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksaz1cbjA7IShkPWEubmV4dCgpKS5kb25lOylkPWQudmFsdWUsZj1iK1UoZCxrKyspLGcrPVQoZCxmLGMsZSk7ZWxzZSBpZihcIm9iamVjdFwiPT09ZCl0aHJvdyBjPVwiXCIrYSxFcnJvcihDKDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1jP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmMsXCJcIikpO3JldHVybiBnfWZ1bmN0aW9uIFYoYSxiLGMpe3JldHVybiBudWxsPT1hPzA6VChhLFwiXCIsYixjKX1mdW5jdGlvbiBVKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBXKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIGFhKGEsYixjKXt2YXIgZT1hLnJlc3VsdCxkPWEua2V5UHJlZml4O2E9YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKTtBcnJheS5pc0FycmF5KGEpP1goYSxlLGMsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KTpudWxsIT1hJiYoTyhhKSYmKGE9TihhLGQrKCFhLmtleXx8YiYmYi5rZXk9PT1hLmtleT9cIlwiOihcIlwiK2Eua2V5KS5yZXBsYWNlKFAsXCIkJi9cIikrXCIvXCIpK2MpKSxlLnB1c2goYSkpfWZ1bmN0aW9uIFgoYSxiLGMsZSxkKXt2YXIgZz1cIlwiO251bGwhPWMmJihnPShcIlwiK2MpLnJlcGxhY2UoUCxcIiQmL1wiKStcIi9cIik7Yj1SKGIsZyxlLGQpO1YoYSxhYSxiKTtTKGIpfXZhciBZPXtjdXJyZW50Om51bGx9O2Z1bmN0aW9uIFooKXt2YXIgYT1ZLmN1cnJlbnQ7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoQygzMjEpKTtyZXR1cm4gYX1cbnZhciBiYT17UmVhY3RDdXJyZW50RGlzcGF0Y2hlcjpZLFJlYWN0Q3VycmVudEJhdGNoQ29uZmlnOntzdXNwZW5zZTpudWxsfSxSZWFjdEN1cnJlbnRPd25lcjpKLElzU29tZVJlbmRlcmVyQWN0aW5nOntjdXJyZW50OiExfSxhc3NpZ246bH07ZXhwb3J0cy5DaGlsZHJlbj17bWFwOmZ1bmN0aW9uKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdO1goYSxlLG51bGwsYixjKTtyZXR1cm4gZX0sZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7aWYobnVsbD09YSlyZXR1cm4gYTtiPVIobnVsbCxudWxsLGIsYyk7VihhLFcsYik7UyhiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIFYoYSxmdW5jdGlvbigpe3JldHVybiBudWxsfSxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtYKGEsYixudWxsLGZ1bmN0aW9uKGEpe3JldHVybiBhfSk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIU8oYSkpdGhyb3cgRXJyb3IoQygxNDMpKTtyZXR1cm4gYX19O1xuZXhwb3J0cy5Db21wb25lbnQ9RjtleHBvcnRzLkZyYWdtZW50PXI7ZXhwb3J0cy5Qcm9maWxlcj11O2V4cG9ydHMuUHVyZUNvbXBvbmVudD1IO2V4cG9ydHMuU3RyaWN0TW9kZT10O2V4cG9ydHMuU3VzcGVuc2U9eTtleHBvcnRzLl9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEPWJhO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKEMoMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksZz1hLnJlZixrPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoZz1iLnJlZixrPUouY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZj1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihoIGluIGIpSy5jYWxsKGIsaCkmJiFMLmhhc093blByb3BlcnR5KGgpJiYoZVtoXT12b2lkIDA9PT1iW2hdJiZ2b2lkIDAhPT1mP2ZbaF06YltoXSl9dmFyIGg9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1oKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8aCl7Zj1BcnJheShoKTtmb3IodmFyIG09MDttPGg7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1mfXJldHVybnskJHR5cGVvZjpwLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmcscHJvcHM6ZSxfb3duZXI6a319O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOncsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjp2LF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1NO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1NLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp4LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1PO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpBLF9jdG9yOmEsX3N0YXR1czotMSxfcmVzdWx0Om51bGx9fTtleHBvcnRzLm1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm57JCR0eXBlb2Y6eix0eXBlOmEsY29tcGFyZTp2b2lkIDA9PT1iP251bGw6Yn19O2V4cG9ydHMudXNlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gWigpLnVzZUNhbGxiYWNrKGEsYil9O2V4cG9ydHMudXNlQ29udGV4dD1mdW5jdGlvbihhLGIpe3JldHVybiBaKCkudXNlQ29udGV4dChhLGIpfTtleHBvcnRzLnVzZURlYnVnVmFsdWU9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudXNlRWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VJbXBlcmF0aXZlSGFuZGxlPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gWigpLnVzZUltcGVyYXRpdmVIYW5kbGUoYSxiLGMpfTtcbmV4cG9ydHMudXNlTGF5b3V0RWZmZWN0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VMYXlvdXRFZmZlY3QoYSxiKX07ZXhwb3J0cy51c2VNZW1vPWZ1bmN0aW9uKGEsYil7cmV0dXJuIFooKS51c2VNZW1vKGEsYil9O2V4cG9ydHMudXNlUmVkdWNlcj1mdW5jdGlvbihhLGIsYyl7cmV0dXJuIFooKS51c2VSZWR1Y2VyKGEsYixjKX07ZXhwb3J0cy51c2VSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VSZWYoYSl9O2V4cG9ydHMudXNlU3RhdGU9ZnVuY3Rpb24oYSl7cmV0dXJuIFooKS51c2VTdGF0ZShhKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTYuMTMuMVwiO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG49cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHUoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHUoMjI3KSk7XG5mdW5jdGlvbiBiYShhLGIsYyxkLGUsZixnLGgsayl7dmFyIGw9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbCl9Y2F0Y2gobSl7dGhpcy5vbkVycm9yKG0pfX12YXIgZGE9ITEsZWE9bnVsbCxmYT0hMSxoYT1udWxsLGlhPXtvbkVycm9yOmZ1bmN0aW9uKGEpe2RhPSEwO2VhPWF9fTtmdW5jdGlvbiBqYShhLGIsYyxkLGUsZixnLGgsayl7ZGE9ITE7ZWE9bnVsbDtiYS5hcHBseShpYSxhcmd1bWVudHMpfWZ1bmN0aW9uIGthKGEsYixjLGQsZSxmLGcsaCxrKXtqYS5hcHBseSh0aGlzLGFyZ3VtZW50cyk7aWYoZGEpe2lmKGRhKXt2YXIgbD1lYTtkYT0hMTtlYT1udWxsfWVsc2UgdGhyb3cgRXJyb3IodSgxOTgpKTtmYXx8KGZhPSEwLGhhPWwpfX12YXIgbGE9bnVsbCxtYT1udWxsLG5hPW51bGw7XG5mdW5jdGlvbiBvYShhLGIsYyl7dmFyIGQ9YS50eXBlfHxcInVua25vd24tZXZlbnRcIjthLmN1cnJlbnRUYXJnZXQ9bmEoYyk7a2EoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH12YXIgcGE9bnVsbCxxYT17fTtcbmZ1bmN0aW9uIHJhKCl7aWYocGEpZm9yKHZhciBhIGluIHFhKXt2YXIgYj1xYVthXSxjPXBhLmluZGV4T2YoYSk7aWYoISgtMTxjKSl0aHJvdyBFcnJvcih1KDk2LGEpKTtpZighc2FbY10pe2lmKCFiLmV4dHJhY3RFdmVudHMpdGhyb3cgRXJyb3IodSg5NyxhKSk7c2FbY109YjtjPWIuZXZlbnRUeXBlcztmb3IodmFyIGQgaW4gYyl7dmFyIGU9dm9pZCAwO3ZhciBmPWNbZF0sZz1iLGg9ZDtpZih0YS5oYXNPd25Qcm9wZXJ0eShoKSl0aHJvdyBFcnJvcih1KDk5LGgpKTt0YVtoXT1mO3ZhciBrPWYucGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM7aWYoayl7Zm9yKGUgaW4gaylrLmhhc093blByb3BlcnR5KGUpJiZ1YShrW2VdLGcsaCk7ZT0hMH1lbHNlIGYucmVnaXN0cmF0aW9uTmFtZT8odWEoZi5yZWdpc3RyYXRpb25OYW1lLGcsaCksZT0hMCk6ZT0hMTtpZighZSl0aHJvdyBFcnJvcih1KDk4LGQsYSkpO319fX1cbmZ1bmN0aW9uIHVhKGEsYixjKXtpZih2YVthXSl0aHJvdyBFcnJvcih1KDEwMCxhKSk7dmFbYV09Yjt3YVthXT1iLmV2ZW50VHlwZXNbY10uZGVwZW5kZW5jaWVzfXZhciBzYT1bXSx0YT17fSx2YT17fSx3YT17fTtmdW5jdGlvbiB4YShhKXt2YXIgYj0hMSxjO2ZvcihjIGluIGEpaWYoYS5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9YVtjXTtpZighcWEuaGFzT3duUHJvcGVydHkoYyl8fHFhW2NdIT09ZCl7aWYocWFbY10pdGhyb3cgRXJyb3IodSgxMDIsYykpO3FhW2NdPWQ7Yj0hMH19YiYmcmEoKX12YXIgeWE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLHphPW51bGwsQWE9bnVsbCxCYT1udWxsO1xuZnVuY3Rpb24gQ2EoYSl7aWYoYT1tYShhKSl7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIHphKXRocm93IEVycm9yKHUoMjgwKSk7dmFyIGI9YS5zdGF0ZU5vZGU7YiYmKGI9bGEoYiksemEoYS5zdGF0ZU5vZGUsYS50eXBlLGIpKX19ZnVuY3Rpb24gRGEoYSl7QWE/QmE/QmEucHVzaChhKTpCYT1bYV06QWE9YX1mdW5jdGlvbiBFYSgpe2lmKEFhKXt2YXIgYT1BYSxiPUJhO0JhPUFhPW51bGw7Q2EoYSk7aWYoYilmb3IoYT0wO2E8Yi5sZW5ndGg7YSsrKUNhKGJbYV0pfX1mdW5jdGlvbiBGYShhLGIpe3JldHVybiBhKGIpfWZ1bmN0aW9uIEdhKGEsYixjLGQsZSl7cmV0dXJuIGEoYixjLGQsZSl9ZnVuY3Rpb24gSGEoKXt9dmFyIElhPUZhLEphPSExLEthPSExO2Z1bmN0aW9uIExhKCl7aWYobnVsbCE9PUFhfHxudWxsIT09QmEpSGEoKSxFYSgpfVxuZnVuY3Rpb24gTWEoYSxiLGMpe2lmKEthKXJldHVybiBhKGIsYyk7S2E9ITA7dHJ5e3JldHVybiBJYShhLGIsYyl9ZmluYWxseXtLYT0hMSxMYSgpfX12YXIgTmE9L15bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRdWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXFwtLjAtOVxcdTAwQjdcXHUwMzAwLVxcdTAzNkZcXHUyMDNGLVxcdTIwNDBdKiQvLE9hPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksUGE9e30sUWE9e307XG5mdW5jdGlvbiBSYShhKXtpZihPYS5jYWxsKFFhLGEpKXJldHVybiEwO2lmKE9hLmNhbGwoUGEsYSkpcmV0dXJuITE7aWYoTmEudGVzdChhKSlyZXR1cm4gUWFbYV09ITA7UGFbYV09ITA7cmV0dXJuITF9ZnVuY3Rpb24gU2EoYSxiLGMsZCl7aWYobnVsbCE9PWMmJjA9PT1jLnR5cGUpcmV0dXJuITE7c3dpdGNoKHR5cGVvZiBiKXtjYXNlIFwiZnVuY3Rpb25cIjpjYXNlIFwic3ltYm9sXCI6cmV0dXJuITA7Y2FzZSBcImJvb2xlYW5cIjppZihkKXJldHVybiExO2lmKG51bGwhPT1jKXJldHVybiFjLmFjY2VwdHNCb29sZWFuczthPWEudG9Mb3dlckNhc2UoKS5zbGljZSgwLDUpO3JldHVyblwiZGF0YS1cIiE9PWEmJlwiYXJpYS1cIiE9PWE7ZGVmYXVsdDpyZXR1cm4hMX19XG5mdW5jdGlvbiBUYShhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxTYShhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfWZ1bmN0aW9uIHYoYSxiLGMsZCxlLGYpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mfXZhciBDPXt9O1xuXCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMCwhMSxhLG51bGwsITEpfSk7W1tcImFjY2VwdENoYXJzZXRcIixcImFjY2VwdC1jaGFyc2V0XCJdLFtcImNsYXNzTmFtZVwiLFwiY2xhc3NcIl0sW1wiaHRtbEZvclwiLFwiZm9yXCJdLFtcImh0dHBFcXVpdlwiLFwiaHR0cC1lcXVpdlwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hWzBdO0NbYl09bmV3IHYoYiwxLCExLGFbMV0sbnVsbCwhMSl9KTtbXCJjb250ZW50RWRpdGFibGVcIixcImRyYWdnYWJsZVwiLFwic3BlbGxDaGVja1wiLFwidmFsdWVcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJmb2N1c2FibGVcIixcInByZXNlcnZlQWxwaGFcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMiwhMSxhLG51bGwsITEpfSk7XCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZGlzYWJsZVBpY3R1cmVJblBpY3R1cmUgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCwhMSl9KTtcbltcImNoZWNrZWRcIixcIm11bHRpcGxlXCIsXCJtdXRlZFwiLFwic2VsZWN0ZWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsMywhMCxhLG51bGwsITEpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtDW2FdPW5ldyB2KGEsNCwhMSxhLG51bGwsITEpfSk7W1wiY29sc1wiLFwicm93c1wiLFwic2l6ZVwiLFwic3BhblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw2LCExLGEsbnVsbCwhMSl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO3ZhciBVYT0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIFZhKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKFVhLFxuVmEpO0NbYl09bmV3IHYoYiwxLCExLGEsbnVsbCwhMSl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpyb2xlIHhsaW5rOnNob3cgeGxpbms6dGl0bGUgeGxpbms6dHlwZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmtcIiwhMSl9KTtbXCJ4bWw6YmFzZVwiLFwieG1sOmxhbmdcIixcInhtbDpzcGFjZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWEucmVwbGFjZShVYSxWYSk7Q1tiXT1uZXcgdihiLDEsITEsYSxcImh0dHA6Ly93d3cudzMub3JnL1hNTC8xOTk4L25hbWVzcGFjZVwiLCExKX0pO1tcInRhYkluZGV4XCIsXCJjcm9zc09yaWdpblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExKX0pO1xuQy54bGlua0hyZWY9bmV3IHYoXCJ4bGlua0hyZWZcIiwxLCExLFwieGxpbms6aHJlZlwiLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCEwKTtbXCJzcmNcIixcImhyZWZcIixcImFjdGlvblwiLFwiZm9ybUFjdGlvblwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0NbYV09bmV3IHYoYSwxLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCEwKX0pO3ZhciBXYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudERpc3BhdGNoZXJcIil8fChXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyPXtjdXJyZW50Om51bGx9KTtXYS5oYXNPd25Qcm9wZXJ0eShcIlJlYWN0Q3VycmVudEJhdGNoQ29uZmlnXCIpfHwoV2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc9e3N1c3BlbnNlOm51bGx9KTtcbmZ1bmN0aW9uIFhhKGEsYixjLGQpe3ZhciBlPUMuaGFzT3duUHJvcGVydHkoYik/Q1tiXTpudWxsO3ZhciBmPW51bGwhPT1lPzA9PT1lLnR5cGU6ZD8hMTohKDI8Yi5sZW5ndGgpfHxcIm9cIiE9PWJbMF0mJlwiT1wiIT09YlswXXx8XCJuXCIhPT1iWzFdJiZcIk5cIiE9PWJbMV0/ITE6ITA7Znx8KFRhKGIsYyxlLGQpJiYoYz1udWxsKSxkfHxudWxsPT09ZT9SYShiKSYmKG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOmEuc2V0QXR0cmlidXRlKGIsXCJcIitjKSk6ZS5tdXN0VXNlUHJvcGVydHk/YVtlLnByb3BlcnR5TmFtZV09bnVsbD09PWM/Mz09PWUudHlwZT8hMTpcIlwiOmM6KGI9ZS5hdHRyaWJ1dGVOYW1lLGQ9ZS5hdHRyaWJ1dGVOYW1lc3BhY2UsbnVsbD09PWM/YS5yZW1vdmVBdHRyaWJ1dGUoYik6KGU9ZS50eXBlLGM9Mz09PWV8fDQ9PT1lJiYhMD09PWM/XCJcIjpcIlwiK2MsZD9hLnNldEF0dHJpYnV0ZU5TKGQsYixjKTphLnNldEF0dHJpYnV0ZShiLGMpKSkpfVxudmFyIFlhPS9eKC4qKVtcXFxcXFwvXS8sRT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLFphPUU/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsJGE9RT9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGFiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGJiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LGNiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGRiPUU/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGViPUU/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsZmI9RT9TeW1ib2wuZm9yKFwicmVhY3QuY29uY3VycmVudF9tb2RlXCIpOjYwMTExLGdiPUU/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLGhiPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLGliPUU/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6XG42MDEyMCxqYj1FP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LGtiPUU/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsbGI9RT9TeW1ib2wuZm9yKFwicmVhY3QuYmxvY2tcIik6NjAxMjEsbWI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO2Z1bmN0aW9uIG5iKGEpe2lmKG51bGw9PT1hfHxcIm9iamVjdFwiIT09dHlwZW9mIGEpcmV0dXJuIG51bGw7YT1tYiYmYVttYl18fGFbXCJAQGl0ZXJhdG9yXCJdO3JldHVyblwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2E6bnVsbH1mdW5jdGlvbiBvYihhKXtpZigtMT09PWEuX3N0YXR1cyl7YS5fc3RhdHVzPTA7dmFyIGI9YS5fY3RvcjtiPWIoKTthLl9yZXN1bHQ9YjtiLnRoZW4oZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGI9Yi5kZWZhdWx0LGEuX3N0YXR1cz0xLGEuX3Jlc3VsdD1iKX0sZnVuY3Rpb24oYil7MD09PWEuX3N0YXR1cyYmKGEuX3N0YXR1cz0yLGEuX3Jlc3VsdD1iKX0pfX1cbmZ1bmN0aW9uIHBiKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGEuZGlzcGxheU5hbWV8fGEubmFtZXx8bnVsbDtpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpcmV0dXJuIGE7c3dpdGNoKGEpe2Nhc2UgYWI6cmV0dXJuXCJGcmFnbWVudFwiO2Nhc2UgJGE6cmV0dXJuXCJQb3J0YWxcIjtjYXNlIGNiOnJldHVyblwiUHJvZmlsZXJcIjtjYXNlIGJiOnJldHVyblwiU3RyaWN0TW9kZVwiO2Nhc2UgaGI6cmV0dXJuXCJTdXNwZW5zZVwiO2Nhc2UgaWI6cmV0dXJuXCJTdXNwZW5zZUxpc3RcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZWI6cmV0dXJuXCJDb250ZXh0LkNvbnN1bWVyXCI7Y2FzZSBkYjpyZXR1cm5cIkNvbnRleHQuUHJvdmlkZXJcIjtjYXNlIGdiOnZhciBiPWEucmVuZGVyO2I9Yi5kaXNwbGF5TmFtZXx8Yi5uYW1lfHxcIlwiO3JldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XG5cIkZvcndhcmRSZWZcIik7Y2FzZSBqYjpyZXR1cm4gcGIoYS50eXBlKTtjYXNlIGxiOnJldHVybiBwYihhLnJlbmRlcik7Y2FzZSBrYjppZihhPTE9PT1hLl9zdGF0dXM/YS5fcmVzdWx0Om51bGwpcmV0dXJuIHBiKGEpfXJldHVybiBudWxsfWZ1bmN0aW9uIHFiKGEpe3ZhciBiPVwiXCI7ZG97YTpzd2l0Y2goYS50YWcpe2Nhc2UgMzpjYXNlIDQ6Y2FzZSA2OmNhc2UgNzpjYXNlIDEwOmNhc2UgOTp2YXIgYz1cIlwiO2JyZWFrIGE7ZGVmYXVsdDp2YXIgZD1hLl9kZWJ1Z093bmVyLGU9YS5fZGVidWdTb3VyY2UsZj1wYihhLnR5cGUpO2M9bnVsbDtkJiYoYz1wYihkLnR5cGUpKTtkPWY7Zj1cIlwiO2U/Zj1cIiAoYXQgXCIrZS5maWxlTmFtZS5yZXBsYWNlKFlhLFwiXCIpK1wiOlwiK2UubGluZU51bWJlcitcIilcIjpjJiYoZj1cIiAoY3JlYXRlZCBieSBcIitjK1wiKVwiKTtjPVwiXFxuICAgIGluIFwiKyhkfHxcIlVua25vd25cIikrZn1iKz1jO2E9YS5yZXR1cm59d2hpbGUoYSk7cmV0dXJuIGJ9XG5mdW5jdGlvbiByYihhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19ZnVuY3Rpb24gc2IoYSl7dmFyIGI9YS50eXBlO3JldHVybihhPWEubm9kZU5hbWUpJiZcImlucHV0XCI9PT1hLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1ifHxcInJhZGlvXCI9PT1iKX1cbmZ1bmN0aW9uIHRiKGEpe3ZhciBiPXNiKGEpP1wiY2hlY2tlZFwiOlwidmFsdWVcIixjPU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYS5jb25zdHJ1Y3Rvci5wcm90b3R5cGUsYiksZD1cIlwiK2FbYl07aWYoIWEuaGFzT3duUHJvcGVydHkoYikmJlwidW5kZWZpbmVkXCIhPT10eXBlb2YgYyYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0JiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5zZXQpe3ZhciBlPWMuZ2V0LGY9Yy5zZXQ7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7Y29uZmlndXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBlLmNhbGwodGhpcyl9LHNldDpmdW5jdGlvbihhKXtkPVwiXCIrYTtmLmNhbGwodGhpcyxhKX19KTtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtlbnVtZXJhYmxlOmMuZW51bWVyYWJsZX0pO3JldHVybntnZXRWYWx1ZTpmdW5jdGlvbigpe3JldHVybiBkfSxzZXRWYWx1ZTpmdW5jdGlvbihhKXtkPVwiXCIrYX0sc3RvcFRyYWNraW5nOmZ1bmN0aW9uKCl7YS5fdmFsdWVUcmFja2VyPVxubnVsbDtkZWxldGUgYVtiXX19fX1mdW5jdGlvbiB4YihhKXthLl92YWx1ZVRyYWNrZXJ8fChhLl92YWx1ZVRyYWNrZXI9dGIoYSkpfWZ1bmN0aW9uIHliKGEpe2lmKCFhKXJldHVybiExO3ZhciBiPWEuX3ZhbHVlVHJhY2tlcjtpZighYilyZXR1cm4hMDt2YXIgYz1iLmdldFZhbHVlKCk7dmFyIGQ9XCJcIjthJiYoZD1zYihhKT9hLmNoZWNrZWQ/XCJ0cnVlXCI6XCJmYWxzZVwiOmEudmFsdWUpO2E9ZDtyZXR1cm4gYSE9PWM/KGIuc2V0VmFsdWUoYSksITApOiExfWZ1bmN0aW9uIHpiKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBuKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1cbmZ1bmN0aW9uIEFiKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPXJiKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gQmIoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZYYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gQ2IoYSxiKXtCYihhLGIpO3ZhciBjPXJiKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0RiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJkRiKGEsYi50eXBlLHJiKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gRWIoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIERiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8YS5vd25lckRvY3VtZW50LmFjdGl2ZUVsZW1lbnQhPT1hKW51bGw9PWM/YS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlOmEuZGVmYXVsdFZhbHVlIT09XCJcIitjJiYoYS5kZWZhdWx0VmFsdWU9XCJcIitjKX1mdW5jdGlvbiBGYihhKXt2YXIgYj1cIlwiO2FhLkNoaWxkcmVuLmZvckVhY2goYSxmdW5jdGlvbihhKXtudWxsIT1hJiYoYis9YSl9KTtyZXR1cm4gYn1mdW5jdGlvbiBHYihhLGIpe2E9bih7Y2hpbGRyZW46dm9pZCAwfSxiKTtpZihiPUZiKGIuY2hpbGRyZW4pKWEuY2hpbGRyZW49YjtyZXR1cm4gYX1cbmZ1bmN0aW9uIEhiKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIityYihjKTtiPW51bGw7Zm9yKGU9MDtlPGEubGVuZ3RoO2UrKyl7aWYoYVtlXS52YWx1ZT09PWMpe2FbZV0uc2VsZWN0ZWQ9ITA7ZCYmKGFbZV0uZGVmYXVsdFNlbGVjdGVkPSEwKTtyZXR1cm59bnVsbCE9PWJ8fGFbZV0uZGlzYWJsZWR8fChiPWFbZV0pfW51bGwhPT1iJiYoYi5zZWxlY3RlZD0hMCl9fVxuZnVuY3Rpb24gSWIoYSxiKXtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXRocm93IEVycm9yKHUoOTEpKTtyZXR1cm4gbih7fSxiLHt2YWx1ZTp2b2lkIDAsZGVmYXVsdFZhbHVlOnZvaWQgMCxjaGlsZHJlbjpcIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWV9KX1mdW5jdGlvbiBKYihhLGIpe3ZhciBjPWIudmFsdWU7aWYobnVsbD09Yyl7Yz1iLmNoaWxkcmVuO2I9Yi5kZWZhdWx0VmFsdWU7aWYobnVsbCE9Yyl7aWYobnVsbCE9Yil0aHJvdyBFcnJvcih1KDkyKSk7aWYoQXJyYXkuaXNBcnJheShjKSl7aWYoISgxPj1jLmxlbmd0aCkpdGhyb3cgRXJyb3IodSg5MykpO2M9Y1swXX1iPWN9bnVsbD09YiYmKGI9XCJcIik7Yz1ifWEuX3dyYXBwZXJTdGF0ZT17aW5pdGlhbFZhbHVlOnJiKGMpfX1cbmZ1bmN0aW9uIEtiKGEsYil7dmFyIGM9cmIoYi52YWx1ZSksZD1yYihiLmRlZmF1bHRWYWx1ZSk7bnVsbCE9YyYmKGM9XCJcIitjLGMhPT1hLnZhbHVlJiYoYS52YWx1ZT1jKSxudWxsPT1iLmRlZmF1bHRWYWx1ZSYmYS5kZWZhdWx0VmFsdWUhPT1jJiYoYS5kZWZhdWx0VmFsdWU9YykpO251bGwhPWQmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2QpfWZ1bmN0aW9uIExiKGEpe3ZhciBiPWEudGV4dENvbnRlbnQ7Yj09PWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWUmJlwiXCIhPT1iJiZudWxsIT09YiYmKGEudmFsdWU9Yil9dmFyIE1iPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIE5iKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gT2IoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP05iKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIFBiLFFiPWZ1bmN0aW9uKGEpe3JldHVyblwidW5kZWZpbmVkXCIhPT10eXBlb2YgTVNBcHAmJk1TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uP2Z1bmN0aW9uKGIsYyxkLGUpe01TQXBwLmV4ZWNVbnNhZmVMb2NhbEZ1bmN0aW9uKGZ1bmN0aW9uKCl7cmV0dXJuIGEoYixjLGQsZSl9KX06YX0oZnVuY3Rpb24oYSxiKXtpZihhLm5hbWVzcGFjZVVSSSE9PU1iLnN2Z3x8XCJpbm5lckhUTUxcImluIGEpYS5pbm5lckhUTUw9YjtlbHNle1BiPVBifHxkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1BiLmlubmVySFRNTD1cIjxzdmc+XCIrYi52YWx1ZU9mKCkudG9TdHJpbmcoKStcIjwvc3ZnPlwiO2ZvcihiPVBiLmZpcnN0Q2hpbGQ7YS5maXJzdENoaWxkOylhLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCk7Zm9yKDtiLmZpcnN0Q2hpbGQ7KWEuYXBwZW5kQ2hpbGQoYi5maXJzdENoaWxkKX19KTtcbmZ1bmN0aW9uIFJiKGEsYil7aWYoYil7dmFyIGM9YS5maXJzdENoaWxkO2lmKGMmJmM9PT1hLmxhc3RDaGlsZCYmMz09PWMubm9kZVR5cGUpe2Mubm9kZVZhbHVlPWI7cmV0dXJufX1hLnRleHRDb250ZW50PWJ9ZnVuY3Rpb24gU2IoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtyZXR1cm4gY312YXIgVGI9e2FuaW1hdGlvbmVuZDpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uRW5kXCIpLGFuaW1hdGlvbml0ZXJhdGlvbjpTYihcIkFuaW1hdGlvblwiLFwiQW5pbWF0aW9uSXRlcmF0aW9uXCIpLGFuaW1hdGlvbnN0YXJ0OlNiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25TdGFydFwiKSx0cmFuc2l0aW9uZW5kOlNiKFwiVHJhbnNpdGlvblwiLFwiVHJhbnNpdGlvbkVuZFwiKX0sVWI9e30sVmI9e307XG55YSYmKFZiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIFRiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIFRiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIFRiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7ZnVuY3Rpb24gV2IoYSl7aWYoVWJbYV0pcmV0dXJuIFViW2FdO2lmKCFUYlthXSlyZXR1cm4gYTt2YXIgYj1UYlthXSxjO2ZvcihjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSYmYyBpbiBWYilyZXR1cm4gVWJbYV09YltjXTtyZXR1cm4gYX1cbnZhciBYYj1XYihcImFuaW1hdGlvbmVuZFwiKSxZYj1XYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxaYj1XYihcImFuaW1hdGlvbnN0YXJ0XCIpLCRiPVdiKFwidHJhbnNpdGlvbmVuZFwiKSxhYz1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksYmM9bmV3IChcImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha01hcD9XZWFrTWFwOk1hcCk7ZnVuY3Rpb24gY2MoYSl7dmFyIGI9YmMuZ2V0KGEpO3ZvaWQgMD09PWImJihiPW5ldyBNYXAsYmMuc2V0KGEsYikpO3JldHVybiBifVxuZnVuY3Rpb24gZGMoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmVmZmVjdFRhZyYxMDI2KSYmKGM9Yi5yZXR1cm4pLGE9Yi5yZXR1cm47d2hpbGUoYSl9cmV0dXJuIDM9PT1iLnRhZz9jOm51bGx9ZnVuY3Rpb24gZWMoYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9YS5tZW1vaXplZFN0YXRlO251bGw9PT1iJiYoYT1hLmFsdGVybmF0ZSxudWxsIT09YSYmKGI9YS5tZW1vaXplZFN0YXRlKSk7aWYobnVsbCE9PWIpcmV0dXJuIGIuZGVoeWRyYXRlZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBmYyhhKXtpZihkYyhhKSE9PWEpdGhyb3cgRXJyb3IodSgxODgpKTt9XG5mdW5jdGlvbiBnYyhhKXt2YXIgYj1hLmFsdGVybmF0ZTtpZighYil7Yj1kYyhhKTtpZihudWxsPT09Yil0aHJvdyBFcnJvcih1KDE4OCkpO3JldHVybiBiIT09YT9udWxsOmF9Zm9yKHZhciBjPWEsZD1iOzspe3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKWJyZWFrO3ZhciBmPWUuYWx0ZXJuYXRlO2lmKG51bGw9PT1mKXtkPWUucmV0dXJuO2lmKG51bGwhPT1kKXtjPWQ7Y29udGludWV9YnJlYWt9aWYoZS5jaGlsZD09PWYuY2hpbGQpe2ZvcihmPWUuY2hpbGQ7Zjspe2lmKGY9PT1jKXJldHVybiBmYyhlKSxhO2lmKGY9PT1kKXJldHVybiBmYyhlKSxiO2Y9Zi5zaWJsaW5nfXRocm93IEVycm9yKHUoMTg4KSk7fWlmKGMucmV0dXJuIT09ZC5yZXR1cm4pYz1lLGQ9ZjtlbHNle2Zvcih2YXIgZz0hMSxoPWUuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZTtkPWY7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1lO2M9ZjticmVha31oPWguc2libGluZ31pZighZyl7Zm9yKGg9Zi5jaGlsZDtoOyl7aWYoaD09PVxuYyl7Zz0hMDtjPWY7ZD1lO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZjtjPWU7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpdGhyb3cgRXJyb3IodSgxODkpKTt9fWlmKGMuYWx0ZXJuYXRlIT09ZCl0aHJvdyBFcnJvcih1KDE5MCkpO31pZigzIT09Yy50YWcpdGhyb3cgRXJyb3IodSgxODgpKTtyZXR1cm4gYy5zdGF0ZU5vZGUuY3VycmVudD09PWM/YTpifWZ1bmN0aW9uIGhjKGEpe2E9Z2MoYSk7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKHZhciBiPWE7Oyl7aWYoNT09PWIudGFnfHw2PT09Yi50YWcpcmV0dXJuIGI7aWYoYi5jaGlsZCliLmNoaWxkLnJldHVybj1iLGI9Yi5jaGlsZDtlbHNle2lmKGI9PT1hKWJyZWFrO2Zvcig7IWIuc2libGluZzspe2lmKCFiLnJldHVybnx8Yi5yZXR1cm49PT1hKXJldHVybiBudWxsO2I9Yi5yZXR1cm59Yi5zaWJsaW5nLnJldHVybj1iLnJldHVybjtiPWIuc2libGluZ319cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBpYyhhLGIpe2lmKG51bGw9PWIpdGhyb3cgRXJyb3IodSgzMCkpO2lmKG51bGw9PWEpcmV0dXJuIGI7aWYoQXJyYXkuaXNBcnJheShhKSl7aWYoQXJyYXkuaXNBcnJheShiKSlyZXR1cm4gYS5wdXNoLmFwcGx5KGEsYiksYTthLnB1c2goYik7cmV0dXJuIGF9cmV0dXJuIEFycmF5LmlzQXJyYXkoYik/W2FdLmNvbmNhdChiKTpbYSxiXX1mdW5jdGlvbiBqYyhhLGIsYyl7QXJyYXkuaXNBcnJheShhKT9hLmZvckVhY2goYixjKTphJiZiLmNhbGwoYyxhKX12YXIga2M9bnVsbDtcbmZ1bmN0aW9uIGxjKGEpe2lmKGEpe3ZhciBiPWEuX2Rpc3BhdGNoTGlzdGVuZXJzLGM9YS5fZGlzcGF0Y2hJbnN0YW5jZXM7aWYoQXJyYXkuaXNBcnJheShiKSlmb3IodmFyIGQ9MDtkPGIubGVuZ3RoJiYhYS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpO2QrKylvYShhLGJbZF0sY1tkXSk7ZWxzZSBiJiZvYShhLGIsYyk7YS5fZGlzcGF0Y2hMaXN0ZW5lcnM9bnVsbDthLl9kaXNwYXRjaEluc3RhbmNlcz1udWxsO2EuaXNQZXJzaXN0ZW50KCl8fGEuY29uc3RydWN0b3IucmVsZWFzZShhKX19ZnVuY3Rpb24gbWMoYSl7bnVsbCE9PWEmJihrYz1pYyhrYyxhKSk7YT1rYztrYz1udWxsO2lmKGEpe2pjKGEsbGMpO2lmKGtjKXRocm93IEVycm9yKHUoOTUpKTtpZihmYSl0aHJvdyBhPWhhLGZhPSExLGhhPW51bGwsYTt9fVxuZnVuY3Rpb24gbmMoYSl7YT1hLnRhcmdldHx8YS5zcmNFbGVtZW50fHx3aW5kb3c7YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCYmKGE9YS5jb3JyZXNwb25kaW5nVXNlRWxlbWVudCk7cmV0dXJuIDM9PT1hLm5vZGVUeXBlP2EucGFyZW50Tm9kZTphfWZ1bmN0aW9uIG9jKGEpe2lmKCF5YSlyZXR1cm4hMTthPVwib25cIithO3ZhciBiPWEgaW4gZG9jdW1lbnQ7Ynx8KGI9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxiLnNldEF0dHJpYnV0ZShhLFwicmV0dXJuO1wiKSxiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBiW2FdKTtyZXR1cm4gYn12YXIgcGM9W107ZnVuY3Rpb24gcWMoYSl7YS50b3BMZXZlbFR5cGU9bnVsbDthLm5hdGl2ZUV2ZW50PW51bGw7YS50YXJnZXRJbnN0PW51bGw7YS5hbmNlc3RvcnMubGVuZ3RoPTA7MTA+cGMubGVuZ3RoJiZwYy5wdXNoKGEpfVxuZnVuY3Rpb24gcmMoYSxiLGMsZCl7aWYocGMubGVuZ3RoKXt2YXIgZT1wYy5wb3AoKTtlLnRvcExldmVsVHlwZT1hO2UuZXZlbnRTeXN0ZW1GbGFncz1kO2UubmF0aXZlRXZlbnQ9YjtlLnRhcmdldEluc3Q9YztyZXR1cm4gZX1yZXR1cm57dG9wTGV2ZWxUeXBlOmEsZXZlbnRTeXN0ZW1GbGFnczpkLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX19XG5mdW5jdGlvbiBzYyhhKXt2YXIgYj1hLnRhcmdldEluc3QsYz1iO2Rve2lmKCFjKXthLmFuY2VzdG9ycy5wdXNoKGMpO2JyZWFrfXZhciBkPWM7aWYoMz09PWQudGFnKWQ9ZC5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztlbHNle2Zvcig7ZC5yZXR1cm47KWQ9ZC5yZXR1cm47ZD0zIT09ZC50YWc/bnVsbDpkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvfWlmKCFkKWJyZWFrO2I9Yy50YWc7NSE9PWImJjYhPT1ifHxhLmFuY2VzdG9ycy5wdXNoKGMpO2M9dGMoZCl9d2hpbGUoYyk7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspe2I9YS5hbmNlc3RvcnNbY107dmFyIGU9bmMoYS5uYXRpdmVFdmVudCk7ZD1hLnRvcExldmVsVHlwZTt2YXIgZj1hLm5hdGl2ZUV2ZW50LGc9YS5ldmVudFN5c3RlbUZsYWdzOzA9PT1jJiYoZ3w9NjQpO2Zvcih2YXIgaD1udWxsLGs9MDtrPHNhLmxlbmd0aDtrKyspe3ZhciBsPXNhW2tdO2wmJihsPWwuZXh0cmFjdEV2ZW50cyhkLGIsZixlLGcpKSYmKGg9XG5pYyhoLGwpKX1tYyhoKX19ZnVuY3Rpb24gdWMoYSxiLGMpe2lmKCFjLmhhcyhhKSl7c3dpdGNoKGEpe2Nhc2UgXCJzY3JvbGxcIjp2YyhiLFwic2Nyb2xsXCIsITApO2JyZWFrO2Nhc2UgXCJmb2N1c1wiOmNhc2UgXCJibHVyXCI6dmMoYixcImZvY3VzXCIsITApO3ZjKGIsXCJibHVyXCIsITApO2Muc2V0KFwiYmx1clwiLG51bGwpO2Muc2V0KFwiZm9jdXNcIixudWxsKTticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6b2MoYSkmJnZjKGIsYSwhMCk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWFjLmluZGV4T2YoYSkmJkYoYSxiKX1jLnNldChhLG51bGwpfX1cbnZhciB3Yyx4Yyx5Yyx6Yz0hMSxBYz1bXSxCYz1udWxsLENjPW51bGwsRGM9bnVsbCxFYz1uZXcgTWFwLEZjPW5ldyBNYXAsR2M9W10sSGM9XCJtb3VzZWRvd24gbW91c2V1cCB0b3VjaGNhbmNlbCB0b3VjaGVuZCB0b3VjaHN0YXJ0IGF1eGNsaWNrIGRibGNsaWNrIHBvaW50ZXJjYW5jZWwgcG9pbnRlcmRvd24gcG9pbnRlcnVwIGRyYWdlbmQgZHJhZ3N0YXJ0IGRyb3AgY29tcG9zaXRpb25lbmQgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIGlucHV0IHRleHRJbnB1dCBjbG9zZSBjYW5jZWwgY29weSBjdXQgcGFzdGUgY2xpY2sgY2hhbmdlIGNvbnRleHRtZW51IHJlc2V0IHN1Ym1pdFwiLnNwbGl0KFwiIFwiKSxJYz1cImZvY3VzIGJsdXIgZHJhZ2VudGVyIGRyYWdsZWF2ZSBtb3VzZW92ZXIgbW91c2VvdXQgcG9pbnRlcm92ZXIgcG9pbnRlcm91dCBnb3Rwb2ludGVyY2FwdHVyZSBsb3N0cG9pbnRlcmNhcHR1cmVcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiBKYyhhLGIpe3ZhciBjPWNjKGIpO0hjLmZvckVhY2goZnVuY3Rpb24oYSl7dWMoYSxiLGMpfSk7SWMuZm9yRWFjaChmdW5jdGlvbihhKXt1YyhhLGIsYyl9KX1mdW5jdGlvbiBLYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSx0b3BMZXZlbFR5cGU6YixldmVudFN5c3RlbUZsYWdzOmN8MzIsbmF0aXZlRXZlbnQ6ZSxjb250YWluZXI6ZH19XG5mdW5jdGlvbiBMYyhhLGIpe3N3aXRjaChhKXtjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkJjPW51bGw7YnJlYWs7Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnbGVhdmVcIjpDYz1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwibW91c2VvdXRcIjpEYz1udWxsO2JyZWFrO2Nhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVyb3V0XCI6RWMuZGVsZXRlKGIucG9pbnRlcklkKTticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6RmMuZGVsZXRlKGIucG9pbnRlcklkKX19ZnVuY3Rpb24gTWMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1LYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1OYyhiKSxudWxsIT09YiYmeGMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO3JldHVybiBhfVxuZnVuY3Rpb24gT2MoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzXCI6cmV0dXJuIEJjPU1jKEJjLGEsYixjLGQsZSksITA7Y2FzZSBcImRyYWdlbnRlclwiOnJldHVybiBDYz1NYyhDYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJtb3VzZW92ZXJcIjpyZXR1cm4gRGM9TWMoRGMsYSxiLGMsZCxlKSwhMDtjYXNlIFwicG9pbnRlcm92ZXJcIjp2YXIgZj1lLnBvaW50ZXJJZDtFYy5zZXQoZixNYyhFYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSk7cmV0dXJuITA7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6cmV0dXJuIGY9ZS5wb2ludGVySWQsRmMuc2V0KGYsTWMoRmMuZ2V0KGYpfHxudWxsLGEsYixjLGQsZSkpLCEwfXJldHVybiExfVxuZnVuY3Rpb24gUGMoYSl7dmFyIGI9dGMoYS50YXJnZXQpO2lmKG51bGwhPT1iKXt2YXIgYz1kYyhiKTtpZihudWxsIT09YylpZihiPWMudGFnLDEzPT09Yil7aWYoYj1lYyhjKSxudWxsIT09Yil7YS5ibG9ja2VkT249YjtyLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eShhLnByaW9yaXR5LGZ1bmN0aW9uKCl7eWMoYyl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfWZ1bmN0aW9uIFFjKGEpe2lmKG51bGwhPT1hLmJsb2NrZWRPbilyZXR1cm4hMTt2YXIgYj1SYyhhLnRvcExldmVsVHlwZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYS5jb250YWluZXIsYS5uYXRpdmVFdmVudCk7aWYobnVsbCE9PWIpe3ZhciBjPU5jKGIpO251bGwhPT1jJiZ4YyhjKTthLmJsb2NrZWRPbj1iO3JldHVybiExfXJldHVybiEwfVxuZnVuY3Rpb24gU2MoYSxiLGMpe1FjKGEpJiZjLmRlbGV0ZShiKX1mdW5jdGlvbiBUYygpe2Zvcih6Yz0hMTswPEFjLmxlbmd0aDspe3ZhciBhPUFjWzBdO2lmKG51bGwhPT1hLmJsb2NrZWRPbil7YT1OYyhhLmJsb2NrZWRPbik7bnVsbCE9PWEmJndjKGEpO2JyZWFrfXZhciBiPVJjKGEudG9wTGV2ZWxUeXBlLGEuZXZlbnRTeXN0ZW1GbGFncyxhLmNvbnRhaW5lcixhLm5hdGl2ZUV2ZW50KTtudWxsIT09Yj9hLmJsb2NrZWRPbj1iOkFjLnNoaWZ0KCl9bnVsbCE9PUJjJiZRYyhCYykmJihCYz1udWxsKTtudWxsIT09Q2MmJlFjKENjKSYmKENjPW51bGwpO251bGwhPT1EYyYmUWMoRGMpJiYoRGM9bnVsbCk7RWMuZm9yRWFjaChTYyk7RmMuZm9yRWFjaChTYyl9ZnVuY3Rpb24gVWMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLHpjfHwoemM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksVGMpKSl9XG5mdW5jdGlvbiBWYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBVYyhiLGEpfWlmKDA8QWMubGVuZ3RoKXtVYyhBY1swXSxhKTtmb3IodmFyIGM9MTtjPEFjLmxlbmd0aDtjKyspe3ZhciBkPUFjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09QmMmJlVjKEJjLGEpO251bGwhPT1DYyYmVWMoQ2MsYSk7bnVsbCE9PURjJiZVYyhEYyxhKTtFYy5mb3JFYWNoKGIpO0ZjLmZvckVhY2goYik7Zm9yKGM9MDtjPEdjLmxlbmd0aDtjKyspZD1HY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8R2MubGVuZ3RoJiYoYz1HY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOylQYyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJkdjLnNoaWZ0KCl9XG52YXIgV2M9e30sWWM9bmV3IE1hcCxaYz1uZXcgTWFwLCRjPVtcImFib3J0XCIsXCJhYm9ydFwiLFhiLFwiYW5pbWF0aW9uRW5kXCIsWWIsXCJhbmltYXRpb25JdGVyYXRpb25cIixaYixcImFuaW1hdGlvblN0YXJ0XCIsXCJjYW5wbGF5XCIsXCJjYW5QbGF5XCIsXCJjYW5wbGF5dGhyb3VnaFwiLFwiY2FuUGxheVRocm91Z2hcIixcImR1cmF0aW9uY2hhbmdlXCIsXCJkdXJhdGlvbkNoYW5nZVwiLFwiZW1wdGllZFwiLFwiZW1wdGllZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmNyeXB0ZWRcIixcImVuZGVkXCIsXCJlbmRlZFwiLFwiZXJyb3JcIixcImVycm9yXCIsXCJnb3Rwb2ludGVyY2FwdHVyZVwiLFwiZ290UG9pbnRlckNhcHR1cmVcIixcImxvYWRcIixcImxvYWRcIixcImxvYWRlZGRhdGFcIixcImxvYWRlZERhdGFcIixcImxvYWRlZG1ldGFkYXRhXCIsXCJsb2FkZWRNZXRhZGF0YVwiLFwibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIixcImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcblwic2Vla2luZ1wiLFwic3RhbGxlZFwiLFwic3RhbGxlZFwiLFwic3VzcGVuZFwiLFwic3VzcGVuZFwiLFwidGltZXVwZGF0ZVwiLFwidGltZVVwZGF0ZVwiLCRiLFwidHJhbnNpdGlvbkVuZFwiLFwid2FpdGluZ1wiLFwid2FpdGluZ1wiXTtmdW5jdGlvbiBhZChhLGIpe2Zvcih2YXIgYz0wO2M8YS5sZW5ndGg7Yys9Mil7dmFyIGQ9YVtjXSxlPWFbYysxXSxmPVwib25cIisoZVswXS50b1VwcGVyQ2FzZSgpK2Uuc2xpY2UoMSkpO2Y9e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOmYsY2FwdHVyZWQ6ZitcIkNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOltkXSxldmVudFByaW9yaXR5OmJ9O1pjLnNldChkLGIpO1ljLnNldChkLGYpO1djW2VdPWZ9fVxuYWQoXCJibHVyIGJsdXIgY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXMgZm9jdXMgaW5wdXQgaW5wdXQgaW52YWxpZCBpbnZhbGlkIGtleWRvd24ga2V5RG93biBrZXlwcmVzcyBrZXlQcmVzcyBrZXl1cCBrZXlVcCBtb3VzZWRvd24gbW91c2VEb3duIG1vdXNldXAgbW91c2VVcCBwYXN0ZSBwYXN0ZSBwYXVzZSBwYXVzZSBwbGF5IHBsYXkgcG9pbnRlcmNhbmNlbCBwb2ludGVyQ2FuY2VsIHBvaW50ZXJkb3duIHBvaW50ZXJEb3duIHBvaW50ZXJ1cCBwb2ludGVyVXAgcmF0ZWNoYW5nZSByYXRlQ2hhbmdlIHJlc2V0IHJlc2V0IHNlZWtlZCBzZWVrZWQgc3VibWl0IHN1Ym1pdCB0b3VjaGNhbmNlbCB0b3VjaENhbmNlbCB0b3VjaGVuZCB0b3VjaEVuZCB0b3VjaHN0YXJ0IHRvdWNoU3RhcnQgdm9sdW1lY2hhbmdlIHZvbHVtZUNoYW5nZVwiLnNwbGl0KFwiIFwiKSwwKTtcbmFkKFwiZHJhZyBkcmFnIGRyYWdlbnRlciBkcmFnRW50ZXIgZHJhZ2V4aXQgZHJhZ0V4aXQgZHJhZ2xlYXZlIGRyYWdMZWF2ZSBkcmFnb3ZlciBkcmFnT3ZlciBtb3VzZW1vdmUgbW91c2VNb3ZlIG1vdXNlb3V0IG1vdXNlT3V0IG1vdXNlb3ZlciBtb3VzZU92ZXIgcG9pbnRlcm1vdmUgcG9pbnRlck1vdmUgcG9pbnRlcm91dCBwb2ludGVyT3V0IHBvaW50ZXJvdmVyIHBvaW50ZXJPdmVyIHNjcm9sbCBzY3JvbGwgdG9nZ2xlIHRvZ2dsZSB0b3VjaG1vdmUgdG91Y2hNb3ZlIHdoZWVsIHdoZWVsXCIuc3BsaXQoXCIgXCIpLDEpO2FkKCRjLDIpO2Zvcih2YXIgYmQ9XCJjaGFuZ2Ugc2VsZWN0aW9uY2hhbmdlIHRleHRJbnB1dCBjb21wb3NpdGlvbnN0YXJ0IGNvbXBvc2l0aW9uZW5kIGNvbXBvc2l0aW9udXBkYXRlXCIuc3BsaXQoXCIgXCIpLGNkPTA7Y2Q8YmQubGVuZ3RoO2NkKyspWmMuc2V0KGJkW2NkXSwwKTtcbnZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIEYoYSxiKXt2YyhiLGEsITEpfWZ1bmN0aW9uIHZjKGEsYixjKXt2YXIgZD1aYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWQ/MjpkKXtjYXNlIDA6ZD1nZC5iaW5kKG51bGwsYiwxLGEpO2JyZWFrO2Nhc2UgMTpkPWhkLmJpbmQobnVsbCxiLDEsYSk7YnJlYWs7ZGVmYXVsdDpkPWlkLmJpbmQobnVsbCxiLDEsYSl9Yz9hLmFkZEV2ZW50TGlzdGVuZXIoYixkLCEwKTphLmFkZEV2ZW50TGlzdGVuZXIoYixkLCExKX1mdW5jdGlvbiBnZChhLGIsYyxkKXtKYXx8SGEoKTt2YXIgZT1pZCxmPUphO0phPSEwO3RyeXtHYShlLGEsYixjLGQpfWZpbmFsbHl7KEphPWYpfHxMYSgpfX1mdW5jdGlvbiBoZChhLGIsYyxkKXtlZChkZCxpZC5iaW5kKG51bGwsYSxiLGMsZCkpfVxuZnVuY3Rpb24gaWQoYSxiLGMsZCl7aWYoZmQpaWYoMDxBYy5sZW5ndGgmJi0xPEhjLmluZGV4T2YoYSkpYT1LYyhudWxsLGEsYixjLGQpLEFjLnB1c2goYSk7ZWxzZXt2YXIgZT1SYyhhLGIsYyxkKTtpZihudWxsPT09ZSlMYyhhLGQpO2Vsc2UgaWYoLTE8SGMuaW5kZXhPZihhKSlhPUtjKGUsYSxiLGMsZCksQWMucHVzaChhKTtlbHNlIGlmKCFPYyhlLGEsYixjLGQpKXtMYyhhLGQpO2E9cmMoYSxkLG51bGwsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9fX19XG5mdW5jdGlvbiBSYyhhLGIsYyxkKXtjPW5jKGQpO2M9dGMoYyk7aWYobnVsbCE9PWMpe3ZhciBlPWRjKGMpO2lmKG51bGw9PT1lKWM9bnVsbDtlbHNle3ZhciBmPWUudGFnO2lmKDEzPT09Zil7Yz1lYyhlKTtpZihudWxsIT09YylyZXR1cm4gYztjPW51bGx9ZWxzZSBpZigzPT09Zil7aWYoZS5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWUudGFnP2Uuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtjPW51bGx9ZWxzZSBlIT09YyYmKGM9bnVsbCl9fWE9cmMoYSxkLGMsYik7dHJ5e01hKHNjLGEpfWZpbmFsbHl7cWMoYSl9cmV0dXJuIG51bGx9XG52YXIgamQ9e2FuaW1hdGlvbkl0ZXJhdGlvbkNvdW50OiEwLGJvcmRlckltYWdlT3V0c2V0OiEwLGJvcmRlckltYWdlU2xpY2U6ITAsYm9yZGVySW1hZ2VXaWR0aDohMCxib3hGbGV4OiEwLGJveEZsZXhHcm91cDohMCxib3hPcmRpbmFsR3JvdXA6ITAsY29sdW1uQ291bnQ6ITAsY29sdW1uczohMCxmbGV4OiEwLGZsZXhHcm93OiEwLGZsZXhQb3NpdGl2ZTohMCxmbGV4U2hyaW5rOiEwLGZsZXhOZWdhdGl2ZTohMCxmbGV4T3JkZXI6ITAsZ3JpZEFyZWE6ITAsZ3JpZFJvdzohMCxncmlkUm93RW5kOiEwLGdyaWRSb3dTcGFuOiEwLGdyaWRSb3dTdGFydDohMCxncmlkQ29sdW1uOiEwLGdyaWRDb2x1bW5FbmQ6ITAsZ3JpZENvbHVtblNwYW46ITAsZ3JpZENvbHVtblN0YXJ0OiEwLGZvbnRXZWlnaHQ6ITAsbGluZUNsYW1wOiEwLGxpbmVIZWlnaHQ6ITAsb3BhY2l0eTohMCxvcmRlcjohMCxvcnBoYW5zOiEwLHRhYlNpemU6ITAsd2lkb3dzOiEwLHpJbmRleDohMCx6b29tOiEwLGZpbGxPcGFjaXR5OiEwLFxuZmxvb2RPcGFjaXR5OiEwLHN0b3BPcGFjaXR5OiEwLHN0cm9rZURhc2hhcnJheTohMCxzdHJva2VEYXNob2Zmc2V0OiEwLHN0cm9rZU1pdGVybGltaXQ6ITAsc3Ryb2tlT3BhY2l0eTohMCxzdHJva2VXaWR0aDohMH0sa2Q9W1wiV2Via2l0XCIsXCJtc1wiLFwiTW96XCIsXCJPXCJdO09iamVjdC5rZXlzKGpkKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe2tkLmZvckVhY2goZnVuY3Rpb24oYil7Yj1iK2EuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYS5zdWJzdHJpbmcoMSk7amRbYl09amRbYV19KX0pO2Z1bmN0aW9uIGxkKGEsYixjKXtyZXR1cm4gbnVsbD09Ynx8XCJib29sZWFuXCI9PT10eXBlb2YgYnx8XCJcIj09PWI/XCJcIjpjfHxcIm51bWJlclwiIT09dHlwZW9mIGJ8fDA9PT1ifHxqZC5oYXNPd25Qcm9wZXJ0eShhKSYmamRbYV0/KFwiXCIrYikudHJpbSgpOmIrXCJweFwifVxuZnVuY3Rpb24gbWQoYSxiKXthPWEuc3R5bGU7Zm9yKHZhciBjIGluIGIpaWYoYi5oYXNPd25Qcm9wZXJ0eShjKSl7dmFyIGQ9MD09PWMuaW5kZXhPZihcIi0tXCIpLGU9bGQoYyxiW2NdLGQpO1wiZmxvYXRcIj09PWMmJihjPVwiY3NzRmxvYXRcIik7ZD9hLnNldFByb3BlcnR5KGMsZSk6YVtjXT1lfX12YXIgbmQ9bih7bWVudWl0ZW06ITB9LHthcmVhOiEwLGJhc2U6ITAsYnI6ITAsY29sOiEwLGVtYmVkOiEwLGhyOiEwLGltZzohMCxpbnB1dDohMCxrZXlnZW46ITAsbGluazohMCxtZXRhOiEwLHBhcmFtOiEwLHNvdXJjZTohMCx0cmFjazohMCx3YnI6ITB9KTtcbmZ1bmN0aW9uIG9kKGEsYil7aWYoYil7aWYobmRbYV0mJihudWxsIT1iLmNoaWxkcmVufHxudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKSl0aHJvdyBFcnJvcih1KDEzNyxhLFwiXCIpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHUoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHUoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHUoNjIsXCJcIikpO319XG5mdW5jdGlvbiBwZChhLGIpe2lmKC0xPT09YS5pbmRleE9mKFwiLVwiKSlyZXR1cm5cInN0cmluZ1wiPT09dHlwZW9mIGIuaXM7c3dpdGNoKGEpe2Nhc2UgXCJhbm5vdGF0aW9uLXhtbFwiOmNhc2UgXCJjb2xvci1wcm9maWxlXCI6Y2FzZSBcImZvbnQtZmFjZVwiOmNhc2UgXCJmb250LWZhY2Utc3JjXCI6Y2FzZSBcImZvbnQtZmFjZS11cmlcIjpjYXNlIFwiZm9udC1mYWNlLWZvcm1hdFwiOmNhc2UgXCJmb250LWZhY2UtbmFtZVwiOmNhc2UgXCJtaXNzaW5nLWdseXBoXCI6cmV0dXJuITE7ZGVmYXVsdDpyZXR1cm4hMH19dmFyIHFkPU1iLmh0bWw7ZnVuY3Rpb24gcmQoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9Y2MoYSk7Yj13YVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl1YyhiW2RdLGEsYyl9ZnVuY3Rpb24gc2QoKXt9XG5mdW5jdGlvbiB0ZChhKXthPWF8fChcInVuZGVmaW5lZFwiIT09dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50OnZvaWQgMCk7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBhKXJldHVybiBudWxsO3RyeXtyZXR1cm4gYS5hY3RpdmVFbGVtZW50fHxhLmJvZHl9Y2F0Y2goYil7cmV0dXJuIGEuYm9keX19ZnVuY3Rpb24gdWQoYSl7Zm9yKDthJiZhLmZpcnN0Q2hpbGQ7KWE9YS5maXJzdENoaWxkO3JldHVybiBhfWZ1bmN0aW9uIHZkKGEsYil7dmFyIGM9dWQoYSk7YT0wO2Zvcih2YXIgZDtjOyl7aWYoMz09PWMubm9kZVR5cGUpe2Q9YStjLnRleHRDb250ZW50Lmxlbmd0aDtpZihhPD1iJiZkPj1iKXJldHVybntub2RlOmMsb2Zmc2V0OmItYX07YT1kfWE6e2Zvcig7Yzspe2lmKGMubmV4dFNpYmxpbmcpe2M9Yy5uZXh0U2libGluZzticmVhayBhfWM9Yy5wYXJlbnROb2RlfWM9dm9pZCAwfWM9dWQoYyl9fVxuZnVuY3Rpb24gd2QoYSxiKXtyZXR1cm4gYSYmYj9hPT09Yj8hMDphJiYzPT09YS5ub2RlVHlwZT8hMTpiJiYzPT09Yi5ub2RlVHlwZT93ZChhLGIucGFyZW50Tm9kZSk6XCJjb250YWluc1wiaW4gYT9hLmNvbnRhaW5zKGIpOmEuY29tcGFyZURvY3VtZW50UG9zaXRpb24/ISEoYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbihiKSYxNik6ITE6ITF9ZnVuY3Rpb24geGQoKXtmb3IodmFyIGE9d2luZG93LGI9dGQoKTtiIGluc3RhbmNlb2YgYS5IVE1MSUZyYW1lRWxlbWVudDspe3RyeXt2YXIgYz1cInN0cmluZ1wiPT09dHlwZW9mIGIuY29udGVudFdpbmRvdy5sb2NhdGlvbi5ocmVmfWNhdGNoKGQpe2M9ITF9aWYoYylhPWIuY29udGVudFdpbmRvdztlbHNlIGJyZWFrO2I9dGQoYS5kb2N1bWVudCl9cmV0dXJuIGJ9XG5mdW5jdGlvbiB5ZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiYoXCJ0ZXh0XCI9PT1hLnR5cGV8fFwic2VhcmNoXCI9PT1hLnR5cGV8fFwidGVsXCI9PT1hLnR5cGV8fFwidXJsXCI9PT1hLnR5cGV8fFwicGFzc3dvcmRcIj09PWEudHlwZSl8fFwidGV4dGFyZWFcIj09PWJ8fFwidHJ1ZVwiPT09YS5jb250ZW50RWRpdGFibGUpfXZhciB6ZD1cIiRcIixBZD1cIi8kXCIsQmQ9XCIkP1wiLENkPVwiJCFcIixEZD1udWxsLEVkPW51bGw7ZnVuY3Rpb24gRmQoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gR2QoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcIm9wdGlvblwiPT09YXx8XCJub3NjcmlwdFwiPT09YXx8XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNoaWxkcmVufHxcIm51bWJlclwiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9PWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJm51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwuX19odG1sfXZhciBIZD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygc2V0VGltZW91dD9zZXRUaW1lb3V0OnZvaWQgMCxJZD1cImZ1bmN0aW9uXCI9PT10eXBlb2YgY2xlYXJUaW1lb3V0P2NsZWFyVGltZW91dDp2b2lkIDA7ZnVuY3Rpb24gSmQoYSl7Zm9yKDtudWxsIT1hO2E9YS5uZXh0U2libGluZyl7dmFyIGI9YS5ub2RlVHlwZTtpZigxPT09Ynx8Mz09PWIpYnJlYWt9cmV0dXJuIGF9XG5mdW5jdGlvbiBLZChhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT16ZHx8Yz09PUNkfHxjPT09QmQpe2lmKDA9PT1iKXJldHVybiBhO2ItLX1lbHNlIGM9PT1BZCYmYisrfWE9YS5wcmV2aW91c1NpYmxpbmd9cmV0dXJuIG51bGx9dmFyIExkPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLE1kPVwiX19yZWFjdEludGVybmFsSW5zdGFuY2UkXCIrTGQsTmQ9XCJfX3JlYWN0RXZlbnRIYW5kbGVycyRcIitMZCxPZD1cIl9fcmVhY3RDb250YWluZXJlJFwiK0xkO1xuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YVtNZF07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbT2RdfHxjW01kXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPUtkKGEpO251bGwhPT1hOyl7aWYoYz1hW01kXSlyZXR1cm4gYzthPUtkKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBOYyhhKXthPWFbTWRdfHxhW09kXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gUGQoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHUoMzMpKTt9ZnVuY3Rpb24gUWQoYSl7cmV0dXJuIGFbTmRdfHxudWxsfVxuZnVuY3Rpb24gUmQoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1cbmZ1bmN0aW9uIFNkKGEsYil7dmFyIGM9YS5zdGF0ZU5vZGU7aWYoIWMpcmV0dXJuIG51bGw7dmFyIGQ9bGEoYyk7aWYoIWQpcmV0dXJuIG51bGw7Yz1kW2JdO2E6c3dpdGNoKGIpe2Nhc2UgXCJvbkNsaWNrXCI6Y2FzZSBcIm9uQ2xpY2tDYXB0dXJlXCI6Y2FzZSBcIm9uRG91YmxlQ2xpY2tcIjpjYXNlIFwib25Eb3VibGVDbGlja0NhcHR1cmVcIjpjYXNlIFwib25Nb3VzZURvd25cIjpjYXNlIFwib25Nb3VzZURvd25DYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlXCI6Y2FzZSBcIm9uTW91c2VNb3ZlQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlVXBcIjpjYXNlIFwib25Nb3VzZVVwQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRW50ZXJcIjooZD0hZC5kaXNhYmxlZCl8fChhPWEudHlwZSxkPSEoXCJidXR0b25cIj09PWF8fFwiaW5wdXRcIj09PWF8fFwic2VsZWN0XCI9PT1hfHxcInRleHRhcmVhXCI9PT1hKSk7YT0hZDticmVhayBhO2RlZmF1bHQ6YT0hMX1pZihhKXJldHVybiBudWxsO2lmKGMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjKXRocm93IEVycm9yKHUoMjMxLFxuYix0eXBlb2YgYykpO3JldHVybiBjfWZ1bmN0aW9uIFRkKGEsYixjKXtpZihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lc1tiXSkpYy5fZGlzcGF0Y2hMaXN0ZW5lcnM9aWMoYy5fZGlzcGF0Y2hMaXN0ZW5lcnMsYiksYy5fZGlzcGF0Y2hJbnN0YW5jZXM9aWMoYy5fZGlzcGF0Y2hJbnN0YW5jZXMsYSl9ZnVuY3Rpb24gVWQoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7Zm9yKHZhciBiPWEuX3RhcmdldEluc3QsYz1bXTtiOyljLnB1c2goYiksYj1SZChiKTtmb3IoYj1jLmxlbmd0aDswPGItLTspVGQoY1tiXSxcImNhcHR1cmVkXCIsYSk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKylUZChjW2JdLFwiYnViYmxlZFwiLGEpfX1cbmZ1bmN0aW9uIFZkKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPVNkKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1pYyhjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1pYyhjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gV2QoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWZChhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWGQoYSl7amMoYSxVZCl9dmFyIFlkPW51bGwsWmQ9bnVsbCwkZD1udWxsO1xuZnVuY3Rpb24gYWUoKXtpZigkZClyZXR1cm4gJGQ7dmFyIGEsYj1aZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBZZD9ZZC52YWx1ZTpZZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiAkZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIGJlKCl7cmV0dXJuITB9ZnVuY3Rpb24gY2UoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIEcoYSxiLGMsZCl7dGhpcy5kaXNwYXRjaENvbmZpZz1hO3RoaXMuX3RhcmdldEluc3Q9Yjt0aGlzLm5hdGl2ZUV2ZW50PWM7YT10aGlzLmNvbnN0cnVjdG9yLkludGVyZmFjZTtmb3IodmFyIGUgaW4gYSlhLmhhc093blByb3BlcnR5KGUpJiYoKGI9YVtlXSk/dGhpc1tlXT1iKGMpOlwidGFyZ2V0XCI9PT1lP3RoaXMudGFyZ2V0PWQ6dGhpc1tlXT1jW2VdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Yy5kZWZhdWx0UHJldmVudGVkP2MuZGVmYXVsdFByZXZlbnRlZDohMT09PWMucmV0dXJuVmFsdWUpP2JlOmNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9Y2U7cmV0dXJuIHRoaXN9XG5uKEcucHJvdG90eXBlLHtwcmV2ZW50RGVmYXVsdDpmdW5jdGlvbigpe3RoaXMuZGVmYXVsdFByZXZlbnRlZD0hMDt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnByZXZlbnREZWZhdWx0P2EucHJldmVudERlZmF1bHQoKTpcInVua25vd25cIiE9PXR5cGVvZiBhLnJldHVyblZhbHVlJiYoYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9YmUpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9YmUpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7dGhpcy5pc1BlcnNpc3RlbnQ9YmV9LGlzUGVyc2lzdGVudDpjZSxkZXN0cnVjdG9yOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jb25zdHJ1Y3Rvci5JbnRlcmZhY2UsXG5iO2ZvcihiIGluIGEpdGhpc1tiXT1udWxsO3RoaXMubmF0aXZlRXZlbnQ9dGhpcy5fdGFyZ2V0SW5zdD10aGlzLmRpc3BhdGNoQ29uZmlnPW51bGw7dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZD10aGlzLmlzRGVmYXVsdFByZXZlbnRlZD1jZTt0aGlzLl9kaXNwYXRjaEluc3RhbmNlcz10aGlzLl9kaXNwYXRjaExpc3RlbmVycz1udWxsfX0pO0cuSW50ZXJmYWNlPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDpmdW5jdGlvbigpe3JldHVybiBudWxsfSxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuRy5leHRlbmQ9ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gYigpe31mdW5jdGlvbiBjKCl7cmV0dXJuIGQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXZhciBkPXRoaXM7Yi5wcm90b3R5cGU9ZC5wcm90b3R5cGU7dmFyIGU9bmV3IGI7bihlLGMucHJvdG90eXBlKTtjLnByb3RvdHlwZT1lO2MucHJvdG90eXBlLmNvbnN0cnVjdG9yPWM7Yy5JbnRlcmZhY2U9bih7fSxkLkludGVyZmFjZSxhKTtjLmV4dGVuZD1kLmV4dGVuZDtkZShjKTtyZXR1cm4gY307ZGUoRyk7ZnVuY3Rpb24gZWUoYSxiLGMsZCl7aWYodGhpcy5ldmVudFBvb2wubGVuZ3RoKXt2YXIgZT10aGlzLmV2ZW50UG9vbC5wb3AoKTt0aGlzLmNhbGwoZSxhLGIsYyxkKTtyZXR1cm4gZX1yZXR1cm4gbmV3IHRoaXMoYSxiLGMsZCl9XG5mdW5jdGlvbiBmZShhKXtpZighKGEgaW5zdGFuY2VvZiB0aGlzKSl0aHJvdyBFcnJvcih1KDI3OSkpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBkZShhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1lZTthLnJlbGVhc2U9ZmV9dmFyIGdlPUcuZXh0ZW5kKHtkYXRhOm51bGx9KSxoZT1HLmV4dGVuZCh7ZGF0YTpudWxsfSksaWU9WzksMTMsMjcsMzJdLGplPXlhJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyxrZT1udWxsO3lhJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJihrZT1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIGxlPXlhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYha2UsbWU9eWEmJighamV8fGtlJiY4PGtlJiYxMT49a2UpLG5lPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLG9lPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LHBlPSExO1xuZnVuY3Rpb24gcWUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT1pZS5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIHJlKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIHNlPSExO2Z1bmN0aW9uIHRlKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiByZShiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7cGU9ITA7cmV0dXJuIG5lO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PW5lJiZwZT9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiB1ZShhLGIpe2lmKHNlKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCFqZSYmcWUoYSxiKT8oYT1hZSgpLCRkPVpkPVlkPW51bGwsc2U9ITEsYSk6bnVsbDtzd2l0Y2goYSl7Y2FzZSBcInBhc3RlXCI6cmV0dXJuIG51bGw7Y2FzZSBcImtleXByZXNzXCI6aWYoIShiLmN0cmxLZXl8fGIuYWx0S2V5fHxiLm1ldGFLZXkpfHxiLmN0cmxLZXkmJmIuYWx0S2V5KXtpZihiLmNoYXImJjE8Yi5jaGFyLmxlbmd0aClyZXR1cm4gYi5jaGFyO2lmKGIud2hpY2gpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoYi53aGljaCl9cmV0dXJuIG51bGw7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6cmV0dXJuIG1lJiZcImtvXCIhPT1iLmxvY2FsZT9udWxsOmIuZGF0YTtkZWZhdWx0OnJldHVybiBudWxsfX1cbnZhciB2ZT17ZXZlbnRUeXBlczpvZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlO2lmKGplKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOnZhciBmPW9lLmNvbXBvc2l0aW9uU3RhcnQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpmPW9lLmNvbXBvc2l0aW9uRW5kO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6Zj1vZS5jb21wb3NpdGlvblVwZGF0ZTticmVhayBifWY9dm9pZCAwfWVsc2Ugc2U/cWUoYSxjKSYmKGY9b2UuY29tcG9zaXRpb25FbmQpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoZj1vZS5jb21wb3NpdGlvblN0YXJ0KTtmPyhtZSYmXCJrb1wiIT09Yy5sb2NhbGUmJihzZXx8ZiE9PW9lLmNvbXBvc2l0aW9uU3RhcnQ/Zj09PW9lLmNvbXBvc2l0aW9uRW5kJiZzZSYmKGU9YWUoKSk6KFlkPWQsWmQ9XCJ2YWx1ZVwiaW4gWWQ/WWQudmFsdWU6WWQudGV4dENvbnRlbnQsc2U9ITApKSxmPWdlLmdldFBvb2xlZChmLFxuYixjLGQpLGU/Zi5kYXRhPWU6KGU9cmUoYyksbnVsbCE9PWUmJihmLmRhdGE9ZSkpLFhkKGYpLGU9Zik6ZT1udWxsOyhhPWxlP3RlKGEsYyk6dWUoYSxjKSk/KGI9aGUuZ2V0UG9vbGVkKG9lLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxYZChiKSk6Yj1udWxsO3JldHVybiBudWxsPT09ZT9iOm51bGw9PT1iP2U6W2UsYl19fSx3ZT17Y29sb3I6ITAsZGF0ZTohMCxkYXRldGltZTohMCxcImRhdGV0aW1lLWxvY2FsXCI6ITAsZW1haWw6ITAsbW9udGg6ITAsbnVtYmVyOiEwLHBhc3N3b3JkOiEwLHJhbmdlOiEwLHNlYXJjaDohMCx0ZWw6ITAsdGV4dDohMCx0aW1lOiEwLHVybDohMCx3ZWVrOiEwfTtmdW5jdGlvbiB4ZShhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuXCJpbnB1dFwiPT09Yj8hIXdlW2EudHlwZV06XCJ0ZXh0YXJlYVwiPT09Yj8hMDohMX1cbnZhciB5ZT17Y2hhbmdlOntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ2hhbmdlXCIsY2FwdHVyZWQ6XCJvbkNoYW5nZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjaGFuZ2UgY2xpY2sgZm9jdXMgaW5wdXQga2V5ZG93biBrZXl1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fTtmdW5jdGlvbiB6ZShhLGIsYyl7YT1HLmdldFBvb2xlZCh5ZS5jaGFuZ2UsYSxiLGMpO2EudHlwZT1cImNoYW5nZVwiO0RhKGMpO1hkKGEpO3JldHVybiBhfXZhciBBZT1udWxsLEJlPW51bGw7ZnVuY3Rpb24gQ2UoYSl7bWMoYSl9ZnVuY3Rpb24gRGUoYSl7dmFyIGI9UGQoYSk7aWYoeWIoYikpcmV0dXJuIGF9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgRmU9ITE7eWEmJihGZT1vYyhcImlucHV0XCIpJiYoIWRvY3VtZW50LmRvY3VtZW50TW9kZXx8OTxkb2N1bWVudC5kb2N1bWVudE1vZGUpKTtcbmZ1bmN0aW9uIEdlKCl7QWUmJihBZS5kZXRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSksQmU9QWU9bnVsbCl9ZnVuY3Rpb24gSGUoYSl7aWYoXCJ2YWx1ZVwiPT09YS5wcm9wZXJ0eU5hbWUmJkRlKEJlKSlpZihhPXplKEJlLGEsbmMoYSkpLEphKW1jKGEpO2Vsc2V7SmE9ITA7dHJ5e0ZhKENlLGEpfWZpbmFsbHl7SmE9ITEsTGEoKX19fWZ1bmN0aW9uIEllKGEsYixjKXtcImZvY3VzXCI9PT1hPyhHZSgpLEFlPWIsQmU9YyxBZS5hdHRhY2hFdmVudChcIm9ucHJvcGVydHljaGFuZ2VcIixIZSkpOlwiYmx1clwiPT09YSYmR2UoKX1mdW5jdGlvbiBKZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiBEZShCZSl9ZnVuY3Rpb24gS2UoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiBEZShiKX1mdW5jdGlvbiBMZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiBEZShiKX1cbnZhciBNZT17ZXZlbnRUeXBlczp5ZSxfaXNJbnB1dEV2ZW50U3VwcG9ydGVkOkZlLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9Yj9QZChiKTp3aW5kb3csZj1lLm5vZGVOYW1lJiZlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWZ8fFwiaW5wdXRcIj09PWYmJlwiZmlsZVwiPT09ZS50eXBlKXZhciBnPUVlO2Vsc2UgaWYoeGUoZSkpaWYoRmUpZz1MZTtlbHNle2c9SmU7dmFyIGg9SWV9ZWxzZShmPWUubm9kZU5hbWUpJiZcImlucHV0XCI9PT1mLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1lLnR5cGV8fFwicmFkaW9cIj09PWUudHlwZSkmJihnPUtlKTtpZihnJiYoZz1nKGEsYikpKXJldHVybiB6ZShnLGMsZCk7aCYmaChhLGUsYik7XCJibHVyXCI9PT1hJiYoYT1lLl93cmFwcGVyU3RhdGUpJiZhLmNvbnRyb2xsZWQmJlwibnVtYmVyXCI9PT1lLnR5cGUmJkRiKGUsXCJudW1iZXJcIixlLnZhbHVlKX19LE5lPUcuZXh0ZW5kKHt2aWV3Om51bGwsZGV0YWlsOm51bGx9KSxcbk9lPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZShhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9lW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gUWUoKXtyZXR1cm4gUGV9XG52YXIgUmU9MCxTZT0wLFRlPSExLFVlPSExLFZlPU5lLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpRZSxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX0sbW92ZW1lbnRYOmZ1bmN0aW9uKGEpe2lmKFwibW92ZW1lbnRYXCJpbiBhKXJldHVybiBhLm1vdmVtZW50WDt2YXIgYj1SZTtSZT1hLnNjcmVlblg7cmV0dXJuIFRlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5YLWI6MDooVGU9ITAsMCl9LG1vdmVtZW50WTpmdW5jdGlvbihhKXtpZihcIm1vdmVtZW50WVwiaW4gYSlyZXR1cm4gYS5tb3ZlbWVudFk7XG52YXIgYj1TZTtTZT1hLnNjcmVlblk7cmV0dXJuIFVlP1wibW91c2Vtb3ZlXCI9PT1hLnR5cGU/YS5zY3JlZW5ZLWI6MDooVWU9ITAsMCl9fSksV2U9VmUuZXh0ZW5kKHtwb2ludGVySWQ6bnVsbCx3aWR0aDpudWxsLGhlaWdodDpudWxsLHByZXNzdXJlOm51bGwsdGFuZ2VudGlhbFByZXNzdXJlOm51bGwsdGlsdFg6bnVsbCx0aWx0WTpudWxsLHR3aXN0Om51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLFhlPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LG1vdXNlTGVhdmU6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvbk1vdXNlTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXX0scG9pbnRlckVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyRW50ZXJcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19LHBvaW50ZXJMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uUG9pbnRlckxlYXZlXCIsXG5kZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxZZT17ZXZlbnRUeXBlczpYZSxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9XCJtb3VzZW92ZXJcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEsZz1cIm1vdXNlb3V0XCI9PT1hfHxcInBvaW50ZXJvdXRcIj09PWE7aWYoZiYmMD09PShlJjMyKSYmKGMucmVsYXRlZFRhcmdldHx8Yy5mcm9tRWxlbWVudCl8fCFnJiYhZilyZXR1cm4gbnVsbDtmPWQud2luZG93PT09ZD9kOihmPWQub3duZXJEb2N1bWVudCk/Zi5kZWZhdWx0Vmlld3x8Zi5wYXJlbnRXaW5kb3c6d2luZG93O2lmKGcpe2lmKGc9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP3RjKGIpOm51bGwsbnVsbCE9PWIpe3ZhciBoPWRjKGIpO2lmKGIhPT1ofHw1IT09Yi50YWcmJjYhPT1iLnRhZyliPW51bGx9fWVsc2UgZz1udWxsO2lmKGc9PT1iKXJldHVybiBudWxsO2lmKFwibW91c2VvdXRcIj09PWF8fFwibW91c2VvdmVyXCI9PT1cbmEpe3ZhciBrPVZlO3ZhciBsPVhlLm1vdXNlTGVhdmU7dmFyIG09WGUubW91c2VFbnRlcjt2YXIgcD1cIm1vdXNlXCJ9ZWxzZSBpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpaz1XZSxsPVhlLnBvaW50ZXJMZWF2ZSxtPVhlLnBvaW50ZXJFbnRlcixwPVwicG9pbnRlclwiO2E9bnVsbD09Zz9mOlBkKGcpO2Y9bnVsbD09Yj9mOlBkKGIpO2w9ay5nZXRQb29sZWQobCxnLGMsZCk7bC50eXBlPXArXCJsZWF2ZVwiO2wudGFyZ2V0PWE7bC5yZWxhdGVkVGFyZ2V0PWY7Yz1rLmdldFBvb2xlZChtLGIsYyxkKTtjLnR5cGU9cCtcImVudGVyXCI7Yy50YXJnZXQ9ZjtjLnJlbGF0ZWRUYXJnZXQ9YTtkPWc7cD1iO2lmKGQmJnApYTp7az1kO209cDtnPTA7Zm9yKGE9azthO2E9UmQoYSkpZysrO2E9MDtmb3IoYj1tO2I7Yj1SZChiKSlhKys7Zm9yKDswPGctYTspaz1SZChrKSxnLS07Zm9yKDswPGEtZzspbT1SZChtKSxhLS07Zm9yKDtnLS07KXtpZihrPT09bXx8az09PW0uYWx0ZXJuYXRlKWJyZWFrIGE7XG5rPVJkKGspO209UmQobSl9az1udWxsfWVsc2Ugaz1udWxsO209aztmb3Ioaz1bXTtkJiZkIT09bTspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1tKWJyZWFrO2sucHVzaChkKTtkPVJkKGQpfWZvcihkPVtdO3AmJnAhPT1tOyl7Zz1wLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PW0pYnJlYWs7ZC5wdXNoKHApO3A9UmQocCl9Zm9yKHA9MDtwPGsubGVuZ3RoO3ArKylWZChrW3BdLFwiYnViYmxlZFwiLGwpO2ZvcihwPWQubGVuZ3RoOzA8cC0tOylWZChkW3BdLFwiY2FwdHVyZWRcIixjKTtyZXR1cm4gMD09PShlJjY0KT9bbF06W2wsY119fTtmdW5jdGlvbiBaZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyICRlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOlplLGFmPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBiZihhLGIpe2lmKCRlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighYWYuY2FsbChiLGNbZF0pfHwhJGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1cbnZhciBjZj15YSYmXCJkb2N1bWVudE1vZGVcImluIGRvY3VtZW50JiYxMT49ZG9jdW1lbnQuZG9jdW1lbnRNb2RlLGRmPXtzZWxlY3Q6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25TZWxlY3RcIixjYXB0dXJlZDpcIm9uU2VsZWN0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbnRleHRtZW51IGRyYWdlbmQgZm9jdXMga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIil9fSxlZj1udWxsLGZmPW51bGwsZ2Y9bnVsbCxoZj0hMTtcbmZ1bmN0aW9uIGpmKGEsYil7dmFyIGM9Yi53aW5kb3c9PT1iP2IuZG9jdW1lbnQ6OT09PWIubm9kZVR5cGU/YjpiLm93bmVyRG9jdW1lbnQ7aWYoaGZ8fG51bGw9PWVmfHxlZiE9PXRkKGMpKXJldHVybiBudWxsO2M9ZWY7XCJzZWxlY3Rpb25TdGFydFwiaW4gYyYmeWQoYyk/Yz17c3RhcnQ6Yy5zZWxlY3Rpb25TdGFydCxlbmQ6Yy5zZWxlY3Rpb25FbmR9OihjPShjLm93bmVyRG9jdW1lbnQmJmMub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlld3x8d2luZG93KS5nZXRTZWxlY3Rpb24oKSxjPXthbmNob3JOb2RlOmMuYW5jaG9yTm9kZSxhbmNob3JPZmZzZXQ6Yy5hbmNob3JPZmZzZXQsZm9jdXNOb2RlOmMuZm9jdXNOb2RlLGZvY3VzT2Zmc2V0OmMuZm9jdXNPZmZzZXR9KTtyZXR1cm4gZ2YmJmJmKGdmLGMpP251bGw6KGdmPWMsYT1HLmdldFBvb2xlZChkZi5zZWxlY3QsZmYsYSxiKSxhLnR5cGU9XCJzZWxlY3RcIixhLnRhcmdldD1lZixYZChhKSxhKX1cbnZhciBrZj17ZXZlbnRUeXBlczpkZixleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQsZSxmKXtlPWZ8fChkLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCk7aWYoIShmPSFlKSl7YTp7ZT1jYyhlKTtmPXdhLm9uU2VsZWN0O2Zvcih2YXIgZz0wO2c8Zi5sZW5ndGg7ZysrKWlmKCFlLmhhcyhmW2ddKSl7ZT0hMTticmVhayBhfWU9ITB9Zj0hZX1pZihmKXJldHVybiBudWxsO2U9Yj9QZChiKTp3aW5kb3c7c3dpdGNoKGEpe2Nhc2UgXCJmb2N1c1wiOmlmKHhlKGUpfHxcInRydWVcIj09PWUuY29udGVudEVkaXRhYmxlKWVmPWUsZmY9YixnZj1udWxsO2JyZWFrO2Nhc2UgXCJibHVyXCI6Z2Y9ZmY9ZWY9bnVsbDticmVhaztjYXNlIFwibW91c2Vkb3duXCI6aGY9ITA7YnJlYWs7Y2FzZSBcImNvbnRleHRtZW51XCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwiZHJhZ2VuZFwiOnJldHVybiBoZj0hMSxqZihjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihjZilicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuIGpmKGMsZCl9cmV0dXJuIG51bGx9fSxsZj1HLmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksbWY9Ry5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxuZj1OZS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO2Z1bmN0aW9uIG9mKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfVxudmFyIHBmPXtFc2M6XCJFc2NhcGVcIixTcGFjZWJhcjpcIiBcIixMZWZ0OlwiQXJyb3dMZWZ0XCIsVXA6XCJBcnJvd1VwXCIsUmlnaHQ6XCJBcnJvd1JpZ2h0XCIsRG93bjpcIkFycm93RG93blwiLERlbDpcIkRlbGV0ZVwiLFdpbjpcIk9TXCIsTWVudTpcIkNvbnRleHRNZW51XCIsQXBwczpcIkNvbnRleHRNZW51XCIsU2Nyb2xsOlwiU2Nyb2xsTG9ja1wiLE1velByaW50YWJsZUtleTpcIlVuaWRlbnRpZmllZFwifSxxZj17ODpcIkJhY2tzcGFjZVwiLDk6XCJUYWJcIiwxMjpcIkNsZWFyXCIsMTM6XCJFbnRlclwiLDE2OlwiU2hpZnRcIiwxNzpcIkNvbnRyb2xcIiwxODpcIkFsdFwiLDE5OlwiUGF1c2VcIiwyMDpcIkNhcHNMb2NrXCIsMjc6XCJFc2NhcGVcIiwzMjpcIiBcIiwzMzpcIlBhZ2VVcFwiLDM0OlwiUGFnZURvd25cIiwzNTpcIkVuZFwiLDM2OlwiSG9tZVwiLDM3OlwiQXJyb3dMZWZ0XCIsMzg6XCJBcnJvd1VwXCIsMzk6XCJBcnJvd1JpZ2h0XCIsNDA6XCJBcnJvd0Rvd25cIiw0NTpcIkluc2VydFwiLDQ2OlwiRGVsZXRlXCIsMTEyOlwiRjFcIiwxMTM6XCJGMlwiLDExNDpcIkYzXCIsMTE1OlwiRjRcIixcbjExNjpcIkY1XCIsMTE3OlwiRjZcIiwxMTg6XCJGN1wiLDExOTpcIkY4XCIsMTIwOlwiRjlcIiwxMjE6XCJGMTBcIiwxMjI6XCJGMTFcIiwxMjM6XCJGMTJcIiwxNDQ6XCJOdW1Mb2NrXCIsMTQ1OlwiU2Nyb2xsTG9ja1wiLDIyNDpcIk1ldGFcIn0scmY9TmUuZXh0ZW5kKHtrZXk6ZnVuY3Rpb24oYSl7aWYoYS5rZXkpe3ZhciBiPXBmW2Eua2V5XXx8YS5rZXk7aWYoXCJVbmlkZW50aWZpZWRcIiE9PWIpcmV0dXJuIGJ9cmV0dXJuXCJrZXlwcmVzc1wiPT09YS50eXBlPyhhPW9mKGEpLDEzPT09YT9cIkVudGVyXCI6U3RyaW5nLmZyb21DaGFyQ29kZShhKSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9xZlthLmtleUNvZGVdfHxcIlVuaWRlbnRpZmllZFwiOlwiXCJ9LGxvY2F0aW9uOm51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLHJlcGVhdDpudWxsLGxvY2FsZTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWUsY2hhckNvZGU6ZnVuY3Rpb24oYSl7cmV0dXJuXCJrZXlwcmVzc1wiPT09XG5hLnR5cGU/b2YoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2YoYSk6XCJrZXlkb3duXCI9PT1hLnR5cGV8fFwia2V5dXBcIj09PWEudHlwZT9hLmtleUNvZGU6MH19KSxzZj1WZS5leHRlbmQoe2RhdGFUcmFuc2ZlcjpudWxsfSksdGY9TmUuZXh0ZW5kKHt0b3VjaGVzOm51bGwsdGFyZ2V0VG91Y2hlczpudWxsLGNoYW5nZWRUb3VjaGVzOm51bGwsYWx0S2V5Om51bGwsbWV0YUtleTpudWxsLGN0cmxLZXk6bnVsbCxzaGlmdEtleTpudWxsLGdldE1vZGlmaWVyU3RhdGU6UWV9KSx1Zj1HLmV4dGVuZCh7cHJvcGVydHlOYW1lOm51bGwsZWxhcHNlZFRpbWU6bnVsbCxwc2V1ZG9FbGVtZW50Om51bGx9KSx2Zj1WZS5leHRlbmQoe2RlbHRhWDpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWFwiaW4gYT9hLmRlbHRhWDpcIndoZWVsRGVsdGFYXCJpblxuYT8tYS53aGVlbERlbHRhWDowfSxkZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6bnVsbCxkZWx0YU1vZGU6bnVsbH0pLHdmPXtldmVudFR5cGVzOldjLGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9WWMuZ2V0KGEpO2lmKCFlKXJldHVybiBudWxsO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2YoYykpcmV0dXJuIG51bGw7Y2FzZSBcImtleWRvd25cIjpjYXNlIFwia2V5dXBcIjphPXJmO2JyZWFrO2Nhc2UgXCJibHVyXCI6Y2FzZSBcImZvY3VzXCI6YT1uZjticmVhaztjYXNlIFwiY2xpY2tcIjppZigyPT09Yy5idXR0b24pcmV0dXJuIG51bGw7Y2FzZSBcImF1eGNsaWNrXCI6Y2FzZSBcImRibGNsaWNrXCI6Y2FzZSBcIm1vdXNlZG93blwiOmNhc2UgXCJtb3VzZW1vdmVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJtb3VzZW91dFwiOmNhc2UgXCJtb3VzZW92ZXJcIjpjYXNlIFwiY29udGV4dG1lbnVcIjphPVxuVmU7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1zZjticmVhaztjYXNlIFwidG91Y2hjYW5jZWxcIjpjYXNlIFwidG91Y2hlbmRcIjpjYXNlIFwidG91Y2htb3ZlXCI6Y2FzZSBcInRvdWNoc3RhcnRcIjphPXRmO2JyZWFrO2Nhc2UgWGI6Y2FzZSBZYjpjYXNlIFpiOmE9bGY7YnJlYWs7Y2FzZSAkYjphPXVmO2JyZWFrO2Nhc2UgXCJzY3JvbGxcIjphPU5lO2JyZWFrO2Nhc2UgXCJ3aGVlbFwiOmE9dmY7YnJlYWs7Y2FzZSBcImNvcHlcIjpjYXNlIFwiY3V0XCI6Y2FzZSBcInBhc3RlXCI6YT1tZjticmVhaztjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwibG9zdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcInBvaW50ZXJjYW5jZWxcIjpjYXNlIFwicG9pbnRlcmRvd25cIjpjYXNlIFwicG9pbnRlcm1vdmVcIjpjYXNlIFwicG9pbnRlcm91dFwiOmNhc2UgXCJwb2ludGVyb3ZlclwiOmNhc2UgXCJwb2ludGVydXBcIjphPVxuV2U7YnJlYWs7ZGVmYXVsdDphPUd9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtYZChiKTtyZXR1cm4gYn19O2lmKHBhKXRocm93IEVycm9yKHUoMTAxKSk7cGE9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoXCJSZXNwb25kZXJFdmVudFBsdWdpbiBTaW1wbGVFdmVudFBsdWdpbiBFbnRlckxlYXZlRXZlbnRQbHVnaW4gQ2hhbmdlRXZlbnRQbHVnaW4gU2VsZWN0RXZlbnRQbHVnaW4gQmVmb3JlSW5wdXRFdmVudFBsdWdpblwiLnNwbGl0KFwiIFwiKSk7cmEoKTt2YXIgeGY9TmM7bGE9UWQ7bWE9eGY7bmE9UGQ7eGEoe1NpbXBsZUV2ZW50UGx1Z2luOndmLEVudGVyTGVhdmVFdmVudFBsdWdpbjpZZSxDaGFuZ2VFdmVudFBsdWdpbjpNZSxTZWxlY3RFdmVudFBsdWdpbjprZixCZWZvcmVJbnB1dEV2ZW50UGx1Z2luOnZlfSk7dmFyIHlmPVtdLHpmPS0xO2Z1bmN0aW9uIEgoYSl7MD56Znx8KGEuY3VycmVudD15Zlt6Zl0seWZbemZdPW51bGwsemYtLSl9XG5mdW5jdGlvbiBJKGEsYil7emYrKzt5Zlt6Zl09YS5jdXJyZW50O2EuY3VycmVudD1ifXZhciBBZj17fSxKPXtjdXJyZW50OkFmfSxLPXtjdXJyZW50OiExfSxCZj1BZjtmdW5jdGlvbiBDZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIEFmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEwoYSl7YT1hLmNoaWxkQ29udGV4dFR5cGVzO3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YX1cbmZ1bmN0aW9uIERmKCl7SChLKTtIKEopfWZ1bmN0aW9uIEVmKGEsYixjKXtpZihKLmN1cnJlbnQhPT1BZil0aHJvdyBFcnJvcih1KDE2OCkpO0koSixiKTtJKEssYyl9ZnVuY3Rpb24gRmYoYSxiLGMpe3ZhciBkPWEuc3RhdGVOb2RlO2E9Yi5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGM7ZD1kLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBkKWlmKCEoZSBpbiBhKSl0aHJvdyBFcnJvcih1KDEwOCxwYihiKXx8XCJVbmtub3duXCIsZSkpO3JldHVybiBuKHt9LGMse30sZCl9ZnVuY3Rpb24gR2YoYSl7YT0oYT1hLnN0YXRlTm9kZSkmJmEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fEFmO0JmPUouY3VycmVudDtJKEosYSk7SShLLEsuY3VycmVudCk7cmV0dXJuITB9XG5mdW5jdGlvbiBIZihhLGIsYyl7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoIWQpdGhyb3cgRXJyb3IodSgxNjkpKTtjPyhhPUZmKGEsYixCZiksZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1hLEgoSyksSChKKSxJKEosYSkpOkgoSyk7SShLLGMpfVxudmFyIElmPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LEpmPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxLZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLExmPXIudW5zdGFibGVfcmVxdWVzdFBhaW50LE1mPXIudW5zdGFibGVfbm93LE5mPXIudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWwsT2Y9ci51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSxQZj1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LFFmPXIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksUmY9ci51bnN0YWJsZV9Mb3dQcmlvcml0eSxTZj1yLnVuc3RhYmxlX0lkbGVQcmlvcml0eSxUZj17fSxVZj1yLnVuc3RhYmxlX3Nob3VsZFlpZWxkLFZmPXZvaWQgMCE9PUxmP0xmOmZ1bmN0aW9uKCl7fSxXZj1udWxsLFhmPW51bGwsWWY9ITEsWmY9TWYoKSwkZj0xRTQ+WmY/TWY6ZnVuY3Rpb24oKXtyZXR1cm4gTWYoKS1aZn07XG5mdW5jdGlvbiBhZygpe3N3aXRjaChOZigpKXtjYXNlIE9mOnJldHVybiA5OTtjYXNlIFBmOnJldHVybiA5ODtjYXNlIFFmOnJldHVybiA5NztjYXNlIFJmOnJldHVybiA5NjtjYXNlIFNmOnJldHVybiA5NTtkZWZhdWx0OnRocm93IEVycm9yKHUoMzMyKSk7fX1mdW5jdGlvbiBiZyhhKXtzd2l0Y2goYSl7Y2FzZSA5OTpyZXR1cm4gT2Y7Y2FzZSA5ODpyZXR1cm4gUGY7Y2FzZSA5NzpyZXR1cm4gUWY7Y2FzZSA5NjpyZXR1cm4gUmY7Y2FzZSA5NTpyZXR1cm4gU2Y7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMzMikpO319ZnVuY3Rpb24gY2coYSxiKXthPWJnKGEpO3JldHVybiBJZihhLGIpfWZ1bmN0aW9uIGRnKGEsYixjKXthPWJnKGEpO3JldHVybiBKZihhLGIsYyl9ZnVuY3Rpb24gZWcoYSl7bnVsbD09PVdmPyhXZj1bYV0sWGY9SmYoT2YsZmcpKTpXZi5wdXNoKGEpO3JldHVybiBUZn1mdW5jdGlvbiBnZygpe2lmKG51bGwhPT1YZil7dmFyIGE9WGY7WGY9bnVsbDtLZihhKX1mZygpfVxuZnVuY3Rpb24gZmcoKXtpZighWWYmJm51bGwhPT1XZil7WWY9ITA7dmFyIGE9MDt0cnl7dmFyIGI9V2Y7Y2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO1dmPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PVdmJiYoV2Y9V2Yuc2xpY2UoYSsxKSksSmYoT2YsZ2cpLGM7fWZpbmFsbHl7WWY9ITF9fX1mdW5jdGlvbiBoZyhhLGIsYyl7Yy89MTA7cmV0dXJuIDEwNzM3NDE4MjEtKCgoMTA3Mzc0MTgyMS1hK2IvMTApL2N8MCkrMSkqY31mdW5jdGlvbiBpZyhhLGIpe2lmKGEmJmEuZGVmYXVsdFByb3BzKXtiPW4oe30sYik7YT1hLmRlZmF1bHRQcm9wcztmb3IodmFyIGMgaW4gYSl2b2lkIDA9PT1iW2NdJiYoYltjXT1hW2NdKX1yZXR1cm4gYn12YXIgamc9e2N1cnJlbnQ6bnVsbH0sa2c9bnVsbCxsZz1udWxsLG1nPW51bGw7ZnVuY3Rpb24gbmcoKXttZz1sZz1rZz1udWxsfVxuZnVuY3Rpb24gb2coYSl7dmFyIGI9amcuY3VycmVudDtIKGpnKTthLnR5cGUuX2NvbnRleHQuX2N1cnJlbnRWYWx1ZT1ifWZ1bmN0aW9uIHBnKGEsYil7Zm9yKDtudWxsIT09YTspe3ZhciBjPWEuYWx0ZXJuYXRlO2lmKGEuY2hpbGRFeHBpcmF0aW9uVGltZTxiKWEuY2hpbGRFeHBpcmF0aW9uVGltZT1iLG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtlbHNlIGlmKG51bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiljLmNoaWxkRXhwaXJhdGlvblRpbWU9YjtlbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHFnKGEsYil7a2c9YTttZz1sZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKGEuZXhwaXJhdGlvblRpbWU+PWImJihyZz0hMCksYS5maXJzdENvbnRleHQ9bnVsbCl9XG5mdW5jdGlvbiBzZyhhLGIpe2lmKG1nIT09YSYmITEhPT1iJiYwIT09Yil7aWYoXCJudW1iZXJcIiE9PXR5cGVvZiBifHwxMDczNzQxODIzPT09YiltZz1hLGI9MTA3Mzc0MTgyMztiPXtjb250ZXh0OmEsb2JzZXJ2ZWRCaXRzOmIsbmV4dDpudWxsfTtpZihudWxsPT09bGcpe2lmKG51bGw9PT1rZyl0aHJvdyBFcnJvcih1KDMwOCkpO2xnPWI7a2cuZGVwZW5kZW5jaWVzPXtleHBpcmF0aW9uVGltZTowLGZpcnN0Q29udGV4dDpiLHJlc3BvbmRlcnM6bnVsbH19ZWxzZSBsZz1sZy5uZXh0PWJ9cmV0dXJuIGEuX2N1cnJlbnRWYWx1ZX12YXIgdGc9ITE7ZnVuY3Rpb24gdWcoYSl7YS51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEubWVtb2l6ZWRTdGF0ZSxiYXNlUXVldWU6bnVsbCxzaGFyZWQ6e3BlbmRpbmc6bnVsbH0sZWZmZWN0czpudWxsfX1cbmZ1bmN0aW9uIHZnKGEsYil7YT1hLnVwZGF0ZVF1ZXVlO2IudXBkYXRlUXVldWU9PT1hJiYoYi51cGRhdGVRdWV1ZT17YmFzZVN0YXRlOmEuYmFzZVN0YXRlLGJhc2VRdWV1ZTphLmJhc2VRdWV1ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB3ZyhhLGIpe2E9e2V4cGlyYXRpb25UaW1lOmEsc3VzcGVuc2VDb25maWc6Yix0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGx9O3JldHVybiBhLm5leHQ9YX1mdW5jdGlvbiB4ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIHlnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJnZnKGMsYSk7YT1hLnVwZGF0ZVF1ZXVlO2M9YS5iYXNlUXVldWU7bnVsbD09PWM/KGEuYmFzZVF1ZXVlPWIubmV4dD1iLGIubmV4dD1iKTooYi5uZXh0PWMubmV4dCxjLm5leHQ9Yil9XG5mdW5jdGlvbiB6ZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3RnPSExO3ZhciBmPWUuYmFzZVF1ZXVlLGc9ZS5zaGFyZWQucGVuZGluZztpZihudWxsIT09Zyl7aWYobnVsbCE9PWYpe3ZhciBoPWYubmV4dDtmLm5leHQ9Zy5uZXh0O2cubmV4dD1ofWY9ZztlLnNoYXJlZC5wZW5kaW5nPW51bGw7aD1hLmFsdGVybmF0ZTtudWxsIT09aCYmKGg9aC51cGRhdGVRdWV1ZSxudWxsIT09aCYmKGguYmFzZVF1ZXVlPWcpKX1pZihudWxsIT09Zil7aD1mLm5leHQ7dmFyIGs9ZS5iYXNlU3RhdGUsbD0wLG09bnVsbCxwPW51bGwseD1udWxsO2lmKG51bGwhPT1oKXt2YXIgej1oO2Rve2c9ei5leHBpcmF0aW9uVGltZTtpZihnPGQpe3ZhciBjYT17ZXhwaXJhdGlvblRpbWU6ei5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzp6LnN1c3BlbnNlQ29uZmlnLHRhZzp6LnRhZyxwYXlsb2FkOnoucGF5bG9hZCxjYWxsYmFjazp6LmNhbGxiYWNrLG5leHQ6bnVsbH07bnVsbD09PXg/KHA9eD1cbmNhLG09ayk6eD14Lm5leHQ9Y2E7Zz5sJiYobD1nKX1lbHNle251bGwhPT14JiYoeD14Lm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ei5zdXNwZW5zZUNvbmZpZyx0YWc6ei50YWcscGF5bG9hZDp6LnBheWxvYWQsY2FsbGJhY2s6ei5jYWxsYmFjayxuZXh0Om51bGx9KTtBZyhnLHouc3VzcGVuc2VDb25maWcpO2E6e3ZhciBEPWEsdD16O2c9YjtjYT1jO3N3aXRjaCh0LnRhZyl7Y2FzZSAxOkQ9dC5wYXlsb2FkO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBEKXtrPUQuY2FsbChjYSxrLGcpO2JyZWFrIGF9az1EO2JyZWFrIGE7Y2FzZSAzOkQuZWZmZWN0VGFnPUQuZWZmZWN0VGFnJi00MDk3fDY0O2Nhc2UgMDpEPXQucGF5bG9hZDtnPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBEP0QuY2FsbChjYSxrLGcpOkQ7aWYobnVsbD09PWd8fHZvaWQgMD09PWcpYnJlYWsgYTtrPW4oe30sayxnKTticmVhayBhO2Nhc2UgMjp0Zz0hMH19bnVsbCE9PXouY2FsbGJhY2smJlxuKGEuZWZmZWN0VGFnfD0zMixnPWUuZWZmZWN0cyxudWxsPT09Zz9lLmVmZmVjdHM9W3pdOmcucHVzaCh6KSl9ej16Lm5leHQ7aWYobnVsbD09PXp8fHo9PT1oKWlmKGc9ZS5zaGFyZWQucGVuZGluZyxudWxsPT09ZylicmVhaztlbHNlIHo9Zi5uZXh0PWcubmV4dCxnLm5leHQ9aCxlLmJhc2VRdWV1ZT1mPWcsZS5zaGFyZWQucGVuZGluZz1udWxsfXdoaWxlKDEpfW51bGw9PT14P209azp4Lm5leHQ9cDtlLmJhc2VTdGF0ZT1tO2UuYmFzZVF1ZXVlPXg7QmcobCk7YS5leHBpcmF0aW9uVGltZT1sO2EubWVtb2l6ZWRTdGF0ZT1rfX1cbmZ1bmN0aW9uIENnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9ZTtlPWM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQpdGhyb3cgRXJyb3IodSgxOTEsZCkpO2QuY2FsbChlKX19fXZhciBEZz1XYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyxFZz0obmV3IGFhLkNvbXBvbmVudCkucmVmcztmdW5jdGlvbiBGZyhhLGIsYyxkKXtiPWEubWVtb2l6ZWRTdGF0ZTtjPWMoZCxiKTtjPW51bGw9PT1jfHx2b2lkIDA9PT1jP2I6bih7fSxiLGMpO2EubWVtb2l6ZWRTdGF0ZT1jOzA9PT1hLmV4cGlyYXRpb25UaW1lJiYoYS51cGRhdGVRdWV1ZS5iYXNlU3RhdGU9Yyl9XG52YXIgSmc9e2lzTW91bnRlZDpmdW5jdGlvbihhKXtyZXR1cm4oYT1hLl9yZWFjdEludGVybmFsRmliZXIpP2RjKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1HZygpLGU9RGcuc3VzcGVuc2U7ZD1IZyhkLGEsZSk7ZT13ZyhkLGUpO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTt4ZyhhLGUpO0lnKGEsZCl9LGVucXVldWVSZXBsYWNlU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe2E9YS5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXdnKGQsZSk7ZS50YWc9MTtlLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGUuY2FsbGJhY2s9Yyk7eGcoYSxlKTtJZyhhLGQpfSxlbnF1ZXVlRm9yY2VVcGRhdGU6ZnVuY3Rpb24oYSxiKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgYz1HZygpLGQ9RGcuc3VzcGVuc2U7XG5jPUhnKGMsYSxkKTtkPXdnKGMsZCk7ZC50YWc9Mjt2b2lkIDAhPT1iJiZudWxsIT09YiYmKGQuY2FsbGJhY2s9Yik7eGcoYSxkKTtJZyhhLGMpfX07ZnVuY3Rpb24gS2coYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hYmYoYyxkKXx8IWJmKGUsZik6ITB9XG5mdW5jdGlvbiBMZyhhLGIsYyl7dmFyIGQ9ITEsZT1BZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj1zZyhmKTooZT1MKGIpP0JmOkouY3VycmVudCxkPWIuY29udGV4dFR5cGVzLGY9KGQ9bnVsbCE9PWQmJnZvaWQgMCE9PWQpP0NmKGEsZSk6QWYpO2I9bmV3IGIoYyxmKTthLm1lbW9pemVkU3RhdGU9bnVsbCE9PWIuc3RhdGUmJnZvaWQgMCE9PWIuc3RhdGU/Yi5zdGF0ZTpudWxsO2IudXBkYXRlcj1KZzthLnN0YXRlTm9kZT1iO2IuX3JlYWN0SW50ZXJuYWxGaWJlcj1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBNZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmSmcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUVnO3VnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9c2coZik6KGY9TChiKT9CZjpKLmN1cnJlbnQsZS5jb250ZXh0PUNmKGEsZikpO3pnKGEsYyxlLGQpO2Uuc3RhdGU9YS5tZW1vaXplZFN0YXRlO2Y9Yi5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGYmJihGZyhhLGIsZixjKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50fHxcbihiPWUuc3RhdGUsXCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50V2lsbE1vdW50JiZlLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmUuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGIhPT1lLnN0YXRlJiZKZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGUsZS5zdGF0ZSxudWxsKSx6ZyhhLGMsZSxkKSxlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIE9nPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBQZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHUoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IodSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RWcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IodSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IodSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFFnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHUoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiLFwiXCIpKTt9XG5mdW5jdGlvbiBSZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1TZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5lZmZlY3RUYWc9XG4yLGMpOmQ7Yi5lZmZlY3RUYWc9MjtyZXR1cm4gY31mdW5jdGlvbiBnKGIpe2EmJm51bGw9PT1iLmFsdGVybmF0ZSYmKGIuZWZmZWN0VGFnPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1UZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1QZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VWcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UGcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PVxuYy5pbXBsZW1lbnRhdGlvbilyZXR1cm4gYj1WZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbShhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9V2coYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBwKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1UZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYz1VZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1QZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgJGE6cmV0dXJuIGI9VmcoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKE9nKGIpfHxcbm5iKGIpKXJldHVybiBiPVdnKGIsYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1FnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBaYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWFiP20oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSAkYTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihPZyhjKXx8bmIoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bShhLGIsYyxkLG51bGwpO1FnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geihhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPVxuYS5nZXQoYyl8fG51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIFphOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT1hYj9tKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSAkYTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihPZyhkKXx8bmIoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbShiLGEsZCxlLG51bGwpO1FnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gY2EoZSxnLGgsayl7Zm9yKHZhciBsPW51bGwsdD1udWxsLG09Zyx5PWc9MCxBPW51bGw7bnVsbCE9PW0mJnk8aC5sZW5ndGg7eSsrKXttLmluZGV4Pnk/KEE9bSxtPW51bGwpOkE9bS5zaWJsaW5nO3ZhciBxPXgoZSxtLGhbeV0sayk7aWYobnVsbD09PXEpe251bGw9PT1tJiYobT1BKTticmVha31hJiZcbm0mJm51bGw9PT1xLmFsdGVybmF0ZSYmYihlLG0pO2c9ZihxLGcseSk7bnVsbD09PXQ/bD1xOnQuc2libGluZz1xO3Q9cTttPUF9aWYoeT09PWgubGVuZ3RoKXJldHVybiBjKGUsbSksbDtpZihudWxsPT09bSl7Zm9yKDt5PGgubGVuZ3RoO3krKyltPXAoZSxoW3ldLGspLG51bGwhPT1tJiYoZz1mKG0sZyx5KSxudWxsPT09dD9sPW06dC5zaWJsaW5nPW0sdD1tKTtyZXR1cm4gbH1mb3IobT1kKGUsbSk7eTxoLmxlbmd0aDt5KyspQT16KG0sZSx5LGhbeV0sayksbnVsbCE9PUEmJihhJiZudWxsIT09QS5hbHRlcm5hdGUmJm0uZGVsZXRlKG51bGw9PT1BLmtleT95OkEua2V5KSxnPWYoQSxnLHkpLG51bGw9PT10P2w9QTp0LnNpYmxpbmc9QSx0PUEpO2EmJm0uZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9ZnVuY3Rpb24gRChlLGcsaCxsKXt2YXIgaz1uYihoKTtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2Ygayl0aHJvdyBFcnJvcih1KDE1MCkpO2g9ay5jYWxsKGgpO1xuaWYobnVsbD09aCl0aHJvdyBFcnJvcih1KDE1MSkpO2Zvcih2YXIgbT1rPW51bGwsdD1nLHk9Zz0wLEE9bnVsbCxxPWgubmV4dCgpO251bGwhPT10JiYhcS5kb25lO3krKyxxPWgubmV4dCgpKXt0LmluZGV4Pnk/KEE9dCx0PW51bGwpOkE9dC5zaWJsaW5nO3ZhciBEPXgoZSx0LHEudmFsdWUsbCk7aWYobnVsbD09PUQpe251bGw9PT10JiYodD1BKTticmVha31hJiZ0JiZudWxsPT09RC5hbHRlcm5hdGUmJmIoZSx0KTtnPWYoRCxnLHkpO251bGw9PT1tP2s9RDptLnNpYmxpbmc9RDttPUQ7dD1BfWlmKHEuZG9uZSlyZXR1cm4gYyhlLHQpLGs7aWYobnVsbD09PXQpe2Zvcig7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXAoZSxxLnZhbHVlLGwpLG51bGwhPT1xJiYoZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTtyZXR1cm4ga31mb3IodD1kKGUsdCk7IXEuZG9uZTt5KysscT1oLm5leHQoKSlxPXoodCxlLHkscS52YWx1ZSxsKSxudWxsIT09cSYmKGEmJm51bGwhPT1cbnEuYWx0ZXJuYXRlJiZ0LmRlbGV0ZShudWxsPT09cS5rZXk/eTpxLmtleSksZz1mKHEsZyx5KSxudWxsPT09bT9rPXE6bS5zaWJsaW5nPXEsbT1xKTthJiZ0LmZvckVhY2goZnVuY3Rpb24oYSl7cmV0dXJuIGIoZSxhKX0pO3JldHVybiBrfXJldHVybiBmdW5jdGlvbihhLGQsZixoKXt2YXIgaz1cIm9iamVjdFwiPT09dHlwZW9mIGYmJm51bGwhPT1mJiZmLnR5cGU9PT1hYiYmbnVsbD09PWYua2V5O2smJihmPWYucHJvcHMuY2hpbGRyZW4pO3ZhciBsPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY7aWYobClzd2l0Y2goZi4kJHR5cGVvZil7Y2FzZSBaYTphOntsPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PWwpe3N3aXRjaChrLnRhZyl7Y2FzZSA3OmlmKGYudHlwZT09PWFiKXtjKGEsay5zaWJsaW5nKTtkPWUoayxmLnByb3BzLmNoaWxkcmVuKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWJyZWFrO2RlZmF1bHQ6aWYoay5lbGVtZW50VHlwZT09PWYudHlwZSl7YyhhLFxuay5zaWJsaW5nKTtkPWUoayxmLnByb3BzKTtkLnJlZj1QZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX19YyhhLGspO2JyZWFrfWVsc2UgYihhLGspO2s9ay5zaWJsaW5nfWYudHlwZT09PWFiPyhkPVdnKGYucHJvcHMuY2hpbGRyZW4sYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD1VZyhmLnR5cGUsZi5rZXksZi5wcm9wcyxudWxsLGEubW9kZSxoKSxoLnJlZj1QZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgJGE6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdKTtkLnJldHVybj1hO2E9ZDticmVhayBhfWVsc2V7YyhhLGQpO2JyZWFrfWVsc2UgYihhLGQpO2Q9XG5kLnNpYmxpbmd9ZD1WZyhmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZiksZC5yZXR1cm49YSxhPWQpOihjKGEsZCksZD1UZyhmLGEubW9kZSxoKSxkLnJldHVybj1hLGE9ZCksZyhhKTtpZihPZyhmKSlyZXR1cm4gY2EoYSxkLGYsaCk7aWYobmIoZikpcmV0dXJuIEQoYSxkLGYsaCk7bCYmUWcoYSxmKTtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIGYmJiFrKXN3aXRjaChhLnRhZyl7Y2FzZSAxOmNhc2UgMDp0aHJvdyBhPWEudHlwZSxFcnJvcih1KDE1MixhLmRpc3BsYXlOYW1lfHxhLm5hbWV8fFwiQ29tcG9uZW50XCIpKTt9cmV0dXJuIGMoYSxkKX19dmFyIFhnPVJnKCEwKSxZZz1SZyghMSksWmc9e30sJGc9e2N1cnJlbnQ6Wmd9LGFoPXtjdXJyZW50OlpnfSxiaD17Y3VycmVudDpaZ307XG5mdW5jdGlvbiBjaChhKXtpZihhPT09WmcpdGhyb3cgRXJyb3IodSgxNzQpKTtyZXR1cm4gYX1mdW5jdGlvbiBkaChhLGIpe0koYmgsYik7SShhaCxhKTtJKCRnLFpnKTthPWIubm9kZVR5cGU7c3dpdGNoKGEpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOk9iKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDphPTg9PT1hP2IucGFyZW50Tm9kZTpiLGI9YS5uYW1lc3BhY2VVUkl8fG51bGwsYT1hLnRhZ05hbWUsYj1PYihiLGEpfUgoJGcpO0koJGcsYil9ZnVuY3Rpb24gZWgoKXtIKCRnKTtIKGFoKTtIKGJoKX1mdW5jdGlvbiBmaChhKXtjaChiaC5jdXJyZW50KTt2YXIgYj1jaCgkZy5jdXJyZW50KTt2YXIgYz1PYihiLGEudHlwZSk7YiE9PWMmJihJKGFoLGEpLEkoJGcsYykpfWZ1bmN0aW9uIGdoKGEpe2FoLmN1cnJlbnQ9PT1hJiYoSCgkZyksSChhaCkpfXZhciBNPXtjdXJyZW50OjB9O1xuZnVuY3Rpb24gaGgoYSl7Zm9yKHZhciBiPWE7bnVsbCE9PWI7KXtpZigxMz09PWIudGFnKXt2YXIgYz1iLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsPT09Y3x8Yy5kYXRhPT09QmR8fGMuZGF0YT09PUNkKSlyZXR1cm4gYn1lbHNlIGlmKDE5PT09Yi50YWcmJnZvaWQgMCE9PWIubWVtb2l6ZWRQcm9wcy5yZXZlYWxPcmRlcil7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfWZ1bmN0aW9uIGloKGEsYil7cmV0dXJue3Jlc3BvbmRlcjphLHByb3BzOmJ9fVxudmFyIGpoPVdhLlJlYWN0Q3VycmVudERpc3BhdGNoZXIsa2g9V2EuUmVhY3RDdXJyZW50QmF0Y2hDb25maWcsbGg9MCxOPW51bGwsTz1udWxsLFA9bnVsbCxtaD0hMTtmdW5jdGlvbiBRKCl7dGhyb3cgRXJyb3IodSgzMjEpKTt9ZnVuY3Rpb24gbmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighJGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIG9oKGEsYixjLGQsZSxmKXtsaD1mO049YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5leHBpcmF0aW9uVGltZT0wO2poLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/cGg6cWg7YT1jKGQsZSk7aWYoYi5leHBpcmF0aW9uVGltZT09PWxoKXtmPTA7ZG97Yi5leHBpcmF0aW9uVGltZT0wO2lmKCEoMjU+ZikpdGhyb3cgRXJyb3IodSgzMDEpKTtmKz0xO1A9Tz1udWxsO2IudXBkYXRlUXVldWU9bnVsbDtqaC5jdXJyZW50PXJoO2E9YyhkLGUpfXdoaWxlKGIuZXhwaXJhdGlvblRpbWU9PT1saCl9amguY3VycmVudD1zaDtiPW51bGwhPT1PJiZudWxsIT09Ty5uZXh0O2xoPTA7UD1PPU49bnVsbDttaD0hMTtpZihiKXRocm93IEVycm9yKHUoMzAwKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiB0aCgpe3ZhciBhPXttZW1vaXplZFN0YXRlOm51bGwsYmFzZVN0YXRlOm51bGwsYmFzZVF1ZXVlOm51bGwscXVldWU6bnVsbCxuZXh0Om51bGx9O251bGw9PT1QP04ubWVtb2l6ZWRTdGF0ZT1QPWE6UD1QLm5leHQ9YTtyZXR1cm4gUH1mdW5jdGlvbiB1aCgpe2lmKG51bGw9PT1PKXt2YXIgYT1OLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1PLm5leHQ7dmFyIGI9bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlOlAubmV4dDtpZihudWxsIT09YilQPWIsTz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMTApKTtPPWE7YT17bWVtb2l6ZWRTdGF0ZTpPLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOk8uYmFzZVN0YXRlLGJhc2VRdWV1ZTpPLmJhc2VRdWV1ZSxxdWV1ZTpPLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVA/Ti5tZW1vaXplZFN0YXRlPVA9YTpQPVAubmV4dD1hfXJldHVybiBQfVxuZnVuY3Rpb24gdmgoYSxiKXtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYj9iKGEpOmJ9XG5mdW5jdGlvbiB3aChhKXt2YXIgYj11aCgpLGM9Yi5xdWV1ZTtpZihudWxsPT09Yyl0aHJvdyBFcnJvcih1KDMxMSkpO2MubGFzdFJlbmRlcmVkUmVkdWNlcj1hO3ZhciBkPU8sZT1kLmJhc2VRdWV1ZSxmPWMucGVuZGluZztpZihudWxsIT09Zil7aWYobnVsbCE9PWUpe3ZhciBnPWUubmV4dDtlLm5leHQ9Zi5uZXh0O2YubmV4dD1nfWQuYmFzZVF1ZXVlPWU9ZjtjLnBlbmRpbmc9bnVsbH1pZihudWxsIT09ZSl7ZT1lLm5leHQ7ZD1kLmJhc2VTdGF0ZTt2YXIgaD1nPWY9bnVsbCxrPWU7ZG97dmFyIGw9ay5leHBpcmF0aW9uVGltZTtpZihsPGxoKXt2YXIgbT17ZXhwaXJhdGlvblRpbWU6ay5leHBpcmF0aW9uVGltZSxzdXNwZW5zZUNvbmZpZzprLnN1c3BlbnNlQ29uZmlnLGFjdGlvbjprLmFjdGlvbixlYWdlclJlZHVjZXI6ay5lYWdlclJlZHVjZXIsZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW0sZj1kKTpoPWgubmV4dD1tO2w+Ti5leHBpcmF0aW9uVGltZSYmXG4oTi5leHBpcmF0aW9uVGltZT1sLEJnKGwpKX1lbHNlIG51bGwhPT1oJiYoaD1oLm5leHQ9e2V4cGlyYXRpb25UaW1lOjEwNzM3NDE4MjMsc3VzcGVuc2VDb25maWc6ay5zdXNwZW5zZUNvbmZpZyxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLEFnKGwsay5zdXNwZW5zZUNvbmZpZyksZD1rLmVhZ2VyUmVkdWNlcj09PWE/ay5lYWdlclN0YXRlOmEoZCxrLmFjdGlvbik7az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7JGUoZCxiLm1lbW9pemVkU3RhdGUpfHwocmc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIHhoKGEpe3ZhciBiPXVoKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHUoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTskZShmLGIubWVtb2l6ZWRTdGF0ZSl8fChyZz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24geWgoYSl7dmFyIGI9dGgoKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSYmKGE9YSgpKTtiLm1lbW9pemVkU3RhdGU9Yi5iYXNlU3RhdGU9YTthPWIucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6dmgsbGFzdFJlbmRlcmVkU3RhdGU6YX07YT1hLmRpc3BhdGNoPXpoLmJpbmQobnVsbCxOLGEpO3JldHVybltiLm1lbW9pemVkU3RhdGUsYV19ZnVuY3Rpb24gQWgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ti51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxOLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfVxuZnVuY3Rpb24gQmgoKXtyZXR1cm4gdWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIENoKGEsYixjLGQpe3ZhciBlPXRoKCk7Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLHZvaWQgMCx2b2lkIDA9PT1kP251bGw6ZCl9ZnVuY3Rpb24gRGgoYSxiLGMsZCl7dmFyIGU9dWgoKTtkPXZvaWQgMD09PWQ/bnVsbDpkO3ZhciBmPXZvaWQgMDtpZihudWxsIT09Tyl7dmFyIGc9Ty5tZW1vaXplZFN0YXRlO2Y9Zy5kZXN0cm95O2lmKG51bGwhPT1kJiZuaChkLGcuZGVwcykpe0FoKGIsYyxmLGQpO3JldHVybn19Ti5lZmZlY3RUYWd8PWE7ZS5tZW1vaXplZFN0YXRlPUFoKDF8YixjLGYsZCl9ZnVuY3Rpb24gRWgoYSxiKXtyZXR1cm4gQ2goNTE2LDQsYSxiKX1mdW5jdGlvbiBGaChhLGIpe3JldHVybiBEaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIEdoKGEsYil7cmV0dXJuIERoKDQsMixhLGIpfVxuZnVuY3Rpb24gSGgoYSxiKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYilyZXR1cm4gYT1hKCksYihhKSxmdW5jdGlvbigpe2IobnVsbCl9O2lmKG51bGwhPT1iJiZ2b2lkIDAhPT1iKXJldHVybiBhPWEoKSxiLmN1cnJlbnQ9YSxmdW5jdGlvbigpe2IuY3VycmVudD1udWxsfX1mdW5jdGlvbiBJaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIERoKDQsMixIaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBKaCgpe31mdW5jdGlvbiBLaChhLGIpe3RoKCkubWVtb2l6ZWRTdGF0ZT1bYSx2b2lkIDA9PT1iP251bGw6Yl07cmV0dXJuIGF9ZnVuY3Rpb24gTGgoYSxiKXt2YXIgYz11aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7dmFyIGQ9Yy5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1kJiZudWxsIT09YiYmbmgoYixkWzFdKSlyZXR1cm4gZFswXTtjLm1lbW9pemVkU3RhdGU9W2EsYl07cmV0dXJuIGF9XG5mdW5jdGlvbiBNaChhLGIpe3ZhciBjPXVoKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZuaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBOaChhLGIsYyl7dmFyIGQ9YWcoKTtjZyg5OD5kPzk4OmQsZnVuY3Rpb24oKXthKCEwKX0pO2NnKDk3PGQ/OTc6ZCxmdW5jdGlvbigpe3ZhciBkPWtoLnN1c3BlbnNlO2toLnN1c3BlbnNlPXZvaWQgMD09PWI/bnVsbDpiO3RyeXthKCExKSxjKCl9ZmluYWxseXtraC5zdXNwZW5zZT1kfX0pfVxuZnVuY3Rpb24gemgoYSxiLGMpe3ZhciBkPUdnKCksZT1EZy5zdXNwZW5zZTtkPUhnKGQsYSxlKTtlPXtleHBpcmF0aW9uVGltZTpkLHN1c3BlbnNlQ29uZmlnOmUsYWN0aW9uOmMsZWFnZXJSZWR1Y2VyOm51bGwsZWFnZXJTdGF0ZTpudWxsLG5leHQ6bnVsbH07dmFyIGY9Yi5wZW5kaW5nO251bGw9PT1mP2UubmV4dD1lOihlLm5leHQ9Zi5uZXh0LGYubmV4dD1lKTtiLnBlbmRpbmc9ZTtmPWEuYWx0ZXJuYXRlO2lmKGE9PT1OfHxudWxsIT09ZiYmZj09PU4pbWg9ITAsZS5leHBpcmF0aW9uVGltZT1saCxOLmV4cGlyYXRpb25UaW1lPWxoO2Vsc2V7aWYoMD09PWEuZXhwaXJhdGlvblRpbWUmJihudWxsPT09Znx8MD09PWYuZXhwaXJhdGlvblRpbWUpJiYoZj1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWYpKXRyeXt2YXIgZz1iLmxhc3RSZW5kZXJlZFN0YXRlLGg9ZihnLGMpO2UuZWFnZXJSZWR1Y2VyPWY7ZS5lYWdlclN0YXRlPWg7aWYoJGUoaCxnKSlyZXR1cm59Y2F0Y2goayl7fWZpbmFsbHl7fUlnKGEsXG5kKX19XG52YXIgc2g9e3JlYWRDb250ZXh0OnNnLHVzZUNhbGxiYWNrOlEsdXNlQ29udGV4dDpRLHVzZUVmZmVjdDpRLHVzZUltcGVyYXRpdmVIYW5kbGU6USx1c2VMYXlvdXRFZmZlY3Q6USx1c2VNZW1vOlEsdXNlUmVkdWNlcjpRLHVzZVJlZjpRLHVzZVN0YXRlOlEsdXNlRGVidWdWYWx1ZTpRLHVzZVJlc3BvbmRlcjpRLHVzZURlZmVycmVkVmFsdWU6USx1c2VUcmFuc2l0aW9uOlF9LHBoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpLaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpFaCx1c2VJbXBlcmF0aXZlSGFuZGxlOmZ1bmN0aW9uKGEsYixjKXtjPW51bGwhPT1jJiZ2b2lkIDAhPT1jP2MuY29uY2F0KFthXSk6bnVsbDtyZXR1cm4gQ2goNCwyLEhoLmJpbmQobnVsbCxiLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gQ2goNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz10aCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLFxuYl07cmV0dXJuIGF9LHVzZVJlZHVjZXI6ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPXRoKCk7Yj12b2lkIDAhPT1jP2MoYik6YjtkLm1lbW9pemVkU3RhdGU9ZC5iYXNlU3RhdGU9YjthPWQucXVldWU9e3BlbmRpbmc6bnVsbCxkaXNwYXRjaDpudWxsLGxhc3RSZW5kZXJlZFJlZHVjZXI6YSxsYXN0UmVuZGVyZWRTdGF0ZTpifTthPWEuZGlzcGF0Y2g9emguYmluZChudWxsLE4sYSk7cmV0dXJuW2QubWVtb2l6ZWRTdGF0ZSxhXX0sdXNlUmVmOmZ1bmN0aW9uKGEpe3ZhciBiPXRoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9LHVzZVN0YXRlOnloLHVzZURlYnVnVmFsdWU6SmgsdXNlUmVzcG9uZGVyOmloLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSxiKXt2YXIgYz15aChhKSxkPWNbMF0sZT1jWzFdO0VoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1cbmN9fSxbYSxiXSk7cmV0dXJuIGR9LHVzZVRyYW5zaXRpb246ZnVuY3Rpb24oYSl7dmFyIGI9eWgoITEpLGM9YlswXTtiPWJbMV07cmV0dXJuW0toKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHFoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6d2gsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHdoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXdoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPVxud2godmgpLGM9YlswXTtiPWJbMV07cmV0dXJuW0xoKE5oLmJpbmQobnVsbCxiLGEpLFtiLGFdKSxjXX19LHJoPXtyZWFkQ29udGV4dDpzZyx1c2VDYWxsYmFjazpMaCx1c2VDb250ZXh0OnNnLHVzZUVmZmVjdDpGaCx1c2VJbXBlcmF0aXZlSGFuZGxlOkloLHVzZUxheW91dEVmZmVjdDpHaCx1c2VNZW1vOk1oLHVzZVJlZHVjZXI6eGgsdXNlUmVmOkJoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIHhoKHZoKX0sdXNlRGVidWdWYWx1ZTpKaCx1c2VSZXNwb25kZXI6aWgsdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhLGIpe3ZhciBjPXhoKHZoKSxkPWNbMF0sZT1jWzFdO0ZoKGZ1bmN0aW9uKCl7dmFyIGM9a2guc3VzcGVuc2U7a2guc3VzcGVuc2U9dm9pZCAwPT09Yj9udWxsOmI7dHJ5e2UoYSl9ZmluYWxseXtraC5zdXNwZW5zZT1jfX0sW2EsYl0pO3JldHVybiBkfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKGEpe3ZhciBiPXhoKHZoKSxjPWJbMF07Yj1iWzFdO3JldHVybltMaChOaC5iaW5kKG51bGwsXG5iLGEpLFtiLGFdKSxjXX19LE9oPW51bGwsUGg9bnVsbCxRaD0hMTtmdW5jdGlvbiBSaChhLGIpe3ZhciBjPVNoKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiBUaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gVWgoYSl7aWYoUWgpe3ZhciBiPVBoO2lmKGIpe3ZhciBjPWI7aWYoIVRoKGEsYikpe2I9SmQoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFUaChhLGIpKXthLmVmZmVjdFRhZz1hLmVmZmVjdFRhZyYtMTAyNXwyO1FoPSExO09oPWE7cmV0dXJufVJoKE9oLGMpfU9oPWE7UGg9SmQoYi5maXJzdENoaWxkKX1lbHNlIGEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDIsUWg9ITEsT2g9YX19ZnVuY3Rpb24gVmgoYSl7Zm9yKGE9YS5yZXR1cm47bnVsbCE9PWEmJjUhPT1hLnRhZyYmMyE9PWEudGFnJiYxMyE9PWEudGFnOylhPWEucmV0dXJuO09oPWF9XG5mdW5jdGlvbiBXaChhKXtpZihhIT09T2gpcmV0dXJuITE7aWYoIVFoKXJldHVybiBWaChhKSxRaD0hMCwhMTt2YXIgYj1hLnR5cGU7aWYoNSE9PWEudGFnfHxcImhlYWRcIiE9PWImJlwiYm9keVwiIT09YiYmIUdkKGIsYS5tZW1vaXplZFByb3BzKSlmb3IoYj1QaDtiOylSaChhLGIpLGI9SmQoYi5uZXh0U2libGluZyk7VmgoYSk7aWYoMTM9PT1hLnRhZyl7YT1hLm1lbW9pemVkU3RhdGU7YT1udWxsIT09YT9hLmRlaHlkcmF0ZWQ6bnVsbDtpZighYSl0aHJvdyBFcnJvcih1KDMxNykpO2E6e2E9YS5uZXh0U2libGluZztmb3IoYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKGM9PT1BZCl7aWYoMD09PWIpe1BoPUpkKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2UgYyE9PXpkJiZjIT09Q2QmJmMhPT1CZHx8YisrfWE9YS5uZXh0U2libGluZ31QaD1udWxsfX1lbHNlIFBoPU9oP0pkKGEuc3RhdGVOb2RlLm5leHRTaWJsaW5nKTpudWxsO3JldHVybiEwfVxuZnVuY3Rpb24gWGgoKXtQaD1PaD1udWxsO1FoPSExfXZhciBZaD1XYS5SZWFjdEN1cnJlbnRPd25lcixyZz0hMTtmdW5jdGlvbiBSKGEsYixjLGQpe2IuY2hpbGQ9bnVsbD09PWE/WWcoYixudWxsLGMsZCk6WGcoYixhLmNoaWxkLGMsZCl9ZnVuY3Rpb24gWmgoYSxiLGMsZCxlKXtjPWMucmVuZGVyO3ZhciBmPWIucmVmO3FnKGIsZSk7ZD1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixkLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gYWkoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hKXt2YXIgZz1jLnR5cGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJiFiaShnKSYmdm9pZCAwPT09Zy5kZWZhdWx0UHJvcHMmJm51bGw9PT1jLmNvbXBhcmUmJnZvaWQgMD09PWMuZGVmYXVsdFByb3BzKXJldHVybiBiLnRhZz0xNSxiLnR5cGU9ZyxjaShhLGIsZyxkLGUsZik7YT1VZyhjLnR5cGUsbnVsbCxkLG51bGwsYi5tb2RlLGYpO2EucmVmPWIucmVmO2EucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9YX1nPWEuY2hpbGQ7aWYoZTxmJiYoZT1nLm1lbW9pemVkUHJvcHMsYz1jLmNvbXBhcmUsYz1udWxsIT09Yz9jOmJmLGMoZSxkKSYmYS5yZWY9PT1iLnJlZikpcmV0dXJuICRoKGEsYixmKTtiLmVmZmVjdFRhZ3w9MTthPVNnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24gY2koYSxiLGMsZCxlLGYpe3JldHVybiBudWxsIT09YSYmYmYoYS5tZW1vaXplZFByb3BzLGQpJiZhLnJlZj09PWIucmVmJiYocmc9ITEsZTxmKT8oYi5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLCRoKGEsYixmKSk6ZGkoYSxiLGMsZCxmKX1mdW5jdGlvbiBlaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmVmZmVjdFRhZ3w9MTI4fWZ1bmN0aW9uIGRpKGEsYixjLGQsZSl7dmFyIGY9TChjKT9CZjpKLmN1cnJlbnQ7Zj1DZihiLGYpO3FnKGIsZSk7Yz1vaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiFyZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZWZmZWN0VGFnJj0tNTE3LGEuZXhwaXJhdGlvblRpbWU8PWUmJihhLmV4cGlyYXRpb25UaW1lPTApLCRoKGEsYixlKTtiLmVmZmVjdFRhZ3w9MTtSKGEsYixjLGUpO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gZmkoYSxiLGMsZCxlKXtpZihMKGMpKXt2YXIgZj0hMDtHZihiKX1lbHNlIGY9ITE7cWcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLExnKGIsYyxkKSxOZyhiLGMsZCxlKSxkPSEwO2Vsc2UgaWYobnVsbD09PWEpe3ZhciBnPWIuc3RhdGVOb2RlLGg9Yi5tZW1vaXplZFByb3BzO2cucHJvcHM9aDt2YXIgaz1nLmNvbnRleHQsbD1jLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgbCYmbnVsbCE9PWw/bD1zZyhsKToobD1MKGMpP0JmOkouY3VycmVudCxsPUNmKGIsbCkpO3ZhciBtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLHA9XCJmdW5jdGlvblwiPT09dHlwZW9mIG18fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO3B8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKTt0Zz0hMTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT14O3pnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHx4IT09a3x8Sy5jdXJyZW50fHx0Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG0mJihGZyhiLGMsbSxkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9dGd8fEtnKGIsYyxoLGQseCxrLGwpKT8ocHx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5lZmZlY3RUYWd8PTQpKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPWspLGcucHJvcHM9ZCxnLnN0YXRlPWssZy5jb250ZXh0PWwsZD1oKTooXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50RGlkTW91bnQmJihiLmVmZmVjdFRhZ3w9NCksZD0hMSl9ZWxzZSBnPWIuc3RhdGVOb2RlLHZnKGEsYiksaD1iLm1lbW9pemVkUHJvcHMsZy5wcm9wcz1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6aWcoYi50eXBlLGgpLGs9Zy5jb250ZXh0LGw9Yy5jb250ZXh0VHlwZSxcIm9iamVjdFwiPT09dHlwZW9mIGwmJm51bGwhPT1sP2w9c2cobCk6KGw9TChjKT9CZjpKLmN1cnJlbnQsbD1DZihiLGwpKSxtPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLChwPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBtfHxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZNZyhiLGcsZCxsKSx0Zz0hMSxrPWIubWVtb2l6ZWRTdGF0ZSxnLnN0YXRlPWssemcoYixkLGcsZSkseD1iLm1lbW9pemVkU3RhdGUsaCE9PWR8fGshPT14fHxLLmN1cnJlbnR8fHRnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgbSYmKEZnKGIsYyxtLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobT10Z3x8S2coYixjLGgsZCxrLHgsbCkpPyhwfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxsKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsbCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZWZmZWN0VGFnfD00KSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSYmKGIuZWZmZWN0VGFnfD0yNTYpKTooXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50RGlkVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZrPT09YS5tZW1vaXplZFN0YXRlfHwoYi5lZmZlY3RUYWd8PTI1NiksYi5tZW1vaXplZFByb3BzPWQsYi5tZW1vaXplZFN0YXRlPXgpLGcucHJvcHM9ZCxnLnN0YXRlPXgsZy5jb250ZXh0PWwsZD1tKTpcbihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGg9PT1hLm1lbW9pemVkUHJvcHMmJms9PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxkPSExKTtyZXR1cm4gZ2koYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gZ2koYSxiLGMsZCxlLGYpe2VpKGEsYik7dmFyIGc9MCE9PShiLmVmZmVjdFRhZyY2NCk7aWYoIWQmJiFnKXJldHVybiBlJiZIZihiLGMsITEpLCRoKGEsYixmKTtkPWIuc3RhdGVOb2RlO1loLmN1cnJlbnQ9Yjt2YXIgaD1nJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I/bnVsbDpkLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO251bGwhPT1hJiZnPyhiLmNoaWxkPVhnKGIsYS5jaGlsZCxudWxsLGYpLGIuY2hpbGQ9WGcoYixudWxsLGgsZikpOlIoYSxiLGgsZik7Yi5tZW1vaXplZFN0YXRlPWQuc3RhdGU7ZSYmSGYoYixjLCEwKTtyZXR1cm4gYi5jaGlsZH1mdW5jdGlvbiBoaShhKXt2YXIgYj1hLnN0YXRlTm9kZTtiLnBlbmRpbmdDb250ZXh0P0VmKGEsYi5wZW5kaW5nQ29udGV4dCxiLnBlbmRpbmdDb250ZXh0IT09Yi5jb250ZXh0KTpiLmNvbnRleHQmJkVmKGEsYi5jb250ZXh0LCExKTtkaChhLGIuY29udGFpbmVySW5mbyl9XG52YXIgaWk9e2RlaHlkcmF0ZWQ6bnVsbCxyZXRyeVRpbWU6MH07XG5mdW5jdGlvbiBqaShhLGIsYyl7dmFyIGQ9Yi5tb2RlLGU9Yi5wZW5kaW5nUHJvcHMsZj1NLmN1cnJlbnQsZz0hMSxoOyhoPTAhPT0oYi5lZmZlY3RUYWcmNjQpKXx8KGg9MCE9PShmJjIpJiYobnVsbD09PWF8fG51bGwhPT1hLm1lbW9pemVkU3RhdGUpKTtoPyhnPSEwLGIuZWZmZWN0VGFnJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1lLmZhbGxiYWNrfHwhMD09PWUudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChmfD0xKTtJKE0sZiYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZS5mYWxsYmFjayYmVWgoYik7aWYoZyl7Zz1lLmZhbGxiYWNrO2U9V2cobnVsbCxkLDAsbnVsbCk7ZS5yZXR1cm49YjtpZigwPT09KGIubW9kZSYyKSlmb3IoYT1udWxsIT09Yi5tZW1vaXplZFN0YXRlP2IuY2hpbGQuY2hpbGQ6Yi5jaGlsZCxlLmNoaWxkPWE7bnVsbCE9PWE7KWEucmV0dXJuPWUsYT1hLnNpYmxpbmc7Yz1XZyhnLGQsYyxudWxsKTtjLnJldHVybj1cbmI7ZS5zaWJsaW5nPWM7Yi5tZW1vaXplZFN0YXRlPWlpO2IuY2hpbGQ9ZTtyZXR1cm4gY31kPWUuY2hpbGRyZW47Yi5tZW1vaXplZFN0YXRlPW51bGw7cmV0dXJuIGIuY2hpbGQ9WWcoYixudWxsLGQsYyl9aWYobnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSl7YT1hLmNoaWxkO2Q9YS5zaWJsaW5nO2lmKGcpe2U9ZS5mYWxsYmFjaztjPVNnKGEsYS5wZW5kaW5nUHJvcHMpO2MucmV0dXJuPWI7aWYoMD09PShiLm1vZGUmMikmJihnPW51bGwhPT1iLm1lbW9pemVkU3RhdGU/Yi5jaGlsZC5jaGlsZDpiLmNoaWxkLGchPT1hLmNoaWxkKSlmb3IoYy5jaGlsZD1nO251bGwhPT1nOylnLnJldHVybj1jLGc9Zy5zaWJsaW5nO2Q9U2coZCxlKTtkLnJldHVybj1iO2Muc2libGluZz1kO2MuY2hpbGRFeHBpcmF0aW9uVGltZT0wO2IubWVtb2l6ZWRTdGF0ZT1paTtiLmNoaWxkPWM7cmV0dXJuIGR9Yz1YZyhiLGEuY2hpbGQsZS5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gYi5jaGlsZD1cbmN9YT1hLmNoaWxkO2lmKGcpe2c9ZS5mYWxsYmFjaztlPVdnKG51bGwsZCwwLG51bGwpO2UucmV0dXJuPWI7ZS5jaGlsZD1hO251bGwhPT1hJiYoYS5yZXR1cm49ZSk7aWYoMD09PShiLm1vZGUmMikpZm9yKGE9bnVsbCE9PWIubWVtb2l6ZWRTdGF0ZT9iLmNoaWxkLmNoaWxkOmIuY2hpbGQsZS5jaGlsZD1hO251bGwhPT1hOylhLnJldHVybj1lLGE9YS5zaWJsaW5nO2M9V2coZyxkLGMsbnVsbCk7Yy5yZXR1cm49YjtlLnNpYmxpbmc9YztjLmVmZmVjdFRhZ3w9MjtlLmNoaWxkRXhwaXJhdGlvblRpbWU9MDtiLm1lbW9pemVkU3RhdGU9aWk7Yi5jaGlsZD1lO3JldHVybiBjfWIubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBiLmNoaWxkPVhnKGIsYSxlLmNoaWxkcmVuLGMpfVxuZnVuY3Rpb24ga2koYSxiKXthLmV4cGlyYXRpb25UaW1lPGImJihhLmV4cGlyYXRpb25UaW1lPWIpO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiZjLmV4cGlyYXRpb25UaW1lPGImJihjLmV4cGlyYXRpb25UaW1lPWIpO3BnKGEucmV0dXJuLGIpfWZ1bmN0aW9uIGxpKGEsYixjLGQsZSxmKXt2YXIgZz1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWc/YS5tZW1vaXplZFN0YXRlPXtpc0JhY2t3YXJkczpiLHJlbmRlcmluZzpudWxsLHJlbmRlcmluZ1N0YXJ0VGltZTowLGxhc3Q6ZCx0YWlsOmMsdGFpbEV4cGlyYXRpb246MCx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsRXhwaXJhdGlvbj0wLGcudGFpbE1vZGU9ZSxnLmxhc3RFZmZlY3Q9Zil9XG5mdW5jdGlvbiBtaShhLGIsYyl7dmFyIGQ9Yi5wZW5kaW5nUHJvcHMsZT1kLnJldmVhbE9yZGVyLGY9ZC50YWlsO1IoYSxiLGQuY2hpbGRyZW4sYyk7ZD1NLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5lZmZlY3RUYWd8PTY0O2Vsc2V7aWYobnVsbCE9PWEmJjAhPT0oYS5lZmZlY3RUYWcmNjQpKWE6Zm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2lmKDEzPT09YS50YWcpbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYma2koYSxjKTtlbHNlIGlmKDE5PT09YS50YWcpa2koYSxjKTtlbHNlIGlmKG51bGwhPT1hLmNoaWxkKXthLmNoaWxkLnJldHVybj1hO2E9YS5jaGlsZDtjb250aW51ZX1pZihhPT09YilicmVhayBhO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1iKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfWQmPTF9SShNLGQpO2lmKDA9PT0oYi5tb2RlJjIpKWIubWVtb2l6ZWRTdGF0ZT1cbm51bGw7ZWxzZSBzd2l0Y2goZSl7Y2FzZSBcImZvcndhcmRzXCI6Yz1iLmNoaWxkO2ZvcihlPW51bGw7bnVsbCE9PWM7KWE9Yy5hbHRlcm5hdGUsbnVsbCE9PWEmJm51bGw9PT1oaChhKSYmKGU9YyksYz1jLnNpYmxpbmc7Yz1lO251bGw9PT1jPyhlPWIuY2hpbGQsYi5jaGlsZD1udWxsKTooZT1jLnNpYmxpbmcsYy5zaWJsaW5nPW51bGwpO2xpKGIsITEsZSxjLGYsYi5sYXN0RWZmZWN0KTticmVhaztjYXNlIFwiYmFja3dhcmRzXCI6Yz1udWxsO2U9Yi5jaGlsZDtmb3IoYi5jaGlsZD1udWxsO251bGwhPT1lOyl7YT1lLmFsdGVybmF0ZTtpZihudWxsIT09YSYmbnVsbD09PWhoKGEpKXtiLmNoaWxkPWU7YnJlYWt9YT1lLnNpYmxpbmc7ZS5zaWJsaW5nPWM7Yz1lO2U9YX1saShiLCEwLGMsbnVsbCxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcInRvZ2V0aGVyXCI6bGkoYiwhMSxudWxsLG51bGwsdm9pZCAwLGIubGFzdEVmZmVjdCk7YnJlYWs7ZGVmYXVsdDpiLm1lbW9pemVkU3RhdGU9bnVsbH1yZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uICRoKGEsYixjKXtudWxsIT09YSYmKGIuZGVwZW5kZW5jaWVzPWEuZGVwZW5kZW5jaWVzKTt2YXIgZD1iLmV4cGlyYXRpb25UaW1lOzAhPT1kJiZCZyhkKTtpZihiLmNoaWxkRXhwaXJhdGlvblRpbWU8YylyZXR1cm4gbnVsbDtpZihudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQpdGhyb3cgRXJyb3IodSgxNTMpKTtpZihudWxsIT09Yi5jaGlsZCl7YT1iLmNoaWxkO2M9U2coYSxhLnBlbmRpbmdQcm9wcyk7Yi5jaGlsZD1jO2ZvcihjLnJldHVybj1iO251bGwhPT1hLnNpYmxpbmc7KWE9YS5zaWJsaW5nLGM9Yy5zaWJsaW5nPVNnKGEsYS5wZW5kaW5nUHJvcHMpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9dmFyIG5pLG9pLHBpLHFpO1xubmk9ZnVuY3Rpb24oYSxiKXtmb3IodmFyIGM9Yi5jaGlsZDtudWxsIT09Yzspe2lmKDU9PT1jLnRhZ3x8Nj09PWMudGFnKWEuYXBwZW5kQ2hpbGQoYy5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWMudGFnJiZudWxsIT09Yy5jaGlsZCl7Yy5jaGlsZC5yZXR1cm49YztjPWMuY2hpbGQ7Y29udGludWV9aWYoYz09PWIpYnJlYWs7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxjLnJldHVybj09PWIpcmV0dXJuO2M9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtjPWMuc2libGluZ319O29pPWZ1bmN0aW9uKCl7fTtcbnBpPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzO2lmKGYhPT1kKXt2YXIgZz1iLnN0YXRlTm9kZTtjaCgkZy5jdXJyZW50KTthPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmY9emIoZyxmKTtkPXpiKGcsZCk7YT1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6Zj1HYihnLGYpO2Q9R2IoZyxkKTthPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpmPW4oe30sZix7dmFsdWU6dm9pZCAwfSk7ZD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2E9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6Zj1JYihnLGYpO2Q9SWIoZyxkKTthPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGYub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGcub25jbGljaz1zZCl9b2QoYyxkKTt2YXIgaCxrO2M9bnVsbDtmb3IoaCBpbiBmKWlmKCFkLmhhc093blByb3BlcnR5KGgpJiZmLmhhc093blByb3BlcnR5KGgpJiZudWxsIT1mW2hdKWlmKFwic3R5bGVcIj09PVxuaClmb3IoayBpbiBnPWZbaF0sZylnLmhhc093blByb3BlcnR5KGspJiYoY3x8KGM9e30pLGNba109XCJcIik7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWgmJlwiY2hpbGRyZW5cIiE9PWgmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmXCJhdXRvRm9jdXNcIiE9PWgmJih2YS5oYXNPd25Qcm9wZXJ0eShoKT9hfHwoYT1bXSk6KGE9YXx8W10pLnB1c2goaCxudWxsKSk7Zm9yKGggaW4gZCl7dmFyIGw9ZFtoXTtnPW51bGwhPWY/ZltoXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShoKSYmbCE9PWcmJihudWxsIT1sfHxudWxsIT1nKSlpZihcInN0eWxlXCI9PT1oKWlmKGcpe2ZvcihrIGluIGcpIWcuaGFzT3duUHJvcGVydHkoayl8fGwmJmwuaGFzT3duUHJvcGVydHkoayl8fChjfHwoYz17fSksY1trXT1cIlwiKTtmb3IoayBpbiBsKWwuaGFzT3duUHJvcGVydHkoaykmJmdba10hPT1sW2tdJiYoY3x8KGM9e30pLFxuY1trXT1sW2tdKX1lbHNlIGN8fChhfHwoYT1bXSksYS5wdXNoKGgsYykpLGM9bDtlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09aD8obD1sP2wuX19odG1sOnZvaWQgMCxnPWc/Zy5fX2h0bWw6dm9pZCAwLG51bGwhPWwmJmchPT1sJiYoYT1hfHxbXSkucHVzaChoLGwpKTpcImNoaWxkcmVuXCI9PT1oP2c9PT1sfHxcInN0cmluZ1wiIT09dHlwZW9mIGwmJlwibnVtYmVyXCIhPT10eXBlb2YgbHx8KGE9YXx8W10pLnB1c2goaCxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1oJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09aCYmKHZhLmhhc093blByb3BlcnR5KGgpPyhudWxsIT1sJiZyZChlLGgpLGF8fGc9PT1sfHwoYT1bXSkpOihhPWF8fFtdKS5wdXNoKGgsbCkpfWMmJihhPWF8fFtdKS5wdXNoKFwic3R5bGVcIixjKTtlPWE7aWYoYi51cGRhdGVRdWV1ZT1lKWIuZWZmZWN0VGFnfD00fX07XG5xaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZWZmZWN0VGFnfD00KX07ZnVuY3Rpb24gcmkoYSxiKXtzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gc2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDM6cmV0dXJuIGVoKCksSChLKSxIKEopLGM9Yi5zdGF0ZU5vZGUsYy5wZW5kaW5nQ29udGV4dCYmKGMuY29udGV4dD1jLnBlbmRpbmdDb250ZXh0LGMucGVuZGluZ0NvbnRleHQ9bnVsbCksbnVsbCE9PWEmJm51bGwhPT1hLmNoaWxkfHwhV2goYil8fChiLmVmZmVjdFRhZ3w9NCksb2koYiksbnVsbDtjYXNlIDU6Z2goYik7Yz1jaChiaC5jdXJyZW50KTt2YXIgZT1iLnR5cGU7aWYobnVsbCE9PWEmJm51bGwhPWIuc3RhdGVOb2RlKXBpKGEsYixlLGQsYyksYS5yZWYhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpO2Vsc2V7aWYoIWQpe2lmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih1KDE2NikpO1xucmV0dXJuIG51bGx9YT1jaCgkZy5jdXJyZW50KTtpZihXaChiKSl7ZD1iLnN0YXRlTm9kZTtlPWIudHlwZTt2YXIgZj1iLm1lbW9pemVkUHJvcHM7ZFtNZF09YjtkW05kXT1mO3N3aXRjaChlKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkYoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPGFjLmxlbmd0aDthKyspRihhY1thXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RihcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsZCk7RihcImxvYWRcIixkKTticmVhaztjYXNlIFwiZm9ybVwiOkYoXCJyZXNldFwiLGQpO0YoXCJzdWJtaXRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkYoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpBYihkLGYpO0YoXCJpbnZhbGlkXCIsZCk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpkLl93cmFwcGVyU3RhdGU9XG57d2FzTXVsdGlwbGU6ISFmLm11bHRpcGxlfTtGKFwiaW52YWxpZFwiLGQpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpKYihkLGYpLEYoXCJpbnZhbGlkXCIsZCkscmQoYyxcIm9uQ2hhbmdlXCIpfW9kKGUsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWlmKGYuaGFzT3duUHJvcGVydHkoZykpe3ZhciBoPWZbZ107XCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGg/ZC50ZXh0Q29udGVudCE9PWgmJihhPVtcImNoaWxkcmVuXCIsaF0pOlwibnVtYmVyXCI9PT10eXBlb2YgaCYmZC50ZXh0Q29udGVudCE9PVwiXCIraCYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2hdKTp2YS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9aCYmcmQoYyxnKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoZCk7RWIoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp4YihkKTtMYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmXG4oZC5vbmNsaWNrPXNkKX1jPWE7Yi51cGRhdGVRdWV1ZT1jO251bGwhPT1jJiYoYi5lZmZlY3RUYWd8PTQpfWVsc2V7Zz05PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDthPT09cWQmJihhPU5iKGUpKTthPT09cWQ/XCJzY3JpcHRcIj09PWU/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChlLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGUpLFwic2VsZWN0XCI9PT1lJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxlKTthW01kXT1iO2FbTmRdPWQ7bmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9cGQoZSxkKTtzd2l0Y2goZSl7Y2FzZSBcImlmcmFtZVwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwiZW1iZWRcIjpGKFwibG9hZFwiLFxuYSk7aD1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihoPTA7aDxhYy5sZW5ndGg7aCsrKUYoYWNbaF0sYSk7aD1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpGKFwiZXJyb3JcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RihcImVycm9yXCIsYSk7RihcImxvYWRcIixhKTtoPWQ7YnJlYWs7Y2FzZSBcImZvcm1cIjpGKFwicmVzZXRcIixhKTtGKFwic3VibWl0XCIsYSk7aD1kO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6RihcInRvZ2dsZVwiLGEpO2g9ZDticmVhaztjYXNlIFwiaW5wdXRcIjpBYihhLGQpO2g9emIoYSxkKTtGKFwiaW52YWxpZFwiLGEpO3JkKGMsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwib3B0aW9uXCI6aD1HYihhLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLl93cmFwcGVyU3RhdGU9e3dhc011bHRpcGxlOiEhZC5tdWx0aXBsZX07aD1uKHt9LGQse3ZhbHVlOnZvaWQgMH0pO0YoXCJpbnZhbGlkXCIsYSk7cmQoYyxcIm9uQ2hhbmdlXCIpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOkpiKGEsXG5kKTtoPUliKGEsZCk7RihcImludmFsaWRcIixhKTtyZChjLFwib25DaGFuZ2VcIik7YnJlYWs7ZGVmYXVsdDpoPWR9b2QoZSxoKTt2YXIgaz1oO2ZvcihmIGluIGspaWYoay5oYXNPd25Qcm9wZXJ0eShmKSl7dmFyIGw9a1tmXTtcInN0eWxlXCI9PT1mP21kKGEsbCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zj8obD1sP2wuX19odG1sOnZvaWQgMCxudWxsIT1sJiZRYihhLGwpKTpcImNoaWxkcmVuXCI9PT1mP1wic3RyaW5nXCI9PT10eXBlb2YgbD8oXCJ0ZXh0YXJlYVwiIT09ZXx8XCJcIiE9PWwpJiZSYihhLGwpOlwibnVtYmVyXCI9PT10eXBlb2YgbCYmUmIoYSxcIlwiK2wpOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1mJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09ZiYmXCJhdXRvRm9jdXNcIiE9PWYmJih2YS5oYXNPd25Qcm9wZXJ0eShmKT9udWxsIT1sJiZyZChjLGYpOm51bGwhPWwmJlhhKGEsZixsLGcpKX1zd2l0Y2goZSl7Y2FzZSBcImlucHV0XCI6eGIoYSk7RWIoYSxkLCExKTtcbmJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnhiKGEpO0xiKGEpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1kLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsXCJcIityYihkLnZhbHVlKSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFkLm11bHRpcGxlO2M9ZC52YWx1ZTtudWxsIT1jP0hiKGEsISFkLm11bHRpcGxlLGMsITEpOm51bGwhPWQuZGVmYXVsdFZhbHVlJiZIYihhLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgaC5vbkNsaWNrJiYoYS5vbmNsaWNrPXNkKX1GZChlLGQpJiYoYi5lZmZlY3RUYWd8PTQpfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlxaShhLGIsYS5tZW1vaXplZFByb3BzLGQpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBkJiZudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjYpKTtcbmM9Y2goYmguY3VycmVudCk7Y2goJGcuY3VycmVudCk7V2goYik/KGM9Yi5zdGF0ZU5vZGUsZD1iLm1lbW9pemVkUHJvcHMsY1tNZF09YixjLm5vZGVWYWx1ZSE9PWQmJihiLmVmZmVjdFRhZ3w9NCkpOihjPSg5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoZCksY1tNZF09YixiLnN0YXRlTm9kZT1jKX1yZXR1cm4gbnVsbDtjYXNlIDEzOkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYoMCE9PShiLmVmZmVjdFRhZyY2NCkpcmV0dXJuIGIuZXhwaXJhdGlvblRpbWU9YyxiO2M9bnVsbCE9PWQ7ZD0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJldoKGIpOihlPWEubWVtb2l6ZWRTdGF0ZSxkPW51bGwhPT1lLGN8fG51bGw9PT1lfHwoZT1hLmNoaWxkLnNpYmxpbmcsbnVsbCE9PWUmJihmPWIuZmlyc3RFZmZlY3QsbnVsbCE9PWY/KGIuZmlyc3RFZmZlY3Q9ZSxlLm5leHRFZmZlY3Q9Zik6KGIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PVxuZSxlLm5leHRFZmZlY3Q9bnVsbCksZS5lZmZlY3RUYWc9OCkpKTtpZihjJiYhZCYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KE0uY3VycmVudCYxKSlTPT09dGkmJihTPXVpKTtlbHNle2lmKFM9PT10aXx8Uz09PXVpKVM9dmk7MCE9PXdpJiZudWxsIT09VCYmKHhpKFQsVSkseWkoVCx3aSkpfWlmKGN8fGQpYi5lZmZlY3RUYWd8PTQ7cmV0dXJuIG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG9pKGIpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYiksbnVsbDtjYXNlIDE3OnJldHVybiBMKGIudHlwZSkmJkRmKCksbnVsbDtjYXNlIDE5OkgoTSk7ZD1iLm1lbW9pemVkU3RhdGU7aWYobnVsbD09PWQpcmV0dXJuIG51bGw7ZT0wIT09KGIuZWZmZWN0VGFnJjY0KTtmPWQucmVuZGVyaW5nO2lmKG51bGw9PT1mKWlmKGUpcmkoZCwhMSk7ZWxzZXtpZihTIT09dGl8fG51bGwhPT1hJiYwIT09KGEuZWZmZWN0VGFnJlxuNjQpKWZvcihmPWIuY2hpbGQ7bnVsbCE9PWY7KXthPWhoKGYpO2lmKG51bGwhPT1hKXtiLmVmZmVjdFRhZ3w9NjQ7cmkoZCwhMSk7ZT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1lJiYoYi51cGRhdGVRdWV1ZT1lLGIuZWZmZWN0VGFnfD00KTtudWxsPT09ZC5sYXN0RWZmZWN0JiYoYi5maXJzdEVmZmVjdD1udWxsKTtiLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0O2ZvcihkPWIuY2hpbGQ7bnVsbCE9PWQ7KWU9ZCxmPWMsZS5lZmZlY3RUYWcmPTIsZS5uZXh0RWZmZWN0PW51bGwsZS5maXJzdEVmZmVjdD1udWxsLGUubGFzdEVmZmVjdD1udWxsLGE9ZS5hbHRlcm5hdGUsbnVsbD09PWE/KGUuY2hpbGRFeHBpcmF0aW9uVGltZT0wLGUuZXhwaXJhdGlvblRpbWU9ZixlLmNoaWxkPW51bGwsZS5tZW1vaXplZFByb3BzPW51bGwsZS5tZW1vaXplZFN0YXRlPW51bGwsZS51cGRhdGVRdWV1ZT1udWxsLGUuZGVwZW5kZW5jaWVzPW51bGwpOihlLmNoaWxkRXhwaXJhdGlvblRpbWU9YS5jaGlsZEV4cGlyYXRpb25UaW1lLFxuZS5leHBpcmF0aW9uVGltZT1hLmV4cGlyYXRpb25UaW1lLGUuY2hpbGQ9YS5jaGlsZCxlLm1lbW9pemVkUHJvcHM9YS5tZW1vaXplZFByb3BzLGUubWVtb2l6ZWRTdGF0ZT1hLm1lbW9pemVkU3RhdGUsZS51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGY9YS5kZXBlbmRlbmNpZXMsZS5kZXBlbmRlbmNpZXM9bnVsbD09PWY/bnVsbDp7ZXhwaXJhdGlvblRpbWU6Zi5leHBpcmF0aW9uVGltZSxmaXJzdENvbnRleHQ6Zi5maXJzdENvbnRleHQscmVzcG9uZGVyczpmLnJlc3BvbmRlcnN9KSxkPWQuc2libGluZztJKE0sTS5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9Zj1mLnNpYmxpbmd9fWVsc2V7aWYoIWUpaWYoYT1oaChmKSxudWxsIT09YSl7aWYoYi5lZmZlY3RUYWd8PTY0LGU9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZWZmZWN0VGFnfD00KSxyaShkLCEwKSxudWxsPT09ZC50YWlsJiZcImhpZGRlblwiPT09ZC50YWlsTW9kZSYmIWYuYWx0ZXJuYXRlKXJldHVybiBiPVxuYi5sYXN0RWZmZWN0PWQubGFzdEVmZmVjdCxudWxsIT09YiYmKGIubmV4dEVmZmVjdD1udWxsKSxudWxsfWVsc2UgMiokZigpLWQucmVuZGVyaW5nU3RhcnRUaW1lPmQudGFpbEV4cGlyYXRpb24mJjE8YyYmKGIuZWZmZWN0VGFnfD02NCxlPSEwLHJpKGQsITEpLGIuZXhwaXJhdGlvblRpbWU9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPWMtMSk7ZC5pc0JhY2t3YXJkcz8oZi5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1mKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWY6Yi5jaGlsZD1mLGQubGFzdD1mKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oMD09PWQudGFpbEV4cGlyYXRpb24mJihkLnRhaWxFeHBpcmF0aW9uPSRmKCkrNTAwKSxjPWQudGFpbCxkLnJlbmRlcmluZz1jLGQudGFpbD1jLnNpYmxpbmcsZC5sYXN0RWZmZWN0PWIubGFzdEVmZmVjdCxkLnJlbmRlcmluZ1N0YXJ0VGltZT0kZigpLGMuc2libGluZz1udWxsLGI9TS5jdXJyZW50LEkoTSxlP2ImMXwyOmImMSksYyk6bnVsbH10aHJvdyBFcnJvcih1KDE1NixcbmIudGFnKSk7fWZ1bmN0aW9uIHppKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSAxOkwoYS50eXBlKSYmRGYoKTt2YXIgYj1hLmVmZmVjdFRhZztyZXR1cm4gYiY0MDk2PyhhLmVmZmVjdFRhZz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmVoKCk7SChLKTtIKEopO2I9YS5lZmZlY3RUYWc7aWYoMCE9PShiJjY0KSl0aHJvdyBFcnJvcih1KDI4NSkpO2EuZWZmZWN0VGFnPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBnaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoTSksYj1hLmVmZmVjdFRhZyxiJjQwOTY/KGEuZWZmZWN0VGFnPWImLTQwOTd8NjQsYSk6bnVsbDtjYXNlIDE5OnJldHVybiBIKE0pLG51bGw7Y2FzZSA0OnJldHVybiBlaCgpLG51bGw7Y2FzZSAxMDpyZXR1cm4gb2coYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX1mdW5jdGlvbiBBaShhLGIpe3JldHVybnt2YWx1ZTphLHNvdXJjZTpiLHN0YWNrOnFiKGIpfX1cbnZhciBCaT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgV2Vha1NldD9XZWFrU2V0OlNldDtmdW5jdGlvbiBDaShhLGIpe3ZhciBjPWIuc291cmNlLGQ9Yi5zdGFjaztudWxsPT09ZCYmbnVsbCE9PWMmJihkPXFiKGMpKTtudWxsIT09YyYmcGIoYy50eXBlKTtiPWIudmFsdWU7bnVsbCE9PWEmJjE9PT1hLnRhZyYmcGIoYS50eXBlKTt0cnl7Y29uc29sZS5lcnJvcihiKX1jYXRjaChlKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgZTt9KX19ZnVuY3Rpb24gRGkoYSxiKXt0cnl7Yi5wcm9wcz1hLm1lbW9pemVkUHJvcHMsYi5zdGF0ZT1hLm1lbW9pemVkU3RhdGUsYi5jb21wb25lbnRXaWxsVW5tb3VudCgpfWNhdGNoKGMpe0VpKGEsYyl9fWZ1bmN0aW9uIEZpKGEpe3ZhciBiPWEucmVmO2lmKG51bGwhPT1iKWlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXRyeXtiKG51bGwpfWNhdGNoKGMpe0VpKGEsYyl9ZWxzZSBiLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIEdpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmVmZmVjdFRhZyYyNTYmJm51bGwhPT1hKXt2YXIgYz1hLm1lbW9pemVkUHJvcHMsZD1hLm1lbW9pemVkU3RhdGU7YT1iLnN0YXRlTm9kZTtiPWEuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUoYi5lbGVtZW50VHlwZT09PWIudHlwZT9jOmlnKGIudHlwZSxjKSxkKTthLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlPWJ9cmV0dXJuO2Nhc2UgMzpjYXNlIDU6Y2FzZSA2OmNhc2UgNDpjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31cbmZ1bmN0aW9uIEhpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuZGVzdHJveTtjLmRlc3Ryb3k9dm9pZCAwO3ZvaWQgMCE9PWQmJmQoKX1jPWMubmV4dH13aGlsZShjIT09Yil9fWZ1bmN0aW9uIElpKGEsYil7Yj1iLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe3ZhciBjPWI9Yi5uZXh0O2Rve2lmKChjLnRhZyZhKT09PWEpe3ZhciBkPWMuY3JlYXRlO2MuZGVzdHJveT1kKCl9Yz1jLm5leHR9d2hpbGUoYyE9PWIpfX1cbmZ1bmN0aW9uIEppKGEsYixjKXtzd2l0Y2goYy50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTU6Y2FzZSAyMjpJaSgzLGMpO3JldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtpZihjLmVmZmVjdFRhZyY0KWlmKG51bGw9PT1iKWEuY29tcG9uZW50RGlkTW91bnQoKTtlbHNle3ZhciBkPWMuZWxlbWVudFR5cGU9PT1jLnR5cGU/Yi5tZW1vaXplZFByb3BzOmlnKGMudHlwZSxiLm1lbW9pemVkUHJvcHMpO2EuY29tcG9uZW50RGlkVXBkYXRlKGQsYi5tZW1vaXplZFN0YXRlLGEuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUpfWI9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmQ2coYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1DZyhjLGIsYSl9cmV0dXJuO1xuY2FzZSA1OmE9Yy5zdGF0ZU5vZGU7bnVsbD09PWImJmMuZWZmZWN0VGFnJjQmJkZkKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmVmMoYykpKSk7cmV0dXJuO2Nhc2UgMTk6Y2FzZSAxNzpjYXNlIDIwOmNhc2UgMjE6cmV0dXJufXRocm93IEVycm9yKHUoMTYzKSk7fVxuZnVuY3Rpb24gS2koYSxiLGMpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBMaSYmTGkoYik7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBkPWEubmV4dDtjZyg5NzxjPzk3OmMsZnVuY3Rpb24oKXt2YXIgYT1kO2Rve3ZhciBjPWEuZGVzdHJveTtpZih2b2lkIDAhPT1jKXt2YXIgZz1iO3RyeXtjKCl9Y2F0Y2goaCl7RWkoZyxoKX19YT1hLm5leHR9d2hpbGUoYSE9PWQpfSl9YnJlYWs7Y2FzZSAxOkZpKGIpO2M9Yi5zdGF0ZU5vZGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuY29tcG9uZW50V2lsbFVubW91bnQmJkRpKGIsYyk7YnJlYWs7Y2FzZSA1OkZpKGIpO2JyZWFrO2Nhc2UgNDpNaShhLGIsYyl9fVxuZnVuY3Rpb24gTmkoYSl7dmFyIGI9YS5hbHRlcm5hdGU7YS5yZXR1cm49bnVsbDthLmNoaWxkPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS51cGRhdGVRdWV1ZT1udWxsO2EuZGVwZW5kZW5jaWVzPW51bGw7YS5hbHRlcm5hdGU9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLm1lbW9pemVkUHJvcHM9bnVsbDthLnN0YXRlTm9kZT1udWxsO251bGwhPT1iJiZOaShiKX1mdW5jdGlvbiBPaShhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFBpKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKE9pKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn10aHJvdyBFcnJvcih1KDE2MCkpO31iPWMuc3RhdGVOb2RlO3N3aXRjaChjLnRhZyl7Y2FzZSA1OnZhciBkPSExO2JyZWFrO2Nhc2UgMzpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2Nhc2UgNDpiPWIuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgxNjEpKTt9Yy5lZmZlY3RUYWcmMTYmJihSYihiLFwiXCIpLGMuZWZmZWN0VGFnJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8T2koYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5lZmZlY3RUYWcmMiljb250aW51ZSBiO1xuaWYobnVsbD09PWMuY2hpbGR8fDQ9PT1jLnRhZyljb250aW51ZSBiO2Vsc2UgYy5jaGlsZC5yZXR1cm49YyxjPWMuY2hpbGR9aWYoIShjLmVmZmVjdFRhZyYyKSl7Yz1jLnN0YXRlTm9kZTticmVhayBhfX1kP1FpKGEsYyxiKTpSaShhLGMsYil9XG5mdW5jdGlvbiBRaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj84PT09Yy5ub2RlVHlwZT9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGEsYik6Yy5pbnNlcnRCZWZvcmUoYSxiKTooOD09PWMubm9kZVR5cGU/KGI9Yy5wYXJlbnROb2RlLGIuaW5zZXJ0QmVmb3JlKGEsYykpOihiPWMsYi5hcHBlbmRDaGlsZChhKSksYz1jLl9yZWFjdFJvb3RDb250YWluZXIsbnVsbCE9PWMmJnZvaWQgMCE9PWN8fG51bGwhPT1iLm9uY2xpY2t8fChiLm9uY2xpY2s9c2QpKTtlbHNlIGlmKDQhPT1kJiYoYT1hLmNoaWxkLG51bGwhPT1hKSlmb3IoUWkoYSxiLGMpLGE9YS5zaWJsaW5nO251bGwhPT1hOylRaShhLGIsYyksYT1hLnNpYmxpbmd9XG5mdW5jdGlvbiBSaShhLGIsYyl7dmFyIGQ9YS50YWcsZT01PT09ZHx8Nj09PWQ7aWYoZSlhPWU/YS5zdGF0ZU5vZGU6YS5zdGF0ZU5vZGUuaW5zdGFuY2UsYj9jLmluc2VydEJlZm9yZShhLGIpOmMuYXBwZW5kQ2hpbGQoYSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKFJpKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspUmkoYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gTWkoYSxiLGMpe2Zvcih2YXIgZD1iLGU9ITEsZixnOzspe2lmKCFlKXtlPWQucmV0dXJuO2E6Zm9yKDs7KXtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih1KDE2MCkpO2Y9ZS5zdGF0ZU5vZGU7c3dpdGNoKGUudGFnKXtjYXNlIDU6Zz0hMTticmVhayBhO2Nhc2UgMzpmPWYuY29udGFpbmVySW5mbztnPSEwO2JyZWFrIGE7Y2FzZSA0OmY9Zi5jb250YWluZXJJbmZvO2c9ITA7YnJlYWsgYX1lPWUucmV0dXJufWU9ITB9aWYoNT09PWQudGFnfHw2PT09ZC50YWcpe2E6Zm9yKHZhciBoPWEsaz1kLGw9YyxtPWs7OylpZihLaShoLG0sbCksbnVsbCE9PW0uY2hpbGQmJjQhPT1tLnRhZyltLmNoaWxkLnJldHVybj1tLG09bS5jaGlsZDtlbHNle2lmKG09PT1rKWJyZWFrIGE7Zm9yKDtudWxsPT09bS5zaWJsaW5nOyl7aWYobnVsbD09PW0ucmV0dXJufHxtLnJldHVybj09PWspYnJlYWsgYTttPW0ucmV0dXJufW0uc2libGluZy5yZXR1cm49bS5yZXR1cm47bT1tLnNpYmxpbmd9Zz8oaD1cbmYsaz1kLnN0YXRlTm9kZSw4PT09aC5ub2RlVHlwZT9oLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoayk6aC5yZW1vdmVDaGlsZChrKSk6Zi5yZW1vdmVDaGlsZChkLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09ZC50YWcpe2lmKG51bGwhPT1kLmNoaWxkKXtmPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87Zz0hMDtkLmNoaWxkLnJldHVybj1kO2Q9ZC5jaGlsZDtjb250aW51ZX19ZWxzZSBpZihLaShhLGQsYyksbnVsbCE9PWQuY2hpbGQpe2QuY2hpbGQucmV0dXJuPWQ7ZD1kLmNoaWxkO2NvbnRpbnVlfWlmKGQ9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWQuc2libGluZzspe2lmKG51bGw9PT1kLnJldHVybnx8ZC5yZXR1cm49PT1iKXJldHVybjtkPWQucmV0dXJuOzQ9PT1kLnRhZyYmKGU9ITEpfWQuc2libGluZy5yZXR1cm49ZC5yZXR1cm47ZD1kLnNpYmxpbmd9fVxuZnVuY3Rpb24gU2koYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOkhpKDMsYik7cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wcyxlPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO2E9Yi50eXBlO3ZhciBmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKG51bGwhPT1mKXtjW05kXT1kO1wiaW5wdXRcIj09PWEmJlwicmFkaW9cIj09PWQudHlwZSYmbnVsbCE9ZC5uYW1lJiZCYihjLGQpO3BkKGEsZSk7Yj1wZChhLGQpO2ZvcihlPTA7ZTxmLmxlbmd0aDtlKz0yKXt2YXIgZz1mW2VdLGg9ZltlKzFdO1wic3R5bGVcIj09PWc/bWQoYyxoKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP1FiKGMsaCk6XCJjaGlsZHJlblwiPT09Zz9SYihjLGgpOlhhKGMsZyxoLGIpfXN3aXRjaChhKXtjYXNlIFwiaW5wdXRcIjpDYihjLGQpO2JyZWFrO1xuY2FzZSBcInRleHRhcmVhXCI6S2IoYyxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGUsYy5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlPSEhZC5tdWx0aXBsZSxhPWQudmFsdWUsbnVsbCE9YT9IYihjLCEhZC5tdWx0aXBsZSxhLCExKTpiIT09ISFkLm11bHRpcGxlJiYobnVsbCE9ZC5kZWZhdWx0VmFsdWU/SGIoYywhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApOkhiKGMsISFkLm11bHRpcGxlLGQubXVsdGlwbGU/W106XCJcIiwhMSkpfX19cmV0dXJuO2Nhc2UgNjppZihudWxsPT09Yi5zdGF0ZU5vZGUpdGhyb3cgRXJyb3IodSgxNjIpKTtiLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yi5tZW1vaXplZFByb3BzO3JldHVybjtjYXNlIDM6Yj1iLnN0YXRlTm9kZTtiLmh5ZHJhdGUmJihiLmh5ZHJhdGU9ITEsVmMoYi5jb250YWluZXJJbmZvKSk7cmV0dXJuO2Nhc2UgMTI6cmV0dXJuO2Nhc2UgMTM6Yz1iO251bGw9PT1iLm1lbW9pemVkU3RhdGU/XG5kPSExOihkPSEwLGM9Yi5jaGlsZCxUaT0kZigpKTtpZihudWxsIT09YylhOmZvcihhPWM7Oyl7aWYoNT09PWEudGFnKWY9YS5zdGF0ZU5vZGUsZD8oZj1mLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLnNldFByb3BlcnR5P2Yuc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6Zi5kaXNwbGF5PVwibm9uZVwiKTooZj1hLnN0YXRlTm9kZSxlPWEubWVtb2l6ZWRQcm9wcy5zdHlsZSxlPXZvaWQgMCE9PWUmJm51bGwhPT1lJiZlLmhhc093blByb3BlcnR5KFwiZGlzcGxheVwiKT9lLmRpc3BsYXk6bnVsbCxmLnN0eWxlLmRpc3BsYXk9bGQoXCJkaXNwbGF5XCIsZSkpO2Vsc2UgaWYoNj09PWEudGFnKWEuc3RhdGVOb2RlLm5vZGVWYWx1ZT1kP1wiXCI6YS5tZW1vaXplZFByb3BzO2Vsc2UgaWYoMTM9PT1hLnRhZyYmbnVsbCE9PWEubWVtb2l6ZWRTdGF0ZSYmbnVsbD09PWEubWVtb2l6ZWRTdGF0ZS5kZWh5ZHJhdGVkKXtmPWEuY2hpbGQuc2libGluZztmLnJldHVybj1hO2E9XG5mO2NvbnRpbnVlfWVsc2UgaWYobnVsbCE9PWEuY2hpbGQpe2EuY2hpbGQucmV0dXJuPWE7YT1hLmNoaWxkO2NvbnRpbnVlfWlmKGE9PT1jKWJyZWFrO2Zvcig7bnVsbD09PWEuc2libGluZzspe2lmKG51bGw9PT1hLnJldHVybnx8YS5yZXR1cm49PT1jKWJyZWFrIGE7YT1hLnJldHVybn1hLnNpYmxpbmcucmV0dXJuPWEucmV0dXJuO2E9YS5zaWJsaW5nfVVpKGIpO3JldHVybjtjYXNlIDE5OlVpKGIpO3JldHVybjtjYXNlIDE3OnJldHVybn10aHJvdyBFcnJvcih1KDE2MykpO31mdW5jdGlvbiBVaShhKXt2YXIgYj1hLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthLnVwZGF0ZVF1ZXVlPW51bGw7dmFyIGM9YS5zdGF0ZU5vZGU7bnVsbD09PWMmJihjPWEuc3RhdGVOb2RlPW5ldyBCaSk7Yi5mb3JFYWNoKGZ1bmN0aW9uKGIpe3ZhciBkPVZpLmJpbmQobnVsbCxhLGIpO2MuaGFzKGIpfHwoYy5hZGQoYiksYi50aGVuKGQsZCkpfSl9fVxudmFyIFdpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFhpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9MztjLnBheWxvYWQ9e2VsZW1lbnQ6bnVsbH07dmFyIGQ9Yi52YWx1ZTtjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7WWl8fChZaT0hMCxaaT1kKTtDaShhLGIpfTtyZXR1cm4gY31cbmZ1bmN0aW9uICRpKGEsYixjKXtjPXdnKGMsbnVsbCk7Yy50YWc9Mzt2YXIgZD1hLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkKXt2YXIgZT1iLnZhbHVlO2MucGF5bG9hZD1mdW5jdGlvbigpe0NpKGEsYik7cmV0dXJuIGQoZSl9fXZhciBmPWEuc3RhdGVOb2RlO251bGwhPT1mJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5jb21wb25lbnREaWRDYXRjaCYmKGMuY2FsbGJhY2s9ZnVuY3Rpb24oKXtcImZ1bmN0aW9uXCIhPT10eXBlb2YgZCYmKG51bGw9PT1haj9haj1uZXcgU2V0KFt0aGlzXSk6YWouYWRkKHRoaXMpLENpKGEsYikpO3ZhciBjPWIuc3RhY2s7dGhpcy5jb21wb25lbnREaWRDYXRjaChiLnZhbHVlLHtjb21wb25lbnRTdGFjazpudWxsIT09Yz9jOlwiXCJ9KX0pO3JldHVybiBjfVxudmFyIGJqPU1hdGguY2VpbCxjaj1XYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGRqPVdhLlJlYWN0Q3VycmVudE93bmVyLFY9MCxlaj04LGZqPTE2LGdqPTMyLHRpPTAsaGo9MSxpaj0yLHVpPTMsdmk9NCxqaj01LFc9VixUPW51bGwsWD1udWxsLFU9MCxTPXRpLGtqPW51bGwsbGo9MTA3Mzc0MTgyMyxtaj0xMDczNzQxODIzLG5qPW51bGwsd2k9MCxvaj0hMSxUaT0wLHBqPTUwMCxZPW51bGwsWWk9ITEsWmk9bnVsbCxhaj1udWxsLHFqPSExLHJqPW51bGwsc2o9OTAsdGo9bnVsbCx1aj0wLHZqPW51bGwsd2o9MDtmdW5jdGlvbiBHZygpe3JldHVybihXJihmanxnaikpIT09Vj8xMDczNzQxODIxLSgkZigpLzEwfDApOjAhPT13aj93ajp3aj0xMDczNzQxODIxLSgkZigpLzEwfDApfVxuZnVuY3Rpb24gSGcoYSxiLGMpe2I9Yi5tb2RlO2lmKDA9PT0oYiYyKSlyZXR1cm4gMTA3Mzc0MTgyMzt2YXIgZD1hZygpO2lmKDA9PT0oYiY0KSlyZXR1cm4gOTk9PT1kPzEwNzM3NDE4MjM6MTA3Mzc0MTgyMjtpZigoVyZmaikhPT1WKXJldHVybiBVO2lmKG51bGwhPT1jKWE9aGcoYSxjLnRpbWVvdXRNc3wwfHw1RTMsMjUwKTtlbHNlIHN3aXRjaChkKXtjYXNlIDk5OmE9MTA3Mzc0MTgyMzticmVhaztjYXNlIDk4OmE9aGcoYSwxNTAsMTAwKTticmVhaztjYXNlIDk3OmNhc2UgOTY6YT1oZyhhLDVFMywyNTApO2JyZWFrO2Nhc2UgOTU6YT0yO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IodSgzMjYpKTt9bnVsbCE9PVQmJmE9PT1VJiYtLWE7cmV0dXJuIGF9XG5mdW5jdGlvbiBJZyhhLGIpe2lmKDUwPHVqKXRocm93IHVqPTAsdmo9bnVsbCxFcnJvcih1KDE4NSkpO2E9eGooYSxiKTtpZihudWxsIT09YSl7dmFyIGM9YWcoKTsxMDczNzQxODIzPT09Yj8oVyZlaikhPT1WJiYoVyYoZmp8Z2opKT09PVY/eWooYSk6KFooYSksVz09PVYmJmdnKCkpOlooYSk7KFcmNCk9PT1WfHw5OCE9PWMmJjk5IT09Y3x8KG51bGw9PT10aj90aj1uZXcgTWFwKFtbYSxiXV0pOihjPXRqLmdldChhKSwodm9pZCAwPT09Y3x8Yz5iKSYmdGouc2V0KGEsYikpKX19XG5mdW5jdGlvbiB4aihhLGIpe2EuZXhwaXJhdGlvblRpbWU8YiYmKGEuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbCE9PWMmJmMuZXhwaXJhdGlvblRpbWU8YiYmKGMuZXhwaXJhdGlvblRpbWU9Yik7dmFyIGQ9YS5yZXR1cm4sZT1udWxsO2lmKG51bGw9PT1kJiYzPT09YS50YWcpZT1hLnN0YXRlTm9kZTtlbHNlIGZvcig7bnVsbCE9PWQ7KXtjPWQuYWx0ZXJuYXRlO2QuY2hpbGRFeHBpcmF0aW9uVGltZTxiJiYoZC5jaGlsZEV4cGlyYXRpb25UaW1lPWIpO251bGwhPT1jJiZjLmNoaWxkRXhwaXJhdGlvblRpbWU8YiYmKGMuY2hpbGRFeHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09ZC5yZXR1cm4mJjM9PT1kLnRhZyl7ZT1kLnN0YXRlTm9kZTticmVha31kPWQucmV0dXJufW51bGwhPT1lJiYoVD09PWUmJihCZyhiKSxTPT09dmkmJnhpKGUsVSkpLHlpKGUsYikpO3JldHVybiBlfVxuZnVuY3Rpb24gemooYSl7dmFyIGI9YS5sYXN0RXhwaXJlZFRpbWU7aWYoMCE9PWIpcmV0dXJuIGI7Yj1hLmZpcnN0UGVuZGluZ1RpbWU7aWYoIUFqKGEsYikpcmV0dXJuIGI7dmFyIGM9YS5sYXN0UGluZ2VkVGltZTthPWEubmV4dEtub3duUGVuZGluZ0xldmVsO2E9Yz5hP2M6YTtyZXR1cm4gMj49YSYmYiE9PWE/MDphfVxuZnVuY3Rpb24gWihhKXtpZigwIT09YS5sYXN0RXhwaXJlZFRpbWUpYS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTEwNzM3NDE4MjMsYS5jYWxsYmFja1ByaW9yaXR5PTk5LGEuY2FsbGJhY2tOb2RlPWVnKHlqLmJpbmQobnVsbCxhKSk7ZWxzZXt2YXIgYj16aihhKSxjPWEuY2FsbGJhY2tOb2RlO2lmKDA9PT1iKW51bGwhPT1jJiYoYS5jYWxsYmFja05vZGU9bnVsbCxhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9MCxhLmNhbGxiYWNrUHJpb3JpdHk9OTApO2Vsc2V7dmFyIGQ9R2coKTsxMDczNzQxODIzPT09Yj9kPTk5OjE9PT1ifHwyPT09Yj9kPTk1OihkPTEwKigxMDczNzQxODIxLWIpLTEwKigxMDczNzQxODIxLWQpLGQ9MD49ZD85OToyNTA+PWQ/OTg6NTI1MD49ZD85Nzo5NSk7aWYobnVsbCE9PWMpe3ZhciBlPWEuY2FsbGJhY2tQcmlvcml0eTtpZihhLmNhbGxiYWNrRXhwaXJhdGlvblRpbWU9PT1iJiZlPj1kKXJldHVybjtjIT09VGYmJktmKGMpfWEuY2FsbGJhY2tFeHBpcmF0aW9uVGltZT1cbmI7YS5jYWxsYmFja1ByaW9yaXR5PWQ7Yj0xMDczNzQxODIzPT09Yj9lZyh5ai5iaW5kKG51bGwsYSkpOmRnKGQsQmouYmluZChudWxsLGEpLHt0aW1lb3V0OjEwKigxMDczNzQxODIxLWIpLSRmKCl9KTthLmNhbGxiYWNrTm9kZT1ifX19XG5mdW5jdGlvbiBCaihhLGIpe3dqPTA7aWYoYilyZXR1cm4gYj1HZygpLENqKGEsYiksWihhKSxudWxsO3ZhciBjPXpqKGEpO2lmKDAhPT1jKXtiPWEuY2FsbGJhY2tOb2RlO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmM9PT1VfHxFaihhLGMpO2lmKG51bGwhPT1YKXt2YXIgZD1XO1d8PWZqO3ZhciBlPUZqKCk7ZG8gdHJ5e0dqKCk7YnJlYWt9Y2F0Y2goaCl7SGooYSxoKX13aGlsZSgxKTtuZygpO1c9ZDtjai5jdXJyZW50PWU7aWYoUz09PWhqKXRocm93IGI9a2osRWooYSxjKSx4aShhLGMpLFooYSksYjtpZihudWxsPT09WClzd2l0Y2goZT1hLmZpbmlzaGVkV29yaz1hLmN1cnJlbnQuYWx0ZXJuYXRlLGEuZmluaXNoZWRFeHBpcmF0aW9uVGltZT1jLGQ9UyxUPW51bGwsZCl7Y2FzZSB0aTpjYXNlIGhqOnRocm93IEVycm9yKHUoMzQ1KSk7Y2FzZSBpajpDaihhLDI8Yz8yOmMpO2JyZWFrO2Nhc2UgdWk6eGkoYSxjKTtkPWEubGFzdFN1c3BlbmRlZFRpbWU7XG5jPT09ZCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPUlqKGUpKTtpZigxMDczNzQxODIzPT09bGomJihlPVRpK3BqLSRmKCksMTA8ZSkpe2lmKG9qKXt2YXIgZj1hLmxhc3RQaW5nZWRUaW1lO2lmKDA9PT1mfHxmPj1jKXthLmxhc3RQaW5nZWRUaW1lPWM7RWooYSxjKTticmVha319Zj16aihhKTtpZigwIT09ZiYmZiE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPWQ7YnJlYWt9YS50aW1lb3V0SGFuZGxlPUhkKEpqLmJpbmQobnVsbCxhKSxlKTticmVha31KaihhKTticmVhaztjYXNlIHZpOnhpKGEsYyk7ZD1hLmxhc3RTdXNwZW5kZWRUaW1lO2M9PT1kJiYoYS5uZXh0S25vd25QZW5kaW5nTGV2ZWw9SWooZSkpO2lmKG9qJiYoZT1hLmxhc3RQaW5nZWRUaW1lLDA9PT1lfHxlPj1jKSl7YS5sYXN0UGluZ2VkVGltZT1jO0VqKGEsYyk7YnJlYWt9ZT16aihhKTtpZigwIT09ZSYmZSE9PWMpYnJlYWs7aWYoMCE9PWQmJmQhPT1jKXthLmxhc3RQaW5nZWRUaW1lPVxuZDticmVha30xMDczNzQxODIzIT09bWo/ZD0xMCooMTA3Mzc0MTgyMS1taiktJGYoKToxMDczNzQxODIzPT09bGo/ZD0wOihkPTEwKigxMDczNzQxODIxLWxqKS01RTMsZT0kZigpLGM9MTAqKDEwNzM3NDE4MjEtYyktZSxkPWUtZCwwPmQmJihkPTApLGQ9KDEyMD5kPzEyMDo0ODA+ZD80ODA6MTA4MD5kPzEwODA6MTkyMD5kPzE5MjA6M0UzPmQ/M0UzOjQzMjA+ZD80MzIwOjE5NjAqYmooZC8xOTYwKSktZCxjPGQmJihkPWMpKTtpZigxMDxkKXthLnRpbWVvdXRIYW5kbGU9SGQoSmouYmluZChudWxsLGEpLGQpO2JyZWFrfUpqKGEpO2JyZWFrO2Nhc2Ugamo6aWYoMTA3Mzc0MTgyMyE9PWxqJiZudWxsIT09bmope2Y9bGo7dmFyIGc9bmo7ZD1nLmJ1c3lNaW5EdXJhdGlvbk1zfDA7MD49ZD9kPTA6KGU9Zy5idXN5RGVsYXlNc3wwLGY9JGYoKS0oMTAqKDEwNzM3NDE4MjEtZiktKGcudGltZW91dE1zfDB8fDVFMykpLGQ9Zjw9ZT8wOmUrZC1mKTtpZigxMDxkKXt4aShhLGMpO2EudGltZW91dEhhbmRsZT1cbkhkKEpqLmJpbmQobnVsbCxhKSxkKTticmVha319SmooYSk7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih1KDMyOSkpO31aKGEpO2lmKGEuY2FsbGJhY2tOb2RlPT09YilyZXR1cm4gQmouYmluZChudWxsLGEpfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIHlqKGEpe3ZhciBiPWEubGFzdEV4cGlyZWRUaW1lO2I9MCE9PWI/YjoxMDczNzQxODIzO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO0RqKCk7YT09PVQmJmI9PT1VfHxFaihhLGIpO2lmKG51bGwhPT1YKXt2YXIgYz1XO1d8PWZqO3ZhciBkPUZqKCk7ZG8gdHJ5e0tqKCk7YnJlYWt9Y2F0Y2goZSl7SGooYSxlKX13aGlsZSgxKTtuZygpO1c9Yztjai5jdXJyZW50PWQ7aWYoUz09PWhqKXRocm93IGM9a2osRWooYSxiKSx4aShhLGIpLFooYSksYztpZihudWxsIT09WCl0aHJvdyBFcnJvcih1KDI2MSkpO2EuZmluaXNoZWRXb3JrPWEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPWI7VD1udWxsO0pqKGEpO1ooYSl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gTGooKXtpZihudWxsIT09dGope3ZhciBhPXRqO3RqPW51bGw7YS5mb3JFYWNoKGZ1bmN0aW9uKGEsYyl7Q2ooYyxhKTtaKGMpfSk7Z2coKX19XG5mdW5jdGlvbiBNaihhLGIpe3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fWZ1bmN0aW9uIE5qKGEsYil7dmFyIGM9VztXJj0tMjtXfD1lajt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fVxuZnVuY3Rpb24gRWooYSxiKXthLmZpbmlzaGVkV29yaz1udWxsO2EuZmluaXNoZWRFeHBpcmF0aW9uVGltZT0wO3ZhciBjPWEudGltZW91dEhhbmRsZTstMSE9PWMmJihhLnRpbWVvdXRIYW5kbGU9LTEsSWQoYykpO2lmKG51bGwhPT1YKWZvcihjPVgucmV0dXJuO251bGwhPT1jOyl7dmFyIGQ9Yztzd2l0Y2goZC50YWcpe2Nhc2UgMTpkPWQudHlwZS5jaGlsZENvbnRleHRUeXBlcztudWxsIT09ZCYmdm9pZCAwIT09ZCYmRGYoKTticmVhaztjYXNlIDM6ZWgoKTtIKEspO0goSik7YnJlYWs7Y2FzZSA1OmdoKGQpO2JyZWFrO2Nhc2UgNDplaCgpO2JyZWFrO2Nhc2UgMTM6SChNKTticmVhaztjYXNlIDE5OkgoTSk7YnJlYWs7Y2FzZSAxMDpvZyhkKX1jPWMucmV0dXJufVQ9YTtYPVNnKGEuY3VycmVudCxudWxsKTtVPWI7Uz10aTtraj1udWxsO21qPWxqPTEwNzM3NDE4MjM7bmo9bnVsbDt3aT0wO29qPSExfVxuZnVuY3Rpb24gSGooYSxiKXtkb3t0cnl7bmcoKTtqaC5jdXJyZW50PXNoO2lmKG1oKWZvcih2YXIgYz1OLm1lbW9pemVkU3RhdGU7bnVsbCE9PWM7KXt2YXIgZD1jLnF1ZXVlO251bGwhPT1kJiYoZC5wZW5kaW5nPW51bGwpO2M9Yy5uZXh0fWxoPTA7UD1PPU49bnVsbDttaD0hMTtpZihudWxsPT09WHx8bnVsbD09PVgucmV0dXJuKXJldHVybiBTPWhqLGtqPWIsWD1udWxsO2E6e3ZhciBlPWEsZj1YLnJldHVybixnPVgsaD1iO2I9VTtnLmVmZmVjdFRhZ3w9MjA0ODtnLmZpcnN0RWZmZWN0PWcubGFzdEVmZmVjdD1udWxsO2lmKG51bGwhPT1oJiZcIm9iamVjdFwiPT09dHlwZW9mIGgmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBoLnRoZW4pe3ZhciBrPWg7aWYoMD09PShnLm1vZGUmMikpe3ZhciBsPWcuYWx0ZXJuYXRlO2w/KGcudXBkYXRlUXVldWU9bC51cGRhdGVRdWV1ZSxnLm1lbW9pemVkU3RhdGU9bC5tZW1vaXplZFN0YXRlLGcuZXhwaXJhdGlvblRpbWU9bC5leHBpcmF0aW9uVGltZSk6KGcudXBkYXRlUXVldWU9XG5udWxsLGcubWVtb2l6ZWRTdGF0ZT1udWxsKX12YXIgbT0wIT09KE0uY3VycmVudCYxKSxwPWY7ZG97dmFyIHg7aWYoeD0xMz09PXAudGFnKXt2YXIgej1wLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PXopeD1udWxsIT09ei5kZWh5ZHJhdGVkPyEwOiExO2Vsc2V7dmFyIGNhPXAubWVtb2l6ZWRQcm9wczt4PXZvaWQgMD09PWNhLmZhbGxiYWNrPyExOiEwIT09Y2EudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2s/ITA6bT8hMTohMH19aWYoeCl7dmFyIEQ9cC51cGRhdGVRdWV1ZTtpZihudWxsPT09RCl7dmFyIHQ9bmV3IFNldDt0LmFkZChrKTtwLnVwZGF0ZVF1ZXVlPXR9ZWxzZSBELmFkZChrKTtpZigwPT09KHAubW9kZSYyKSl7cC5lZmZlY3RUYWd8PTY0O2cuZWZmZWN0VGFnJj0tMjk4MTtpZigxPT09Zy50YWcpaWYobnVsbD09PWcuYWx0ZXJuYXRlKWcudGFnPTE3O2Vsc2V7dmFyIHk9d2coMTA3Mzc0MTgyMyxudWxsKTt5LnRhZz0yO3hnKGcseSl9Zy5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO1xuYnJlYWsgYX1oPXZvaWQgMDtnPWI7dmFyIEE9ZS5waW5nQ2FjaGU7bnVsbD09PUE/KEE9ZS5waW5nQ2FjaGU9bmV3IFdpLGg9bmV3IFNldCxBLnNldChrLGgpKTooaD1BLmdldChrKSx2b2lkIDA9PT1oJiYoaD1uZXcgU2V0LEEuc2V0KGssaCkpKTtpZighaC5oYXMoZykpe2guYWRkKGcpO3ZhciBxPU9qLmJpbmQobnVsbCxlLGssZyk7ay50aGVuKHEscSl9cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7aD1FcnJvcigocGIoZy50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiK3FiKGcpKX1TIT09XG5qaiYmKFM9aWopO2g9QWkoaCxnKTtwPWY7ZG97c3dpdGNoKHAudGFnKXtjYXNlIDM6az1oO3AuZWZmZWN0VGFnfD00MDk2O3AuZXhwaXJhdGlvblRpbWU9Yjt2YXIgQj1YaShwLGssYik7eWcocCxCKTticmVhayBhO2Nhc2UgMTprPWg7dmFyIHc9cC50eXBlLHViPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5lZmZlY3RUYWcmNjQpJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIHcuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxudWxsIT09dWImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yi5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyh1YikpKSl7cC5lZmZlY3RUYWd8PTQwOTY7cC5leHBpcmF0aW9uVGltZT1iO3ZhciB2Yj0kaShwLGssYik7eWcocCx2Yik7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WD1QaihYKX1jYXRjaChYYyl7Yj1YYztjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIEZqKCl7dmFyIGE9Y2ouY3VycmVudDtjai5jdXJyZW50PXNoO3JldHVybiBudWxsPT09YT9zaDphfWZ1bmN0aW9uIEFnKGEsYil7YTxsaiYmMjxhJiYobGo9YSk7bnVsbCE9PWImJmE8bWomJjI8YSYmKG1qPWEsbmo9Yil9ZnVuY3Rpb24gQmcoYSl7YT53aSYmKHdpPWEpfWZ1bmN0aW9uIEtqKCl7Zm9yKDtudWxsIT09WDspWD1RaihYKX1mdW5jdGlvbiBHaigpe2Zvcig7bnVsbCE9PVgmJiFVZigpOylYPVFqKFgpfWZ1bmN0aW9uIFFqKGEpe3ZhciBiPVJqKGEuYWx0ZXJuYXRlLGEsVSk7YS5tZW1vaXplZFByb3BzPWEucGVuZGluZ1Byb3BzO251bGw9PT1iJiYoYj1QaihhKSk7ZGouY3VycmVudD1udWxsO3JldHVybiBifVxuZnVuY3Rpb24gUGooYSl7WD1hO2Rve3ZhciBiPVguYWx0ZXJuYXRlO2E9WC5yZXR1cm47aWYoMD09PShYLmVmZmVjdFRhZyYyMDQ4KSl7Yj1zaShiLFgsVSk7aWYoMT09PVV8fDEhPT1YLmNoaWxkRXhwaXJhdGlvblRpbWUpe2Zvcih2YXIgYz0wLGQ9WC5jaGlsZDtudWxsIT09ZDspe3ZhciBlPWQuZXhwaXJhdGlvblRpbWUsZj1kLmNoaWxkRXhwaXJhdGlvblRpbWU7ZT5jJiYoYz1lKTtmPmMmJihjPWYpO2Q9ZC5zaWJsaW5nfVguY2hpbGRFeHBpcmF0aW9uVGltZT1jfWlmKG51bGwhPT1iKXJldHVybiBiO251bGwhPT1hJiYwPT09KGEuZWZmZWN0VGFnJjIwNDgpJiYobnVsbD09PWEuZmlyc3RFZmZlY3QmJihhLmZpcnN0RWZmZWN0PVguZmlyc3RFZmZlY3QpLG51bGwhPT1YLmxhc3RFZmZlY3QmJihudWxsIT09YS5sYXN0RWZmZWN0JiYoYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9WC5maXJzdEVmZmVjdCksYS5sYXN0RWZmZWN0PVgubGFzdEVmZmVjdCksMTxYLmVmZmVjdFRhZyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1YOmEuZmlyc3RFZmZlY3Q9WCxhLmxhc3RFZmZlY3Q9WCkpfWVsc2V7Yj16aShYKTtpZihudWxsIT09YilyZXR1cm4gYi5lZmZlY3RUYWcmPTIwNDcsYjtudWxsIT09YSYmKGEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PW51bGwsYS5lZmZlY3RUYWd8PTIwNDgpfWI9WC5zaWJsaW5nO2lmKG51bGwhPT1iKXJldHVybiBiO1g9YX13aGlsZShudWxsIT09WCk7Uz09PXRpJiYoUz1qaik7cmV0dXJuIG51bGx9ZnVuY3Rpb24gSWooYSl7dmFyIGI9YS5leHBpcmF0aW9uVGltZTthPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtyZXR1cm4gYj5hP2I6YX1mdW5jdGlvbiBKaihhKXt2YXIgYj1hZygpO2NnKDk5LFNqLmJpbmQobnVsbCxhLGIpKTtyZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIFNqKGEsYil7ZG8gRGooKTt3aGlsZShudWxsIT09cmopO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrLGQ9YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZEV4cGlyYXRpb25UaW1lPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih1KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7YS5jYWxsYmFja0V4cGlyYXRpb25UaW1lPTA7YS5jYWxsYmFja1ByaW9yaXR5PTkwO2EubmV4dEtub3duUGVuZGluZ0xldmVsPTA7dmFyIGU9SWooYyk7YS5maXJzdFBlbmRpbmdUaW1lPWU7ZDw9YS5sYXN0U3VzcGVuZGVkVGltZT9hLmZpcnN0U3VzcGVuZGVkVGltZT1hLmxhc3RTdXNwZW5kZWRUaW1lPWEubmV4dEtub3duUGVuZGluZ0xldmVsPTA6ZDw9YS5maXJzdFN1c3BlbmRlZFRpbWUmJihhLmZpcnN0U3VzcGVuZGVkVGltZT1cbmQtMSk7ZDw9YS5sYXN0UGluZ2VkVGltZSYmKGEubGFzdFBpbmdlZFRpbWU9MCk7ZDw9YS5sYXN0RXhwaXJlZFRpbWUmJihhLmxhc3RFeHBpcmVkVGltZT0wKTthPT09VCYmKFg9VD1udWxsLFU9MCk7MTxjLmVmZmVjdFRhZz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGU9Yy5maXJzdEVmZmVjdCk6ZT1jOmU9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZSl7dmFyIGY9VztXfD1najtkai5jdXJyZW50PW51bGw7RGQ9ZmQ7dmFyIGc9eGQoKTtpZih5ZChnKSl7aWYoXCJzZWxlY3Rpb25TdGFydFwiaW4gZyl2YXIgaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTp7aD0oaD1nLm93bmVyRG9jdW1lbnQpJiZoLmRlZmF1bHRWaWV3fHx3aW5kb3c7dmFyIGs9aC5nZXRTZWxlY3Rpb24mJmguZ2V0U2VsZWN0aW9uKCk7aWYoayYmMCE9PWsucmFuZ2VDb3VudCl7aD1rLmFuY2hvck5vZGU7dmFyIGw9ay5hbmNob3JPZmZzZXQsXG5tPWsuZm9jdXNOb2RlO2s9ay5mb2N1c09mZnNldDt0cnl7aC5ub2RlVHlwZSxtLm5vZGVUeXBlfWNhdGNoKHdiKXtoPW51bGw7YnJlYWsgYX12YXIgcD0wLHg9LTEsej0tMSxjYT0wLEQ9MCx0PWcseT1udWxsO2I6Zm9yKDs7KXtmb3IodmFyIEE7Oyl7dCE9PWh8fDAhPT1sJiYzIT09dC5ub2RlVHlwZXx8KHg9cCtsKTt0IT09bXx8MCE9PWsmJjMhPT10Lm5vZGVUeXBlfHwoej1wK2spOzM9PT10Lm5vZGVUeXBlJiYocCs9dC5ub2RlVmFsdWUubGVuZ3RoKTtpZihudWxsPT09KEE9dC5maXJzdENoaWxkKSlicmVhazt5PXQ7dD1BfWZvcig7Oyl7aWYodD09PWcpYnJlYWsgYjt5PT09aCYmKytjYT09PWwmJih4PXApO3k9PT1tJiYrK0Q9PT1rJiYoej1wKTtpZihudWxsIT09KEE9dC5uZXh0U2libGluZykpYnJlYWs7dD15O3k9dC5wYXJlbnROb2RlfXQ9QX1oPS0xPT09eHx8LTE9PT16P251bGw6e3N0YXJ0OngsZW5kOnp9fWVsc2UgaD1udWxsfWg9aHx8e3N0YXJ0OjAsZW5kOjB9fWVsc2UgaD1cbm51bGw7RWQ9e2FjdGl2ZUVsZW1lbnREZXRhY2hlZDpudWxsLGZvY3VzZWRFbGVtOmcsc2VsZWN0aW9uUmFuZ2U6aH07ZmQ9ITE7WT1lO2RvIHRyeXtUaigpfWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPWU7ZG8gdHJ5e2ZvcihnPWEsaD1iO251bGwhPT1ZOyl7dmFyIHE9WS5lZmZlY3RUYWc7cSYxNiYmUmIoWS5zdGF0ZU5vZGUsXCJcIik7aWYocSYxMjgpe3ZhciBCPVkuYWx0ZXJuYXRlO2lmKG51bGwhPT1CKXt2YXIgdz1CLnJlZjtudWxsIT09dyYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB3P3cobnVsbCk6dy5jdXJyZW50PW51bGwpfX1zd2l0Y2gocSYxMDM4KXtjYXNlIDI6UGkoWSk7WS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpQaShZKTtZLmVmZmVjdFRhZyY9LTM7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSAxMDI0OlkuZWZmZWN0VGFnJj0tMTAyNTticmVhaztjYXNlIDEwMjg6WS5lZmZlY3RUYWcmPVxuLTEwMjU7U2koWS5hbHRlcm5hdGUsWSk7YnJlYWs7Y2FzZSA0OlNpKFkuYWx0ZXJuYXRlLFkpO2JyZWFrO2Nhc2UgODpsPVksTWkoZyxsLGgpLE5pKGwpfVk9WS5uZXh0RWZmZWN0fX1jYXRjaCh3Yil7aWYobnVsbD09PVkpdGhyb3cgRXJyb3IodSgzMzApKTtFaShZLHdiKTtZPVkubmV4dEVmZmVjdH13aGlsZShudWxsIT09WSk7dz1FZDtCPXhkKCk7cT13LmZvY3VzZWRFbGVtO2g9dy5zZWxlY3Rpb25SYW5nZTtpZihCIT09cSYmcSYmcS5vd25lckRvY3VtZW50JiZ3ZChxLm93bmVyRG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHEpKXtudWxsIT09aCYmeWQocSkmJihCPWguc3RhcnQsdz1oLmVuZCx2b2lkIDA9PT13JiYodz1CKSxcInNlbGVjdGlvblN0YXJ0XCJpbiBxPyhxLnNlbGVjdGlvblN0YXJ0PUIscS5zZWxlY3Rpb25FbmQ9TWF0aC5taW4odyxxLnZhbHVlLmxlbmd0aCkpOih3PShCPXEub3duZXJEb2N1bWVudHx8ZG9jdW1lbnQpJiZCLmRlZmF1bHRWaWV3fHx3aW5kb3csdy5nZXRTZWxlY3Rpb24mJlxuKHc9dy5nZXRTZWxlY3Rpb24oKSxsPXEudGV4dENvbnRlbnQubGVuZ3RoLGc9TWF0aC5taW4oaC5zdGFydCxsKSxoPXZvaWQgMD09PWguZW5kP2c6TWF0aC5taW4oaC5lbmQsbCksIXcuZXh0ZW5kJiZnPmgmJihsPWgsaD1nLGc9bCksbD12ZChxLGcpLG09dmQocSxoKSxsJiZtJiYoMSE9PXcucmFuZ2VDb3VudHx8dy5hbmNob3JOb2RlIT09bC5ub2RlfHx3LmFuY2hvck9mZnNldCE9PWwub2Zmc2V0fHx3LmZvY3VzTm9kZSE9PW0ubm9kZXx8dy5mb2N1c09mZnNldCE9PW0ub2Zmc2V0KSYmKEI9Qi5jcmVhdGVSYW5nZSgpLEIuc2V0U3RhcnQobC5ub2RlLGwub2Zmc2V0KSx3LnJlbW92ZUFsbFJhbmdlcygpLGc+aD8ody5hZGRSYW5nZShCKSx3LmV4dGVuZChtLm5vZGUsbS5vZmZzZXQpKTooQi5zZXRFbmQobS5ub2RlLG0ub2Zmc2V0KSx3LmFkZFJhbmdlKEIpKSkpKSk7Qj1bXTtmb3Iodz1xO3c9dy5wYXJlbnROb2RlOykxPT09dy5ub2RlVHlwZSYmQi5wdXNoKHtlbGVtZW50OncsbGVmdDp3LnNjcm9sbExlZnQsXG50b3A6dy5zY3JvbGxUb3B9KTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgcS5mb2N1cyYmcS5mb2N1cygpO2ZvcihxPTA7cTxCLmxlbmd0aDtxKyspdz1CW3FdLHcuZWxlbWVudC5zY3JvbGxMZWZ0PXcubGVmdCx3LmVsZW1lbnQuc2Nyb2xsVG9wPXcudG9wfWZkPSEhRGQ7RWQ9RGQ9bnVsbDthLmN1cnJlbnQ9YztZPWU7ZG8gdHJ5e2ZvcihxPWE7bnVsbCE9PVk7KXt2YXIgdWI9WS5lZmZlY3RUYWc7dWImMzYmJkppKHEsWS5hbHRlcm5hdGUsWSk7aWYodWImMTI4KXtCPXZvaWQgMDt2YXIgdmI9WS5yZWY7aWYobnVsbCE9PXZiKXt2YXIgWGM9WS5zdGF0ZU5vZGU7c3dpdGNoKFkudGFnKXtjYXNlIDU6Qj1YYzticmVhaztkZWZhdWx0OkI9WGN9XCJmdW5jdGlvblwiPT09dHlwZW9mIHZiP3ZiKEIpOnZiLmN1cnJlbnQ9Qn19WT1ZLm5leHRFZmZlY3R9fWNhdGNoKHdiKXtpZihudWxsPT09WSl0aHJvdyBFcnJvcih1KDMzMCkpO0VpKFksd2IpO1k9WS5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1ZKTtZPVxubnVsbDtWZigpO1c9Zn1lbHNlIGEuY3VycmVudD1jO2lmKHFqKXFqPSExLHJqPWEsc2o9YjtlbHNlIGZvcihZPWU7bnVsbCE9PVk7KWI9WS5uZXh0RWZmZWN0LFkubmV4dEVmZmVjdD1udWxsLFk9YjtiPWEuZmlyc3RQZW5kaW5nVGltZTswPT09YiYmKGFqPW51bGwpOzEwNzM3NDE4MjM9PT1iP2E9PT12aj91aisrOih1aj0wLHZqPWEpOnVqPTA7XCJmdW5jdGlvblwiPT09dHlwZW9mIFVqJiZVaihjLnN0YXRlTm9kZSxkKTtaKGEpO2lmKFlpKXRocm93IFlpPSExLGE9WmksWmk9bnVsbCxhO2lmKChXJmVqKSE9PVYpcmV0dXJuIG51bGw7Z2coKTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBUaigpe2Zvcig7bnVsbCE9PVk7KXt2YXIgYT1ZLmVmZmVjdFRhZzswIT09KGEmMjU2KSYmR2koWS5hbHRlcm5hdGUsWSk7MD09PShhJjUxMil8fHFqfHwocWo9ITAsZGcoOTcsZnVuY3Rpb24oKXtEaigpO3JldHVybiBudWxsfSkpO1k9WS5uZXh0RWZmZWN0fX1cbmZ1bmN0aW9uIERqKCl7aWYoOTAhPT1zail7dmFyIGE9OTc8c2o/OTc6c2o7c2o9OTA7cmV0dXJuIGNnKGEsVmopfX1mdW5jdGlvbiBWaigpe2lmKG51bGw9PT1yailyZXR1cm4hMTt2YXIgYT1yajtyaj1udWxsO2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDMzMSkpO3ZhciBiPVc7V3w9Z2o7Zm9yKGE9YS5jdXJyZW50LmZpcnN0RWZmZWN0O251bGwhPT1hOyl7dHJ5e3ZhciBjPWE7aWYoMCE9PShjLmVmZmVjdFRhZyY1MTIpKXN3aXRjaChjLnRhZyl7Y2FzZSAwOmNhc2UgMTE6Y2FzZSAxNTpjYXNlIDIyOkhpKDUsYyksSWkoNSxjKX19Y2F0Y2goZCl7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IodSgzMzApKTtFaShhLGQpfWM9YS5uZXh0RWZmZWN0O2EubmV4dEVmZmVjdD1udWxsO2E9Y31XPWI7Z2coKTtyZXR1cm4hMH1cbmZ1bmN0aW9uIFdqKGEsYixjKXtiPUFpKGMsYik7Yj1YaShhLGIsMTA3Mzc0MTgyMyk7eGcoYSxiKTthPXhqKGEsMTA3Mzc0MTgyMyk7bnVsbCE9PWEmJlooYSl9ZnVuY3Rpb24gRWkoYSxiKXtpZigzPT09YS50YWcpV2ooYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtXaihjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1hanx8IWFqLmhhcyhkKSkpe2E9QWkoYixhKTthPSRpKGMsYSwxMDczNzQxODIzKTt4ZyhjLGEpO2M9eGooYywxMDczNzQxODIzKTtudWxsIT09YyYmWihjKTticmVha319Yz1jLnJldHVybn19XG5mdW5jdGlvbiBPaihhLGIsYyl7dmFyIGQ9YS5waW5nQ2FjaGU7bnVsbCE9PWQmJmQuZGVsZXRlKGIpO1Q9PT1hJiZVPT09Yz9TPT09dml8fFM9PT11aSYmMTA3Mzc0MTgyMz09PWxqJiYkZigpLVRpPHBqP0VqKGEsVSk6b2o9ITA6QWooYSxjKSYmKGI9YS5sYXN0UGluZ2VkVGltZSwwIT09YiYmYjxjfHwoYS5sYXN0UGluZ2VkVGltZT1jLFooYSkpKX1mdW5jdGlvbiBWaShhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO251bGwhPT1jJiZjLmRlbGV0ZShiKTtiPTA7MD09PWImJihiPUdnKCksYj1IZyhiLGEsbnVsbCkpO2E9eGooYSxiKTtudWxsIT09YSYmWihhKX12YXIgUmo7XG5Saj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9Yi5leHBpcmF0aW9uVGltZTtpZihudWxsIT09YSl7dmFyIGU9Yi5wZW5kaW5nUHJvcHM7aWYoYS5tZW1vaXplZFByb3BzIT09ZXx8Sy5jdXJyZW50KXJnPSEwO2Vsc2V7aWYoZDxjKXtyZz0hMTtzd2l0Y2goYi50YWcpe2Nhc2UgMzpoaShiKTtYaCgpO2JyZWFrO2Nhc2UgNTpmaChiKTtpZihiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuKXJldHVybiBiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLG51bGw7YnJlYWs7Y2FzZSAxOkwoYi50eXBlKSYmR2YoYik7YnJlYWs7Y2FzZSA0OmRoKGIsYi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyk7YnJlYWs7Y2FzZSAxMDpkPWIubWVtb2l6ZWRQcm9wcy52YWx1ZTtlPWIudHlwZS5fY29udGV4dDtJKGpnLGUuX2N1cnJlbnRWYWx1ZSk7ZS5fY3VycmVudFZhbHVlPWQ7YnJlYWs7Y2FzZSAxMzppZihudWxsIT09Yi5tZW1vaXplZFN0YXRlKXtkPWIuY2hpbGQuY2hpbGRFeHBpcmF0aW9uVGltZTtcbmlmKDAhPT1kJiZkPj1jKXJldHVybiBqaShhLGIsYyk7SShNLE0uY3VycmVudCYxKTtiPSRoKGEsYixjKTtyZXR1cm4gbnVsbCE9PWI/Yi5zaWJsaW5nOm51bGx9SShNLE0uY3VycmVudCYxKTticmVhaztjYXNlIDE5OmQ9Yi5jaGlsZEV4cGlyYXRpb25UaW1lPj1jO2lmKDAhPT0oYS5lZmZlY3RUYWcmNjQpKXtpZihkKXJldHVybiBtaShhLGIsYyk7Yi5lZmZlY3RUYWd8PTY0fWU9Yi5tZW1vaXplZFN0YXRlO251bGwhPT1lJiYoZS5yZW5kZXJpbmc9bnVsbCxlLnRhaWw9bnVsbCk7SShNLE0uY3VycmVudCk7aWYoIWQpcmV0dXJuIG51bGx9cmV0dXJuICRoKGEsYixjKX1yZz0hMX19ZWxzZSByZz0hMTtiLmV4cGlyYXRpb25UaW1lPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpO2E9Yi5wZW5kaW5nUHJvcHM7ZT1DZihiLEouY3VycmVudCk7cWcoYixjKTtlPW9oKG51bGwsXG5iLGQsYSxlLGMpO2IuZWZmZWN0VGFnfD0xO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZSYmbnVsbCE9PWUmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLnJlbmRlciYmdm9pZCAwPT09ZS4kJHR5cGVvZil7Yi50YWc9MTtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYoTChkKSl7dmFyIGY9ITA7R2YoYil9ZWxzZSBmPSExO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZS5zdGF0ZSYmdm9pZCAwIT09ZS5zdGF0ZT9lLnN0YXRlOm51bGw7dWcoYik7dmFyIGc9ZC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7XCJmdW5jdGlvblwiPT09dHlwZW9mIGcmJkZnKGIsZCxnLGEpO2UudXBkYXRlcj1KZztiLnN0YXRlTm9kZT1lO2UuX3JlYWN0SW50ZXJuYWxGaWJlcj1iO05nKGIsZCxhLGMpO2I9Z2kobnVsbCxiLGQsITAsZixjKX1lbHNlIGIudGFnPTAsUihudWxsLGIsZSxjKSxiPWIuY2hpbGQ7cmV0dXJuIGI7Y2FzZSAxNjphOntlPWIuZWxlbWVudFR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1cbm51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmVmZmVjdFRhZ3w9Mik7YT1iLnBlbmRpbmdQcm9wcztvYihlKTtpZigxIT09ZS5fc3RhdHVzKXRocm93IGUuX3Jlc3VsdDtlPWUuX3Jlc3VsdDtiLnR5cGU9ZTtmPWIudGFnPVhqKGUpO2E9aWcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9ZGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPWZpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9WmgobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1haShudWxsLGIsZSxpZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHUoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksZmkoYSxiLGQsZSxjKTtcbmNhc2UgMzpoaShiKTtkPWIudXBkYXRlUXVldWU7aWYobnVsbD09PWF8fG51bGw9PT1kKXRocm93IEVycm9yKHUoMjgyKSk7ZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3ZnKGEsYik7emcoYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlYaCgpLGI9JGgoYSxiLGMpO2Vsc2V7aWYoZT1iLnN0YXRlTm9kZS5oeWRyYXRlKVBoPUpkKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8uZmlyc3RDaGlsZCksT2g9YixlPVFoPSEwO2lmKGUpZm9yKGM9WWcoYixudWxsLGQsYyksYi5jaGlsZD1jO2M7KWMuZWZmZWN0VGFnPWMuZWZmZWN0VGFnJi0zfDEwMjQsYz1jLnNpYmxpbmc7ZWxzZSBSKGEsYixkLGMpLFhoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZmgoYiksbnVsbD09PWEmJlVoKGIpLGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1udWxsIT09YT9hLm1lbW9pemVkUHJvcHM6XG5udWxsLGc9ZS5jaGlsZHJlbixHZChkLGUpP2c9bnVsbDpudWxsIT09ZiYmR2QoZCxmKSYmKGIuZWZmZWN0VGFnfD0xNiksZWkoYSxiKSxiLm1vZGUmNCYmMSE9PWMmJmUuaGlkZGVuPyhiLmV4cGlyYXRpb25UaW1lPWIuY2hpbGRFeHBpcmF0aW9uVGltZT0xLGI9bnVsbCk6KFIoYSxiLGcsYyksYj1iLmNoaWxkKSxiO2Nhc2UgNjpyZXR1cm4gbnVsbD09PWEmJlVoKGIpLG51bGw7Y2FzZSAxMzpyZXR1cm4gamkoYSxiLGMpO2Nhc2UgNDpyZXR1cm4gZGgoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxkPWIucGVuZGluZ1Byb3BzLG51bGw9PT1hP2IuY2hpbGQ9WGcoYixudWxsLGQsYyk6UihhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksWmgoYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIFIoYSxiLGIucGVuZGluZ1Byb3BzLGMpLGIuY2hpbGQ7Y2FzZSA4OnJldHVybiBSKGEsXG5iLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLGMpLGIuY2hpbGQ7Y2FzZSAxMjpyZXR1cm4gUihhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKGpnLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9JGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIUsuY3VycmVudCl7Yj0kaChhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09XG5rKXtnPWguY2hpbGQ7Zm9yKHZhciBsPWsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD13ZyhjLG51bGwpLGwudGFnPTIseGcoaCxsKSk7aC5leHBpcmF0aW9uVGltZTxjJiYoaC5leHBpcmF0aW9uVGltZT1jKTtsPWguYWx0ZXJuYXRlO251bGwhPT1sJiZsLmV4cGlyYXRpb25UaW1lPGMmJihsLmV4cGlyYXRpb25UaW1lPWMpO3BnKGgucmV0dXJuLGMpO2suZXhwaXJhdGlvblRpbWU8YyYmKGsuZXhwaXJhdGlvblRpbWU9Yyk7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9XG5nfVIoYSxiLGUuY2hpbGRyZW4sYyk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgOTpyZXR1cm4gZT1iLnR5cGUsZj1iLnBlbmRpbmdQcm9wcyxkPWYuY2hpbGRyZW4scWcoYixjKSxlPXNnKGUsZi51bnN0YWJsZV9vYnNlcnZlZEJpdHMpLGQ9ZChlKSxiLmVmZmVjdFRhZ3w9MSxSKGEsYixkLGMpLGIuY2hpbGQ7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUsZj1pZyhlLGIucGVuZGluZ1Byb3BzKSxmPWlnKGUudHlwZSxmKSxhaShhLGIsZSxmLGQsYyk7Y2FzZSAxNTpyZXR1cm4gY2koYSxiLGIudHlwZSxiLnBlbmRpbmdQcm9wcyxkLGMpO2Nhc2UgMTc6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmlnKGQsZSksbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5lZmZlY3RUYWd8PTIpLGIudGFnPTEsTChkKT8oYT0hMCxHZihiKSk6YT0hMSxxZyhiLGMpLExnKGIsZCxlKSxOZyhiLGQsZSxjKSxnaShudWxsLFxuYixkLCEwLGEsYyk7Y2FzZSAxOTpyZXR1cm4gbWkoYSxiLGMpfXRocm93IEVycm9yKHUoMTU2LGIudGFnKSk7fTt2YXIgVWo9bnVsbCxMaT1udWxsO2Z1bmN0aW9uIFlqKGEpe2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fKXJldHVybiExO3ZhciBiPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZihiLmlzRGlzYWJsZWR8fCFiLnN1cHBvcnRzRmliZXIpcmV0dXJuITA7dHJ5e3ZhciBjPWIuaW5qZWN0KGEpO1VqPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJSb290KGMsYSx2b2lkIDAsNjQ9PT0oYS5jdXJyZW50LmVmZmVjdFRhZyY2NCkpfWNhdGNoKGUpe319O0xpPWZ1bmN0aW9uKGEpe3RyeXtiLm9uQ29tbWl0RmliZXJVbm1vdW50KGMsYSl9Y2F0Y2goZSl7fX19Y2F0Y2goZCl7fXJldHVybiEwfVxuZnVuY3Rpb24gWmooYSxiLGMsZCl7dGhpcy50YWc9YTt0aGlzLmtleT1jO3RoaXMuc2libGluZz10aGlzLmNoaWxkPXRoaXMucmV0dXJuPXRoaXMuc3RhdGVOb2RlPXRoaXMudHlwZT10aGlzLmVsZW1lbnRUeXBlPW51bGw7dGhpcy5pbmRleD0wO3RoaXMucmVmPW51bGw7dGhpcy5wZW5kaW5nUHJvcHM9Yjt0aGlzLmRlcGVuZGVuY2llcz10aGlzLm1lbW9pemVkU3RhdGU9dGhpcy51cGRhdGVRdWV1ZT10aGlzLm1lbW9pemVkUHJvcHM9bnVsbDt0aGlzLm1vZGU9ZDt0aGlzLmVmZmVjdFRhZz0wO3RoaXMubGFzdEVmZmVjdD10aGlzLmZpcnN0RWZmZWN0PXRoaXMubmV4dEVmZmVjdD1udWxsO3RoaXMuY2hpbGRFeHBpcmF0aW9uVGltZT10aGlzLmV4cGlyYXRpb25UaW1lPTA7dGhpcy5hbHRlcm5hdGU9bnVsbH1mdW5jdGlvbiBTaChhLGIsYyxkKXtyZXR1cm4gbmV3IFpqKGEsYixjLGQpfVxuZnVuY3Rpb24gYmkoYSl7YT1hLnByb3RvdHlwZTtyZXR1cm4hKCFhfHwhYS5pc1JlYWN0Q29tcG9uZW50KX1mdW5jdGlvbiBYaihhKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYmkoYSk/MTowO2lmKHZvaWQgMCE9PWEmJm51bGwhPT1hKXthPWEuJCR0eXBlb2Y7aWYoYT09PWdiKXJldHVybiAxMTtpZihhPT09amIpcmV0dXJuIDE0fXJldHVybiAyfVxuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsPT09Yz8oYz1TaChhLnRhZyxiLGEua2V5LGEubW9kZSksYy5lbGVtZW50VHlwZT1hLmVsZW1lbnRUeXBlLGMudHlwZT1hLnR5cGUsYy5zdGF0ZU5vZGU9YS5zdGF0ZU5vZGUsYy5hbHRlcm5hdGU9YSxhLmFsdGVybmF0ZT1jKTooYy5wZW5kaW5nUHJvcHM9YixjLmVmZmVjdFRhZz0wLGMubmV4dEVmZmVjdD1udWxsLGMuZmlyc3RFZmZlY3Q9bnVsbCxjLmxhc3RFZmZlY3Q9bnVsbCk7Yy5jaGlsZEV4cGlyYXRpb25UaW1lPWEuY2hpbGRFeHBpcmF0aW9uVGltZTtjLmV4cGlyYXRpb25UaW1lPWEuZXhwaXJhdGlvblRpbWU7Yy5jaGlsZD1hLmNoaWxkO2MubWVtb2l6ZWRQcm9wcz1hLm1lbW9pemVkUHJvcHM7Yy5tZW1vaXplZFN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtjLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWU7Yj1hLmRlcGVuZGVuY2llcztjLmRlcGVuZGVuY2llcz1udWxsPT09Yj9udWxsOntleHBpcmF0aW9uVGltZTpiLmV4cGlyYXRpb25UaW1lLFxuZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0LHJlc3BvbmRlcnM6Yi5yZXNwb25kZXJzfTtjLnNpYmxpbmc9YS5zaWJsaW5nO2MuaW5kZXg9YS5pbmRleDtjLnJlZj1hLnJlZjtyZXR1cm4gY31cbmZ1bmN0aW9uIFVnKGEsYixjLGQsZSxmKXt2YXIgZz0yO2Q9YTtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSliaShhKSYmKGc9MSk7ZWxzZSBpZihcInN0cmluZ1wiPT09dHlwZW9mIGEpZz01O2Vsc2UgYTpzd2l0Y2goYSl7Y2FzZSBhYjpyZXR1cm4gV2coYy5jaGlsZHJlbixlLGYsYik7Y2FzZSBmYjpnPTg7ZXw9NzticmVhaztjYXNlIGJiOmc9ODtlfD0xO2JyZWFrO2Nhc2UgY2I6cmV0dXJuIGE9U2goMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT1jYixhLnR5cGU9Y2IsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBoYjpyZXR1cm4gYT1TaCgxMyxjLGIsZSksYS50eXBlPWhiLGEuZWxlbWVudFR5cGU9aGIsYS5leHBpcmF0aW9uVGltZT1mLGE7Y2FzZSBpYjpyZXR1cm4gYT1TaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1pYixhLmV4cGlyYXRpb25UaW1lPWYsYTtkZWZhdWx0OmlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpc3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgZGI6Zz1cbjEwO2JyZWFrIGE7Y2FzZSBlYjpnPTk7YnJlYWsgYTtjYXNlIGdiOmc9MTE7YnJlYWsgYTtjYXNlIGpiOmc9MTQ7YnJlYWsgYTtjYXNlIGtiOmc9MTY7ZD1udWxsO2JyZWFrIGE7Y2FzZSBsYjpnPTIyO2JyZWFrIGF9dGhyb3cgRXJyb3IodSgxMzAsbnVsbD09YT9hOnR5cGVvZiBhLFwiXCIpKTt9Yj1TaChnLGMsYixlKTtiLmVsZW1lbnRUeXBlPWE7Yi50eXBlPWQ7Yi5leHBpcmF0aW9uVGltZT1mO3JldHVybiBifWZ1bmN0aW9uIFdnKGEsYixjLGQpe2E9U2goNyxhLGQsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIFRnKGEsYixjKXthPVNoKDYsYSxudWxsLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1cbmZ1bmN0aW9uIFZnKGEsYixjKXtiPVNoKDQsbnVsbCE9PWEuY2hpbGRyZW4/YS5jaGlsZHJlbjpbXSxhLmtleSxiKTtiLmV4cGlyYXRpb25UaW1lPWM7Yi5zdGF0ZU5vZGU9e2NvbnRhaW5lckluZm86YS5jb250YWluZXJJbmZvLHBlbmRpbmdDaGlsZHJlbjpudWxsLGltcGxlbWVudGF0aW9uOmEuaW1wbGVtZW50YXRpb259O3JldHVybiBifVxuZnVuY3Rpb24gYWsoYSxiLGMpe3RoaXMudGFnPWI7dGhpcy5jdXJyZW50PW51bGw7dGhpcy5jb250YWluZXJJbmZvPWE7dGhpcy5waW5nQ2FjaGU9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLmZpbmlzaGVkRXhwaXJhdGlvblRpbWU9MDt0aGlzLmZpbmlzaGVkV29yaz1udWxsO3RoaXMudGltZW91dEhhbmRsZT0tMTt0aGlzLnBlbmRpbmdDb250ZXh0PXRoaXMuY29udGV4dD1udWxsO3RoaXMuaHlkcmF0ZT1jO3RoaXMuY2FsbGJhY2tOb2RlPW51bGw7dGhpcy5jYWxsYmFja1ByaW9yaXR5PTkwO3RoaXMubGFzdEV4cGlyZWRUaW1lPXRoaXMubGFzdFBpbmdlZFRpbWU9dGhpcy5uZXh0S25vd25QZW5kaW5nTGV2ZWw9dGhpcy5sYXN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0U3VzcGVuZGVkVGltZT10aGlzLmZpcnN0UGVuZGluZ1RpbWU9MH1cbmZ1bmN0aW9uIEFqKGEsYil7dmFyIGM9YS5maXJzdFN1c3BlbmRlZFRpbWU7YT1hLmxhc3RTdXNwZW5kZWRUaW1lO3JldHVybiAwIT09YyYmYz49YiYmYTw9Yn1mdW5jdGlvbiB4aShhLGIpe3ZhciBjPWEuZmlyc3RTdXNwZW5kZWRUaW1lLGQ9YS5sYXN0U3VzcGVuZGVkVGltZTtjPGImJihhLmZpcnN0U3VzcGVuZGVkVGltZT1iKTtpZihkPmJ8fDA9PT1jKWEubGFzdFN1c3BlbmRlZFRpbWU9YjtiPD1hLmxhc3RQaW5nZWRUaW1lJiYoYS5sYXN0UGluZ2VkVGltZT0wKTtiPD1hLmxhc3RFeHBpcmVkVGltZSYmKGEubGFzdEV4cGlyZWRUaW1lPTApfVxuZnVuY3Rpb24geWkoYSxiKXtiPmEuZmlyc3RQZW5kaW5nVGltZSYmKGEuZmlyc3RQZW5kaW5nVGltZT1iKTt2YXIgYz1hLmZpcnN0U3VzcGVuZGVkVGltZTswIT09YyYmKGI+PWM/YS5maXJzdFN1c3BlbmRlZFRpbWU9YS5sYXN0U3VzcGVuZGVkVGltZT1hLm5leHRLbm93blBlbmRpbmdMZXZlbD0wOmI+PWEubGFzdFN1c3BlbmRlZFRpbWUmJihhLmxhc3RTdXNwZW5kZWRUaW1lPWIrMSksYj5hLm5leHRLbm93blBlbmRpbmdMZXZlbCYmKGEubmV4dEtub3duUGVuZGluZ0xldmVsPWIpKX1mdW5jdGlvbiBDaihhLGIpe3ZhciBjPWEubGFzdEV4cGlyZWRUaW1lO2lmKDA9PT1jfHxjPmIpYS5sYXN0RXhwaXJlZFRpbWU9Yn1cbmZ1bmN0aW9uIGJrKGEsYixjLGQpe3ZhciBlPWIuY3VycmVudCxmPUdnKCksZz1EZy5zdXNwZW5zZTtmPUhnKGYsZSxnKTthOmlmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO2I6e2lmKGRjKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHUoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoTChoLnR5cGUpKXtoPWguc3RhdGVOb2RlLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0O2JyZWFrIGJ9fWg9aC5yZXR1cm59d2hpbGUobnVsbCE9PWgpO3Rocm93IEVycm9yKHUoMTcxKSk7fWlmKDE9PT1jLnRhZyl7dmFyIGs9Yy50eXBlO2lmKEwoaykpe2M9RmYoYyxrLGgpO2JyZWFrIGF9fWM9aH1lbHNlIGM9QWY7bnVsbD09PWIuY29udGV4dD9iLmNvbnRleHQ9YzpiLnBlbmRpbmdDb250ZXh0PWM7Yj13ZyhmLGcpO2IucGF5bG9hZD17ZWxlbWVudDphfTtkPXZvaWQgMD09PVxuZD9udWxsOmQ7bnVsbCE9PWQmJihiLmNhbGxiYWNrPWQpO3hnKGUsYik7SWcoZSxmKTtyZXR1cm4gZn1mdW5jdGlvbiBjayhhKXthPWEuY3VycmVudDtpZighYS5jaGlsZClyZXR1cm4gbnVsbDtzd2l0Y2goYS5jaGlsZC50YWcpe2Nhc2UgNTpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGU7ZGVmYXVsdDpyZXR1cm4gYS5jaGlsZC5zdGF0ZU5vZGV9fWZ1bmN0aW9uIGRrKGEsYil7YT1hLm1lbW9pemVkU3RhdGU7bnVsbCE9PWEmJm51bGwhPT1hLmRlaHlkcmF0ZWQmJmEucmV0cnlUaW1lPGImJihhLnJldHJ5VGltZT1iKX1mdW5jdGlvbiBlayhhLGIpe2RrKGEsYik7KGE9YS5hbHRlcm5hdGUpJiZkayhhLGIpfVxuZnVuY3Rpb24gZmsoYSxiLGMpe2M9bnVsbCE9YyYmITA9PT1jLmh5ZHJhdGU7dmFyIGQ9bmV3IGFrKGEsYixjKSxlPVNoKDMsbnVsbCxudWxsLDI9PT1iPzc6MT09PWI/MzowKTtkLmN1cnJlbnQ9ZTtlLnN0YXRlTm9kZT1kO3VnKGUpO2FbT2RdPWQuY3VycmVudDtjJiYwIT09YiYmSmMoYSw5PT09YS5ub2RlVHlwZT9hOmEub3duZXJEb2N1bWVudCk7dGhpcy5faW50ZXJuYWxSb290PWR9ZmsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtiayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtmay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztiayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbT2RdPW51bGx9KX07XG5mdW5jdGlvbiBnayhhKXtyZXR1cm4hKCFhfHwxIT09YS5ub2RlVHlwZSYmOSE9PWEubm9kZVR5cGUmJjExIT09YS5ub2RlVHlwZSYmKDghPT1hLm5vZGVUeXBlfHxcIiByZWFjdC1tb3VudC1wb2ludC11bnN0YWJsZSBcIiE9PWEubm9kZVZhbHVlKSl9ZnVuY3Rpb24gaGsoYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBmayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIGlrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9Y2soZyk7aC5jYWxsKGEpfX1iayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPWhrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWNrKGcpO2suY2FsbChhKX19TmooZnVuY3Rpb24oKXtiayhiLGcsYSxlKX0pfXJldHVybiBjayhnKX1mdW5jdGlvbiBqayhhLGIsYyl7dmFyIGQ9Mzxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbM10/YXJndW1lbnRzWzNdOm51bGw7cmV0dXJueyQkdHlwZW9mOiRhLGtleTpudWxsPT1kP251bGw6XCJcIitkLGNoaWxkcmVuOmEsY29udGFpbmVySW5mbzpiLGltcGxlbWVudGF0aW9uOmN9fVxud2M9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9aGcoR2coKSwxNTAsMTAwKTtJZyhhLGIpO2VrKGEsYil9fTt4Yz1mdW5jdGlvbihhKXsxMz09PWEudGFnJiYoSWcoYSwzKSxlayhhLDMpKX07eWM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9R2coKTtiPUhnKGIsYSxudWxsKTtJZyhhLGIpO2VrKGEsYil9fTtcbnphPWZ1bmN0aW9uKGEsYixjKXtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Q2IoYSxjKTtiPWMubmFtZTtpZihcInJhZGlvXCI9PT1jLnR5cGUmJm51bGwhPWIpe2ZvcihjPWE7Yy5wYXJlbnROb2RlOyljPWMucGFyZW50Tm9kZTtjPWMucXVlcnlTZWxlY3RvckFsbChcImlucHV0W25hbWU9XCIrSlNPTi5zdHJpbmdpZnkoXCJcIitiKSsnXVt0eXBlPVwicmFkaW9cIl0nKTtmb3IoYj0wO2I8Yy5sZW5ndGg7YisrKXt2YXIgZD1jW2JdO2lmKGQhPT1hJiZkLmZvcm09PT1hLmZvcm0pe3ZhciBlPVFkKGQpO2lmKCFlKXRocm93IEVycm9yKHUoOTApKTt5YihkKTtDYihkLGUpfX19YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6S2IoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6Yj1jLnZhbHVlLG51bGwhPWImJkhiKGEsISFjLm11bHRpcGxlLGIsITEpfX07RmE9TWo7XG5HYT1mdW5jdGlvbihhLGIsYyxkLGUpe3ZhciBmPVc7V3w9NDt0cnl7cmV0dXJuIGNnKDk4LGEuYmluZChudWxsLGIsYyxkLGUpKX1maW5hbGx5e1c9ZixXPT09ViYmZ2coKX19O0hhPWZ1bmN0aW9uKCl7KFcmKDF8Zmp8Z2opKT09PVYmJihMaigpLERqKCkpfTtJYT1mdW5jdGlvbihhLGIpe3ZhciBjPVc7V3w9Mjt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtXPWMsVz09PVYmJmdnKCl9fTtmdW5jdGlvbiBrayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFnayhiKSl0aHJvdyBFcnJvcih1KDIwMCkpO3JldHVybiBqayhhLGIsbnVsbCxjKX12YXIgbGs9e0V2ZW50czpbTmMsUGQsUWQseGEsdGEsWGQsZnVuY3Rpb24oYSl7amMoYSxXZCl9LERhLEVhLGlkLG1jLERqLHtjdXJyZW50OiExfV19O1xuKGZ1bmN0aW9uKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIFlqKG4oe30sYSx7b3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsc2V0U3VzcGVuc2VIYW5kbGVyOm51bGwsc2NoZWR1bGVVcGRhdGU6bnVsbCxjdXJyZW50RGlzcGF0Y2hlclJlZjpXYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLGZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyOmZ1bmN0aW9uKGEpe2E9aGMoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOmZ1bmN0aW9uKGEpe3JldHVybiBiP2IoYSk6bnVsbH0sZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoOm51bGwsc2NoZWR1bGVSZWZyZXNoOm51bGwsc2NoZWR1bGVSb290Om51bGwsc2V0UmVmcmVzaEhhbmRsZXI6bnVsbCxnZXRDdXJyZW50RmliZXI6bnVsbH0pKX0pKHtmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp0YyxidW5kbGVUeXBlOjAsdmVyc2lvbjpcIjE2LjEzLjFcIixcbnJlbmRlcmVyUGFja2FnZU5hbWU6XCJyZWFjdC1kb21cIn0pO2V4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9bGs7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9a2s7ZXhwb3J0cy5maW5kRE9NTm9kZT1mdW5jdGlvbihhKXtpZihudWxsPT1hKXJldHVybiBudWxsO2lmKDE9PT1hLm5vZGVUeXBlKXJldHVybiBhO3ZhciBiPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjtpZih2b2lkIDA9PT1iKXtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5yZW5kZXIpdGhyb3cgRXJyb3IodSgxODgpKTt0aHJvdyBFcnJvcih1KDI2OCxPYmplY3Qua2V5cyhhKSkpO31hPWhjKGIpO2E9bnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZTtyZXR1cm4gYX07XG5leHBvcnRzLmZsdXNoU3luYz1mdW5jdGlvbihhLGIpe2lmKChXJihmanxnaikpIT09Vil0aHJvdyBFcnJvcih1KDE4NykpO3ZhciBjPVc7V3w9MTt0cnl7cmV0dXJuIGNnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1c9YyxnZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITAsYyl9O2V4cG9ydHMucmVuZGVyPWZ1bmN0aW9uKGEsYixjKXtpZighZ2soYikpdGhyb3cgRXJyb3IodSgyMDApKTtyZXR1cm4gaWsobnVsbCxhLGIsITEsYyl9O1xuZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFnayhhKSl0aHJvdyBFcnJvcih1KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oTmooZnVuY3Rpb24oKXtpayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbT2RdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1NajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiBrayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIWdrKGMpKXRocm93IEVycm9yKHUoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbEZpYmVyKXRocm93IEVycm9yKHUoMzgpKTtyZXR1cm4gaWsoYSxiLGMsITEsZCl9O2V4cG9ydHMudmVyc2lvbj1cIjE2LjEzLjFcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvc2NoZWR1bGVyLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjAuMTkuMVxuICogc2NoZWR1bGVyLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBmLGcsaCxrLGw7XG5pZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJmdW5jdGlvblwiIT09dHlwZW9mIE1lc3NhZ2VDaGFubmVsKXt2YXIgcD1udWxsLHE9bnVsbCx0PWZ1bmN0aW9uKCl7aWYobnVsbCE9PXApdHJ5e3ZhciBhPWV4cG9ydHMudW5zdGFibGVfbm93KCk7cCghMCxhKTtwPW51bGx9Y2F0Y2goYil7dGhyb3cgc2V0VGltZW91dCh0LDApLGI7fX0sdT1EYXRlLm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93KCktdX07Zj1mdW5jdGlvbihhKXtudWxsIT09cD9zZXRUaW1lb3V0KGYsMCxhKToocD1hLHNldFRpbWVvdXQodCwwKSl9O2c9ZnVuY3Rpb24oYSxiKXtxPXNldFRpbWVvdXQoYSxiKX07aD1mdW5jdGlvbigpe2NsZWFyVGltZW91dChxKX07az1mdW5jdGlvbigpe3JldHVybiExfTtsPWV4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oKXt9fWVsc2V7dmFyIHc9d2luZG93LnBlcmZvcm1hbmNlLHg9d2luZG93LkRhdGUsXG55PXdpbmRvdy5zZXRUaW1lb3V0LHo9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciBBPXdpbmRvdy5jYW5jZWxBbmltYXRpb25GcmFtZTtcImZ1bmN0aW9uXCIhPT10eXBlb2Ygd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgcmVxdWVzdEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL2ZiLm1lL3JlYWN0LXBvbHlmaWxsc1wiKTtcImZ1bmN0aW9uXCIhPT10eXBlb2YgQSYmY29uc29sZS5lcnJvcihcIlRoaXMgYnJvd3NlciBkb2Vzbid0IHN1cHBvcnQgY2FuY2VsQW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vZmIubWUvcmVhY3QtcG9seWZpbGxzXCIpfWlmKFwib2JqZWN0XCI9PT1cbnR5cGVvZiB3JiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygdy5ub3cpZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gdy5ub3coKX07ZWxzZXt2YXIgQj14Lm5vdygpO2V4cG9ydHMudW5zdGFibGVfbm93PWZ1bmN0aW9uKCl7cmV0dXJuIHgubm93KCktQn19dmFyIEM9ITEsRD1udWxsLEU9LTEsRj01LEc9MDtrPWZ1bmN0aW9uKCl7cmV0dXJuIGV4cG9ydHMudW5zdGFibGVfbm93KCk+PUd9O2w9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWVyYXRlcyBoaWdoZXIgdGhhbiAxMjUgZnBzIGlzIG5vdCB1bnN1cHBvcnRlZFwiKTpGPTA8YT9NYXRoLmZsb29yKDFFMy9hKTo1fTt2YXIgSD1uZXcgTWVzc2FnZUNoYW5uZWwsST1ILnBvcnQyO0gucG9ydDEub25tZXNzYWdlPVxuZnVuY3Rpb24oKXtpZihudWxsIT09RCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtHPWErRjt0cnl7RCghMCxhKT9JLnBvc3RNZXNzYWdlKG51bGwpOihDPSExLEQ9bnVsbCl9Y2F0Y2goYil7dGhyb3cgSS5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBDPSExfTtmPWZ1bmN0aW9uKGEpe0Q9YTtDfHwoQz0hMCxJLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0U9eShmdW5jdGlvbigpe2EoZXhwb3J0cy51bnN0YWJsZV9ub3coKSl9LGIpfTtoPWZ1bmN0aW9uKCl7eihFKTtFPS0xfX1mdW5jdGlvbiBKKGEsYil7dmFyIGM9YS5sZW5ndGg7YS5wdXNoKGIpO2E6Zm9yKDs7KXt2YXIgZD1jLTE+Pj4xLGU9YVtkXTtpZih2b2lkIDAhPT1lJiYwPEsoZSxiKSlhW2RdPWIsYVtjXT1lLGM9ZDtlbHNlIGJyZWFrIGF9fWZ1bmN0aW9uIEwoYSl7YT1hWzBdO3JldHVybiB2b2lkIDA9PT1hP251bGw6YX1cbmZ1bmN0aW9uIE0oYSl7dmFyIGI9YVswXTtpZih2b2lkIDAhPT1iKXt2YXIgYz1hLnBvcCgpO2lmKGMhPT1iKXthWzBdPWM7YTpmb3IodmFyIGQ9MCxlPWEubGVuZ3RoO2Q8ZTspe3ZhciBtPTIqKGQrMSktMSxuPWFbbV0sdj1tKzEscj1hW3ZdO2lmKHZvaWQgMCE9PW4mJjA+SyhuLGMpKXZvaWQgMCE9PXImJjA+SyhyLG4pPyhhW2RdPXIsYVt2XT1jLGQ9dik6KGFbZF09bixhW21dPWMsZD1tKTtlbHNlIGlmKHZvaWQgMCE9PXImJjA+SyhyLGMpKWFbZF09cixhW3ZdPWMsZD12O2Vsc2UgYnJlYWsgYX19cmV0dXJuIGJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gSyhhLGIpe3ZhciBjPWEuc29ydEluZGV4LWIuc29ydEluZGV4O3JldHVybiAwIT09Yz9jOmEuaWQtYi5pZH12YXIgTj1bXSxPPVtdLFA9MSxRPW51bGwsUj0zLFM9ITEsVD0hMSxVPSExO1xuZnVuY3Rpb24gVihhKXtmb3IodmFyIGI9TChPKTtudWxsIT09Yjspe2lmKG51bGw9PT1iLmNhbGxiYWNrKU0oTyk7ZWxzZSBpZihiLnN0YXJ0VGltZTw9YSlNKE8pLGIuc29ydEluZGV4PWIuZXhwaXJhdGlvblRpbWUsSihOLGIpO2Vsc2UgYnJlYWs7Yj1MKE8pfX1mdW5jdGlvbiBXKGEpe1U9ITE7VihhKTtpZighVClpZihudWxsIT09TChOKSlUPSEwLGYoWCk7ZWxzZXt2YXIgYj1MKE8pO251bGwhPT1iJiZnKFcsYi5zdGFydFRpbWUtYSl9fVxuZnVuY3Rpb24gWChhLGIpe1Q9ITE7VSYmKFU9ITEsaCgpKTtTPSEwO3ZhciBjPVI7dHJ5e1YoYik7Zm9yKFE9TChOKTtudWxsIT09USYmKCEoUS5leHBpcmF0aW9uVGltZT5iKXx8YSYmIWsoKSk7KXt2YXIgZD1RLmNhbGxiYWNrO2lmKG51bGwhPT1kKXtRLmNhbGxiYWNrPW51bGw7Uj1RLnByaW9yaXR5TGV2ZWw7dmFyIGU9ZChRLmV4cGlyYXRpb25UaW1lPD1iKTtiPWV4cG9ydHMudW5zdGFibGVfbm93KCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGU/US5jYWxsYmFjaz1lOlE9PT1MKE4pJiZNKE4pO1YoYil9ZWxzZSBNKE4pO1E9TChOKX1pZihudWxsIT09USl2YXIgbT0hMDtlbHNle3ZhciBuPUwoTyk7bnVsbCE9PW4mJmcoVyxuLnN0YXJ0VGltZS1iKTttPSExfXJldHVybiBtfWZpbmFsbHl7UT1udWxsLFI9YyxTPSExfX1cbmZ1bmN0aW9uIFkoYSl7c3dpdGNoKGEpe2Nhc2UgMTpyZXR1cm4tMTtjYXNlIDI6cmV0dXJuIDI1MDtjYXNlIDU6cmV0dXJuIDEwNzM3NDE4MjM7Y2FzZSA0OnJldHVybiAxRTQ7ZGVmYXVsdDpyZXR1cm4gNUUzfX12YXIgWj1sO2V4cG9ydHMudW5zdGFibGVfSWRsZVByaW9yaXR5PTU7ZXhwb3J0cy51bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eT0xO2V4cG9ydHMudW5zdGFibGVfTG93UHJpb3JpdHk9NDtleHBvcnRzLnVuc3RhYmxlX05vcm1hbFByaW9yaXR5PTM7ZXhwb3J0cy51bnN0YWJsZV9Qcm9maWxpbmc9bnVsbDtleHBvcnRzLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5PTI7ZXhwb3J0cy51bnN0YWJsZV9jYW5jZWxDYWxsYmFjaz1mdW5jdGlvbihhKXthLmNhbGxiYWNrPW51bGx9O2V4cG9ydHMudW5zdGFibGVfY29udGludWVFeGVjdXRpb249ZnVuY3Rpb24oKXtUfHxTfHwoVD0hMCxmKFgpKX07XG5leHBvcnRzLnVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsPWZ1bmN0aW9uKCl7cmV0dXJuIFJ9O2V4cG9ydHMudW5zdGFibGVfZ2V0Rmlyc3RDYWxsYmFja05vZGU9ZnVuY3Rpb24oKXtyZXR1cm4gTChOKX07ZXhwb3J0cy51bnN0YWJsZV9uZXh0PWZ1bmN0aW9uKGEpe3N3aXRjaChSKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzp2YXIgYj0zO2JyZWFrO2RlZmF1bHQ6Yj1SfXZhciBjPVI7Uj1iO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7Uj1jfX07ZXhwb3J0cy51bnN0YWJsZV9wYXVzZUV4ZWN1dGlvbj1mdW5jdGlvbigpe307ZXhwb3J0cy51bnN0YWJsZV9yZXF1ZXN0UGFpbnQ9WjtleHBvcnRzLnVuc3RhYmxlX3J1bldpdGhQcmlvcml0eT1mdW5jdGlvbihhLGIpe3N3aXRjaChhKXtjYXNlIDE6Y2FzZSAyOmNhc2UgMzpjYXNlIDQ6Y2FzZSA1OmJyZWFrO2RlZmF1bHQ6YT0zfXZhciBjPVI7Uj1hO3RyeXtyZXR1cm4gYigpfWZpbmFsbHl7Uj1jfX07XG5leHBvcnRzLnVuc3RhYmxlX3NjaGVkdWxlQ2FsbGJhY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWV4cG9ydHMudW5zdGFibGVfbm93KCk7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBjJiZudWxsIT09Yyl7dmFyIGU9Yy5kZWxheTtlPVwibnVtYmVyXCI9PT10eXBlb2YgZSYmMDxlP2QrZTpkO2M9XCJudW1iZXJcIj09PXR5cGVvZiBjLnRpbWVvdXQ/Yy50aW1lb3V0OlkoYSl9ZWxzZSBjPVkoYSksZT1kO2M9ZStjO2E9e2lkOlArKyxjYWxsYmFjazpiLHByaW9yaXR5TGV2ZWw6YSxzdGFydFRpbWU6ZSxleHBpcmF0aW9uVGltZTpjLHNvcnRJbmRleDotMX07ZT5kPyhhLnNvcnRJbmRleD1lLEooTyxhKSxudWxsPT09TChOKSYmYT09PUwoTykmJihVP2goKTpVPSEwLGcoVyxlLWQpKSk6KGEuc29ydEluZGV4PWMsSihOLGEpLFR8fFN8fChUPSEwLGYoWCkpKTtyZXR1cm4gYX07XG5leHBvcnRzLnVuc3RhYmxlX3Nob3VsZFlpZWxkPWZ1bmN0aW9uKCl7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtWKGEpO3ZhciBiPUwoTik7cmV0dXJuIGIhPT1RJiZudWxsIT09USYmbnVsbCE9PWImJm51bGwhPT1iLmNhbGxiYWNrJiZiLnN0YXJ0VGltZTw9YSYmYi5leHBpcmF0aW9uVGltZTxRLmV4cGlyYXRpb25UaW1lfHxrKCl9O2V4cG9ydHMudW5zdGFibGVfd3JhcENhbGxiYWNrPWZ1bmN0aW9uKGEpe3ZhciBiPVI7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGM9UjtSPWI7dHJ5e3JldHVybiBhLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1maW5hbGx5e1I9Y319fTtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgUmVhY3RQcm9wVHlwZXNTZWNyZXQgPSByZXF1aXJlKCcuL2xpYi9SZWFjdFByb3BUeXBlc1NlY3JldCcpO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge31cbmZ1bmN0aW9uIGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQoKSB7fVxuZW1wdHlGdW5jdGlvbldpdGhSZXNldC5yZXNldFdhcm5pbmdDYWNoZSA9IGVtcHR5RnVuY3Rpb247XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgZXJyID0gbmV3IEVycm9yKFxuICAgICAgJ0NhbGxpbmcgUHJvcFR5cGVzIHZhbGlkYXRvcnMgZGlyZWN0bHkgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgYHByb3AtdHlwZXNgIHBhY2thZ2UuICcgK1xuICAgICAgJ1VzZSBQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMoKSB0byBjYWxsIHRoZW0uICcgK1xuICAgICAgJ1JlYWQgbW9yZSBhdCBodHRwOi8vZmIubWUvdXNlLWNoZWNrLXByb3AtdHlwZXMnXG4gICAgKTtcbiAgICBlcnIubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB0aHJvdyBlcnI7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBlbGVtZW50VHlwZTogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltLFxuXG4gICAgY2hlY2tQcm9wVHlwZXM6IGVtcHR5RnVuY3Rpb25XaXRoUmVzZXQsXG4gICAgcmVzZXRXYXJuaW5nQ2FjaGU6IGVtcHR5RnVuY3Rpb25cbiAgfTtcblxuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9ICdTRUNSRVRfRE9fTk9UX1BBU1NfVEhJU19PUl9ZT1VfV0lMTF9CRV9GSVJFRCc7XG5cbm1vZHVsZS5leHBvcnRzID0gUmVhY3RQcm9wVHlwZXNTZWNyZXQ7XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCIsIFwiLi9sb2FkZXJcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpLCByZXF1aXJlKFwiLi9sb2FkZXJcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzLCBnbG9iYWwubG9hZGVyKTtcbiAgICBnbG9iYWwuaW5kZXggPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIF9yZWFjdCwgX3Byb3BUeXBlcywgX2xvYWRlcikge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5kZWZhdWx0ID0gTG9hZGVyO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgdmFyIF9zbGljZWRUb0FycmF5ID0gZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIHNsaWNlSXRlcmF0b3IoYXJyLCBpKSB7XG4gICAgICB2YXIgX2FyciA9IFtdO1xuICAgICAgdmFyIF9uID0gdHJ1ZTtcbiAgICAgIHZhciBfZCA9IGZhbHNlO1xuICAgICAgdmFyIF9lID0gdW5kZWZpbmVkO1xuXG4gICAgICB0cnkge1xuICAgICAgICBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7XG4gICAgICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhaztcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgIF9kID0gdHJ1ZTtcbiAgICAgICAgX2UgPSBlcnI7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGlmICghX24gJiYgX2lbXCJyZXR1cm5cIl0pIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gX2FycjtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyciwgaSkge1xuICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkge1xuICAgICAgICByZXR1cm4gYXJyO1xuICAgICAgfSBlbHNlIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpIHtcbiAgICAgICAgcmV0dXJuIHNsaWNlSXRlcmF0b3IoYXJyLCBpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlXCIpO1xuICAgICAgfVxuICAgIH07XG4gIH0oKTtcblxuICB2YXIgY29tcG9uZW50TmFtZXMgPSBbXCJBdWRpb1wiLCBcIkJhbGxUcmlhbmdsZVwiLCBcIkJhcnNcIiwgXCJDaXJjbGVzXCIsIFwiR3JpZFwiLCBcIkhlYXJ0c1wiLCBcIk92YWxcIiwgXCJQdWZmXCIsIFwiUmluZ3NcIiwgXCJUYWlsU3BpblwiLCBcIlRocmVlRG90c1wiLCBcIldhdGNoXCIsIFwiUmV2b2x2aW5nRG90XCIsIFwiVHJpYW5nbGVcIiwgXCJQbGFuZVwiLCBcIk11dGF0aW5nRG90c1wiLCBcIkNyYWRsZUxvYWRlclwiXTtcblxuICBmdW5jdGlvbiBjb21wb25lbnROYW1lKHR5cGUpIHtcbiAgICBpZiAoY29tcG9uZW50TmFtZXMuaW5jbHVkZXModHlwZSkpIHtcbiAgICAgIHJldHVybiBfbG9hZGVyLlNwaW5uZXJbdHlwZV07XG4gICAgfVxuICAgIHJldHVybiBfbG9hZGVyLlNwaW5uZXIuQXVkaW87XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7bnVsbH1cbiAgICovXG4gIGZ1bmN0aW9uIExvYWRlcihwcm9wcykge1xuICAgIHZhciBfdXNlU3RhdGUgPSAoMCwgX3JlYWN0LnVzZVN0YXRlKSh0cnVlKSxcbiAgICAgICAgX3VzZVN0YXRlMiA9IF9zbGljZWRUb0FycmF5KF91c2VTdGF0ZSwgMiksXG4gICAgICAgIGRpc3BsYXkgPSBfdXNlU3RhdGUyWzBdLFxuICAgICAgICBzZXREaXNwbGF5ID0gX3VzZVN0YXRlMlsxXTtcblxuICAgICgwLCBfcmVhY3QudXNlRWZmZWN0KShmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGltZXIgPSB2b2lkIDA7XG4gICAgICBpZiAocHJvcHMudGltZW91dCAmJiBwcm9wcy50aW1lb3V0ID4gMCkge1xuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHNldERpc3BsYXkoZmFsc2UpO1xuICAgICAgICB9LCBwcm9wcy50aW1lb3V0KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHRpbWVyKSBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgfTtcbiAgICB9KTtcblxuICAgIGlmICghcHJvcHMudmlzaWJsZSB8fCBwcm9wcy52aXNpYmxlID09PSBcImZhbHNlXCIpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gZGlzcGxheSA/IF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHsgXCJhcmlhLWJ1c3lcIjogXCJ0cnVlXCIsIGNsYXNzTmFtZTogcHJvcHMuY2xhc3NOYW1lLCBzdHlsZTogcHJvcHMuc3R5bGUgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KGNvbXBvbmVudE5hbWUocHJvcHMudHlwZSksIF9leHRlbmRzKHt9LCBwcm9wcykpXG4gICAgKSA6IG51bGw7XG4gIH1cblxuICBMb2FkZXIucHJvcFR5cGVzID0ge1xuICAgIHR5cGU6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2YoW10uY29uY2F0KGNvbXBvbmVudE5hbWVzKSksXG4gICAgc3R5bGU6IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0T2YoX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcpLFxuICAgIGNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgdmlzaWJsZTogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuYm9vbCwgX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmddKSxcbiAgICB0aW1lb3V0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlclxuICB9O1xuXG4gIExvYWRlci5kZWZhdWx0UHJvcHMgPSB7XG4gICAgdHlwZTogXCJBdWRpb1wiLFxuICAgIHN0eWxlOiB7fSxcbiAgICBjbGFzc05hbWU6IFwiXCIsXG4gICAgdmlzaWJsZTogdHJ1ZSxcbiAgICB0aW1lb3V0OiAwXG4gIH07XG59KTsiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW1wiZXhwb3J0c1wiLCBcIi4vQ2lyY2xlc1wiLCBcIi4vV2F0Y2hcIiwgXCIuL0F1ZGlvXCIsIFwiLi9CYWxsVHJpYW5nbGVcIiwgXCIuL0JhcnNcIiwgXCIuL0NyYWRsZUxvYWRlclwiLCBcIi4vR3JpZFwiLCBcIi4vSGVhcnRzXCIsIFwiLi9NdXRhdGluZ0RvdHNcIiwgXCIuL092YWxcIiwgXCIuL1BsYW5lXCIsIFwiLi9QdWZmXCIsIFwiLi9SZXZvbHZpbmdEb3RcIiwgXCIuL1JpbmdzXCIsIFwiLi9UYWlsU3BpblwiLCBcIi4vVGhyZWVEb3RzXCIsIFwiLi9UcmlhbmdsZVwiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoXCIuL0NpcmNsZXNcIiksIHJlcXVpcmUoXCIuL1dhdGNoXCIpLCByZXF1aXJlKFwiLi9BdWRpb1wiKSwgcmVxdWlyZShcIi4vQmFsbFRyaWFuZ2xlXCIpLCByZXF1aXJlKFwiLi9CYXJzXCIpLCByZXF1aXJlKFwiLi9DcmFkbGVMb2FkZXJcIiksIHJlcXVpcmUoXCIuL0dyaWRcIiksIHJlcXVpcmUoXCIuL0hlYXJ0c1wiKSwgcmVxdWlyZShcIi4vTXV0YXRpbmdEb3RzXCIpLCByZXF1aXJlKFwiLi9PdmFsXCIpLCByZXF1aXJlKFwiLi9QbGFuZVwiKSwgcmVxdWlyZShcIi4vUHVmZlwiKSwgcmVxdWlyZShcIi4vUmV2b2x2aW5nRG90XCIpLCByZXF1aXJlKFwiLi9SaW5nc1wiKSwgcmVxdWlyZShcIi4vVGFpbFNwaW5cIiksIHJlcXVpcmUoXCIuL1RocmVlRG90c1wiKSwgcmVxdWlyZShcIi4vVHJpYW5nbGVcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLkNpcmNsZXMsIGdsb2JhbC5XYXRjaCwgZ2xvYmFsLkF1ZGlvLCBnbG9iYWwuQmFsbFRyaWFuZ2xlLCBnbG9iYWwuQmFycywgZ2xvYmFsLkNyYWRsZUxvYWRlciwgZ2xvYmFsLkdyaWQsIGdsb2JhbC5IZWFydHMsIGdsb2JhbC5NdXRhdGluZ0RvdHMsIGdsb2JhbC5PdmFsLCBnbG9iYWwuUGxhbmUsIGdsb2JhbC5QdWZmLCBnbG9iYWwuUmV2b2x2aW5nRG90LCBnbG9iYWwuUmluZ3MsIGdsb2JhbC5UYWlsU3BpbiwgZ2xvYmFsLlRocmVlRG90cywgZ2xvYmFsLlRyaWFuZ2xlKTtcbiAgICBnbG9iYWwuaW5kZXggPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIF9DaXJjbGVzLCBfV2F0Y2gsIF9BdWRpbywgX0JhbGxUcmlhbmdsZSwgX0JhcnMsIF9DcmFkbGVMb2FkZXIsIF9HcmlkLCBfSGVhcnRzLCBfTXV0YXRpbmdEb3RzLCBfT3ZhbCwgX1BsYW5lLCBfUHVmZiwgX1Jldm9sdmluZ0RvdCwgX1JpbmdzLCBfVGFpbFNwaW4sIF9UaHJlZURvdHMsIF9UcmlhbmdsZSkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5TcGlubmVyID0gdW5kZWZpbmVkO1xuICB2YXIgU3Bpbm5lciA9IGV4cG9ydHMuU3Bpbm5lciA9IHtcbiAgICBDaXJjbGVzOiBfQ2lyY2xlcy5DaXJjbGVzLFxuICAgIEF1ZGlvOiBfQXVkaW8uQXVkaW8sXG4gICAgQmFsbFRyaWFuZ2xlOiBfQmFsbFRyaWFuZ2xlLkJhbGxUcmlhbmdsZSxcbiAgICBCYXJzOiBfQmFycy5CYXJzLFxuICAgIENyYWRsZUxvYWRlcjogX0NyYWRsZUxvYWRlci5DcmFkbGVMb2FkZXIsXG4gICAgR3JpZDogX0dyaWQuR3JpZCxcbiAgICBIZWFydHM6IF9IZWFydHMuSGVhcnRzLFxuICAgIE11dGF0aW5nRG90czogX011dGF0aW5nRG90cy5NdXRhdGluZ0RvdHMsXG4gICAgT3ZhbDogX092YWwuT3ZhbCxcbiAgICBQbGFuZTogX1BsYW5lLlBsYW5lLFxuICAgIFB1ZmY6IF9QdWZmLlB1ZmYsXG4gICAgUmV2b2x2aW5nRG90OiBfUmV2b2x2aW5nRG90LlJldm9sdmluZ0RvdCxcbiAgICBSaW5nczogX1JpbmdzLlJpbmdzLFxuICAgIFRhaWxTcGluOiBfVGFpbFNwaW4uVGFpbFNwaW4sXG4gICAgVGhyZWVEb3RzOiBfVGhyZWVEb3RzLlRocmVlRG90cyxcbiAgICBUcmlhbmdsZTogX1RyaWFuZ2xlLlRyaWFuZ2xlLFxuICAgIFdhdGNoOiBfV2F0Y2guV2F0Y2hcbiAgfTtcbn0pOyIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCJdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZShcInJlYWN0XCIpLCByZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG1vZCA9IHtcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICBmYWN0b3J5KG1vZC5leHBvcnRzLCBnbG9iYWwucmVhY3QsIGdsb2JhbC5wcm9wVHlwZXMpO1xuICAgIGdsb2JhbC5DaXJjbGVzID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuQ2lyY2xlcyA9IHVuZGVmaW5lZDtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgQ2lyY2xlcyA9IGV4cG9ydHMuQ2lyY2xlcyA9IGZ1bmN0aW9uIENpcmNsZXMocHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcInN2Z1wiLFxuICAgICAge1xuICAgICAgICB3aWR0aDogcHJvcHMud2lkdGgsXG4gICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICB2aWV3Qm94OiBcIjAgMCAxMzUgMTM1XCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIGZpbGw6IHByb3BzLmNvbG9yLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJwYXRoXCIsXG4gICAgICAgIHsgZDogXCJNNjcuNDQ3IDU4YzUuNTIzIDAgMTAtNC40NzcgMTAtMTBzLTQuNDc3LTEwLTEwLTEwLTEwIDQuNDc3LTEwIDEwIDQuNDc3IDEwIDEwIDEwem05LjQ0OCA5LjQ0N2MwIDUuNTIzIDQuNDc3IDEwIDEwIDEwIDUuNTIyIDAgMTAtNC40NzcgMTAtMTBzLTQuNDc4LTEwLTEwLTEwYy01LjUyMyAwLTEwIDQuNDc3LTEwIDEwem0tOS40NDggOS40NDhjLTUuNTIzIDAtMTAgNC40NzctMTAgMTAgMCA1LjUyMiA0LjQ3NyAxMCAxMCAxMHMxMC00LjQ3OCAxMC0xMGMwLTUuNTIzLTQuNDc3LTEwLTEwLTEwek01OCA2Ny40NDdjMC01LjUyMy00LjQ3Ny0xMC0xMC0xMHMtMTAgNC40NzctMTAgMTAgNC40NzcgMTAgMTAgMTAgMTAtNC40NzcgMTAtMTB6XCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlVHJhbnNmb3JtXCIsIHtcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInRyYW5zZm9ybVwiLFxuICAgICAgICAgIHR5cGU6IFwicm90YXRlXCIsXG4gICAgICAgICAgZnJvbTogXCIwIDY3IDY3XCIsXG4gICAgICAgICAgdG86IFwiLTM2MCA2NyA2N1wiLFxuICAgICAgICAgIGR1cjogXCIyLjVzXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwicGF0aFwiLFxuICAgICAgICB7IGQ6IFwiTTI4LjE5IDQwLjMxYzYuNjI3IDAgMTItNS4zNzQgMTItMTIgMC02LjYyOC01LjM3My0xMi0xMi0xMi02LjYyOCAwLTEyIDUuMzcyLTEyIDEyIDAgNi42MjYgNS4zNzIgMTIgMTIgMTJ6bTMwLjcyLTE5LjgyNWM0LjY4NiA0LjY4NyAxMi4yODQgNC42ODcgMTYuOTcgMCA0LjY4Ni00LjY4NiA0LjY4Ni0xMi4yODQgMC0xNi45Ny00LjY4Ni00LjY4Ny0xMi4yODQtNC42ODctMTYuOTcgMC00LjY4NyA0LjY4Ni00LjY4NyAxMi4yODQgMCAxNi45N3ptMzUuNzQgNy43MDVjMCA2LjYyNyA1LjM3IDEyIDEyIDEyIDYuNjI2IDAgMTItNS4zNzMgMTItMTIgMC02LjYyOC01LjM3NC0xMi0xMi0xMi02LjYzIDAtMTIgNS4zNzItMTIgMTJ6bTE5LjgyMiAzMC43MmMtNC42ODYgNC42ODYtNC42ODYgMTIuMjg0IDAgMTYuOTcgNC42ODcgNC42ODYgMTIuMjg1IDQuNjg2IDE2Ljk3IDAgNC42ODctNC42ODYgNC42ODctMTIuMjg0IDAtMTYuOTctNC42ODUtNC42ODctMTIuMjgzLTQuNjg3LTE2Ljk3IDB6bS03LjcwNCAzNS43NGMtNi42MjcgMC0xMiA1LjM3LTEyIDEyIDAgNi42MjYgNS4zNzMgMTIgMTIgMTJzMTItNS4zNzQgMTItMTJjMC02LjYzLTUuMzczLTEyLTEyLTEyem0tMzAuNzIgMTkuODIyYy00LjY4Ni00LjY4Ni0xMi4yODQtNC42ODYtMTYuOTcgMC00LjY4NiA0LjY4Ny00LjY4NiAxMi4yODUgMCAxNi45NyA0LjY4NiA0LjY4NyAxMi4yODQgNC42ODcgMTYuOTcgMCA0LjY4Ny00LjY4NSA0LjY4Ny0xMi4yODMgMC0xNi45N3ptLTM1Ljc0LTcuNzA0YzAtNi42MjctNS4zNzItMTItMTItMTItNi42MjYgMC0xMiA1LjM3My0xMiAxMnM1LjM3NCAxMiAxMiAxMmM2LjYyOCAwIDEyLTUuMzczIDEyLTEyem0tMTkuODIzLTMwLjcyYzQuNjg3LTQuNjg2IDQuNjg3LTEyLjI4NCAwLTE2Ljk3LTQuNjg2LTQuNjg2LTEyLjI4NC00LjY4Ni0xNi45NyAwLTQuNjg3IDQuNjg2LTQuNjg3IDEyLjI4NCAwIDE2Ljk3IDQuNjg2IDQuNjg3IDEyLjI4NCA0LjY4NyAxNi45NyAwelwiIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVRyYW5zZm9ybVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJ0cmFuc2Zvcm1cIixcbiAgICAgICAgICB0eXBlOiBcInJvdGF0ZVwiLFxuICAgICAgICAgIGZyb206IFwiMCA2NyA2N1wiLFxuICAgICAgICAgIHRvOiBcIjM2MCA2NyA2N1wiLFxuICAgICAgICAgIGR1cjogXCI4c1wiLFxuICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICB9KVxuICAgICAgKVxuICAgICk7XG4gIH07XG5cbiAgQ2lyY2xlcy5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG4gIH07XG5cbiAgQ2lyY2xlcy5kZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiA4MCxcbiAgICB3aWR0aDogODAsXG4gICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICBsYWJlbDogXCJhdWRpby1sb2FkaW5nXCJcbiAgfTtcbn0pOyIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCJdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZShcInJlYWN0XCIpLCByZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG1vZCA9IHtcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICBmYWN0b3J5KG1vZC5leHBvcnRzLCBnbG9iYWwucmVhY3QsIGdsb2JhbC5wcm9wVHlwZXMpO1xuICAgIGdsb2JhbC5XYXRjaCA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0LCBfcHJvcFR5cGVzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuICBleHBvcnRzLldhdGNoID0gdW5kZWZpbmVkO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBXYXRjaCA9IGV4cG9ydHMuV2F0Y2ggPSBmdW5jdGlvbiBXYXRjaChwcm9wcykge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7XG4gICAgICAgIHdpZHRoOiBwcm9wcy53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBwcm9wcy5oZWlnaHQsXG4gICAgICAgIHZlcnNpb246IFwiMS4xXCIsXG4gICAgICAgIGlkOiBcIkwyXCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIHg6IFwiMHB4XCIsXG4gICAgICAgIHk6IFwiMHB4XCIsXG4gICAgICAgIHZpZXdCb3g6IFwiMCAwIDEwMCAxMDBcIixcbiAgICAgICAgZW5hYmxlQmFja2dyb3VuZDogXCJuZXcgMCAwIDEwMCAxMDBcIixcbiAgICAgICAgeG1sU3BhY2U6IFwicHJlc2VydmVcIixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHByb3BzLmxhYmVsXG4gICAgICB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJjaXJjbGVcIiwge1xuICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgc3Ryb2tlOiBwcm9wcy5jb2xvcixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IFwiNFwiLFxuICAgICAgICBzdHJva2VNaXRlcmxpbWl0OiBcIjEwXCIsXG4gICAgICAgIGN4OiBcIjUwXCIsXG4gICAgICAgIGN5OiBcIjUwXCIsXG4gICAgICAgIHI6IHByb3BzLnJhZGl1c1xuICAgICAgfSksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJsaW5lXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICAgICAgc3Ryb2tlOiBwcm9wcy5jb2xvcixcbiAgICAgICAgICBzdHJva2VXaWR0aDogXCI0XCIsXG4gICAgICAgICAgc3Ryb2tlTWl0ZXJsaW1pdDogXCIxMFwiLFxuICAgICAgICAgIHgxOiBcIjUwXCIsXG4gICAgICAgICAgeTE6IFwiNTBcIixcbiAgICAgICAgICB4MjogXCI4NVwiLFxuICAgICAgICAgIHkyOiBcIjUwLjVcIlxuICAgICAgICB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVUcmFuc2Zvcm1cIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwidHJhbnNmb3JtXCIsXG4gICAgICAgICAgZHVyOiBcIjJzXCIsXG4gICAgICAgICAgdHlwZTogXCJyb3RhdGVcIixcbiAgICAgICAgICBmcm9tOiBcIjAgNTAgNTBcIixcbiAgICAgICAgICB0bzogXCIzNjAgNTAgNTBcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJsaW5lXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICAgICAgc3Ryb2tlOiBwcm9wcy5jb2xvcixcbiAgICAgICAgICBzdHJva2VXaWR0aDogXCI0XCIsXG4gICAgICAgICAgc3Ryb2tlTWl0ZXJsaW1pdDogXCIxMFwiLFxuICAgICAgICAgIHgxOiBcIjUwXCIsXG4gICAgICAgICAgeTE6IFwiNTBcIixcbiAgICAgICAgICB4MjogXCI0OS41XCIsXG4gICAgICAgICAgeTI6IFwiNzRcIlxuICAgICAgICB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVUcmFuc2Zvcm1cIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwidHJhbnNmb3JtXCIsXG4gICAgICAgICAgZHVyOiBcIjE1c1wiLFxuICAgICAgICAgIHR5cGU6IFwicm90YXRlXCIsXG4gICAgICAgICAgZnJvbTogXCIwIDUwIDUwXCIsXG4gICAgICAgICAgdG86IFwiMzYwIDUwIDUwXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBXYXRjaC5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIHJhZGl1czogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJcbiAgfTtcblxuICBXYXRjaC5kZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiA4MCxcbiAgICB3aWR0aDogODAsXG4gICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICBsYWJlbDogXCJhdWRpby1sb2FkaW5nXCIsXG4gICAgcmFkaXVzOiA0OFxuICB9O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImV4cG9ydHNcIiwgXCJyZWFjdFwiLCBcInByb3AtdHlwZXNcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCwgZ2xvYmFsLnByb3BUeXBlcyk7XG4gICAgZ2xvYmFsLkF1ZGlvID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuQXVkaW8gPSB1bmRlZmluZWQ7XG5cbiAgdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbiAgdmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIEF1ZGlvID0gZXhwb3J0cy5BdWRpbyA9IGZ1bmN0aW9uIEF1ZGlvKHByb3BzKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJzdmdcIixcbiAgICAgIHtcbiAgICAgICAgaGVpZ2h0OiBwcm9wcy5oZWlnaHQsXG4gICAgICAgIHdpZHRoOiBwcm9wcy53aWR0aCxcbiAgICAgICAgZmlsbDogcHJvcHMuY29sb3IsXG4gICAgICAgIHZpZXdCb3g6IFwiMCAwIDU1IDgwXCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBwcm9wcy5sYWJlbFxuICAgICAgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcImdcIixcbiAgICAgICAgeyB0cmFuc2Zvcm06IFwibWF0cml4KDEgMCAwIC0xIDAgODApXCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJyZWN0XCIsXG4gICAgICAgICAgeyB3aWR0aDogXCIxMFwiLCBoZWlnaHQ6IFwiMjBcIiwgcng6IFwiM1wiIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiaGVpZ2h0XCIsXG4gICAgICAgICAgICBiZWdpbjogXCIwc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjQuM3NcIixcbiAgICAgICAgICAgIHZhbHVlczogXCIyMDs0NTs1Nzs4MDs2NDszMjs2Njs0NTs2NDsyMzs2NjsxMzs2NDs1NjszNDszNDsyOzIzOzc2Ozc5OzIwXCIsXG4gICAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgIH0pXG4gICAgICAgICksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwicmVjdFwiLFxuICAgICAgICAgIHsgeDogXCIxNVwiLCB3aWR0aDogXCIxMFwiLCBoZWlnaHQ6IFwiODBcIiwgcng6IFwiM1wiIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiaGVpZ2h0XCIsXG4gICAgICAgICAgICBiZWdpbjogXCIwc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjJzXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiODA7NTU7MzM7NTs3NTsyMzs3MzszMzsxMjsxNDs2MDs4MFwiLFxuICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICB9KVxuICAgICAgICApLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICBcInJlY3RcIixcbiAgICAgICAgICB7IHg6IFwiMzBcIiwgd2lkdGg6IFwiMTBcIiwgaGVpZ2h0OiBcIjUwXCIsIHJ4OiBcIjNcIiB9LFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcImhlaWdodFwiLFxuICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgIGR1cjogXCIxLjRzXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiNTA7MzQ7Nzg7MjM7NTY7MjM7MzQ7NzY7ODA7NTQ7MjE7NTBcIixcbiAgICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgfSlcbiAgICAgICAgKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJyZWN0XCIsXG4gICAgICAgICAgeyB4OiBcIjQ1XCIsIHdpZHRoOiBcIjEwXCIsIGhlaWdodDogXCIzMFwiLCByeDogXCIzXCIgfSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJoZWlnaHRcIixcbiAgICAgICAgICAgIGJlZ2luOiBcIjBzXCIsXG4gICAgICAgICAgICBkdXI6IFwiMnNcIixcbiAgICAgICAgICAgIHZhbHVlczogXCIzMDs0NTsxMzs4MDs1Njs3Mjs0NTs3NjszNDsyMzs2NzszMFwiLFxuICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBBdWRpby5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG4gIH07XG5cbiAgQXVkaW8uZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiXG4gIH07XG59KTsiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW1wiZXhwb3J0c1wiLCBcInJlYWN0XCIsIFwicHJvcC10eXBlc1wiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoXCJyZWFjdFwiKSwgcmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzKTtcbiAgICBnbG9iYWwuQmFsbFRyaWFuZ2xlID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuQmFsbFRyaWFuZ2xlID0gdW5kZWZpbmVkO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBCYWxsVHJpYW5nbGUgPSBleHBvcnRzLkJhbGxUcmlhbmdsZSA9IGZ1bmN0aW9uIEJhbGxUcmlhbmdsZShwcm9wcykge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7XG4gICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICB3aWR0aDogcHJvcHMud2lkdGgsXG4gICAgICAgIHN0cm9rZTogcHJvcHMuY29sb3IsXG4gICAgICAgIHZpZXdCb3g6IFwiMCAwIDU3IDU3XCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBwcm9wcy5sYWJlbFxuICAgICAgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcImdcIixcbiAgICAgICAgeyBmaWxsOiBcIm5vbmVcIiwgZmlsbFJ1bGU6IFwiZXZlbm9kZFwiIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwiZ1wiLFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBcInRyYW5zbGF0ZSgxIDEpXCIsIHN0cm9rZVdpZHRoOiBcIjJcIiB9LFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgICAgIHsgY3g6IFwiNVwiLCBjeTogXCI1MFwiLCByOiBwcm9wcy5yYWRpdXMgfSxcbiAgICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiY3lcIixcbiAgICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgICAgZHVyOiBcIjIuMnNcIixcbiAgICAgICAgICAgICAgdmFsdWVzOiBcIjUwOzU7NTA7NTBcIixcbiAgICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcImN4XCIsXG4gICAgICAgICAgICAgIGJlZ2luOiBcIjBzXCIsXG4gICAgICAgICAgICAgIGR1cjogXCIyLjJzXCIsXG4gICAgICAgICAgICAgIHZhbHVlczogXCI1OzI3OzQ5OzVcIixcbiAgICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICApLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgICAgIHsgY3g6IFwiMjdcIiwgY3k6IFwiNVwiLCByOiBwcm9wcy5yYWRpdXMgfSxcbiAgICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiY3lcIixcbiAgICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgICAgZHVyOiBcIjIuMnNcIixcbiAgICAgICAgICAgICAgZnJvbTogXCI1XCIsXG4gICAgICAgICAgICAgIHRvOiBcIjVcIixcbiAgICAgICAgICAgICAgdmFsdWVzOiBcIjU7NTA7NTA7NVwiLFxuICAgICAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiY3hcIixcbiAgICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgICAgZHVyOiBcIjIuMnNcIixcbiAgICAgICAgICAgICAgZnJvbTogXCIyN1wiLFxuICAgICAgICAgICAgICB0bzogXCIyN1wiLFxuICAgICAgICAgICAgICB2YWx1ZXM6IFwiMjc7NDk7NTsyN1wiLFxuICAgICAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICBcImNpcmNsZVwiLFxuICAgICAgICAgICAgeyBjeDogXCI0OVwiLCBjeTogXCI1MFwiLCByOiBwcm9wcy5yYWRpdXMgfSxcbiAgICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiY3lcIixcbiAgICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgICAgZHVyOiBcIjIuMnNcIixcbiAgICAgICAgICAgICAgdmFsdWVzOiBcIjUwOzUwOzU7NTBcIixcbiAgICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcImN4XCIsXG4gICAgICAgICAgICAgIGZyb206IFwiNDlcIixcbiAgICAgICAgICAgICAgdG86IFwiNDlcIixcbiAgICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgICAgZHVyOiBcIjIuMnNcIixcbiAgICAgICAgICAgICAgdmFsdWVzOiBcIjQ5OzU7Mjc7NDlcIixcbiAgICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICApXG4gICAgICAgIClcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIEJhbGxUcmlhbmdsZS5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIHJhZGl1czogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJcbiAgfTtcblxuICBCYWxsVHJpYW5nbGUuZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgcmFkaXVzOiA1LFxuICAgIGxhYmVsOiBcImF1ZGlvLWxvYWRpbmdcIlxuICB9O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImV4cG9ydHNcIiwgXCJyZWFjdFwiLCBcInByb3AtdHlwZXNcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCwgZ2xvYmFsLnByb3BUeXBlcyk7XG4gICAgZ2xvYmFsLkJhcnMgPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIF9yZWFjdCwgX3Byb3BUeXBlcykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5CYXJzID0gdW5kZWZpbmVkO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBCYXJzID0gZXhwb3J0cy5CYXJzID0gZnVuY3Rpb24gQmFycyhwcm9wcykge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7XG4gICAgICAgIHdpZHRoOiBwcm9wcy53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBwcm9wcy5oZWlnaHQsXG4gICAgICAgIGZpbGw6IHByb3BzLmNvbG9yLFxuICAgICAgICB2aWV3Qm94OiBcIjAgMCAxMzUgMTQwXCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBwcm9wcy5sYWJlbFxuICAgICAgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcInJlY3RcIixcbiAgICAgICAgeyB5OiBcIjEwXCIsIHdpZHRoOiBcIjE1XCIsIGhlaWdodDogXCIxMjBcIiwgcng6IFwiNlwiIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJoZWlnaHRcIixcbiAgICAgICAgICBiZWdpbjogXCIwLjVzXCIsXG4gICAgICAgICAgZHVyOiBcIjFzXCIsXG4gICAgICAgICAgdmFsdWVzOiBcIjEyMDsxMTA7MTAwOzkwOzgwOzcwOzYwOzUwOzQwOzE0MDsxMjBcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJ5XCIsXG4gICAgICAgICAgYmVnaW46IFwiMC41c1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxMDsxNTsyMDsyNTszMDszNTs0MDs0NTs1MDswOzEwXCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwicmVjdFwiLFxuICAgICAgICB7IHg6IFwiMzBcIiwgeTogXCIxMFwiLCB3aWR0aDogXCIxNVwiLCBoZWlnaHQ6IFwiMTIwXCIsIHJ4OiBcIjZcIiB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiaGVpZ2h0XCIsXG4gICAgICAgICAgYmVnaW46IFwiMC4yNXNcIixcbiAgICAgICAgICBkdXI6IFwiMXNcIixcbiAgICAgICAgICB2YWx1ZXM6IFwiMTIwOzExMDsxMDA7OTA7ODA7NzA7NjA7NTA7NDA7MTQwOzEyMFwiLFxuICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICB9KSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInlcIixcbiAgICAgICAgICBiZWdpbjogXCIwLjI1c1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxMDsxNTsyMDsyNTszMDszNTs0MDs0NTs1MDswOzEwXCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwicmVjdFwiLFxuICAgICAgICB7IHg6IFwiNjBcIiwgd2lkdGg6IFwiMTVcIiwgaGVpZ2h0OiBcIjE0MFwiLCByeDogXCI2XCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcImhlaWdodFwiLFxuICAgICAgICAgIGJlZ2luOiBcIjBzXCIsXG4gICAgICAgICAgZHVyOiBcIjFzXCIsXG4gICAgICAgICAgdmFsdWVzOiBcIjEyMDsxMTA7MTAwOzkwOzgwOzcwOzYwOzUwOzQwOzE0MDsxMjBcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJ5XCIsXG4gICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICBkdXI6IFwiMXNcIixcbiAgICAgICAgICB2YWx1ZXM6IFwiMTA7MTU7MjA7MjU7MzA7MzU7NDA7NDU7NTA7MDsxMFwiLFxuICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICB9KVxuICAgICAgKSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcInJlY3RcIixcbiAgICAgICAgeyB4OiBcIjkwXCIsIHk6IFwiMTBcIiwgd2lkdGg6IFwiMTVcIiwgaGVpZ2h0OiBcIjEyMFwiLCByeDogXCI2XCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcImhlaWdodFwiLFxuICAgICAgICAgIGJlZ2luOiBcIjAuMjVzXCIsXG4gICAgICAgICAgZHVyOiBcIjFzXCIsXG4gICAgICAgICAgdmFsdWVzOiBcIjEyMDsxMTA7MTAwOzkwOzgwOzcwOzYwOzUwOzQwOzE0MDsxMjBcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJ5XCIsXG4gICAgICAgICAgYmVnaW46IFwiMC4yNXNcIixcbiAgICAgICAgICBkdXI6IFwiMXNcIixcbiAgICAgICAgICB2YWx1ZXM6IFwiMTA7MTU7MjA7MjU7MzA7MzU7NDA7NDU7NTA7MDsxMFwiLFxuICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICB9KVxuICAgICAgKSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcInJlY3RcIixcbiAgICAgICAgeyB4OiBcIjEyMFwiLCB5OiBcIjEwXCIsIHdpZHRoOiBcIjE1XCIsIGhlaWdodDogXCIxMjBcIiwgcng6IFwiNlwiIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJoZWlnaHRcIixcbiAgICAgICAgICBiZWdpbjogXCIwLjVzXCIsXG4gICAgICAgICAgZHVyOiBcIjFzXCIsXG4gICAgICAgICAgdmFsdWVzOiBcIjEyMDsxMTA7MTAwOzkwOzgwOzcwOzYwOzUwOzQwOzE0MDsxMjBcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJ5XCIsXG4gICAgICAgICAgYmVnaW46IFwiMC41c1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxMDsxNTsyMDsyNTszMDszNTs0MDs0NTs1MDswOzEwXCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBCYXJzLnByb3BUeXBlcyA9IHtcbiAgICBoZWlnaHQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICB3aWR0aDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBsYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcbiAgfTtcblxuICBCYXJzLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6IDgwLFxuICAgIHdpZHRoOiA4MCxcbiAgICBjb2xvcjogXCJncmVlblwiLFxuICAgIGxhYmVsOiBcImF1ZGlvLWxvYWRpbmdcIlxuICB9O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImV4cG9ydHNcIiwgXCJyZWFjdFwiLCBcInByb3AtdHlwZXNcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCwgZ2xvYmFsLnByb3BUeXBlcyk7XG4gICAgZ2xvYmFsLkNyYWRsZUxvYWRlciA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0LCBfcHJvcFR5cGVzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuICBleHBvcnRzLkNyYWRsZUxvYWRlciA9IHVuZGVmaW5lZDtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgQ3JhZGxlTG9hZGVyID0gZXhwb3J0cy5DcmFkbGVMb2FkZXIgPSBmdW5jdGlvbiBDcmFkbGVMb2FkZXIocHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcImRpdlwiLFxuICAgICAgeyBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWwsIHJvbGU6IFwicHJlc2VudGF0aW9uXCIsIGNsYXNzTmFtZTogXCJjb250YWluZXJcIiB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwiZGl2XCIsXG4gICAgICAgIHsgY2xhc3NOYW1lOiBcInJlYWN0LXNwaW5uZXItbG9hZGVyLXN3aW5nXCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwicmVhY3Qtc3Bpbm5lci1sb2FkZXItc3dpbmctbFwiIH0pLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LXNwaW5uZXItbG9hZGVyLXN3aW5nLXJcIiB9KVxuICAgICAgKSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcImRpdlwiLFxuICAgICAgICB7IGNsYXNzTmFtZTogXCJyZWFjdC1zcGlubmVyLWxvYWRlci1zaGFkb3dcIiB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogXCJyZWFjdC1zcGlubmVyLWxvYWRlci1zaGFkb3ctbFwiIH0pLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInJlYWN0LXNwaW5uZXItbG9hZGVyLXNoYWRvdy1yXCIgfSlcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIENyYWRsZUxvYWRlci5wcm9wVHlwZXMgPSB7XG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nXG4gIH07XG5cbiAgQ3JhZGxlTG9hZGVyLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBsYWJlbDogXCJhdWRpby1sb2FkaW5nXCJcbiAgfTtcbn0pOyIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCJdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZShcInJlYWN0XCIpLCByZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG1vZCA9IHtcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICBmYWN0b3J5KG1vZC5leHBvcnRzLCBnbG9iYWwucmVhY3QsIGdsb2JhbC5wcm9wVHlwZXMpO1xuICAgIGdsb2JhbC5HcmlkID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuR3JpZCA9IHVuZGVmaW5lZDtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgR3JpZCA9IGV4cG9ydHMuR3JpZCA9IGZ1bmN0aW9uIEdyaWQocHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcInN2Z1wiLFxuICAgICAge1xuICAgICAgICB3aWR0aDogcHJvcHMud2lkdGgsXG4gICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICB2aWV3Qm94OiBcIjAgMCAxMDUgMTA1XCIsXG4gICAgICAgIGZpbGw6IHByb3BzLmNvbG9yLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCIxMi41XCIsIGN5OiBcIjEyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCIwc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCIxMi41XCIsIGN5OiBcIjUyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCIxMDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCI1Mi41XCIsIGN5OiBcIjEyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCIzMDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCI1Mi41XCIsIGN5OiBcIjUyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCI2MDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCI5Mi41XCIsIGN5OiBcIjEyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCI4MDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCI5Mi41XCIsIGN5OiBcIjUyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCI0MDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCIxMi41XCIsIGN5OiBcIjkyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCI3MDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCI1Mi41XCIsIGN5OiBcIjkyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCI1MDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCI5Mi41XCIsIGN5OiBcIjkyLjVcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCIyMDBtc1wiLFxuICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy4yOzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIEdyaWQucHJvcFR5cGVzID0ge1xuICAgIGhlaWdodDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIHdpZHRoOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgY29sb3I6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIGxhYmVsOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICByYWRpdXM6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXG4gIH07XG5cbiAgR3JpZC5kZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiA4MCxcbiAgICB3aWR0aDogODAsXG4gICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICByYWRpdXM6IDEyLjUsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiXG4gIH07XG59KTsiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW1wiZXhwb3J0c1wiLCBcInJlYWN0XCIsIFwicHJvcC10eXBlc1wiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoXCJyZWFjdFwiKSwgcmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzKTtcbiAgICBnbG9iYWwuSGVhcnRzID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuSGVhcnRzID0gdW5kZWZpbmVkO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBIZWFydHMgPSBleHBvcnRzLkhlYXJ0cyA9IGZ1bmN0aW9uIEhlYXJ0cyhwcm9wcykge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7XG4gICAgICAgIHdpZHRoOiBwcm9wcy53aWR0aCxcbiAgICAgICAgaGVpZ2h0OiBwcm9wcy5oZWlnaHQsXG4gICAgICAgIHZpZXdCb3g6IFwiMCAwIDE0MCA2NFwiLFxuICAgICAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgICAgICBmaWxsOiBwcm9wcy5jb2xvcixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHByb3BzLmxhYmVsXG4gICAgICB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwicGF0aFwiLFxuICAgICAgICB7XG4gICAgICAgICAgZDogXCJNMzAuMjYyIDU3LjAyTDcuMTk1IDQwLjcyM2MtNS44NC0zLjk3Ni03LjU2LTEyLjA2LTMuODQyLTE4LjA2MyAzLjcxNS02IDExLjQ2Ny03LjY1IDE3LjMwNi0zLjY4bDQuNTIgMy43NiAyLjYtNS4yNzRjMy43MTctNi4wMDIgMTEuNDctNy42NSAxNy4zMDUtMy42OCA1Ljg0IDMuOTcgNy41NiAxMi4wNTQgMy44NDIgMTguMDYyTDM0LjQ5IDU2LjExOGMtLjg5NyAxLjUxMi0yLjc5MyAxLjkxNS00LjIyOC45elwiLFxuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiZmlsbC1vcGFjaXR5XCIsXG4gICAgICAgICAgZnJvbTogXCIwXCIsXG4gICAgICAgICAgdG86IFwiLjVcIlxuICAgICAgICB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiZmlsbC1vcGFjaXR5XCIsXG4gICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICBkdXI6IFwiMS40c1wiLFxuICAgICAgICAgIHZhbHVlczogXCIwLjU7MTswLjVcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJwYXRoXCIsXG4gICAgICAgIHtcbiAgICAgICAgICBkOiBcIk0xMDUuNTEyIDU2LjEybC0xNC40NC0yNC4yNzJjLTMuNzE2LTYuMDA4LTEuOTk2LTE0LjA5MyAzLjg0My0xOC4wNjIgNS44MzUtMy45NyAxMy41ODgtMi4zMjIgMTcuMzA2IDMuNjhsMi42IDUuMjc0IDQuNTItMy43NmM1Ljg0LTMuOTcgMTMuNTkyLTIuMzIgMTcuMzA3IDMuNjggMy43MTggNi4wMDMgMS45OTggMTQuMDg4LTMuODQyIDE4LjA2NEwxMDkuNzQgNTcuMDJjLTEuNDM0IDEuMDE0LTMuMzMuNjEtNC4yMjgtLjl6XCIsXG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBmcm9tOiBcIjBcIixcbiAgICAgICAgICB0bzogXCIuNVwiXG4gICAgICAgIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsLW9wYWNpdHlcIixcbiAgICAgICAgICBiZWdpbjogXCIwLjdzXCIsXG4gICAgICAgICAgZHVyOiBcIjEuNHNcIixcbiAgICAgICAgICB2YWx1ZXM6IFwiMC41OzE7MC41XCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pXG4gICAgICApLFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwYXRoXCIsIHsgZDogXCJNNjcuNDA4IDU3LjgzNGwtMjMuMDEtMjQuOThjLTUuODY0LTYuMTUtNS44NjQtMTYuMTA4IDAtMjIuMjQ4IDUuODYtNi4xNCAxNS4zNy02LjE0IDIxLjIzNCAwTDcwIDE2LjE2OGw0LjM2OC01LjU2MmM1Ljg2My02LjE0IDE1LjM3NS02LjE0IDIxLjIzNSAwIDUuODYzIDYuMTQgNS44NjMgMTYuMDk4IDAgMjIuMjQ3bC0yMy4wMDcgMjQuOThjLTEuNDMgMS41NTYtMy43NTcgMS41NTYtNS4xODggMHpcIiB9KVxuICAgICk7XG4gIH07XG5cbiAgSGVhcnRzLnByb3BUeXBlcyA9IHtcbiAgICBoZWlnaHQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICB3aWR0aDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBsYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcbiAgfTtcblxuICBIZWFydHMuZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiXG4gIH07XG59KTsiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW1wiZXhwb3J0c1wiLCBcInJlYWN0XCIsIFwicHJvcC10eXBlc1wiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoXCJyZWFjdFwiKSwgcmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzKTtcbiAgICBnbG9iYWwuTXV0YXRpbmdEb3RzID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuTXV0YXRpbmdEb3RzID0gdW5kZWZpbmVkO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBNdXRhdGluZ0RvdHMgPSBleHBvcnRzLk11dGF0aW5nRG90cyA9IGZ1bmN0aW9uIE11dGF0aW5nRG90cyhwcm9wcykge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7IGlkOiBcImdvby1sb2FkZXJcIiwgd2lkdGg6IHByb3BzLndpZHRoLCBoZWlnaHQ6IHByb3BzLmhlaWdodCwgXCJhcmlhLWxhYmVsXCI6IHByb3BzLmxhYmVsIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJmaWx0ZXJcIixcbiAgICAgICAgeyBpZDogXCJmYW5jeS1nb29cIiB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImZlR2F1c3NpYW5CbHVyXCIsIHsgXCJpblwiOiBcIlNvdXJjZUdyYXBoaWNcIiwgc3RkRGV2aWF0aW9uOiBcIjZcIiwgcmVzdWx0OiBcImJsdXJcIiB9KSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJmZUNvbG9yTWF0cml4XCIsIHtcbiAgICAgICAgICBcImluXCI6IFwiYmx1clwiLFxuICAgICAgICAgIG1vZGU6IFwibWF0cml4XCIsXG4gICAgICAgICAgdmFsdWVzOiBcIjEgMCAwIDAgMCAgMCAxIDAgMCAwICAwIDAgMSAwIDAgIDAgMCAwIDE5IC05XCIsXG4gICAgICAgICAgcmVzdWx0OiBcImdvb1wiXG4gICAgICAgIH0pLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImZlQ29tcG9zaXRlXCIsIHsgXCJpblwiOiBcIlNvdXJjZUdyYXBoaWNcIiwgaW4yOiBcImdvb1wiLCBvcGVyYXRvcjogXCJhdG9wXCIgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJnXCIsXG4gICAgICAgIHsgZmlsdGVyOiBcInVybCgjZmFuY3ktZ29vKVwiIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVRyYW5zZm9ybVwiLCB7XG4gICAgICAgICAgaWQ6IFwibWFpbkFuaW1cIixcbiAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInRyYW5zZm9ybVwiLFxuICAgICAgICAgIGF0dHJpYnV0ZVR5cGU6IFwiWE1MXCIsXG4gICAgICAgICAgdHlwZTogXCJyb3RhdGVcIixcbiAgICAgICAgICBmcm9tOiBcIjAgNTAgNTBcIixcbiAgICAgICAgICB0bzogXCIzNTkgNTAgNTBcIixcbiAgICAgICAgICBkdXI6IFwiMS4yc1wiLFxuICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICB9KSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgICB7IGN4OiBcIjUwJVwiLCBjeTogXCI0MFwiLCByOiBwcm9wcy5yYWRpdXMsIGZpbGw6IHByb3BzLmNvbG9yIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICAgIGlkOiBcImNBbmltMVwiLFxuICAgICAgICAgICAgYXR0cmlidXRlVHlwZTogXCJYTUxcIixcbiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiY3lcIixcbiAgICAgICAgICAgIGR1cjogXCIwLjZzXCIsXG4gICAgICAgICAgICBiZWdpbjogXCIwO2NBbmltMS5lbmQrMC4yc1wiLFxuICAgICAgICAgICAgY2FsY01vZGU6IFwic3BsaW5lXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiNDA7MjA7NDBcIixcbiAgICAgICAgICAgIGtleVRpbWVzOiBcIjA7MC4zOzFcIixcbiAgICAgICAgICAgIGtleVNwbGluZXM6IFwiMC4xNzUsIDAuODg1LCAwLjMyMCwgMS41OyAwLjE3NSwgMC44ODUsIDAuMzIwLCAxLjVcIlxuICAgICAgICAgIH0pXG4gICAgICAgICksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwiY2lyY2xlXCIsXG4gICAgICAgICAgeyBjeDogXCI1MCVcIiwgY3k6IFwiNjBcIiwgcjogcHJvcHMucmFkaXVzLCBmaWxsOiBwcm9wcy5zZWNvbmRhcnlDb2xvciB9LFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICBpZDogXCJjQW5pbTJcIixcbiAgICAgICAgICAgIGF0dHJpYnV0ZVR5cGU6IFwiWE1MXCIsXG4gICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcImN5XCIsXG4gICAgICAgICAgICBkdXI6IFwiMC42c1wiLFxuICAgICAgICAgICAgYmVnaW46IFwiMC40cztjQW5pbTIuZW5kKzAuMnNcIixcbiAgICAgICAgICAgIGNhbGNNb2RlOiBcInNwbGluZVwiLFxuICAgICAgICAgICAgdmFsdWVzOiBcIjYwOzgwOzYwXCIsXG4gICAgICAgICAgICBrZXlUaW1lczogXCIwOzAuMzsxXCIsXG4gICAgICAgICAgICBrZXlTcGxpbmVzOiBcIjAuMTc1LCAwLjg4NSwgMC4zMjAsIDEuNTswLjE3NSwgMC44ODUsIDAuMzIwLCAxLjVcIlxuICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIE11dGF0aW5nRG90cy5wcm9wVHlwZXMgPSB7XG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICAgIHNlY29uZGFyeUNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBoZWlnaHQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICByYWRpdXM6IF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyLFxuICAgIGxhYmVsOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xuICB9O1xuXG4gIE11dGF0aW5nRG90cy5kZWZhdWx0UHJvcHMgPSB7XG4gICAgd2lkdGg6IDgwLFxuICAgIGhlaWdodDogOTAsXG4gICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICByYWRpdXM6IDExLFxuICAgIHNlY29uZGFyeUNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiXG4gIH07XG59KTsiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW1wiZXhwb3J0c1wiLCBcInJlYWN0XCIsIFwicHJvcC10eXBlc1wiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoXCJyZWFjdFwiKSwgcmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzKTtcbiAgICBnbG9iYWwuT3ZhbCA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0LCBfcHJvcFR5cGVzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuICBleHBvcnRzLk92YWwgPSB1bmRlZmluZWQ7XG5cbiAgdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbiAgdmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIE92YWwgPSBleHBvcnRzLk92YWwgPSBmdW5jdGlvbiBPdmFsKHByb3BzKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJzdmdcIixcbiAgICAgIHtcbiAgICAgICAgd2lkdGg6IHByb3BzLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCxcbiAgICAgICAgdmlld0JveDogXCIwIDAgMzggMzhcIixcbiAgICAgICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICAgICAgc3Ryb2tlOiBwcm9wcy5jb2xvcixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHByb3BzLmxhYmVsXG4gICAgICB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwiZ1wiLFxuICAgICAgICB7IGZpbGw6IFwibm9uZVwiLCBmaWxsUnVsZTogXCJldmVub2RkXCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJnXCIsXG4gICAgICAgICAgeyB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKDEgMSlcIiwgc3Ryb2tlV2lkdGg6IFwiMlwiIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJjaXJjbGVcIiwgeyBzdHJva2VPcGFjaXR5OiBcIi41XCIsIGN4OiBcIjE4XCIsIGN5OiBcIjE4XCIsIHI6IHByb3BzLnJhZGl1cyB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgIFwicGF0aFwiLFxuICAgICAgICAgICAgeyBkOiBcIk0zNiAxOGMwLTkuOTQtOC4wNi0xOC0xOC0xOFwiIH0sXG4gICAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVUcmFuc2Zvcm1cIiwge1xuICAgICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInRyYW5zZm9ybVwiLFxuICAgICAgICAgICAgICB0eXBlOiBcInJvdGF0ZVwiLFxuICAgICAgICAgICAgICBmcm9tOiBcIjAgMTggMThcIixcbiAgICAgICAgICAgICAgdG86IFwiMzYwIDE4IDE4XCIsXG4gICAgICAgICAgICAgIGR1cjogXCIxc1wiLFxuICAgICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBPdmFsLnByb3BUeXBlcyA9IHtcbiAgICBoZWlnaHQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICB3aWR0aDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBsYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgcmFkaXVzOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlclxuICB9O1xuXG4gIE92YWwuZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiLFxuICAgIHJhZGl1czogMThcbiAgfTtcbn0pOyIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCJdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZShcInJlYWN0XCIpLCByZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG1vZCA9IHtcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICBmYWN0b3J5KG1vZC5leHBvcnRzLCBnbG9iYWwucmVhY3QsIGdsb2JhbC5wcm9wVHlwZXMpO1xuICAgIGdsb2JhbC5QbGFuZSA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0LCBfcHJvcFR5cGVzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuICBleHBvcnRzLlBsYW5lID0gdW5kZWZpbmVkO1xuXG4gIHZhciBfcmVhY3QyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcmVhY3QpO1xuXG4gIHZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbiAgZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbiAgfVxuXG4gIHZhciBQbGFuZSA9IGV4cG9ydHMuUGxhbmUgPSBmdW5jdGlvbiBQbGFuZShwcm9wcykge1xuICAgIHJldHVybiBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgIFwic3ZnXCIsXG4gICAgICB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJyZWFjdC1zcGlubmVyLWxvYWRlci1zdmctY2FsTG9hZGVyXCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIHdpZHRoOiBcIjIzMFwiLFxuICAgICAgICBoZWlnaHQ6IFwiMjMwXCIsXG4gICAgICAgIFwiYXJpYS1sYWJlbFwiOiBwcm9wcy5sYWJlbFxuICAgICAgfSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcImRlc2NcIixcbiAgICAgICAgbnVsbCxcbiAgICAgICAgXCJQbGFuZSBhbmltYXRpb24uIExvYWRpbmcgXCJcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInBhdGhcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwicmVhY3Qtc3Bpbm5lci1sb2FkZXItY2FsLWxvYWRlcl9fcGF0aFwiLFxuICAgICAgICBzdHlsZTogeyBzdHJva2U6IHByb3BzLnNlY29uZGFyeUNvbG9yIH0sXG4gICAgICAgIGQ6IFwiTTg2LjQyOSA0MGM2My42MTYtMjAuMDQgMTAxLjUxMSAyNS4wOCAxMDcuMjY1IDYxLjkzIDYuNDg3IDQxLjU0LTE4LjU5MyA3Ni45OS01MC42IDg3LjY0My01OS40NiAxOS43OTEtMTAxLjI2Mi0yMy41NzctMTA3LjE0Mi02Mi42MTZDMjkuMzk4IDgzLjQ0MSA1OS45NDUgNDguMzQzIDg2LjQzIDQwelwiLFxuICAgICAgICBmaWxsOiBcIm5vbmVcIixcbiAgICAgICAgc3Ryb2tlOiBcIiMwMDk5Y2NcIixcbiAgICAgICAgc3Ryb2tlV2lkdGg6IFwiNFwiLFxuICAgICAgICBzdHJva2VMaW5lY2FwOiBcInJvdW5kXCIsXG4gICAgICAgIHN0cm9rZUxpbmVqb2luOiBcInJvdW5kXCIsXG4gICAgICAgIHN0cm9rZURhc2hhcnJheTogXCIxMCAxMCAxMCAxMCAxMCAxMCAxMCA0MzJcIixcbiAgICAgICAgc3Ryb2tlRGFzaG9mZnNldDogXCI3N1wiXG4gICAgICB9KSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjYWwtbG9hZGVyX19wbGFuZVwiLFxuICAgICAgICBzdHlsZTogeyBmaWxsOiBwcm9wcy5jb2xvciB9LFxuICAgICAgICBkOiBcIk0xNDEuNDkzIDM3LjkzYy0xLjA4Ny0uOTI3LTIuOTQyLTIuMDAyLTQuMzItMi41MDEtMi4yNTktLjgyNC0zLjI1Mi0uOTU1LTkuMjkzLTEuMTcyLTQuMDE3LS4xNDYtNS4xOTctLjIzLTUuNDctLjM3LS43NjYtLjQwNy0xLjUyNi0xLjQ0OC03LjExNC05Ljc3My00LjgtNy4xNDUtNS4zNDQtNy45MTQtNi4zMjctOC45NzYtMS4yMTQtMS4zMDYtMS4zOTYtMS4zNzgtMy43OS0xLjQ3My0xLjAzNi0uMDQtMi0uMDQzLTIuMTUzLS4wMDItLjM1My4xLS44Ny41ODYtMSAuOTUyLS4xMzkuMzk5LS4wNzYuNzEuNDMxIDIuMjIuMjQxLjcyIDEuMDI5IDMuMzg2IDEuNzQyIDUuOTE4IDEuNjQ0IDUuODQ0IDIuMzc4IDguMzQzIDIuODYzIDkuNzA1LjIwNi42MDEuMzMgMS4xLjI3NSAxLjEyNS0uMjQuMDk3LTEwLjU2IDEuMDY2LTExLjAxNCAxLjAzMmEzLjUzMiAzLjUzMiAwIDAgMS0xLjAwMi0uMjc2bC0uNDg3LS4yNDYtMi4wNDQtMi42MTNjLTIuMjM0LTIuODctMi4yMjgtMi44NjQtMy4zNS0zLjMwOS0uNzE3LS4yODctMi44Mi0uMzg2LTMuMjc2LS4xNjMtLjQ1Ny4yMzctLjcyNy42NDQtLjczNyAxLjE1Mi0uMDE4LjM5LjE2Ny44MDUgMS45MTYgNC4zNzMgMS4wNiAyLjE2NiAxLjk2NCA0LjA4MyAxLjk5OCA0LjI3LjA0LjE3OS4wMDQuNTIxLS4wNzYuNzUtLjA5My4yMjgtMS4xMDkgMi4wNjQtMi4yNjkgNC4wODgtMS45MjEgMy4zNC0yLjExIDMuNzExLTIuMTIzIDQuMTA3LS4wMDguMjUuMDYxLjU1Ny4xNjguNzI1LjMyOC41MTIuNzIuNjQ0IDEuOTY2LjY3NiAxLjMyLjAyOSAyLjM1Mi0uMjM2IDMuMDUtLjc2Mi4yMjItLjE3MSAxLjI3NS0xLjMxMyAyLjQxMi0yLjYxMSAxLjkxOC0yLjE4NSAyLjA0OC0yLjMyIDIuNDUtMi41MDUuMjQxLS4xMTEuNjAxLS4yMzIuODItLjI3MS4yNjctLjA1OCAyLjIxMy4yMDEgNS45MTIuOCAzLjAzNi40OCA1LjUyNS44OTQgNS41MTguOTE0IDAgLjAyNi0uMTIxLjMwNi0uMjcuNjM4LS41NCAxLjE5OC0xLjUxNSAzLjg0Mi0zLjM1IDkuMDIxLTEuMDI5IDIuOTEzLTIuMTA3IDUuODk3LTIuNCA2LjYyLS43MDMgMS43NDgtLjcyNSAxLjgzMy0uNTk0IDIuMjg2LjEzNy40Ni40NS44MzMuODcyIDEuMDEyLjQxLjE3NyAzLjgyMy4yNCA0LjM3LjA4NS44NTItLjI1IDEuNDQtLjY4OCAyLjMxMi0xLjcyNCAxLjE2Ni0xLjM5IDMuMTY5LTMuOTQ4IDYuNzcxLTguNjYxIDUuOC03LjU4MyA2LjU2MS04LjQ5IDcuMzg3LTguNzAyLjIzMy0uMDY1IDIuODI4LS4wNTYgNS43ODQuMDExIDUuODI3LjEzOCA2LjY0LjA5IDguNjItLjUgMi4yNC0uNjcgNC4wMzUtMS42NSA1LjUxNy0zLjAxNiAxLjEzNi0xLjA1NCAxLjEzNS0xLjAxNC4yMDctMS45NjItLjM1Ny0uMzgtLjc2Ny0uNzc3LS45MDItLjg5M3pcIixcbiAgICAgICAgZmlsbDogXCIjMDAwMDMzXCJcbiAgICAgIH0pXG4gICAgKTtcbiAgfTtcblxuICBQbGFuZS5wcm9wVHlwZXMgPSB7XG4gICAgc2Vjb25kYXJ5Q29sb3I6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBsYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmdcbiAgfTtcblxuICBQbGFuZS5kZWZhdWx0UHJvcHMgPSB7XG4gICAgc2Vjb25kYXJ5Q29sb3I6IFwiZ3JleVwiLFxuICAgIGNvbG9yOiBcIiNGRkE1MDBcIixcbiAgICBsYWJlbDogXCJhc3luYy1sb2FkaW5nXCJcbiAgfTtcbn0pOyIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCJdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZShcInJlYWN0XCIpLCByZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG1vZCA9IHtcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICBmYWN0b3J5KG1vZC5leHBvcnRzLCBnbG9iYWwucmVhY3QsIGdsb2JhbC5wcm9wVHlwZXMpO1xuICAgIGdsb2JhbC5QdWZmID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuUHVmZiA9IHVuZGVmaW5lZDtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgUHVmZiA9IGV4cG9ydHMuUHVmZiA9IGZ1bmN0aW9uIFB1ZmYocHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcInN2Z1wiLFxuICAgICAge1xuICAgICAgICB3aWR0aDogcHJvcHMud2lkdGgsXG4gICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICB2aWV3Qm94OiBcIjAgMCA0NCA0NFwiLFxuICAgICAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgICAgICBzdHJva2U6IHByb3BzLmNvbG9yLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJnXCIsXG4gICAgICAgIHsgZmlsbDogXCJub25lXCIsIGZpbGxSdWxlOiBcImV2ZW5vZGRcIiwgc3Ryb2tlV2lkdGg6IFwiMlwiIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwiY2lyY2xlXCIsXG4gICAgICAgICAgeyBjeDogXCIyMlwiLCBjeTogXCIyMlwiLCByOiBwcm9wcy5yYWRpdXMgfSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJyXCIsXG4gICAgICAgICAgICBiZWdpbjogXCIwc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjEuOHNcIixcbiAgICAgICAgICAgIHZhbHVlczogXCIxOyAyMFwiLFxuICAgICAgICAgICAgY2FsY01vZGU6IFwic3BsaW5lXCIsXG4gICAgICAgICAgICBrZXlUaW1lczogXCIwOyAxXCIsXG4gICAgICAgICAgICBrZXlTcGxpbmVzOiBcIjAuMTY1LCAwLjg0LCAwLjQ0LCAxXCIsXG4gICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJzdHJva2VPcGFjaXR5XCIsXG4gICAgICAgICAgICBiZWdpbjogXCIwc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjEuOHNcIixcbiAgICAgICAgICAgIHZhbHVlczogXCIxOyAwXCIsXG4gICAgICAgICAgICBjYWxjTW9kZTogXCJzcGxpbmVcIixcbiAgICAgICAgICAgIGtleVRpbWVzOiBcIjA7IDFcIixcbiAgICAgICAgICAgIGtleVNwbGluZXM6IFwiMC4zLCAwLjYxLCAwLjM1NSwgMVwiLFxuICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgfSlcbiAgICAgICAgKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgICB7IGN4OiBcIjIyXCIsIGN5OiBcIjIyXCIsIHI6IHByb3BzLnJhZGl1cyB9LFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInJcIixcbiAgICAgICAgICAgIGJlZ2luOiBcIi0wLjlzXCIsXG4gICAgICAgICAgICBkdXI6IFwiMS44c1wiLFxuICAgICAgICAgICAgdmFsdWVzOiBcIjE7IDIwXCIsXG4gICAgICAgICAgICBjYWxjTW9kZTogXCJzcGxpbmVcIixcbiAgICAgICAgICAgIGtleVRpbWVzOiBcIjA7IDFcIixcbiAgICAgICAgICAgIGtleVNwbGluZXM6IFwiMC4xNjUsIDAuODQsIDAuNDQsIDFcIixcbiAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInN0cm9rZU9wYWNpdHlcIixcbiAgICAgICAgICAgIGJlZ2luOiBcIi0wLjlzXCIsXG4gICAgICAgICAgICBkdXI6IFwiMS44c1wiLFxuICAgICAgICAgICAgdmFsdWVzOiBcIjE7IDBcIixcbiAgICAgICAgICAgIGNhbGNNb2RlOiBcInNwbGluZVwiLFxuICAgICAgICAgICAga2V5VGltZXM6IFwiMDsgMVwiLFxuICAgICAgICAgICAga2V5U3BsaW5lczogXCIwLjMsIDAuNjEsIDAuMzU1LCAxXCIsXG4gICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBQdWZmLnByb3BUeXBlcyA9IHtcbiAgICBoZWlnaHQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICB3aWR0aDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBsYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgcmFkaXVzOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlclxuICB9O1xuXG4gIFB1ZmYuZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiLFxuICAgIHJhZGl1czogMVxuICB9O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImV4cG9ydHNcIiwgXCJyZWFjdFwiLCBcInByb3AtdHlwZXNcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCwgZ2xvYmFsLnByb3BUeXBlcyk7XG4gICAgZ2xvYmFsLlJldm9sdmluZ0RvdCA9IG1vZC5leHBvcnRzO1xuICB9XG59KSh0aGlzLCBmdW5jdGlvbiAoZXhwb3J0cywgX3JlYWN0LCBfcHJvcFR5cGVzKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG4gIH0pO1xuICBleHBvcnRzLlJldm9sdmluZ0RvdCA9IHVuZGVmaW5lZDtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgUmV2b2x2aW5nRG90ID0gZXhwb3J0cy5SZXZvbHZpbmdEb3QgPSBmdW5jdGlvbiBSZXZvbHZpbmdEb3QocHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcInN2Z1wiLFxuICAgICAge1xuICAgICAgICB2ZXJzaW9uOiBcIjEuMVwiLFxuICAgICAgICB3aWR0aDogcHJvcHMud2lkdGgsXG4gICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgICAgICB4OiBcIjBweFwiLFxuICAgICAgICB5OiBcIjBweFwiLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImNpcmNsZVwiLCB7XG4gICAgICAgIGZpbGw6IFwibm9uZVwiLFxuICAgICAgICBzdHJva2U6IHByb3BzLmNvbG9yLFxuICAgICAgICBzdHJva2VXaWR0aDogXCI0XCIsXG4gICAgICAgIGN4OiBcIjUwXCIsXG4gICAgICAgIGN5OiBcIjUwXCIsXG4gICAgICAgIHI6IHByb3BzLnJhZGl1cyArIDM4LFxuICAgICAgICBzdHlsZTogeyBvcGFjaXR5OiAwLjUgfVxuICAgICAgfSksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBmaWxsOiBwcm9wcy5jb2xvciwgc3Ryb2tlOiBwcm9wcy5jb2xvciwgc3Ryb2tlV2lkdGg6IFwiM1wiLCBjeDogXCI4XCIsIGN5OiBcIjU0XCIsIHI6IHByb3BzLnJhZGl1cyB9LFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVUcmFuc2Zvcm1cIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwidHJhbnNmb3JtXCIsXG4gICAgICAgICAgZHVyOiBcIjJzXCIsXG4gICAgICAgICAgdHlwZTogXCJyb3RhdGVcIixcbiAgICAgICAgICBmcm9tOiBcIjAgNTAgNDhcIixcbiAgICAgICAgICB0bzogXCIzNjAgNTAgNTJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIFJldm9sdmluZ0RvdC5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIHJhZGl1czogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJcbiAgfTtcblxuICBSZXZvbHZpbmdEb3QuZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiLFxuICAgIHJhZGl1czogNlxuICB9O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImV4cG9ydHNcIiwgXCJyZWFjdFwiLCBcInByb3AtdHlwZXNcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCwgZ2xvYmFsLnByb3BUeXBlcyk7XG4gICAgZ2xvYmFsLlJpbmdzID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuUmluZ3MgPSB1bmRlZmluZWQ7XG5cbiAgdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbiAgdmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIFJpbmdzID0gZXhwb3J0cy5SaW5ncyA9IGZ1bmN0aW9uIFJpbmdzKHByb3BzKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJzdmdcIixcbiAgICAgIHtcbiAgICAgICAgd2lkdGg6IHByb3BzLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCxcbiAgICAgICAgdmlld0JveDogXCIwIDAgNDUgNDVcIixcbiAgICAgICAgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIixcbiAgICAgICAgc3Ryb2tlOiBwcm9wcy5jb2xvcixcbiAgICAgICAgXCJhcmlhLWxhYmVsXCI6IHByb3BzLmxhYmVsXG4gICAgICB9LFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwiZ1wiLFxuICAgICAgICB7IGZpbGw6IFwibm9uZVwiLCBmaWxsUnVsZTogXCJldmVub2RkXCIsIHRyYW5zZm9ybTogXCJ0cmFuc2xhdGUoMSAxKVwiLCBzdHJva2VXaWR0aDogXCIyXCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgICB7IGN4OiBcIjIyXCIsIGN5OiBcIjIyXCIsIHI6IHByb3BzLnJhZGl1cywgc3Ryb2tlT3BhY2l0eTogXCIwXCIgfSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJyXCIsXG4gICAgICAgICAgICBiZWdpbjogXCIxLjVzXCIsXG4gICAgICAgICAgICBkdXI6IFwiM3NcIixcbiAgICAgICAgICAgIHZhbHVlczogXCI2OzIyXCIsXG4gICAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInN0cm9rZS1vcGFjaXR5XCIsXG4gICAgICAgICAgICBiZWdpbjogXCIxLjVzXCIsXG4gICAgICAgICAgICBkdXI6IFwiM3NcIixcbiAgICAgICAgICAgIHZhbHVlczogXCIxOzBcIixcbiAgICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgfSksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwic3Ryb2tlLXdpZHRoXCIsXG4gICAgICAgICAgICBiZWdpbjogXCIxLjVzXCIsXG4gICAgICAgICAgICBkdXI6IFwiM3NcIixcbiAgICAgICAgICAgIHZhbHVlczogXCIyOzBcIixcbiAgICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgfSlcbiAgICAgICAgKSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgICB7IGN4OiBcIjIyXCIsIGN5OiBcIjIyXCIsIHI6IHByb3BzLnJhZGl1cywgc3Ryb2tlT3BhY2l0eTogXCIwXCIgfSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJyXCIsXG4gICAgICAgICAgICBiZWdpbjogXCIzc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjNzXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiNjsyMlwiLFxuICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJzdHJva2VPcGFjaXR5XCIsXG4gICAgICAgICAgICBiZWdpbjogXCIzc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjNzXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiMTswXCIsXG4gICAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgIH0pLFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInN0cm9rZVdpZHRoXCIsXG4gICAgICAgICAgICBiZWdpbjogXCIzc1wiLFxuICAgICAgICAgICAgZHVyOiBcIjNzXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiMjswXCIsXG4gICAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgIH0pXG4gICAgICAgICksXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwiY2lyY2xlXCIsXG4gICAgICAgICAgeyBjeDogXCIyMlwiLCBjeTogXCIyMlwiLCByOiBwcm9wcy5yYWRpdXMgKyAyIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJhbmltYXRlXCIsIHtcbiAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiclwiLFxuICAgICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICAgIGR1cjogXCIxLjVzXCIsXG4gICAgICAgICAgICB2YWx1ZXM6IFwiNjsxOzI7Mzs0OzU7NlwiLFxuICAgICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgICB9KVxuICAgICAgICApXG4gICAgICApXG4gICAgKTtcbiAgfTtcblxuICBSaW5ncy5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIHJhZGl1czogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJcbiAgfTtcblxuICBSaW5ncy5kZWZhdWx0UHJvcHMgPSB7XG4gICAgaGVpZ2h0OiA4MCxcbiAgICB3aWR0aDogODAsXG4gICAgY29sb3I6IFwiZ3JlZW5cIixcbiAgICByYWRpdXM6IDYsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiXG4gIH07XG59KTsiLCIoZnVuY3Rpb24gKGdsb2JhbCwgZmFjdG9yeSkge1xuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gXCJmdW5jdGlvblwiICYmIGRlZmluZS5hbWQpIHtcbiAgICBkZWZpbmUoW1wiZXhwb3J0c1wiLCBcInJlYWN0XCIsIFwicHJvcC10eXBlc1wiXSwgZmFjdG9yeSk7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGV4cG9ydHMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBmYWN0b3J5KGV4cG9ydHMsIHJlcXVpcmUoXCJyZWFjdFwiKSwgcmVxdWlyZShcInByb3AtdHlwZXNcIikpO1xuICB9IGVsc2Uge1xuICAgIHZhciBtb2QgPSB7XG4gICAgICBleHBvcnRzOiB7fVxuICAgIH07XG4gICAgZmFjdG9yeShtb2QuZXhwb3J0cywgZ2xvYmFsLnJlYWN0LCBnbG9iYWwucHJvcFR5cGVzKTtcbiAgICBnbG9iYWwuVGFpbFNwaW4gPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIF9yZWFjdCwgX3Byb3BUeXBlcykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5UYWlsU3BpbiA9IHVuZGVmaW5lZDtcblxuICB2YXIgX3JlYWN0MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3JlYWN0KTtcblxuICB2YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG4gIGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgIGRlZmF1bHQ6IG9ialxuICAgIH07XG4gIH1cblxuICB2YXIgVGFpbFNwaW4gPSBleHBvcnRzLlRhaWxTcGluID0gZnVuY3Rpb24gVGFpbFNwaW4ocHJvcHMpIHtcbiAgICByZXR1cm4gX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICBcInN2Z1wiLFxuICAgICAge1xuICAgICAgICB3aWR0aDogcHJvcHMud2lkdGgsXG4gICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICB2aWV3Qm94OiBcIjAgMCAzOCAzOFwiLFxuICAgICAgICB4bWxuczogXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJkZWZzXCIsXG4gICAgICAgIG51bGwsXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIFwibGluZWFyR3JhZGllbnRcIixcbiAgICAgICAgICB7IHgxOiBcIjguMDQyJVwiLCB5MTogXCIwJVwiLCB4MjogXCI2NS42ODIlXCIsIHkyOiBcIjIzLjg2NSVcIiwgaWQ6IFwiYVwiIH0sXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdG9wXCIsIHsgc3RvcENvbG9yOiBwcm9wcy5jb2xvciwgc3RvcE9wYWNpdHk6IFwiMFwiLCBvZmZzZXQ6IFwiMCVcIiB9KSxcbiAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcInN0b3BcIiwgeyBzdG9wQ29sb3I6IHByb3BzLmNvbG9yLCBzdG9wT3BhY2l0eTogXCIuNjMxXCIsIG9mZnNldDogXCI2My4xNDYlXCIgfSksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJzdG9wXCIsIHsgc3RvcENvbG9yOiBwcm9wcy5jb2xvciwgb2Zmc2V0OiBcIjEwMCVcIiB9KVxuICAgICAgICApXG4gICAgICApLFxuICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFwiZ1wiLFxuICAgICAgICB7IGZpbGw6IFwibm9uZVwiLCBmaWxsUnVsZTogXCJldmVub2RkXCIgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgXCJnXCIsXG4gICAgICAgICAgeyB0cmFuc2Zvcm06IFwidHJhbnNsYXRlKDEgMSlcIiB9LFxuICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgXCJwYXRoXCIsXG4gICAgICAgICAgICB7IGQ6IFwiTTM2IDE4YzAtOS45NC04LjA2LTE4LTE4LTE4XCIsIGlkOiBcIk92YWwtMlwiLCBzdHJva2U6IHByb3BzLmNvbG9yLCBzdHJva2VXaWR0aDogXCIyXCIgfSxcbiAgICAgICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVRyYW5zZm9ybVwiLCB7XG4gICAgICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwidHJhbnNmb3JtXCIsXG4gICAgICAgICAgICAgIHR5cGU6IFwicm90YXRlXCIsXG4gICAgICAgICAgICAgIGZyb206IFwiMCAxOCAxOFwiLFxuICAgICAgICAgICAgICB0bzogXCIzNjAgMTggMThcIixcbiAgICAgICAgICAgICAgZHVyOiBcIjAuOXNcIixcbiAgICAgICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICksXG4gICAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICBcImNpcmNsZVwiLFxuICAgICAgICAgICAgeyBmaWxsOiBcIiNmZmZcIiwgY3g6IFwiMzZcIiwgY3k6IFwiMThcIiwgcjogcHJvcHMucmFkaXVzIH0sXG4gICAgICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVUcmFuc2Zvcm1cIiwge1xuICAgICAgICAgICAgICBhdHRyaWJ1dGVOYW1lOiBcInRyYW5zZm9ybVwiLFxuICAgICAgICAgICAgICB0eXBlOiBcInJvdGF0ZVwiLFxuICAgICAgICAgICAgICBmcm9tOiBcIjAgMTggMThcIixcbiAgICAgICAgICAgICAgdG86IFwiMzYwIDE4IDE4XCIsXG4gICAgICAgICAgICAgIGR1cjogXCIwLjlzXCIsXG4gICAgICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICAgICAgfSlcbiAgICAgICAgICApXG4gICAgICAgIClcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIFRhaWxTcGluLnByb3BUeXBlcyA9IHtcbiAgICBoZWlnaHQ6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICB3aWR0aDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIGNvbG9yOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyxcbiAgICBsYWJlbDogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgcmFkaXVzOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlclxuICB9O1xuXG4gIFRhaWxTcGluLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6IDgwLFxuICAgIHdpZHRoOiA4MCxcbiAgICBjb2xvcjogXCJncmVlblwiLFxuICAgIHJhZGl1czogMSxcbiAgICBsYWJlbDogXCJhdWRpby1sb2FkaW5nXCJcbiAgfTtcbn0pOyIsIihmdW5jdGlvbiAoZ2xvYmFsLCBmYWN0b3J5KSB7XG4gIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXCJleHBvcnRzXCIsIFwicmVhY3RcIiwgXCJwcm9wLXR5cGVzXCJdLCBmYWN0b3J5KTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGZhY3RvcnkoZXhwb3J0cywgcmVxdWlyZShcInJlYWN0XCIpLCByZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIG1vZCA9IHtcbiAgICAgIGV4cG9ydHM6IHt9XG4gICAgfTtcbiAgICBmYWN0b3J5KG1vZC5leHBvcnRzLCBnbG9iYWwucmVhY3QsIGdsb2JhbC5wcm9wVHlwZXMpO1xuICAgIGdsb2JhbC5UaHJlZURvdHMgPSBtb2QuZXhwb3J0cztcbiAgfVxufSkodGhpcywgZnVuY3Rpb24gKGV4cG9ydHMsIF9yZWFjdCwgX3Byb3BUeXBlcykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxuICB9KTtcbiAgZXhwb3J0cy5UaHJlZURvdHMgPSB1bmRlZmluZWQ7XG5cbiAgdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbiAgdmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIFRocmVlRG90cyA9IGV4cG9ydHMuVGhyZWVEb3RzID0gZnVuY3Rpb24gVGhyZWVEb3RzKHByb3BzKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJzdmdcIixcbiAgICAgIHtcbiAgICAgICAgd2lkdGg6IHByb3BzLndpZHRoLFxuICAgICAgICBoZWlnaHQ6IHByb3BzLmhlaWdodCxcbiAgICAgICAgdmlld0JveDogXCIwIDAgMTIwIDMwXCIsXG4gICAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIsXG4gICAgICAgIGZpbGw6IHByb3BzLmNvbG9yLFxuICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAgeyBjeDogXCIxNVwiLCBjeTogXCIxNVwiLCByOiBwcm9wcy5yYWRpdXMgKyA2IH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJyXCIsXG4gICAgICAgICAgZnJvbTogXCIxNVwiLFxuICAgICAgICAgIHRvOiBcIjE1XCIsXG4gICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICBkdXI6IFwiMC44c1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxNTs5OzE1XCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiZmlsbE9wYWNpdHlcIixcbiAgICAgICAgICBmcm9tOiBcIjFcIixcbiAgICAgICAgICB0bzogXCIxXCIsXG4gICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICBkdXI6IFwiMC44c1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy41OzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgICksXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJjaXJjbGVcIixcbiAgICAgICAge1xuICAgICAgICAgIGN4OiBcIjYwXCIsXG4gICAgICAgICAgY3k6IFwiMTVcIixcbiAgICAgICAgICByOiBwcm9wcy5yYWRpdXMsXG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJmaWxsT3BhY2l0eVwiLFxuICAgICAgICAgIGZyb206IFwiMVwiLFxuICAgICAgICAgIHRvOiBcIjAuM1wiXG4gICAgICAgIH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJyXCIsXG4gICAgICAgICAgZnJvbTogXCI5XCIsXG4gICAgICAgICAgdG86IFwiOVwiLFxuICAgICAgICAgIGJlZ2luOiBcIjBzXCIsXG4gICAgICAgICAgZHVyOiBcIjAuOHNcIixcbiAgICAgICAgICB2YWx1ZXM6IFwiOTsxNTs5XCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiZmlsbE9wYWNpdHlcIixcbiAgICAgICAgICBmcm9tOiBcIjAuNVwiLFxuICAgICAgICAgIHRvOiBcIjAuNVwiLFxuICAgICAgICAgIGJlZ2luOiBcIjBzXCIsXG4gICAgICAgICAgZHVyOiBcIjAuOHNcIixcbiAgICAgICAgICB2YWx1ZXM6IFwiLjU7MTsuNVwiLFxuICAgICAgICAgIGNhbGNNb2RlOiBcImxpbmVhclwiLFxuICAgICAgICAgIHJlcGVhdENvdW50OiBcImluZGVmaW5pdGVcIlxuICAgICAgICB9KVxuICAgICAgKSxcbiAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBcImNpcmNsZVwiLFxuICAgICAgICB7IGN4OiBcIjEwNVwiLCBjeTogXCIxNVwiLCByOiBwcm9wcy5yYWRpdXMgKyA2IH0sXG4gICAgICAgIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFwiYW5pbWF0ZVwiLCB7XG4gICAgICAgICAgYXR0cmlidXRlTmFtZTogXCJyXCIsXG4gICAgICAgICAgZnJvbTogXCIxNVwiLFxuICAgICAgICAgIHRvOiBcIjE1XCIsXG4gICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICBkdXI6IFwiMC44c1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxNTs5OzE1XCIsXG4gICAgICAgICAgY2FsY01vZGU6IFwibGluZWFyXCIsXG4gICAgICAgICAgcmVwZWF0Q291bnQ6IFwiaW5kZWZpbml0ZVwiXG4gICAgICAgIH0pLFxuICAgICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcImFuaW1hdGVcIiwge1xuICAgICAgICAgIGF0dHJpYnV0ZU5hbWU6IFwiZmlsbE9wYWNpdHlcIixcbiAgICAgICAgICBmcm9tOiBcIjFcIixcbiAgICAgICAgICB0bzogXCIxXCIsXG4gICAgICAgICAgYmVnaW46IFwiMHNcIixcbiAgICAgICAgICBkdXI6IFwiMC44c1wiLFxuICAgICAgICAgIHZhbHVlczogXCIxOy41OzFcIixcbiAgICAgICAgICBjYWxjTW9kZTogXCJsaW5lYXJcIixcbiAgICAgICAgICByZXBlYXRDb3VudDogXCJpbmRlZmluaXRlXCJcbiAgICAgICAgfSlcbiAgICAgIClcbiAgICApO1xuICB9O1xuXG4gIFRocmVlRG90cy5wcm9wVHlwZXMgPSB7XG4gICAgaGVpZ2h0OiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgd2lkdGg6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZywgX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJdKSxcbiAgICBjb2xvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gICAgbGFiZWw6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIHJhZGl1czogX3Byb3BUeXBlczIuZGVmYXVsdC5udW1iZXJcbiAgfTtcblxuICBUaHJlZURvdHMuZGVmYXVsdFByb3BzID0ge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6IDgwLFxuICAgIGNvbG9yOiBcImdyZWVuXCIsXG4gICAgbGFiZWw6IFwiYXVkaW8tbG9hZGluZ1wiLFxuICAgIHJhZGl1czogOVxuICB9O1xufSk7IiwiKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKFtcImV4cG9ydHNcIiwgXCJyZWFjdFwiLCBcInByb3AtdHlwZXNcIl0sIGZhY3RvcnkpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBleHBvcnRzICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgZmFjdG9yeShleHBvcnRzLCByZXF1aXJlKFwicmVhY3RcIiksIHJlcXVpcmUoXCJwcm9wLXR5cGVzXCIpKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbW9kID0ge1xuICAgICAgZXhwb3J0czoge31cbiAgICB9O1xuICAgIGZhY3RvcnkobW9kLmV4cG9ydHMsIGdsb2JhbC5yZWFjdCwgZ2xvYmFsLnByb3BUeXBlcyk7XG4gICAgZ2xvYmFsLlRyaWFuZ2xlID0gbW9kLmV4cG9ydHM7XG4gIH1cbn0pKHRoaXMsIGZ1bmN0aW9uIChleHBvcnRzLCBfcmVhY3QsIF9wcm9wVHlwZXMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbiAgfSk7XG4gIGV4cG9ydHMuVHJpYW5nbGUgPSB1bmRlZmluZWQ7XG5cbiAgdmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbiAgdmFyIF9wcm9wVHlwZXMyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfcHJvcFR5cGVzKTtcblxuICBmdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikge1xuICAgIHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7XG4gICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xuICB9XG5cbiAgdmFyIFRyaWFuZ2xlID0gZXhwb3J0cy5UcmlhbmdsZSA9IGZ1bmN0aW9uIFRyaWFuZ2xlKHByb3BzKSB7XG4gICAgcmV0dXJuIF9yZWFjdDIuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFxuICAgICAgXCJkaXZcIixcbiAgICAgIHsgY2xhc3NOYW1lOiBcInJlYWN0LXNwaW5uZXItbG9hZGVyLXN2Z1wiIH0sXG4gICAgICBfcmVhY3QyLmRlZmF1bHQuY3JlYXRlRWxlbWVudChcbiAgICAgICAgXCJzdmdcIixcbiAgICAgICAge1xuICAgICAgICAgIGlkOiBcInRyaWFuZ2xlXCIsXG4gICAgICAgICAgd2lkdGg6IHByb3BzLndpZHRoLFxuICAgICAgICAgIGhlaWdodDogcHJvcHMuaGVpZ2h0LFxuICAgICAgICAgIHZpZXdCb3g6IFwiLTMgLTQgMzkgMzlcIixcbiAgICAgICAgICBcImFyaWEtbGFiZWxcIjogcHJvcHMubGFiZWxcbiAgICAgICAgfSxcbiAgICAgICAgX3JlYWN0Mi5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoXCJwb2x5Z29uXCIsIHsgZmlsbDogXCJ0cmFuc3BhcmVudFwiLCBzdHJva2U6IHByb3BzLmNvbG9yLCBzdHJva2VXaWR0aDogXCIxXCIsIHBvaW50czogXCIxNiwwIDMyLDMyIDAsMzJcIiB9KVxuICAgICAgKVxuICAgICk7XG4gIH07XG5cbiAgVHJpYW5nbGUucHJvcFR5cGVzID0ge1xuICAgIGhlaWdodDogX3Byb3BUeXBlczIuZGVmYXVsdC5vbmVPZlR5cGUoW19wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm51bWJlcl0pLFxuICAgIHdpZHRoOiBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsIF9wcm9wVHlwZXMyLmRlZmF1bHQubnVtYmVyXSksXG4gICAgY29sb3I6IF9wcm9wVHlwZXMyLmRlZmF1bHQuc3RyaW5nLFxuICAgIGxhYmVsOiBfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZ1xuICB9O1xuXG4gIFRyaWFuZ2xlLmRlZmF1bHRQcm9wcyA9IHtcbiAgICBoZWlnaHQ6IDgwLFxuICAgIHdpZHRoOiA4MCxcbiAgICBjb2xvcjogXCJncmVlblwiLFxuICAgIGxhYmVsOiBcImF1ZGlvLWxvYWRpbmdcIlxuICB9O1xufSk7IiwiJ3VzZSBzdHJpY3QnO1xuXG5leHBvcnRzLl9fZXNNb2R1bGUgPSB0cnVlO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIF9yZWFjdDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9yZWFjdCk7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX2d1ZCA9IHJlcXVpcmUoJ2d1ZCcpO1xuXG52YXIgX2d1ZDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9ndWQpO1xuXG52YXIgX3dhcm5pbmcgPSByZXF1aXJlKCd3YXJuaW5nJyk7XG5cbnZhciBfd2FybmluZzIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF93YXJuaW5nKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpOyB9IH1cblxuZnVuY3Rpb24gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4oc2VsZiwgY2FsbCkgeyBpZiAoIXNlbGYpIHsgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpOyB9IHJldHVybiBjYWxsICYmICh0eXBlb2YgY2FsbCA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgY2FsbCA9PT0gXCJmdW5jdGlvblwiKSA/IGNhbGwgOiBzZWxmOyB9XG5cbmZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykgeyBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvbiwgbm90IFwiICsgdHlwZW9mIHN1cGVyQ2xhc3MpOyB9IHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcyAmJiBzdXBlckNsYXNzLnByb3RvdHlwZSwgeyBjb25zdHJ1Y3RvcjogeyB2YWx1ZTogc3ViQ2xhc3MsIGVudW1lcmFibGU6IGZhbHNlLCB3cml0YWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlIH0gfSk7IGlmIChzdXBlckNsYXNzKSBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2Yoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIDogc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzczsgfVxuXG52YXIgTUFYX1NJR05FRF8zMV9CSVRfSU5UID0gMTA3Mzc0MTgyMztcblxuLy8gSW5saW5lZCBPYmplY3QuaXMgcG9seWZpbGwuXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9PYmplY3QvaXNcbmZ1bmN0aW9uIG9iamVjdElzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHggIT09IHggJiYgeSAhPT0geTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjcmVhdGVFdmVudEVtaXR0ZXIodmFsdWUpIHtcbiAgdmFyIGhhbmRsZXJzID0gW107XG4gIHJldHVybiB7XG4gICAgb246IGZ1bmN0aW9uIG9uKGhhbmRsZXIpIHtcbiAgICAgIGhhbmRsZXJzLnB1c2goaGFuZGxlcik7XG4gICAgfSxcbiAgICBvZmY6IGZ1bmN0aW9uIG9mZihoYW5kbGVyKSB7XG4gICAgICBoYW5kbGVycyA9IGhhbmRsZXJzLmZpbHRlcihmdW5jdGlvbiAoaCkge1xuICAgICAgICByZXR1cm4gaCAhPT0gaGFuZGxlcjtcbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gdmFsdWU7XG4gICAgfSxcbiAgICBzZXQ6IGZ1bmN0aW9uIHNldChuZXdWYWx1ZSwgY2hhbmdlZEJpdHMpIHtcbiAgICAgIHZhbHVlID0gbmV3VmFsdWU7XG4gICAgICBoYW5kbGVycy5mb3JFYWNoKGZ1bmN0aW9uIChoYW5kbGVyKSB7XG4gICAgICAgIHJldHVybiBoYW5kbGVyKHZhbHVlLCBjaGFuZ2VkQml0cyk7XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG59XG5cbmZ1bmN0aW9uIG9ubHlDaGlsZChjaGlsZHJlbikge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlblswXSA6IGNoaWxkcmVuO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVSZWFjdENvbnRleHQoZGVmYXVsdFZhbHVlLCBjYWxjdWxhdGVDaGFuZ2VkQml0cykge1xuICB2YXIgX1Byb3ZpZGVyJGNoaWxkQ29udGV4LCBfQ29uc3VtZXIkY29udGV4dFR5cGU7XG5cbiAgdmFyIGNvbnRleHRQcm9wID0gJ19fY3JlYXRlLXJlYWN0LWNvbnRleHQtJyArICgwLCBfZ3VkMi5kZWZhdWx0KSgpICsgJ19fJztcblxuICB2YXIgUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBmdW5jdGlvbiBQcm92aWRlcigpIHtcbiAgICAgIHZhciBfdGVtcCwgX3RoaXMsIF9yZXQ7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBQcm92aWRlcik7XG5cbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfcmV0ID0gKF90ZW1wID0gKF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX0NvbXBvbmVudC5jYWxsLmFwcGx5KF9Db21wb25lbnQsIFt0aGlzXS5jb25jYXQoYXJncykpKSwgX3RoaXMpLCBfdGhpcy5lbWl0dGVyID0gY3JlYXRlRXZlbnRFbWl0dGVyKF90aGlzLnByb3BzLnZhbHVlKSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gICAgfVxuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmdldENoaWxkQ29udGV4dCA9IGZ1bmN0aW9uIGdldENoaWxkQ29udGV4dCgpIHtcbiAgICAgIHZhciBfcmVmO1xuXG4gICAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW2NvbnRleHRQcm9wXSA9IHRoaXMuZW1pdHRlciwgX3JlZjtcbiAgICB9O1xuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXMucHJvcHMudmFsdWUgIT09IG5leHRQcm9wcy52YWx1ZSkge1xuICAgICAgICB2YXIgb2xkVmFsdWUgPSB0aGlzLnByb3BzLnZhbHVlO1xuICAgICAgICB2YXIgbmV3VmFsdWUgPSBuZXh0UHJvcHMudmFsdWU7XG4gICAgICAgIHZhciBjaGFuZ2VkQml0cyA9IHZvaWQgMDtcblxuICAgICAgICBpZiAob2JqZWN0SXMob2xkVmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgIGNoYW5nZWRCaXRzID0gMDsgLy8gTm8gY2hhbmdlXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY2hhbmdlZEJpdHMgPSB0eXBlb2YgY2FsY3VsYXRlQ2hhbmdlZEJpdHMgPT09ICdmdW5jdGlvbicgPyBjYWxjdWxhdGVDaGFuZ2VkQml0cyhvbGRWYWx1ZSwgbmV3VmFsdWUpIDogTUFYX1NJR05FRF8zMV9CSVRfSU5UO1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAoMCwgX3dhcm5pbmcyLmRlZmF1bHQpKChjaGFuZ2VkQml0cyAmIE1BWF9TSUdORURfMzFfQklUX0lOVCkgPT09IGNoYW5nZWRCaXRzLCAnY2FsY3VsYXRlQ2hhbmdlZEJpdHM6IEV4cGVjdGVkIHRoZSByZXR1cm4gdmFsdWUgdG8gYmUgYSAnICsgJzMxLWJpdCBpbnRlZ2VyLiBJbnN0ZWFkIHJlY2VpdmVkOiAlcycsIGNoYW5nZWRCaXRzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjaGFuZ2VkQml0cyB8PSAwO1xuXG4gICAgICAgICAgaWYgKGNoYW5nZWRCaXRzICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmVtaXR0ZXIuc2V0KG5leHRQcm9wcy52YWx1ZSwgY2hhbmdlZEJpdHMpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH07XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgfTtcblxuICAgIHJldHVybiBQcm92aWRlcjtcbiAgfShfcmVhY3QuQ29tcG9uZW50KTtcblxuICBQcm92aWRlci5jaGlsZENvbnRleHRUeXBlcyA9IChfUHJvdmlkZXIkY2hpbGRDb250ZXggPSB7fSwgX1Byb3ZpZGVyJGNoaWxkQ29udGV4W2NvbnRleHRQcm9wXSA9IF9wcm9wVHlwZXMyLmRlZmF1bHQub2JqZWN0LmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgdmFyIENvbnN1bWVyID0gZnVuY3Rpb24gKF9Db21wb25lbnQyKSB7XG4gICAgX2luaGVyaXRzKENvbnN1bWVyLCBfQ29tcG9uZW50Mik7XG5cbiAgICBmdW5jdGlvbiBDb25zdW1lcigpIHtcbiAgICAgIHZhciBfdGVtcDIsIF90aGlzMiwgX3JldDI7XG5cbiAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb25zdW1lcik7XG5cbiAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF9yZXQyID0gKF90ZW1wMiA9IChfdGhpczIgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50Mi5jYWxsLmFwcGx5KF9Db21wb25lbnQyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzMiksIF90aGlzMi5zdGF0ZSA9IHtcbiAgICAgICAgdmFsdWU6IF90aGlzMi5nZXRWYWx1ZSgpXG4gICAgICB9LCBfdGhpczIub25VcGRhdGUgPSBmdW5jdGlvbiAobmV3VmFsdWUsIGNoYW5nZWRCaXRzKSB7XG4gICAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBfdGhpczIub2JzZXJ2ZWRCaXRzIHwgMDtcbiAgICAgICAgaWYgKChvYnNlcnZlZEJpdHMgJiBjaGFuZ2VkQml0cykgIT09IDApIHtcbiAgICAgICAgICBfdGhpczIuc2V0U3RhdGUoeyB2YWx1ZTogX3RoaXMyLmdldFZhbHVlKCkgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sIF90ZW1wMiksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzMiwgX3JldDIpO1xuICAgIH1cblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSBuZXh0UHJvcHMub2JzZXJ2ZWRCaXRzO1xuXG4gICAgICB0aGlzLm9ic2VydmVkQml0cyA9IG9ic2VydmVkQml0cyA9PT0gdW5kZWZpbmVkIHx8IG9ic2VydmVkQml0cyA9PT0gbnVsbCA/IE1BWF9TSUdORURfMzFfQklUX0lOVCAvLyBTdWJzY3JpYmUgdG8gYWxsIGNoYW5nZXMgYnkgZGVmYXVsdFxuICAgICAgOiBvYnNlcnZlZEJpdHM7XG4gICAgfTtcblxuICAgIENvbnN1bWVyLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgaWYgKHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0pIHtcbiAgICAgICAgdGhpcy5jb250ZXh0W2NvbnRleHRQcm9wXS5vbih0aGlzLm9uVXBkYXRlKTtcbiAgICAgIH1cbiAgICAgIHZhciBvYnNlcnZlZEJpdHMgPSB0aGlzLnByb3BzLm9ic2VydmVkQml0cztcblxuICAgICAgdGhpcy5vYnNlcnZlZEJpdHMgPSBvYnNlcnZlZEJpdHMgPT09IHVuZGVmaW5lZCB8fCBvYnNlcnZlZEJpdHMgPT09IG51bGwgPyBNQVhfU0lHTkVEXzMxX0JJVF9JTlQgLy8gU3Vic2NyaWJlIHRvIGFsbCBjaGFuZ2VzIGJ5IGRlZmF1bHRcbiAgICAgIDogb2JzZXJ2ZWRCaXRzO1xuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVubW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHRoaXMuY29udGV4dFtjb250ZXh0UHJvcF0ub2ZmKHRoaXMub25VcGRhdGUpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBDb25zdW1lci5wcm90b3R5cGUuZ2V0VmFsdWUgPSBmdW5jdGlvbiBnZXRWYWx1ZSgpIHtcbiAgICAgIGlmICh0aGlzLmNvbnRleHRbY29udGV4dFByb3BdKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRleHRbY29udGV4dFByb3BdLmdldCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgQ29uc3VtZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBvbmx5Q2hpbGQodGhpcy5wcm9wcy5jaGlsZHJlbikodGhpcy5zdGF0ZS52YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiBDb25zdW1lcjtcbiAgfShfcmVhY3QuQ29tcG9uZW50KTtcblxuICBDb25zdW1lci5jb250ZXh0VHlwZXMgPSAoX0NvbnN1bWVyJGNvbnRleHRUeXBlID0ge30sIF9Db25zdW1lciRjb250ZXh0VHlwZVtjb250ZXh0UHJvcF0gPSBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdCwgX0NvbnN1bWVyJGNvbnRleHRUeXBlKTtcblxuXG4gIHJldHVybiB7XG4gICAgUHJvdmlkZXI6IFByb3ZpZGVyLFxuICAgIENvbnN1bWVyOiBDb25zdW1lclxuICB9O1xufVxuXG5leHBvcnRzLmRlZmF1bHQgPSBjcmVhdGVSZWFjdENvbnRleHQ7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIvLyBAZmxvd1xuJ3VzZSBzdHJpY3QnO1xuXG52YXIga2V5ID0gJ19fZ2xvYmFsX3VuaXF1ZV9pZF9fJztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbigpIHtcbiAgcmV0dXJuIGdsb2JhbFtrZXldID0gKGdsb2JhbFtrZXldIHx8IDApICsgMTtcbn07XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIF9fREVWX18gPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nO1xuXG52YXIgd2FybmluZyA9IGZ1bmN0aW9uKCkge307XG5cbmlmIChfX0RFVl9fKSB7XG4gIHZhciBwcmludFdhcm5pbmcgPSBmdW5jdGlvbiBwcmludFdhcm5pbmcoZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAxID8gbGVuIC0gMSA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDE7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMV0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107XG4gICAgICB9KTtcbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLmVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgLy8gLS0tIFdlbGNvbWUgdG8gZGVidWdnaW5nIFJlYWN0IC0tLVxuICAgICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCB5b3UgY2FuIHVzZSB0aGlzIHN0YWNrXG4gICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9IGNhdGNoICh4KSB7fVxuICB9XG5cbiAgd2FybmluZyA9IGZ1bmN0aW9uKGNvbmRpdGlvbiwgZm9ybWF0LCBhcmdzKSB7XG4gICAgdmFyIGxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgYXJncyA9IG5ldyBBcnJheShsZW4gPiAyID8gbGVuIC0gMiA6IDApO1xuICAgIGZvciAodmFyIGtleSA9IDI7IGtleSA8IGxlbjsga2V5KyspIHtcbiAgICAgIGFyZ3Nba2V5IC0gMl0gPSBhcmd1bWVudHNba2V5XTtcbiAgICB9XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAgICdtZXNzYWdlIGFyZ3VtZW50J1xuICAgICAgKTtcbiAgICB9XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHByaW50V2FybmluZy5hcHBseShudWxsLCBbZm9ybWF0XS5jb25jYXQoYXJncykpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vaGVscGVycy9iaW5kJyk7XG52YXIgQXhpb3MgPSByZXF1aXJlKCcuL2NvcmUvQXhpb3MnKTtcbnZhciBtZXJnZUNvbmZpZyA9IHJlcXVpcmUoJy4vY29yZS9tZXJnZUNvbmZpZycpO1xudmFyIGRlZmF1bHRzID0gcmVxdWlyZSgnLi9kZWZhdWx0cycpO1xuXG4vKipcbiAqIENyZWF0ZSBhbiBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0Q29uZmlnIFRoZSBkZWZhdWx0IGNvbmZpZyBmb3IgdGhlIGluc3RhbmNlXG4gKiBAcmV0dXJuIHtBeGlvc30gQSBuZXcgaW5zdGFuY2Ugb2YgQXhpb3NcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5zdGFuY2UoZGVmYXVsdENvbmZpZykge1xuICB2YXIgY29udGV4dCA9IG5ldyBBeGlvcyhkZWZhdWx0Q29uZmlnKTtcbiAgdmFyIGluc3RhbmNlID0gYmluZChBeGlvcy5wcm90b3R5cGUucmVxdWVzdCwgY29udGV4dCk7XG5cbiAgLy8gQ29weSBheGlvcy5wcm90b3R5cGUgdG8gaW5zdGFuY2VcbiAgdXRpbHMuZXh0ZW5kKGluc3RhbmNlLCBBeGlvcy5wcm90b3R5cGUsIGNvbnRleHQpO1xuXG4gIC8vIENvcHkgY29udGV4dCB0byBpbnN0YW5jZVxuICB1dGlscy5leHRlbmQoaW5zdGFuY2UsIGNvbnRleHQpO1xuXG4gIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8gQ3JlYXRlIHRoZSBkZWZhdWx0IGluc3RhbmNlIHRvIGJlIGV4cG9ydGVkXG52YXIgYXhpb3MgPSBjcmVhdGVJbnN0YW5jZShkZWZhdWx0cyk7XG5cbi8vIEV4cG9zZSBBeGlvcyBjbGFzcyB0byBhbGxvdyBjbGFzcyBpbmhlcml0YW5jZVxuYXhpb3MuQXhpb3MgPSBBeGlvcztcblxuLy8gRmFjdG9yeSBmb3IgY3JlYXRpbmcgbmV3IGluc3RhbmNlc1xuYXhpb3MuY3JlYXRlID0gZnVuY3Rpb24gY3JlYXRlKGluc3RhbmNlQ29uZmlnKSB7XG4gIHJldHVybiBjcmVhdGVJbnN0YW5jZShtZXJnZUNvbmZpZyhheGlvcy5kZWZhdWx0cywgaW5zdGFuY2VDb25maWcpKTtcbn07XG5cbi8vIEV4cG9zZSBDYW5jZWwgJiBDYW5jZWxUb2tlblxuYXhpb3MuQ2FuY2VsID0gcmVxdWlyZSgnLi9jYW5jZWwvQ2FuY2VsJyk7XG5heGlvcy5DYW5jZWxUb2tlbiA9IHJlcXVpcmUoJy4vY2FuY2VsL0NhbmNlbFRva2VuJyk7XG5heGlvcy5pc0NhbmNlbCA9IHJlcXVpcmUoJy4vY2FuY2VsL2lzQ2FuY2VsJyk7XG5cbi8vIEV4cG9zZSBhbGwvc3ByZWFkXG5heGlvcy5hbGwgPSBmdW5jdGlvbiBhbGwocHJvbWlzZXMpIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbn07XG5heGlvcy5zcHJlYWQgPSByZXF1aXJlKCcuL2hlbHBlcnMvc3ByZWFkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gYXhpb3M7XG5cbi8vIEFsbG93IHVzZSBvZiBkZWZhdWx0IGltcG9ydCBzeW50YXggaW4gVHlwZVNjcmlwdFxubW9kdWxlLmV4cG9ydHMuZGVmYXVsdCA9IGF4aW9zO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG52YXIgYnVpbGRVUkwgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2J1aWxkVVJMJyk7XG52YXIgSW50ZXJjZXB0b3JNYW5hZ2VyID0gcmVxdWlyZSgnLi9JbnRlcmNlcHRvck1hbmFnZXInKTtcbnZhciBkaXNwYXRjaFJlcXVlc3QgPSByZXF1aXJlKCcuL2Rpc3BhdGNoUmVxdWVzdCcpO1xudmFyIG1lcmdlQ29uZmlnID0gcmVxdWlyZSgnLi9tZXJnZUNvbmZpZycpO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBBeGlvc1xuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBpbnN0YW5jZUNvbmZpZyBUaGUgZGVmYXVsdCBjb25maWcgZm9yIHRoZSBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBBeGlvcyhpbnN0YW5jZUNvbmZpZykge1xuICB0aGlzLmRlZmF1bHRzID0gaW5zdGFuY2VDb25maWc7XG4gIHRoaXMuaW50ZXJjZXB0b3JzID0ge1xuICAgIHJlcXVlc3Q6IG5ldyBJbnRlcmNlcHRvck1hbmFnZXIoKSxcbiAgICByZXNwb25zZTogbmV3IEludGVyY2VwdG9yTWFuYWdlcigpXG4gIH07XG59XG5cbi8qKlxuICogRGlzcGF0Y2ggYSByZXF1ZXN0XG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGNvbmZpZyBUaGUgY29uZmlnIHNwZWNpZmljIGZvciB0aGlzIHJlcXVlc3QgKG1lcmdlZCB3aXRoIHRoaXMuZGVmYXVsdHMpXG4gKi9cbkF4aW9zLnByb3RvdHlwZS5yZXF1ZXN0ID0gZnVuY3Rpb24gcmVxdWVzdChjb25maWcpIHtcbiAgLyplc2xpbnQgbm8tcGFyYW0tcmVhc3NpZ246MCovXG4gIC8vIEFsbG93IGZvciBheGlvcygnZXhhbXBsZS91cmwnWywgY29uZmlnXSkgYSBsYSBmZXRjaCBBUElcbiAgaWYgKHR5cGVvZiBjb25maWcgPT09ICdzdHJpbmcnKSB7XG4gICAgY29uZmlnID0gYXJndW1lbnRzWzFdIHx8IHt9O1xuICAgIGNvbmZpZy51cmwgPSBhcmd1bWVudHNbMF07XG4gIH0gZWxzZSB7XG4gICAgY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICB9XG5cbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcblxuICAvLyBTZXQgY29uZmlnLm1ldGhvZFxuICBpZiAoY29uZmlnLm1ldGhvZCkge1xuICAgIGNvbmZpZy5tZXRob2QgPSBjb25maWcubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG4gIH0gZWxzZSBpZiAodGhpcy5kZWZhdWx0cy5tZXRob2QpIHtcbiAgICBjb25maWcubWV0aG9kID0gdGhpcy5kZWZhdWx0cy5tZXRob2QudG9Mb3dlckNhc2UoKTtcbiAgfSBlbHNlIHtcbiAgICBjb25maWcubWV0aG9kID0gJ2dldCc7XG4gIH1cblxuICAvLyBIb29rIHVwIGludGVyY2VwdG9ycyBtaWRkbGV3YXJlXG4gIHZhciBjaGFpbiA9IFtkaXNwYXRjaFJlcXVlc3QsIHVuZGVmaW5lZF07XG4gIHZhciBwcm9taXNlID0gUHJvbWlzZS5yZXNvbHZlKGNvbmZpZyk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVxdWVzdC5mb3JFYWNoKGZ1bmN0aW9uIHVuc2hpZnRSZXF1ZXN0SW50ZXJjZXB0b3JzKGludGVyY2VwdG9yKSB7XG4gICAgY2hhaW4udW5zaGlmdChpbnRlcmNlcHRvci5mdWxmaWxsZWQsIGludGVyY2VwdG9yLnJlamVjdGVkKTtcbiAgfSk7XG5cbiAgdGhpcy5pbnRlcmNlcHRvcnMucmVzcG9uc2UuZm9yRWFjaChmdW5jdGlvbiBwdXNoUmVzcG9uc2VJbnRlcmNlcHRvcnMoaW50ZXJjZXB0b3IpIHtcbiAgICBjaGFpbi5wdXNoKGludGVyY2VwdG9yLmZ1bGZpbGxlZCwgaW50ZXJjZXB0b3IucmVqZWN0ZWQpO1xuICB9KTtcblxuICB3aGlsZSAoY2hhaW4ubGVuZ3RoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UudGhlbihjaGFpbi5zaGlmdCgpLCBjaGFpbi5zaGlmdCgpKTtcbiAgfVxuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuQXhpb3MucHJvdG90eXBlLmdldFVyaSA9IGZ1bmN0aW9uIGdldFVyaShjb25maWcpIHtcbiAgY29uZmlnID0gbWVyZ2VDb25maWcodGhpcy5kZWZhdWx0cywgY29uZmlnKTtcbiAgcmV0dXJuIGJ1aWxkVVJMKGNvbmZpZy51cmwsIGNvbmZpZy5wYXJhbXMsIGNvbmZpZy5wYXJhbXNTZXJpYWxpemVyKS5yZXBsYWNlKC9eXFw/LywgJycpO1xufTtcblxuLy8gUHJvdmlkZSBhbGlhc2VzIGZvciBzdXBwb3J0ZWQgcmVxdWVzdCBtZXRob2RzXG51dGlscy5mb3JFYWNoKFsnZGVsZXRlJywgJ2dldCcsICdoZWFkJywgJ29wdGlvbnMnXSwgZnVuY3Rpb24gZm9yRWFjaE1ldGhvZE5vRGF0YShtZXRob2QpIHtcbiAgLyplc2xpbnQgZnVuYy1uYW1lczowKi9cbiAgQXhpb3MucHJvdG90eXBlW21ldGhvZF0gPSBmdW5jdGlvbih1cmwsIGNvbmZpZykge1xuICAgIHJldHVybiB0aGlzLnJlcXVlc3QobWVyZ2VDb25maWcoY29uZmlnIHx8IHt9LCB7XG4gICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgIHVybDogdXJsXG4gICAgfSkpO1xuICB9O1xufSk7XG5cbnV0aWxzLmZvckVhY2goWydwb3N0JywgJ3B1dCcsICdwYXRjaCddLCBmdW5jdGlvbiBmb3JFYWNoTWV0aG9kV2l0aERhdGEobWV0aG9kKSB7XG4gIC8qZXNsaW50IGZ1bmMtbmFtZXM6MCovXG4gIEF4aW9zLnByb3RvdHlwZVttZXRob2RdID0gZnVuY3Rpb24odXJsLCBkYXRhLCBjb25maWcpIHtcbiAgICByZXR1cm4gdGhpcy5yZXF1ZXN0KG1lcmdlQ29uZmlnKGNvbmZpZyB8fCB7fSwge1xuICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICB1cmw6IHVybCxcbiAgICAgIGRhdGE6IGRhdGFcbiAgICB9KSk7XG4gIH07XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBBeGlvcztcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWxzID0gcmVxdWlyZSgnLi8uLi91dGlscycpO1xuXG5mdW5jdGlvbiBJbnRlcmNlcHRvck1hbmFnZXIoKSB7XG4gIHRoaXMuaGFuZGxlcnMgPSBbXTtcbn1cblxuLyoqXG4gKiBBZGQgYSBuZXcgaW50ZXJjZXB0b3IgdG8gdGhlIHN0YWNrXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVsZmlsbGVkIFRoZSBmdW5jdGlvbiB0byBoYW5kbGUgYHRoZW5gIGZvciBhIGBQcm9taXNlYFxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0ZWQgVGhlIGZ1bmN0aW9uIHRvIGhhbmRsZSBgcmVqZWN0YCBmb3IgYSBgUHJvbWlzZWBcbiAqXG4gKiBAcmV0dXJuIHtOdW1iZXJ9IEFuIElEIHVzZWQgdG8gcmVtb3ZlIGludGVyY2VwdG9yIGxhdGVyXG4gKi9cbkludGVyY2VwdG9yTWFuYWdlci5wcm90b3R5cGUudXNlID0gZnVuY3Rpb24gdXNlKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpIHtcbiAgdGhpcy5oYW5kbGVycy5wdXNoKHtcbiAgICBmdWxmaWxsZWQ6IGZ1bGZpbGxlZCxcbiAgICByZWplY3RlZDogcmVqZWN0ZWRcbiAgfSk7XG4gIHJldHVybiB0aGlzLmhhbmRsZXJzLmxlbmd0aCAtIDE7XG59O1xuXG4vKipcbiAqIFJlbW92ZSBhbiBpbnRlcmNlcHRvciBmcm9tIHRoZSBzdGFja1xuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSBpZCBUaGUgSUQgdGhhdCB3YXMgcmV0dXJuZWQgYnkgYHVzZWBcbiAqL1xuSW50ZXJjZXB0b3JNYW5hZ2VyLnByb3RvdHlwZS5lamVjdCA9IGZ1bmN0aW9uIGVqZWN0KGlkKSB7XG4gIGlmICh0aGlzLmhhbmRsZXJzW2lkXSkge1xuICAgIHRoaXMuaGFuZGxlcnNbaWRdID0gbnVsbDtcbiAgfVxufTtcblxuLyoqXG4gKiBJdGVyYXRlIG92ZXIgYWxsIHRoZSByZWdpc3RlcmVkIGludGVyY2VwdG9yc1xuICpcbiAqIFRoaXMgbWV0aG9kIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgZm9yIHNraXBwaW5nIG92ZXIgYW55XG4gKiBpbnRlcmNlcHRvcnMgdGhhdCBtYXkgaGF2ZSBiZWNvbWUgYG51bGxgIGNhbGxpbmcgYGVqZWN0YC5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmbiBUaGUgZnVuY3Rpb24gdG8gY2FsbCBmb3IgZWFjaCBpbnRlcmNlcHRvclxuICovXG5JbnRlcmNlcHRvck1hbmFnZXIucHJvdG90eXBlLmZvckVhY2ggPSBmdW5jdGlvbiBmb3JFYWNoKGZuKSB7XG4gIHV0aWxzLmZvckVhY2godGhpcy5oYW5kbGVycywgZnVuY3Rpb24gZm9yRWFjaEhhbmRsZXIoaCkge1xuICAgIGlmIChoICE9PSBudWxsKSB7XG4gICAgICBmbihoKTtcbiAgICB9XG4gIH0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBJbnRlcmNlcHRvck1hbmFnZXI7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcbnZhciB0cmFuc2Zvcm1EYXRhID0gcmVxdWlyZSgnLi90cmFuc2Zvcm1EYXRhJyk7XG52YXIgaXNDYW5jZWwgPSByZXF1aXJlKCcuLi9jYW5jZWwvaXNDYW5jZWwnKTtcbnZhciBkZWZhdWx0cyA9IHJlcXVpcmUoJy4uL2RlZmF1bHRzJyk7XG5cbi8qKlxuICogVGhyb3dzIGEgYENhbmNlbGAgaWYgY2FuY2VsbGF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC5cbiAqL1xuZnVuY3Rpb24gdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpIHtcbiAgaWYgKGNvbmZpZy5jYW5jZWxUb2tlbikge1xuICAgIGNvbmZpZy5jYW5jZWxUb2tlbi50aHJvd0lmUmVxdWVzdGVkKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBEaXNwYXRjaCBhIHJlcXVlc3QgdG8gdGhlIHNlcnZlciB1c2luZyB0aGUgY29uZmlndXJlZCBhZGFwdGVyLlxuICpcbiAqIEBwYXJhbSB7b2JqZWN0fSBjb25maWcgVGhlIGNvbmZpZyB0aGF0IGlzIHRvIGJlIHVzZWQgZm9yIHRoZSByZXF1ZXN0XG4gKiBAcmV0dXJucyB7UHJvbWlzZX0gVGhlIFByb21pc2UgdG8gYmUgZnVsZmlsbGVkXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZGlzcGF0Y2hSZXF1ZXN0KGNvbmZpZykge1xuICB0aHJvd0lmQ2FuY2VsbGF0aW9uUmVxdWVzdGVkKGNvbmZpZyk7XG5cbiAgLy8gRW5zdXJlIGhlYWRlcnMgZXhpc3RcbiAgY29uZmlnLmhlYWRlcnMgPSBjb25maWcuaGVhZGVycyB8fCB7fTtcblxuICAvLyBUcmFuc2Zvcm0gcmVxdWVzdCBkYXRhXG4gIGNvbmZpZy5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICBjb25maWcuZGF0YSxcbiAgICBjb25maWcuaGVhZGVycyxcbiAgICBjb25maWcudHJhbnNmb3JtUmVxdWVzdFxuICApO1xuXG4gIC8vIEZsYXR0ZW4gaGVhZGVyc1xuICBjb25maWcuaGVhZGVycyA9IHV0aWxzLm1lcmdlKFxuICAgIGNvbmZpZy5oZWFkZXJzLmNvbW1vbiB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1tjb25maWcubWV0aG9kXSB8fCB7fSxcbiAgICBjb25maWcuaGVhZGVyc1xuICApO1xuXG4gIHV0aWxzLmZvckVhY2goXG4gICAgWydkZWxldGUnLCAnZ2V0JywgJ2hlYWQnLCAncG9zdCcsICdwdXQnLCAncGF0Y2gnLCAnY29tbW9uJ10sXG4gICAgZnVuY3Rpb24gY2xlYW5IZWFkZXJDb25maWcobWV0aG9kKSB7XG4gICAgICBkZWxldGUgY29uZmlnLmhlYWRlcnNbbWV0aG9kXTtcbiAgICB9XG4gICk7XG5cbiAgdmFyIGFkYXB0ZXIgPSBjb25maWcuYWRhcHRlciB8fCBkZWZhdWx0cy5hZGFwdGVyO1xuXG4gIHJldHVybiBhZGFwdGVyKGNvbmZpZykudGhlbihmdW5jdGlvbiBvbkFkYXB0ZXJSZXNvbHV0aW9uKHJlc3BvbnNlKSB7XG4gICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgLy8gVHJhbnNmb3JtIHJlc3BvbnNlIGRhdGFcbiAgICByZXNwb25zZS5kYXRhID0gdHJhbnNmb3JtRGF0YShcbiAgICAgIHJlc3BvbnNlLmRhdGEsXG4gICAgICByZXNwb25zZS5oZWFkZXJzLFxuICAgICAgY29uZmlnLnRyYW5zZm9ybVJlc3BvbnNlXG4gICAgKTtcblxuICAgIHJldHVybiByZXNwb25zZTtcbiAgfSwgZnVuY3Rpb24gb25BZGFwdGVyUmVqZWN0aW9uKHJlYXNvbikge1xuICAgIGlmICghaXNDYW5jZWwocmVhc29uKSkge1xuICAgICAgdGhyb3dJZkNhbmNlbGxhdGlvblJlcXVlc3RlZChjb25maWcpO1xuXG4gICAgICAvLyBUcmFuc2Zvcm0gcmVzcG9uc2UgZGF0YVxuICAgICAgaWYgKHJlYXNvbiAmJiByZWFzb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmVhc29uLnJlc3BvbnNlLmRhdGEgPSB0cmFuc2Zvcm1EYXRhKFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5kYXRhLFxuICAgICAgICAgIHJlYXNvbi5yZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgIGNvbmZpZy50cmFuc2Zvcm1SZXNwb25zZVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChyZWFzb24pO1xuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLyoqXG4gKiBUcmFuc2Zvcm0gdGhlIGRhdGEgZm9yIGEgcmVxdWVzdCBvciBhIHJlc3BvbnNlXG4gKlxuICogQHBhcmFtIHtPYmplY3R8U3RyaW5nfSBkYXRhIFRoZSBkYXRhIHRvIGJlIHRyYW5zZm9ybWVkXG4gKiBAcGFyYW0ge0FycmF5fSBoZWFkZXJzIFRoZSBoZWFkZXJzIGZvciB0aGUgcmVxdWVzdCBvciByZXNwb25zZVxuICogQHBhcmFtIHtBcnJheXxGdW5jdGlvbn0gZm5zIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIEFycmF5IG9mIGZ1bmN0aW9uc1xuICogQHJldHVybnMgeyp9IFRoZSByZXN1bHRpbmcgdHJhbnNmb3JtZWQgZGF0YVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHRyYW5zZm9ybURhdGEoZGF0YSwgaGVhZGVycywgZm5zKSB7XG4gIC8qZXNsaW50IG5vLXBhcmFtLXJlYXNzaWduOjAqL1xuICB1dGlscy5mb3JFYWNoKGZucywgZnVuY3Rpb24gdHJhbnNmb3JtKGZuKSB7XG4gICAgZGF0YSA9IGZuKGRhdGEsIGhlYWRlcnMpO1xuICB9KTtcblxuICByZXR1cm4gZGF0YTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gbm9ybWFsaXplSGVhZGVyTmFtZShoZWFkZXJzLCBub3JtYWxpemVkTmFtZSkge1xuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMsIGZ1bmN0aW9uIHByb2Nlc3NIZWFkZXIodmFsdWUsIG5hbWUpIHtcbiAgICBpZiAobmFtZSAhPT0gbm9ybWFsaXplZE5hbWUgJiYgbmFtZS50b1VwcGVyQ2FzZSgpID09PSBub3JtYWxpemVkTmFtZS50b1VwcGVyQ2FzZSgpKSB7XG4gICAgICBoZWFkZXJzW25vcm1hbGl6ZWROYW1lXSA9IHZhbHVlO1xuICAgICAgZGVsZXRlIGhlYWRlcnNbbmFtZV07XG4gICAgfVxuICB9KTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBjcmVhdGVFcnJvciA9IHJlcXVpcmUoJy4vY3JlYXRlRXJyb3InKTtcblxuLyoqXG4gKiBSZXNvbHZlIG9yIHJlamVjdCBhIFByb21pc2UgYmFzZWQgb24gcmVzcG9uc2Ugc3RhdHVzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlc29sdmUgQSBmdW5jdGlvbiB0aGF0IHJlc29sdmVzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVqZWN0IEEgZnVuY3Rpb24gdGhhdCByZWplY3RzIHRoZSBwcm9taXNlLlxuICogQHBhcmFtIHtvYmplY3R9IHJlc3BvbnNlIFRoZSByZXNwb25zZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzZXR0bGUocmVzb2x2ZSwgcmVqZWN0LCByZXNwb25zZSkge1xuICB2YXIgdmFsaWRhdGVTdGF0dXMgPSByZXNwb25zZS5jb25maWcudmFsaWRhdGVTdGF0dXM7XG4gIGlmICghcmVzcG9uc2Uuc3RhdHVzIHx8ICF2YWxpZGF0ZVN0YXR1cyB8fCB2YWxpZGF0ZVN0YXR1cyhyZXNwb25zZS5zdGF0dXMpKSB7XG4gICAgcmVzb2x2ZShyZXNwb25zZSk7XG4gIH0gZWxzZSB7XG4gICAgcmVqZWN0KGNyZWF0ZUVycm9yKFxuICAgICAgJ1JlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzIGNvZGUgJyArIHJlc3BvbnNlLnN0YXR1cyxcbiAgICAgIHJlc3BvbnNlLmNvbmZpZyxcbiAgICAgIG51bGwsXG4gICAgICByZXNwb25zZS5yZXF1ZXN0LFxuICAgICAgcmVzcG9uc2VcbiAgICApKTtcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVcGRhdGUgYW4gRXJyb3Igd2l0aCB0aGUgc3BlY2lmaWVkIGNvbmZpZywgZXJyb3IgY29kZSwgYW5kIHJlc3BvbnNlLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVycm9yIFRoZSBlcnJvciB0byB1cGRhdGUuXG4gKiBAcGFyYW0ge09iamVjdH0gY29uZmlnIFRoZSBjb25maWcuXG4gKiBAcGFyYW0ge3N0cmluZ30gW2NvZGVdIFRoZSBlcnJvciBjb2RlIChmb3IgZXhhbXBsZSwgJ0VDT05OQUJPUlRFRCcpLlxuICogQHBhcmFtIHtPYmplY3R9IFtyZXF1ZXN0XSBUaGUgcmVxdWVzdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbcmVzcG9uc2VdIFRoZSByZXNwb25zZS5cbiAqIEByZXR1cm5zIHtFcnJvcn0gVGhlIGVycm9yLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVuaGFuY2VFcnJvcihlcnJvciwgY29uZmlnLCBjb2RlLCByZXF1ZXN0LCByZXNwb25zZSkge1xuICBlcnJvci5jb25maWcgPSBjb25maWc7XG4gIGlmIChjb2RlKSB7XG4gICAgZXJyb3IuY29kZSA9IGNvZGU7XG4gIH1cblxuICBlcnJvci5yZXF1ZXN0ID0gcmVxdWVzdDtcbiAgZXJyb3IucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgZXJyb3IuaXNBeGlvc0Vycm9yID0gdHJ1ZTtcblxuICBlcnJvci50b0pTT04gPSBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIC8vIFN0YW5kYXJkXG4gICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2UsXG4gICAgICBuYW1lOiB0aGlzLm5hbWUsXG4gICAgICAvLyBNaWNyb3NvZnRcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmRlc2NyaXB0aW9uLFxuICAgICAgbnVtYmVyOiB0aGlzLm51bWJlcixcbiAgICAgIC8vIE1vemlsbGFcbiAgICAgIGZpbGVOYW1lOiB0aGlzLmZpbGVOYW1lLFxuICAgICAgbGluZU51bWJlcjogdGhpcy5saW5lTnVtYmVyLFxuICAgICAgY29sdW1uTnVtYmVyOiB0aGlzLmNvbHVtbk51bWJlcixcbiAgICAgIHN0YWNrOiB0aGlzLnN0YWNrLFxuICAgICAgLy8gQXhpb3NcbiAgICAgIGNvbmZpZzogdGhpcy5jb25maWcsXG4gICAgICBjb2RlOiB0aGlzLmNvZGVcbiAgICB9O1xuICB9O1xuICByZXR1cm4gZXJyb3I7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgc3VwcG9ydCBkb2N1bWVudC5jb29raWVcbiAgICAoZnVuY3Rpb24gc3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKG5hbWUsIHZhbHVlLCBleHBpcmVzLCBwYXRoLCBkb21haW4sIHNlY3VyZSkge1xuICAgICAgICAgIHZhciBjb29raWUgPSBbXTtcbiAgICAgICAgICBjb29raWUucHVzaChuYW1lICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSk7XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNOdW1iZXIoZXhwaXJlcykpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdleHBpcmVzPScgKyBuZXcgRGF0ZShleHBpcmVzKS50b0dNVFN0cmluZygpKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcocGF0aCkpIHtcbiAgICAgICAgICAgIGNvb2tpZS5wdXNoKCdwYXRoPScgKyBwYXRoKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAodXRpbHMuaXNTdHJpbmcoZG9tYWluKSkge1xuICAgICAgICAgICAgY29va2llLnB1c2goJ2RvbWFpbj0nICsgZG9tYWluKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoc2VjdXJlID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb29raWUucHVzaCgnc2VjdXJlJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY29va2llLmpvaW4oJzsgJyk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVhZDogZnVuY3Rpb24gcmVhZChuYW1lKSB7XG4gICAgICAgICAgdmFyIG1hdGNoID0gZG9jdW1lbnQuY29va2llLm1hdGNoKG5ldyBSZWdFeHAoJyhefDtcXFxccyopKCcgKyBuYW1lICsgJyk9KFteO10qKScpKTtcbiAgICAgICAgICByZXR1cm4gKG1hdGNoID8gZGVjb2RlVVJJQ29tcG9uZW50KG1hdGNoWzNdKSA6IG51bGwpO1xuICAgICAgICB9LFxuXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKG5hbWUpIHtcbiAgICAgICAgICB0aGlzLndyaXRlKG5hbWUsICcnLCBEYXRlLm5vdygpIC0gODY0MDAwMDApO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH0pKCkgOlxuXG4gIC8vIE5vbiBzdGFuZGFyZCBicm93c2VyIGVudiAod2ViIHdvcmtlcnMsIHJlYWN0LW5hdGl2ZSkgbGFjayBuZWVkZWQgc3VwcG9ydC5cbiAgICAoZnVuY3Rpb24gbm9uU3RhbmRhcmRCcm93c2VyRW52KCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IGZ1bmN0aW9uIHdyaXRlKCkge30sXG4gICAgICAgIHJlYWQ6IGZ1bmN0aW9uIHJlYWQoKSB7IHJldHVybiBudWxsOyB9LFxuICAgICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgICB9O1xuICAgIH0pKClcbik7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBpc0Fic29sdXRlVVJMID0gcmVxdWlyZSgnLi4vaGVscGVycy9pc0Fic29sdXRlVVJMJyk7XG52YXIgY29tYmluZVVSTHMgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2NvbWJpbmVVUkxzJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBiYXNlVVJMIHdpdGggdGhlIHJlcXVlc3RlZFVSTCxcbiAqIG9ubHkgd2hlbiB0aGUgcmVxdWVzdGVkVVJMIGlzIG5vdCBhbHJlYWR5IGFuIGFic29sdXRlIFVSTC5cbiAqIElmIHRoZSByZXF1ZXN0VVJMIGlzIGFic29sdXRlLCB0aGlzIGZ1bmN0aW9uIHJldHVybnMgdGhlIHJlcXVlc3RlZFVSTCB1bnRvdWNoZWQuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGJhc2VVUkwgVGhlIGJhc2UgVVJMXG4gKiBAcGFyYW0ge3N0cmluZ30gcmVxdWVzdGVkVVJMIEFic29sdXRlIG9yIHJlbGF0aXZlIFVSTCB0byBjb21iaW5lXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBUaGUgY29tYmluZWQgZnVsbCBwYXRoXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gYnVpbGRGdWxsUGF0aChiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpIHtcbiAgaWYgKGJhc2VVUkwgJiYgIWlzQWJzb2x1dGVVUkwocmVxdWVzdGVkVVJMKSkge1xuICAgIHJldHVybiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZXF1ZXN0ZWRVUkwpO1xuICB9XG4gIHJldHVybiByZXF1ZXN0ZWRVUkw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZVxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmwgVGhlIFVSTCB0byB0ZXN0XG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgc3BlY2lmaWVkIFVSTCBpcyBhYnNvbHV0ZSwgb3RoZXJ3aXNlIGZhbHNlXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gaXNBYnNvbHV0ZVVSTCh1cmwpIHtcbiAgLy8gQSBVUkwgaXMgY29uc2lkZXJlZCBhYnNvbHV0ZSBpZiBpdCBiZWdpbnMgd2l0aCBcIjxzY2hlbWU+Oi8vXCIgb3IgXCIvL1wiIChwcm90b2NvbC1yZWxhdGl2ZSBVUkwpLlxuICAvLyBSRkMgMzk4NiBkZWZpbmVzIHNjaGVtZSBuYW1lIGFzIGEgc2VxdWVuY2Ugb2YgY2hhcmFjdGVycyBiZWdpbm5pbmcgd2l0aCBhIGxldHRlciBhbmQgZm9sbG93ZWRcbiAgLy8gYnkgYW55IGNvbWJpbmF0aW9uIG9mIGxldHRlcnMsIGRpZ2l0cywgcGx1cywgcGVyaW9kLCBvciBoeXBoZW4uXG4gIHJldHVybiAvXihbYS16XVthLXpcXGRcXCtcXC1cXC5dKjopP1xcL1xcLy9pLnRlc3QodXJsKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBVUkwgYnkgY29tYmluaW5nIHRoZSBzcGVjaWZpZWQgVVJMc1xuICpcbiAqIEBwYXJhbSB7c3RyaW5nfSBiYXNlVVJMIFRoZSBiYXNlIFVSTFxuICogQHBhcmFtIHtzdHJpbmd9IHJlbGF0aXZlVVJMIFRoZSByZWxhdGl2ZSBVUkxcbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBjb21iaW5lZCBVUkxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjb21iaW5lVVJMcyhiYXNlVVJMLCByZWxhdGl2ZVVSTCkge1xuICByZXR1cm4gcmVsYXRpdmVVUkxcbiAgICA/IGJhc2VVUkwucmVwbGFjZSgvXFwvKyQvLCAnJykgKyAnLycgKyByZWxhdGl2ZVVSTC5yZXBsYWNlKC9eXFwvKy8sICcnKVxuICAgIDogYmFzZVVSTDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciB1dGlscyA9IHJlcXVpcmUoJy4vLi4vdXRpbHMnKTtcblxuLy8gSGVhZGVycyB3aG9zZSBkdXBsaWNhdGVzIGFyZSBpZ25vcmVkIGJ5IG5vZGVcbi8vIGMuZi4gaHR0cHM6Ly9ub2RlanMub3JnL2FwaS9odHRwLmh0bWwjaHR0cF9tZXNzYWdlX2hlYWRlcnNcbnZhciBpZ25vcmVEdXBsaWNhdGVPZiA9IFtcbiAgJ2FnZScsICdhdXRob3JpemF0aW9uJywgJ2NvbnRlbnQtbGVuZ3RoJywgJ2NvbnRlbnQtdHlwZScsICdldGFnJyxcbiAgJ2V4cGlyZXMnLCAnZnJvbScsICdob3N0JywgJ2lmLW1vZGlmaWVkLXNpbmNlJywgJ2lmLXVubW9kaWZpZWQtc2luY2UnLFxuICAnbGFzdC1tb2RpZmllZCcsICdsb2NhdGlvbicsICdtYXgtZm9yd2FyZHMnLCAncHJveHktYXV0aG9yaXphdGlvbicsXG4gICdyZWZlcmVyJywgJ3JldHJ5LWFmdGVyJywgJ3VzZXItYWdlbnQnXG5dO1xuXG4vKipcbiAqIFBhcnNlIGhlYWRlcnMgaW50byBhbiBvYmplY3RcbiAqXG4gKiBgYGBcbiAqIERhdGU6IFdlZCwgMjcgQXVnIDIwMTQgMDg6NTg6NDkgR01UXG4gKiBDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb25cbiAqIENvbm5lY3Rpb246IGtlZXAtYWxpdmVcbiAqIFRyYW5zZmVyLUVuY29kaW5nOiBjaHVua2VkXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gaGVhZGVycyBIZWFkZXJzIG5lZWRpbmcgdG8gYmUgcGFyc2VkXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBIZWFkZXJzIHBhcnNlZCBpbnRvIGFuIG9iamVjdFxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHBhcnNlSGVhZGVycyhoZWFkZXJzKSB7XG4gIHZhciBwYXJzZWQgPSB7fTtcbiAgdmFyIGtleTtcbiAgdmFyIHZhbDtcbiAgdmFyIGk7XG5cbiAgaWYgKCFoZWFkZXJzKSB7IHJldHVybiBwYXJzZWQ7IH1cblxuICB1dGlscy5mb3JFYWNoKGhlYWRlcnMuc3BsaXQoJ1xcbicpLCBmdW5jdGlvbiBwYXJzZXIobGluZSkge1xuICAgIGkgPSBsaW5lLmluZGV4T2YoJzonKTtcbiAgICBrZXkgPSB1dGlscy50cmltKGxpbmUuc3Vic3RyKDAsIGkpKS50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IHV0aWxzLnRyaW0obGluZS5zdWJzdHIoaSArIDEpKTtcblxuICAgIGlmIChrZXkpIHtcbiAgICAgIGlmIChwYXJzZWRba2V5XSAmJiBpZ25vcmVEdXBsaWNhdGVPZi5pbmRleE9mKGtleSkgPj0gMCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSAocGFyc2VkW2tleV0gPyBwYXJzZWRba2V5XSA6IFtdKS5jb25jYXQoW3ZhbF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGFyc2VkW2tleV0gPSBwYXJzZWRba2V5XSA/IHBhcnNlZFtrZXldICsgJywgJyArIHZhbCA6IHZhbDtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBwYXJzZWQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgdXRpbHMgPSByZXF1aXJlKCcuLy4uL3V0aWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gKFxuICB1dGlscy5pc1N0YW5kYXJkQnJvd3NlckVudigpID9cblxuICAvLyBTdGFuZGFyZCBicm93c2VyIGVudnMgaGF2ZSBmdWxsIHN1cHBvcnQgb2YgdGhlIEFQSXMgbmVlZGVkIHRvIHRlc3RcbiAgLy8gd2hldGhlciB0aGUgcmVxdWVzdCBVUkwgaXMgb2YgdGhlIHNhbWUgb3JpZ2luIGFzIGN1cnJlbnQgbG9jYXRpb24uXG4gICAgKGZ1bmN0aW9uIHN0YW5kYXJkQnJvd3NlckVudigpIHtcbiAgICAgIHZhciBtc2llID0gLyhtc2llfHRyaWRlbnQpL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICAgIHZhciB1cmxQYXJzaW5nTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcbiAgICAgIHZhciBvcmlnaW5VUkw7XG5cbiAgICAgIC8qKlxuICAgICogUGFyc2UgYSBVUkwgdG8gZGlzY292ZXIgaXQncyBjb21wb25lbnRzXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHVybCBUaGUgVVJMIHRvIGJlIHBhcnNlZFxuICAgICogQHJldHVybnMge09iamVjdH1cbiAgICAqL1xuICAgICAgZnVuY3Rpb24gcmVzb2x2ZVVSTCh1cmwpIHtcbiAgICAgICAgdmFyIGhyZWYgPSB1cmw7XG5cbiAgICAgICAgaWYgKG1zaWUpIHtcbiAgICAgICAgLy8gSUUgbmVlZHMgYXR0cmlidXRlIHNldCB0d2ljZSB0byBub3JtYWxpemUgcHJvcGVydGllc1xuICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnNldEF0dHJpYnV0ZSgnaHJlZicsIGhyZWYpO1xuICAgICAgICAgIGhyZWYgPSB1cmxQYXJzaW5nTm9kZS5ocmVmO1xuICAgICAgICB9XG5cbiAgICAgICAgdXJsUGFyc2luZ05vZGUuc2V0QXR0cmlidXRlKCdocmVmJywgaHJlZik7XG5cbiAgICAgICAgLy8gdXJsUGFyc2luZ05vZGUgcHJvdmlkZXMgdGhlIFVybFV0aWxzIGludGVyZmFjZSAtIGh0dHA6Ly91cmwuc3BlYy53aGF0d2cub3JnLyN1cmx1dGlsc1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGhyZWY6IHVybFBhcnNpbmdOb2RlLmhyZWYsXG4gICAgICAgICAgcHJvdG9jb2w6IHVybFBhcnNpbmdOb2RlLnByb3RvY29sID8gdXJsUGFyc2luZ05vZGUucHJvdG9jb2wucmVwbGFjZSgvOiQvLCAnJykgOiAnJyxcbiAgICAgICAgICBob3N0OiB1cmxQYXJzaW5nTm9kZS5ob3N0LFxuICAgICAgICAgIHNlYXJjaDogdXJsUGFyc2luZ05vZGUuc2VhcmNoID8gdXJsUGFyc2luZ05vZGUuc2VhcmNoLnJlcGxhY2UoL15cXD8vLCAnJykgOiAnJyxcbiAgICAgICAgICBoYXNoOiB1cmxQYXJzaW5nTm9kZS5oYXNoID8gdXJsUGFyc2luZ05vZGUuaGFzaC5yZXBsYWNlKC9eIy8sICcnKSA6ICcnLFxuICAgICAgICAgIGhvc3RuYW1lOiB1cmxQYXJzaW5nTm9kZS5ob3N0bmFtZSxcbiAgICAgICAgICBwb3J0OiB1cmxQYXJzaW5nTm9kZS5wb3J0LFxuICAgICAgICAgIHBhdGhuYW1lOiAodXJsUGFyc2luZ05vZGUucGF0aG5hbWUuY2hhckF0KDApID09PSAnLycpID9cbiAgICAgICAgICAgIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lIDpcbiAgICAgICAgICAgICcvJyArIHVybFBhcnNpbmdOb2RlLnBhdGhuYW1lXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIG9yaWdpblVSTCA9IHJlc29sdmVVUkwod2luZG93LmxvY2F0aW9uLmhyZWYpO1xuXG4gICAgICAvKipcbiAgICAqIERldGVybWluZSBpZiBhIFVSTCBzaGFyZXMgdGhlIHNhbWUgb3JpZ2luIGFzIHRoZSBjdXJyZW50IGxvY2F0aW9uXG4gICAgKlxuICAgICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3RVUkwgVGhlIFVSTCB0byB0ZXN0XG4gICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiBVUkwgc2hhcmVzIHRoZSBzYW1lIG9yaWdpbiwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgKi9cbiAgICAgIHJldHVybiBmdW5jdGlvbiBpc1VSTFNhbWVPcmlnaW4ocmVxdWVzdFVSTCkge1xuICAgICAgICB2YXIgcGFyc2VkID0gKHV0aWxzLmlzU3RyaW5nKHJlcXVlc3RVUkwpKSA/IHJlc29sdmVVUkwocmVxdWVzdFVSTCkgOiByZXF1ZXN0VVJMO1xuICAgICAgICByZXR1cm4gKHBhcnNlZC5wcm90b2NvbCA9PT0gb3JpZ2luVVJMLnByb3RvY29sICYmXG4gICAgICAgICAgICBwYXJzZWQuaG9zdCA9PT0gb3JpZ2luVVJMLmhvc3QpO1xuICAgICAgfTtcbiAgICB9KSgpIDpcblxuICAvLyBOb24gc3RhbmRhcmQgYnJvd3NlciBlbnZzICh3ZWIgd29ya2VycywgcmVhY3QtbmF0aXZlKSBsYWNrIG5lZWRlZCBzdXBwb3J0LlxuICAgIChmdW5jdGlvbiBub25TdGFuZGFyZEJyb3dzZXJFbnYoKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gaXNVUkxTYW1lT3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH07XG4gICAgfSkoKVxuKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIENhbmNlbCA9IHJlcXVpcmUoJy4vQ2FuY2VsJyk7XG5cbi8qKlxuICogQSBgQ2FuY2VsVG9rZW5gIGlzIGFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHJlcXVlc3QgY2FuY2VsbGF0aW9uIG9mIGFuIG9wZXJhdGlvbi5cbiAqXG4gKiBAY2xhc3NcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGV4ZWN1dG9yIFRoZSBleGVjdXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gQ2FuY2VsVG9rZW4oZXhlY3V0b3IpIHtcbiAgaWYgKHR5cGVvZiBleGVjdXRvciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ2V4ZWN1dG9yIG11c3QgYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciByZXNvbHZlUHJvbWlzZTtcbiAgdGhpcy5wcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gcHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUpIHtcbiAgICByZXNvbHZlUHJvbWlzZSA9IHJlc29sdmU7XG4gIH0pO1xuXG4gIHZhciB0b2tlbiA9IHRoaXM7XG4gIGV4ZWN1dG9yKGZ1bmN0aW9uIGNhbmNlbChtZXNzYWdlKSB7XG4gICAgaWYgKHRva2VuLnJlYXNvbikge1xuICAgICAgLy8gQ2FuY2VsbGF0aW9uIGhhcyBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdG9rZW4ucmVhc29uID0gbmV3IENhbmNlbChtZXNzYWdlKTtcbiAgICByZXNvbHZlUHJvbWlzZSh0b2tlbi5yZWFzb24pO1xuICB9KTtcbn1cblxuLyoqXG4gKiBUaHJvd3MgYSBgQ2FuY2VsYCBpZiBjYW5jZWxsYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLlxuICovXG5DYW5jZWxUb2tlbi5wcm90b3R5cGUudGhyb3dJZlJlcXVlc3RlZCA9IGZ1bmN0aW9uIHRocm93SWZSZXF1ZXN0ZWQoKSB7XG4gIGlmICh0aGlzLnJlYXNvbikge1xuICAgIHRocm93IHRoaXMucmVhc29uO1xuICB9XG59O1xuXG4vKipcbiAqIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgY29udGFpbnMgYSBuZXcgYENhbmNlbFRva2VuYCBhbmQgYSBmdW5jdGlvbiB0aGF0LCB3aGVuIGNhbGxlZCxcbiAqIGNhbmNlbHMgdGhlIGBDYW5jZWxUb2tlbmAuXG4gKi9cbkNhbmNlbFRva2VuLnNvdXJjZSA9IGZ1bmN0aW9uIHNvdXJjZSgpIHtcbiAgdmFyIGNhbmNlbDtcbiAgdmFyIHRva2VuID0gbmV3IENhbmNlbFRva2VuKGZ1bmN0aW9uIGV4ZWN1dG9yKGMpIHtcbiAgICBjYW5jZWwgPSBjO1xuICB9KTtcbiAgcmV0dXJuIHtcbiAgICB0b2tlbjogdG9rZW4sXG4gICAgY2FuY2VsOiBjYW5jZWxcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2FuY2VsVG9rZW47XG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogU3ludGFjdGljIHN1Z2FyIGZvciBpbnZva2luZyBhIGZ1bmN0aW9uIGFuZCBleHBhbmRpbmcgYW4gYXJyYXkgZm9yIGFyZ3VtZW50cy5cbiAqXG4gKiBDb21tb24gdXNlIGNhc2Ugd291bGQgYmUgdG8gdXNlIGBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHlgLlxuICpcbiAqICBgYGBqc1xuICogIGZ1bmN0aW9uIGYoeCwgeSwgeikge31cbiAqICB2YXIgYXJncyA9IFsxLCAyLCAzXTtcbiAqICBmLmFwcGx5KG51bGwsIGFyZ3MpO1xuICogIGBgYFxuICpcbiAqIFdpdGggYHNwcmVhZGAgdGhpcyBleGFtcGxlIGNhbiBiZSByZS13cml0dGVuLlxuICpcbiAqICBgYGBqc1xuICogIHNwcmVhZChmdW5jdGlvbih4LCB5LCB6KSB7fSkoWzEsIDIsIDNdKTtcbiAqICBgYGBcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogQHJldHVybnMge0Z1bmN0aW9ufVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIHNwcmVhZChjYWxsYmFjaykge1xuICByZXR1cm4gZnVuY3Rpb24gd3JhcChhcnIpIHtcbiAgICByZXR1cm4gY2FsbGJhY2suYXBwbHkobnVsbCwgYXJyKTtcbiAgfTtcbn07XG4iLCJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi8uLi8uLi9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2Jvb3RzdHJhcC5taW4uY3NzXCIpO1xuXG4gICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICB9XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIpIHtcbiAgaWYgKCFhICYmIGIgfHwgYSAmJiAhYikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBwO1xuXG4gIGZvciAocCBpbiBhKSB7XG4gICAgaWYgKGFbcF0gIT09IGJbcF0pIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmb3IgKHAgaW4gYikge1xuICAgIGlmICghYVtwXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbiAgICB2YXIgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcbiAgICAgIFwiISEuLi8uLi8uLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vYm9vdHN0cmFwLm1pbi5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9ib290c3RyYXAubWluLmNzc1wiKTtcblxuICAgICAgICAgICAgICBjb250ZW50ID0gY29udGVudC5fX2VzTW9kdWxlID8gY29udGVudC5kZWZhdWx0IDogY29udGVudDtcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgaWYgKCFpc0VxdWFsTG9jYWxzKG9sZExvY2FscywgY29udGVudC5sb2NhbHMpKSB7XG4gICAgICAgICAgICAgICAgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvbGRMb2NhbHMgPSBjb250ZW50LmxvY2FscztcblxuICAgICAgICAgICAgICB1cGRhdGUoY29udGVudCk7XG4gICAgICB9XG4gICAgKVxuICB9XG5cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkge1xuICAgIHVwZGF0ZSgpO1xuICB9KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIGJ0b2EpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyIHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xuXG5mdW5jdGlvbiBhZGRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlO1xuICB2YXIgdXBkYXRlO1xuICB2YXIgcmVtb3ZlO1xuXG4gIGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuICAgIHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuICAgIHN0eWxlID0gc2luZ2xldG9uIHx8IChzaW5nbGV0b24gPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgZmFsc2UpO1xuICAgIHJlbW92ZSA9IGFwcGx5VG9TaW5nbGV0b25UYWcuYmluZChudWxsLCBzdHlsZSwgc3R5bGVJbmRleCwgdHJ1ZSk7XG4gIH0gZWxzZSB7XG4gICAgc3R5bGUgPSBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1RhZy5iaW5kKG51bGwsIHN0eWxlLCBvcHRpb25zKTtcblxuICAgIHJlbW92ZSA9IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG4gICAgfTtcbiAgfVxuXG4gIHVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICByZW1vdmUoKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGxpc3QsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307IC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuICAvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cbiAgaWYgKCFvcHRpb25zLnNpbmdsZXRvbiAmJiB0eXBlb2Ygb3B0aW9ucy5zaW5nbGV0b24gIT09ICdib29sZWFuJykge1xuICAgIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuICB9XG5cbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChuZXdMaXN0KSAhPT0gJ1tvYmplY3QgQXJyYXldJykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG5cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tfaV07XG5cbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG5cbiAgICAgIGlmIChzdHlsZXNJbkRvbVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5Eb21bX2luZGV4XS51cGRhdGVyKCk7XG5cbiAgICAgICAgc3R5bGVzSW5Eb20uc3BsaWNlKF9pbmRleCwgMSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IHZhciBSZWFjdFJlZHV4Q29udGV4dCA9XG4vKiNfX1BVUkVfXyovXG5SZWFjdC5jcmVhdGVDb250ZXh0KG51bGwpO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBSZWFjdFJlZHV4Q29udGV4dC5kaXNwbGF5TmFtZSA9ICdSZWFjdFJlZHV4Jztcbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVhY3RSZWR1eENvbnRleHQ7IiwiLy8gRGVmYXVsdCB0byBhIGR1bW15IFwiYmF0Y2hcIiBpbXBsZW1lbnRhdGlvbiB0aGF0IGp1c3QgcnVucyB0aGUgY2FsbGJhY2tcbmZ1bmN0aW9uIGRlZmF1bHROb29wQmF0Y2goY2FsbGJhY2spIHtcbiAgY2FsbGJhY2soKTtcbn1cblxudmFyIGJhdGNoID0gZGVmYXVsdE5vb3BCYXRjaDsgLy8gQWxsb3cgaW5qZWN0aW5nIGFub3RoZXIgYmF0Y2hpbmcgZnVuY3Rpb24gbGF0ZXJcblxuZXhwb3J0IHZhciBzZXRCYXRjaCA9IGZ1bmN0aW9uIHNldEJhdGNoKG5ld0JhdGNoKSB7XG4gIHJldHVybiBiYXRjaCA9IG5ld0JhdGNoO1xufTsgLy8gU3VwcGx5IGEgZ2V0dGVyIGp1c3QgdG8gc2tpcCBkZWFsaW5nIHdpdGggRVNNIGJpbmRpbmdzXG5cbmV4cG9ydCB2YXIgZ2V0QmF0Y2ggPSBmdW5jdGlvbiBnZXRCYXRjaCgpIHtcbiAgcmV0dXJuIGJhdGNoO1xufTsiLCJpbXBvcnQgeyBnZXRCYXRjaCB9IGZyb20gJy4vYmF0Y2gnOyAvLyBlbmNhcHN1bGF0ZXMgdGhlIHN1YnNjcmlwdGlvbiBsb2dpYyBmb3IgY29ubmVjdGluZyBhIGNvbXBvbmVudCB0byB0aGUgcmVkdXggc3RvcmUsIGFzXG4vLyB3ZWxsIGFzIG5lc3Rpbmcgc3Vic2NyaXB0aW9ucyBvZiBkZXNjZW5kYW50IGNvbXBvbmVudHMsIHNvIHRoYXQgd2UgY2FuIGVuc3VyZSB0aGVcbi8vIGFuY2VzdG9yIGNvbXBvbmVudHMgcmUtcmVuZGVyIGJlZm9yZSBkZXNjZW5kYW50c1xuXG52YXIgbnVsbExpc3RlbmVycyA9IHtcbiAgbm90aWZ5OiBmdW5jdGlvbiBub3RpZnkoKSB7fVxufTtcblxuZnVuY3Rpb24gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCkge1xuICB2YXIgYmF0Y2ggPSBnZXRCYXRjaCgpO1xuICB2YXIgZmlyc3QgPSBudWxsO1xuICB2YXIgbGFzdCA9IG51bGw7XG4gIHJldHVybiB7XG4gICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgZmlyc3QgPSBudWxsO1xuICAgICAgbGFzdCA9IG51bGw7XG4gICAgfSxcbiAgICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHtcbiAgICAgIGJhdGNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGxpc3RlbmVyID0gZmlyc3Q7XG5cbiAgICAgICAgd2hpbGUgKGxpc3RlbmVyKSB7XG4gICAgICAgICAgbGlzdGVuZXIuY2FsbGJhY2soKTtcbiAgICAgICAgICBsaXN0ZW5lciA9IGxpc3RlbmVyLm5leHQ7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICB2YXIgbGlzdGVuZXJzID0gW107XG4gICAgICB2YXIgbGlzdGVuZXIgPSBmaXJzdDtcblxuICAgICAgd2hpbGUgKGxpc3RlbmVyKSB7XG4gICAgICAgIGxpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICAgICAgbGlzdGVuZXIgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbGlzdGVuZXJzO1xuICAgIH0sXG4gICAgc3Vic2NyaWJlOiBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2spIHtcbiAgICAgIHZhciBpc1N1YnNjcmliZWQgPSB0cnVlO1xuICAgICAgdmFyIGxpc3RlbmVyID0gbGFzdCA9IHtcbiAgICAgICAgY2FsbGJhY2s6IGNhbGxiYWNrLFxuICAgICAgICBuZXh0OiBudWxsLFxuICAgICAgICBwcmV2OiBsYXN0XG4gICAgICB9O1xuXG4gICAgICBpZiAobGlzdGVuZXIucHJldikge1xuICAgICAgICBsaXN0ZW5lci5wcmV2Lm5leHQgPSBsaXN0ZW5lcjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGZpcnN0ID0gbGlzdGVuZXI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgICAgaWYgKCFpc1N1YnNjcmliZWQgfHwgZmlyc3QgPT09IG51bGwpIHJldHVybjtcbiAgICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKGxpc3RlbmVyLm5leHQpIHtcbiAgICAgICAgICBsaXN0ZW5lci5uZXh0LnByZXYgPSBsaXN0ZW5lci5wcmV2O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGxhc3QgPSBsaXN0ZW5lci5wcmV2O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGxpc3RlbmVyLnByZXYpIHtcbiAgICAgICAgICBsaXN0ZW5lci5wcmV2Lm5leHQgPSBsaXN0ZW5lci5uZXh0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGZpcnN0ID0gbGlzdGVuZXIubmV4dDtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG4gIH07XG59XG5cbnZhciBTdWJzY3JpcHRpb24gPVxuLyojX19QVVJFX18qL1xuZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdWJzY3JpcHRpb24oc3RvcmUsIHBhcmVudFN1Yikge1xuICAgIHRoaXMuc3RvcmUgPSBzdG9yZTtcbiAgICB0aGlzLnBhcmVudFN1YiA9IHBhcmVudFN1YjtcbiAgICB0aGlzLnVuc3Vic2NyaWJlID0gbnVsbDtcbiAgICB0aGlzLmxpc3RlbmVycyA9IG51bGxMaXN0ZW5lcnM7XG4gICAgdGhpcy5oYW5kbGVDaGFuZ2VXcmFwcGVyID0gdGhpcy5oYW5kbGVDaGFuZ2VXcmFwcGVyLmJpbmQodGhpcyk7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gU3Vic2NyaXB0aW9uLnByb3RvdHlwZTtcblxuICBfcHJvdG8uYWRkTmVzdGVkU3ViID0gZnVuY3Rpb24gYWRkTmVzdGVkU3ViKGxpc3RlbmVyKSB7XG4gICAgdGhpcy50cnlTdWJzY3JpYmUoKTtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc3Vic2NyaWJlKGxpc3RlbmVyKTtcbiAgfTtcblxuICBfcHJvdG8ubm90aWZ5TmVzdGVkU3VicyA9IGZ1bmN0aW9uIG5vdGlmeU5lc3RlZFN1YnMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMubm90aWZ5KCk7XG4gIH07XG5cbiAgX3Byb3RvLmhhbmRsZUNoYW5nZVdyYXBwZXIgPSBmdW5jdGlvbiBoYW5kbGVDaGFuZ2VXcmFwcGVyKCkge1xuICAgIGlmICh0aGlzLm9uU3RhdGVDaGFuZ2UpIHtcbiAgICAgIHRoaXMub25TdGF0ZUNoYW5nZSgpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uaXNTdWJzY3JpYmVkID0gZnVuY3Rpb24gaXNTdWJzY3JpYmVkKCkge1xuICAgIHJldHVybiBCb29sZWFuKHRoaXMudW5zdWJzY3JpYmUpO1xuICB9O1xuXG4gIF9wcm90by50cnlTdWJzY3JpYmUgPSBmdW5jdGlvbiB0cnlTdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLnVuc3Vic2NyaWJlKSB7XG4gICAgICB0aGlzLnVuc3Vic2NyaWJlID0gdGhpcy5wYXJlbnRTdWIgPyB0aGlzLnBhcmVudFN1Yi5hZGROZXN0ZWRTdWIodGhpcy5oYW5kbGVDaGFuZ2VXcmFwcGVyKSA6IHRoaXMuc3RvcmUuc3Vic2NyaWJlKHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlcik7XG4gICAgICB0aGlzLmxpc3RlbmVycyA9IGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8udHJ5VW5zdWJzY3JpYmUgPSBmdW5jdGlvbiB0cnlVbnN1YnNjcmliZSgpIHtcbiAgICBpZiAodGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSgpO1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgICB0aGlzLmxpc3RlbmVycy5jbGVhcigpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gU3Vic2NyaXB0aW9uO1xufSgpO1xuXG5leHBvcnQgeyBTdWJzY3JpcHRpb24gYXMgZGVmYXVsdCB9OyIsImltcG9ydCBSZWFjdCwgeyB1c2VNZW1vLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuL0NvbnRleHQnO1xuaW1wb3J0IFN1YnNjcmlwdGlvbiBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuXG5mdW5jdGlvbiBQcm92aWRlcihfcmVmKSB7XG4gIHZhciBzdG9yZSA9IF9yZWYuc3RvcmUsXG4gICAgICBjb250ZXh0ID0gX3JlZi5jb250ZXh0LFxuICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuO1xuICB2YXIgY29udGV4dFZhbHVlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oc3RvcmUpO1xuICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnM7XG4gICAgcmV0dXJuIHtcbiAgICAgIHN0b3JlOiBzdG9yZSxcbiAgICAgIHN1YnNjcmlwdGlvbjogc3Vic2NyaXB0aW9uXG4gICAgfTtcbiAgfSwgW3N0b3JlXSk7XG4gIHZhciBwcmV2aW91c1N0YXRlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHN0b3JlLmdldFN0YXRlKCk7XG4gIH0sIFtzdG9yZV0pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHZhciBzdWJzY3JpcHRpb24gPSBjb250ZXh0VmFsdWUuc3Vic2NyaXB0aW9uO1xuICAgIHN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcblxuICAgIGlmIChwcmV2aW91c1N0YXRlICE9PSBzdG9yZS5nZXRTdGF0ZSgpKSB7XG4gICAgICBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3VicygpO1xuICAgIH1cblxuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBzdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gbnVsbDtcbiAgICB9O1xuICB9LCBbY29udGV4dFZhbHVlLCBwcmV2aW91c1N0YXRlXSk7XG4gIHZhciBDb250ZXh0ID0gY29udGV4dCB8fCBSZWFjdFJlZHV4Q29udGV4dDtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGV4dC5Qcm92aWRlciwge1xuICAgIHZhbHVlOiBjb250ZXh0VmFsdWVcbiAgfSwgY2hpbGRyZW4pO1xufVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBQcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gICAgc3RvcmU6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICBzdWJzY3JpYmU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG4gICAgICBkaXNwYXRjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgICAgIGdldFN0YXRlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG4gICAgfSksXG4gICAgY29udGV4dDogUHJvcFR5cGVzLm9iamVjdCxcbiAgICBjaGlsZHJlbjogUHJvcFR5cGVzLmFueVxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBQcm92aWRlcjsiLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZUxheW91dEVmZmVjdCB9IGZyb20gJ3JlYWN0JzsgLy8gUmVhY3QgY3VycmVudGx5IHRocm93cyBhIHdhcm5pbmcgd2hlbiB1c2luZyB1c2VMYXlvdXRFZmZlY3Qgb24gdGhlIHNlcnZlci5cbi8vIFRvIGdldCBhcm91bmQgaXQsIHdlIGNhbiBjb25kaXRpb25hbGx5IHVzZUVmZmVjdCBvbiB0aGUgc2VydmVyIChuby1vcCkgYW5kXG4vLyB1c2VMYXlvdXRFZmZlY3QgaW4gdGhlIGJyb3dzZXIuIFdlIG5lZWQgdXNlTGF5b3V0RWZmZWN0IHRvIGVuc3VyZSB0aGUgc3RvcmVcbi8vIHN1YnNjcmlwdGlvbiBjYWxsYmFjayBhbHdheXMgaGFzIHRoZSBzZWxlY3RvciBmcm9tIHRoZSBsYXRlc3QgcmVuZGVyIGNvbW1pdFxuLy8gYXZhaWxhYmxlLCBvdGhlcndpc2UgYSBzdG9yZSB1cGRhdGUgbWF5IGhhcHBlbiBiZXR3ZWVuIHJlbmRlciBhbmQgdGhlIGVmZmVjdCxcbi8vIHdoaWNoIG1heSBjYXVzZSBtaXNzZWQgdXBkYXRlczsgd2UgYWxzbyBtdXN0IGVuc3VyZSB0aGUgc3RvcmUgc3Vic2NyaXB0aW9uXG4vLyBpcyBjcmVhdGVkIHN5bmNocm9ub3VzbHksIG90aGVyd2lzZSBhIHN0b3JlIHVwZGF0ZSBtYXkgb2NjdXIgYmVmb3JlIHRoZVxuLy8gc3Vic2NyaXB0aW9uIGlzIGNyZWF0ZWQgYW5kIGFuIGluY29uc2lzdGVudCBzdGF0ZSBtYXkgYmUgb2JzZXJ2ZWRcblxuZXhwb3J0IHZhciB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGhvaXN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlTWVtbywgdXNlUmVmLCB1c2VSZWR1Y2VyIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgaXNWYWxpZEVsZW1lbnRUeXBlLCBpc0NvbnRleHRDb25zdW1lciB9IGZyb20gJ3JlYWN0LWlzJztcbmltcG9ydCBTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXRpbHMvU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLi91dGlscy91c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0JztcbmltcG9ydCB7IFJlYWN0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi9Db250ZXh0JzsgLy8gRGVmaW5lIHNvbWUgY29uc3RhbnQgYXJyYXlzIGp1c3QgdG8gYXZvaWQgcmUtY3JlYXRpbmcgdGhlc2VcblxudmFyIEVNUFRZX0FSUkFZID0gW107XG52YXIgTk9fU1VCU0NSSVBUSU9OX0FSUkFZID0gW251bGwsIG51bGxdO1xuXG52YXIgc3RyaW5naWZ5Q29tcG9uZW50ID0gZnVuY3Rpb24gc3RyaW5naWZ5Q29tcG9uZW50KENvbXApIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoQ29tcCk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBTdHJpbmcoQ29tcCk7XG4gIH1cbn07XG5cbmZ1bmN0aW9uIHN0b3JlU3RhdGVVcGRhdGVzUmVkdWNlcihzdGF0ZSwgYWN0aW9uKSB7XG4gIHZhciB1cGRhdGVDb3VudCA9IHN0YXRlWzFdO1xuICByZXR1cm4gW2FjdGlvbi5wYXlsb2FkLCB1cGRhdGVDb3VudCArIDFdO1xufVxuXG5mdW5jdGlvbiB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0V2l0aEFyZ3MoZWZmZWN0RnVuYywgZWZmZWN0QXJncywgZGVwZW5kZW5jaWVzKSB7XG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBlZmZlY3RGdW5jLmFwcGx5KHZvaWQgMCwgZWZmZWN0QXJncyk7XG4gIH0sIGRlcGVuZGVuY2llcyk7XG59XG5cbmZ1bmN0aW9uIGNhcHR1cmVXcmFwcGVyUHJvcHMobGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCB3cmFwcGVyUHJvcHMsIGFjdHVhbENoaWxkUHJvcHMsIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUsIG5vdGlmeU5lc3RlZFN1YnMpIHtcbiAgLy8gV2Ugd2FudCB0byBjYXB0dXJlIHRoZSB3cmFwcGVyIHByb3BzIGFuZCBjaGlsZCBwcm9wcyB3ZSB1c2VkIGZvciBsYXRlciBjb21wYXJpc29uc1xuICBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQgPSB3cmFwcGVyUHJvcHM7XG4gIGxhc3RDaGlsZFByb3BzLmN1cnJlbnQgPSBhY3R1YWxDaGlsZFByb3BzO1xuICByZW5kZXJJc1NjaGVkdWxlZC5jdXJyZW50ID0gZmFsc2U7IC8vIElmIHRoZSByZW5kZXIgd2FzIGZyb20gYSBzdG9yZSB1cGRhdGUsIGNsZWFyIG91dCB0aGF0IHJlZmVyZW5jZSBhbmQgY2FzY2FkZSB0aGUgc3Vic2NyaWJlciB1cGRhdGVcblxuICBpZiAoY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50KSB7XG4gICAgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50ID0gbnVsbDtcbiAgICBub3RpZnlOZXN0ZWRTdWJzKCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gc3Vic2NyaWJlVXBkYXRlcyhzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsIHN0b3JlLCBzdWJzY3JpcHRpb24sIGNoaWxkUHJvcHNTZWxlY3RvciwgbGFzdFdyYXBwZXJQcm9wcywgbGFzdENoaWxkUHJvcHMsIHJlbmRlcklzU2NoZWR1bGVkLCBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLCBub3RpZnlOZXN0ZWRTdWJzLCBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoKSB7XG4gIC8vIElmIHdlJ3JlIG5vdCBzdWJzY3JpYmVkIHRvIHRoZSBzdG9yZSwgbm90aGluZyB0byBkbyBoZXJlXG4gIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm47IC8vIENhcHR1cmUgdmFsdWVzIGZvciBjaGVja2luZyBpZiBhbmQgd2hlbiB0aGlzIGNvbXBvbmVudCB1bm1vdW50c1xuXG4gIHZhciBkaWRVbnN1YnNjcmliZSA9IGZhbHNlO1xuICB2YXIgbGFzdFRocm93bkVycm9yID0gbnVsbDsgLy8gV2UnbGwgcnVuIHRoaXMgY2FsbGJhY2sgZXZlcnkgdGltZSBhIHN0b3JlIHN1YnNjcmlwdGlvbiB1cGRhdGUgcHJvcGFnYXRlcyB0byB0aGlzIGNvbXBvbmVudFxuXG4gIHZhciBjaGVja0ZvclVwZGF0ZXMgPSBmdW5jdGlvbiBjaGVja0ZvclVwZGF0ZXMoKSB7XG4gICAgaWYgKGRpZFVuc3Vic2NyaWJlKSB7XG4gICAgICAvLyBEb24ndCBydW4gc3RhbGUgbGlzdGVuZXJzLlxuICAgICAgLy8gUmVkdXggZG9lc24ndCBndWFyYW50ZWUgdW5zdWJzY3JpcHRpb25zIGhhcHBlbiB1bnRpbCBuZXh0IGRpc3BhdGNoLlxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBsYXRlc3RTdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgICB2YXIgbmV3Q2hpbGRQcm9wcywgZXJyb3I7XG5cbiAgICB0cnkge1xuICAgICAgLy8gQWN0dWFsbHkgcnVuIHRoZSBzZWxlY3RvciB3aXRoIHRoZSBtb3N0IHJlY2VudCBzdG9yZSBzdGF0ZSBhbmQgd3JhcHBlciBwcm9wc1xuICAgICAgLy8gdG8gZGV0ZXJtaW5lIHdoYXQgdGhlIGNoaWxkIHByb3BzIHNob3VsZCBiZVxuICAgICAgbmV3Q2hpbGRQcm9wcyA9IGNoaWxkUHJvcHNTZWxlY3RvcihsYXRlc3RTdG9yZVN0YXRlLCBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGVycm9yID0gZTtcbiAgICAgIGxhc3RUaHJvd25FcnJvciA9IGU7XG4gICAgfVxuXG4gICAgaWYgKCFlcnJvcikge1xuICAgICAgbGFzdFRocm93bkVycm9yID0gbnVsbDtcbiAgICB9IC8vIElmIHRoZSBjaGlsZCBwcm9wcyBoYXZlbid0IGNoYW5nZWQsIG5vdGhpbmcgdG8gZG8gaGVyZSAtIGNhc2NhZGUgdGhlIHN1YnNjcmlwdGlvbiB1cGRhdGVcblxuXG4gICAgaWYgKG5ld0NoaWxkUHJvcHMgPT09IGxhc3RDaGlsZFByb3BzLmN1cnJlbnQpIHtcbiAgICAgIGlmICghcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCkge1xuICAgICAgICBub3RpZnlOZXN0ZWRTdWJzKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFNhdmUgcmVmZXJlbmNlcyB0byB0aGUgbmV3IGNoaWxkIHByb3BzLiAgTm90ZSB0aGF0IHdlIHRyYWNrIHRoZSBcImNoaWxkIHByb3BzIGZyb20gc3RvcmUgdXBkYXRlXCJcbiAgICAgIC8vIGFzIGEgcmVmIGluc3RlYWQgb2YgYSB1c2VTdGF0ZS91c2VSZWR1Y2VyIGJlY2F1c2Ugd2UgbmVlZCBhIHdheSB0byBkZXRlcm1pbmUgaWYgdGhhdCB2YWx1ZSBoYXNcbiAgICAgIC8vIGJlZW4gcHJvY2Vzc2VkLiAgSWYgdGhpcyB3ZW50IGludG8gdXNlU3RhdGUvdXNlUmVkdWNlciwgd2UgY291bGRuJ3QgY2xlYXIgb3V0IHRoZSB2YWx1ZSB3aXRob3V0XG4gICAgICAvLyBmb3JjaW5nIGFub3RoZXIgcmUtcmVuZGVyLCB3aGljaCB3ZSBkb24ndCB3YW50LlxuICAgICAgbGFzdENoaWxkUHJvcHMuY3VycmVudCA9IG5ld0NoaWxkUHJvcHM7XG4gICAgICBjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgPSBuZXdDaGlsZFByb3BzO1xuICAgICAgcmVuZGVySXNTY2hlZHVsZWQuY3VycmVudCA9IHRydWU7IC8vIElmIHRoZSBjaGlsZCBwcm9wcyBfZGlkXyBjaGFuZ2UgKG9yIHdlIGNhdWdodCBhbiBlcnJvciksIHRoaXMgd3JhcHBlciBjb21wb25lbnQgbmVlZHMgdG8gcmUtcmVuZGVyXG5cbiAgICAgIGZvcmNlQ29tcG9uZW50VXBkYXRlRGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnU1RPUkVfVVBEQVRFRCcsXG4gICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICBlcnJvcjogZXJyb3JcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9OyAvLyBBY3R1YWxseSBzdWJzY3JpYmUgdG8gdGhlIG5lYXJlc3QgY29ubmVjdGVkIGFuY2VzdG9yIChvciBzdG9yZSlcblxuXG4gIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gY2hlY2tGb3JVcGRhdGVzO1xuICBzdWJzY3JpcHRpb24udHJ5U3Vic2NyaWJlKCk7IC8vIFB1bGwgZGF0YSBmcm9tIHRoZSBzdG9yZSBhZnRlciBmaXJzdCByZW5kZXIgaW4gY2FzZSB0aGUgc3RvcmUgaGFzXG4gIC8vIGNoYW5nZWQgc2luY2Ugd2UgYmVnYW4uXG5cbiAgY2hlY2tGb3JVcGRhdGVzKCk7XG5cbiAgdmFyIHVuc3Vic2NyaWJlV3JhcHBlciA9IGZ1bmN0aW9uIHVuc3Vic2NyaWJlV3JhcHBlcigpIHtcbiAgICBkaWRVbnN1YnNjcmliZSA9IHRydWU7XG4gICAgc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgc3Vic2NyaXB0aW9uLm9uU3RhdGVDaGFuZ2UgPSBudWxsO1xuXG4gICAgaWYgKGxhc3RUaHJvd25FcnJvcikge1xuICAgICAgLy8gSXQncyBwb3NzaWJsZSB0aGF0IHdlIGNhdWdodCBhbiBlcnJvciBkdWUgdG8gYSBiYWQgbWFwU3RhdGUgZnVuY3Rpb24sIGJ1dCB0aGVcbiAgICAgIC8vIHBhcmVudCByZS1yZW5kZXJlZCB3aXRob3V0IHRoaXMgY29tcG9uZW50IGFuZCB3ZSdyZSBhYm91dCB0byB1bm1vdW50LlxuICAgICAgLy8gVGhpcyBzaG91bGRuJ3QgaGFwcGVuIGFzIGxvbmcgYXMgd2UgZG8gdG9wLWRvd24gc3Vic2NyaXB0aW9ucyBjb3JyZWN0bHksIGJ1dFxuICAgICAgLy8gaWYgd2UgZXZlciBkbyB0aG9zZSB3cm9uZywgdGhpcyB0aHJvdyB3aWxsIHN1cmZhY2UgdGhlIGVycm9yIGluIG91ciB0ZXN0cy5cbiAgICAgIC8vIEluIHRoYXQgY2FzZSwgdGhyb3cgdGhlIGVycm9yIGZyb20gaGVyZSBzbyBpdCBkb2Vzbid0IGdldCBsb3N0LlxuICAgICAgdGhyb3cgbGFzdFRocm93bkVycm9yO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdW5zdWJzY3JpYmVXcmFwcGVyO1xufVxuXG52YXIgaW5pdFN0YXRlVXBkYXRlcyA9IGZ1bmN0aW9uIGluaXRTdGF0ZVVwZGF0ZXMoKSB7XG4gIHJldHVybiBbbnVsbCwgMF07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb25uZWN0QWR2YW5jZWQoXG4vKlxyXG4gIHNlbGVjdG9yRmFjdG9yeSBpcyBhIGZ1bmMgdGhhdCBpcyByZXNwb25zaWJsZSBmb3IgcmV0dXJuaW5nIHRoZSBzZWxlY3RvciBmdW5jdGlvbiB1c2VkIHRvXHJcbiAgY29tcHV0ZSBuZXcgcHJvcHMgZnJvbSBzdGF0ZSwgcHJvcHMsIGFuZCBkaXNwYXRjaC4gRm9yIGV4YW1wbGU6XHJcbiAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbm5lY3RBZHZhbmNlZCgoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChzdGF0ZSwgcHJvcHMpID0+ICh7XHJcbiAgICAgIHRoaW5nOiBzdGF0ZS50aGluZ3NbcHJvcHMudGhpbmdJZF0sXHJcbiAgICAgIHNhdmVUaGluZzogZmllbGRzID0+IGRpc3BhdGNoKGFjdGlvbkNyZWF0b3JzLnNhdmVUaGluZyhwcm9wcy50aGluZ0lkLCBmaWVsZHMpKSxcclxuICAgIH0pKShZb3VyQ29tcG9uZW50KVxyXG4gICAgQWNjZXNzIHRvIGRpc3BhdGNoIGlzIHByb3ZpZGVkIHRvIHRoZSBmYWN0b3J5IHNvIHNlbGVjdG9yRmFjdG9yaWVzIGNhbiBiaW5kIGFjdGlvbkNyZWF0b3JzXHJcbiAgb3V0c2lkZSBvZiB0aGVpciBzZWxlY3RvciBhcyBhbiBvcHRpbWl6YXRpb24uIE9wdGlvbnMgcGFzc2VkIHRvIGNvbm5lY3RBZHZhbmNlZCBhcmUgcGFzc2VkIHRvXHJcbiAgdGhlIHNlbGVjdG9yRmFjdG9yeSwgYWxvbmcgd2l0aCBkaXNwbGF5TmFtZSBhbmQgV3JhcHBlZENvbXBvbmVudCwgYXMgdGhlIHNlY29uZCBhcmd1bWVudC5cclxuICAgIE5vdGUgdGhhdCBzZWxlY3RvckZhY3RvcnkgaXMgcmVzcG9uc2libGUgZm9yIGFsbCBjYWNoaW5nL21lbW9pemF0aW9uIG9mIGluYm91bmQgYW5kIG91dGJvdW5kXHJcbiAgcHJvcHMuIERvIG5vdCB1c2UgY29ubmVjdEFkdmFuY2VkIGRpcmVjdGx5IHdpdGhvdXQgbWVtb2l6aW5nIHJlc3VsdHMgYmV0d2VlbiBjYWxscyB0byB5b3VyXHJcbiAgc2VsZWN0b3IsIG90aGVyd2lzZSB0aGUgQ29ubmVjdCBjb21wb25lbnQgd2lsbCByZS1yZW5kZXIgb24gZXZlcnkgc3RhdGUgb3IgcHJvcHMgY2hhbmdlLlxyXG4qL1xuc2VsZWN0b3JGYWN0b3J5LCAvLyBvcHRpb25zIG9iamVjdDpcbl9yZWYpIHtcbiAgaWYgKF9yZWYgPT09IHZvaWQgMCkge1xuICAgIF9yZWYgPSB7fTtcbiAgfVxuXG4gIHZhciBfcmVmMiA9IF9yZWYsXG4gICAgICBfcmVmMiRnZXREaXNwbGF5TmFtZSA9IF9yZWYyLmdldERpc3BsYXlOYW1lLFxuICAgICAgZ2V0RGlzcGxheU5hbWUgPSBfcmVmMiRnZXREaXNwbGF5TmFtZSA9PT0gdm9pZCAwID8gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gXCJDb25uZWN0QWR2YW5jZWQoXCIgKyBuYW1lICsgXCIpXCI7XG4gIH0gOiBfcmVmMiRnZXREaXNwbGF5TmFtZSxcbiAgICAgIF9yZWYyJG1ldGhvZE5hbWUgPSBfcmVmMi5tZXRob2ROYW1lLFxuICAgICAgbWV0aG9kTmFtZSA9IF9yZWYyJG1ldGhvZE5hbWUgPT09IHZvaWQgMCA/ICdjb25uZWN0QWR2YW5jZWQnIDogX3JlZjIkbWV0aG9kTmFtZSxcbiAgICAgIF9yZWYyJHJlbmRlckNvdW50UHJvcCA9IF9yZWYyLnJlbmRlckNvdW50UHJvcCxcbiAgICAgIHJlbmRlckNvdW50UHJvcCA9IF9yZWYyJHJlbmRlckNvdW50UHJvcCA9PT0gdm9pZCAwID8gdW5kZWZpbmVkIDogX3JlZjIkcmVuZGVyQ291bnRQcm9wLFxuICAgICAgX3JlZjIkc2hvdWxkSGFuZGxlU3RhID0gX3JlZjIuc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzID0gX3JlZjIkc2hvdWxkSGFuZGxlU3RhID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjIkc2hvdWxkSGFuZGxlU3RhLFxuICAgICAgX3JlZjIkc3RvcmVLZXkgPSBfcmVmMi5zdG9yZUtleSxcbiAgICAgIHN0b3JlS2V5ID0gX3JlZjIkc3RvcmVLZXkgPT09IHZvaWQgMCA/ICdzdG9yZScgOiBfcmVmMiRzdG9yZUtleSxcbiAgICAgIF9yZWYyJHdpdGhSZWYgPSBfcmVmMi53aXRoUmVmLFxuICAgICAgd2l0aFJlZiA9IF9yZWYyJHdpdGhSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkd2l0aFJlZixcbiAgICAgIF9yZWYyJGZvcndhcmRSZWYgPSBfcmVmMi5mb3J3YXJkUmVmLFxuICAgICAgZm9yd2FyZFJlZiA9IF9yZWYyJGZvcndhcmRSZWYgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZjIkZm9yd2FyZFJlZixcbiAgICAgIF9yZWYyJGNvbnRleHQgPSBfcmVmMi5jb250ZXh0LFxuICAgICAgY29udGV4dCA9IF9yZWYyJGNvbnRleHQgPT09IHZvaWQgMCA/IFJlYWN0UmVkdXhDb250ZXh0IDogX3JlZjIkY29udGV4dCxcbiAgICAgIGNvbm5lY3RPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZjIsIFtcImdldERpc3BsYXlOYW1lXCIsIFwibWV0aG9kTmFtZVwiLCBcInJlbmRlckNvdW50UHJvcFwiLCBcInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlc1wiLCBcInN0b3JlS2V5XCIsIFwid2l0aFJlZlwiLCBcImZvcndhcmRSZWZcIiwgXCJjb250ZXh0XCJdKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChyZW5kZXJDb3VudFByb3AgIT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwicmVuZGVyQ291bnRQcm9wIGlzIHJlbW92ZWQuIHJlbmRlciBjb3VudGluZyBpcyBidWlsdCBpbnRvIHRoZSBsYXRlc3QgUmVhY3QgRGV2IFRvb2xzIHByb2ZpbGluZyBleHRlbnNpb25cIik7XG4gICAgfVxuXG4gICAgaWYgKHdpdGhSZWYpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignd2l0aFJlZiBpcyByZW1vdmVkLiBUbyBhY2Nlc3MgdGhlIHdyYXBwZWQgaW5zdGFuY2UsIHVzZSBhIHJlZiBvbiB0aGUgY29ubmVjdGVkIGNvbXBvbmVudCcpO1xuICAgIH1cblxuICAgIHZhciBjdXN0b21TdG9yZVdhcm5pbmdNZXNzYWdlID0gJ1RvIHVzZSBhIGN1c3RvbSBSZWR1eCBzdG9yZSBmb3Igc3BlY2lmaWMgY29tcG9uZW50cywgY3JlYXRlIGEgY3VzdG9tIFJlYWN0IGNvbnRleHQgd2l0aCAnICsgXCJSZWFjdC5jcmVhdGVDb250ZXh0KCksIGFuZCBwYXNzIHRoZSBjb250ZXh0IG9iamVjdCB0byBSZWFjdCBSZWR1eCdzIFByb3ZpZGVyIGFuZCBzcGVjaWZpYyBjb21wb25lbnRzXCIgKyAnIGxpa2U6IDxQcm92aWRlciBjb250ZXh0PXtNeUNvbnRleHR9PjxDb25uZWN0ZWRDb21wb25lbnQgY29udGV4dD17TXlDb250ZXh0fSAvPjwvUHJvdmlkZXI+LiAnICsgJ1lvdSBtYXkgYWxzbyBwYXNzIGEge2NvbnRleHQgOiBNeUNvbnRleHR9IG9wdGlvbiB0byBjb25uZWN0JztcblxuICAgIGlmIChzdG9yZUtleSAhPT0gJ3N0b3JlJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdzdG9yZUtleSBoYXMgYmVlbiByZW1vdmVkIGFuZCBkb2VzIG5vdCBkbyBhbnl0aGluZy4gJyArIGN1c3RvbVN0b3JlV2FybmluZ01lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIHZhciBDb250ZXh0ID0gY29udGV4dDtcbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBXaXRoQ29ubmVjdChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIWlzVmFsaWRFbGVtZW50VHlwZShXcmFwcGVkQ29tcG9uZW50KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiWW91IG11c3QgcGFzcyBhIGNvbXBvbmVudCB0byB0aGUgZnVuY3Rpb24gcmV0dXJuZWQgYnkgXCIgKyAobWV0aG9kTmFtZSArIFwiLiBJbnN0ZWFkIHJlY2VpdmVkIFwiICsgc3RyaW5naWZ5Q29tcG9uZW50KFdyYXBwZWRDb21wb25lbnQpKSk7XG4gICAgfVxuXG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gZ2V0RGlzcGxheU5hbWUod3JhcHBlZENvbXBvbmVudE5hbWUpO1xuXG4gICAgdmFyIHNlbGVjdG9yRmFjdG9yeU9wdGlvbnMgPSBfZXh0ZW5kcyh7fSwgY29ubmVjdE9wdGlvbnMsIHtcbiAgICAgIGdldERpc3BsYXlOYW1lOiBnZXREaXNwbGF5TmFtZSxcbiAgICAgIG1ldGhvZE5hbWU6IG1ldGhvZE5hbWUsXG4gICAgICByZW5kZXJDb3VudFByb3A6IHJlbmRlckNvdW50UHJvcCxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzLFxuICAgICAgc3RvcmVLZXk6IHN0b3JlS2V5LFxuICAgICAgZGlzcGxheU5hbWU6IGRpc3BsYXlOYW1lLFxuICAgICAgd3JhcHBlZENvbXBvbmVudE5hbWU6IHdyYXBwZWRDb21wb25lbnROYW1lLFxuICAgICAgV3JhcHBlZENvbXBvbmVudDogV3JhcHBlZENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgdmFyIHB1cmUgPSBjb25uZWN0T3B0aW9ucy5wdXJlO1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlQ2hpbGRTZWxlY3RvcihzdG9yZSkge1xuICAgICAgcmV0dXJuIHNlbGVjdG9yRmFjdG9yeShzdG9yZS5kaXNwYXRjaCwgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyk7XG4gICAgfSAvLyBJZiB3ZSBhcmVuJ3QgcnVubmluZyBpbiBcInB1cmVcIiBtb2RlLCB3ZSBkb24ndCB3YW50IHRvIG1lbW9pemUgdmFsdWVzLlxuICAgIC8vIFRvIGF2b2lkIGNvbmRpdGlvbmFsbHkgY2FsbGluZyBob29rcywgd2UgZmFsbCBiYWNrIHRvIGEgdGlueSB3cmFwcGVyXG4gICAgLy8gdGhhdCBqdXN0IGV4ZWN1dGVzIHRoZSBnaXZlbiBjYWxsYmFjayBpbW1lZGlhdGVseS5cblxuXG4gICAgdmFyIHVzZVB1cmVPbmx5TWVtbyA9IHB1cmUgPyB1c2VNZW1vIDogZnVuY3Rpb24gKGNhbGxiYWNrKSB7XG4gICAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gQ29ubmVjdEZ1bmN0aW9uKHByb3BzKSB7XG4gICAgICB2YXIgX3VzZU1lbW8gPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gRGlzdGluZ3Vpc2ggYmV0d2VlbiBhY3R1YWwgXCJkYXRhXCIgcHJvcHMgdGhhdCB3ZXJlIHBhc3NlZCB0byB0aGUgd3JhcHBlciBjb21wb25lbnQsXG4gICAgICAgIC8vIGFuZCB2YWx1ZXMgbmVlZGVkIHRvIGNvbnRyb2wgYmVoYXZpb3IgKGZvcndhcmRlZCByZWZzLCBhbHRlcm5hdGUgY29udGV4dCBpbnN0YW5jZXMpLlxuICAgICAgICAvLyBUbyBtYWludGFpbiB0aGUgd3JhcHBlclByb3BzIG9iamVjdCByZWZlcmVuY2UsIG1lbW9pemUgdGhpcyBkZXN0cnVjdHVyaW5nLlxuICAgICAgICB2YXIgcmVhY3RSZWR1eEZvcndhcmRlZFJlZiA9IHByb3BzLnJlYWN0UmVkdXhGb3J3YXJkZWRSZWYsXG4gICAgICAgICAgICB3cmFwcGVyUHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wicmVhY3RSZWR1eEZvcndhcmRlZFJlZlwiXSk7XG5cbiAgICAgICAgcmV0dXJuIFtwcm9wcy5jb250ZXh0LCByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLCB3cmFwcGVyUHJvcHNdO1xuICAgICAgfSwgW3Byb3BzXSksXG4gICAgICAgICAgcHJvcHNDb250ZXh0ID0gX3VzZU1lbW9bMF0sXG4gICAgICAgICAgcmVhY3RSZWR1eEZvcndhcmRlZFJlZiA9IF91c2VNZW1vWzFdLFxuICAgICAgICAgIHdyYXBwZXJQcm9wcyA9IF91c2VNZW1vWzJdO1xuXG4gICAgICB2YXIgQ29udGV4dFRvVXNlID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIC8vIFVzZXJzIG1heSBvcHRpb25hbGx5IHBhc3MgaW4gYSBjdXN0b20gY29udGV4dCBpbnN0YW5jZSB0byB1c2UgaW5zdGVhZCBvZiBvdXIgUmVhY3RSZWR1eENvbnRleHQuXG4gICAgICAgIC8vIE1lbW9pemUgdGhlIGNoZWNrIHRoYXQgZGV0ZXJtaW5lcyB3aGljaCBjb250ZXh0IGluc3RhbmNlIHdlIHNob3VsZCB1c2UuXG4gICAgICAgIHJldHVybiBwcm9wc0NvbnRleHQgJiYgcHJvcHNDb250ZXh0LkNvbnN1bWVyICYmIGlzQ29udGV4dENvbnN1bWVyKFJlYWN0LmNyZWF0ZUVsZW1lbnQocHJvcHNDb250ZXh0LkNvbnN1bWVyLCBudWxsKSkgPyBwcm9wc0NvbnRleHQgOiBDb250ZXh0O1xuICAgICAgfSwgW3Byb3BzQ29udGV4dCwgQ29udGV4dF0pOyAvLyBSZXRyaWV2ZSB0aGUgc3RvcmUgYW5kIGFuY2VzdG9yIHN1YnNjcmlwdGlvbiB2aWEgY29udGV4dCwgaWYgYXZhaWxhYmxlXG5cbiAgICAgIHZhciBjb250ZXh0VmFsdWUgPSB1c2VDb250ZXh0KENvbnRleHRUb1VzZSk7IC8vIFRoZSBzdG9yZSBfbXVzdF8gZXhpc3QgYXMgZWl0aGVyIGEgcHJvcCBvciBpbiBjb250ZXh0LlxuICAgICAgLy8gV2UnbGwgY2hlY2sgdG8gc2VlIGlmIGl0IF9sb29rc18gbGlrZSBhIFJlZHV4IHN0b3JlIGZpcnN0LlxuICAgICAgLy8gVGhpcyBhbGxvd3MgdXMgdG8gcGFzcyB0aHJvdWdoIGEgYHN0b3JlYCBwcm9wIHRoYXQgaXMganVzdCBhIHBsYWluIHZhbHVlLlxuXG4gICAgICB2YXIgZGlkU3RvcmVDb21lRnJvbVByb3BzID0gQm9vbGVhbihwcm9wcy5zdG9yZSkgJiYgQm9vbGVhbihwcm9wcy5zdG9yZS5nZXRTdGF0ZSkgJiYgQm9vbGVhbihwcm9wcy5zdG9yZS5kaXNwYXRjaCk7XG4gICAgICB2YXIgZGlkU3RvcmVDb21lRnJvbUNvbnRleHQgPSBCb29sZWFuKGNvbnRleHRWYWx1ZSkgJiYgQm9vbGVhbihjb250ZXh0VmFsdWUuc3RvcmUpO1xuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiAhZGlkU3RvcmVDb21lRnJvbVByb3BzICYmICFkaWRTdG9yZUNvbWVGcm9tQ29udGV4dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZCBub3QgZmluZCBcXFwic3RvcmVcXFwiIGluIHRoZSBjb250ZXh0IG9mIFwiICsgKFwiXFxcIlwiICsgZGlzcGxheU5hbWUgKyBcIlxcXCIuIEVpdGhlciB3cmFwIHRoZSByb290IGNvbXBvbmVudCBpbiBhIDxQcm92aWRlcj4sIFwiKSArIFwib3IgcGFzcyBhIGN1c3RvbSBSZWFjdCBjb250ZXh0IHByb3ZpZGVyIHRvIDxQcm92aWRlcj4gYW5kIHRoZSBjb3JyZXNwb25kaW5nIFwiICsgKFwiUmVhY3QgY29udGV4dCBjb25zdW1lciB0byBcIiArIGRpc3BsYXlOYW1lICsgXCIgaW4gY29ubmVjdCBvcHRpb25zLlwiKSk7XG4gICAgICB9IC8vIEJhc2VkIG9uIHRoZSBwcmV2aW91cyBjaGVjaywgb25lIG9mIHRoZXNlIG11c3QgYmUgdHJ1ZVxuXG5cbiAgICAgIHZhciBzdG9yZSA9IGRpZFN0b3JlQ29tZUZyb21Qcm9wcyA/IHByb3BzLnN0b3JlIDogY29udGV4dFZhbHVlLnN0b3JlO1xuICAgICAgdmFyIGNoaWxkUHJvcHNTZWxlY3RvciA9IHVzZU1lbW8oZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBUaGUgY2hpbGQgcHJvcHMgc2VsZWN0b3IgbmVlZHMgdGhlIHN0b3JlIHJlZmVyZW5jZSBhcyBhbiBpbnB1dC5cbiAgICAgICAgLy8gUmUtY3JlYXRlIHRoaXMgc2VsZWN0b3Igd2hlbmV2ZXIgdGhlIHN0b3JlIGNoYW5nZXMuXG4gICAgICAgIHJldHVybiBjcmVhdGVDaGlsZFNlbGVjdG9yKHN0b3JlKTtcbiAgICAgIH0sIFtzdG9yZV0pO1xuXG4gICAgICB2YXIgX3VzZU1lbW8yID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm4gTk9fU1VCU0NSSVBUSU9OX0FSUkFZOyAvLyBUaGlzIFN1YnNjcmlwdGlvbidzIHNvdXJjZSBzaG91bGQgbWF0Y2ggd2hlcmUgc3RvcmUgY2FtZSBmcm9tOiBwcm9wcyB2cy4gY29udGV4dC4gQSBjb21wb25lbnRcbiAgICAgICAgLy8gY29ubmVjdGVkIHRvIHRoZSBzdG9yZSB2aWEgcHJvcHMgc2hvdWxkbid0IHVzZSBzdWJzY3JpcHRpb24gZnJvbSBjb250ZXh0LCBvciB2aWNlIHZlcnNhLlxuXG4gICAgICAgIHZhciBzdWJzY3JpcHRpb24gPSBuZXcgU3Vic2NyaXB0aW9uKHN0b3JlLCBkaWRTdG9yZUNvbWVGcm9tUHJvcHMgPyBudWxsIDogY29udGV4dFZhbHVlLnN1YnNjcmlwdGlvbik7IC8vIGBub3RpZnlOZXN0ZWRTdWJzYCBpcyBkdXBsaWNhdGVkIHRvIGhhbmRsZSB0aGUgY2FzZSB3aGVyZSB0aGUgY29tcG9uZW50IGlzIHVubW91bnRlZCBpblxuICAgICAgICAvLyB0aGUgbWlkZGxlIG9mIHRoZSBub3RpZmljYXRpb24gbG9vcCwgd2hlcmUgYHN1YnNjcmlwdGlvbmAgd2lsbCB0aGVuIGJlIG51bGwuIFRoaXMgY2FuXG4gICAgICAgIC8vIHByb2JhYmx5IGJlIGF2b2lkZWQgaWYgU3Vic2NyaXB0aW9uJ3MgbGlzdGVuZXJzIGxvZ2ljIGlzIGNoYW5nZWQgdG8gbm90IGNhbGwgbGlzdGVuZXJzXG4gICAgICAgIC8vIHRoYXQgaGF2ZSBiZWVuIHVuc3Vic2NyaWJlZCBpbiB0aGUgIG1pZGRsZSBvZiB0aGUgbm90aWZpY2F0aW9uIGxvb3AuXG5cbiAgICAgICAgdmFyIG5vdGlmeU5lc3RlZFN1YnMgPSBzdWJzY3JpcHRpb24ubm90aWZ5TmVzdGVkU3Vicy5iaW5kKHN1YnNjcmlwdGlvbik7XG4gICAgICAgIHJldHVybiBbc3Vic2NyaXB0aW9uLCBub3RpZnlOZXN0ZWRTdWJzXTtcbiAgICAgIH0sIFtzdG9yZSwgZGlkU3RvcmVDb21lRnJvbVByb3BzLCBjb250ZXh0VmFsdWVdKSxcbiAgICAgICAgICBzdWJzY3JpcHRpb24gPSBfdXNlTWVtbzJbMF0sXG4gICAgICAgICAgbm90aWZ5TmVzdGVkU3VicyA9IF91c2VNZW1vMlsxXTsgLy8gRGV0ZXJtaW5lIHdoYXQge3N0b3JlLCBzdWJzY3JpcHRpb259IHZhbHVlIHNob3VsZCBiZSBwdXQgaW50byBuZXN0ZWQgY29udGV4dCwgaWYgbmVjZXNzYXJ5LFxuICAgICAgLy8gYW5kIG1lbW9pemUgdGhhdCB2YWx1ZSB0byBhdm9pZCB1bm5lY2Vzc2FyeSBjb250ZXh0IHVwZGF0ZXMuXG5cblxuICAgICAgdmFyIG92ZXJyaWRkZW5Db250ZXh0VmFsdWUgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGRpZFN0b3JlQ29tZUZyb21Qcm9wcykge1xuICAgICAgICAgIC8vIFRoaXMgY29tcG9uZW50IGlzIGRpcmVjdGx5IHN1YnNjcmliZWQgdG8gYSBzdG9yZSBmcm9tIHByb3BzLlxuICAgICAgICAgIC8vIFdlIGRvbid0IHdhbnQgZGVzY2VuZGFudHMgcmVhZGluZyBmcm9tIHRoaXMgc3RvcmUgLSBwYXNzIGRvd24gd2hhdGV2ZXJcbiAgICAgICAgICAvLyB0aGUgZXhpc3RpbmcgY29udGV4dCB2YWx1ZSBpcyBmcm9tIHRoZSBuZWFyZXN0IGNvbm5lY3RlZCBhbmNlc3Rvci5cbiAgICAgICAgICByZXR1cm4gY29udGV4dFZhbHVlO1xuICAgICAgICB9IC8vIE90aGVyd2lzZSwgcHV0IHRoaXMgY29tcG9uZW50J3Mgc3Vic2NyaXB0aW9uIGluc3RhbmNlIGludG8gY29udGV4dCwgc28gdGhhdFxuICAgICAgICAvLyBjb25uZWN0ZWQgZGVzY2VuZGFudHMgd29uJ3QgdXBkYXRlIHVudGlsIGFmdGVyIHRoaXMgY29tcG9uZW50IGlzIGRvbmVcblxuXG4gICAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgY29udGV4dFZhbHVlLCB7XG4gICAgICAgICAgc3Vic2NyaXB0aW9uOiBzdWJzY3JpcHRpb25cbiAgICAgICAgfSk7XG4gICAgICB9LCBbZGlkU3RvcmVDb21lRnJvbVByb3BzLCBjb250ZXh0VmFsdWUsIHN1YnNjcmlwdGlvbl0pOyAvLyBXZSBuZWVkIHRvIGZvcmNlIHRoaXMgd3JhcHBlciBjb21wb25lbnQgdG8gcmUtcmVuZGVyIHdoZW5ldmVyIGEgUmVkdXggc3RvcmUgdXBkYXRlXG4gICAgICAvLyBjYXVzZXMgYSBjaGFuZ2UgdG8gdGhlIGNhbGN1bGF0ZWQgY2hpbGQgY29tcG9uZW50IHByb3BzIChvciB3ZSBjYXVnaHQgYW4gZXJyb3IgaW4gbWFwU3RhdGUpXG5cbiAgICAgIHZhciBfdXNlUmVkdWNlciA9IHVzZVJlZHVjZXIoc3RvcmVTdGF0ZVVwZGF0ZXNSZWR1Y2VyLCBFTVBUWV9BUlJBWSwgaW5pdFN0YXRlVXBkYXRlcyksXG4gICAgICAgICAgX3VzZVJlZHVjZXIkID0gX3VzZVJlZHVjZXJbMF0sXG4gICAgICAgICAgcHJldmlvdXNTdGF0ZVVwZGF0ZVJlc3VsdCA9IF91c2VSZWR1Y2VyJFswXSxcbiAgICAgICAgICBmb3JjZUNvbXBvbmVudFVwZGF0ZURpc3BhdGNoID0gX3VzZVJlZHVjZXJbMV07IC8vIFByb3BhZ2F0ZSBhbnkgbWFwU3RhdGUvbWFwRGlzcGF0Y2ggZXJyb3JzIHVwd2FyZHNcblxuXG4gICAgICBpZiAocHJldmlvdXNTdGF0ZVVwZGF0ZVJlc3VsdCAmJiBwcmV2aW91c1N0YXRlVXBkYXRlUmVzdWx0LmVycm9yKSB7XG4gICAgICAgIHRocm93IHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQuZXJyb3I7XG4gICAgICB9IC8vIFNldCB1cCByZWZzIHRvIGNvb3JkaW5hdGUgdmFsdWVzIGJldHdlZW4gdGhlIHN1YnNjcmlwdGlvbiBlZmZlY3QgYW5kIHRoZSByZW5kZXIgbG9naWNcblxuXG4gICAgICB2YXIgbGFzdENoaWxkUHJvcHMgPSB1c2VSZWYoKTtcbiAgICAgIHZhciBsYXN0V3JhcHBlclByb3BzID0gdXNlUmVmKHdyYXBwZXJQcm9wcyk7XG4gICAgICB2YXIgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSA9IHVzZVJlZigpO1xuICAgICAgdmFyIHJlbmRlcklzU2NoZWR1bGVkID0gdXNlUmVmKGZhbHNlKTtcbiAgICAgIHZhciBhY3R1YWxDaGlsZFByb3BzID0gdXNlUHVyZU9ubHlNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gVHJpY2t5IGxvZ2ljIGhlcmU6XG4gICAgICAgIC8vIC0gVGhpcyByZW5kZXIgbWF5IGhhdmUgYmVlbiB0cmlnZ2VyZWQgYnkgYSBSZWR1eCBzdG9yZSB1cGRhdGUgdGhhdCBwcm9kdWNlZCBuZXcgY2hpbGQgcHJvcHNcbiAgICAgICAgLy8gLSBIb3dldmVyLCB3ZSBtYXkgaGF2ZSBnb3R0ZW4gbmV3IHdyYXBwZXIgcHJvcHMgYWZ0ZXIgdGhhdFxuICAgICAgICAvLyBJZiB3ZSBoYXZlIG5ldyBjaGlsZCBwcm9wcywgYW5kIHRoZSBzYW1lIHdyYXBwZXIgcHJvcHMsIHdlIGtub3cgd2Ugc2hvdWxkIHVzZSB0aGUgbmV3IGNoaWxkIHByb3BzIGFzLWlzLlxuICAgICAgICAvLyBCdXQsIGlmIHdlIGhhdmUgbmV3IHdyYXBwZXIgcHJvcHMsIHRob3NlIG1pZ2h0IGNoYW5nZSB0aGUgY2hpbGQgcHJvcHMsIHNvIHdlIGhhdmUgdG8gcmVjYWxjdWxhdGUgdGhpbmdzLlxuICAgICAgICAvLyBTbywgd2UnbGwgdXNlIHRoZSBjaGlsZCBwcm9wcyBmcm9tIHN0b3JlIHVwZGF0ZSBvbmx5IGlmIHRoZSB3cmFwcGVyIHByb3BzIGFyZSB0aGUgc2FtZSBhcyBsYXN0IHRpbWUuXG4gICAgICAgIGlmIChjaGlsZFByb3BzRnJvbVN0b3JlVXBkYXRlLmN1cnJlbnQgJiYgd3JhcHBlclByb3BzID09PSBsYXN0V3JhcHBlclByb3BzLmN1cnJlbnQpIHtcbiAgICAgICAgICByZXR1cm4gY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZS5jdXJyZW50O1xuICAgICAgICB9IC8vIFRPRE8gV2UncmUgcmVhZGluZyB0aGUgc3RvcmUgZGlyZWN0bHkgaW4gcmVuZGVyKCkgaGVyZS4gQmFkIGlkZWE/XG4gICAgICAgIC8vIFRoaXMgd2lsbCBsaWtlbHkgY2F1c2UgQmFkIFRoaW5ncyAoVE0pIHRvIGhhcHBlbiBpbiBDb25jdXJyZW50IE1vZGUuXG4gICAgICAgIC8vIE5vdGUgdGhhdCB3ZSBkbyB0aGlzIGJlY2F1c2Ugb24gcmVuZGVycyBfbm90XyBjYXVzZWQgYnkgc3RvcmUgdXBkYXRlcywgd2UgbmVlZCB0aGUgbGF0ZXN0IHN0b3JlIHN0YXRlXG4gICAgICAgIC8vIHRvIGRldGVybWluZSB3aGF0IHRoZSBjaGlsZCBwcm9wcyBzaG91bGQgYmUuXG5cblxuICAgICAgICByZXR1cm4gY2hpbGRQcm9wc1NlbGVjdG9yKHN0b3JlLmdldFN0YXRlKCksIHdyYXBwZXJQcm9wcyk7XG4gICAgICB9LCBbc3RvcmUsIHByZXZpb3VzU3RhdGVVcGRhdGVSZXN1bHQsIHdyYXBwZXJQcm9wc10pOyAvLyBXZSBuZWVkIHRoaXMgdG8gZXhlY3V0ZSBzeW5jaHJvbm91c2x5IGV2ZXJ5IHRpbWUgd2UgcmUtcmVuZGVyLiBIb3dldmVyLCBSZWFjdCB3YXJuc1xuICAgICAgLy8gYWJvdXQgdXNlTGF5b3V0RWZmZWN0IGluIFNTUiwgc28gd2UgdHJ5IHRvIGRldGVjdCBlbnZpcm9ubWVudCBhbmQgZmFsbCBiYWNrIHRvXG4gICAgICAvLyBqdXN0IHVzZUVmZmVjdCBpbnN0ZWFkIHRvIGF2b2lkIHRoZSB3YXJuaW5nLCBzaW5jZSBuZWl0aGVyIHdpbGwgcnVuIGFueXdheS5cblxuICAgICAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdFdpdGhBcmdzKGNhcHR1cmVXcmFwcGVyUHJvcHMsIFtsYXN0V3JhcHBlclByb3BzLCBsYXN0Q2hpbGRQcm9wcywgcmVuZGVySXNTY2hlZHVsZWQsIHdyYXBwZXJQcm9wcywgYWN0dWFsQ2hpbGRQcm9wcywgY2hpbGRQcm9wc0Zyb21TdG9yZVVwZGF0ZSwgbm90aWZ5TmVzdGVkU3Vic10pOyAvLyBPdXIgcmUtc3Vic2NyaWJlIGxvZ2ljIG9ubHkgcnVucyB3aGVuIHRoZSBzdG9yZS9zdWJzY3JpcHRpb24gc2V0dXAgY2hhbmdlc1xuXG4gICAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0V2l0aEFyZ3Moc3Vic2NyaWJlVXBkYXRlcywgW3Nob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcywgc3RvcmUsIHN1YnNjcmlwdGlvbiwgY2hpbGRQcm9wc1NlbGVjdG9yLCBsYXN0V3JhcHBlclByb3BzLCBsYXN0Q2hpbGRQcm9wcywgcmVuZGVySXNTY2hlZHVsZWQsIGNoaWxkUHJvcHNGcm9tU3RvcmVVcGRhdGUsIG5vdGlmeU5lc3RlZFN1YnMsIGZvcmNlQ29tcG9uZW50VXBkYXRlRGlzcGF0Y2hdLCBbc3RvcmUsIHN1YnNjcmlwdGlvbiwgY2hpbGRQcm9wc1NlbGVjdG9yXSk7IC8vIE5vdyB0aGF0IGFsbCB0aGF0J3MgZG9uZSwgd2UgY2FuIGZpbmFsbHkgdHJ5IHRvIGFjdHVhbGx5IHJlbmRlciB0aGUgY2hpbGQgY29tcG9uZW50LlxuICAgICAgLy8gV2UgbWVtb2l6ZSB0aGUgZWxlbWVudHMgZm9yIHRoZSByZW5kZXJlZCBjaGlsZCBjb21wb25lbnQgYXMgYW4gb3B0aW1pemF0aW9uLlxuXG4gICAgICB2YXIgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIF9leHRlbmRzKHt9LCBhY3R1YWxDaGlsZFByb3BzLCB7XG4gICAgICAgICAgcmVmOiByZWFjdFJlZHV4Rm9yd2FyZGVkUmVmXG4gICAgICAgIH0pKTtcbiAgICAgIH0sIFtyZWFjdFJlZHV4Rm9yd2FyZGVkUmVmLCBXcmFwcGVkQ29tcG9uZW50LCBhY3R1YWxDaGlsZFByb3BzXSk7IC8vIElmIFJlYWN0IHNlZXMgdGhlIGV4YWN0IHNhbWUgZWxlbWVudCByZWZlcmVuY2UgYXMgbGFzdCB0aW1lLCBpdCBiYWlscyBvdXQgb2YgcmUtcmVuZGVyaW5nXG4gICAgICAvLyB0aGF0IGNoaWxkLCBzYW1lIGFzIGlmIGl0IHdhcyB3cmFwcGVkIGluIFJlYWN0Lm1lbW8oKSBvciByZXR1cm5lZCBmYWxzZSBmcm9tIHNob3VsZENvbXBvbmVudFVwZGF0ZS5cblxuICAgICAgdmFyIHJlbmRlcmVkQ2hpbGQgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcykge1xuICAgICAgICAgIC8vIElmIHRoaXMgY29tcG9uZW50IGlzIHN1YnNjcmliZWQgdG8gc3RvcmUgdXBkYXRlcywgd2UgbmVlZCB0byBwYXNzIGl0cyBvd25cbiAgICAgICAgICAvLyBzdWJzY3JpcHRpb24gaW5zdGFuY2UgZG93biB0byBvdXIgZGVzY2VuZGFudHMuIFRoYXQgbWVhbnMgcmVuZGVyaW5nIHRoZSBzYW1lXG4gICAgICAgICAgLy8gQ29udGV4dCBpbnN0YW5jZSwgYW5kIHB1dHRpbmcgYSBkaWZmZXJlbnQgdmFsdWUgaW50byB0aGUgY29udGV4dC5cbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDb250ZXh0VG9Vc2UuUHJvdmlkZXIsIHtcbiAgICAgICAgICAgIHZhbHVlOiBvdmVycmlkZGVuQ29udGV4dFZhbHVlXG4gICAgICAgICAgfSwgcmVuZGVyZWRXcmFwcGVkQ29tcG9uZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZW5kZXJlZFdyYXBwZWRDb21wb25lbnQ7XG4gICAgICB9LCBbQ29udGV4dFRvVXNlLCByZW5kZXJlZFdyYXBwZWRDb21wb25lbnQsIG92ZXJyaWRkZW5Db250ZXh0VmFsdWVdKTtcbiAgICAgIHJldHVybiByZW5kZXJlZENoaWxkO1xuICAgIH0gLy8gSWYgd2UncmUgaW4gXCJwdXJlXCIgbW9kZSwgZW5zdXJlIG91ciB3cmFwcGVyIGNvbXBvbmVudCBvbmx5IHJlLXJlbmRlcnMgd2hlbiBpbmNvbWluZyBwcm9wcyBoYXZlIGNoYW5nZWQuXG5cblxuICAgIHZhciBDb25uZWN0ID0gcHVyZSA/IFJlYWN0Lm1lbW8oQ29ubmVjdEZ1bmN0aW9uKSA6IENvbm5lY3RGdW5jdGlvbjtcbiAgICBDb25uZWN0LldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgIENvbm5lY3QuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcblxuICAgIGlmIChmb3J3YXJkUmVmKSB7XG4gICAgICB2YXIgZm9yd2FyZGVkID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiBmb3J3YXJkQ29ubmVjdFJlZihwcm9wcywgcmVmKSB7XG4gICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENvbm5lY3QsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgICAgIHJlYWN0UmVkdXhGb3J3YXJkZWRSZWY6IHJlZlxuICAgICAgICB9KSk7XG4gICAgICB9KTtcbiAgICAgIGZvcndhcmRlZC5kaXNwbGF5TmFtZSA9IGRpc3BsYXlOYW1lO1xuICAgICAgZm9yd2FyZGVkLldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgICAgcmV0dXJuIGhvaXN0U3RhdGljcyhmb3J3YXJkZWQsIFdyYXBwZWRDb21wb25lbnQpO1xuICAgIH1cblxuICAgIHJldHVybiBob2lzdFN0YXRpY3MoQ29ubmVjdCwgV3JhcHBlZENvbXBvbmVudCk7XG4gIH07XG59IiwiZnVuY3Rpb24gaXMoeCwgeSkge1xuICBpZiAoeCA9PT0geSkge1xuICAgIHJldHVybiB4ICE9PSAwIHx8IHkgIT09IDAgfHwgMSAvIHggPT09IDEgLyB5O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB4ICE9PSB4ICYmIHkgIT09IHk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn0iLCJpbXBvcnQgJCRvYnNlcnZhYmxlIGZyb20gJ3N5bWJvbC1vYnNlcnZhYmxlJztcblxuLyoqXG4gKiBUaGVzZSBhcmUgcHJpdmF0ZSBhY3Rpb24gdHlwZXMgcmVzZXJ2ZWQgYnkgUmVkdXguXG4gKiBGb3IgYW55IHVua25vd24gYWN0aW9ucywgeW91IG11c3QgcmV0dXJuIHRoZSBjdXJyZW50IHN0YXRlLlxuICogSWYgdGhlIGN1cnJlbnQgc3RhdGUgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuXG4gKiBEbyBub3QgcmVmZXJlbmNlIHRoZXNlIGFjdGlvbiB0eXBlcyBkaXJlY3RseSBpbiB5b3VyIGNvZGUuXG4gKi9cbnZhciByYW5kb21TdHJpbmcgPSBmdW5jdGlvbiByYW5kb21TdHJpbmcoKSB7XG4gIHJldHVybiBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKTtcbn07XG5cbnZhciBBY3Rpb25UeXBlcyA9IHtcbiAgSU5JVDogXCJAQHJlZHV4L0lOSVRcIiArIHJhbmRvbVN0cmluZygpLFxuICBSRVBMQUNFOiBcIkBAcmVkdXgvUkVQTEFDRVwiICsgcmFuZG9tU3RyaW5nKCksXG4gIFBST0JFX1VOS05PV05fQUNUSU9OOiBmdW5jdGlvbiBQUk9CRV9VTktOT1dOX0FDVElPTigpIHtcbiAgICByZXR1cm4gXCJAQHJlZHV4L1BST0JFX1VOS05PV05fQUNUSU9OXCIgKyByYW5kb21TdHJpbmcoKTtcbiAgfVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge2FueX0gb2JqIFRoZSBvYmplY3QgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBUcnVlIGlmIHRoZSBhcmd1bWVudCBhcHBlYXJzIHRvIGJlIGEgcGxhaW4gb2JqZWN0LlxuICovXG5mdW5jdGlvbiBpc1BsYWluT2JqZWN0KG9iaikge1xuICBpZiAodHlwZW9mIG9iaiAhPT0gJ29iamVjdCcgfHwgb2JqID09PSBudWxsKSByZXR1cm4gZmFsc2U7XG4gIHZhciBwcm90byA9IG9iajtcblxuICB3aGlsZSAoT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKSAhPT0gbnVsbCkge1xuICAgIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob2JqKSA9PT0gcHJvdG87XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIFJlZHV4IHN0b3JlIHRoYXQgaG9sZHMgdGhlIHN0YXRlIHRyZWUuXG4gKiBUaGUgb25seSB3YXkgdG8gY2hhbmdlIHRoZSBkYXRhIGluIHRoZSBzdG9yZSBpcyB0byBjYWxsIGBkaXNwYXRjaCgpYCBvbiBpdC5cbiAqXG4gKiBUaGVyZSBzaG91bGQgb25seSBiZSBhIHNpbmdsZSBzdG9yZSBpbiB5b3VyIGFwcC4gVG8gc3BlY2lmeSBob3cgZGlmZmVyZW50XG4gKiBwYXJ0cyBvZiB0aGUgc3RhdGUgdHJlZSByZXNwb25kIHRvIGFjdGlvbnMsIHlvdSBtYXkgY29tYmluZSBzZXZlcmFsIHJlZHVjZXJzXG4gKiBpbnRvIGEgc2luZ2xlIHJlZHVjZXIgZnVuY3Rpb24gYnkgdXNpbmcgYGNvbWJpbmVSZWR1Y2Vyc2AuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcmVkdWNlciBBIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUgbmV4dCBzdGF0ZSB0cmVlLCBnaXZlblxuICogdGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBhbmQgdGhlIGFjdGlvbiB0byBoYW5kbGUuXG4gKlxuICogQHBhcmFtIHthbnl9IFtwcmVsb2FkZWRTdGF0ZV0gVGhlIGluaXRpYWwgc3RhdGUuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBoeWRyYXRlIHRoZSBzdGF0ZSBmcm9tIHRoZSBzZXJ2ZXIgaW4gdW5pdmVyc2FsIGFwcHMsIG9yIHRvIHJlc3RvcmUgYVxuICogcHJldmlvdXNseSBzZXJpYWxpemVkIHVzZXIgc2Vzc2lvbi5cbiAqIElmIHlvdSB1c2UgYGNvbWJpbmVSZWR1Y2Vyc2AgdG8gcHJvZHVjZSB0aGUgcm9vdCByZWR1Y2VyIGZ1bmN0aW9uLCB0aGlzIG11c3QgYmVcbiAqIGFuIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlIGFzIGBjb21iaW5lUmVkdWNlcnNgIGtleXMuXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2VuaGFuY2VyXSBUaGUgc3RvcmUgZW5oYW5jZXIuIFlvdSBtYXkgb3B0aW9uYWxseSBzcGVjaWZ5IGl0XG4gKiB0byBlbmhhbmNlIHRoZSBzdG9yZSB3aXRoIHRoaXJkLXBhcnR5IGNhcGFiaWxpdGllcyBzdWNoIGFzIG1pZGRsZXdhcmUsXG4gKiB0aW1lIHRyYXZlbCwgcGVyc2lzdGVuY2UsIGV0Yy4gVGhlIG9ubHkgc3RvcmUgZW5oYW5jZXIgdGhhdCBzaGlwcyB3aXRoIFJlZHV4XG4gKiBpcyBgYXBwbHlNaWRkbGV3YXJlKClgLlxuICpcbiAqIEByZXR1cm5zIHtTdG9yZX0gQSBSZWR1eCBzdG9yZSB0aGF0IGxldHMgeW91IHJlYWQgdGhlIHN0YXRlLCBkaXNwYXRjaCBhY3Rpb25zXG4gKiBhbmQgc3Vic2NyaWJlIHRvIGNoYW5nZXMuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlU3RvcmUocmVkdWNlciwgcHJlbG9hZGVkU3RhdGUsIGVuaGFuY2VyKSB7XG4gIHZhciBfcmVmMjtcblxuICBpZiAodHlwZW9mIHByZWxvYWRlZFN0YXRlID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBlbmhhbmNlciA9PT0gJ2Z1bmN0aW9uJyB8fCB0eXBlb2YgZW5oYW5jZXIgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGFyZ3VtZW50c1szXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignSXQgbG9va3MgbGlrZSB5b3UgYXJlIHBhc3Npbmcgc2V2ZXJhbCBzdG9yZSBlbmhhbmNlcnMgdG8gJyArICdjcmVhdGVTdG9yZSgpLiBUaGlzIGlzIG5vdCBzdXBwb3J0ZWQuIEluc3RlYWQsIGNvbXBvc2UgdGhlbSAnICsgJ3RvZ2V0aGVyIHRvIGEgc2luZ2xlIGZ1bmN0aW9uLicpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBwcmVsb2FkZWRTdGF0ZSA9PT0gJ2Z1bmN0aW9uJyAmJiB0eXBlb2YgZW5oYW5jZXIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgZW5oYW5jZXIgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgICBwcmVsb2FkZWRTdGF0ZSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgaWYgKHR5cGVvZiBlbmhhbmNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgZW5oYW5jZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZW5oYW5jZXIoY3JlYXRlU3RvcmUpKHJlZHVjZXIsIHByZWxvYWRlZFN0YXRlKTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgcmVkdWNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIHJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgfVxuXG4gIHZhciBjdXJyZW50UmVkdWNlciA9IHJlZHVjZXI7XG4gIHZhciBjdXJyZW50U3RhdGUgPSBwcmVsb2FkZWRTdGF0ZTtcbiAgdmFyIGN1cnJlbnRMaXN0ZW5lcnMgPSBbXTtcbiAgdmFyIG5leHRMaXN0ZW5lcnMgPSBjdXJyZW50TGlzdGVuZXJzO1xuICB2YXIgaXNEaXNwYXRjaGluZyA9IGZhbHNlO1xuICAvKipcbiAgICogVGhpcyBtYWtlcyBhIHNoYWxsb3cgY29weSBvZiBjdXJyZW50TGlzdGVuZXJzIHNvIHdlIGNhbiB1c2VcbiAgICogbmV4dExpc3RlbmVycyBhcyBhIHRlbXBvcmFyeSBsaXN0IHdoaWxlIGRpc3BhdGNoaW5nLlxuICAgKlxuICAgKiBUaGlzIHByZXZlbnRzIGFueSBidWdzIGFyb3VuZCBjb25zdW1lcnMgY2FsbGluZ1xuICAgKiBzdWJzY3JpYmUvdW5zdWJzY3JpYmUgaW4gdGhlIG1pZGRsZSBvZiBhIGRpc3BhdGNoLlxuICAgKi9cblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuICAvKipcbiAgICogUmVhZHMgdGhlIHN0YXRlIHRyZWUgbWFuYWdlZCBieSB0aGUgc3RvcmUuXG4gICAqXG4gICAqIEByZXR1cm5zIHthbnl9IFRoZSBjdXJyZW50IHN0YXRlIHRyZWUgb2YgeW91ciBhcHBsaWNhdGlvbi5cbiAgICovXG5cblxuICBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLmdldFN0YXRlKCkgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ1RoZSByZWR1Y2VyIGhhcyBhbHJlYWR5IHJlY2VpdmVkIHRoZSBzdGF0ZSBhcyBhbiBhcmd1bWVudC4gJyArICdQYXNzIGl0IGRvd24gZnJvbSB0aGUgdG9wIHJlZHVjZXIgaW5zdGVhZCBvZiByZWFkaW5nIGl0IGZyb20gdGhlIHN0b3JlLicpO1xuICAgIH1cblxuICAgIHJldHVybiBjdXJyZW50U3RhdGU7XG4gIH1cbiAgLyoqXG4gICAqIEFkZHMgYSBjaGFuZ2UgbGlzdGVuZXIuIEl0IHdpbGwgYmUgY2FsbGVkIGFueSB0aW1lIGFuIGFjdGlvbiBpcyBkaXNwYXRjaGVkLFxuICAgKiBhbmQgc29tZSBwYXJ0IG9mIHRoZSBzdGF0ZSB0cmVlIG1heSBwb3RlbnRpYWxseSBoYXZlIGNoYW5nZWQuIFlvdSBtYXkgdGhlblxuICAgKiBjYWxsIGBnZXRTdGF0ZSgpYCB0byByZWFkIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgaW5zaWRlIHRoZSBjYWxsYmFjay5cbiAgICpcbiAgICogWW91IG1heSBjYWxsIGBkaXNwYXRjaCgpYCBmcm9tIGEgY2hhbmdlIGxpc3RlbmVyLCB3aXRoIHRoZSBmb2xsb3dpbmdcbiAgICogY2F2ZWF0czpcbiAgICpcbiAgICogMS4gVGhlIHN1YnNjcmlwdGlvbnMgYXJlIHNuYXBzaG90dGVkIGp1c3QgYmVmb3JlIGV2ZXJ5IGBkaXNwYXRjaCgpYCBjYWxsLlxuICAgKiBJZiB5b3Ugc3Vic2NyaWJlIG9yIHVuc3Vic2NyaWJlIHdoaWxlIHRoZSBsaXN0ZW5lcnMgYXJlIGJlaW5nIGludm9rZWQsIHRoaXNcbiAgICogd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IG9uIHRoZSBgZGlzcGF0Y2goKWAgdGhhdCBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuXG4gICAqIEhvd2V2ZXIsIHRoZSBuZXh0IGBkaXNwYXRjaCgpYCBjYWxsLCB3aGV0aGVyIG5lc3RlZCBvciBub3QsIHdpbGwgdXNlIGEgbW9yZVxuICAgKiByZWNlbnQgc25hcHNob3Qgb2YgdGhlIHN1YnNjcmlwdGlvbiBsaXN0LlxuICAgKlxuICAgKiAyLiBUaGUgbGlzdGVuZXIgc2hvdWxkIG5vdCBleHBlY3QgdG8gc2VlIGFsbCBzdGF0ZSBjaGFuZ2VzLCBhcyB0aGUgc3RhdGVcbiAgICogbWlnaHQgaGF2ZSBiZWVuIHVwZGF0ZWQgbXVsdGlwbGUgdGltZXMgZHVyaW5nIGEgbmVzdGVkIGBkaXNwYXRjaCgpYCBiZWZvcmVcbiAgICogdGhlIGxpc3RlbmVyIGlzIGNhbGxlZC4gSXQgaXMsIGhvd2V2ZXIsIGd1YXJhbnRlZWQgdGhhdCBhbGwgc3Vic2NyaWJlcnNcbiAgICogcmVnaXN0ZXJlZCBiZWZvcmUgdGhlIGBkaXNwYXRjaCgpYCBzdGFydGVkIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlIGxhdGVzdFxuICAgKiBzdGF0ZSBieSB0aGUgdGltZSBpdCBleGl0cy5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgQSBjYWxsYmFjayB0byBiZSBpbnZva2VkIG9uIGV2ZXJ5IGRpc3BhdGNoLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoaXMgY2hhbmdlIGxpc3RlbmVyLlxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGxpc3RlbmVyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5zdWJzY3JpYmUoKSB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnSWYgeW91IHdvdWxkIGxpa2UgdG8gYmUgbm90aWZpZWQgYWZ0ZXIgdGhlIHN0b3JlIGhhcyBiZWVuIHVwZGF0ZWQsIHN1YnNjcmliZSBmcm9tIGEgJyArICdjb21wb25lbnQgYW5kIGludm9rZSBzdG9yZS5nZXRTdGF0ZSgpIGluIHRoZSBjYWxsYmFjayB0byBhY2Nlc3MgdGhlIGxhdGVzdCBzdGF0ZS4gJyArICdTZWUgaHR0cHM6Ly9yZWR1eC5qcy5vcmcvYXBpLXJlZmVyZW5jZS9zdG9yZSNzdWJzY3JpYmVsaXN0ZW5lciBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgIH1cblxuICAgIHZhciBpc1N1YnNjcmliZWQgPSB0cnVlO1xuICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICBuZXh0TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIHJldHVybiBmdW5jdGlvbiB1bnN1YnNjcmliZSgpIHtcbiAgICAgIGlmICghaXNTdWJzY3JpYmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCB1bnN1YnNjcmliZSBmcm9tIGEgc3RvcmUgbGlzdGVuZXIgd2hpbGUgdGhlIHJlZHVjZXIgaXMgZXhlY3V0aW5nLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGktcmVmZXJlbmNlL3N0b3JlI3N1YnNjcmliZWxpc3RlbmVyIGZvciBtb3JlIGRldGFpbHMuJyk7XG4gICAgICB9XG5cbiAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuICAgICAgZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpO1xuICAgICAgdmFyIGluZGV4ID0gbmV4dExpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICAgIG5leHRMaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIGN1cnJlbnRMaXN0ZW5lcnMgPSBudWxsO1xuICAgIH07XG4gIH1cbiAgLyoqXG4gICAqIERpc3BhdGNoZXMgYW4gYWN0aW9uLiBJdCBpcyB0aGUgb25seSB3YXkgdG8gdHJpZ2dlciBhIHN0YXRlIGNoYW5nZS5cbiAgICpcbiAgICogVGhlIGByZWR1Y2VyYCBmdW5jdGlvbiwgdXNlZCB0byBjcmVhdGUgdGhlIHN0b3JlLCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZVxuICAgKiBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBnaXZlbiBgYWN0aW9uYC4gSXRzIHJldHVybiB2YWx1ZSB3aWxsXG4gICAqIGJlIGNvbnNpZGVyZWQgdGhlICoqbmV4dCoqIHN0YXRlIG9mIHRoZSB0cmVlLCBhbmQgdGhlIGNoYW5nZSBsaXN0ZW5lcnNcbiAgICogd2lsbCBiZSBub3RpZmllZC5cbiAgICpcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb25seSBzdXBwb3J0cyBwbGFpbiBvYmplY3QgYWN0aW9ucy4gSWYgeW91IHdhbnQgdG9cbiAgICogZGlzcGF0Y2ggYSBQcm9taXNlLCBhbiBPYnNlcnZhYmxlLCBhIHRodW5rLCBvciBzb21ldGhpbmcgZWxzZSwgeW91IG5lZWQgdG9cbiAgICogd3JhcCB5b3VyIHN0b3JlIGNyZWF0aW5nIGZ1bmN0aW9uIGludG8gdGhlIGNvcnJlc3BvbmRpbmcgbWlkZGxld2FyZS4gRm9yXG4gICAqIGV4YW1wbGUsIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGByZWR1eC10aHVua2AgcGFja2FnZS4gRXZlbiB0aGVcbiAgICogbWlkZGxld2FyZSB3aWxsIGV2ZW50dWFsbHkgZGlzcGF0Y2ggcGxhaW4gb2JqZWN0IGFjdGlvbnMgdXNpbmcgdGhpcyBtZXRob2QuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhY3Rpb24gQSBwbGFpbiBvYmplY3QgcmVwcmVzZW50aW5nIOKAnHdoYXQgY2hhbmdlZOKAnS4gSXQgaXNcbiAgICogYSBnb29kIGlkZWEgdG8ga2VlcCBhY3Rpb25zIHNlcmlhbGl6YWJsZSBzbyB5b3UgY2FuIHJlY29yZCBhbmQgcmVwbGF5IHVzZXJcbiAgICogc2Vzc2lvbnMsIG9yIHVzZSB0aGUgdGltZSB0cmF2ZWxsaW5nIGByZWR1eC1kZXZ0b29sc2AuIEFuIGFjdGlvbiBtdXN0IGhhdmVcbiAgICogYSBgdHlwZWAgcHJvcGVydHkgd2hpY2ggbWF5IG5vdCBiZSBgdW5kZWZpbmVkYC4gSXQgaXMgYSBnb29kIGlkZWEgdG8gdXNlXG4gICAqIHN0cmluZyBjb25zdGFudHMgZm9yIGFjdGlvbiB0eXBlcy5cbiAgICpcbiAgICogQHJldHVybnMge09iamVjdH0gRm9yIGNvbnZlbmllbmNlLCB0aGUgc2FtZSBhY3Rpb24gb2JqZWN0IHlvdSBkaXNwYXRjaGVkLlxuICAgKlxuICAgKiBOb3RlIHRoYXQsIGlmIHlvdSB1c2UgYSBjdXN0b20gbWlkZGxld2FyZSwgaXQgbWF5IHdyYXAgYGRpc3BhdGNoKClgIHRvXG4gICAqIHJldHVybiBzb21ldGhpbmcgZWxzZSAoZm9yIGV4YW1wbGUsIGEgUHJvbWlzZSB5b3UgY2FuIGF3YWl0KS5cbiAgICovXG5cblxuICBmdW5jdGlvbiBkaXNwYXRjaChhY3Rpb24pIHtcbiAgICBpZiAoIWlzUGxhaW5PYmplY3QoYWN0aW9uKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG11c3QgYmUgcGxhaW4gb2JqZWN0cy4gJyArICdVc2UgY3VzdG9tIG1pZGRsZXdhcmUgZm9yIGFzeW5jIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBhY3Rpb24udHlwZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWN0aW9ucyBtYXkgbm90IGhhdmUgYW4gdW5kZWZpbmVkIFwidHlwZVwiIHByb3BlcnR5LiAnICsgJ0hhdmUgeW91IG1pc3NwZWxsZWQgYSBjb25zdGFudD8nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1Y2VycyBtYXkgbm90IGRpc3BhdGNoIGFjdGlvbnMuJyk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSB0cnVlO1xuICAgICAgY3VycmVudFN0YXRlID0gY3VycmVudFJlZHVjZXIoY3VycmVudFN0YXRlLCBhY3Rpb24pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBpc0Rpc3BhdGNoaW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnMgPSBuZXh0TGlzdGVuZXJzO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXTtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjdGlvbjtcbiAgfVxuICAvKipcbiAgICogUmVwbGFjZXMgdGhlIHJlZHVjZXIgY3VycmVudGx5IHVzZWQgYnkgdGhlIHN0b3JlIHRvIGNhbGN1bGF0ZSB0aGUgc3RhdGUuXG4gICAqXG4gICAqIFlvdSBtaWdodCBuZWVkIHRoaXMgaWYgeW91ciBhcHAgaW1wbGVtZW50cyBjb2RlIHNwbGl0dGluZyBhbmQgeW91IHdhbnQgdG9cbiAgICogbG9hZCBzb21lIG9mIHRoZSByZWR1Y2VycyBkeW5hbWljYWxseS4gWW91IG1pZ2h0IGFsc28gbmVlZCB0aGlzIGlmIHlvdVxuICAgKiBpbXBsZW1lbnQgYSBob3QgcmVsb2FkaW5nIG1lY2hhbmlzbSBmb3IgUmVkdXguXG4gICAqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IG5leHRSZWR1Y2VyIFRoZSByZWR1Y2VyIGZvciB0aGUgc3RvcmUgdG8gdXNlIGluc3RlYWQuXG4gICAqIEByZXR1cm5zIHt2b2lkfVxuICAgKi9cblxuXG4gIGZ1bmN0aW9uIHJlcGxhY2VSZWR1Y2VyKG5leHRSZWR1Y2VyKSB7XG4gICAgaWYgKHR5cGVvZiBuZXh0UmVkdWNlciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgbmV4dFJlZHVjZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBjdXJyZW50UmVkdWNlciA9IG5leHRSZWR1Y2VyOyAvLyBUaGlzIGFjdGlvbiBoYXMgYSBzaW1pbGlhciBlZmZlY3QgdG8gQWN0aW9uVHlwZXMuSU5JVC5cbiAgICAvLyBBbnkgcmVkdWNlcnMgdGhhdCBleGlzdGVkIGluIGJvdGggdGhlIG5ldyBhbmQgb2xkIHJvb3RSZWR1Y2VyXG4gICAgLy8gd2lsbCByZWNlaXZlIHRoZSBwcmV2aW91cyBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgICAvLyB0aGUgbmV3IHN0YXRlIHRyZWUgd2l0aCBhbnkgcmVsZXZhbnQgZGF0YSBmcm9tIHRoZSBvbGQgb25lLlxuXG4gICAgZGlzcGF0Y2goe1xuICAgICAgdHlwZTogQWN0aW9uVHlwZXMuUkVQTEFDRVxuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBJbnRlcm9wZXJhYmlsaXR5IHBvaW50IGZvciBvYnNlcnZhYmxlL3JlYWN0aXZlIGxpYnJhcmllcy5cbiAgICogQHJldHVybnMge29ic2VydmFibGV9IEEgbWluaW1hbCBvYnNlcnZhYmxlIG9mIHN0YXRlIGNoYW5nZXMuXG4gICAqIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWUgdGhlIG9ic2VydmFibGUgcHJvcG9zYWw6XG4gICAqIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLW9ic2VydmFibGVcbiAgICovXG5cblxuICBmdW5jdGlvbiBvYnNlcnZhYmxlKCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgdmFyIG91dGVyU3Vic2NyaWJlID0gc3Vic2NyaWJlO1xuICAgIHJldHVybiBfcmVmID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgbWluaW1hbCBvYnNlcnZhYmxlIHN1YnNjcmlwdGlvbiBtZXRob2QuXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JzZXJ2ZXIgQW55IG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIGFzIGFuIG9ic2VydmVyLlxuICAgICAgICogVGhlIG9ic2VydmVyIG9iamVjdCBzaG91bGQgaGF2ZSBhIGBuZXh0YCBtZXRob2QuXG4gICAgICAgKiBAcmV0dXJucyB7c3Vic2NyaXB0aW9ufSBBbiBvYmplY3Qgd2l0aCBhbiBgdW5zdWJzY3JpYmVgIG1ldGhvZCB0aGF0IGNhblxuICAgICAgICogYmUgdXNlZCB0byB1bnN1YnNjcmliZSB0aGUgb2JzZXJ2YWJsZSBmcm9tIHRoZSBzdG9yZSwgYW5kIHByZXZlbnQgZnVydGhlclxuICAgICAgICogZW1pc3Npb24gb2YgdmFsdWVzIGZyb20gdGhlIG9ic2VydmFibGUuXG4gICAgICAgKi9cbiAgICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKG9ic2VydmVyKSB7XG4gICAgICAgIGlmICh0eXBlb2Ygb2JzZXJ2ZXIgIT09ICdvYmplY3QnIHx8IG9ic2VydmVyID09PSBudWxsKSB7XG4gICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgdGhlIG9ic2VydmVyIHRvIGJlIGFuIG9iamVjdC4nKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIG9ic2VydmVTdGF0ZSgpIHtcbiAgICAgICAgICBpZiAob2JzZXJ2ZXIubmV4dCkge1xuICAgICAgICAgICAgb2JzZXJ2ZXIubmV4dChnZXRTdGF0ZSgpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBvYnNlcnZlU3RhdGUoKTtcbiAgICAgICAgdmFyIHVuc3Vic2NyaWJlID0gb3V0ZXJTdWJzY3JpYmUob2JzZXJ2ZVN0YXRlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB1bnN1YnNjcmliZTogdW5zdWJzY3JpYmVcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9LCBfcmVmWyQkb2JzZXJ2YWJsZV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9LCBfcmVmO1xuICB9IC8vIFdoZW4gYSBzdG9yZSBpcyBjcmVhdGVkLCBhbiBcIklOSVRcIiBhY3Rpb24gaXMgZGlzcGF0Y2hlZCBzbyB0aGF0IGV2ZXJ5XG4gIC8vIHJlZHVjZXIgcmV0dXJucyB0aGVpciBpbml0aWFsIHN0YXRlLiBUaGlzIGVmZmVjdGl2ZWx5IHBvcHVsYXRlc1xuICAvLyB0aGUgaW5pdGlhbCBzdGF0ZSB0cmVlLlxuXG5cbiAgZGlzcGF0Y2goe1xuICAgIHR5cGU6IEFjdGlvblR5cGVzLklOSVRcbiAgfSk7XG4gIHJldHVybiBfcmVmMiA9IHtcbiAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmUsXG4gICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxuICAgIHJlcGxhY2VSZWR1Y2VyOiByZXBsYWNlUmVkdWNlclxuICB9LCBfcmVmMlskJG9ic2VydmFibGVdID0gb2JzZXJ2YWJsZSwgX3JlZjI7XG59XG5cbi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cblxuXG4gIHRyeSB7XG4gICAgLy8gVGhpcyBlcnJvciB3YXMgdGhyb3duIGFzIGEgY29udmVuaWVuY2Ugc28gdGhhdCBpZiB5b3UgZW5hYmxlXG4gICAgLy8gXCJicmVhayBvbiBhbGwgZXhjZXB0aW9uc1wiIGluIHlvdXIgY29uc29sZSxcbiAgICAvLyBpdCB3b3VsZCBwYXVzZSB0aGUgZXhlY3V0aW9uIGF0IHRoaXMgbGluZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gIH0gY2F0Y2ggKGUpIHt9IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tZW1wdHlcblxufVxuXG5mdW5jdGlvbiBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShrZXksIGFjdGlvbikge1xuICB2YXIgYWN0aW9uVHlwZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZTtcbiAgdmFyIGFjdGlvbkRlc2NyaXB0aW9uID0gYWN0aW9uVHlwZSAmJiBcImFjdGlvbiBcXFwiXCIgKyBTdHJpbmcoYWN0aW9uVHlwZSkgKyBcIlxcXCJcIiB8fCAnYW4gYWN0aW9uJztcbiAgcmV0dXJuIFwiR2l2ZW4gXCIgKyBhY3Rpb25EZXNjcmlwdGlvbiArIFwiLCByZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQuIFwiICsgXCJUbyBpZ25vcmUgYW4gYWN0aW9uLCB5b3UgbXVzdCBleHBsaWNpdGx5IHJldHVybiB0aGUgcHJldmlvdXMgc3RhdGUuIFwiICsgXCJJZiB5b3Ugd2FudCB0aGlzIHJlZHVjZXIgdG8gaG9sZCBubyB2YWx1ZSwgeW91IGNhbiByZXR1cm4gbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC5cIjtcbn1cblxuZnVuY3Rpb24gZ2V0VW5leHBlY3RlZFN0YXRlU2hhcGVXYXJuaW5nTWVzc2FnZShpbnB1dFN0YXRlLCByZWR1Y2VycywgYWN0aW9uLCB1bmV4cGVjdGVkS2V5Q2FjaGUpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgYXJndW1lbnROYW1lID0gYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5JTklUID8gJ3ByZWxvYWRlZFN0YXRlIGFyZ3VtZW50IHBhc3NlZCB0byBjcmVhdGVTdG9yZScgOiAncHJldmlvdXMgc3RhdGUgcmVjZWl2ZWQgYnkgdGhlIHJlZHVjZXInO1xuXG4gIGlmIChyZWR1Y2VyS2V5cy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gJ1N0b3JlIGRvZXMgbm90IGhhdmUgYSB2YWxpZCByZWR1Y2VyLiBNYWtlIHN1cmUgdGhlIGFyZ3VtZW50IHBhc3NlZCAnICsgJ3RvIGNvbWJpbmVSZWR1Y2VycyBpcyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSByZWR1Y2Vycy4nO1xuICB9XG5cbiAgaWYgKCFpc1BsYWluT2JqZWN0KGlucHV0U3RhdGUpKSB7XG4gICAgcmV0dXJuIFwiVGhlIFwiICsgYXJndW1lbnROYW1lICsgXCIgaGFzIHVuZXhwZWN0ZWQgdHlwZSBvZiBcXFwiXCIgKyB7fS50b1N0cmluZy5jYWxsKGlucHV0U3RhdGUpLm1hdGNoKC9cXHMoW2EtenxBLVpdKykvKVsxXSArIFwiXFxcIi4gRXhwZWN0ZWQgYXJndW1lbnQgdG8gYmUgYW4gb2JqZWN0IHdpdGggdGhlIGZvbGxvd2luZyBcIiArIChcImtleXM6IFxcXCJcIiArIHJlZHVjZXJLZXlzLmpvaW4oJ1wiLCBcIicpICsgXCJcXFwiXCIpO1xuICB9XG5cbiAgdmFyIHVuZXhwZWN0ZWRLZXlzID0gT2JqZWN0LmtleXMoaW5wdXRTdGF0ZSkuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gIXJlZHVjZXJzLmhhc093blByb3BlcnR5KGtleSkgJiYgIXVuZXhwZWN0ZWRLZXlDYWNoZVtrZXldO1xuICB9KTtcbiAgdW5leHBlY3RlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlW2tleV0gPSB0cnVlO1xuICB9KTtcbiAgaWYgKGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuUkVQTEFDRSkgcmV0dXJuO1xuXG4gIGlmICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIFwiVW5leHBlY3RlZCBcIiArICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAxID8gJ2tleXMnIDogJ2tleScpICsgXCIgXCIgKyAoXCJcXFwiXCIgKyB1bmV4cGVjdGVkS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIiBmb3VuZCBpbiBcIiArIGFyZ3VtZW50TmFtZSArIFwiLiBcIikgKyBcIkV4cGVjdGVkIHRvIGZpbmQgb25lIG9mIHRoZSBrbm93biByZWR1Y2VyIGtleXMgaW5zdGVhZDogXCIgKyAoXCJcXFwiXCIgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArIFwiXFxcIi4gVW5leHBlY3RlZCBrZXlzIHdpbGwgYmUgaWdub3JlZC5cIik7XG4gIH1cbn1cblxuZnVuY3Rpb24gYXNzZXJ0UmVkdWNlclNoYXBlKHJlZHVjZXJzKSB7XG4gIE9iamVjdC5rZXlzKHJlZHVjZXJzKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgcmVkdWNlciA9IHJlZHVjZXJzW2tleV07XG4gICAgdmFyIGluaXRpYWxTdGF0ZSA9IHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5JTklUXG4gICAgfSk7XG5cbiAgICBpZiAodHlwZW9mIGluaXRpYWxTdGF0ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlJlZHVjZXIgXFxcIlwiICsga2V5ICsgXCJcXFwiIHJldHVybmVkIHVuZGVmaW5lZCBkdXJpbmcgaW5pdGlhbGl6YXRpb24uIFwiICsgXCJJZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZSByZWR1Y2VyIGlzIHVuZGVmaW5lZCwgeW91IG11c3QgXCIgKyBcImV4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgXCIgKyBcIm5vdCBiZSB1bmRlZmluZWQuIElmIHlvdSBkb24ndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsIFwiICsgXCJ5b3UgY2FuIHVzZSBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLlwiKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7XG4gICAgICB0eXBlOiBBY3Rpb25UeXBlcy5QUk9CRV9VTktOT1dOX0FDVElPTigpXG4gICAgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJSZWR1Y2VyIFxcXCJcIiArIGtleSArIFwiXFxcIiByZXR1cm5lZCB1bmRlZmluZWQgd2hlbiBwcm9iZWQgd2l0aCBhIHJhbmRvbSB0eXBlLiBcIiArIChcIkRvbid0IHRyeSB0byBoYW5kbGUgXCIgKyBBY3Rpb25UeXBlcy5JTklUICsgXCIgb3Igb3RoZXIgYWN0aW9ucyBpbiBcXFwicmVkdXgvKlxcXCIgXCIpICsgXCJuYW1lc3BhY2UuIFRoZXkgYXJlIGNvbnNpZGVyZWQgcHJpdmF0ZS4gSW5zdGVhZCwgeW91IG11c3QgcmV0dXJuIHRoZSBcIiArIFwiY3VycmVudCBzdGF0ZSBmb3IgYW55IHVua25vd24gYWN0aW9ucywgdW5sZXNzIGl0IGlzIHVuZGVmaW5lZCwgXCIgKyBcImluIHdoaWNoIGNhc2UgeW91IG11c3QgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLCByZWdhcmRsZXNzIG9mIHRoZSBcIiArIFwiYWN0aW9uIHR5cGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSBub3QgYmUgdW5kZWZpbmVkLCBidXQgY2FuIGJlIG51bGwuXCIpO1xuICAgIH1cbiAgfSk7XG59XG4vKipcbiAqIFR1cm5zIGFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGRpZmZlcmVudCByZWR1Y2VyIGZ1bmN0aW9ucywgaW50byBhIHNpbmdsZVxuICogcmVkdWNlciBmdW5jdGlvbi4gSXQgd2lsbCBjYWxsIGV2ZXJ5IGNoaWxkIHJlZHVjZXIsIGFuZCBnYXRoZXIgdGhlaXIgcmVzdWx0c1xuICogaW50byBhIHNpbmdsZSBzdGF0ZSBvYmplY3QsIHdob3NlIGtleXMgY29ycmVzcG9uZCB0byB0aGUga2V5cyBvZiB0aGUgcGFzc2VkXG4gKiByZWR1Y2VyIGZ1bmN0aW9ucy5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcmVkdWNlcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBjb3JyZXNwb25kIHRvIGRpZmZlcmVudFxuICogcmVkdWNlciBmdW5jdGlvbnMgdGhhdCBuZWVkIHRvIGJlIGNvbWJpbmVkIGludG8gb25lLiBPbmUgaGFuZHkgd2F5IHRvIG9idGFpblxuICogaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXMgcmVkdWNlcnNgIHN5bnRheC4gVGhlIHJlZHVjZXJzIG1heSBuZXZlciByZXR1cm5cbiAqIHVuZGVmaW5lZCBmb3IgYW55IGFjdGlvbi4gSW5zdGVhZCwgdGhleSBzaG91bGQgcmV0dXJuIHRoZWlyIGluaXRpYWwgc3RhdGVcbiAqIGlmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlbSB3YXMgdW5kZWZpbmVkLCBhbmQgdGhlIGN1cnJlbnQgc3RhdGUgZm9yIGFueVxuICogdW5yZWNvZ25pemVkIGFjdGlvbi5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgcmVkdWNlciBmdW5jdGlvbiB0aGF0IGludm9rZXMgZXZlcnkgcmVkdWNlciBpbnNpZGUgdGhlXG4gKiBwYXNzZWQgb2JqZWN0LCBhbmQgYnVpbGRzIGEgc3RhdGUgb2JqZWN0IHdpdGggdGhlIHNhbWUgc2hhcGUuXG4gKi9cblxuXG5mdW5jdGlvbiBjb21iaW5lUmVkdWNlcnMocmVkdWNlcnMpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgZmluYWxSZWR1Y2VycyA9IHt9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcmVkdWNlcktleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0gcmVkdWNlcktleXNbaV07XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgaWYgKHR5cGVvZiByZWR1Y2Vyc1trZXldID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3YXJuaW5nKFwiTm8gcmVkdWNlciBwcm92aWRlZCBmb3Iga2V5IFxcXCJcIiArIGtleSArIFwiXFxcIlwiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHJlZHVjZXJzW2tleV0gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGZpbmFsUmVkdWNlcnNba2V5XSA9IHJlZHVjZXJzW2tleV07XG4gICAgfVxuICB9XG5cbiAgdmFyIGZpbmFsUmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhmaW5hbFJlZHVjZXJzKTsgLy8gVGhpcyBpcyB1c2VkIHRvIG1ha2Ugc3VyZSB3ZSBkb24ndCB3YXJuIGFib3V0IHRoZSBzYW1lXG4gIC8vIGtleXMgbXVsdGlwbGUgdGltZXMuXG5cbiAgdmFyIHVuZXhwZWN0ZWRLZXlDYWNoZTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZSA9IHt9O1xuICB9XG5cbiAgdmFyIHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG5cbiAgdHJ5IHtcbiAgICBhc3NlcnRSZWR1Y2VyU2hhcGUoZmluYWxSZWR1Y2Vycyk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBzaGFwZUFzc2VydGlvbkVycm9yID0gZTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiBjb21iaW5hdGlvbihzdGF0ZSwgYWN0aW9uKSB7XG4gICAgaWYgKHN0YXRlID09PSB2b2lkIDApIHtcbiAgICAgIHN0YXRlID0ge307XG4gICAgfVxuXG4gICAgaWYgKHNoYXBlQXNzZXJ0aW9uRXJyb3IpIHtcbiAgICAgIHRocm93IHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2Uoc3RhdGUsIGZpbmFsUmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKTtcblxuICAgICAgaWYgKHdhcm5pbmdNZXNzYWdlKSB7XG4gICAgICAgIHdhcm5pbmcod2FybmluZ01lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBoYXNDaGFuZ2VkID0gZmFsc2U7XG4gICAgdmFyIG5leHRTdGF0ZSA9IHt9O1xuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGZpbmFsUmVkdWNlcktleXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2tleSA9IGZpbmFsUmVkdWNlcktleXNbX2ldO1xuICAgICAgdmFyIHJlZHVjZXIgPSBmaW5hbFJlZHVjZXJzW19rZXldO1xuICAgICAgdmFyIHByZXZpb3VzU3RhdGVGb3JLZXkgPSBzdGF0ZVtfa2V5XTtcbiAgICAgIHZhciBuZXh0U3RhdGVGb3JLZXkgPSByZWR1Y2VyKHByZXZpb3VzU3RhdGVGb3JLZXksIGFjdGlvbik7XG5cbiAgICAgIGlmICh0eXBlb2YgbmV4dFN0YXRlRm9yS2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UoX2tleSwgYWN0aW9uKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICB9XG5cbiAgICAgIG5leHRTdGF0ZVtfa2V5XSA9IG5leHRTdGF0ZUZvcktleTtcbiAgICAgIGhhc0NoYW5nZWQgPSBoYXNDaGFuZ2VkIHx8IG5leHRTdGF0ZUZvcktleSAhPT0gcHJldmlvdXNTdGF0ZUZvcktleTtcbiAgICB9XG5cbiAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBmaW5hbFJlZHVjZXJLZXlzLmxlbmd0aCAhPT0gT2JqZWN0LmtleXMoc3RhdGUpLmxlbmd0aDtcbiAgICByZXR1cm4gaGFzQ2hhbmdlZCA/IG5leHRTdGF0ZSA6IHN0YXRlO1xuICB9O1xufVxuXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9yLCBkaXNwYXRjaCkge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkaXNwYXRjaChhY3Rpb25DcmVhdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICB9O1xufVxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBhY3Rpb24gY3JlYXRvcnMsIGludG8gYW4gb2JqZWN0IHdpdGggdGhlXG4gKiBzYW1lIGtleXMsIGJ1dCB3aXRoIGV2ZXJ5IGZ1bmN0aW9uIHdyYXBwZWQgaW50byBhIGBkaXNwYXRjaGAgY2FsbCBzbyB0aGV5XG4gKiBtYXkgYmUgaW52b2tlZCBkaXJlY3RseS4gVGhpcyBpcyBqdXN0IGEgY29udmVuaWVuY2UgbWV0aG9kLCBhcyB5b3UgY2FuIGNhbGxcbiAqIGBzdG9yZS5kaXNwYXRjaChNeUFjdGlvbkNyZWF0b3JzLmRvU29tZXRoaW5nKCkpYCB5b3Vyc2VsZiBqdXN0IGZpbmUuXG4gKlxuICogRm9yIGNvbnZlbmllbmNlLCB5b3UgY2FuIGFsc28gcGFzcyBhbiBhY3Rpb24gY3JlYXRvciBhcyB0aGUgZmlyc3QgYXJndW1lbnQsXG4gKiBhbmQgZ2V0IGEgZGlzcGF0Y2ggd3JhcHBlZCBmdW5jdGlvbiBpbiByZXR1cm4uXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbnxPYmplY3R9IGFjdGlvbkNyZWF0b3JzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgYXJlIGFjdGlvblxuICogY3JlYXRvciBmdW5jdGlvbnMuIE9uZSBoYW5keSB3YXkgdG8gb2J0YWluIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzYFxuICogc3ludGF4LiBZb3UgbWF5IGFsc28gcGFzcyBhIHNpbmdsZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBkaXNwYXRjaCBUaGUgYGRpc3BhdGNoYCBmdW5jdGlvbiBhdmFpbGFibGUgb24geW91ciBSZWR1eFxuICogc3RvcmUuXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufE9iamVjdH0gVGhlIG9iamVjdCBtaW1pY2tpbmcgdGhlIG9yaWdpbmFsIG9iamVjdCwgYnV0IHdpdGhcbiAqIGV2ZXJ5IGFjdGlvbiBjcmVhdG9yIHdyYXBwZWQgaW50byB0aGUgYGRpc3BhdGNoYCBjYWxsLiBJZiB5b3UgcGFzc2VkIGFcbiAqIGZ1bmN0aW9uIGFzIGBhY3Rpb25DcmVhdG9yc2AsIHRoZSByZXR1cm4gdmFsdWUgd2lsbCBhbHNvIGJlIGEgc2luZ2xlXG4gKiBmdW5jdGlvbi5cbiAqL1xuXG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9ycyhhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpIHtcbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcihhY3Rpb25DcmVhdG9ycywgZGlzcGF0Y2gpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhY3Rpb25DcmVhdG9ycyAhPT0gJ29iamVjdCcgfHwgYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJiaW5kQWN0aW9uQ3JlYXRvcnMgZXhwZWN0ZWQgYW4gb2JqZWN0IG9yIGEgZnVuY3Rpb24sIGluc3RlYWQgcmVjZWl2ZWQgXCIgKyAoYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwgPyAnbnVsbCcgOiB0eXBlb2YgYWN0aW9uQ3JlYXRvcnMpICsgXCIuIFwiICsgXCJEaWQgeW91IHdyaXRlIFxcXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCIgaW5zdGVhZCBvZiBcXFwiaW1wb3J0ICogYXMgQWN0aW9uQ3JlYXRvcnMgZnJvbVxcXCI/XCIpO1xuICB9XG5cbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcblxuICBmb3IgKHZhciBrZXkgaW4gYWN0aW9uQ3JlYXRvcnMpIHtcbiAgICB2YXIgYWN0aW9uQ3JlYXRvciA9IGFjdGlvbkNyZWF0b3JzW2tleV07XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbkNyZWF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGJvdW5kQWN0aW9uQ3JlYXRvcnNba2V5XSA9IGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5IGluIG9iaikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwge1xuICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqW2tleV0gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiBvYmo7XG59XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkge1xuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7XG5cbiAgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHtcbiAgICBrZXlzLnB1c2guYXBwbHkoa2V5cywgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpKTtcbiAgfVxuXG4gIGlmIChlbnVtZXJhYmxlT25seSkga2V5cyA9IGtleXMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHtcbiAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgfSk7XG4gIHJldHVybiBrZXlzO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcblxuICAgIGlmIChpICUgMikge1xuICAgICAgb3duS2V5cyhzb3VyY2UsIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIG93bktleXMoc291cmNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdGFyZ2V0O1xufVxuXG4vKipcbiAqIENvbXBvc2VzIHNpbmdsZS1hcmd1bWVudCBmdW5jdGlvbnMgZnJvbSByaWdodCB0byBsZWZ0LiBUaGUgcmlnaHRtb3N0XG4gKiBmdW5jdGlvbiBjYW4gdGFrZSBtdWx0aXBsZSBhcmd1bWVudHMgYXMgaXQgcHJvdmlkZXMgdGhlIHNpZ25hdHVyZSBmb3JcbiAqIHRoZSByZXN1bHRpbmcgY29tcG9zaXRlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IGZ1bmNzIFRoZSBmdW5jdGlvbnMgdG8gY29tcG9zZS5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBmdW5jdGlvbiBvYnRhaW5lZCBieSBjb21wb3NpbmcgdGhlIGFyZ3VtZW50IGZ1bmN0aW9uc1xuICogZnJvbSByaWdodCB0byBsZWZ0LiBGb3IgZXhhbXBsZSwgY29tcG9zZShmLCBnLCBoKSBpcyBpZGVudGljYWwgdG8gZG9pbmdcbiAqICguLi5hcmdzKSA9PiBmKGcoaCguLi5hcmdzKSkpLlxuICovXG5mdW5jdGlvbiBjb21wb3NlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZnVuY3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgZnVuY3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoZnVuY3MubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChhcmcpIHtcbiAgICAgIHJldHVybiBhcmc7XG4gICAgfTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDEpIHtcbiAgICByZXR1cm4gZnVuY3NbMF07XG4gIH1cblxuICByZXR1cm4gZnVuY3MucmVkdWNlKGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBhKGIuYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpKTtcbiAgICB9O1xuICB9KTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RvcmUgZW5oYW5jZXIgdGhhdCBhcHBsaWVzIG1pZGRsZXdhcmUgdG8gdGhlIGRpc3BhdGNoIG1ldGhvZFxuICogb2YgdGhlIFJlZHV4IHN0b3JlLiBUaGlzIGlzIGhhbmR5IGZvciBhIHZhcmlldHkgb2YgdGFza3MsIHN1Y2ggYXMgZXhwcmVzc2luZ1xuICogYXN5bmNocm9ub3VzIGFjdGlvbnMgaW4gYSBjb25jaXNlIG1hbm5lciwgb3IgbG9nZ2luZyBldmVyeSBhY3Rpb24gcGF5bG9hZC5cbiAqXG4gKiBTZWUgYHJlZHV4LXRodW5rYCBwYWNrYWdlIGFzIGFuIGV4YW1wbGUgb2YgdGhlIFJlZHV4IG1pZGRsZXdhcmUuXG4gKlxuICogQmVjYXVzZSBtaWRkbGV3YXJlIGlzIHBvdGVudGlhbGx5IGFzeW5jaHJvbm91cywgdGhpcyBzaG91bGQgYmUgdGhlIGZpcnN0XG4gKiBzdG9yZSBlbmhhbmNlciBpbiB0aGUgY29tcG9zaXRpb24gY2hhaW4uXG4gKlxuICogTm90ZSB0aGF0IGVhY2ggbWlkZGxld2FyZSB3aWxsIGJlIGdpdmVuIHRoZSBgZGlzcGF0Y2hgIGFuZCBgZ2V0U3RhdGVgIGZ1bmN0aW9uc1xuICogYXMgbmFtZWQgYXJndW1lbnRzLlxuICpcbiAqIEBwYXJhbSB7Li4uRnVuY3Rpb259IG1pZGRsZXdhcmVzIFRoZSBtaWRkbGV3YXJlIGNoYWluIHRvIGJlIGFwcGxpZWQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgc3RvcmUgZW5oYW5jZXIgYXBwbHlpbmcgdGhlIG1pZGRsZXdhcmUuXG4gKi9cblxuZnVuY3Rpb24gYXBwbHlNaWRkbGV3YXJlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbWlkZGxld2FyZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgbWlkZGxld2FyZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKGNyZWF0ZVN0b3JlKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlLmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTtcblxuICAgICAgdmFyIF9kaXNwYXRjaCA9IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Rpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuICcgKyAnT3RoZXIgbWlkZGxld2FyZSB3b3VsZCBub3QgYmUgYXBwbGllZCB0byB0aGlzIGRpc3BhdGNoLicpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodm9pZCAwLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHZvaWQgMCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMih7fSwgc3RvcmUsIHtcbiAgICAgICAgZGlzcGF0Y2g6IF9kaXNwYXRjaFxuICAgICAgfSk7XG4gICAgfTtcbiAgfTtcbn1cblxuLypcbiAqIFRoaXMgaXMgYSBkdW1teSBmdW5jdGlvbiB0byBjaGVjayBpZiB0aGUgZnVuY3Rpb24gbmFtZSBoYXMgYmVlbiBhbHRlcmVkIGJ5IG1pbmlmaWNhdGlvbi5cbiAqIElmIHRoZSBmdW5jdGlvbiBoYXMgYmVlbiBtaW5pZmllZCBhbmQgTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJywgd2FybiB0aGUgdXNlci5cbiAqL1xuXG5mdW5jdGlvbiBpc0NydXNoZWQoKSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgaXNDcnVzaGVkLm5hbWUgPT09ICdzdHJpbmcnICYmIGlzQ3J1c2hlZC5uYW1lICE9PSAnaXNDcnVzaGVkJykge1xuICB3YXJuaW5nKCdZb3UgYXJlIGN1cnJlbnRseSB1c2luZyBtaW5pZmllZCBjb2RlIG91dHNpZGUgb2YgTk9ERV9FTlYgPT09IFwicHJvZHVjdGlvblwiLiAnICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3Igc2V0dGluZyBtb2RlIHRvIHByb2R1Y3Rpb24gaW4gd2VicGFjayAoaHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25jZXB0cy9tb2RlLykgJyArICd0byBlbnN1cmUgeW91IGhhdmUgdGhlIGNvcnJlY3QgY29kZSBmb3IgeW91ciBwcm9kdWN0aW9uIGJ1aWxkLicpO1xufVxuXG5leHBvcnQgeyBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzLCBhcHBseU1pZGRsZXdhcmUsIGJpbmRBY3Rpb25DcmVhdG9ycywgY29tYmluZVJlZHVjZXJzLCBjb21wb3NlLCBjcmVhdGVTdG9yZSB9O1xuIiwiaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGdldENvbnN0YW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0Q29uc3RhbnRTZWxlY3RvcihkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHZhciBjb25zdGFudCA9IGdldENvbnN0YW50KGRpc3BhdGNoLCBvcHRpb25zKTtcblxuICAgIGZ1bmN0aW9uIGNvbnN0YW50U2VsZWN0b3IoKSB7XG4gICAgICByZXR1cm4gY29uc3RhbnQ7XG4gICAgfVxuXG4gICAgY29uc3RhbnRTZWxlY3Rvci5kZXBlbmRzT25Pd25Qcm9wcyA9IGZhbHNlO1xuICAgIHJldHVybiBjb25zdGFudFNlbGVjdG9yO1xuICB9O1xufSAvLyBkZXBlbmRzT25Pd25Qcm9wcyBpcyB1c2VkIGJ5IGNyZWF0ZU1hcFRvUHJvcHNQcm94eSB0byBkZXRlcm1pbmUgd2hldGhlciB0byBwYXNzIHByb3BzIGFzIGFyZ3Ncbi8vIHRvIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIHdyYXBwZWQuIEl0IGlzIGFsc28gdXNlZCBieSBtYWtlUHVyZVByb3BzU2VsZWN0b3IgdG8gZGV0ZXJtaW5lXG4vLyB3aGV0aGVyIG1hcFRvUHJvcHMgbmVlZHMgdG8gYmUgaW52b2tlZCB3aGVuIHByb3BzIGhhdmUgY2hhbmdlZC5cbi8vXG4vLyBBIGxlbmd0aCBvZiBvbmUgc2lnbmFscyB0aGF0IG1hcFRvUHJvcHMgZG9lcyBub3QgZGVwZW5kIG9uIHByb3BzIGZyb20gdGhlIHBhcmVudCBjb21wb25lbnQuXG4vLyBBIGxlbmd0aCBvZiB6ZXJvIGlzIGFzc3VtZWQgdG8gbWVhbiBtYXBUb1Byb3BzIGlzIGdldHRpbmcgYXJncyB2aWEgYXJndW1lbnRzIG9yIC4uLmFyZ3MgYW5kXG4vLyB0aGVyZWZvcmUgbm90IHJlcG9ydGluZyBpdHMgbGVuZ3RoIGFjY3VyYXRlbHkuLlxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVwZW5kc09uT3duUHJvcHMobWFwVG9Qcm9wcykge1xuICByZXR1cm4gbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gbnVsbCAmJiBtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzICE9PSB1bmRlZmluZWQgPyBCb29sZWFuKG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIDogbWFwVG9Qcm9wcy5sZW5ndGggIT09IDE7XG59IC8vIFVzZWQgYnkgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24gYW5kIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uLFxuLy8gdGhpcyBmdW5jdGlvbiB3cmFwcyBtYXBUb1Byb3BzIGluIGEgcHJveHkgZnVuY3Rpb24gd2hpY2ggZG9lcyBzZXZlcmFsIHRoaW5nczpcbi8vXG4vLyAgKiBEZXRlY3RzIHdoZXRoZXIgdGhlIG1hcFRvUHJvcHMgZnVuY3Rpb24gYmVpbmcgY2FsbGVkIGRlcGVuZHMgb24gcHJvcHMsIHdoaWNoXG4vLyAgICBpcyB1c2VkIGJ5IHNlbGVjdG9yRmFjdG9yeSB0byBkZWNpZGUgaWYgaXQgc2hvdWxkIHJlaW52b2tlIG9uIHByb3BzIGNoYW5nZXMuXG4vL1xuLy8gICogT24gZmlyc3QgY2FsbCwgaGFuZGxlcyBtYXBUb1Byb3BzIGlmIHJldHVybnMgYW5vdGhlciBmdW5jdGlvbiwgYW5kIHRyZWF0cyB0aGF0XG4vLyAgICBuZXcgZnVuY3Rpb24gYXMgdGhlIHRydWUgbWFwVG9Qcm9wcyBmb3Igc3Vic2VxdWVudCBjYWxscy5cbi8vXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCB2ZXJpZmllcyB0aGUgZmlyc3QgcmVzdWx0IGlzIGEgcGxhaW4gb2JqZWN0LCBpbiBvcmRlciB0byB3YXJuXG4vLyAgICB0aGUgZGV2ZWxvcGVyIHRoYXQgdGhlaXIgbWFwVG9Qcm9wcyBmdW5jdGlvbiBpcyBub3QgcmV0dXJuaW5nIGEgdmFsaWQgcmVzdWx0LlxuLy9cblxuZXhwb3J0IGZ1bmN0aW9uIHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBUb1Byb3BzLCBtZXRob2ROYW1lKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0UHJveHlTZWxlY3RvcihkaXNwYXRjaCwgX3JlZikge1xuICAgIHZhciBkaXNwbGF5TmFtZSA9IF9yZWYuZGlzcGxheU5hbWU7XG5cbiAgICB2YXIgcHJveHkgPSBmdW5jdGlvbiBtYXBUb1Byb3BzUHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcykge1xuICAgICAgcmV0dXJuIHByb3h5LmRlcGVuZHNPbk93blByb3BzID8gcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSA6IHByb3h5Lm1hcFRvUHJvcHMoc3RhdGVPckRpc3BhdGNoKTtcbiAgICB9OyAvLyBhbGxvdyBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5IHRvIGdldCBvd25Qcm9wc1xuXG5cbiAgICBwcm94eS5kZXBlbmRzT25Pd25Qcm9wcyA9IHRydWU7XG5cbiAgICBwcm94eS5tYXBUb1Byb3BzID0gZnVuY3Rpb24gZGV0ZWN0RmFjdG9yeUFuZFZlcmlmeShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICBwcm94eS5tYXBUb1Byb3BzID0gbWFwVG9Qcm9wcztcbiAgICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gZ2V0RGVwZW5kc09uT3duUHJvcHMobWFwVG9Qcm9wcyk7XG4gICAgICB2YXIgcHJvcHMgPSBwcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKTtcblxuICAgICAgaWYgKHR5cGVvZiBwcm9wcyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBwcm94eS5tYXBUb1Byb3BzID0gcHJvcHM7XG4gICAgICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gZ2V0RGVwZW5kc09uT3duUHJvcHMocHJvcHMpO1xuICAgICAgICBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgICAgfVxuXG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgdmVyaWZ5UGxhaW5PYmplY3QocHJvcHMsIGRpc3BsYXlOYW1lLCBtZXRob2ROYW1lKTtcbiAgICAgIHJldHVybiBwcm9wcztcbiAgICB9O1xuXG4gICAgcmV0dXJuIHByb3h5O1xuICB9O1xufSIsImltcG9ydCB7IGJpbmRBY3Rpb25DcmVhdG9ycyB9IGZyb20gJ3JlZHV4JztcbmltcG9ydCB7IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQsIHdyYXBNYXBUb1Byb3BzRnVuYyB9IGZyb20gJy4vd3JhcE1hcFRvUHJvcHMnO1xuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNNaXNzaW5nKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcERpc3BhdGNoVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRpc3BhdGNoOiBkaXNwYXRjaFxuICAgIH07XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdChtYXBEaXNwYXRjaFRvUHJvcHMpIHtcbiAgcmV0dXJuIG1hcERpc3BhdGNoVG9Qcm9wcyAmJiB0eXBlb2YgbWFwRGlzcGF0Y2hUb1Byb3BzID09PSAnb2JqZWN0JyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKGRpc3BhdGNoKSB7XG4gICAgcmV0dXJuIGJpbmRBY3Rpb25DcmVhdG9ycyhtYXBEaXNwYXRjaFRvUHJvcHMsIGRpc3BhdGNoKTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcsIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdF07IiwiaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24obWFwU3RhdGVUb1Byb3BzKSB7XG4gIHJldHVybiB0eXBlb2YgbWFwU3RhdGVUb1Byb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFN0YXRlVG9Qcm9wcywgJ21hcFN0YXRlVG9Qcm9wcycpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBTdGF0ZVRvUHJvcHNJc01pc3NpbmcobWFwU3RhdGVUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwU3RhdGVUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHt9O1xuICB9KSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZ107IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgdmVyaWZ5UGxhaW5PYmplY3QgZnJvbSAnLi4vdXRpbHMvdmVyaWZ5UGxhaW5PYmplY3QnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRNZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3duUHJvcHMsIHt9LCBzdGF0ZVByb3BzLCB7fSwgZGlzcGF0Y2hQcm9wcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgICBwdXJlID0gX3JlZi5wdXJlLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZi5hcmVNZXJnZWRQcm9wc0VxdWFsO1xuICAgIHZhciBoYXNSdW5PbmNlID0gZmFsc2U7XG4gICAgdmFyIG1lcmdlZFByb3BzO1xuICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZVByb3BzUHJveHkoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpIHtcbiAgICAgIHZhciBuZXh0TWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcblxuICAgICAgaWYgKGhhc1J1bk9uY2UpIHtcbiAgICAgICAgaWYgKCFwdXJlIHx8ICFhcmVNZXJnZWRQcm9wc0VxdWFsKG5leHRNZXJnZWRQcm9wcywgbWVyZ2VkUHJvcHMpKSBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGhhc1J1bk9uY2UgPSB0cnVlO1xuICAgICAgICBtZXJnZWRQcm9wcyA9IG5leHRNZXJnZWRQcm9wcztcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KG1lcmdlZFByb3BzLCBkaXNwbGF5TmFtZSwgJ21lcmdlUHJvcHMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICAgIH07XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gd2hlbk1lcmdlUHJvcHNJc0Z1bmN0aW9uKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtZXJnZVByb3BzID09PSAnZnVuY3Rpb24nID8gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIDogdW5kZWZpbmVkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuICFtZXJnZVByb3BzID8gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBkZWZhdWx0TWVyZ2VQcm9wcztcbiAgfSA6IHVuZGVmaW5lZDtcbn1cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24sIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkXTsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCB2ZXJpZnlTdWJzZWxlY3RvcnMgZnJvbSAnLi92ZXJpZnlTdWJzZWxlY3RvcnMnO1xuZXhwb3J0IGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3Ioc3RhdGUsIG93blByb3BzKSB7XG4gICAgcmV0dXJuIG1lcmdlUHJvcHMobWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyksIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpLCBvd25Qcm9wcyk7XG4gIH07XG59XG5leHBvcnQgZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBfcmVmKSB7XG4gIHZhciBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYuYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZi5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZi5hcmVTdGF0ZVByb3BzRXF1YWw7XG4gIHZhciBoYXNSdW5BdExlYXN0T25jZSA9IGZhbHNlO1xuICB2YXIgc3RhdGU7XG4gIHZhciBvd25Qcm9wcztcbiAgdmFyIHN0YXRlUHJvcHM7XG4gIHZhciBkaXNwYXRjaFByb3BzO1xuICB2YXIgbWVyZ2VkUHJvcHM7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmlyc3RDYWxsKGZpcnN0U3RhdGUsIGZpcnN0T3duUHJvcHMpIHtcbiAgICBzdGF0ZSA9IGZpcnN0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBmaXJzdE93blByb3BzO1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICBoYXNSdW5BdExlYXN0T25jZSA9IHRydWU7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpIHtcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgaWYgKG1hcERpc3BhdGNoVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgZGlzcGF0Y2hQcm9wcyA9IG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3duUHJvcHMpO1xuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHMoKSB7XG4gICAgaWYgKG1hcFN0YXRlVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcykgc3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1N0YXRlKCkge1xuICAgIHZhciBuZXh0U3RhdGVQcm9wcyA9IG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZVByb3BzQ2hhbmdlZCA9ICFhcmVTdGF0ZVByb3BzRXF1YWwobmV4dFN0YXRlUHJvcHMsIHN0YXRlUHJvcHMpO1xuICAgIHN0YXRlUHJvcHMgPSBuZXh0U3RhdGVQcm9wcztcbiAgICBpZiAoc3RhdGVQcm9wc0NoYW5nZWQpIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgdmFyIHByb3BzQ2hhbmdlZCA9ICFhcmVPd25Qcm9wc0VxdWFsKG5leHRPd25Qcm9wcywgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZUNoYW5nZWQgPSAhYXJlU3RhdGVzRXF1YWwobmV4dFN0YXRlLCBzdGF0ZSk7XG4gICAgc3RhdGUgPSBuZXh0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBuZXh0T3duUHJvcHM7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCAmJiBzdGF0ZUNoYW5nZWQpIHJldHVybiBoYW5kbGVOZXdQcm9wc0FuZE5ld1N0YXRlKCk7XG4gICAgaWYgKHByb3BzQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzKCk7XG4gICAgaWYgKHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1N0YXRlKCk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3IobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIHtcbiAgICByZXR1cm4gaGFzUnVuQXRMZWFzdE9uY2UgPyBoYW5kbGVTdWJzZXF1ZW50Q2FsbHMobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpIDogaGFuZGxlRmlyc3RDYWxsKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKTtcbiAgfTtcbn0gLy8gVE9ETzogQWRkIG1vcmUgY29tbWVudHNcbi8vIElmIHB1cmUgaXMgdHJ1ZSwgdGhlIHNlbGVjdG9yIHJldHVybmVkIGJ5IHNlbGVjdG9yRmFjdG9yeSB3aWxsIG1lbW9pemUgaXRzIHJlc3VsdHMsXG4vLyBhbGxvd2luZyBjb25uZWN0QWR2YW5jZWQncyBzaG91bGRDb21wb25lbnRVcGRhdGUgdG8gcmV0dXJuIGZhbHNlIGlmIGZpbmFsXG4vLyBwcm9wcyBoYXZlIG5vdCBjaGFuZ2VkLiBJZiBmYWxzZSwgdGhlIHNlbGVjdG9yIHdpbGwgYWx3YXlzIHJldHVybiBhIG5ld1xuLy8gb2JqZWN0IGFuZCBzaG91bGRDb21wb25lbnRVcGRhdGUgd2lsbCBhbHdheXMgcmV0dXJuIHRydWUuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkoZGlzcGF0Y2gsIF9yZWYyKSB7XG4gIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gX3JlZjIuaW5pdE1hcFN0YXRlVG9Qcm9wcyxcbiAgICAgIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBfcmVmMi5pbml0TWFwRGlzcGF0Y2hUb1Byb3BzLFxuICAgICAgaW5pdE1lcmdlUHJvcHMgPSBfcmVmMi5pbml0TWVyZ2VQcm9wcyxcbiAgICAgIG9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmMiwgW1wiaW5pdE1hcFN0YXRlVG9Qcm9wc1wiLCBcImluaXRNYXBEaXNwYXRjaFRvUHJvcHNcIiwgXCJpbml0TWVyZ2VQcm9wc1wiXSk7XG5cbiAgdmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGluaXRNYXBTdGF0ZVRvUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuICB2YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtZXJnZVByb3BzID0gaW5pdE1lcmdlUHJvcHMoZGlzcGF0Y2gsIG9wdGlvbnMpO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgdmVyaWZ5U3Vic2VsZWN0b3JzKG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBvcHRpb25zLmRpc3BsYXlOYW1lKTtcbiAgfVxuXG4gIHZhciBzZWxlY3RvckZhY3RvcnkgPSBvcHRpb25zLnB1cmUgPyBwdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeSA6IGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3Rvcnk7XG4gIHJldHVybiBzZWxlY3RvckZhY3RvcnkobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIGRpc3BhdGNoLCBvcHRpb25zKTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IGNvbm5lY3RBZHZhbmNlZCBmcm9tICcuLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4uL3V0aWxzL3NoYWxsb3dFcXVhbCc7XG5pbXBvcnQgZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcERpc3BhdGNoVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyBmcm9tICcuL21hcFN0YXRlVG9Qcm9wcyc7XG5pbXBvcnQgZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgZnJvbSAnLi9tZXJnZVByb3BzJztcbmltcG9ydCBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IGZyb20gJy4vc2VsZWN0b3JGYWN0b3J5Jztcbi8qXHJcbiAgY29ubmVjdCBpcyBhIGZhY2FkZSBvdmVyIGNvbm5lY3RBZHZhbmNlZC4gSXQgdHVybnMgaXRzIGFyZ3MgaW50byBhIGNvbXBhdGlibGVcclxuICBzZWxlY3RvckZhY3RvcnksIHdoaWNoIGhhcyB0aGUgc2lnbmF0dXJlOlxyXG5cclxuICAgIChkaXNwYXRjaCwgb3B0aW9ucykgPT4gKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSA9PiBuZXh0RmluYWxQcm9wc1xyXG4gIFxyXG4gIGNvbm5lY3QgcGFzc2VzIGl0cyBhcmdzIHRvIGNvbm5lY3RBZHZhbmNlZCBhcyBvcHRpb25zLCB3aGljaCB3aWxsIGluIHR1cm4gcGFzcyB0aGVtIHRvXHJcbiAgc2VsZWN0b3JGYWN0b3J5IGVhY2ggdGltZSBhIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIGlzIGluc3RhbnRpYXRlZCBvciBob3QgcmVsb2FkZWQuXHJcblxyXG4gIHNlbGVjdG9yRmFjdG9yeSByZXR1cm5zIGEgZmluYWwgcHJvcHMgc2VsZWN0b3IgZnJvbSBpdHMgbWFwU3RhdGVUb1Byb3BzLFxyXG4gIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHNGYWN0b3JpZXMsIG1lcmdlUHJvcHMsXHJcbiAgbWVyZ2VQcm9wc0ZhY3RvcmllcywgYW5kIHB1cmUgYXJncy5cclxuXHJcbiAgVGhlIHJlc3VsdGluZyBmaW5hbCBwcm9wcyBzZWxlY3RvciBpcyBjYWxsZWQgYnkgdGhlIENvbm5lY3QgY29tcG9uZW50IGluc3RhbmNlIHdoZW5ldmVyXHJcbiAgaXQgcmVjZWl2ZXMgbmV3IHByb3BzIG9yIHN0b3JlIHN0YXRlLlxyXG4gKi9cblxuZnVuY3Rpb24gbWF0Y2goYXJnLCBmYWN0b3JpZXMsIG5hbWUpIHtcbiAgZm9yICh2YXIgaSA9IGZhY3Rvcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIHZhciByZXN1bHQgPSBmYWN0b3JpZXNbaV0oYXJnKTtcbiAgICBpZiAocmVzdWx0KSByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdmFsdWUgb2YgdHlwZSBcIiArIHR5cGVvZiBhcmcgKyBcIiBmb3IgXCIgKyBuYW1lICsgXCIgYXJndW1lbnQgd2hlbiBjb25uZWN0aW5nIGNvbXBvbmVudCBcIiArIG9wdGlvbnMud3JhcHBlZENvbXBvbmVudE5hbWUgKyBcIi5cIik7XG4gIH07XG59XG5cbmZ1bmN0aW9uIHN0cmljdEVxdWFsKGEsIGIpIHtcbiAgcmV0dXJuIGEgPT09IGI7XG59IC8vIGNyZWF0ZUNvbm5lY3Qgd2l0aCBkZWZhdWx0IGFyZ3MgYnVpbGRzIHRoZSAnb2ZmaWNpYWwnIGNvbm5lY3QgYmVoYXZpb3IuIENhbGxpbmcgaXQgd2l0aFxuLy8gZGlmZmVyZW50IG9wdGlvbnMgb3BlbnMgdXAgc29tZSB0ZXN0aW5nIGFuZCBleHRlbnNpYmlsaXR5IHNjZW5hcmlvc1xuXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0KF90ZW1wKSB7XG4gIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICBfcmVmJGNvbm5lY3RIT0MgPSBfcmVmLmNvbm5lY3RIT0MsXG4gICAgICBjb25uZWN0SE9DID0gX3JlZiRjb25uZWN0SE9DID09PSB2b2lkIDAgPyBjb25uZWN0QWR2YW5jZWQgOiBfcmVmJGNvbm5lY3RIT0MsXG4gICAgICBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPSBfcmVmLm1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwU3RhdGVUb1Byb3BzRiA9PT0gdm9pZCAwID8gZGVmYXVsdE1hcFN0YXRlVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwU3RhdGVUb1Byb3BzRixcbiAgICAgIF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9IF9yZWYubWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLFxuICAgICAgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzID0gX3JlZiRtYXBEaXNwYXRjaFRvUHJvID09PSB2b2lkIDAgPyBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIDogX3JlZiRtYXBEaXNwYXRjaFRvUHJvLFxuICAgICAgX3JlZiRtZXJnZVByb3BzRmFjdG9yID0gX3JlZi5tZXJnZVByb3BzRmFjdG9yaWVzLFxuICAgICAgbWVyZ2VQcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9PT0gdm9pZCAwID8gZGVmYXVsdE1lcmdlUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1lcmdlUHJvcHNGYWN0b3IsXG4gICAgICBfcmVmJHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYuc2VsZWN0b3JGYWN0b3J5LFxuICAgICAgc2VsZWN0b3JGYWN0b3J5ID0gX3JlZiRzZWxlY3RvckZhY3RvcnkgPT09IHZvaWQgMCA/IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgOiBfcmVmJHNlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gZnVuY3Rpb24gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgX3JlZjIpIHtcbiAgICBpZiAoX3JlZjIgPT09IHZvaWQgMCkge1xuICAgICAgX3JlZjIgPSB7fTtcbiAgICB9XG5cbiAgICB2YXIgX3JlZjMgPSBfcmVmMixcbiAgICAgICAgX3JlZjMkcHVyZSA9IF9yZWYzLnB1cmUsXG4gICAgICAgIHB1cmUgPSBfcmVmMyRwdXJlID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZjMkcHVyZSxcbiAgICAgICAgX3JlZjMkYXJlU3RhdGVzRXF1YWwgPSBfcmVmMy5hcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVzRXF1YWwgPSBfcmVmMyRhcmVTdGF0ZXNFcXVhbCA9PT0gdm9pZCAwID8gc3RyaWN0RXF1YWwgOiBfcmVmMyRhcmVTdGF0ZXNFcXVhbCxcbiAgICAgICAgX3JlZjMkYXJlT3duUHJvcHNFcXVhID0gX3JlZjMuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYzJGFyZU93blByb3BzRXF1YSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlT3duUHJvcHNFcXVhLFxuICAgICAgICBfcmVmMyRhcmVTdGF0ZVByb3BzRXEgPSBfcmVmMy5hcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYzJGFyZVN0YXRlUHJvcHNFcSA9PT0gdm9pZCAwID8gc2hhbGxvd0VxdWFsIDogX3JlZjMkYXJlU3RhdGVQcm9wc0VxLFxuICAgICAgICBfcmVmMyRhcmVNZXJnZWRQcm9wc0UgPSBfcmVmMy5hcmVNZXJnZWRQcm9wc0VxdWFsLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZjMkYXJlTWVyZ2VkUHJvcHNFID09PSB2b2lkIDAgPyBzaGFsbG93RXF1YWwgOiBfcmVmMyRhcmVNZXJnZWRQcm9wc0UsXG4gICAgICAgIGV4dHJhT3B0aW9ucyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYzLCBbXCJwdXJlXCIsIFwiYXJlU3RhdGVzRXF1YWxcIiwgXCJhcmVPd25Qcm9wc0VxdWFsXCIsIFwiYXJlU3RhdGVQcm9wc0VxdWFsXCIsIFwiYXJlTWVyZ2VkUHJvcHNFcXVhbFwiXSk7XG5cbiAgICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IG1hdGNoKG1hcFN0YXRlVG9Qcm9wcywgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCAnbWFwU3RhdGVUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNYXBEaXNwYXRjaFRvUHJvcHMgPSBtYXRjaChtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgJ21hcERpc3BhdGNoVG9Qcm9wcycpO1xuICAgIHZhciBpbml0TWVyZ2VQcm9wcyA9IG1hdGNoKG1lcmdlUHJvcHMsIG1lcmdlUHJvcHNGYWN0b3JpZXMsICdtZXJnZVByb3BzJyk7XG4gICAgcmV0dXJuIGNvbm5lY3RIT0Moc2VsZWN0b3JGYWN0b3J5LCBfZXh0ZW5kcyh7XG4gICAgICAvLyB1c2VkIGluIGVycm9yIG1lc3NhZ2VzXG4gICAgICBtZXRob2ROYW1lOiAnY29ubmVjdCcsXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gXCJDb25uZWN0KFwiICsgbmFtZSArIFwiKVwiO1xuICAgICAgfSxcbiAgICAgIC8vIGlmIG1hcFN0YXRlVG9Qcm9wcyBpcyBmYWxzeSwgdGhlIENvbm5lY3QgY29tcG9uZW50IGRvZXNuJ3Qgc3Vic2NyaWJlIHRvIHN0b3JlIHN0YXRlIGNoYW5nZXNcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlczogQm9vbGVhbihtYXBTdGF0ZVRvUHJvcHMpLFxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG4gICAgfSwgZXh0cmFPcHRpb25zKSk7XG4gIH07XG59XG5leHBvcnQgZGVmYXVsdFxuLyojX19QVVJFX18qL1xuY3JlYXRlQ29ubmVjdCgpOyIsImltcG9ydCB7IHVzZVJlZHVjZXIsIHVzZVJlZiwgdXNlTWVtbywgdXNlQ29udGV4dCwgdXNlRGVidWdWYWx1ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVJlZHV4Q29udGV4dCBhcyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IH0gZnJvbSAnLi91c2VSZWR1eENvbnRleHQnO1xuaW1wb3J0IFN1YnNjcmlwdGlvbiBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gJy4uL3V0aWxzL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QnO1xuaW1wb3J0IHsgUmVhY3RSZWR1eENvbnRleHQgfSBmcm9tICcuLi9jb21wb25lbnRzL0NvbnRleHQnO1xuXG52YXIgcmVmRXF1YWxpdHkgPSBmdW5jdGlvbiByZWZFcXVhbGl0eShhLCBiKSB7XG4gIHJldHVybiBhID09PSBiO1xufTtcblxuZnVuY3Rpb24gdXNlU2VsZWN0b3JXaXRoU3RvcmVBbmRTdWJzY3JpcHRpb24oc2VsZWN0b3IsIGVxdWFsaXR5Rm4sIHN0b3JlLCBjb250ZXh0U3ViKSB7XG4gIHZhciBfdXNlUmVkdWNlciA9IHVzZVJlZHVjZXIoZnVuY3Rpb24gKHMpIHtcbiAgICByZXR1cm4gcyArIDE7XG4gIH0sIDApLFxuICAgICAgZm9yY2VSZW5kZXIgPSBfdXNlUmVkdWNlclsxXTtcblxuICB2YXIgc3Vic2NyaXB0aW9uID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG5ldyBTdWJzY3JpcHRpb24oc3RvcmUsIGNvbnRleHRTdWIpO1xuICB9LCBbc3RvcmUsIGNvbnRleHRTdWJdKTtcbiAgdmFyIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IgPSB1c2VSZWYoKTtcbiAgdmFyIGxhdGVzdFNlbGVjdG9yID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTdG9yZVN0YXRlID0gdXNlUmVmKCk7XG4gIHZhciBsYXRlc3RTZWxlY3RlZFN0YXRlID0gdXNlUmVmKCk7XG4gIHZhciBzdG9yZVN0YXRlID0gc3RvcmUuZ2V0U3RhdGUoKTtcbiAgdmFyIHNlbGVjdGVkU3RhdGU7XG5cbiAgdHJ5IHtcbiAgICBpZiAoc2VsZWN0b3IgIT09IGxhdGVzdFNlbGVjdG9yLmN1cnJlbnQgfHwgc3RvcmVTdGF0ZSAhPT0gbGF0ZXN0U3RvcmVTdGF0ZS5jdXJyZW50IHx8IGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCkge1xuICAgICAgc2VsZWN0ZWRTdGF0ZSA9IHNlbGVjdG9yKHN0b3JlU3RhdGUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZWxlY3RlZFN0YXRlID0gbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50O1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgaWYgKGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCkge1xuICAgICAgZXJyLm1lc3NhZ2UgKz0gXCJcXG5UaGUgZXJyb3IgbWF5IGJlIGNvcnJlbGF0ZWQgd2l0aCB0aGlzIHByZXZpb3VzIGVycm9yOlxcblwiICsgbGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvci5jdXJyZW50LnN0YWNrICsgXCJcXG5cXG5cIjtcbiAgICB9XG5cbiAgICB0aHJvdyBlcnI7XG4gIH1cblxuICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBsYXRlc3RTZWxlY3Rvci5jdXJyZW50ID0gc2VsZWN0b3I7XG4gICAgbGF0ZXN0U3RvcmVTdGF0ZS5jdXJyZW50ID0gc3RvcmVTdGF0ZTtcbiAgICBsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQgPSBzZWxlY3RlZFN0YXRlO1xuICAgIGxhdGVzdFN1YnNjcmlwdGlvbkNhbGxiYWNrRXJyb3IuY3VycmVudCA9IHVuZGVmaW5lZDtcbiAgfSk7XG4gIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIGNoZWNrRm9yVXBkYXRlcygpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBuZXdTZWxlY3RlZFN0YXRlID0gbGF0ZXN0U2VsZWN0b3IuY3VycmVudChzdG9yZS5nZXRTdGF0ZSgpKTtcblxuICAgICAgICBpZiAoZXF1YWxpdHlGbihuZXdTZWxlY3RlZFN0YXRlLCBsYXRlc3RTZWxlY3RlZFN0YXRlLmN1cnJlbnQpKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGF0ZXN0U2VsZWN0ZWRTdGF0ZS5jdXJyZW50ID0gbmV3U2VsZWN0ZWRTdGF0ZTtcbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAvLyB3ZSBpZ25vcmUgYWxsIGVycm9ycyBoZXJlLCBzaW5jZSB3aGVuIHRoZSBjb21wb25lbnRcbiAgICAgICAgLy8gaXMgcmUtcmVuZGVyZWQsIHRoZSBzZWxlY3RvcnMgYXJlIGNhbGxlZCBhZ2FpbiwgYW5kXG4gICAgICAgIC8vIHdpbGwgdGhyb3cgYWdhaW4sIGlmIG5laXRoZXIgcHJvcHMgbm9yIHN0b3JlIHN0YXRlXG4gICAgICAgIC8vIGNoYW5nZWRcbiAgICAgICAgbGF0ZXN0U3Vic2NyaXB0aW9uQ2FsbGJhY2tFcnJvci5jdXJyZW50ID0gZXJyO1xuICAgICAgfVxuXG4gICAgICBmb3JjZVJlbmRlcigpO1xuICAgIH1cblxuICAgIHN1YnNjcmlwdGlvbi5vblN0YXRlQ2hhbmdlID0gY2hlY2tGb3JVcGRhdGVzO1xuICAgIHN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcbiAgICBjaGVja0ZvclVwZGF0ZXMoKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIHN1YnNjcmlwdGlvbi50cnlVbnN1YnNjcmliZSgpO1xuICAgIH07XG4gIH0sIFtzdG9yZSwgc3Vic2NyaXB0aW9uXSk7XG4gIHJldHVybiBzZWxlY3RlZFN0YXRlO1xufVxuLyoqXHJcbiAqIEhvb2sgZmFjdG9yeSwgd2hpY2ggY3JlYXRlcyBhIGB1c2VTZWxlY3RvcmAgaG9vayBib3VuZCB0byBhIGdpdmVuIGNvbnRleHQuXHJcbiAqXHJcbiAqIEBwYXJhbSB7UmVhY3QuQ29udGV4dH0gW2NvbnRleHQ9UmVhY3RSZWR1eENvbnRleHRdIENvbnRleHQgcGFzc2VkIHRvIHlvdXIgYDxQcm92aWRlcj5gLlxyXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgYHVzZVNlbGVjdG9yYCBob29rIGJvdW5kIHRvIHRoZSBzcGVjaWZpZWQgY29udGV4dC5cclxuICovXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNlbGVjdG9ySG9vayhjb250ZXh0KSB7XG4gIGlmIChjb250ZXh0ID09PSB2b2lkIDApIHtcbiAgICBjb250ZXh0ID0gUmVhY3RSZWR1eENvbnRleHQ7XG4gIH1cblxuICB2YXIgdXNlUmVkdXhDb250ZXh0ID0gY29udGV4dCA9PT0gUmVhY3RSZWR1eENvbnRleHQgPyB1c2VEZWZhdWx0UmVkdXhDb250ZXh0IDogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB1c2VDb250ZXh0KGNvbnRleHQpO1xuICB9O1xuICByZXR1cm4gZnVuY3Rpb24gdXNlU2VsZWN0b3Ioc2VsZWN0b3IsIGVxdWFsaXR5Rm4pIHtcbiAgICBpZiAoZXF1YWxpdHlGbiA9PT0gdm9pZCAwKSB7XG4gICAgICBlcXVhbGl0eUZuID0gcmVmRXF1YWxpdHk7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicgJiYgIXNlbGVjdG9yKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgbXVzdCBwYXNzIGEgc2VsZWN0b3IgdG8gdXNlU2VsZWN0b3JcIik7XG4gICAgfVxuXG4gICAgdmFyIF91c2VSZWR1eENvbnRleHQgPSB1c2VSZWR1eENvbnRleHQoKSxcbiAgICAgICAgc3RvcmUgPSBfdXNlUmVkdXhDb250ZXh0LnN0b3JlLFxuICAgICAgICBjb250ZXh0U3ViID0gX3VzZVJlZHV4Q29udGV4dC5zdWJzY3JpcHRpb247XG5cbiAgICB2YXIgc2VsZWN0ZWRTdGF0ZSA9IHVzZVNlbGVjdG9yV2l0aFN0b3JlQW5kU3Vic2NyaXB0aW9uKHNlbGVjdG9yLCBlcXVhbGl0eUZuLCBzdG9yZSwgY29udGV4dFN1Yik7XG4gICAgdXNlRGVidWdWYWx1ZShzZWxlY3RlZFN0YXRlKTtcbiAgICByZXR1cm4gc2VsZWN0ZWRTdGF0ZTtcbiAgfTtcbn1cbi8qKlxyXG4gKiBBIGhvb2sgdG8gYWNjZXNzIHRoZSByZWR1eCBzdG9yZSdzIHN0YXRlLiBUaGlzIGhvb2sgdGFrZXMgYSBzZWxlY3RvciBmdW5jdGlvblxyXG4gKiBhcyBhbiBhcmd1bWVudC4gVGhlIHNlbGVjdG9yIGlzIGNhbGxlZCB3aXRoIHRoZSBzdG9yZSBzdGF0ZS5cclxuICpcclxuICogVGhpcyBob29rIHRha2VzIGFuIG9wdGlvbmFsIGVxdWFsaXR5IGNvbXBhcmlzb24gZnVuY3Rpb24gYXMgdGhlIHNlY29uZCBwYXJhbWV0ZXJcclxuICogdGhhdCBhbGxvd3MgeW91IHRvIGN1c3RvbWl6ZSB0aGUgd2F5IHRoZSBzZWxlY3RlZCBzdGF0ZSBpcyBjb21wYXJlZCB0byBkZXRlcm1pbmVcclxuICogd2hldGhlciB0aGUgY29tcG9uZW50IG5lZWRzIHRvIGJlIHJlLXJlbmRlcmVkLlxyXG4gKlxyXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBzZWxlY3RvciB0aGUgc2VsZWN0b3IgZnVuY3Rpb25cclxuICogQHBhcmFtIHtGdW5jdGlvbj19IGVxdWFsaXR5Rm4gdGhlIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSB1c2VkIHRvIGRldGVybWluZSBlcXVhbGl0eVxyXG4gKlxyXG4gKiBAcmV0dXJucyB7YW55fSB0aGUgc2VsZWN0ZWQgc3RhdGVcclxuICpcclxuICogQGV4YW1wbGVcclxuICpcclxuICogaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xyXG4gKiBpbXBvcnQgeyB1c2VTZWxlY3RvciB9IGZyb20gJ3JlYWN0LXJlZHV4J1xyXG4gKlxyXG4gKiBleHBvcnQgY29uc3QgQ291bnRlckNvbXBvbmVudCA9ICgpID0+IHtcclxuICogICBjb25zdCBjb3VudGVyID0gdXNlU2VsZWN0b3Ioc3RhdGUgPT4gc3RhdGUuY291bnRlcilcclxuICogICByZXR1cm4gPGRpdj57Y291bnRlcn08L2Rpdj5cclxuICogfVxyXG4gKi9cblxuZXhwb3J0IHZhciB1c2VTZWxlY3RvciA9XG4vKiNfX1BVUkVfXyovXG5jcmVhdGVTZWxlY3Rvckhvb2soKTsiLCJpbXBvcnQgUHJvdmlkZXIgZnJvbSAnLi9jb21wb25lbnRzL1Byb3ZpZGVyJztcbmltcG9ydCBjb25uZWN0QWR2YW5jZWQgZnJvbSAnLi9jb21wb25lbnRzL2Nvbm5lY3RBZHZhbmNlZCc7XG5pbXBvcnQgeyBSZWFjdFJlZHV4Q29udGV4dCB9IGZyb20gJy4vY29tcG9uZW50cy9Db250ZXh0JztcbmltcG9ydCBjb25uZWN0IGZyb20gJy4vY29ubmVjdC9jb25uZWN0JztcbmltcG9ydCB7IHVzZURpc3BhdGNoLCBjcmVhdGVEaXNwYXRjaEhvb2sgfSBmcm9tICcuL2hvb2tzL3VzZURpc3BhdGNoJztcbmltcG9ydCB7IHVzZVNlbGVjdG9yLCBjcmVhdGVTZWxlY3Rvckhvb2sgfSBmcm9tICcuL2hvb2tzL3VzZVNlbGVjdG9yJztcbmltcG9ydCB7IHVzZVN0b3JlLCBjcmVhdGVTdG9yZUhvb2sgfSBmcm9tICcuL2hvb2tzL3VzZVN0b3JlJztcbmltcG9ydCB7IHNldEJhdGNoIH0gZnJvbSAnLi91dGlscy9iYXRjaCc7XG5pbXBvcnQgeyB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyBhcyBiYXRjaCB9IGZyb20gJy4vdXRpbHMvcmVhY3RCYXRjaGVkVXBkYXRlcyc7XG5pbXBvcnQgc2hhbGxvd0VxdWFsIGZyb20gJy4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbnNldEJhdGNoKGJhdGNoKTtcbmV4cG9ydCB7IFByb3ZpZGVyLCBjb25uZWN0QWR2YW5jZWQsIFJlYWN0UmVkdXhDb250ZXh0LCBjb25uZWN0LCBiYXRjaCwgdXNlRGlzcGF0Y2gsIGNyZWF0ZURpc3BhdGNoSG9vaywgdXNlU2VsZWN0b3IsIGNyZWF0ZVNlbGVjdG9ySG9vaywgdXNlU3RvcmUsIGNyZWF0ZVN0b3JlSG9vaywgc2hhbGxvd0VxdWFsIH07IiwiZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgbGlnaHQ6IHtcclxuICAgICAgICBjb2xvcnM6IHtcclxuICAgICAgICAgICAgcHJpbWFyeToge1xyXG4gICAgICAgICAgICAgICAgbWFpbjogJyM0Yjg5NGInLFxyXG4gICAgICAgICAgICAgICAgbGlnaHQ6ICcjNTZjYTU2J1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB7XHJcbiAgICAgICAgICAgICAgICBtYWluOiAnI2Y0ZjVmOScsXHJcbiAgICAgICAgICAgICAgICBkYXJrOiAnI0Q2RERFNicsXHJcbiAgICAgICAgICAgICAgICBkYXJrZXI6ICcjMDAwMDAwJyxcclxuICAgICAgICAgICAgICAgIGxpZ2h0OiAnI2Y0ZjRmNCcsXHJcbiAgICAgICAgICAgICAgICBsaWdodGVyOiAnI2ZiZmJmYicsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGRhbmdlcjoge1xyXG4gICAgICAgICAgICAgICAgbWFpbjogJyNiNjAwMDAnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgICAgIG1haW46ICcjNDAzYzNjJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuICAgIGRhcms6IHtcclxuICAgICAgICBjb2xvcnM6IHtcclxuICAgICAgICAgICAgcHJpbWFyeToge1xyXG4gICAgICAgICAgICAgICAgbWFpbjogJyM0N2FmNDcnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB7XHJcbiAgICAgICAgICAgICAgICBtYWluOiAnIzQwM2MzYycsXHJcbiAgICAgICAgICAgICAgICBkYXJrOiAnIzZhNmI2YycsXHJcbiAgICAgICAgICAgICAgICBkYXJrZXI6ICcjNDAzYzNjJyxcclxuICAgICAgICAgICAgICAgIGxpZ2h0OiAnI2U4ZTllYicsXHJcbiAgICAgICAgICAgICAgICBsaWdodGVyOiAnI2ZmZmZmZicsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGRhbmdlcjoge1xyXG4gICAgICAgICAgICAgICAgbWFpbjogJyNiNjAwMDAnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHRleHQ6IHtcclxuICAgICAgICAgICAgICAgIG1haW46ICcjZThlOWViJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59O1xyXG4iLCJpbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IExvYWRlcldyYXBwZXIgPSBjc3NgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxuXHJcbiAgICA+IC5sb2FkZXIge1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuYDtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgKiBhcyBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xyXG5pbXBvcnQgUmVhY3RMb2FkZXJTcGlubmVyIGZyb20gJ3JlYWN0LWxvYWRlci1zcGlubmVyJztcclxuXHJcbmV4cG9ydCBjb25zdCBMb2FkZXIgPSBzdHlsZWQoKHtjbGFzc05hbWV9KSA9PlxyXG4gICAgPGRpdiB7Li4ue2NsYXNzTmFtZTogY2xhc3NuYW1lcyhjbGFzc05hbWUsICdsb2FkZXItd3JhcHBlcicpfX0+XHJcbiAgICAgICAgPFJlYWN0TG9hZGVyU3Bpbm5lciB7Li4ue2NsYXNzTmFtZTogJ2xvYWRlcicsIGNvbG9yOiAnYmxhY2snfX0vPlxyXG4gICAgPC9kaXY+XHJcbilgJHtzdHlsZXMuTG9hZGVyV3JhcHBlcn1gO1xyXG4iLCJpbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEJ1dHRvbiA9IGNzc2BcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIHBhZGRpbmc6IDFweCAxMHB4O1xyXG5gO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBCdXR0b24gPSBzdHlsZWQoKHtjbGFzc05hbWUsIGNoaWxkcmVufSkgPT5cclxuICAgIDxidXR0b24gey4uLntjbGFzc05hbWV9fT57Y2hpbGRyZW59PC9idXR0b24+XHJcbilgJHtzdHlsZXMuQnV0dG9ufWA7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7Y3NzfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCBNZWRpYVF1ZXJ5IGZyb20gJ3JlYWN0LXJlc3BvbnNpdmUnO1xyXG5cclxuY29uc3QgbW9iaWxlTWF4V2lkdGggPSA2MDA7XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0Q29sb3IgPSAoa2V5LCB0b25lID0gJ21haW4nKSA9PiAoe3RoZW1lfSkgPT4gdGhlbWUuY29sb3JzW2tleV1bdG9uZV07XHJcblxyXG5leHBvcnQgY29uc3QgaXNNb2JpbGUgPSBzdHlsZSA9PiAoKSA9PiBjc3NgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogJHttb2JpbGVNYXhXaWR0aH1weCkge1xyXG4gICAgICAgICR7c3R5bGV9O1xyXG4gICAgfVxyXG5gO1xyXG5cclxuZXhwb3J0IGNvbnN0IE1vYmlsZU1lZGlhUXVlcnkgPSAoe2NoaWxkcmVufSkgPT4gPE1lZGlhUXVlcnkgey4uLnttYXhEZXZpY2VXaWR0aDogbW9iaWxlTWF4V2lkdGh9fT57Y2hpbGRyZW59PC9NZWRpYVF1ZXJ5PjtcclxuXHJcbmV4cG9ydCBjb25zdCBQQ01lZGlhUXVlcnkgPSAoe2NoaWxkcmVufSkgPT4gPE1lZGlhUXVlcnkgey4uLnttaW5EZXZpY2VXaWR0aDogbW9iaWxlTWF4V2lkdGh9fT57Y2hpbGRyZW59PC9NZWRpYVF1ZXJ5PjtcclxuIiwiaW1wb3J0IHtjc3N9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IHtnZXRDb2xvcn0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcblxyXG5leHBvcnQgY29uc3QgRGVncmVlcyA9IGNzc2BcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgXHJcbiAgICA+IC5oZWFkZXIge1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCA1cHg7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR7Z2V0Q29sb3IoJ3ByaW1hcnknKX07XHJcbiAgICB9XHJcbiAgICBcclxuICAgID4gLmNvbnRlbnQge1xyXG4gICAgXHJcbiAgICAgICAgPiAudmFsdWUge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMnB4O1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgJjphZnRlciB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnwrAnOyAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICBcclxuICAgIH1cclxuICAgIFxyXG5gO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuXHJcbmV4cG9ydCBjb25zdCBEZWdyZWVzID0gc3R5bGVkKCh7Y2xhc3NOYW1lLCB2YWx1ZSwgdW5pdCwgdHlwZX0pID0+XHJcbiAgICA8ZGl2IHsuLi57Y2xhc3NOYW1lfX0+XHJcbiAgICAgICAge3R5cGUgJiYgPGRpdiBjbGFzc05hbWU9J2hlYWRlcic+e3R5cGV9PC9kaXY+fVxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd2YWx1ZSc+e3ZhbHVlfTwvc3Bhbj5cclxuICAgICAgICAgICAgPHNwYW4+e3VuaXR9PC9zcGFuPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+XHJcbilgJHtzdHlsZXMuRGVncmVlc31gO1xyXG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5leHBvcnQgdmFyIERlZmF1bHRDb250ZXh0ID0ge1xuICBjb2xvcjogdW5kZWZpbmVkLFxuICBzaXplOiB1bmRlZmluZWQsXG4gIGNsYXNzTmFtZTogdW5kZWZpbmVkLFxuICBzdHlsZTogdW5kZWZpbmVkLFxuICBhdHRyOiB1bmRlZmluZWRcbn07XG5leHBvcnQgdmFyIEljb25Db250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCAmJiBSZWFjdC5jcmVhdGVDb250ZXh0KERlZmF1bHRDb250ZXh0KTsiLCJ2YXIgX19hc3NpZ24gPSB0aGlzICYmIHRoaXMuX19hc3NpZ24gfHwgZnVuY3Rpb24gKCkge1xuICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHQpIHtcbiAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgIHMgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSkgdFtwXSA9IHNbcF07XG4gICAgfVxuXG4gICAgcmV0dXJuIHQ7XG4gIH07XG5cbiAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59O1xuXG52YXIgX19yZXN0ID0gdGhpcyAmJiB0aGlzLl9fcmVzdCB8fCBmdW5jdGlvbiAocywgZSkge1xuICB2YXIgdCA9IHt9O1xuXG4gIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSAmJiBlLmluZGV4T2YocCkgPCAwKSB0W3BdID0gc1twXTtcblxuICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpIGZvciAodmFyIGkgPSAwLCBwID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhzKTsgaSA8IHAubGVuZ3RoOyBpKyspIGlmIChlLmluZGV4T2YocFtpXSkgPCAwKSB0W3BbaV1dID0gc1twW2ldXTtcbiAgcmV0dXJuIHQ7XG59O1xuXG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJY29uQ29udGV4dCwgRGVmYXVsdENvbnRleHQgfSBmcm9tICcuL2ljb25Db250ZXh0JztcblxuZnVuY3Rpb24gVHJlZTJFbGVtZW50KHRyZWUpIHtcbiAgcmV0dXJuIHRyZWUgJiYgdHJlZS5tYXAoZnVuY3Rpb24gKG5vZGUsIGkpIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChub2RlLnRhZywgX19hc3NpZ24oe1xuICAgICAga2V5OiBpXG4gICAgfSwgbm9kZS5hdHRyKSwgVHJlZTJFbGVtZW50KG5vZGUuY2hpbGQpKTtcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBHZW5JY29uKGRhdGEpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChwcm9wcykge1xuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KEljb25CYXNlLCBfX2Fzc2lnbih7XG4gICAgICBhdHRyOiBfX2Fzc2lnbih7fSwgZGF0YS5hdHRyKVxuICAgIH0sIHByb3BzKSwgVHJlZTJFbGVtZW50KGRhdGEuY2hpbGQpKTtcbiAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBJY29uQmFzZShwcm9wcykge1xuICB2YXIgZWxlbSA9IGZ1bmN0aW9uIChjb25mKSB7XG4gICAgdmFyIGNvbXB1dGVkU2l6ZSA9IHByb3BzLnNpemUgfHwgY29uZi5zaXplIHx8IFwiMWVtXCI7XG4gICAgdmFyIGNsYXNzTmFtZTtcbiAgICBpZiAoY29uZi5jbGFzc05hbWUpIGNsYXNzTmFtZSA9IGNvbmYuY2xhc3NOYW1lO1xuICAgIGlmIChwcm9wcy5jbGFzc05hbWUpIGNsYXNzTmFtZSA9IChjbGFzc05hbWUgPyBjbGFzc05hbWUgKyAnICcgOiAnJykgKyBwcm9wcy5jbGFzc05hbWU7XG5cbiAgICB2YXIgYXR0ciA9IHByb3BzLmF0dHIsXG4gICAgICAgIHRpdGxlID0gcHJvcHMudGl0bGUsXG4gICAgICAgIHN2Z1Byb3BzID0gX19yZXN0KHByb3BzLCBbXCJhdHRyXCIsIFwidGl0bGVcIl0pO1xuXG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19hc3NpZ24oe1xuICAgICAgc3Ryb2tlOiBcImN1cnJlbnRDb2xvclwiLFxuICAgICAgZmlsbDogXCJjdXJyZW50Q29sb3JcIixcbiAgICAgIHN0cm9rZVdpZHRoOiBcIjBcIlxuICAgIH0sIGNvbmYuYXR0ciwgYXR0ciwgc3ZnUHJvcHMsIHtcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lLFxuICAgICAgc3R5bGU6IF9fYXNzaWduKHtcbiAgICAgICAgY29sb3I6IHByb3BzLmNvbG9yIHx8IGNvbmYuY29sb3JcbiAgICAgIH0sIGNvbmYuc3R5bGUsIHByb3BzLnN0eWxlKSxcbiAgICAgIGhlaWdodDogY29tcHV0ZWRTaXplLFxuICAgICAgd2lkdGg6IGNvbXB1dGVkU2l6ZSxcbiAgICAgIHhtbG5zOiBcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICB9KSwgdGl0bGUgJiYgUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIG51bGwsIHRpdGxlKSwgcHJvcHMuY2hpbGRyZW4pO1xuICB9O1xuXG4gIHJldHVybiBJY29uQ29udGV4dCAhPT0gdW5kZWZpbmVkID8gUmVhY3QuY3JlYXRlRWxlbWVudChJY29uQ29udGV4dC5Db25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGNvbmYpIHtcbiAgICByZXR1cm4gZWxlbShjb25mKTtcbiAgfSkgOiBlbGVtKERlZmF1bHRDb250ZXh0KTtcbn0iLCIvLyBUSElTIEZJTEUgSVMgQVVUTyBHRU5FUkFURURcbmltcG9ydCB7IEdlbkljb24gfSBmcm9tICcuLi9saWInO1xuZXhwb3J0IGZ1bmN0aW9uIE1kM0RSb3RhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy41MiAyMS40OEM0LjI1IDE5Ljk0IDEuOTEgMTYuNzYgMS41NSAxM0guMDVDLjU2IDE5LjE2IDUuNzEgMjQgMTIgMjRsLjY2LS4wMy0zLjgxLTMuODEtMS4zMyAxLjMyem0uODktNi41MmMtLjE5IDAtLjM3LS4wMy0uNTItLjA4LS4xNi0uMDYtLjI5LS4xMy0uNC0uMjQtLjExLS4xLS4yLS4yMi0uMjYtLjM3LS4wNi0uMTQtLjA5LS4zLS4wOS0uNDdoLTEuM2MwIC4zNi4wNy42OC4yMS45NS4xNC4yNy4zMy41LjU2LjY5LjI0LjE4LjUxLjMyLjgyLjQxLjMuMS42Mi4xNS45Ni4xNS4zNyAwIC43Mi0uMDUgMS4wMy0uMTUuMzItLjEuNi0uMjUuODMtLjQ0cy40Mi0uNDMuNTUtLjcyYy4xMy0uMjkuMi0uNjEuMi0uOTcgMC0uMTktLjAyLS4zOC0uMDctLjU2LS4wNS0uMTgtLjEyLS4zNS0uMjMtLjUxLS4xLS4xNi0uMjQtLjMtLjQtLjQzLS4xNy0uMTMtLjM3LS4yMy0uNjEtLjMxLjItLjA5LjM3LS4yLjUyLS4zMy4xNS0uMTMuMjctLjI3LjM3LS40Mi4xLS4xNS4xNy0uMy4yMi0uNDYuMDUtLjE2LjA3LS4zMi4wNy0uNDggMC0uMzYtLjA2LS42OC0uMTgtLjk2LS4xMi0uMjgtLjI5LS41MS0uNTEtLjY5LS4yLS4xOS0uNDctLjMzLS43Ny0uNDNDOS4xIDguMDUgOC43NiA4IDguMzkgOGMtLjM2IDAtLjY5LjA1LTEgLjE2LS4zLjExLS41Ny4yNi0uNzkuNDUtLjIxLjE5LS4zOC40MS0uNTEuNjctLjEyLjI2LS4xOC41NC0uMTguODVoMS4zYzAtLjE3LjAzLS4zMi4wOS0uNDVzLjE0LS4yNS4yNS0uMzRjLjExLS4wOS4yMy0uMTcuMzgtLjIyLjE1LS4wNS4zLS4wOC40OC0uMDguNCAwIC43LjEuODkuMzEuMTkuMi4yOS40OS4yOS44NiAwIC4xOC0uMDMuMzQtLjA4LjQ5LS4wNS4xNS0uMTQuMjctLjI1LjM3LS4xMS4xLS4yNS4xOC0uNDEuMjQtLjE2LjA2LS4zNi4wOS0uNTguMDlINy41djEuMDNoLjc3Yy4yMiAwIC40Mi4wMi42LjA3cy4zMy4xMy40NS4yM2MuMTIuMTEuMjIuMjQuMjkuNC4wNy4xNi4xLjM1LjEuNTcgMCAuNDEtLjEyLjcyLS4zNS45My0uMjMuMjMtLjU1LjMzLS45NS4zM3ptOC41NS01LjkyYy0uMzItLjMzLS43LS41OS0xLjE0LS43Ny0uNDMtLjE4LS45Mi0uMjctMS40Ni0uMjdIMTJ2OGgyLjNjLjU1IDAgMS4wNi0uMDkgMS41MS0uMjcuNDUtLjE4Ljg0LS40MyAxLjE2LS43Ni4zMi0uMzMuNTctLjczLjc0LTEuMTkuMTctLjQ3LjI2LS45OS4yNi0xLjU3di0uNGMwLS41OC0uMDktMS4xLS4yNi0xLjU3LS4xOC0uNDctLjQzLS44Ny0uNzUtMS4yem0tLjM5IDMuMTZjMCAuNDItLjA1Ljc5LS4xNCAxLjEzLS4xLjMzLS4yNC42Mi0uNDMuODUtLjE5LjIzLS40My40MS0uNzEuNTMtLjI5LjEyLS42Mi4xOC0uOTkuMThoLS45MVY5LjEyaC45N2MuNzIgMCAxLjI3LjIzIDEuNjQuNjkuMzguNDYuNTcgMS4xMi41NyAxLjk5di40ek0xMiAwbC0uNjYuMDMgMy44MSAzLjgxIDEuMzMtMS4zM2MzLjI3IDEuNTUgNS42MSA0LjcyIDUuOTYgOC40OGgxLjVDMjMuNDQgNC44NCAxOC4yOSAwIDEyIDB6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWNjZXNzaWJpbGl0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMmMxLjEgMCAyIC45IDIgMnMtLjkgMi0yIDItMi0uOS0yLTIgLjktMiAyLTJ6bTkgN2gtNnYxM2gtMnYtNmgtMnY2SDlWOUgzVjdoMTh2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBY2Nlc3NpYmxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiNFwiLFwiclwiOlwiMlwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDEzdi0yYy0xLjU0LjAyLTMuMDktLjc1LTQuMDctMS44M2wtMS4yOS0xLjQzYy0uMTctLjE5LS4zOC0uMzQtLjYxLS40NS0uMDEgMC0uMDEtLjAxLS4wMi0uMDFIMTNjLS4zNS0uMi0uNzUtLjMtMS4xOS0uMjZDMTAuNzYgNy4xMSAxMCA4LjA0IDEwIDkuMDlWMTVjMCAxLjEuOSAyIDIgMmg1djVoMnYtNS41YzAtMS4xLS45LTItMi0yaC0zdi0zLjQ1YzEuMjkgMS4wNyAzLjI1IDEuOTQgNSAxLjk1em0tNi4xNyA1Yy0uNDEgMS4xNi0xLjUyIDItMi44MyAyLTEuNjYgMC0zLTEuMzQtMy0zIDAtMS4zMS44NC0yLjQxIDItMi44M1YxMi4xYy0yLjI4LjQ2LTQgMi40OC00IDQuOSAwIDIuNzYgMi4yNCA1IDUgNSAyLjQyIDAgNC40NC0xLjcyIDQuOS00aC0yLjA3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFjY291bnRCYWxhbmNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDEwdjdoM3YtN0g0em02IDB2N2gzdi03aC0zek0yIDIyaDE5di0zSDJ2M3ptMTQtMTJ2N2gzdi03aC0zem0tNC41LTlMMiA2djJoMTlWNmwtOS41LTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWNjb3VudEJhbGFuY2VXYWxsZXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDE4djFjMCAxLjEtLjkgMi0yIDJINWMtMS4xMSAwLTItLjktMi0yVjVjMC0xLjEuODktMiAyLTJoMTRjMS4xIDAgMiAuOSAyIDJ2MWgtOWMtMS4xMSAwLTIgLjktMiAydjhjMCAxLjEuODkgMiAyIDJoOXptLTktMmgxMFY4SDEydjh6bTQtMi41Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBY2NvdW50Qm94IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDV2MTRjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMkg1Yy0xLjExIDAtMiAuOS0yIDJ6bTEyIDRjMCAxLjY2LTEuMzQgMy0zIDNzLTMtMS4zNC0zLTMgMS4zNC0zIDMtMyAzIDEuMzQgMyAzem0tOSA4YzAtMiA0LTMuMSA2LTMuMXM2IDEuMSA2IDMuMXYxSDZ2LTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWNjb3VudENpcmNsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptMCAzYzEuNjYgMCAzIDEuMzQgMyAzcy0xLjM0IDMtMyAzLTMtMS4zNC0zLTMgMS4zNC0zIDMtM3ptMCAxNC4yYy0yLjUgMC00LjcxLTEuMjgtNi0zLjIyLjAzLTEuOTkgNC0zLjA4IDYtMy4wOCAxLjk5IDAgNS45NyAxLjA5IDYgMy4wOC0xLjI5IDEuOTQtMy41IDMuMjItNiAzLjIyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkZFNob3BwaW5nQ2FydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEgOWgyVjZoM1Y0aC0zVjFoLTJ2M0g4djJoM3Yzem0tNCA5Yy0xLjEgMC0xLjk5LjktMS45OSAyUzUuOSAyMiA3IDIyczItLjkgMi0yLS45LTItMi0yem0xMCAwYy0xLjEgMC0xLjk5LjktMS45OSAycy44OSAyIDEuOTkgMiAyLS45IDItMi0uOS0yLTItMnptLTkuODMtMy4yNWwuMDMtLjEyLjktMS42M2g3LjQ1Yy43NSAwIDEuNDEtLjQxIDEuNzUtMS4wM2wzLjg2LTcuMDFMMTkuNDIgNGgtLjAxbC0xLjEgMi0yLjc2IDVIOC41M2wtLjEzLS4yN0w2LjE2IDZsLS45NS0yLS45NC0ySDF2MmgybDMuNiA3LjU5LTEuMzUgMi40NWMtLjE2LjI4LS4yNS42MS0uMjUuOTYgMCAxLjEuOSAyIDIgMmgxMnYtMkg3LjQyYy0uMTMgMC0uMjUtLjExLS4yNS0uMjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWxhcm0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDUuNzJsLTQuNi0zLjg2LTEuMjkgMS41MyA0LjYgMy44NkwyMiA1Ljcyek03Ljg4IDMuMzlMNi42IDEuODYgMiA1LjcxbDEuMjkgMS41MyA0LjU5LTMuODV6TTEyLjUgOEgxMXY2bDQuNzUgMi44NS43NS0xLjIzLTQtMi4zN1Y4ek0xMiA0Yy00Ljk3IDAtOSA0LjAzLTkgOXM0LjAyIDkgOSA5YzQuOTcgMCA5LTQuMDMgOS05cy00LjAzLTktOS05em0wIDE2Yy0zLjg3IDAtNy0zLjEzLTctN3MzLjEzLTcgNy03IDcgMy4xMyA3IDctMy4xMyA3LTcgN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBbGFybUFkZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy44OCAzLjM5TDYuNiAxLjg2IDIgNS43MWwxLjI5IDEuNTMgNC41OS0zLjg1ek0yMiA1LjcybC00LjYtMy44Ni0xLjI5IDEuNTMgNC42IDMuODZMMjIgNS43MnpNMTIgNGMtNC45NyAwLTkgNC4wMy05IDlzNC4wMiA5IDkgOWM0Ljk3IDAgOS00LjAzIDktOXMtNC4wMy05LTktOXptMCAxNmMtMy44NyAwLTctMy4xMy03LTdzMy4xMy03IDctNyA3IDMuMTMgNyA3LTMuMTMgNy03IDd6bTEtMTFoLTJ2M0g4djJoM3YzaDJ2LTNoM3YtMmgtM1Y5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFsYXJtT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA2YzMuODcgMCA3IDMuMTMgNyA3IDAgLjg0LS4xNiAxLjY1LS40MyAyLjRsMS41MiAxLjUyYy41OC0xLjE5LjkxLTIuNTEuOTEtMy45MiAwLTQuOTctNC4wMy05LTktOS0xLjQxIDAtMi43My4zMy0zLjkyLjkxTDkuNiA2LjQzQzEwLjM1IDYuMTYgMTEuMTYgNiAxMiA2em0xMC0uMjhsLTQuNi0zLjg2LTEuMjkgMS41MyA0LjYgMy44NkwyMiA1Ljcyek0yLjkyIDIuMjlMMS42NSAzLjU3IDIuOTggNC45bC0xLjExLjkzIDEuNDIgMS40MiAxLjExLS45NC44LjhDMy44MyA4LjY5IDMgMTAuNzUgMyAxM2MwIDQuOTcgNC4wMiA5IDkgOSAyLjI1IDAgNC4zMS0uODMgNS44OS0yLjJsMi4yIDIuMiAxLjI3LTEuMjdMMy44OSAzLjI3bC0uOTctLjk4em0xMy41NSAxNi4xQzE1LjI2IDE5LjM5IDEzLjcgMjAgMTIgMjBjLTMuODcgMC03LTMuMTMtNy03IDAtMS43LjYxLTMuMjYgMS42MS00LjQ3bDkuODYgOS44NnpNOC4wMiAzLjI4TDYuNiAxLjg2bC0uODYuNzEgMS40MiAxLjQyLjg2LS43MXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBbGFybU9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiA1LjcybC00LjYtMy44Ni0xLjI5IDEuNTMgNC42IDMuODZMMjIgNS43MnpNNy44OCAzLjM5TDYuNiAxLjg2IDIgNS43MWwxLjI5IDEuNTMgNC41OS0zLjg1ek0xMiA0Yy00Ljk3IDAtOSA0LjAzLTkgOXM0LjAyIDkgOSA5YzQuOTcgMCA5LTQuMDMgOS05cy00LjAzLTktOS05em0wIDE2Yy0zLjg3IDAtNy0zLjEzLTctN3MzLjEzLTcgNy03IDcgMy4xMyA3IDctMy4xMyA3LTcgN3ptLTEuNDYtNS40N0w4LjQxIDEyLjRsLTEuMDYgMS4wNiAzLjE4IDMuMTggNi02LTEuMDYtMS4wNi00LjkzIDQuOTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWxsT3V0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi4yMSA0LjE2bDQgNHYtNHptNCAxMmwtNCA0aDR6bS0xMiA0bC00LTR2NHptLTQtMTJsNC00aC00em0xMi45NS0uOTVjLTIuNzMtMi43My03LjE3LTIuNzMtOS45IDBzLTIuNzMgNy4xNyAwIDkuOSA3LjE3IDIuNzMgOS45IDAgMi43My03LjE2IDAtOS45em0tMS4xIDguOGMtMi4xMyAyLjEzLTUuNTcgMi4xMy03LjcgMHMtMi4xMy01LjU3IDAtNy43IDUuNTctMi4xMyA3LjcgMCAyLjEzIDUuNTcgMCA3Ljd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQW5kcm9pZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiAxOGMwIC41NS40NSAxIDEgMWgxdjMuNWMwIC44My42NyAxLjUgMS41IDEuNXMxLjUtLjY3IDEuNS0xLjVWMTloMnYzLjVjMCAuODMuNjcgMS41IDEuNSAxLjVzMS41LS42NyAxLjUtMS41VjE5aDFjLjU1IDAgMS0uNDUgMS0xVjhINnYxMHpNMy41IDhDMi42NyA4IDIgOC42NyAyIDkuNXY3YzAgLjgzLjY3IDEuNSAxLjUgMS41UzUgMTcuMzMgNSAxNi41di03QzUgOC42NyA0LjMzIDggMy41IDh6bTE3IDBjLS44MyAwLTEuNS42Ny0xLjUgMS41djdjMCAuODMuNjcgMS41IDEuNSAxLjVzMS41LS42NyAxLjUtMS41di03YzAtLjgzLS42Ny0xLjUtMS41LTEuNXptLTQuOTctNS44NGwxLjMtMS4zYy4yLS4yLjItLjUxIDAtLjcxLS4yLS4yLS41MS0uMi0uNzEgMGwtMS40OCAxLjQ4QzEzLjg1IDEuMjMgMTIuOTUgMSAxMiAxYy0uOTYgMC0xLjg2LjIzLTIuNjYuNjNMNy44NS4xNWMtLjItLjItLjUxLS4yLS43MSAwLS4yLjItLjIuNTEgMCAuNzFsMS4zMSAxLjMxQzYuOTcgMy4yNiA2IDUuMDEgNiA3aDEyYzAtMS45OS0uOTctMy43NS0yLjQ3LTQuODR6TTEwIDVIOVY0aDF2MXptNSAwaC0xVjRoMXYxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFubm91bmNlbWVudCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMkg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMjJsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS03IDloLTJWNWgydjZ6bTAgNGgtMnYtMmgydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQXNwZWN0UmF0aW8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDEyaC0ydjNoLTN2Mmg1di01ek03IDloM1Y3SDV2NWgyVjl6bTE0LTZIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2LjAxSDNWNC45OWgxOHYxNC4wMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBc3Nlc3NtZW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnpNOSAxN0g3di03aDJ2N3ptNCAwaC0yVjdoMnYxMHptNCAwaC0ydi00aDJ2NHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBc3NpZ25tZW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzaC00LjE4QzE0LjQgMS44NCAxMy4zIDEgMTIgMWMtMS4zIDAtMi40Ljg0LTIuODIgMkg1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bS03IDBjLjU1IDAgMSAuNDUgMSAxcy0uNDUgMS0xIDEtMS0uNDUtMS0xIC40NS0xIDEtMXptMiAxNEg3di0yaDd2MnptMy00SDd2LTJoMTB2MnptMC00SDdWN2gxMHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFzc2lnbm1lbnRJbmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNoLTQuMThDMTQuNCAxLjg0IDEzLjMgMSAxMiAxYy0xLjMgMC0yLjQuODQtMi44MiAySDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTcgMGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMS0xLS40NS0xLTEgLjQ1LTEgMS0xem0wIDRjMS42NiAwIDMgMS4zNCAzIDNzLTEuMzQgMy0zIDMtMy0xLjM0LTMtMyAxLjM0LTMgMy0zem02IDEySDZ2LTEuNGMwLTIgNC0zLjEgNi0zLjFzNiAxLjEgNiAzLjFWMTl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQXNzaWdubWVudExhdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNoLTQuMThDMTQuNCAxLjg0IDEzLjMgMSAxMiAxYy0xLjMgMC0yLjQuODQtMi44MiAySDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTYgMTVoLTJ2LTJoMnYyem0wLTRoLTJWOGgydjZ6bS0xLTljLS41NSAwLTEtLjQ1LTEtMXMuNDUtMSAxLTEgMSAuNDUgMSAxLS40NSAxLTEgMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBc3NpZ25tZW50UmV0dXJuIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzaC00LjE4QzE0LjQgMS44NCAxMy4zIDEgMTIgMWMtMS4zIDAtMi40Ljg0LTIuODIgMkg1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bS03IDBjLjU1IDAgMSAuNDUgMSAxcy0uNDUgMS0xIDEtMS0uNDUtMS0xIC40NS0xIDEtMXptNCAxMmgtNHYzbC01LTUgNS01djNoNHY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFzc2lnbm1lbnRSZXR1cm5lZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM2gtNC4xOEMxNC40IDEuODQgMTMuMyAxIDEyIDFjLTEuMyAwLTIuNC44NC0yLjgyIDJINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tNyAwYy41NSAwIDEgLjQ1IDEgMXMtLjQ1IDEtMSAxLTEtLjQ1LTEtMSAuNDUtMSAxLTF6bTAgMTVsLTUtNWgzVjloNHY0aDNsLTUgNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBc3NpZ25tZW50VHVybmVkSW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNoLTQuMThDMTQuNCAxLjg0IDEzLjMgMSAxMiAxYy0xLjMgMC0yLjQuODQtMi44MiAySDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTcgMGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMS0xLS40NS0xLTEgLjQ1LTEgMS0xem0tMiAxNGwtNC00IDEuNDEtMS40MUwxMCAxNC4xN2w2LjU5LTYuNTlMMTggOWwtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEF1dG9yZW5ldyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNnYzbDQtNC00LTR2M2MtNC40MiAwLTggMy41OC04IDggMCAxLjU3LjQ2IDMuMDMgMS4yNCA0LjI2TDYuNyAxNC44Yy0uNDUtLjgzLS43LTEuNzktLjctMi44IDAtMy4zMSAyLjY5LTYgNi02em02Ljc2IDEuNzRMMTcuMyA5LjJjLjQ0Ljg0LjcgMS43OS43IDIuOCAwIDMuMzEtMi42OSA2LTYgNnYtM2wtNCA0IDQgNHYtM2M0LjQyIDAgOC0zLjU4IDgtOCAwLTEuNTctLjQ2LTMuMDMtMS4yNC00LjI2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhY2t1cCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuMzUgMTAuMDRDMTguNjcgNi41OSAxNS42NCA0IDEyIDQgOS4xMSA0IDYuNiA1LjY0IDUuMzUgOC4wNCAyLjM0IDguMzYgMCAxMC45MSAwIDE0YzAgMy4zMSAyLjY5IDYgNiA2aDEzYzIuNzYgMCA1LTIuMjQgNS01IDAtMi42NC0yLjA1LTQuNzgtNC42NS00Ljk2ek0xNCAxM3Y0aC00di00SDdsNS01IDUgNWgtM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCb29rIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCAySDZjLTEuMSAwLTIgLjktMiAydjE2YzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnpNNiA0aDV2OGwtMi41LTEuNUw2IDEyVjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQm9va21hcmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDNIN2MtMS4xIDAtMS45OS45LTEuOTkgMkw1IDIxbDctMyA3IDNWNWMwLTEuMS0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCb29rbWFya0JvcmRlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgM0g3Yy0xLjEgMC0xLjk5LjktMS45OSAyTDUgMjFsNy0zIDcgM1Y1YzAtMS4xLS45LTItMi0yem0wIDE1bC01LTIuMThMNyAxOFY1aDEwdjEzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJ1Z1JlcG9ydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgOGgtMi44MWMtLjQ1LS43OC0xLjA3LTEuNDUtMS44Mi0xLjk2TDE3IDQuNDEgMTUuNTkgM2wtMi4xNyAyLjE3QzEyLjk2IDUuMDYgMTIuNDkgNSAxMiA1Yy0uNDkgMC0uOTYuMDYtMS40MS4xN0w4LjQxIDMgNyA0LjQxbDEuNjIgMS42M0M3Ljg4IDYuNTUgNy4yNiA3LjIyIDYuODEgOEg0djJoMi4wOWMtLjA1LjMzLS4wOS42Ni0uMDkgMXYxSDR2MmgydjFjMCAuMzQuMDQuNjcuMDkgMUg0djJoMi44MWMxLjA0IDEuNzkgMi45NyAzIDUuMTkgM3M0LjE1LTEuMjEgNS4xOS0zSDIwdi0yaC0yLjA5Yy4wNS0uMzMuMDktLjY2LjA5LTF2LTFoMnYtMmgtMnYtMWMwLS4zNC0uMDQtLjY3LS4wOS0xSDIwVjh6bS02IDhoLTR2LTJoNHYyem0wLTRoLTR2LTJoNHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJ1aWxkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMi43IDE5bC05LjEtOS4xYy45LTIuMy40LTUtMS41LTYuOS0yLTItNS0yLjQtNy40LTEuM0w5IDYgNiA5IDEuNiA0LjdDLjQgNy4xLjkgMTAuMSAyLjkgMTIuMWMxLjkgMS45IDQuNiAyLjQgNi45IDEuNWw5LjEgOS4xYy40LjQgMSAuNCAxLjQgMGwyLjMtMi4zYy41LS40LjUtMS4xLjEtMS40elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENhY2hlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgOGwtNCA0aDNjMCAzLjMxLTIuNjkgNi02IDYtMS4wMSAwLTEuOTctLjI1LTIuOC0uN2wtMS40NiAxLjQ2QzguOTcgMTkuNTQgMTAuNDMgMjAgMTIgMjBjNC40MiAwIDgtMy41OCA4LThoM2wtNC00ek02IDEyYzAtMy4zMSAyLjY5LTYgNi02IDEuMDEgMCAxLjk3LjI1IDIuOC43bDEuNDYtMS40NkMxNS4wMyA0LjQ2IDEzLjU3IDQgMTIgNGMtNC40MiAwLTggMy41OC04IDhIMWw0IDQgNC00SDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FtZXJhRW5oYW5jZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAzTDcuMTcgNUg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjdjMC0xLjEtLjktMi0yLTJoLTMuMTdMMTUgM0g5em0zIDE1Yy0yLjc2IDAtNS0yLjI0LTUtNXMyLjI0LTUgNS01IDUgMi4yNCA1IDUtMi4yNCA1LTUgNXptMC0xbDEuMjUtMi43NUwxNiAxM2wtMi43NS0xLjI1TDEyIDlsLTEuMjUgMi43NUw4IDEzbDIuNzUgMS4yNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYXJkR2lmdGNhcmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDZoLTIuMThjLjExLS4zMS4xOC0uNjUuMTgtMSAwLTEuNjYtMS4zNC0zLTMtMy0xLjA1IDAtMS45Ni41NC0yLjUgMS4zNWwtLjUuNjctLjUtLjY4QzEwLjk2IDIuNTQgMTAuMDUgMiA5IDIgNy4zNCAyIDYgMy4zNCA2IDVjMCAuMzUuMDcuNjkuMTggMUg0Yy0xLjExIDAtMS45OS44OS0xLjk5IDJMMiAxOWMwIDEuMTEuODkgMiAyIDJoMTZjMS4xMSAwIDItLjg5IDItMlY4YzAtMS4xMS0uODktMi0yLTJ6bS01LTJjLjU1IDAgMSAuNDUgMSAxcy0uNDUgMS0xIDEtMS0uNDUtMS0xIC40NS0xIDEtMXpNOSA0Yy41NSAwIDEgLjQ1IDEgMXMtLjQ1IDEtMSAxLTEtLjQ1LTEtMSAuNDUtMSAxLTF6bTExIDE1SDR2LTJoMTZ2MnptMC01SDRWOGg1LjA4TDcgMTAuODMgOC42MiAxMiAxMSA4Ljc2bDEtMS4zNiAxIDEuMzZMMTUuMzggMTIgMTcgMTAuODMgMTQuOTIgOEgyMHY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENhcmRNZW1iZXJzaGlwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAySDRjLTEuMTEgMC0yIC44OS0yIDJ2MTFjMCAxLjExLjg5IDIgMiAyaDR2NWw0LTIgNCAydi01aDRjMS4xMSAwIDItLjg5IDItMlY0YzAtMS4xMS0uODktMi0yLTJ6bTAgMTNINHYtMmgxNnYyem0wLTVINFY0aDE2djZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FyZFRyYXZlbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNmgtM1Y0YzAtMS4xMS0uODktMi0yLTJIOWMtMS4xMSAwLTIgLjg5LTIgMnYySDRjLTEuMTEgMC0yIC44OS0yIDJ2MTFjMCAxLjExLjg5IDIgMiAyaDE2YzEuMTEgMCAyLS44OSAyLTJWOGMwLTEuMTEtLjg5LTItMi0yek05IDRoNnYySDlWNHptMTEgMTVINHYtMmgxNnYyem0wLTVINFY4aDN2MmgyVjhoNnYyaDJWOGgzdjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hhbmdlSGlzdG9yeSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNy43N0wxOC4zOSAxOEg1LjYxTDEyIDcuNzdNMTIgNEwyIDIwaDIwTDEyIDR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hlY2tDaXJjbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bS0yIDE1bC01LTUgMS40MS0xLjQxTDEwIDE0LjE3bDcuNTktNy41OUwxOSA4bC05IDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hyb21lUmVhZGVyTW9kZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMgMTJoN3YxLjVoLTd6bTAtMi41aDdWMTFoLTd6bTAgNWg3VjE2aC03ek0yMSA0SDNjLTEuMSAwLTIgLjktMiAydjEzYzAgMS4xLjkgMiAyIDJoMThjMS4xIDAgMi0uOSAyLTJWNmMwLTEuMS0uOS0yLTItMnptMCAxNWgtOVY2aDl2MTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2xhc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDJINmMtMS4xIDAtMiAuOS0yIDJ2MTZjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yek02IDRoNXY4bC0yLjUtMS41TDYgMTJWNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb2RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LjQgMTYuNkw0LjggMTJsNC42LTQuNkw4IDZsLTYgNiA2IDYgMS40LTEuNHptNS4yIDBsNC42LTQuNi00LjYtNC42TDE2IDZsNiA2LTYgNi0xLjQtMS40elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENvbXBhcmVBcnJvd3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkuMDEgMTRIMnYyaDcuMDF2M0wxMyAxNWwtMy45OS00djN6bTUuOTgtMXYtM0gyMlY4aC03LjAxVjVMMTEgOWwzLjk5IDR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ29weXJpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC4wOCAxMC44NmMuMDUtLjMzLjE2LS42Mi4zLS44N3MuMzQtLjQ2LjU5LS42MmMuMjQtLjE1LjU0LS4yMi45MS0uMjMuMjMuMDEuNDQuMDUuNjMuMTMuMi4wOS4zOC4yMS41Mi4zNnMuMjUuMzMuMzQuNTMuMTMuNDIuMTQuNjRoMS43OWMtLjAyLS40Ny0uMTEtLjktLjI4LTEuMjlzLS40LS43My0uNy0xLjAxLS42Ni0uNS0xLjA4LS42Ni0uODgtLjIzLTEuMzktLjIzYy0uNjUgMC0xLjIyLjExLTEuNy4zNHMtLjg4LjUzLTEuMi45Mi0uNTYuODQtLjcxIDEuMzZTOCAxMS4yOSA4IDExLjg3di4yN2MwIC41OC4wOCAxLjEyLjIzIDEuNjRzLjM5Ljk3LjcxIDEuMzUuNzIuNjkgMS4yLjkxIDEuMDUuMzQgMS43LjM0Yy40NyAwIC45MS0uMDggMS4zMi0uMjNzLjc3LS4zNiAxLjA4LS42My41Ni0uNTguNzQtLjk0LjI5LS43NC4zLTEuMTVoLTEuNzljLS4wMS4yMS0uMDYuNC0uMTUuNThzLS4yMS4zMy0uMzYuNDYtLjMyLjIzLS41Mi4zYy0uMTkuMDctLjM5LjA5LS42LjEtLjM2LS4wMS0uNjYtLjA4LS44OS0uMjMtLjI1LS4xNi0uNDUtLjM3LS41OS0uNjJzLS4yNS0uNTUtLjMtLjg4LS4wOC0uNjctLjA4LTF2LS4yN2MwLS4zNS4wMy0uNjguMDgtMS4wMXpNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptMCAxOGMtNC40MSAwLTgtMy41OS04LThzMy41OS04IDgtOCA4IDMuNTkgOCA4LTMuNTkgOC04IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ3JlZGl0Q2FyZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNEg0Yy0xLjExIDAtMS45OS44OS0xLjk5IDJMMiAxOGMwIDEuMTEuODkgMiAyIDJoMTZjMS4xMSAwIDItLjg5IDItMlY2YzAtMS4xMS0uODktMi0yLTJ6bTAgMTRINHYtNmgxNnY2em0wLTEwSDRWNmgxNnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERhc2hib2FyZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAxM2g4VjNIM3YxMHptMCA4aDh2LTZIM3Y2em0xMCAwaDhWMTFoLTh2MTB6bTAtMTh2Nmg4VjNoLTh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGF0ZVJhbmdlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05IDExSDd2Mmgydi0yem00IDBoLTJ2Mmgydi0yem00IDBoLTJ2Mmgydi0yem0yLTdoLTFWMmgtMnYySDhWMkg2djJINWMtMS4xMSAwLTEuOTkuOS0xLjk5IDJMMyAyMGMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDE2SDVWOWgxNHYxMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREZWxldGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYgMTljMCAxLjEuOSAyIDIgMmg4YzEuMSAwIDItLjkgMi0yVjdINnYxMnpNMTkgNGgtMy41bC0xLTFoLTVsLTEgMUg1djJoMTRWNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREZWxldGVGb3JldmVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02IDE5YzAgMS4xLjkgMiAyIDJoOGMxLjEgMCAyLS45IDItMlY3SDZ2MTJ6bTIuNDYtNy4xMmwxLjQxLTEuNDFMMTIgMTIuNTlsMi4xMi0yLjEyIDEuNDEgMS40MUwxMy40MSAxNGwyLjEyIDIuMTItMS40MSAxLjQxTDEyIDE1LjQxbC0yLjEyIDIuMTItMS40MS0xLjQxTDEwLjU5IDE0bC0yLjEzLTIuMTJ6TTE1LjUgNGwtMS0xaC01bC0xIDFINXYyaDE0VjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGVzY3JpcHRpb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0IDJINmMtMS4xIDAtMS45OS45LTEuOTkgMkw0IDIwYzAgMS4xLjg5IDIgMS45OSAySDE4YzEuMSAwIDItLjkgMi0yVjhsLTYtNnptMiAxNkg4di0yaDh2MnptMC00SDh2LTJoOHYyem0tMy01VjMuNUwxOC41IDlIMTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRG5zIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxM0g0Yy0uNTUgMC0xIC40NS0xIDF2NmMwIC41NS40NSAxIDEgMWgxNmMuNTUgMCAxLS40NSAxLTF2LTZjMC0uNTUtLjQ1LTEtMS0xek03IDE5Yy0xLjEgMC0yLS45LTItMnMuOS0yIDItMiAyIC45IDIgMi0uOSAyLTIgMnpNMjAgM0g0Yy0uNTUgMC0xIC40NS0xIDF2NmMwIC41NS40NSAxIDEgMWgxNmMuNTUgMCAxLS40NSAxLTFWNGMwLS41NS0uNDUtMS0xLTF6TTcgOWMtMS4xIDAtMi0uOS0yLTJzLjktMiAyLTIgMiAuOSAyIDItLjkgMi0yIDJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRG9uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxNi4yTDQuOCAxMmwtMS40IDEuNEw5IDE5IDIxIDdsLTEuNC0xLjRMOSAxNi4yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERvbmVBbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDdsLTEuNDEtMS40MS02LjM0IDYuMzQgMS40MSAxLjQxTDE4IDd6bTQuMjQtMS40MUwxMS42NiAxNi4xNyA3LjQ4IDEybC0xLjQxIDEuNDFMMTEuNjYgMTlsMTItMTItMS40Mi0xLjQxek0uNDEgMTMuNDFMNiAxOWwxLjQxLTEuNDFMMS44MyAxMiAuNDEgMTMuNDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRG9udXRMYXJnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEgNS4wOFYyYy01IC41LTkgNC44MS05IDEwczQgOS41IDkgMTB2LTMuMDhjLTMtLjQ4LTYtMy40LTYtNi45MnMzLTYuNDQgNi02Ljkyek0xOC45NyAxMUgyMmMtLjQ3LTUtNC04LjUzLTktOXYzLjA4QzE2IDUuNTEgMTguNTQgOCAxOC45NyAxMXpNMTMgMTguOTJWMjJjNS0uNDcgOC41My00IDktOWgtMy4wM2MtLjQzIDMtMi45NyA1LjQ5LTUuOTcgNS45MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREb251dFNtYWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSA5LjE2VjJjLTUgLjUtOSA0Ljc5LTkgMTBzNCA5LjUgOSAxMHYtNy4xNmMtMS0uNDEtMi0xLjUyLTItMi44NHMxLTIuNDMgMi0yLjg0ek0xNC44NiAxMUgyMmMtLjQ4LTQuNzUtNC04LjUzLTktOXY3LjE2YzEgLjMgMS41Mi45OCAxLjg2IDEuODR6TTEzIDE0Ljg0VjIyYzUtLjQ3IDguNTItNC4yNSA5LTloLTcuMTRjLS4zNC44Ni0uODYgMS41NC0xLjg2IDEuODR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRWplY3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgMTdoMTR2Mkg1em03LTEyTDUuMzMgMTVoMTMuMzR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXVyb1N5bWJvbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgMTguNWMtMi41MSAwLTQuNjgtMS40Mi01Ljc2LTMuNUgxNXYtMkg4LjU4Yy0uMDUtLjMzLS4wOC0uNjYtLjA4LTFzLjAzLS42Ny4wOC0xSDE1VjlIOS4yNEMxMC4zMiA2LjkyIDEyLjUgNS41IDE1IDUuNWMxLjYxIDAgMy4wOS41OSA0LjIzIDEuNTdMMjEgNS4zQzE5LjQxIDMuODcgMTcuMyAzIDE1IDNjLTMuOTIgMC03LjI0IDIuNTEtOC40OCA2SDN2MmgzLjA2Yy0uMDQuMzMtLjA2LjY2LS4wNiAxIDAgLjM0LjAyLjY3LjA2IDFIM3YyaDMuNTJjMS4yNCAzLjQ5IDQuNTYgNiA4LjQ4IDYgMi4zMSAwIDQuNDEtLjg3IDYtMi4zbC0xLjc4LTEuNzdjLTEuMTMuOTgtMi42IDEuNTctNC4yMiAxLjU3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEV2ZW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyAxMmgtNXY1aDV2LTV6TTE2IDF2Mkg4VjFINnYySDVjLTEuMTEgMC0xLjk5LjktMS45OSAyTDMgMTljMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMmgtMVYxaC0yem0zIDE4SDVWOGgxNHYxMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFdmVudFNlYXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTh2M2gzdi0zaDEwdjNoM3YtNkg0em0xNS04aDN2M2gtM3pNMiAxMGgzdjNIMnptMTUgM0g3VjVjMC0xLjEuOS0yIDItMmg2YzEuMSAwIDIgLjkgMiAydjh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXhpdFRvQXBwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC4wOSAxNS41OUwxMS41IDE3bDUtNS01LTUtMS40MSAxLjQxTDEyLjY3IDExSDN2Mmg5LjY3bC0yLjU4IDIuNTl6TTE5IDNINWMtMS4xMSAwLTIgLjktMiAydjRoMlY1aDE0djE0SDV2LTRIM3Y0YzAgMS4xLjg5IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXhwbG9yZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTAuOWMtLjYxIDAtMS4xLjQ5LTEuMSAxLjFzLjQ5IDEuMSAxLjEgMS4xYy42MSAwIDEuMS0uNDkgMS4xLTEuMXMtLjQ5LTEuMS0xLjEtMS4xek0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0yLjE5IDEyLjE5TDYgMThsMy44MS04LjE5TDE4IDZsLTMuODEgOC4xOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFeHRlbnNpb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjUgMTFIMTlWN2MwLTEuMS0uOS0yLTItMmgtNFYzLjVDMTMgMi4xMiAxMS44OCAxIDEwLjUgMVM4IDIuMTIgOCAzLjVWNUg0Yy0xLjEgMC0xLjk5LjktMS45OSAydjMuOEgzLjVjMS40OSAwIDIuNyAxLjIxIDIuNyAyLjdzLTEuMjEgMi43LTIuNyAyLjdIMlYyMGMwIDEuMS45IDIgMiAyaDMuOHYtMS41YzAtMS40OSAxLjIxLTIuNyAyLjctMi43IDEuNDkgMCAyLjcgMS4yMSAyLjcgMi43VjIySDE3YzEuMSAwIDItLjkgMi0ydi00aDEuNWMxLjM4IDAgMi41LTEuMTIgMi41LTIuNVMyMS44OCAxMSAyMC41IDExelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZhY2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgMTEuNzVjLS42OSAwLTEuMjUuNTYtMS4yNSAxLjI1cy41NiAxLjI1IDEuMjUgMS4yNSAxLjI1LS41NiAxLjI1LTEuMjUtLjU2LTEuMjUtMS4yNS0xLjI1em02IDBjLS42OSAwLTEuMjUuNTYtMS4yNSAxLjI1cy41NiAxLjI1IDEuMjUgMS4yNSAxLjI1LS41NiAxLjI1LTEuMjUtLjU2LTEuMjUtMS4yNS0xLjI1ek0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQxIDAtOC0zLjU5LTgtOCAwLS4yOS4wMi0uNTguMDUtLjg2IDIuMzYtMS4wNSA0LjIzLTIuOTggNS4yMS01LjM3QzExLjA3IDguMzMgMTQuMDUgMTAgMTcuNDIgMTBjLjc4IDAgMS41My0uMDkgMi4yNS0uMjYuMjEuNzEuMzMgMS40Ny4zMyAyLjI2IDAgNC40MS0zLjU5IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZhdm9yaXRlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyMS4zNWwtMS40NS0xLjMyQzUuNCAxNS4zNiAyIDEyLjI4IDIgOC41IDIgNS40MiA0LjQyIDMgNy41IDNjMS43NCAwIDMuNDEuODEgNC41IDIuMDlDMTMuMDkgMy44MSAxNC43NiAzIDE2LjUgMyAxOS41OCAzIDIyIDUuNDIgMjIgOC41YzAgMy43OC0zLjQgNi44Ni04LjU1IDExLjU0TDEyIDIxLjM1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZhdm9yaXRlQm9yZGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi41IDNjLTEuNzQgMC0zLjQxLjgxLTQuNSAyLjA5QzEwLjkxIDMuODEgOS4yNCAzIDcuNSAzIDQuNDIgMyAyIDUuNDIgMiA4LjVjMCAzLjc4IDMuNCA2Ljg2IDguNTUgMTEuNTRMMTIgMjEuMzVsMS40NS0xLjMyQzE4LjYgMTUuMzYgMjIgMTIuMjggMjIgOC41IDIyIDUuNDIgMTkuNTggMyAxNi41IDN6bS00LjQgMTUuNTVsLS4xLjEtLjEtLjFDNy4xNCAxNC4yNCA0IDExLjM5IDQgOC41IDQgNi41IDUuNSA1IDcuNSA1YzEuNTQgMCAzLjA0Ljk5IDMuNTcgMi4zNmgxLjg3QzEzLjQ2IDUuOTkgMTQuOTYgNSAxNi41IDVjMiAwIDMuNSAxLjUgMy41IDMuNSAwIDIuODktMy4xNCA1Ljc0LTcuOSAxMC4wNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGZWVkYmFjayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMkg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMjJsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS03IDEyaC0ydi0yaDJ2MnptMC00aC0yVjZoMnY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbmRJblBhZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDE5LjU5VjhsLTYtNkg2Yy0xLjEgMC0xLjk5LjktMS45OSAyTDQgMjBjMCAxLjEuODkgMiAxLjk5IDJIMThjLjQ1IDAgLjg1LS4xNSAxLjE5LS40bC00LjQzLTQuNDNjLS44LjUyLTEuNzQuODMtMi43Ni44My0yLjc2IDAtNS0yLjI0LTUtNXMyLjI0LTUgNS01IDUgMi4yNCA1IDVjMCAxLjAyLS4zMSAxLjk2LS44MyAyLjc1TDIwIDE5LjU5ek05IDEzYzAgMS42NiAxLjM0IDMgMyAzczMtMS4zNCAzLTMtMS4zNC0zLTMtMy0zIDEuMzQtMyAzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbmRSZXBsYWNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSA2YzEuMzggMCAyLjYzLjU2IDMuNTQgMS40NkwxMiAxMGg2VjRsLTIuMDUgMi4wNUMxNC42OCA0Ljc4IDEyLjkzIDQgMTEgNGMtMy41MyAwLTYuNDMgMi42MS02LjkyIDZINi4xYy40Ni0yLjI4IDIuNDgtNCA0LjktNHptNS42NCA5LjE0Yy42Ni0uOSAxLjEyLTEuOTcgMS4yOC0zLjE0SDE1LjljLS40NiAyLjI4LTIuNDggNC00LjkgNC0xLjM4IDAtMi42My0uNTYtMy41NC0xLjQ2TDEwIDEySDR2NmwyLjA1LTIuMDVDNy4zMiAxNy4yMiA5LjA3IDE4IDExIDE4YzEuNTUgMCAyLjk4LS41MSA0LjE0LTEuMzZMMjAgMjEuNDkgMjEuNDkgMjBsLTQuODUtNC44NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaW5nZXJwcmludCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuODEgNC40N2MtLjA4IDAtLjE2LS4wMi0uMjMtLjA2QzE1LjY2IDMuNDIgMTQgMyAxMi4wMSAzYy0xLjk4IDAtMy44Ni40Ny01LjU3IDEuNDEtLjI0LjEzLS41NC4wNC0uNjgtLjItLjEzLS4yNC0uMDQtLjU1LjItLjY4QzcuODIgMi41MiA5Ljg2IDIgMTIuMDEgMmMyLjEzIDAgMy45OS40NyA2LjAzIDEuNTIuMjUuMTMuMzQuNDMuMjEuNjctLjA5LjE4LS4yNi4yOC0uNDQuMjh6TTMuNSA5LjcyYy0uMSAwLS4yLS4wMy0uMjktLjA5LS4yMy0uMTYtLjI4LS40Ny0uMTItLjcuOTktMS40IDIuMjUtMi41IDMuNzUtMy4yN0M5Ljk4IDQuMDQgMTQgNC4wMyAxNy4xNSA1LjY1YzEuNS43NyAyLjc2IDEuODYgMy43NSAzLjI1LjE2LjIyLjExLjU0LS4xMi43LS4yMy4xNi0uNTQuMTEtLjctLjEyLS45LTEuMjYtMi4wNC0yLjI1LTMuMzktMi45NC0yLjg3LTEuNDctNi41NC0xLjQ3LTkuNC4wMS0xLjM2LjctMi41IDEuNy0zLjQgMi45Ni0uMDguMTQtLjIzLjIxLS4zOS4yMXptNi4yNSAxMi4wN2MtLjEzIDAtLjI2LS4wNS0uMzUtLjE1LS44Ny0uODctMS4zNC0xLjQzLTIuMDEtMi42NC0uNjktMS4yMy0xLjA1LTIuNzMtMS4wNS00LjM0IDAtMi45NyAyLjU0LTUuMzkgNS42Ni01LjM5czUuNjYgMi40MiA1LjY2IDUuMzljMCAuMjgtLjIyLjUtLjUuNXMtLjUtLjIyLS41LS41YzAtMi40Mi0yLjA5LTQuMzktNC42Ni00LjM5LTIuNTcgMC00LjY2IDEuOTctNC42NiA0LjM5IDAgMS40NC4zMiAyLjc3LjkzIDMuODUuNjQgMS4xNSAxLjA4IDEuNjQgMS44NSAyLjQyLjE5LjIuMTkuNTEgMCAuNzEtLjExLjEtLjI0LjE1LS4zNy4xNXptNy4xNy0xLjg1Yy0xLjE5IDAtMi4yNC0uMy0zLjEtLjg5LTEuNDktMS4wMS0yLjM4LTIuNjUtMi4zOC00LjM5IDAtLjI4LjIyLS41LjUtLjVzLjUuMjIuNS41YzAgMS40MS43MiAyLjc0IDEuOTQgMy41Ni43MS40OCAxLjU0LjcxIDIuNTQuNzEuMjQgMCAuNjQtLjAzIDEuMDQtLjEuMjctLjA1LjUzLjEzLjU4LjQxLjA1LjI3LS4xMy41My0uNDEuNTgtLjU3LjExLTEuMDcuMTItMS4yMS4xMnpNMTQuOTEgMjJjLS4wNCAwLS4wOS0uMDEtLjEzLS4wMi0xLjU5LS40NC0yLjYzLTEuMDMtMy43Mi0yLjEtMS40LTEuMzktMi4xNy0zLjI0LTIuMTctNS4yMiAwLTEuNjIgMS4zOC0yLjk0IDMuMDgtMi45NCAxLjcgMCAzLjA4IDEuMzIgMy4wOCAyLjk0IDAgMS4wNy45MyAxLjk0IDIuMDggMS45NHMyLjA4LS44NyAyLjA4LTEuOTRjMC0zLjc3LTMuMjUtNi44My03LjI1LTYuODMtMi44NCAwLTUuNDQgMS41OC02LjYxIDQuMDMtLjM5LjgxLS41OSAxLjc2LS41OSAyLjggMCAuNzguMDcgMi4wMS42NyAzLjYxLjEuMjYtLjAzLjU1LS4yOS42NC0uMjYuMS0uNTUtLjA0LS42NC0uMjktLjQ5LTEuMzEtLjczLTIuNjEtLjczLTMuOTYgMC0xLjIuMjMtMi4yOS42OC0zLjI0IDEuMzMtMi43OSA0LjI4LTQuNiA3LjUxLTQuNiA0LjU1IDAgOC4yNSAzLjUxIDguMjUgNy44MyAwIDEuNjItMS4zOCAyLjk0LTMuMDggMi45NHMtMy4wOC0xLjMyLTMuMDgtMi45NGMwLTEuMDctLjkzLTEuOTQtMi4wOC0xLjk0cy0yLjA4Ljg3LTIuMDggMS45NGMwIDEuNzEuNjYgMy4zMSAxLjg3IDQuNTEuOTUuOTQgMS44NiAxLjQ2IDMuMjcgMS44NS4yNy4wNy40Mi4zNS4zNS42MS0uMDUuMjMtLjI2LjM4LS40Ny4zOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGbGlnaHRMYW5kIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yLjUgMTloMTl2MmgtMTl6bTcuMTgtNS43M2w0LjM1IDEuMTYgNS4zMSAxLjQyYy44LjIxIDEuNjItLjI2IDEuODQtMS4wNi4yMS0uOC0uMjYtMS42Mi0xLjA2LTEuODRsLTUuMzEtMS40Mi0yLjc2LTkuMDJMMTAuMTIgMnY4LjI4TDUuMTUgOC45NWwtLjkzLTIuMzItMS40NS0uMzl2NS4xN2wxLjYuNDMgNS4zMSAxLjQzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZsaWdodFRha2VvZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIuNSAxOWgxOXYyaC0xOXptMTkuNTctOS4zNmMtLjIxLS44LTEuMDQtMS4yOC0xLjg0LTEuMDZMMTQuOTIgMTBsLTYuOS02LjQzLTEuOTMuNTEgNC4xNCA3LjE3LTQuOTcgMS4zMy0xLjk3LTEuNTQtMS40NS4zOSAxLjgyIDMuMTYuNzcgMS4zMyAxLjYtLjQzIDUuMzEtMS40MiA0LjM1LTEuMTZMMjEgMTEuNDljLjgxLS4yMyAxLjI4LTEuMDUgMS4wNy0xLjg1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZsaXBUb0JhY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgN0g3djJoMlY3em0wIDRIN3YyaDJ2LTJ6bTAtOGMtMS4xMSAwLTIgLjktMiAyaDJWM3ptNCAxMmgtMnYyaDJ2LTJ6bTYtMTJ2MmgyYzAtMS4xLS45LTItMi0yem0tNiAwaC0ydjJoMlYzek05IDE3di0ySDdjMCAxLjEuODkgMiAyIDJ6bTEwLTRoMnYtMmgtMnYyem0wLTRoMlY3aC0ydjJ6bTAgOGMxLjEgMCAyLS45IDItMmgtMnYyek01IDdIM3YxMmMwIDEuMS44OSAyIDIgMmgxMnYtMkg1Vjd6bTEwLTJoMlYzaC0ydjJ6bTAgMTJoMnYtMmgtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZsaXBUb0Zyb250IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDEzaDJ2LTJIM3Yyem0wIDRoMnYtMkgzdjJ6bTIgNHYtMkgzYzAgMS4xLjg5IDIgMiAyek0zIDloMlY3SDN2MnptMTIgMTJoMnYtMmgtMnYyem00LTE4SDljLTEuMTEgMC0yIC45LTIgMnYxMGMwIDEuMS44OSAyIDIgMmgxMGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDEySDlWNWgxMHYxMHptLTggNmgydi0yaC0ydjJ6bS00IDBoMnYtMkg3djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kR1RyYW5zbGF0ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNWgtOS4xMkwxMCAySDRjLTEuMSAwLTIgLjktMiAydjEzYzAgMS4xLjkgMiAyIDJoN2wxIDNoOGMxLjEgMCAyLS45IDItMlY3YzAtMS4xLS45LTItMi0yek03LjE3IDE0LjU5Yy0yLjI1IDAtNC4wOS0xLjgzLTQuMDktNC4wOXMxLjgzLTQuMDkgNC4wOS00LjA5YzEuMDQgMCAxLjk5LjM3IDIuNzQgMS4wN2wuMDcuMDYtMS4yMyAxLjE4LS4wNi0uMDVjLS4yOS0uMjctLjc4LS41OS0xLjUyLS41OS0xLjMxIDAtMi4zOCAxLjA5LTIuMzggMi40MnMxLjA3IDIuNDIgMi4zOCAyLjQyYzEuMzcgMCAxLjk2LS44NyAyLjEyLTEuNDZINy4wOFY5LjkxaDMuOTVsLjAxLjA3Yy4wNC4yMS4wNS40LjA1LjYxIDAgMi4zNS0xLjYxIDQtMy45MiA0em02LjAzLTEuNzFjLjMzLjYuNzQgMS4xOCAxLjE5IDEuN2wtLjU0LjUzLS42NS0yLjIzem0uNzctLjc2aC0uOTlsLS4zMS0xLjA0aDMuOTlzLS4zNCAxLjMxLTEuNTYgMi43NGMtLjUyLS42Mi0uODktMS4yMy0xLjEzLTEuN3pNMjEgMjBjMCAuNTUtLjQ1IDEtMSAxaC03bDItMi0uODEtMi43Ny45Mi0uOTJMMTcuNzkgMThsLjczLS43My0yLjcxLTIuNjhjLjktMS4wMyAxLjYtMi4yNSAxLjkyLTMuNTFIMTl2LTEuMDRoLTMuNjRWOWgtMS4wNHYxLjA0aC0xLjk2TDExLjE4IDZIMjBjLjU1IDAgMSAuNDUgMSAxdjEzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdhdmVsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xIDIxaDEydjJIMXpNNS4yNDUgOC4wN2wyLjgzLTIuODI3IDE0LjE0IDE0LjE0Mi0yLjgyOCAyLjgyOHpNMTIuMzE3IDFsNS42NTcgNS42NTYtMi44MyAyLjgzLTUuNjU0LTUuNjZ6TTMuODI1IDkuNDg1bDUuNjU3IDUuNjU3LTIuODI4IDIuODI4LTUuNjU3LTUuNjU3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdldEFwcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgOWgtNFYzSDl2Nkg1bDcgNyA3LTd6TTUgMTh2MmgxNHYtMkg1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdpZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuNSA5SDEzdjZoLTEuNXpNOSA5SDZjLS42IDAtMSAuNS0xIDF2NGMwIC41LjQgMSAxIDFoM2MuNiAwIDEtLjUgMS0xdi0ySDguNXYxLjVoLTJ2LTNIMTBWMTBjMC0uNS0uNC0xLTEtMXptMTAgMS41VjloLTQuNXY2SDE2di0yaDJ2LTEuNWgtMnYtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRHcmFkZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTcuMjdMMTguMTggMjFsLTEuNjQtNy4wM0wyMiA5LjI0bC03LjE5LS42MUwxMiAyIDkuMTkgOC42MyAyIDkuMjRsNS40NiA0LjczTDUuODIgMjF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kR3JvdXBXb3JrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyek04IDE3LjVjLTEuMzggMC0yLjUtMS4xMi0yLjUtMi41czEuMTItMi41IDIuNS0yLjUgMi41IDEuMTIgMi41IDIuNS0xLjEyIDIuNS0yLjUgMi41ek05LjUgOGMwLTEuMzggMS4xMi0yLjUgMi41LTIuNXMyLjUgMS4xMiAyLjUgMi41LTEuMTIgMi41LTIuNSAyLjVTOS41IDkuMzggOS41IDh6bTYuNSA5LjVjLTEuMzggMC0yLjUtMS4xMi0yLjUtMi41czEuMTItMi41IDIuNS0yLjUgMi41IDEuMTIgMi41IDIuNS0xLjEyIDIuNS0yLjUgMi41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhlbHAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTEgMTdoLTJ2LTJoMnYyem0yLjA3LTcuNzVsLS45LjkyQzEzLjQ1IDEyLjkgMTMgMTMuNSAxMyAxNWgtMnYtLjVjMC0xLjEuNDUtMi4xIDEuMTctMi44M2wxLjI0LTEuMjZjLjM3LS4zNi41OS0uODYuNTktMS40MSAwLTEuMS0uOS0yLTItMnMtMiAuOS0yIDJIOGMwLTIuMjEgMS43OS00IDQtNHM0IDEuNzkgNCA0YzAgLjg4LS4zNiAxLjY4LS45MyAyLjI1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhlbHBPdXRsaW5lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAxOGgydi0yaC0ydjJ6bTEtMTZDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4em0wLTE0Yy0yLjIxIDAtNCAxLjc5LTQgNGgyYzAtMS4xLjktMiAyLTJzMiAuOSAyIDJjMCAyLTMgMS43NS0zIDVoMmMwLTIuMjUgMy0yLjUgMy01IDAtMi4yMS0xLjc5LTQtNC00elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhpZ2hsaWdodE9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNTkgOEwxMiAxMC41OSA5LjQxIDggOCA5LjQxIDEwLjU5IDEyIDggMTQuNTkgOS40MSAxNiAxMiAxMy40MSAxNC41OSAxNiAxNiAxNC41OSAxMy40MSAxMiAxNiA5LjQxIDE0LjU5IDh6TTEyIDJDNi40NyAyIDIgNi40NyAyIDEyczQuNDcgMTAgMTAgMTAgMTAtNC40NyAxMC0xMFMxNy41MyAyIDEyIDJ6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhpc3RvcnkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDNjLTQuOTcgMC05IDQuMDMtOSA5SDFsMy44OSAzLjg5LjA3LjE0TDkgMTJINmMwLTMuODcgMy4xMy03IDctN3M3IDMuMTMgNyA3LTMuMTMgNy03IDdjLTEuOTMgMC0zLjY4LS43OS00Ljk0LTIuMDZsLTEuNDIgMS40MkM4LjI3IDE5Ljk5IDEwLjUxIDIxIDEzIDIxYzQuOTcgMCA5LTQuMDMgOS05cy00LjAzLTktOS05em0tMSA1djVsNC4yOCAyLjU0LjcyLTEuMjEtMy41LTIuMDhWOEgxMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIb21lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCAyMHYtNmg0djZoNXYtOGgzTDEyIDMgMiAxMmgzdjh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSG91cmdsYXNzRW1wdHkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYgMnY2aC4wMUw2IDguMDEgMTAgMTJsLTQgNCAuMDEuMDFINlYyMmgxMnYtNS45OWgtLjAxTDE4IDE2bC00LTQgNC0zLjk5LS4wMS0uMDFIMThWMkg2em0xMCAxNC41VjIwSDh2LTMuNWw0LTQgNCA0em0tNC01bC00LTRWNGg4djMuNWwtNCA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhvdXJnbGFzc0Z1bGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYgMnY2aC4wMUw2IDguMDEgMTAgMTJsLTQgNCAuMDEuMDFINlYyMmgxMnYtNS45OWgtLjAxTDE4IDE2bC00LTQgNC0zLjk5LS4wMS0uMDFIMThWMkg2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEh0dHAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuNSAxMWgtMlY5SDF2NmgxLjV2LTIuNWgyVjE1SDZWOUg0LjV2MnptMi41LS41aDEuNVYxNUgxMHYtNC41aDEuNVY5SDd2MS41em01LjUgMEgxNFYxNWgxLjV2LTQuNUgxN1Y5aC00LjV2MS41em05LTEuNUgxOHY2aDEuNXYtMmgyYy44IDAgMS41LS43IDEuNS0xLjV2LTFjMC0uOC0uNy0xLjUtMS41LTEuNXptMCAyLjVoLTJ2LTFoMnYxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEh0dHBzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCA4aC0xVjZjMC0yLjc2LTIuMjQtNS01LTVTNyAzLjI0IDcgNnYySDZjLTEuMSAwLTIgLjktMiAydjEwYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWMTBjMC0xLjEtLjktMi0yLTJ6bS02IDljLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyem0zLjEtOUg4LjlWNmMwLTEuNzEgMS4zOS0zLjEgMy4xLTMuMSAxLjcxIDAgMy4xIDEuMzkgMy4xIDMuMXYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEltcG9ydGFudERldmljZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIzIDExLjAxTDE4IDExYy0uNTUgMC0xIC40NS0xIDF2OWMwIC41NS40NSAxIDEgMWg1Yy41NSAwIDEtLjQ1IDEtMXYtOWMwLS41NS0uNDUtLjk5LTEtLjk5ek0yMyAyMGgtNXYtN2g1djd6TTIwIDJIMkMuODkgMiAwIDIuODkgMCA0djEyYzAgMS4xLjg5IDIgMiAyaDd2Mkg3djJoOHYtMmgtMnYtMmgydi0ySDJWNGgxOHY1aDJWNGMwLTEuMTEtLjktMi0yLTJ6bS04LjAzIDdMMTEgNmwtLjk3IDNIN2wyLjQ3IDEuNzYtLjk0IDIuOTEgMi40Ny0xLjggMi40NyAxLjgtLjk0LTIuOTFMMTUgOWgtMy4wM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbmZvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0xIDE1aC0ydi02aDJ2NnptMC04aC0yVjdoMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEluZm9PdXRsaW5lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAxN2gydi02aC0ydjZ6bTEtMTVDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4ek0xMSA5aDJWN2gtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZElucHV0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzLjAxSDNjLTEuMSAwLTIgLjktMiAyVjloMlY0Ljk5aDE4djE0LjAzSDNWMTVIMXY0LjAxYzAgMS4xLjkgMS45OCAyIDEuOThoMThjMS4xIDAgMi0uODggMi0xLjk4di0xNGMwLTEuMTEtLjktMi0yLTJ6TTExIDE2bDQtNC00LTR2M0gxdjJoMTB2M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbnZlcnRDb2xvcnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjY2IDcuOTNMMTIgMi4yNyA2LjM0IDcuOTNjLTMuMTIgMy4xMi0zLjEyIDguMTkgMCAxMS4zMUM3LjkgMjAuOCA5Ljk1IDIxLjU4IDEyIDIxLjU4YzIuMDUgMCA0LjEtLjc4IDUuNjYtMi4zNCAzLjEyLTMuMTIgMy4xMi04LjE5IDAtMTEuMzF6TTEyIDE5LjU5Yy0xLjYgMC0zLjExLS42Mi00LjI0LTEuNzZDNi42MiAxNi42OSA2IDE1LjE5IDYgMTMuNTlzLjYyLTMuMTEgMS43Ni00LjI0TDEyIDUuMXYxNC40OXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMYWJlbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNjMgNS44NEMxNy4yNyA1LjMzIDE2LjY3IDUgMTYgNUw1IDUuMDFDMy45IDUuMDEgMyA1LjkgMyA3djEwYzAgMS4xLjkgMS45OSAyIDEuOTlMMTYgMTljLjY3IDAgMS4yNy0uMzMgMS42My0uODRMMjIgMTJsLTQuMzctNi4xNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMYWJlbE91dGxpbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjYzIDUuODRDMTcuMjcgNS4zMyAxNi42NyA1IDE2IDVMNSA1LjAxQzMuOSA1LjAxIDMgNS45IDMgN3YxMGMwIDEuMS45IDEuOTkgMiAxLjk5TDE2IDE5Yy42NyAwIDEuMjctLjMzIDEuNjMtLjg0TDIyIDEybC00LjM3LTYuMTZ6TTE2IDE3SDVWN2gxMWwzLjU1IDVMMTYgMTd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGFuZ3VhZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjk5IDJDNi40NyAyIDIgNi40OCAyIDEyczQuNDcgMTAgOS45OSAxMEMxNy41MiAyMiAyMiAxNy41MiAyMiAxMlMxNy41MiAyIDExLjk5IDJ6bTYuOTMgNmgtMi45NWMtLjMyLTEuMjUtLjc4LTIuNDUtMS4zOC0zLjU2IDEuODQuNjMgMy4zNyAxLjkxIDQuMzMgMy41NnpNMTIgNC4wNGMuODMgMS4yIDEuNDggMi41MyAxLjkxIDMuOTZoLTMuODJjLjQzLTEuNDMgMS4wOC0yLjc2IDEuOTEtMy45NnpNNC4yNiAxNEM0LjEgMTMuMzYgNCAxMi42OSA0IDEycy4xLTEuMzYuMjYtMmgzLjM4Yy0uMDguNjYtLjE0IDEuMzItLjE0IDIgMCAuNjguMDYgMS4zNC4xNCAySDQuMjZ6bS44MiAyaDIuOTVjLjMyIDEuMjUuNzggMi40NSAxLjM4IDMuNTYtMS44NC0uNjMtMy4zNy0xLjktNC4zMy0zLjU2em0yLjk1LThINS4wOGMuOTYtMS42NiAyLjQ5LTIuOTMgNC4zMy0zLjU2QzguODEgNS41NSA4LjM1IDYuNzUgOC4wMyA4ek0xMiAxOS45NmMtLjgzLTEuMi0xLjQ4LTIuNTMtMS45MS0zLjk2aDMuODJjLS40MyAxLjQzLTEuMDggMi43Ni0xLjkxIDMuOTZ6TTE0LjM0IDE0SDkuNjZjLS4wOS0uNjYtLjE2LTEuMzItLjE2LTIgMC0uNjguMDctMS4zNS4xNi0yaDQuNjhjLjA5LjY1LjE2IDEuMzIuMTYgMiAwIC42OC0uMDcgMS4zNC0uMTYgMnptLjI1IDUuNTZjLjYtMS4xMSAxLjA2LTIuMzEgMS4zOC0zLjU2aDIuOTVjLS45NiAxLjY1LTIuNDkgMi45My00LjMzIDMuNTZ6TTE2LjM2IDE0Yy4wOC0uNjYuMTQtMS4zMi4xNC0yIDAtLjY4LS4wNi0xLjM0LS4xNC0yaDMuMzhjLjE2LjY0LjI2IDEuMzEuMjYgMnMtLjEgMS4zNi0uMjYgMmgtMy4zOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMYXVuY2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDE5SDVWNWg3VjNINWMtMS4xMSAwLTIgLjktMiAydjE0YzAgMS4xLjg5IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0ydi03aC0ydjd6TTE0IDN2MmgzLjU5bC05LjgzIDkuODMgMS40MSAxLjQxTDE5IDYuNDFWMTBoMlYzaC03elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExpZ2h0YnVsYk91dGxpbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgMjFjMCAuNTUuNDUgMSAxIDFoNGMuNTUgMCAxLS40NSAxLTF2LTFIOXYxem0zLTE5QzguMTQgMiA1IDUuMTQgNSA5YzAgMi4zOCAxLjE5IDQuNDcgMyA1Ljc0VjE3YzAgLjU1LjQ1IDEgMSAxaDZjLjU1IDAgMS0uNDUgMS0xdi0yLjI2YzEuODEtMS4yNyAzLTMuMzYgMy01Ljc0IDAtMy44Ni0zLjE0LTctNy03em0yLjg1IDExLjFsLS44NS42VjE2aC00di0yLjNsLS44NS0uNkM3LjggMTIuMTYgNyAxMC42MyA3IDljMC0yLjc2IDIuMjQtNSA1LTVzNSAyLjI0IDUgNWMwIDEuNjMtLjggMy4xNi0yLjE1IDQuMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMaW5lU3R5bGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgMTZoNXYtMkgzdjJ6bTYuNSAwaDV2LTJoLTV2MnptNi41IDBoNXYtMmgtNXYyek0zIDIwaDJ2LTJIM3Yyem00IDBoMnYtMkg3djJ6bTQgMGgydi0yaC0ydjJ6bTQgMGgydi0yaC0ydjJ6bTQgMGgydi0yaC0ydjJ6TTMgMTJoOHYtMkgzdjJ6bTEwIDBoOHYtMmgtOHYyek0zIDR2NGgxOFY0SDN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGluZVdlaWdodCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAxN2gxOHYtMkgzdjJ6bTAgM2gxOHYtMUgzdjF6bTAtN2gxOHYtM0gzdjN6bTAtOXY0aDE4VjRIM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMaXN0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDEzaDJ2LTJIM3Yyem0wIDRoMnYtMkgzdjJ6bTAtOGgyVjdIM3Yyem00IDRoMTR2LTJIN3Yyem0wIDRoMTR2LTJIN3Yyek03IDd2MmgxNFY3SDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTggOGgtMVY2YzAtMi43Ni0yLjI0LTUtNS01UzcgMy4yNCA3IDZ2Mkg2Yy0xLjEgMC0yIC45LTIgMnYxMGMwIDEuMS45IDIgMiAyaDEyYzEuMSAwIDItLjkgMi0yVjEwYzAtMS4xLS45LTItMi0yem0tNiA5Yy0xLjEgMC0yLS45LTItMnMuOS0yIDItMiAyIC45IDIgMi0uOSAyLTIgMnptMy4xLTlIOC45VjZjMC0xLjcxIDEuMzktMy4xIDMuMS0zLjEgMS43MSAwIDMuMSAxLjM5IDMuMSAzLjF2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NrT3BlbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTdjMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem02LTloLTFWNmMwLTIuNzYtMi4yNC01LTUtNVM3IDMuMjQgNyA2aDEuOWMwLTEuNzEgMS4zOS0zLjEgMy4xLTMuMSAxLjcxIDAgMy4xIDEuMzkgMy4xIDMuMXYySDZjLTEuMSAwLTIgLjktMiAydjEwYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWMTBjMC0xLjEtLjktMi0yLTJ6bTAgMTJINlYxMGgxMnYxMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NrT3V0bGluZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTdjMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem02LTloLTFWNmMwLTIuNzYtMi4yNC01LTUtNVM3IDMuMjQgNyA2djJINmMtMS4xIDAtMiAuOS0yIDJ2MTBjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlYxMGMwLTEuMS0uOS0yLTItMnpNOC45IDZjMC0xLjcxIDEuMzktMy4xIDMuMS0zLjFzMy4xIDEuMzkgMy4xIDMuMXYySDguOVY2ek0xOCAyMEg2VjEwaDEydjEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExveWFsdHkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjQxIDExLjU4bC05LTlDMTIuMDUgMi4yMiAxMS41NSAyIDExIDJINGMtMS4xIDAtMiAuOS0yIDJ2N2MwIC41NS4yMiAxLjA1LjU5IDEuNDJsOSA5Yy4zNi4zNi44Ni41OCAxLjQxLjU4LjU1IDAgMS4wNS0uMjIgMS40MS0uNTlsNy03Yy4zNy0uMzYuNTktLjg2LjU5LTEuNDEgMC0uNTUtLjIzLTEuMDYtLjU5LTEuNDJ6TTUuNSA3QzQuNjcgNyA0IDYuMzMgNCA1LjVTNC42NyA0IDUuNSA0IDcgNC42NyA3IDUuNSA2LjMzIDcgNS41IDd6bTExLjc3IDguMjdMMTMgMTkuNTRsLTQuMjctNC4yN0M4LjI4IDE0LjgxIDggMTQuMTkgOCAxMy41YzAtMS4zOCAxLjEyLTIuNSAyLjUtMi41LjY5IDAgMS4zMi4yOCAxLjc3Ljc0bC43My43Mi43My0uNzNjLjQ1LS40NSAxLjA4LS43MyAxLjc3LS43MyAxLjM4IDAgMi41IDEuMTIgMi41IDIuNSAwIC42OS0uMjggMS4zMi0uNzMgMS43N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNYXJrdW5yZWFkTWFpbGJveCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNkgxMHY2SDhWNGg2VjBINnY2SDRjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWOGMwLTEuMS0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNb3RvcmN5Y2xlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS40NCA5LjAzTDE1LjQxIDVIMTF2MmgzLjU5bDIgMkg1Yy0yLjggMC01IDIuMi01IDVzMi4yIDUgNSA1YzIuNDYgMCA0LjQ1LTEuNjkgNC45LTRoMS42NWwyLjc3LTIuNzdjLS4yMS41NC0uMzIgMS4xNC0uMzIgMS43NyAwIDIuOCAyLjIgNSA1IDVzNS0yLjIgNS01YzAtMi42NS0xLjk3LTQuNzctNC41Ni00Ljk3ek03LjgyIDE1QzcuNCAxNi4xNSA2LjI4IDE3IDUgMTdjLTEuNjMgMC0zLTEuMzctMy0zczEuMzctMyAzLTNjMS4yOCAwIDIuNC44NSAyLjgyIDJINXYyaDIuODJ6TTE5IDE3Yy0xLjY2IDAtMy0xLjM0LTMtM3MxLjM0LTMgMy0zIDMgMS4zNCAzIDMtMS4zNCAzLTMgM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROb3RlQWRkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNCAySDZjLTEuMSAwLTEuOTkuOS0xLjk5IDJMNCAyMGMwIDEuMS44OSAyIDEuOTkgMkgxOGMxLjEgMCAyLS45IDItMlY4bC02LTZ6bTIgMTRoLTN2M2gtMnYtM0g4di0yaDN2LTNoMnYzaDN2MnptLTMtN1YzLjVMMTguNSA5SDEzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE9mZmxpbmVQaW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi41IDIgMiA2LjUgMiAxMnM0LjUgMTAgMTAgMTAgMTAtNC41IDEwLTEwUzE3LjUgMiAxMiAyem01IDE2SDd2LTJoMTB2MnptLTYuNy00TDcgMTAuN2wxLjQtMS40IDEuOSAxLjkgNS4zLTUuM0wxNyA3LjMgMTAuMyAxNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRPcGFjaXR5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy42NiA4TDEyIDIuMzUgNi4zNCA4QzQuNzggOS41NiA0IDExLjY0IDQgMTMuNjRzLjc4IDQuMTEgMi4zNCA1LjY3IDMuNjEgMi4zNSA1LjY2IDIuMzUgNC4xLS43OSA1LjY2LTIuMzVTMjAgMTUuNjQgMjAgMTMuNjQgMTkuMjIgOS41NiAxNy42NiA4ek02IDE0Yy4wMS0yIC42Mi0zLjI3IDEuNzYtNC40TDEyIDUuMjdsNC4yNCA0LjM4QzE3LjM4IDEwLjc3IDE3Ljk5IDEyIDE4IDE0SDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kT3BlbkluQnJvd3NlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgNEg1Yy0xLjExIDAtMiAuOS0yIDJ2MTJjMCAxLjEuODkgMiAyIDJoNHYtMkg1VjhoMTR2MTBoLTR2Mmg0YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjg5LTItMi0yem0tNyA2bC00IDRoM3Y2aDJ2LTZoM2wtNC00elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE9wZW5Jbk5ldyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgMTlINVY1aDdWM0g1Yy0xLjExIDAtMiAuOS0yIDJ2MTRjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJ2LTdoLTJ2N3pNMTQgM3YyaDMuNTlsLTkuODMgOS44MyAxLjQxIDEuNDFMMTkgNi40MVYxMGgyVjNoLTd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kT3BlbldpdGggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDloNFY2aDNsLTUtNS01IDVoM3Yzem0tMSAxSDZWN2wtNSA1IDUgNXYtM2gzdi00em0xNCAybC01LTV2M2gtM3Y0aDN2M2w1LTV6bS05IDNoLTR2M0g3bDUgNSA1LTVoLTN2LTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGFnZXZpZXcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjUgOUMxMC4xMiA5IDkgMTAuMTIgOSAxMS41czEuMTIgMi41IDIuNSAyLjUgMi41LTEuMTIgMi41LTIuNVMxMi44OCA5IDExLjUgOXpNMjAgNEg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bS0zLjIxIDE0LjIxbC0yLjkxLTIuOTFjLS42OS40NC0xLjUxLjctMi4zOS43QzkuMDEgMTYgNyAxMy45OSA3IDExLjVTOS4wMSA3IDExLjUgNyAxNiA5LjAxIDE2IDExLjVjMCAuODgtLjI2IDEuNjktLjcgMi4zOWwyLjkxIDIuOS0xLjQyIDEuNDJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGFuVG9vbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjMgNS41VjIwYzAgMi4yLTEuOCA0LTQgNGgtNy4zYy0xLjA4IDAtMi4xLS40My0yLjg1LTEuMTlMMSAxNC44M3MxLjI2LTEuMjMgMS4zLTEuMjVjLjIyLS4xOS40OS0uMjkuNzktLjI5LjIyIDAgLjQyLjA2LjYuMTYuMDQuMDEgNC4zMSAyLjQ2IDQuMzEgMi40NlY0YzAtLjgzLjY3LTEuNSAxLjUtMS41UzExIDMuMTcgMTEgNHY3aDFWMS41YzAtLjgzLjY3LTEuNSAxLjUtMS41UzE1IC42NyAxNSAxLjVWMTFoMVYyLjVjMC0uODMuNjctMS41IDEuNS0xLjVzMS41LjY3IDEuNSAxLjVWMTFoMVY1LjVjMC0uODMuNjctMS41IDEuNS0xLjVzMS41LjY3IDEuNSAxLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGF5bWVudCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNEg0Yy0xLjExIDAtMS45OS44OS0xLjk5IDJMMiAxOGMwIDEuMTEuODkgMiAyIDJoMTZjMS4xMSAwIDItLjg5IDItMlY2YzAtMS4xMS0uODktMi0yLTJ6bTAgMTRINHYtNmgxNnY2em0wLTEwSDRWNmgxNnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBlcm1DYW1lcmFNaWMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDVoLTMuMTdMMTUgM0g5TDcuMTcgNUg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDd2LTIuMDljLTIuODMtLjQ4LTUtMi45NC01LTUuOTFoMmMwIDIuMjEgMS43OSA0IDQgNHM0LTEuNzkgNC00aDJjMCAyLjk3LTIuMTcgNS40My01IDUuOTFWMjFoN2MxLjEgMCAyLS45IDItMlY3YzAtMS4xLS45LTItMi0yem0tNiA4YzAgMS4xLS45IDItMiAycy0yLS45LTItMlY5YzAtMS4xLjktMiAyLTJzMiAuOSAyIDJ2NHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXJtQ29udGFjdENhbGVuZGFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzaC0xVjFoLTJ2Mkg4VjFINnYySDVjLTEuMTEgMC0yIC45LTIgMnYxNGMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tNyAzYzEuNjYgMCAzIDEuMzQgMyAzcy0xLjM0IDMtMyAzLTMtMS4zNC0zLTMgMS4zNC0zIDMtM3ptNiAxMkg2di0xYzAtMiA0LTMuMSA2LTMuMXM2IDEuMSA2IDMuMXYxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBlcm1EYXRhU2V0dGluZyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguOTkgMTEuNWMuMzQgMCAuNjcuMDMgMSAuMDdMMjAgMCAwIDIwaDExLjU2Yy0uMDQtLjMzLS4wNy0uNjYtLjA3LTEgMC00LjE0IDMuMzYtNy41IDcuNS03LjV6bTMuNzEgNy45OWMuMDItLjE2LjA0LS4zMi4wNC0uNDkgMC0uMTctLjAxLS4zMy0uMDQtLjQ5bDEuMDYtLjgzYy4wOS0uMDguMTItLjIxLjA2LS4zMmwtMS0xLjczYy0uMDYtLjExLS4xOS0uMTUtLjMxLS4xMWwtMS4yNC41Yy0uMjYtLjItLjU0LS4zNy0uODUtLjQ5bC0uMTktMS4zMmMtLjAxLS4xMi0uMTItLjIxLS4yNC0uMjFoLTJjLS4xMiAwLS4yMy4wOS0uMjUuMjFsLS4xOSAxLjMyYy0uMy4xMy0uNTkuMjktLjg1LjQ5bC0xLjI0LS41Yy0uMTEtLjA0LS4yNCAwLS4zMS4xMWwtMSAxLjczYy0uMDYuMTEtLjA0LjI0LjA2LjMybDEuMDYuODNjLS4wMi4xNi0uMDMuMzItLjAzLjQ5IDAgLjE3LjAxLjMzLjAzLjQ5bC0xLjA2LjgzYy0uMDkuMDgtLjEyLjIxLS4wNi4zMmwxIDEuNzNjLjA2LjExLjE5LjE1LjMxLjExbDEuMjQtLjVjLjI2LjIuNTQuMzcuODUuNDlsLjE5IDEuMzJjLjAyLjEyLjEyLjIxLjI1LjIxaDJjLjEyIDAgLjIzLS4wOS4yNS0uMjFsLjE5LTEuMzJjLjMtLjEzLjU5LS4yOS44NC0uNDlsMS4yNS41Yy4xMS4wNC4yNCAwIC4zMS0uMTFsMS0xLjczYy4wNi0uMTEuMDMtLjI0LS4wNi0uMzJsLTEuMDctLjgzem0tMy43MSAxLjAxYy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXJtRGV2aWNlSW5mb3JtYXRpb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDdoLTJ2MmgyVjd6bTAgNGgtMnY2aDJ2LTZ6bTQtOS45OUw3IDFjLTEuMSAwLTIgLjktMiAydjE4YzAgMS4xLjkgMiAyIDJoMTBjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0xLjk5LTItMS45OXpNMTcgMTlIN1Y1aDEwdjE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBlcm1JZGVudGl0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNS45YzEuMTYgMCAyLjEuOTQgMi4xIDIuMXMtLjk0IDIuMS0yLjEgMi4xUzkuOSA5LjE2IDkuOSA4cy45NC0yLjEgMi4xLTIuMW0wIDljMi45NyAwIDYuMSAxLjQ2IDYuMSAyLjF2MS4xSDUuOVYxN2MwLS42NCAzLjEzLTIuMSA2LjEtMi4xTTEyIDRDOS43OSA0IDggNS43OSA4IDhzMS43OSA0IDQgNCA0LTEuNzkgNC00LTEuNzktNC00LTR6bTAgOWMtMi42NyAwLTggMS4zNC04IDR2M2gxNnYtM2MwLTIuNjYtNS4zMy00LTgtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXJtTWVkaWEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIgNkgwdjVoLjAxTDAgMjBjMCAxLjEuOSAyIDIgMmgxOHYtMkgyVjZ6bTIwLTJoLThsLTItMkg2Yy0xLjEgMC0xLjk5LjktMS45OSAyTDQgMTZjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yek03IDE1bDQuNS02IDMuNSA0LjUxIDIuNS0zLjAxTDIxIDE1SDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGVybVBob25lTXNnIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxNS41Yy0xLjI1IDAtMi40NS0uMi0zLjU3LS41Ny0uMzUtLjExLS43NC0uMDMtMS4wMi4yNGwtMi4yIDIuMmMtMi44My0xLjQ0LTUuMTUtMy43NS02LjU5LTYuNThsMi4yLTIuMjFjLjI4LS4yNy4zNi0uNjYuMjUtMS4wMUM4LjcgNi40NSA4LjUgNS4yNSA4LjUgNGMwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxIDAgOS4zOSA3LjYxIDE3IDE3IDE3IC41NSAwIDEtLjQ1IDEtMXYtMy41YzAtLjU1LS40NS0xLTEtMXpNMTIgM3YxMGwzLTNoNlYzaC05elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBlcm1TY2FuV2lmaSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgM0M2Ljk1IDMgMy4xNSA0Ljg1IDAgNy4yM0wxMiAyMiAyNCA3LjI1QzIwLjg1IDQuODcgMTcuMDUgMyAxMiAzem0xIDEzaC0ydi02aDJ2NnptLTItOFY2aDJ2MmgtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXRzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjQuNVwiLFwiY3lcIjpcIjkuNVwiLFwiclwiOlwiMi41XCJ9fSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI5XCIsXCJjeVwiOlwiNS41XCIsXCJyXCI6XCIyLjVcIn19LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE1XCIsXCJjeVwiOlwiNS41XCIsXCJyXCI6XCIyLjVcIn19LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE5LjVcIixcImN5XCI6XCI5LjVcIixcInJcIjpcIjIuNVwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjM0IDE0Ljg2Yy0uODctMS4wMi0xLjYtMS44OS0yLjQ4LTIuOTEtLjQ2LS41NC0xLjA1LTEuMDgtMS43NS0xLjMyLS4xMS0uMDQtLjIyLS4wNy0uMzMtLjA5LS4yNS0uMDQtLjUyLS4wNC0uNzgtLjA0cy0uNTMgMC0uNzkuMDVjLS4xMS4wMi0uMjIuMDUtLjMzLjA5LS43LjI0LTEuMjguNzgtMS43NSAxLjMyLS44NyAxLjAyLTEuNiAxLjg5LTIuNDggMi45MS0xLjMxIDEuMzEtMi45MiAyLjc2LTIuNjIgNC43OS4yOSAxLjAyIDEuMDIgMi4wMyAyLjMzIDIuMzIuNzMuMTUgMy4wNi0uNDQgNS41NC0uNDRoLjE4YzIuNDggMCA0LjgxLjU4IDUuNTQuNDQgMS4zMS0uMjkgMi4wNC0xLjMxIDIuMzMtMi4zMi4zMS0yLjA0LTEuMy0zLjQ5LTIuNjEtNC44elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBpY3R1cmVJblBpY3R1cmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDdoLTh2Nmg4Vjd6bTItNEgzYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDEuOTggMiAxLjk4aDE4YzEuMSAwIDItLjg4IDItMS45OFY1YzAtMS4xLS45LTItMi0yem0wIDE2LjAxSDNWNC45OGgxOHYxNC4wM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaWN0dXJlSW5QaWN0dXJlQWx0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAxMWgtOHY2aDh2LTZ6bTQgOFY0Ljk4QzIzIDMuODggMjIuMSAzIDIxIDNIM2MtMS4xIDAtMiAuODgtMiAxLjk4VjE5YzAgMS4xLjkgMiAyIDJoMThjMS4xIDAgMi0uOSAyLTJ6bS0yIC4wMkgzVjQuOTdoMTh2MTQuMDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGxheUZvcldvcmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExIDV2NS41OUg3LjVsNC41IDQuNSA0LjUtNC41SDEzVjVoLTJ6bS01IDljMCAzLjMxIDIuNjkgNiA2IDZzNi0yLjY5IDYtNmgtMmMwIDIuMjEtMS43OSA0LTQgNHMtNC0xLjc5LTQtNEg2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBvbHltZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDRoLTRMNy4xMSAxNi42MyA0LjUgMTIgOSA0SDVMLjUgMTIgNSAyMGg0bDcuODktMTIuNjNMMTkuNSAxMiAxNSAyMGg0bDQuNS04elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBvd2VyU2V0dGluZ3NOZXcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDNoLTJ2MTBoMlYzem00LjgzIDIuMTdsLTEuNDIgMS40MkMxNy45OSA3Ljg2IDE5IDkuODEgMTkgMTJjMCAzLjg3LTMuMTMgNy03IDdzLTctMy4xMy03LTdjMC0yLjE5IDEuMDEtNC4xNCAyLjU4LTUuNDJMNi4xNyA1LjE3QzQuMjMgNi44MiAzIDkuMjYgMyAxMmMwIDQuOTcgNC4wMyA5IDkgOXM5LTQuMDMgOS05YzAtMi43NC0xLjIzLTUuMTgtMy4xNy02LjgzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFByZWduYW50V29tYW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgNGMwLTEuMTEuODktMiAyLTJzMiAuODkgMiAyLS44OSAyLTIgMi0yLS44OS0yLTJ6bTcgOWMtLjAxLTEuMzQtLjgzLTIuNTEtMi0zIDAtMS42Ni0xLjM0LTMtMy0zcy0zIDEuMzQtMyAzdjdoMnY1aDN2LTVoM3YtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQcmludCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgOEg1Yy0xLjY2IDAtMyAxLjM0LTMgM3Y2aDR2NGgxMnYtNGg0di02YzAtMS42Ni0xLjM0LTMtMy0zem0tMyAxMUg4di01aDh2NXptMy03Yy0uNTUgMC0xLS40NS0xLTFzLjQ1LTEgMS0xIDEgLjQ1IDEgMS0uNDUgMS0xIDF6bS0xLTlINnY0aDEyVjN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUXVlcnlCdWlsZGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS45OSAyQzYuNDcgMiAyIDYuNDggMiAxMnM0LjQ3IDEwIDkuOTkgMTBDMTcuNTIgMjIgMjIgMTcuNTIgMjIgMTJTMTcuNTIgMiAxMS45OSAyek0xMiAyMGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6bS41LTEzSDExdjZsNS4yNSAzLjE1Ljc1LTEuMjMtNC41LTIuNjd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUXVlc3Rpb25BbnN3ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDZoLTJ2OUg2djJjMCAuNTUuNDUgMSAxIDFoMTFsNCA0VjdjMC0uNTUtLjQ1LTEtMS0xem0tNCA2VjNjMC0uNTUtLjQ1LTEtMS0xSDNjLS41NSAwLTEgLjQ1LTEgMXYxNGw0LTRoMTBjLjU1IDAgMS0uNDUgMS0xelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlY2VpcHQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDE3SDZ2LTJoMTJ2MnptMC00SDZ2LTJoMTJ2MnptMC00SDZWN2gxMnYyek0zIDIybDEuNS0xLjVMNiAyMmwxLjUtMS41TDkgMjJsMS41LTEuNUwxMiAyMmwxLjUtMS41TDE1IDIybDEuNS0xLjVMMTggMjJsMS41LTEuNUwyMSAyMlYybC0xLjUgMS41TDE4IDJsLTEuNSAxLjVMMTUgMmwtMS41IDEuNUwxMiAybC0xLjUgMS41TDkgMiA3LjUgMy41IDYgMiA0LjUgMy41IDMgMnYyMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZWNvcmRWb2ljZU92ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOVwiLFwiY3lcIjpcIjlcIixcInJcIjpcIjRcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05IDE1Yy0yLjY3IDAtOCAxLjM0LTggNHYyaDE2di0yYzAtMi42Ni01LjMzLTQtOC00em03Ljc2LTkuNjRsLTEuNjggMS42OWMuODQgMS4xOC44NCAyLjcxIDAgMy44OWwxLjY4IDEuNjljMi4wMi0yLjAyIDIuMDItNS4wNyAwLTcuMjd6TTIwLjA3IDJsLTEuNjMgMS42M2MyLjc3IDMuMDIgMi43NyA3LjU2IDAgMTAuNzRMMjAuMDcgMTZjMy45LTMuODkgMy45MS05Ljk1IDAtMTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVkZWVtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2aC0yLjE4Yy4xMS0uMzEuMTgtLjY1LjE4LTEgMC0xLjY2LTEuMzQtMy0zLTMtMS4wNSAwLTEuOTYuNTQtMi41IDEuMzVsLS41LjY3LS41LS42OEMxMC45NiAyLjU0IDEwLjA1IDIgOSAyIDcuMzQgMiA2IDMuMzQgNiA1YzAgLjM1LjA3LjY5LjE4IDFINGMtMS4xMSAwLTEuOTkuODktMS45OSAyTDIgMTljMCAxLjExLjg5IDIgMiAyaDE2YzEuMTEgMCAyLS44OSAyLTJWOGMwLTEuMTEtLjg5LTItMi0yem0tNS0yYy41NSAwIDEgLjQ1IDEgMXMtLjQ1IDEtMSAxLTEtLjQ1LTEtMSAuNDUtMSAxLTF6TTkgNGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMS0xLS40NS0xLTEgLjQ1LTEgMS0xem0xMSAxNUg0di0yaDE2djJ6bTAtNUg0VjhoNS4wOEw3IDEwLjgzIDguNjIgMTIgMTEgOC43NmwxLTEuMzYgMSAxLjM2TDE1LjM4IDEyIDE3IDEwLjgzIDE0LjkyIDhIMjB2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZW1vdmVTaG9wcGluZ0NhcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyLjczIDIyLjczTDIuNzcgMi43NyAyIDJsLS43My0uNzNMMCAyLjU0bDQuMzkgNC4zOSAyLjIxIDQuNjYtMS4zNSAyLjQ1Yy0uMTYuMjgtLjI1LjYxLS4yNS45NiAwIDEuMS45IDIgMiAyaDcuNDZsMS4zOCAxLjM4Yy0uNS4zNi0uODMuOTUtLjgzIDEuNjIgMCAxLjEuODkgMiAxLjk5IDIgLjY3IDAgMS4yNi0uMzMgMS42Mi0uODRMMjEuNDYgMjRsMS4yNy0xLjI3ek03LjQyIDE1Yy0uMTQgMC0uMjUtLjExLS4yNS0uMjVsLjAzLS4xMi45LTEuNjNoMi4zNmwyIDJINy40MnptOC4xMy0yYy43NSAwIDEuNDEtLjQxIDEuNzUtMS4wM2wzLjU4LTYuNDljLjA4LS4xNC4xMi0uMzEuMTItLjQ4IDAtLjU1LS40NS0xLTEtMUg2LjU0bDkuMDEgOXpNNyAxOGMtMS4xIDAtMS45OS45LTEuOTkgMlM1LjkgMjIgNyAyMnMyLS45IDItMi0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZW9yZGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDE1aDE4di0ySDN2MnptMCA0aDE4di0ySDN2MnptMC04aDE4VjlIM3Yyem0wLTZ2MmgxOFY1SDN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVwb3J0UHJvYmxlbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMSAyMWgyMkwxMiAyIDEgMjF6bTEyLTNoLTJ2LTJoMnYyem0wLTRoLTJ2LTRoMnY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlc3RvcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDNjLTQuOTcgMC05IDQuMDMtOSA5SDFsMy44OSAzLjg5LjA3LjE0TDkgMTJINmMwLTMuODcgMy4xMy03IDctN3M3IDMuMTMgNyA3LTMuMTMgNy03IDdjLTEuOTMgMC0zLjY4LS43OS00Ljk0LTIuMDZsLTEuNDIgMS40MkM4LjI3IDE5Ljk5IDEwLjUxIDIxIDEzIDIxYzQuOTcgMCA5LTQuMDMgOS05cy00LjAzLTktOS05em0tMSA1djVsNC4yOCAyLjU0LjcyLTEuMjEtMy41LTIuMDhWOEgxMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZXN0b3JlUGFnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgMkg2Yy0xLjEgMC0xLjk5LjktMS45OSAyTDQgMjBjMCAxLjEuODkgMiAxLjk5IDJIMThjMS4xIDAgMi0uOSAyLTJWOGwtNi02em0tMiAxNmMtMi4wNSAwLTMuODEtMS4yNC00LjU4LTNoMS43MWMuNjMuOSAxLjY4IDEuNSAyLjg3IDEuNSAxLjkzIDAgMy41LTEuNTcgMy41LTMuNVMxMy45MyA5LjUgMTIgOS41Yy0xLjM1IDAtMi41Mi43OC0zLjEgMS45bDEuNiAxLjZoLTRWOWwxLjMgMS4zQzguNjkgOC45MiAxMC4yMyA4IDEyIDhjMi43NiAwIDUgMi4yNCA1IDVzLTIuMjQgNS01IDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUm9vbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM4LjEzIDIgNSA1LjEzIDUgOWMwIDUuMjUgNyAxMyA3IDEzczctNy43NSA3LTEzYzAtMy44Ny0zLjEzLTctNy03em0wIDkuNWMtMS4zOCAwLTIuNS0xLjEyLTIuNS0yLjVzMS4xMi0yLjUgMi41LTIuNSAyLjUgMS4xMiAyLjUgMi41LTEuMTIgMi41LTIuNSAyLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUm91bmRlZENvcm5lciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgMTloMnYyaC0ydi0yem0wLTJoMnYtMmgtMnYyek0zIDEzaDJ2LTJIM3Yyem0wIDRoMnYtMkgzdjJ6bTAtOGgyVjdIM3Yyem0wLTRoMlYzSDN2MnptNCAwaDJWM0g3djJ6bTggMTZoMnYtMmgtMnYyem0tNCAwaDJ2LTJoLTJ2MnptNCAwaDJ2LTJoLTJ2MnptLTggMGgydi0ySDd2MnptLTQgMGgydi0ySDN2MnpNMjEgOGMwLTIuNzYtMi4yNC01LTUtNWgtNXYyaDVjMS42NSAwIDMgMS4zNSAzIDN2NWgyVjh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUm93aW5nIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjUgMTQuNUw0IDE5bDEuNSAxLjVMOSAxN2gybC0yLjUtMi41ek0xNSAxYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptNiAyMC4wMUwxOCAyNGwtMi45OS0zLjAxVjE5LjVsLTcuMS03LjA5Yy0uMzEuMDUtLjYxLjA3LS45MS4wN3YtMi4xNmMxLjY2LjAzIDMuNjEtLjg3IDQuNjctMi4wNGwxLjQtMS41NWMuMTktLjIxLjQzLS4zOC42OS0uNS4yOS0uMTQuNjItLjIzLjk2LS4yM2guMDNDMTUuOTkgNi4wMSAxNyA3LjAyIDE3IDguMjZ2NS43NWMwIC44NC0uMzUgMS42MS0uOTIgMi4xNmwtMy41OC0zLjU4di0yLjI3Yy0uNjMuNTItMS40MyAxLjAyLTIuMjkgMS4zOUwxNi41IDE4SDE4bDMgMy4wMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTY2hlZHVsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTkgMkM2LjQ3IDIgMiA2LjQ4IDIgMTJzNC40NyAxMCA5Ljk5IDEwQzE3LjUyIDIyIDIyIDE3LjUyIDIyIDEyUzE3LjUyIDIgMTEuOTkgMnpNMTIgMjBjLTQuNDIgMC04LTMuNTgtOC04czMuNTgtOCA4LTggOCAzLjU4IDggOC0zLjU4IDgtOCA4em0uNS0xM0gxMXY2bDUuMjUgMy4xNS43NS0xLjIzLTQuNS0yLjY3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNlYXJjaCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNSAxNGgtLjc5bC0uMjgtLjI3QzE1LjQxIDEyLjU5IDE2IDExLjExIDE2IDkuNSAxNiA1LjkxIDEzLjA5IDMgOS41IDNTMyA1LjkxIDMgOS41IDUuOTEgMTYgOS41IDE2YzEuNjEgMCAzLjA5LS41OSA0LjIzLTEuNTdsLjI3LjI4di43OWw1IDQuOTlMMjAuNDkgMTlsLTQuOTktNXptLTYgMEM3LjAxIDE0IDUgMTEuOTkgNSA5LjVTNy4wMSA1IDkuNSA1IDE0IDcuMDEgMTQgOS41IDExLjk5IDE0IDkuNSAxNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5ncyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNDMgMTIuOThjLjA0LS4zMi4wNy0uNjQuMDctLjk4cy0uMDMtLjY2LS4wNy0uOThsMi4xMS0xLjY1Yy4xOS0uMTUuMjQtLjQyLjEyLS42NGwtMi0zLjQ2Yy0uMTItLjIyLS4zOS0uMy0uNjEtLjIybC0yLjQ5IDFjLS41Mi0uNC0xLjA4LS43My0xLjY5LS45OGwtLjM4LTIuNjVDMTQuNDYgMi4xOCAxNC4yNSAyIDE0IDJoLTRjLS4yNSAwLS40Ni4xOC0uNDkuNDJsLS4zOCAyLjY1Yy0uNjEuMjUtMS4xNy41OS0xLjY5Ljk4bC0yLjQ5LTFjLS4yMy0uMDktLjQ5IDAtLjYxLjIybC0yIDMuNDZjLS4xMy4yMi0uMDcuNDkuMTIuNjRsMi4xMSAxLjY1Yy0uMDQuMzItLjA3LjY1LS4wNy45OHMuMDMuNjYuMDcuOThsLTIuMTEgMS42NWMtLjE5LjE1LS4yNC40Mi0uMTIuNjRsMiAzLjQ2Yy4xMi4yMi4zOS4zLjYxLjIybDIuNDktMWMuNTIuNCAxLjA4LjczIDEuNjkuOThsLjM4IDIuNjVjLjAzLjI0LjI0LjQyLjQ5LjQyaDRjLjI1IDAgLjQ2LS4xOC40OS0uNDJsLjM4LTIuNjVjLjYxLS4yNSAxLjE3LS41OSAxLjY5LS45OGwyLjQ5IDFjLjIzLjA5LjQ5IDAgLjYxLS4yMmwyLTMuNDZjLjEyLS4yMi4wNy0uNDktLjEyLS42NGwtMi4xMS0xLjY1ek0xMiAxNS41Yy0xLjkzIDAtMy41LTEuNTctMy41LTMuNXMxLjU3LTMuNSAzLjUtMy41IDMuNSAxLjU3IDMuNSAzLjUtMS41NyAzLjUtMy41IDMuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc0FwcGxpY2F0aW9ucyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTBjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yem03LTdINWMtMS4xMSAwLTIgLjktMiAydjE0YzAgMS4xLjg5IDIgMiAyaDE0YzEuMTEgMCAyLS45IDItMlY1YzAtMS4xLS44OS0yLTItMnptLTEuNzUgOWMwIC4yMy0uMDIuNDYtLjA1LjY4bDEuNDggMS4xNmMuMTMuMTEuMTcuMy4wOC40NWwtMS40IDIuNDJjLS4wOS4xNS0uMjcuMjEtLjQzLjE1bC0xLjc0LS43Yy0uMzYuMjgtLjc2LjUxLTEuMTguNjlsLS4yNiAxLjg1Yy0uMDMuMTctLjE4LjMtLjM1LjNoLTIuOGMtLjE3IDAtLjMyLS4xMy0uMzUtLjI5bC0uMjYtMS44NWMtLjQzLS4xOC0uODItLjQxLTEuMTgtLjY5bC0xLjc0LjdjLS4xNi4wNi0uMzQgMC0uNDMtLjE1bC0xLjQtMi40MmMtLjA5LS4xNS0uMDUtLjM0LjA4LS40NWwxLjQ4LTEuMTZjLS4wMy0uMjMtLjA1LS40Ni0uMDUtLjY5IDAtLjIzLjAyLS40Ni4wNS0uNjhsLTEuNDgtMS4xNmMtLjEzLS4xMS0uMTctLjMtLjA4LS40NWwxLjQtMi40MmMuMDktLjE1LjI3LS4yMS40My0uMTVsMS43NC43Yy4zNi0uMjguNzYtLjUxIDEuMTgtLjY5bC4yNi0xLjg1Yy4wMy0uMTcuMTgtLjMuMzUtLjNoMi44Yy4xNyAwIC4zMi4xMy4zNS4yOWwuMjYgMS44NWMuNDMuMTguODIuNDEgMS4xOC42OWwxLjc0LS43Yy4xNi0uMDYuMzQgMCAuNDMuMTVsMS40IDIuNDJjLjA5LjE1LjA1LjM0LS4wOC40NWwtMS40OCAxLjE2Yy4wMy4yMy4wNS40Ni4wNS42OXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc0JhY2t1cFJlc3RvcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0IDEyYzAtMS4xLS45LTItMi0ycy0yIC45LTIgMiAuOSAyIDIgMiAyLS45IDItMnptLTItOWMtNC45NyAwLTkgNC4wMy05IDlIMGw0IDQgNC00SDVjMC0zLjg3IDMuMTMtNyA3LTdzNyAzLjEzIDcgNy0zLjEzIDctNyA3Yy0xLjUxIDAtMi45MS0uNDktNC4wNi0xLjNsLTEuNDIgMS40NEM4LjA0IDIwLjMgOS45NCAyMSAxMiAyMWM0Ljk3IDAgOS00LjAzIDktOXMtNC4wMy05LTktOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc0JsdWV0b290aCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEgMjRoMnYtMmgtMnYyem0tNCAwaDJ2LTJIN3Yyem04IDBoMnYtMmgtMnYyem0yLjcxLTE4LjI5TDEyIDBoLTF2Ny41OUw2LjQxIDMgNSA0LjQxIDEwLjU5IDEwIDUgMTUuNTkgNi40MSAxNyAxMSAxMi40MVYyMGgxbDUuNzEtNS43MS00LjMtNC4yOSA0LjMtNC4yOXpNMTMgMy44M2wxLjg4IDEuODhMMTMgNy41OVYzLjgzem0xLjg4IDEwLjQ2TDEzIDE2LjE3di0zLjc2bDEuODggMS44OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc0JyaWdodG5lc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2LjAxSDNWNC45OWgxOHYxNC4wMnpNOCAxNmgyLjVsMS41IDEuNSAxLjUtMS41SDE2di0yLjVsMS41LTEuNS0xLjUtMS41VjhoLTIuNUwxMiA2LjUgMTAuNSA4SDh2Mi41TDYuNSAxMiA4IDEzLjVWMTZ6bTQtN2MxLjY2IDAgMyAxLjM0IDMgM3MtMS4zNCAzLTMgM1Y5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNldHRpbmdzQ2VsbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyAyNGgydi0ySDd2MnptNCAwaDJ2LTJoLTJ2MnptNCAwaDJ2LTJoLTJ2MnpNMTYgLjAxTDggMEM2LjkgMCA2IC45IDYgMnYxNmMwIDEuMS45IDIgMiAyaDhjMS4xIDAgMi0uOSAyLTJWMmMwLTEuMS0uOS0xLjk5LTItMS45OXpNMTYgMTZIOFY0aDh2MTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2V0dGluZ3NFdGhlcm5ldCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy43NyA2Ljc2TDYuMjMgNS40OC44MiAxMmw1LjQxIDYuNTIgMS41NC0xLjI4TDMuNDIgMTJsNC4zNS01LjI0ek03IDEzaDJ2LTJIN3Yyem0xMC0yaC0ydjJoMnYtMnptLTYgMmgydi0yaC0ydjJ6bTYuNzctNy41MmwtMS41NCAxLjI4TDIwLjU4IDEybC00LjM1IDUuMjQgMS41NCAxLjI4TDIzLjE4IDEybC01LjQxLTYuNTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2V0dGluZ3NJbnB1dEFudGVubmEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDVjLTMuODcgMC03IDMuMTMtNyA3aDJjMC0yLjc2IDIuMjQtNSA1LTVzNSAyLjI0IDUgNWgyYzAtMy44Ny0zLjEzLTctNy03em0xIDkuMjljLjg4LS4zOSAxLjUtMS4yNiAxLjUtMi4yOSAwLTEuMzgtMS4xMi0yLjUtMi41LTIuNVM5LjUgMTAuNjIgOS41IDEyYzAgMS4wMi42MiAxLjkgMS41IDIuMjl2My4zTDcuNTkgMjEgOSAyMi40MWwzLTMgMyAzTDE2LjQxIDIxIDEzIDE3LjU5di0zLjN6TTEyIDFDNS45MyAxIDEgNS45MyAxIDEyaDJjMC00Ljk3IDQuMDMtOSA5LTlzOSA0LjAzIDkgOWgyYzAtNi4wNy00LjkzLTExLTExLTExelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNldHRpbmdzSW5wdXRDb21wb25lbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgMmMwLS41NS0uNDUtMS0xLTFzLTEgLjQ1LTEgMXY0SDF2Nmg2VjZINVYyem00IDE0YzAgMS4zLjg0IDIuNCAyIDIuODJWMjNoMnYtNC4xOGMxLjE2LS40MSAyLTEuNTEgMi0yLjgydi0ySDl2MnptLTggMGMwIDEuMy44NCAyLjQgMiAyLjgyVjIzaDJ2LTQuMThDNi4xNiAxOC40IDcgMTcuMyA3IDE2di0ySDF2MnpNMjEgNlYyYzAtLjU1LS40NS0xLTEtMXMtMSAuNDUtMSAxdjRoLTJ2Nmg2VjZoLTJ6bS04LTRjMC0uNTUtLjQ1LTEtMS0xcy0xIC40NS0xIDF2NEg5djZoNlY2aC0yVjJ6bTQgMTRjMCAxLjMuODQgMi40IDIgMi44MlYyM2gydi00LjE4YzEuMTYtLjQxIDItMS41MSAyLTIuODJ2LTJoLTZ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc0lucHV0Q29tcG9zaXRlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01IDJjMC0uNTUtLjQ1LTEtMS0xcy0xIC40NS0xIDF2NEgxdjZoNlY2SDVWMnptNCAxNGMwIDEuMy44NCAyLjQgMiAyLjgyVjIzaDJ2LTQuMThjMS4xNi0uNDEgMi0xLjUxIDItMi44MnYtMkg5djJ6bS04IDBjMCAxLjMuODQgMi40IDIgMi44MlYyM2gydi00LjE4QzYuMTYgMTguNCA3IDE3LjMgNyAxNnYtMkgxdjJ6TTIxIDZWMmMwLS41NS0uNDUtMS0xLTFzLTEgLjQ1LTEgMXY0aC0ydjZoNlY2aC0yem0tOC00YzAtLjU1LS40NS0xLTEtMXMtMSAuNDUtMSAxdjRIOXY2aDZWNmgtMlYyem00IDE0YzAgMS4zLjg0IDIuNCAyIDIuODJWMjNoMnYtNC4xOGMxLjE2LS40MSAyLTEuNTEgMi0yLjgydi0yaC02djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2V0dGluZ3NJbnB1dEhkbWkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDdWNGMwLTEuMS0uOS0yLTItMkg4Yy0xLjEgMC0yIC45LTIgMnYzSDV2NmwzIDZ2M2g4di0zbDMtNlY3aC0xek04IDRoOHYzaC0yVjVoLTF2MmgtMlY1aC0xdjJIOFY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNldHRpbmdzSW5wdXRTdmlkZW8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTggMTEuNWMwLS44My0uNjctMS41LTEuNS0xLjVTNSAxMC42NyA1IDExLjUgNS42NyAxMyA2LjUgMTMgOCAxMi4zMyA4IDExLjV6bTctNWMwLS44My0uNjctMS41LTEuNS0xLjVoLTNDOS42NyA1IDkgNS42NyA5IDYuNVM5LjY3IDggMTAuNSA4aDNjLjgzIDAgMS41LS42NyAxLjUtMS41ek04LjUgMTVjLS44MyAwLTEuNS42Ny0xLjUgMS41UzcuNjcgMTggOC41IDE4czEuNS0uNjcgMS41LTEuNVM5LjMzIDE1IDguNSAxNXpNMTIgMUM1LjkzIDEgMSA1LjkzIDEgMTJzNC45MyAxMSAxMSAxMSAxMS00LjkzIDExLTExUzE4LjA3IDEgMTIgMXptMCAyMGMtNC45NiAwLTktNC4wNC05LTlzNC4wNC05IDktOSA5IDQuMDQgOSA5LTQuMDQgOS05IDl6bTUuNS0xMWMtLjgzIDAtMS41LjY3LTEuNSAxLjVzLjY3IDEuNSAxLjUgMS41IDEuNS0uNjcgMS41LTEuNS0uNjctMS41LTEuNS0xLjV6bS0yIDVjLS44MyAwLTEuNS42Ny0xLjUgMS41cy42NyAxLjUgMS41IDEuNSAxLjUtLjY3IDEuNS0xLjUtLjY3LTEuNS0xLjUtMS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNldHRpbmdzT3ZlcnNjYW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjAxIDUuNUwxMCA4aDRsLTEuOTktMi41ek0xOCAxMHY0bDIuNS0xLjk5TDE4IDEwek02IDEwbC0yLjUgMi4wMUw2IDE0di00em04IDZoLTRsMi4wMSAyLjVMMTQgMTZ6bTctMTNIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2LjAxSDNWNC45OWgxOHYxNC4wMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc1Bob25lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyA5aC0ydjJoMlY5em00IDBoLTJ2MmgyVjl6bTMgNi41Yy0xLjI1IDAtMi40NS0uMi0zLjU3LS41Ny0uMzUtLjExLS43NC0uMDMtMS4wMi4yNGwtMi4yIDIuMmMtMi44My0xLjQ0LTUuMTUtMy43NS02LjU5LTYuNThsMi4yLTIuMjFjLjI4LS4yNy4zNi0uNjYuMjUtMS4wMUM4LjcgNi40NSA4LjUgNS4yNSA4LjUgNGMwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxIDAgOS4zOSA3LjYxIDE3IDE3IDE3IC41NSAwIDEtLjQ1IDEtMXYtMy41YzAtLjU1LS40NS0xLTEtMXpNMTkgOXYyaDJWOWgtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZXR0aW5nc1Bvd2VyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDI0aDJ2LTJIN3Yyem00IDBoMnYtMmgtMnYyem0yLTIyaC0ydjEwaDJWMnptMy41NiAyLjQ0bC0xLjQ1IDEuNDVDMTYuODQgNi45NCAxOCA4LjgzIDE4IDExYzAgMy4zMS0yLjY5IDYtNiA2cy02LTIuNjktNi02YzAtMi4xNyAxLjE2LTQuMDYgMi44OC01LjEyTDcuNDQgNC40NEM1LjM2IDUuODggNCA4LjI4IDQgMTFjMCA0LjQyIDMuNTggOCA4IDhzOC0zLjU4IDgtOGMwLTIuNzItMS4zNi01LjEyLTMuNDQtNi41NnpNMTUgMjRoMnYtMmgtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNldHRpbmdzUmVtb3RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSA5SDljLS41NSAwLTEgLjQ1LTEgMXYxMmMwIC41NS40NSAxIDEgMWg2Yy41NSAwIDEtLjQ1IDEtMVYxMGMwLS41NS0uNDUtMS0xLTF6bS0zIDZjLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyek03LjA1IDYuMDVsMS40MSAxLjQxQzkuMzcgNi41NiAxMC42MiA2IDEyIDZzMi42My41NiAzLjU0IDEuNDZsMS40MS0xLjQxQzE1LjY4IDQuNzggMTMuOTMgNCAxMiA0cy0zLjY4Ljc4LTQuOTUgMi4wNXpNMTIgMEM4Ljk2IDAgNi4yMSAxLjIzIDQuMjIgMy4yMmwxLjQxIDEuNDFDNy4yNiAzLjAxIDkuNTEgMiAxMiAyczQuNzQgMS4wMSA2LjM2IDIuNjRsMS40MS0xLjQxQzE3Ljc5IDEuMjMgMTUuMDQgMCAxMiAwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNldHRpbmdzVm9pY2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMjRoMnYtMkg3djJ6bTUtMTFjMS42NiAwIDIuOTktMS4zNCAyLjk5LTNMMTUgNGMwLTEuNjYtMS4zNC0zLTMtM1M5IDIuMzQgOSA0djZjMCAxLjY2IDEuMzQgMyAzIDN6bS0xIDExaDJ2LTJoLTJ2MnptNCAwaDJ2LTJoLTJ2MnptNC0xNGgtMS43YzAgMy0yLjU0IDUuMS01LjMgNS4xUzYuNyAxMyA2LjcgMTBINWMwIDMuNDEgMi43MiA2LjIzIDYgNi43MlYyMGgydi0zLjI4YzMuMjgtLjQ5IDYtMy4zMSA2LTYuNzJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2hvcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYgNlY0YzAtMS4xMS0uODktMi0yLTJoLTRjLTEuMTEgMC0yIC44OS0yIDJ2MkgydjEzYzAgMS4xMS44OSAyIDIgMmgxNmMxLjExIDAgMi0uODkgMi0yVjZoLTZ6bS02LTJoNHYyaC00VjR6TTkgMThWOWw3LjUgNEw5IDE4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNob3BUd28gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgOUgxdjExYzAgMS4xMS44OSAyIDIgMmgxNGMxLjExIDAgMi0uODkgMi0ySDNWOXptMTUtNFYzYzAtMS4xMS0uODktMi0yLTJoLTRjLTEuMTEgMC0yIC44OS0yIDJ2Mkg1djExYzAgMS4xMS44OSAyIDIgMmgxNGMxLjExIDAgMi0uODkgMi0yVjVoLTV6bS02LTJoNHYyaC00VjN6bTAgMTJWOGw1LjUgMy01LjUgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaG9wcGluZ0Jhc2tldCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuMjEgOWwtNC4zOC02LjU2Yy0uMTktLjI4LS41MS0uNDItLjgzLS40Mi0uMzIgMC0uNjQuMTQtLjgzLjQzTDYuNzkgOUgyYy0uNTUgMC0xIC40NS0xIDEgMCAuMDkuMDEuMTguMDQuMjdsMi41NCA5LjI3Yy4yMy44NCAxIDEuNDYgMS45MiAxLjQ2aDEzYy45MiAwIDEuNjktLjYyIDEuOTMtMS40NmwyLjU0LTkuMjdMMjMgMTBjMC0uNTUtLjQ1LTEtMS0xaC00Ljc5ek05IDlsMy00LjRMMTUgOUg5em0zIDhjLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNob3BwaW5nQ2FydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyAxOGMtMS4xIDAtMS45OS45LTEuOTkgMlM1LjkgMjIgNyAyMnMyLS45IDItMi0uOS0yLTItMnpNMSAydjJoMmwzLjYgNy41OS0xLjM1IDIuNDVjLS4xNi4yOC0uMjUuNjEtLjI1Ljk2IDAgMS4xLjkgMiAyIDJoMTJ2LTJINy40MmMtLjE0IDAtLjI1LS4xMS0uMjUtLjI1bC4wMy0uMTIuOS0xLjYzaDcuNDVjLjc1IDAgMS40MS0uNDEgMS43NS0xLjAzbDMuNTgtNi40OWMuMDgtLjE0LjEyLS4zMS4xMi0uNDggMC0uNTUtLjQ1LTEtMS0xSDUuMjFsLS45NC0ySDF6bTE2IDE2Yy0xLjEgMC0xLjk5LjktMS45OSAycy44OSAyIDEuOTkgMiAyLS45IDItMi0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTcGVha2VyTm90ZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yek04IDE0SDZ2LTJoMnYyem0wLTNINlY5aDJ2MnptMC0zSDZWNmgydjJ6bTcgNmgtNXYtMmg1djJ6bTMtM2gtOFY5aDh2MnptMC0zaC04VjZoOHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNwZWFrZXJOb3Rlc09mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuNTQgMTFsLS41NC0uNTRMNy41NCA4IDYgNi40NiAyLjM4IDIuODQgMS4yNyAxLjczIDAgM2wyLjAxIDIuMDFMMiAyMmw0LTRoOWw1LjczIDUuNzNMMjIgMjIuNDYgMTcuNTQgMThsLTctN3pNOCAxNEg2di0yaDJ2MnptLTItM1Y5bDIgMkg2em0xNC05SDQuMDhMMTAgNy45MlY2aDh2MmgtNy45MmwxIDFIMTh2MmgtNC45Mmw2Ljk5IDYuOTlDMjEuMTQgMTcuOTUgMjIgMTcuMDggMjIgMTZWNGMwLTEuMS0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTcGVsbGNoZWNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi40NSAxNmgyLjA5TDkuNDMgM0g3LjU3TDIuNDYgMTZoMi4wOWwxLjEyLTNoNS42NGwxLjE0IDN6bS02LjAyLTVMOC41IDUuNDggMTAuNTcgMTFINi40M3ptMTUuMTYuNTlsLTguMDkgOC4wOUw5LjgzIDE2bC0xLjQxIDEuNDEgNS4wOSA1LjA5TDIzIDEzbC0xLjQxLTEuNDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RhcnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjk5IDJDNi40NyAyIDIgNi40OCAyIDEyczQuNDcgMTAgOS45OSAxMEMxNy41MiAyMiAyMiAxNy41MiAyMiAxMlMxNy41MiAyIDExLjk5IDJ6bTQuMjQgMTZMMTIgMTUuNDUgNy43NyAxOGwxLjEyLTQuODEtMy43My0zLjIzIDQuOTItLjQyTDEyIDVsMS45MiA0LjUzIDQuOTIuNDItMy43MyAzLjIzTDE2LjIzIDE4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0b3JlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA0SDR2MmgxNlY0em0xIDEwdi0ybC0xLTVINGwtMSA1djJoMXY2aDEwdi02aDR2Nmgydi02aDF6bS05IDRINnYtNGg2djR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3ViamVjdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgMTdINHYyaDEwdi0yem02LThINHYyaDE2Vjl6TTQgMTVoMTZ2LTJINHYyek00IDV2MmgxNlY1SDR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3VwZXJ2aXNvckFjY291bnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjUgMTJjMS4zOCAwIDIuNDktMS4xMiAyLjQ5LTIuNVMxNy44OCA3IDE2LjUgN0MxNS4xMiA3IDE0IDguMTIgMTQgOS41czEuMTIgMi41IDIuNSAyLjV6TTkgMTFjMS42NiAwIDIuOTktMS4zNCAyLjk5LTNTMTAuNjYgNSA5IDVDNy4zNCA1IDYgNi4zNCA2IDhzMS4zNCAzIDMgM3ptNy41IDNjLTEuODMgMC01LjUuOTItNS41IDIuNzVWMTloMTF2LTIuMjVjMC0xLjgzLTMuNjctMi43NS01LjUtMi43NXpNOSAxM2MtMi4zMyAwLTcgMS4xNy03IDMuNVYxOWg3di0yLjI1YzAtLjg1LjMzLTIuMzQgMi4zNy0zLjQ3QzEwLjUgMTMuMSA5LjY2IDEzIDkgMTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3dhcEhvcml6IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02Ljk5IDExTDMgMTVsMy45OSA0di0zSDE0di0ySDYuOTl2LTN6TTIxIDlsLTMuOTktNHYzSDEwdjJoNy4wMXYzTDIxIDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3dhcFZlcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2IDE3LjAxVjEwaC0ydjcuMDFoLTNMMTUgMjFsNC0zLjk5aC0zek05IDNMNSA2Ljk5aDNWMTRoMlY2Ljk5aDNMOSAzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN3YXBWZXJ0aWNhbENpcmNsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnpNNi41IDlMMTAgNS41IDEzLjUgOUgxMXY0SDlWOUg2LjV6bTExIDZMMTQgMTguNSAxMC41IDE1SDEzdi00aDJ2NGgyLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3lzdGVtVXBkYXRlQWx0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxNi41bDQtNGgtM3YtOWgtMnY5SDhsNCA0em05LTEzaC02djEuOTloNnYxNC4wM0gzVjUuNDloNlYzLjVIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMnYtMTRjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGFiIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzSDNjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMThjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkgzVjVoMTB2NGg4djEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRhYlVuc2VsZWN0ZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEgOWgyVjdIMXYyem0wIDRoMnYtMkgxdjJ6bTAtOGgyVjNjLTEuMSAwLTIgLjktMiAyem04IDE2aDJ2LTJIOXYyem0tOC00aDJ2LTJIMXYyem0yIDR2LTJIMWMwIDEuMS45IDIgMiAyek0yMSAzaC04djZoMTBWNWMwLTEuMS0uOS0yLTItMnptMCAxNGgydi0yaC0ydjJ6TTkgNWgyVjNIOXYyek01IDIxaDJ2LTJINXYyek01IDVoMlYzSDV2MnptMTYgMTZjMS4xIDAgMi0uOSAyLTJoLTJ2MnptMC04aDJ2LTJoLTJ2MnptLTggOGgydi0yaC0ydjJ6bTQgMGgydi0yaC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGhlYXRlcnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDN2MmgtMlYzSDh2Mkg2VjNINHYxOGgydi0yaDJ2Mmg4di0yaDJ2MmgyVjNoLTJ6TTggMTdINnYtMmgydjJ6bTAtNEg2di0yaDJ2MnptMC00SDZWN2gydjJ6bTEwIDhoLTJ2LTJoMnYyem0wLTRoLTJ2LTJoMnYyem0wLTRoLTJWN2gydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGh1bWJEb3duIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSAzSDZjLS44MyAwLTEuNTQuNS0xLjg0IDEuMjJsLTMuMDIgNy4wNWMtLjA5LjIzLS4xNC40Ny0uMTQuNzN2MS45MWwuMDEuMDFMMSAxNGMwIDEuMS45IDIgMiAyaDYuMzFsLS45NSA0LjU3LS4wMy4zMmMwIC40MS4xNy43OS40NCAxLjA2TDkuODMgMjNsNi41OS02LjU5Yy4zNi0uMzYuNTgtLjg2LjU4LTEuNDFWNWMwLTEuMS0uOS0yLTItMnptNCAwdjEyaDRWM2gtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUaHVtYlVwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xIDIxaDRWOUgxdjEyem0yMi0xMWMwLTEuMS0uOS0yLTItMmgtNi4zMWwuOTUtNC41Ny4wMy0uMzJjMC0uNDEtLjE3LS43OS0uNDQtMS4wNkwxNC4xNyAxIDcuNTkgNy41OUM3LjIyIDcuOTUgNyA4LjQ1IDcgOXYxMGMwIDEuMS45IDIgMiAyaDljLjgzIDAgMS41NC0uNSAxLjg0LTEuMjJsMy4wMi03LjA1Yy4wOS0uMjMuMTQtLjQ3LjE0LS43M3YtMS45MWwtLjAxLS4wMUwyMyAxMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUaHVtYnNVcERvd24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDZjMC0uNTUtLjQ1LTEtMS0xSDUuODJsLjY2LTMuMTguMDItLjIzYzAtLjMxLS4xMy0uNTktLjMzLS44TDUuMzggMCAuNDQgNC45NEMuMTcgNS4yMSAwIDUuNTkgMCA2djYuNWMwIC44My42NyAxLjUgMS41IDEuNWg2Ljc1Yy42MiAwIDEuMTUtLjM4IDEuMzgtLjkxbDIuMjYtNS4yOWMuMDctLjE3LjExLS4zNi4xMS0uNTVWNnptMTAuNSA0aC02Ljc1Yy0uNjIgMC0xLjE1LjM4LTEuMzguOTFsLTIuMjYgNS4yOWMtLjA3LjE3LS4xMS4zNi0uMTEuNTVWMThjMCAuNTUuNDUgMSAxIDFoNS4xOGwtLjY2IDMuMTgtLjAyLjI0YzAgLjMxLjEzLjU5LjMzLjhsLjc5Ljc4IDQuOTQtNC45NGMuMjctLjI3LjQ0LS42NS40NC0xLjA2di02LjVjMC0uODMtLjY3LTEuNS0xLjUtMS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRpbWVsaW5lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMyA4YzAgMS4xLS45IDItMiAyLS4xOCAwLS4zNS0uMDItLjUxLS4wN2wtMy41NiAzLjU1Yy4wNS4xNi4wNy4zNC4wNy41MiAwIDEuMS0uOSAyLTIgMnMtMi0uOS0yLTJjMC0uMTguMDItLjM2LjA3LS41MmwtMi41NS0yLjU1Yy0uMTYuMDUtLjM0LjA3LS41Mi4wN3MtLjM2LS4wMi0uNTItLjA3bC00LjU1IDQuNTZjLjA1LjE2LjA3LjMzLjA3LjUxIDAgMS4xLS45IDItMiAycy0yLS45LTItMiAuOS0yIDItMmMuMTggMCAuMzUuMDIuNTEuMDdsNC41Ni00LjU1QzguMDIgOS4zNiA4IDkuMTggOCA5YzAtMS4xLjktMiAyLTJzMiAuOSAyIDJjMCAuMTgtLjAyLjM2LS4wNy41MmwyLjU1IDIuNTVjLjE2LS4wNS4zNC0uMDcuNTItLjA3cy4zNi4wMi41Mi4wN2wzLjU1LTMuNTZDMTkuMDIgOC4zNSAxOSA4LjE4IDE5IDhjMC0xLjEuOS0yIDItMnMyIC45IDIgMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUb2MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgOWgxNFY3SDN2MnptMCA0aDE0di0ySDN2MnptMCA0aDE0di0ySDN2MnptMTYgMGgydi0yaC0ydjJ6bTAtMTB2MmgyVjdoLTJ6bTAgNmgydi0yaC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVG9kYXkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNoLTFWMWgtMnYySDhWMUg2djJINWMtMS4xMSAwLTEuOTkuOS0xLjk5IDJMMyAxOWMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2SDVWOGgxNHYxMXpNNyAxMGg1djVIN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUb2xsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSA0Yy00LjQyIDAtOCAzLjU4LTggOHMzLjU4IDggOCA4IDgtMy41OCA4LTgtMy41OC04LTgtOHptMCAxNGMtMy4zMSAwLTYtMi42OS02LTZzMi42OS02IDYtNiA2IDIuNjkgNiA2LTIuNjkgNi02IDZ6TTMgMTJjMC0yLjYxIDEuNjctNC44MyA0LTUuNjVWNC4yNkMzLjU1IDUuMTUgMSA4LjI3IDEgMTJzMi41NSA2Ljg1IDYgNy43NHYtMi4wOWMtMi4zMy0uODItNC0zLjA0LTQtNS42NXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUb3VjaEFwcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxMS4yNFY3LjVDOSA2LjEyIDEwLjEyIDUgMTEuNSA1UzE0IDYuMTIgMTQgNy41djMuNzRjMS4yMS0uODEgMi0yLjE4IDItMy43NEMxNiA1LjAxIDEzLjk5IDMgMTEuNSAzUzcgNS4wMSA3IDcuNWMwIDEuNTYuNzkgMi45MyAyIDMuNzR6bTkuODQgNC42M2wtNC41NC0yLjI2Yy0uMTctLjA3LS4zNS0uMTEtLjU0LS4xMUgxM3YtNmMwLS44My0uNjctMS41LTEuNS0xLjVTMTAgNi42NyAxMCA3LjV2MTAuNzRsLTMuNDMtLjcyYy0uMDgtLjAxLS4xNS0uMDMtLjI0LS4wMy0uMzEgMC0uNTkuMTMtLjc5LjMzbC0uNzkuOCA0Ljk0IDQuOTRjLjI3LjI3LjY1LjQ0IDEuMDYuNDRoNi43OWMuNzUgMCAxLjMzLS41NSAxLjQ0LTEuMjhsLjc1LTUuMjdjLjAxLS4wNy4wMi0uMTQuMDItLjIgMC0uNjItLjM4LTEuMTYtLjkxLTEuMzh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHJhY2tDaGFuZ2VzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4wNyA0LjkzbC0xLjQxIDEuNDFDMTkuMSA3Ljc5IDIwIDkuNzkgMjAgMTJjMCA0LjQyLTMuNTggOC04IDhzLTgtMy41OC04LThjMC00LjA4IDMuMDUtNy40NCA3LTcuOTN2Mi4wMkM4LjE2IDYuNTcgNiA5LjAzIDYgMTJjMCAzLjMxIDIuNjkgNiA2IDZzNi0yLjY5IDYtNmMwLTEuNjYtLjY3LTMuMTYtMS43Ni00LjI0bC0xLjQxIDEuNDFDMTUuNTUgOS45IDE2IDEwLjkgMTYgMTJjMCAyLjIxLTEuNzkgNC00IDRzLTQtMS43OS00LTRjMC0xLjg2IDEuMjgtMy40MSAzLTMuODZ2Mi4xNGMtLjYuMzUtMSAuOTgtMSAxLjcyIDAgMS4xLjkgMiAyIDJzMi0uOSAyLTJjMC0uNzQtLjQtMS4zOC0xLTEuNzJWMmgtMUM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwYzAtMi43Ni0xLjEyLTUuMjYtMi45My03LjA3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRyYW5zbGF0ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuODcgMTUuMDdsLTIuNTQtMi41MS4wMy0uMDNjMS43NC0xLjk0IDIuOTgtNC4xNyAzLjcxLTYuNTNIMTdWNGgtN1YySDh2MkgxdjEuOTloMTEuMTdDMTEuNSA3LjkyIDEwLjQ0IDkuNzUgOSAxMS4zNSA4LjA3IDEwLjMyIDcuMyA5LjE5IDYuNjkgOGgtMmMuNzMgMS42MyAxLjczIDMuMTcgMi45OCA0LjU2bC01LjA5IDUuMDJMNCAxOWw1LTUgMy4xMSAzLjExLjc2LTIuMDR6TTE4LjUgMTBoLTJMMTIgMjJoMmwxLjEyLTNoNC43NUwyMSAyMmgybC00LjUtMTJ6bS0yLjYyIDdsMS42Mi00LjMzTDE5LjEyIDE3aC0zLjI0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRyZW5kaW5nRG93biAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYgMThsMi4yOS0yLjI5LTQuODgtNC44OC00IDRMMiA3LjQxIDMuNDEgNmw2IDYgNC00IDYuMyA2LjI5TDIyIDEydjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHJlbmRpbmdGbGF0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiAxMmwtNC00djNIM3YyaDE1djN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHJlbmRpbmdVcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYgNmwyLjI5IDIuMjktNC44OCA0Ljg4LTQtNEwyIDE2LjU5IDMuNDEgMThsNi02IDQgNCA2LjMtNi4yOUwyMiAxMlY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFR1cm5lZEluIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyAzSDdjLTEuMSAwLTEuOTkuOS0xLjk5IDJMNSAyMWw3LTMgNyAzVjVjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHVybmVkSW5Ob3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDNIN2MtMS4xIDAtMS45OS45LTEuOTkgMkw1IDIxbDctMyA3IDNWNWMwLTEuMS0uOS0yLTItMnptMCAxNWwtNS0yLjE4TDcgMThWNWgxMHYxM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRVcGRhdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDEwLjEyaC02Ljc4bDIuNzQtMi44MmMtMi43My0yLjctNy4xNS0yLjgtOS44OC0uMS0yLjczIDIuNzEtMi43MyA3LjA4IDAgOS43OSAyLjczIDIuNzEgNy4xNSAyLjcxIDkuODggMEMxOC4zMiAxNS42NSAxOSAxNC4wOCAxOSAxMi4xaDJjMCAxLjk4LS44OCA0LjU1LTIuNjQgNi4yOS0zLjUxIDMuNDgtOS4yMSAzLjQ4LTEyLjcyIDAtMy41LTMuNDctMy41My05LjExLS4wMi0xMi41OCAzLjUxLTMuNDcgOS4xNC0zLjQ3IDEyLjY1IDBMMjEgM3Y3LjEyek0xMi41IDh2NC4yNWwzLjUgMi4wOC0uNzIgMS4yMUwxMSAxM1Y4aDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWZXJpZmllZFVzZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDFMMyA1djZjMCA1LjU1IDMuODQgMTAuNzQgOSAxMiA1LjE2LTEuMjYgOS02LjQ1IDktMTJWNWwtOS00em0tMiAxNmwtNC00IDEuNDEtMS40MUwxMCAxNC4xN2w2LjU5LTYuNTlMMTggOWwtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZXdBZ2VuZGEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDEzSDNjLS41NSAwLTEgLjQ1LTEgMXY2YzAgLjU1LjQ1IDEgMSAxaDE3Yy41NSAwIDEtLjQ1IDEtMXYtNmMwLS41NS0uNDUtMS0xLTF6bTAtMTBIM2MtLjU1IDAtMSAuNDUtMSAxdjZjMCAuNTUuNDUgMSAxIDFoMTdjLjU1IDAgMS0uNDUgMS0xVjRjMC0uNTUtLjQ1LTEtMS0xelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZXdBcnJheSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCAxOGgzVjVINHYxM3pNMTggNXYxM2gzVjVoLTN6TTggMThoOVY1SDh2MTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlld0Nhcm91c2VsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDE5aDEwVjRIN3YxNXptLTUtMmg0VjZIMnYxMXpNMTggNnYxMWg0VjZoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlld0NvbHVtbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAgMThoNVY1aC01djEzem0tNiAwaDVWNUg0djEzek0xNiA1djEzaDVWNWgtNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWaWV3RGF5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yIDIxaDE5di0zSDJ2M3pNMjAgOEgzYy0uNTUgMC0xIC40NS0xIDF2NmMwIC41NS40NSAxIDEgMWgxN2MuNTUgMCAxLS40NSAxLTFWOWMwLS41NS0uNDUtMS0xLTF6TTIgM3YzaDE5VjNIMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWaWV3SGVhZGxpbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTVoMTZ2LTJINHYyem0wIDRoMTZ2LTJINHYyem0wLThoMTZWOUg0djJ6bTAtNnYyaDE2VjVINHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWaWV3TGlzdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCAxNGg0di00SDR2NHptMCA1aDR2LTRINHY0ek00IDloNFY1SDR2NHptNSA1aDEydi00SDl2NHptMCA1aDEydi00SDl2NHpNOSA1djRoMTJWNUg5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZXdNb2R1bGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTFoNVY1SDR2NnptMCA3aDV2LTZINHY2em02IDBoNXYtNmgtNXY2em02IDBoNXYtNmgtNXY2em0tNi03aDVWNWgtNXY2em02LTZ2Nmg1VjVoLTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlld1F1aWx0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCAxOGg1di02aC01djZ6bS02IDBoNVY1SDR2MTN6bTEyIDBoNXYtNmgtNXY2ek0xMCA1djZoMTFWNUgxMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWaWV3U3RyZWFtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDE4aDE3di02SDR2NnpNNCA1djZoMTdWNUg0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZXdXZWVrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02IDVIM2MtLjU1IDAtMSAuNDUtMSAxdjEyYzAgLjU1LjQ1IDEgMSAxaDNjLjU1IDAgMS0uNDUgMS0xVjZjMC0uNTUtLjQ1LTEtMS0xem0xNCAwaC0zYy0uNTUgMC0xIC40NS0xIDF2MTJjMCAuNTUuNDUgMSAxIDFoM2MuNTUgMCAxLS40NSAxLTFWNmMwLS41NS0uNDUtMS0xLTF6bS03IDBoLTNjLS41NSAwLTEgLjQ1LTEgMXYxMmMwIC41NS40NSAxIDEgMWgzYy41NSAwIDEtLjQ1IDEtMVY2YzAtLjU1LS40NS0xLTEtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWaXNpYmlsaXR5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA0LjVDNyA0LjUgMi43MyA3LjYxIDEgMTJjMS43MyA0LjM5IDYgNy41IDExIDcuNXM5LjI3LTMuMTEgMTEtNy41Yy0xLjczLTQuMzktNi03LjUtMTEtNy41ek0xMiAxN2MtMi43NiAwLTUtMi4yNC01LTVzMi4yNC01IDUtNSA1IDIuMjQgNSA1LTIuMjQgNS01IDV6bTAtOGMtMS42NiAwLTMgMS4zNC0zIDNzMS4zNCAzIDMgMyAzLTEuMzQgMy0zLTEuMzQtMy0zLTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlzaWJpbGl0eU9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgN2MyLjc2IDAgNSAyLjI0IDUgNSAwIC42NS0uMTMgMS4yNi0uMzYgMS44M2wyLjkyIDIuOTJjMS41MS0xLjI2IDIuNy0yLjg5IDMuNDMtNC43NS0xLjczLTQuMzktNi03LjUtMTEtNy41LTEuNCAwLTIuNzQuMjUtMy45OC43bDIuMTYgMi4xNkMxMC43NCA3LjEzIDExLjM1IDcgMTIgN3pNMiA0LjI3bDIuMjggMi4yOC40Ni40NkMzLjA4IDguMyAxLjc4IDEwLjAyIDEgMTJjMS43MyA0LjM5IDYgNy41IDExIDcuNSAxLjU1IDAgMy4wMy0uMyA0LjM4LS44NGwuNDIuNDJMMTkuNzMgMjIgMjEgMjAuNzMgMy4yNyAzIDIgNC4yN3pNNy41MyA5LjhsMS41NSAxLjU1Yy0uMDUuMjEtLjA4LjQzLS4wOC42NSAwIDEuNjYgMS4zNCAzIDMgMyAuMjIgMCAuNDQtLjAzLjY1LS4wOGwxLjU1IDEuNTVjLS42Ny4zMy0xLjQxLjUzLTIuMi41My0yLjc2IDAtNS0yLjI0LTUtNSAwLS43OS4yLTEuNTMuNTMtMi4yem00LjMxLS43OGwzLjE1IDMuMTUuMDItLjE2YzAtMS42Ni0xLjM0LTMtMy0zbC0uMTcuMDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV2F0Y2hMYXRlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjUgMiAyIDYuNSAyIDEyczQuNSAxMCAxMCAxMCAxMC00LjUgMTAtMTBTMTcuNSAyIDEyIDJ6bTQuMiAxNC4yTDExIDEzVjdoMS41djUuMmw0LjUgMi43LS44IDEuM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXb3JrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2aC00VjRjMC0xLjExLS44OS0yLTItMmgtNGMtMS4xMSAwLTIgLjg5LTIgMnYySDRjLTEuMTEgMC0xLjk5Ljg5LTEuOTkgMkwyIDE5YzAgMS4xMS44OSAyIDIgMmgxNmMxLjExIDAgMi0uODkgMi0yVjhjMC0xLjExLS44OS0yLTItMnptLTYgMGgtNFY0aDR2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRZb3V0dWJlU2VhcmNoZWRGb3IgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjAxIDE0aC0uOGwtLjI3LS4yN2MuOTgtMS4xNCAxLjU3LTIuNjEgMS41Ny00LjIzIDAtMy41OS0yLjkxLTYuNS02LjUtNi41cy02LjUgMy02LjUgNi41SDJsMy44NCA0IDQuMTYtNEg2LjUxQzYuNTEgNyA4LjUzIDUgMTEuMDEgNXM0LjUgMi4wMSA0LjUgNC41YzAgMi40OC0yLjAyIDQuNS00LjUgNC41LS42NSAwLTEuMjYtLjE0LTEuODItLjM4TDcuNzEgMTUuMWMuOTcuNTcgMi4wOS45IDMuMy45IDEuNjEgMCAzLjA4LS41OSA0LjIyLTEuNTdsLjI3LjI3di43OWw1LjAxIDQuOTlMMjIgMTlsLTQuOTktNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRab29tSW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjUgMTRoLS43OWwtLjI4LS4yN0MxNS40MSAxMi41OSAxNiAxMS4xMSAxNiA5LjUgMTYgNS45MSAxMy4wOSAzIDkuNSAzUzMgNS45MSAzIDkuNSA1LjkxIDE2IDkuNSAxNmMxLjYxIDAgMy4wOS0uNTkgNC4yMy0xLjU3bC4yNy4yOHYuNzlsNSA0Ljk5TDIwLjQ5IDE5bC00Ljk5LTV6bS02IDBDNy4wMSAxNCA1IDExLjk5IDUgOS41UzcuMDEgNSA5LjUgNSAxNCA3LjAxIDE0IDkuNSAxMS45OSAxNCA5LjUgMTR6bTIuNS00aC0ydjJIOXYtMkg3VjloMlY3aDF2MmgydjF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kWm9vbU91dCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNSAxNGgtLjc5bC0uMjgtLjI3QzE1LjQxIDEyLjU5IDE2IDExLjExIDE2IDkuNSAxNiA1LjkxIDEzLjA5IDMgOS41IDNTMyA1LjkxIDMgOS41IDUuOTEgMTYgOS41IDE2YzEuNjEgMCAzLjA5LS41OSA0LjIzLTEuNTdsLjI3LjI4di43OWw1IDQuOTlMMjAuNDkgMTlsLTQuOTktNXptLTYgMEM3LjAxIDE0IDUgMTEuOTkgNSA5LjVTNy4wMSA1IDkuNSA1IDE0IDcuMDEgMTQgOS41IDExLjk5IDE0IDkuNSAxNHpNNyA5aDV2MUg3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkZEFsZXJ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMC4wMSAyMS4wMWMwIDEuMS44OSAxLjk5IDEuOTkgMS45OXMxLjk5LS44OSAxLjk5LTEuOTloLTMuOTh6bTguODctNC4xOVYxMWMwLTMuMjUtMi4yNS01Ljk3LTUuMjktNi42OXYtLjcyQzEzLjU5IDIuNzEgMTIuODggMiAxMiAycy0xLjU5LjcxLTEuNTkgMS41OXYuNzJDNy4zNyA1LjAzIDUuMTIgNy43NSA1LjEyIDExdjUuODJMMyAxOC45NFYyMGgxOHYtMS4wNmwtMi4xMi0yLjEyek0xNiAxMy4wMWgtM3YzaC0ydi0zSDhWMTFoM1Y4aDJ2M2gzdjIuMDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXJyb3IgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTEgMTVoLTJ2LTJoMnYyem0wLTRoLTJWN2gydjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXJyb3JPdXRsaW5lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAxNWgydjJoLTJ6bTAtOGgydjZoLTJ6bS45OS01QzYuNDcgMiAyIDYuNDggMiAxMnM0LjQ3IDEwIDkuOTkgMTBDMTcuNTIgMjIgMjIgMTcuNTIgMjIgMTJTMTcuNTIgMiAxMS45OSAyek0xMiAyMGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV2FybmluZyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMSAyMWgyMkwxMiAyIDEgMjF6bTEyLTNoLTJ2LTJoMnYyem0wLTRoLTJ2LTRoMnY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkZFRvUXVldWUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xMSAwLTIgLjg5LTIgMnYxMmMwIDEuMS44OSAyIDIgMmg1djJoOHYtMmg1YzEuMSAwIDEuOTktLjkgMS45OS0yTDIzIDVjMC0xLjExLS45LTItMi0yem0wIDE0SDNWNWgxOHYxMnptLTUtN3YyaC0zdjNoLTJ2LTNIOHYtMmgzVjdoMnYzaDN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWlycGxheSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiAyMmgxMmwtNi02ek0yMSAzSDNjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoNHYtMkgzVjVoMTh2MTJoLTR2Mmg0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWxidW0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTAgMTQuNWMtMi40OSAwLTQuNS0yLjAxLTQuNS00LjVTOS41MSA3LjUgMTIgNy41czQuNSAyLjAxIDQuNSA0LjUtMi4wMSA0LjUtNC41IDQuNXptMC01LjVjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBcnRUcmFjayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjIgMTNoLTh2LTJoOHYyem0wLTZoLTh2Mmg4Vjd6bS04IDEwaDh2LTJoLTh2MnptLTItOHY2YzAgMS4xLS45IDItMiAySDRjLTEuMSAwLTItLjktMi0yVjljMC0xLjEuOS0yIDItMmg2YzEuMSAwIDIgLjkgMiAyem0tMS41IDZsLTIuMjUtMy0xLjc1IDIuMjYtMS4yNS0xLjUxTDMuNSAxNWg3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEF2VGltZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExIDE3YzAgLjU1LjQ1IDEgMSAxczEtLjQ1IDEtMS0uNDUtMS0xLTEtMSAuNDUtMSAxem0wLTE0djRoMlY1LjA4YzMuMzkuNDkgNiAzLjM5IDYgNi45MiAwIDMuODctMy4xMyA3LTcgN3MtNy0zLjEzLTctN2MwLTEuNjguNTktMy4yMiAxLjU4LTQuNDJMMTIgMTNsMS40MS0xLjQxLTYuOC02Ljh2LjAyQzQuNDIgNi40NSAzIDkuMDUgMyAxMmMwIDQuOTcgNC4wMiA5IDkgOSA0Ljk3IDAgOS00LjAzIDktOXMtNC4wMy05LTktOWgtMXptNyA5YzAtLjU1LS40NS0xLTEtMXMtMSAuNDUtMSAxIC40NSAxIDEgMSAxLS40NSAxLTF6TTYgMTJjMCAuNTUuNDUgMSAxIDFzMS0uNDUgMS0xLS40NS0xLTEtMS0xIC40NS0xIDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnJhbmRpbmdXYXRlcm1hcmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2aC05di02aDl2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYWxsVG9BY3Rpb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2SDN2LTNoMTh2M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDbG9zZWRDYXB0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA0SDVjLTEuMTEgMC0yIC45LTIgMnYxMmMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0tOCA3SDkuNXYtLjVoLTJ2M2gyVjEzSDExdjFjMCAuNTUtLjQ1IDEtMSAxSDdjLS41NSAwLTEtLjQ1LTEtMXYtNGMwLS41NS40NS0xIDEtMWgzYy41NSAwIDEgLjQ1IDEgMXYxem03IDBoLTEuNXYtLjVoLTJ2M2gyVjEzSDE4djFjMCAuNTUtLjQ1IDEtMSAxaC0zYy0uNTUgMC0xLS40NS0xLTF2LTRjMC0uNTUuNDUtMSAxLTFoM2MuNTUgMCAxIC40NSAxIDF2MXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFcXVhbGl6ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDIwaDRWNGgtNHYxNnptLTYgMGg0di04SDR2OHpNMTYgOXYxMWg0VjloLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXhwbGljaXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tNCA2aC00djJoNHYyaC00djJoNHYySDlWN2g2djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmFzdEZvcndhcmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMThsOC41LTZMNCA2djEyem05LTEydjEybDguNS02TDEzIDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmFzdFJld2luZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEgMThWNmwtOC41IDYgOC41IDZ6bS41LTZsOC41IDZWNmwtOC41IDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmVhdHVyZWRQbGF5TGlzdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bS05IDhIM1Y5aDl2MnptMC00SDNWNWg5djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmVhdHVyZWRWaWRlbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bS05IDlIM1Y1aDl2N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWJlckR2ciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNSAxMC41aDJ2MWgtMnptLTEzIDBoMnYzaC0yek0yMSAzSDNjLTEuMTEgMC0yIC44OS0yIDJ2MTRjMCAxLjEuODkgMiAyIDJoMThjMS4xMSAwIDItLjkgMi0yVjVjMC0xLjExLS44OS0yLTItMnpNOCAxMy41YzAgLjg1LS42NSAxLjUtMS41IDEuNUgzVjloMy41Yy44NSAwIDEuNS42NSAxLjUgMS41djN6bTQuNjIgMS41aC0xLjVMOS4zNyA5aDEuNWwxIDMuNDMgMS0zLjQzaDEuNWwtMS43NSA2ek0yMSAxMS41YzAgLjYtLjQgMS4xNS0uOSAxLjRMMjEgMTVoLTEuNWwtLjg1LTJIMTcuNXYySDE2VjloMy41Yy44NSAwIDEuNS42NSAxLjUgMS41djF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmliZXJNYW51YWxSZWNvcmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTJcIixcImN5XCI6XCIxMlwiLFwiclwiOlwiOFwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpYmVyTmV3IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA0SDRjLTEuMTEgMC0xLjk5Ljg5LTEuOTkgMkwyIDE4YzAgMS4xMS44OSAyIDIgMmgxNmMxLjExIDAgMi0uODkgMi0yVjZjMC0xLjExLS44OS0yLTItMnpNOC41IDE1SDcuM2wtMi41NS0zLjVWMTVIMy41VjloMS4yNWwyLjUgMy41VjlIOC41djZ6bTUtNC43NEgxMXYxLjEyaDIuNXYxLjI2SDExdjEuMTFoMi41VjE1aC00VjloNHYxLjI2em03IDMuNzRjMCAuNTUtLjQ1IDEtMSAxaC00Yy0uNTUgMC0xLS40NS0xLTFWOWgxLjI1djQuNTFoMS4xM1Y5Ljk5aDEuMjV2My41MWgxLjEyVjloMS4yNXY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpYmVyUGluIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01LjUgMTAuNWgydjFoLTJ6TTIwIDRINGMtMS4xMSAwLTEuOTkuODktMS45OSAyTDIgMThjMCAxLjExLjg5IDIgMiAyaDE2YzEuMTEgMCAyLS44OSAyLTJWNmMwLTEuMTEtLjg5LTItMi0yek05IDExLjVjMCAuODUtLjY1IDEuNS0xLjUgMS41aC0ydjJINFY5aDMuNWMuODUgMCAxLjUuNjUgMS41IDEuNXYxem0zLjUgMy41SDExVjloMS41djZ6bTcuNSAwaC0xLjJsLTIuNTUtMy41VjE1SDE1VjloMS4yNWwyLjUgMy41VjlIMjB2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWJlclNtYXJ0UmVjb3JkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiZ1wiLFwiYXR0clwiOnt9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOVwiLFwiY3lcIjpcIjEyXCIsXCJyXCI6XCI4XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgNC4yNnYyLjA5YzIuMzMuODIgNCAzLjA0IDQgNS42NXMtMS42NyA0LjgzLTQgNS42NXYyLjA5YzMuNDUtLjg5IDYtNC4wMSA2LTcuNzRzLTIuNTUtNi44NS02LTcuNzR6XCJ9fV19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3J3YXJkMTAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTNjMCA0LjQgMy42IDggOCA4czgtMy42IDgtOGgtMmMwIDMuMy0yLjcgNi02IDZzLTYtMi43LTYtNiAyLjctNiA2LTZ2NGw1LTUtNS01djRjLTQuNCAwLTggMy42LTggOHptNi44IDNIMTB2LTMuM0w5IDEzdi0uN2wxLjgtLjZoLjFWMTZ6bTQuMy0xLjhjMCAuMyAwIC42LS4xLjhsLS4zLjZzLS4zLjMtLjUuMy0uNC4xLS42LjEtLjQgMC0uNi0uMS0uMy0uMi0uNS0uMy0uMi0uMy0uMy0uNi0uMS0uNS0uMS0uOHYtLjdjMC0uMyAwLS42LjEtLjhsLjMtLjZzLjMtLjMuNS0uMy40LS4xLjYtLjEuNCAwIC42LjEuMy4yLjUuMy4yLjMuMy42LjEuNS4xLjh2Ljd6bS0uOC0uOHYtLjVzLS4xLS4yLS4xLS4zLS4xLS4xLS4yLS4yLS4yLS4xLS4zLS4xLS4yIDAtLjMuMWwtLjIuMnMtLjEuMi0uMS4zdjJzLjEuMi4xLjMuMS4xLjIuMi4yLjEuMy4xLjIgMCAuMy0uMWwuMi0uMnMuMS0uMi4xLS4zdi0xLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9yd2FyZDMwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LjYgMTMuNWguNGMuMiAwIC40LS4xLjUtLjJzLjItLjIuMi0uNHYtLjJzLS4xLS4xLS4xLS4yLS4xLS4xLS4yLS4xaC0uNXMtLjEuMS0uMi4xLS4xLjEtLjEuMnYuMmgtMWMwLS4yIDAtLjMuMS0uNXMuMi0uMy4zLS40LjMtLjIuNC0uMi40LS4xLjUtLjFjLjIgMCAuNCAwIC42LjFzLjMuMS41LjIuMi4yLjMuNC4xLjMuMS41di4zcy0uMS4yLS4xLjMtLjEuMi0uMi4yLS4yLjEtLjMuMmMuMi4xLjQuMi41LjRzLjIuNC4yLjZjMCAuMiAwIC40LS4xLjVzLS4yLjMtLjMuNC0uMy4yLS41LjItLjQuMS0uNi4xYy0uMiAwLS40IDAtLjUtLjFzLS4zLS4xLS41LS4yLS4yLS4yLS4zLS40LS4xLS40LS4xLS42aC44di4ycy4xLjEuMS4yLjEuMS4yLjFoLjVzLjEtLjEuMi0uMS4xLS4xLjEtLjJ2LS41cy0uMS0uMS0uMS0uMi0uMS0uMS0uMi0uMWgtLjZ2LS43em01LjcuN2MwIC4zIDAgLjYtLjEuOGwtLjMuNnMtLjMuMy0uNS4zLS40LjEtLjYuMS0uNCAwLS42LS4xLS4zLS4yLS41LS4zLS4yLS4zLS4zLS42LS4xLS41LS4xLS44di0uN2MwLS4zIDAtLjYuMS0uOGwuMy0uNnMuMy0uMy41LS4zLjQtLjEuNi0uMS40IDAgLjYuMS4zLjIuNS4zLjIuMy4zLjYuMS41LjEuOHYuN3ptLS45LS44di0uNXMtLjEtLjItLjEtLjMtLjEtLjEtLjItLjItLjItLjEtLjMtLjEtLjIgMC0uMy4xbC0uMi4ycy0uMS4yLS4xLjN2MnMuMS4yLjEuMy4xLjEuMi4yLjIuMS4zLjEuMiAwIC4zLS4xbC4yLS4ycy4xLS4yLjEtLjN2LTEuNXpNNCAxM2MwIDQuNCAzLjYgOCA4IDhzOC0zLjYgOC04aC0yYzAgMy4zLTIuNyA2LTYgNnMtNi0yLjctNi02IDIuNy02IDYtNnY0bDUtNS01LTV2NGMtNC40IDAtOCAzLjYtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcndhcmQ1IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDEzYzAgNC40IDMuNiA4IDggOHM4LTMuNiA4LThoLTJjMCAzLjMtMi43IDYtNiA2cy02LTIuNy02LTYgMi43LTYgNi02djRsNS01LTUtNXY0Yy00LjQgMC04IDMuNi04IDh6bTYuNy45bC4yLTIuMmgyLjR2LjdoLTEuN2wtLjEuOXMuMSAwIC4xLS4xLjEgMCAuMS0uMS4xIDAgLjIgMGguMmMuMiAwIC40IDAgLjUuMXMuMy4yLjQuMy4yLjMuMy41LjEuNC4xLjZjMCAuMiAwIC40LS4xLjVzLS4xLjMtLjMuNS0uMy4yLS41LjMtLjQuMS0uNi4xYy0uMiAwLS40IDAtLjUtLjFzLS4zLS4xLS41LS4yLS4yLS4yLS4zLS40LS4xLS4zLS4xLS41aC44YzAgLjIuMS4zLjIuNHMuMi4xLjQuMWMuMSAwIC4yIDAgLjMtLjFsLjItLjJzLjEtLjIuMS0uM3YtLjZsLS4xLS4yLS4yLS4ycy0uMi0uMS0uMy0uMWgtLjJzLS4xIDAtLjIuMS0uMSAwLS4xLjEtLjEuMS0uMS4xaC0uNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRHYW1lcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgNy41VjJIOXY1LjVsMyAzIDMtM3pNNy41IDlIMnY2aDUuNWwzLTMtMy0zek05IDE2LjVWMjJoNnYtNS41bC0zLTMtMyAzek0xNi41IDlsLTMgMyAzIDNIMjJWOWgtNS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMTEgMC0yIC45LTIgMnYxNGMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tOCAxMkg5LjV2LTJoLTJ2Mkg2VjloMS41djIuNWgyVjlIMTF2NnptMi02aDRjLjU1IDAgMSAuNDUgMSAxdjRjMCAuNTUtLjQ1IDEtMSAxaC00Vjl6bTEuNSA0LjVoMnYtM2gtMnYzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhlYXJpbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDIwYy0uMjkgMC0uNTYtLjA2LS43Ni0uMTUtLjcxLS4zNy0xLjIxLS44OC0xLjcxLTIuMzgtLjUxLTEuNTYtMS40Ny0yLjI5LTIuMzktMy0uNzktLjYxLTEuNjEtMS4yNC0yLjMyLTIuNTNDOS4yOSAxMC45OCA5IDkuOTMgOSA5YzAtMi44IDIuMi01IDUtNXM1IDIuMiA1IDVoMmMwLTMuOTMtMy4wNy03LTctN1M3IDUuMDcgNyA5YzAgMS4yNi4zOCAyLjY1IDEuMDcgMy45LjkxIDEuNjUgMS45OCAyLjQ4IDIuODUgMy4xNS44MS42MiAxLjM5IDEuMDcgMS43MSAyLjA1LjYgMS44MiAxLjM3IDIuODQgMi43MyAzLjU1LjUxLjIzIDEuMDcuMzUgMS42NC4zNSAyLjIxIDAgNC0xLjc5IDQtNGgtMmMwIDEuMS0uOSAyLTIgMnpNNy42NCAyLjY0TDYuMjIgMS4yMkM0LjIzIDMuMjEgMyA1Ljk2IDMgOXMxLjIzIDUuNzkgMy4yMiA3Ljc4bDEuNDEtMS40MUM2LjAxIDEzLjc0IDUgMTEuNDkgNSA5czEuMDEtNC43NCAyLjY0LTYuMzZ6TTExLjUgOWMwIDEuMzggMS4xMiAyLjUgMi41IDIuNXMyLjUtMS4xMiAyLjUtMi41LTEuMTItMi41LTIuNS0yLjUtMi41IDEuMTItMi41IDIuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIaWdoUXVhbGl0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgNEg1Yy0xLjExIDAtMiAuOS0yIDJ2MTJjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNmMwLTEuMS0uOS0yLTItMnptLTggMTFIOS41di0yaC0ydjJINlY5aDEuNXYyLjVoMlY5SDExdjZ6bTctMWMwIC41NS0uNDUgMS0xIDFoLS43NXYxLjVoLTEuNVYxNUgxNGMtLjU1IDAtMS0uNDUtMS0xdi00YzAtLjU1LjQ1LTEgMS0xaDNjLjU1IDAgMSAuNDUgMSAxdjR6bS0zLjUtLjVoMnYtM2gtMnYzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExpYnJhcnlBZGQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgNkgydjE0YzAgMS4xLjkgMiAyIDJoMTR2LTJINFY2em0xNi00SDhjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTEgOWgtNHY0aC0ydi00SDlWOWg0VjVoMnY0aDR2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMaWJyYXJ5Qm9va3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgNkgydjE0YzAgMS4xLjkgMiAyIDJoMTR2LTJINFY2em0xNi00SDhjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTEgOUg5VjloMTB2MnptLTQgNEg5di0yaDZ2MnptNC04SDlWNWgxMHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExpYnJhcnlNdXNpYyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMkg4Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDEyYzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS0yIDVoLTN2NS41YzAgMS4zOC0xLjEyIDIuNS0yLjUgMi41UzEwIDEzLjg4IDEwIDEyLjVzMS4xMi0yLjUgMi41LTIuNWMuNTcgMCAxLjA4LjE5IDEuNS41MVY1aDR2MnpNNCA2SDJ2MTRjMCAxLjEuOSAyIDIgMmgxNHYtMkg0VjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9vcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNFYxTDggNWw0IDRWNmMzLjMxIDAgNiAyLjY5IDYgNiAwIDEuMDEtLjI1IDEuOTctLjcgMi44bDEuNDYgMS40NkMxOS41NCAxNS4wMyAyMCAxMy41NyAyMCAxMmMwLTQuNDItMy41OC04LTgtOHptMCAxNGMtMy4zMSAwLTYtMi42OS02LTYgMC0xLjAxLjI1LTEuOTcuNy0yLjhMNS4yNCA3Ljc0QzQuNDYgOC45NyA0IDEwLjQzIDQgMTJjMCA0LjQyIDMuNTggOCA4IDh2M2w0LTQtNC00djN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTWljIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxNGMxLjY2IDAgMi45OS0xLjM0IDIuOTktM0wxNSA1YzAtMS42Ni0xLjM0LTMtMy0zUzkgMy4zNCA5IDV2NmMwIDEuNjYgMS4zNCAzIDMgM3ptNS4zLTNjMCAzLTIuNTQgNS4xLTUuMyA1LjFTNi43IDE0IDYuNyAxMUg1YzAgMy40MSAyLjcyIDYuMjMgNiA2LjcyVjIxaDJ2LTMuMjhjMy4yOC0uNDggNi0zLjMgNi02LjcyaC0xLjd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTWljTm9uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTRjMS42NiAwIDIuOTktMS4zNCAyLjk5LTNMMTUgNWMwLTEuNjYtMS4zNC0zLTMtM1M5IDMuMzQgOSA1djZjMCAxLjY2IDEuMzQgMyAzIDN6bS0xLjItOS4xYzAtLjY2LjU0LTEuMiAxLjItMS4yLjY2IDAgMS4yLjU0IDEuMiAxLjJsLS4wMSA2LjJjMCAuNjYtLjUzIDEuMi0xLjE5IDEuMi0uNjYgMC0xLjItLjU0LTEuMi0xLjJWNC45em02LjUgNi4xYzAgMy0yLjU0IDUuMS01LjMgNS4xUzYuNyAxNCA2LjcgMTFINWMwIDMuNDEgMi43MiA2LjIzIDYgNi43MlYyMWgydi0zLjI4YzMuMjgtLjQ4IDYtMy4zIDYtNi43MmgtMS43elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1pY09mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgMTFoLTEuN2MwIC43NC0uMTYgMS40My0uNDMgMi4wNWwxLjIzIDEuMjNjLjU2LS45OC45LTIuMDkuOS0zLjI4em0tNC4wMi4xN2MwLS4wNi4wMi0uMTEuMDItLjE3VjVjMC0xLjY2LTEuMzQtMy0zLTNTOSAzLjM0IDkgNXYuMThsNS45OCA1Ljk5ek00LjI3IDNMMyA0LjI3bDYuMDEgNi4wMVYxMWMwIDEuNjYgMS4zMyAzIDIuOTkgMyAuMjIgMCAuNDQtLjAzLjY1LS4wOGwxLjY2IDEuNjZjLS43MS4zMy0xLjUuNTItMi4zMS41Mi0yLjc2IDAtNS4zLTIuMS01LjMtNS4xSDVjMCAzLjQxIDIuNzIgNi4yMyA2IDYuNzJWMjFoMnYtMy4yOGMuOTEtLjEzIDEuNzctLjQ1IDIuNTQtLjlMMTkuNzMgMjEgMjEgMTkuNzMgNC4yNyAzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1vdmllIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCA0bDIgNGgtM2wtMi00aC0ybDIgNGgtM2wtMi00SDhsMiA0SDdMNSA0SDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAxOGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjRoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTXVzaWNWaWRlbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTZIM1Y1aDE4djE0ek04IDE1YzAtMS42NiAxLjM0LTMgMy0zIC4zNSAwIC42OS4wNyAxIC4xOFY2aDV2MmgtM3Y3LjAzYy0uMDIgMS42NC0xLjM1IDIuOTctMyAyLjk3LTEuNjYgMC0zLTEuMzQtMy0zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5ld1JlbGVhc2VzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMyAxMmwtMi40NC0yLjc4LjM0LTMuNjgtMy42MS0uODItMS44OS0zLjE4TDEyIDMgOC42IDEuNTQgNi43MSA0LjcybC0zLjYxLjgxLjM0IDMuNjhMMSAxMmwyLjQ0IDIuNzgtLjM0IDMuNjkgMy42MS44MiAxLjg5IDMuMThMMTIgMjFsMy40IDEuNDYgMS44OS0zLjE4IDMuNjEtLjgyLS4zNC0zLjY4TDIzIDEyem0tMTAgNWgtMnYtMmgydjJ6bTAtNGgtMlY3aDJ2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROb3RJbnRlcmVzdGVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQyIDAtOC0zLjU4LTgtOCAwLTEuODUuNjMtMy41NSAxLjY5LTQuOUwxNi45IDE4LjMxQzE1LjU1IDE5LjM3IDEzLjg1IDIwIDEyIDIwem02LjMxLTMuMUw3LjEgNS42OUM4LjQ1IDQuNjMgMTAuMTUgNCAxMiA0YzQuNDIgMCA4IDMuNTggOCA4IDAgMS44NS0uNjMgMy41NS0xLjY5IDQuOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROb3RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiAxMGwtNi02SDRjLTEuMSAwLTIgLjktMiAydjEyLjAxYzAgMS4xLjkgMS45OSAyIDEuOTlsMTYtLjAxYzEuMSAwIDItLjg5IDItMS45OXYtOHptLTctNC41bDUuNSA1LjVIMTVWNS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBhdXNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02IDE5aDRWNUg2djE0em04LTE0djE0aDRWNWgtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQYXVzZUNpcmNsZUZpbGxlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptLTEgMTRIOVY4aDJ2OHptNCAwaC0yVjhoMnY4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBhdXNlQ2lyY2xlT3V0bGluZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxNmgyVjhIOXY4em0zLTE0QzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQxIDAtOC0zLjU5LTgtOHMzLjU5LTggOC04IDggMy41OSA4IDgtMy41OSA4LTggOHptMS00aDJWOGgtMnY4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBsYXlBcnJvdyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOCA1djE0bDExLTd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGxheUNpcmNsZUZpbGxlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptLTIgMTQuNXYtOWw2IDQuNS02IDQuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQbGF5Q2lyY2xlT3V0bGluZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAgMTYuNWw2LTQuNS02LTQuNXY5ek0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQxIDAtOC0zLjU5LTgtOHMzLjU5LTggOC04IDggMy41OSA4IDgtMy41OSA4LTggOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQbGF5bGlzdEFkZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgMTBIMnYyaDEydi0yem0wLTRIMnYyaDEyVjZ6bTQgOHYtNGgtMnY0aC00djJoNHY0aDJ2LTRoNHYtMmgtNHpNMiAxNmg4di0ySDJ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQbGF5bGlzdEFkZENoZWNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNCAxMEgydjJoMTJ2LTJ6bTAtNEgydjJoMTJWNnpNMiAxNmg4di0ySDJ2MnptMTkuNS00LjVMMjMgMTNsLTYuOTkgNy00LjUxLTQuNUwxMyAxNGwzLjAxIDMgNS40OS01LjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGxheWxpc3RQbGF5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA5SDJ2MmgxN1Y5em0wLTRIMnYyaDE3VjV6TTIgMTVoMTN2LTJIMnYyem0xNS0ydjZsNS0zLTUtM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRRdWV1ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCA2SDJ2MTRjMCAxLjEuOSAyIDIgMmgxNHYtMkg0VjZ6bTE2LTRIOGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tMSA5aC00djRoLTJ2LTRIOVY5aDRWNWgydjRoNHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFF1ZXVlTXVzaWMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1IDZIM3YyaDEyVjZ6bTAgNEgzdjJoMTJ2LTJ6TTMgMTZoOHYtMkgzdjJ6TTE3IDZ2OC4xOGMtLjMxLS4xMS0uNjUtLjE4LTEtLjE4LTEuNjYgMC0zIDEuMzQtMyAzczEuMzQgMyAzIDMgMy0xLjM0IDMtM1Y4aDNWNmgtNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRRdWV1ZVBsYXlOZXh0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzSDNjLTEuMTEgMC0yIC44OS0yIDJ2MTJjMCAxLjEuODkgMiAyIDJoNXYyaDh2LTJoMnYtMkgzVjVoMTh2OGgyVjVjMC0xLjExLS45LTItMi0yem0tOCA3VjdoLTJ2M0g4djJoM3YzaDJ2LTNoM3YtMmgtM3ptMTEgOGwtNC41IDQuNUwxOCAyMWwzLTMtMy0zIDEuNS0xLjVMMjQgMTh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmFkaW8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuMjQgNi4xNUMyLjUxIDYuNDMgMiA3LjE3IDIgOHYxMmMwIDEuMS44OSAyIDIgMmgxNmMxLjExIDAgMi0uOSAyLTJWOGMwLTEuMTEtLjg5LTItMi0ySDguM2w4LjI2LTMuMzRMMTUuODggMSAzLjI0IDYuMTV6TTcgMjBjLTEuNjYgMC0zLTEuMzQtMy0zczEuMzQtMyAzLTMgMyAxLjM0IDMgMy0xLjM0IDMtMyAzem0xMy04aC0ydi0yaC0ydjJINFY4aDE2djR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVjZW50QWN0b3JzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSA1djE0aDJWNWgtMnptLTQgMTRoMlY1aC0ydjE0ek0xNCA1SDJjLS41NSAwLTEgLjQ1LTEgMXYxMmMwIC41NS40NSAxIDEgMWgxMmMuNTUgMCAxLS40NSAxLTFWNmMwLS41NS0uNDUtMS0xLTF6TTggNy43NWMxLjI0IDAgMi4yNSAxLjAxIDIuMjUgMi4yNVM5LjI0IDEyLjI1IDggMTIuMjUgNS43NSAxMS4yNCA1Ljc1IDEwIDYuNzYgNy43NSA4IDcuNzV6TTEyLjUgMTdoLTl2LS43NWMwLTEuNSAzLTIuMjUgNC41LTIuMjVzNC41Ljc1IDQuNSAyLjI1VjE3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlbW92ZUZyb21RdWV1ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzYy0xLjExIDAtMiAuODktMiAydjEyYzAgMS4xLjg5IDIgMiAyaDV2Mmg4di0yaDVjMS4xIDAgMS45OS0uOSAxLjk5LTJMMjMgNWMwLTEuMTEtLjktMi0yLTJ6bTAgMTRIM1Y1aDE4djEyem0tNS03djJIOHYtMmg4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlcGVhdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyA3aDEwdjNsNC00LTQtNHYzSDV2NmgyVjd6bTEwIDEwSDd2LTNsLTQgNCA0IDR2LTNoMTJ2LTZoLTJ2NHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZXBlYXRPbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgN2gxMHYzbDQtNC00LTR2M0g1djZoMlY3em0xMCAxMEg3di0zbC00IDQgNCA0di0zaDEydi02aC0ydjR6bS00LTJWOWgtMWwtMiAxdjFoMS41djRIMTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVwbGF5MTAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDVWMUw3IDZsNSA1VjdjMy4zIDAgNiAyLjcgNiA2cy0yLjcgNi02IDYtNi0yLjctNi02SDRjMCA0LjQgMy42IDggOCA4czgtMy42IDgtOC0zLjYtOC04LTh6bS0xLjEgMTFIMTB2LTMuM0w5IDEzdi0uN2wxLjgtLjZoLjFWMTZ6bTQuMy0xLjhjMCAuMyAwIC42LS4xLjhsLS4zLjZzLS4zLjMtLjUuMy0uNC4xLS42LjEtLjQgMC0uNi0uMS0uMy0uMi0uNS0uMy0uMi0uMy0uMy0uNi0uMS0uNS0uMS0uOHYtLjdjMC0uMyAwLS42LjEtLjhsLjMtLjZzLjMtLjMuNS0uMy40LS4xLjYtLjEuNCAwIC42LjFjLjIuMS4zLjIuNS4zcy4yLjMuMy42LjEuNS4xLjh2Ljd6bS0uOS0uOHYtLjVzLS4xLS4yLS4xLS4zLS4xLS4xLS4yLS4yLS4yLS4xLS4zLS4xLS4yIDAtLjMuMWwtLjIuMnMtLjEuMi0uMS4zdjJzLjEuMi4xLjMuMS4xLjIuMi4yLjEuMy4xLjIgMCAuMy0uMWwuMi0uMnMuMS0uMi4xLS4zdi0xLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVwbGF5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA1VjFMNyA2bDUgNVY3YzMuMzEgMCA2IDIuNjkgNiA2cy0yLjY5IDYtNiA2LTYtMi42OS02LTZINGMwIDQuNDIgMy41OCA4IDggOHM4LTMuNTggOC04LTMuNTgtOC04LTh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVwbGF5MzAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDVWMUw3IDZsNSA1VjdjMy4zIDAgNiAyLjcgNiA2cy0yLjcgNi02IDYtNi0yLjctNi02SDRjMCA0LjQgMy42IDggOCA4czgtMy42IDgtOC0zLjYtOC04LTh6bS0yLjQgOC41aC40Yy4yIDAgLjQtLjEuNS0uMnMuMi0uMi4yLS40di0uMnMtLjEtLjEtLjEtLjItLjEtLjEtLjItLjFoLS41cy0uMS4xLS4yLjEtLjEuMS0uMS4ydi4yaC0xYzAtLjIgMC0uMy4xLS41cy4yLS4zLjMtLjQuMy0uMi40LS4yLjQtLjEuNS0uMWMuMiAwIC40IDAgLjYuMXMuMy4xLjUuMi4yLjIuMy40LjEuMy4xLjV2LjNzLS4xLjItLjEuMy0uMS4yLS4yLjItLjIuMS0uMy4yYy4yLjEuNC4yLjUuNHMuMi40LjIuNmMwIC4yIDAgLjQtLjEuNXMtLjIuMy0uMy40LS4zLjItLjUuMi0uNC4xLS42LjFjLS4yIDAtLjQgMC0uNS0uMXMtLjMtLjEtLjUtLjItLjItLjItLjMtLjQtLjEtLjQtLjEtLjZoLjh2LjJzLjEuMS4xLjIuMS4xLjIuMWguNXMuMS0uMS4yLS4xLjEtLjEuMS0uMnYtLjVzLS4xLS4xLS4xLS4yLS4xLS4xLS4yLS4xaC0uNnYtLjd6bTUuNy43YzAgLjMgMCAuNi0uMS44bC0uMy42cy0uMy4zLS41LjMtLjQuMS0uNi4xLS40IDAtLjYtLjEtLjMtLjItLjUtLjMtLjItLjMtLjMtLjYtLjEtLjUtLjEtLjh2LS43YzAtLjMgMC0uNi4xLS44bC4zLS42cy4zLS4zLjUtLjMuNC0uMS42LS4xLjQgMCAuNi4xLjMuMi41LjMuMi4zLjMuNi4xLjUuMS44di43em0tLjgtLjh2LS41YzAtLjEtLjEtLjItLjEtLjNzLS4xLS4xLS4yLS4yLS4yLS4xLS4zLS4xLS4yIDAtLjMuMWwtLjIuMnMtLjEuMi0uMS4zdjJzLjEuMi4xLjMuMS4xLjIuMi4yLjEuMy4xLjIgMCAuMy0uMWwuMi0uMnMuMS0uMi4xLS4zdi0xLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVwbGF5NSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNVYxTDcgNmw1IDVWN2MzLjMgMCA2IDIuNyA2IDZzLTIuNyA2LTYgNi02LTIuNy02LTZINGMwIDQuNCAzLjYgOCA4IDhzOC0zLjYgOC04LTMuNi04LTgtOHptLTEuMyA4LjlsLjItMi4yaDIuNHYuN2gtMS43bC0uMS45cy4xIDAgLjEtLjEuMSAwIC4xLS4xLjEgMCAuMiAwaC4yYy4yIDAgLjQgMCAuNS4xcy4zLjIuNC4zLjIuMy4zLjUuMS40LjEuNmMwIC4yIDAgLjQtLjEuNXMtLjEuMy0uMy41LS4zLjItLjQuMy0uNC4xLS42LjFjLS4yIDAtLjQgMC0uNS0uMXMtLjMtLjEtLjUtLjItLjItLjItLjMtLjQtLjEtLjMtLjEtLjVoLjhjMCAuMi4xLjMuMi40cy4yLjEuNC4xYy4xIDAgLjIgMCAuMy0uMWwuMi0uMnMuMS0uMi4xLS4zdi0uNmwtLjEtLjItLjItLjJzLS4yLS4xLS4zLS4xaC0uMnMtLjEgMC0uMi4xLS4xIDAtLjEuMS0uMS4xLS4xLjFoLS43elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNodWZmbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwLjU5IDkuMTdMNS40MSA0IDQgNS40MWw1LjE3IDUuMTcgMS40Mi0xLjQxek0xNC41IDRsMi4wNCAyLjA0TDQgMTguNTkgNS40MSAyMCAxNy45NiA3LjQ2IDIwIDkuNVY0aC01LjV6bS4zMyA5LjQxbC0xLjQxIDEuNDEgMy4xMyAzLjEzTDE0LjUgMjBIMjB2LTUuNWwtMi4wNCAyLjA0LTMuMTMtMy4xM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTa2lwTmV4dCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiAxOGw4LjUtNkw2IDZ2MTJ6TTE2IDZ2MTJoMlY2aC0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNraXBQcmV2aW91cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiA2aDJ2MTJINnptMy41IDZsOC41IDZWNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTbG93TW90aW9uVmlkZW8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjA1IDkuNzlMMTAgNy41djlsMy4wNS0yLjI5TDE2IDEyem0wIDBMMTAgNy41djlsMy4wNS0yLjI5TDE2IDEyem0wIDBMMTAgNy41djlsMy4wNS0yLjI5TDE2IDEyek0xMSA0LjA3VjIuMDVjLTIuMDEuMi0zLjg0IDEtNS4zMiAyLjIxTDcuMSA1LjY5YzEuMTEtLjg2IDIuNDQtMS40NCAzLjktMS42MnpNNS42OSA3LjFMNC4yNiA1LjY4QzMuMDUgNy4xNiAyLjI1IDguOTkgMi4wNSAxMWgyLjAyYy4xOC0xLjQ2Ljc2LTIuNzkgMS42Mi0zLjl6TTQuMDcgMTNIMi4wNWMuMiAyLjAxIDEgMy44NCAyLjIxIDUuMzJsMS40My0xLjQzYy0uODYtMS4xLTEuNDQtMi40My0xLjYyLTMuODl6bTEuNjEgNi43NEM3LjE2IDIwLjk1IDkgMjEuNzUgMTEgMjEuOTV2LTIuMDJjLTEuNDYtLjE4LTIuNzktLjc2LTMuOS0xLjYybC0xLjQyIDEuNDN6TTIyIDEyYzAgNS4xNi0zLjkyIDkuNDItOC45NSA5Ljk1di0yLjAyQzE2Ljk3IDE5LjQxIDIwIDE2LjA1IDIwIDEycy0zLjAzLTcuNDEtNi45NS03LjkzVjIuMDVDMTguMDggMi41OCAyMiA2Ljg0IDIyIDEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNub296ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy44OCAzLjM5TDYuNiAxLjg2IDIgNS43MWwxLjI5IDEuNTMgNC41OS0zLjg1ek0yMiA1LjcybC00LjYtMy44Ni0xLjI5IDEuNTMgNC42IDMuODZMMjIgNS43MnpNMTIgNGMtNC45NyAwLTkgNC4wMy05IDlzNC4wMiA5IDkgOWM0Ljk3IDAgOS00LjAzIDktOXMtNC4wMy05LTktOXptMCAxNmMtMy44NyAwLTctMy4xMy03LTdzMy4xMy03IDctNyA3IDMuMTMgNyA3LTMuMTMgNy03IDd6bS0zLTloMy42M0w5IDE1LjJWMTdoNnYtMmgtMy42M0wxNSAxMC44VjlIOXYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNvcnRCeUFscGhhIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC45NCA0LjY2aC00LjcybDIuMzYtMi4zNnptLTQuNjkgMTQuNzFoNC42NmwtMi4zMyAyLjMzek02LjEgNi4yN0wxLjYgMTcuNzNoMS44NGwuOTItMi40NWg1LjExbC45MiAyLjQ1aDEuODRMNy43NCA2LjI3SDYuMXptLTEuMTMgNy4zN2wxLjk0LTUuMTggMS45NCA1LjE4SDQuOTd6bTEwLjc2IDIuNWg2LjEydjEuNTloLTguNTN2LTEuMjlsNS45Mi04LjU2aC01Ljg4di0xLjZoOC4zdjEuMjZsLTUuOTMgOC42elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0b3AgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYgNmgxMnYxMkg2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN1YnNjcmlwdGlvbnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDhINFY2aDE2djJ6bS0yLTZINnYyaDEyVjJ6bTQgMTB2OGMwIDEuMS0uOSAyLTIgMkg0Yy0xLjEgMC0yLS45LTItMnYtOGMwLTEuMS45LTIgMi0yaDE2YzEuMSAwIDIgLjkgMiAyem0tNiA0bC02LTMuMjd2Ni41M0wxNiAxNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTdWJ0aXRsZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDRINGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yek00IDEyaDR2Mkg0di0yem0xMCA2SDR2LTJoMTB2MnptNiAwaC00di0yaDR2MnptMC00SDEwdi0yaDEwdjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3Vycm91bmRTb3VuZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNEg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6TTcuNzYgMTYuMjRsLTEuNDEgMS40MUM0Ljc4IDE2LjEgNCAxNC4wNSA0IDEyYzAtMi4wNS43OC00LjEgMi4zNC01LjY2bDEuNDEgMS40MUM2LjU5IDguOTMgNiAxMC40NiA2IDEycy41OSAzLjA3IDEuNzYgNC4yNHpNMTIgMTZjLTIuMjEgMC00LTEuNzktNC00czEuNzktNCA0LTQgNCAxLjc5IDQgNC0xLjc5IDQtNCA0em01LjY2IDEuNjZsLTEuNDEtMS40MUMxNy40MSAxNS4wNyAxOCAxMy41NCAxOCAxMnMtLjU5LTMuMDctMS43Ni00LjI0bDEuNDEtMS40MUMxOS4yMiA3LjkgMjAgOS45NSAyMCAxMmMwIDIuMDUtLjc4IDQuMS0yLjM0IDUuNjZ6TTEyIDEwYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWaWRlb0NhbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDEwLjVWN2MwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxdjEwYzAgLjU1LjQ1IDEgMSAxaDEyYy41NSAwIDEtLjQ1IDEtMXYtMy41bDQgNHYtMTFsLTQgNHpNMTQgMTNoLTN2M0g5di0zSDZ2LTJoM1Y4aDJ2M2gzdjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlkZW9MYWJlbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTNIM1Y1aDE4djExelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZGVvTGlicmFyeSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCA2SDJ2MTRjMCAxLjEuOSAyIDIgMmgxNHYtMkg0VjZ6bTE2LTRIOGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tOCAxMi41di05bDYgNC41LTYgNC41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZGVvY2FtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyAxMC41VjdjMC0uNTUtLjQ1LTEtMS0xSDRjLS41NSAwLTEgLjQ1LTEgMXYxMGMwIC41NS40NSAxIDEgMWgxMmMuNTUgMCAxLS40NSAxLTF2LTMuNWw0IDR2LTExbC00IDR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlkZW9jYW1PZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDYuNWwtNCA0VjdjMC0uNTUtLjQ1LTEtMS0xSDkuODJMMjEgMTcuMThWNi41ek0zLjI3IDJMMiAzLjI3IDQuNzMgNkg0Yy0uNTUgMC0xIC40NS0xIDF2MTBjMCAuNTUuNDUgMSAxIDFoMTJjLjIxIDAgLjM5LS4wOC41NC0uMThMMTkuNzMgMjEgMjEgMTkuNzMgMy4yNyAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZvbHVtZURvd24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjUgMTJjMC0xLjc3LTEuMDItMy4yOS0yLjUtNC4wM3Y4LjA1YzEuNDgtLjczIDIuNS0yLjI1IDIuNS00LjAyek01IDl2Nmg0bDUgNVY0TDkgOUg1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZvbHVtZU11dGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgOXY2aDRsNSA1VjRsLTUgNUg3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZvbHVtZU9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNSAxMmMwLTEuNzctMS4wMi0zLjI5LTIuNS00LjAzdjIuMjFsMi40NSAyLjQ1Yy4wMy0uMi4wNS0uNDEuMDUtLjYzem0yLjUgMGMwIC45NC0uMiAxLjgyLS41NCAyLjY0bDEuNTEgMS41MUMyMC42MyAxNC45MSAyMSAxMy41IDIxIDEyYzAtNC4yOC0yLjk5LTcuODYtNy04Ljc3djIuMDZjMi44OS44NiA1IDMuNTQgNSA2Ljcxek00LjI3IDNMMyA0LjI3IDcuNzMgOUgzdjZoNGw1IDV2LTYuNzNsNC4yNSA0LjI1Yy0uNjcuNTItMS40Mi45My0yLjI1IDEuMTh2Mi4wNmMxLjM4LS4zMSAyLjYzLS45NSAzLjY5LTEuODFMMTkuNzMgMjEgMjEgMTkuNzNsLTktOUw0LjI3IDN6TTEyIDRMOS45MSA2LjA5IDEyIDguMThWNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWb2x1bWVVcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA5djZoNGw1IDVWNEw3IDlIM3ptMTMuNSAzYzAtMS43Ny0xLjAyLTMuMjktMi41LTQuMDN2OC4wNWMxLjQ4LS43MyAyLjUtMi4yNSAyLjUtNC4wMnpNMTQgMy4yM3YyLjA2YzIuODkuODYgNSAzLjU0IDUgNi43MXMtMi4xMSA1Ljg1LTUgNi43MXYyLjA2YzQuMDEtLjkxIDctNC40OSA3LTguNzdzLTIuOTktNy44Ni03LTguNzd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV2ViIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA0SDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAxOGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bS01IDE0SDR2LTRoMTF2NHptMC01SDRWOWgxMXY0em01IDVoLTRWOWg0djl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV2ViQXNzZXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDRINWMtMS4xMSAwLTIgLjktMiAydjEyYzAgMS4xLjg5IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjg5LTItMi0yem0wIDE0SDVWOGgxNHYxMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCdXNpbmVzcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgN1YzSDJ2MThoMjBWN0gxMnpNNiAxOUg0di0yaDJ2MnptMC00SDR2LTJoMnYyem0wLTRINFY5aDJ2MnptMC00SDRWNWgydjJ6bTQgMTJIOHYtMmgydjJ6bTAtNEg4di0yaDJ2MnptMC00SDhWOWgydjJ6bTAtNEg4VjVoMnYyem0xMCAxMmgtOHYtMmgydi0yaC0ydi0yaDJ2LTJoLTJWOWg4djEwem0tMi04aC0ydjJoMnYtMnptMCA0aC0ydjJoMnYtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LjYyIDEwLjc5YzEuNDQgMi44MyAzLjc2IDUuMTQgNi41OSA2LjU5bDIuMi0yLjJjLjI3LS4yNy42Ny0uMzYgMS4wMi0uMjQgMS4xMi4zNyAyLjMzLjU3IDMuNTcuNTcuNTUgMCAxIC40NSAxIDFWMjBjMCAuNTUtLjQ1IDEtMSAxLTkuMzkgMC0xNy03LjYxLTE3LTE3IDAtLjU1LjQ1LTEgMS0xaDMuNWMuNTUgMCAxIC40NSAxIDEgMCAxLjI1LjIgMi40NS41NyAzLjU3LjExLjM1LjAzLjc0LS4yNSAxLjAybC0yLjIgMi4yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENhbGxFbmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDljLTEuNiAwLTMuMTUuMjUtNC42LjcydjMuMWMwIC4zOS0uMjMuNzQtLjU2LjktLjk4LjQ5LTEuODcgMS4xMi0yLjY2IDEuODUtLjE4LjE4LS40My4yOC0uNy4yOC0uMjggMC0uNTMtLjExLS43MS0uMjlMLjI5IDEzLjA4Yy0uMTgtLjE3LS4yOS0uNDItLjI5LS43IDAtLjI4LjExLS41My4yOS0uNzFDMy4zNCA4Ljc4IDcuNDYgNyAxMiA3czguNjYgMS43OCAxMS43MSA0LjY3Yy4xOC4xOC4yOS40My4yOS43MSAwIC4yOC0uMTEuNTMtLjI5LjcxbC0yLjQ4IDIuNDhjLS4xOC4xOC0uNDMuMjktLjcxLjI5LS4yNyAwLS41Mi0uMTEtLjctLjI4LS43OS0uNzQtMS42OS0xLjM2LTIuNjctMS44NS0uMzMtLjE2LS41Ni0uNS0uNTYtLjl2LTMuMUMxNS4xNSA5LjI1IDEzLjYgOSAxMiA5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENhbGxNYWRlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05IDV2Mmg2LjU5TDQgMTguNTkgNS40MSAyMCAxNyA4LjQxVjE1aDJWNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYWxsTWVyZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDIwLjQxTDE4LjQxIDE5IDE1IDE1LjU5IDEzLjU5IDE3IDE3IDIwLjQxek03LjUgOEgxMXY1LjU5TDUuNTkgMTkgNyAyMC40MWw2LTZWOGgzLjVMMTIgMy41IDcuNSA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENhbGxNaXNzZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjU5IDdMMTIgMTQuNTkgNi40MSA5SDExVjdIM3Y4aDJ2LTQuNTlsNyA3IDktOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYWxsTWlzc2VkT3V0Z29pbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgOC40MWw5IDkgNy03VjE1aDJWN2gtOHYyaDQuNTlMMTIgMTQuNTkgNC40MSA3IDMgOC40MXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYWxsUmVjZWl2ZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDUuNDFMMTguNTkgNCA3IDE1LjU5VjlINXYxMGgxMHYtMkg4LjQxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENhbGxTcGxpdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgNGwyLjI5IDIuMjktMi44OCAyLjg4IDEuNDIgMS40MiAyLjg4LTIuODhMMjAgMTBWNHptLTQgMEg0djZsMi4yOS0yLjI5IDQuNzEgNC43VjIwaDJ2LTguNDFsLTUuMjktNS4zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENoYXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yek02IDloMTJ2Mkg2Vjl6bTggNUg2di0yaDh2MnptNC02SDZWNmgxMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENoYXRCdWJibGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMiAuOS0yIDJ2MThsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hhdEJ1YmJsZU91dGxpbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMiAuOS0yIDJ2MThsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bTAgMTRINmwtMiAyVjRoMTZ2MTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2xlYXJBbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgMTNoMTR2LTJINXYyem0tMiA0aDE0di0ySDN2MnpNNyA3djJoMTRWN0g3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENvbW1lbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjk5IDRjMC0xLjEtLjg5LTItMS45OS0ySDRjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTRsNCA0LS4wMS0xOHpNMTggMTRINnYtMmgxMnYyem0wLTNINlY5aDEydjJ6bTAtM0g2VjZoMTJ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb250YWN0TWFpbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgOFY3bC0zIDItMy0ydjFsMyAyIDMtMnptMS01SDJDLjkgMyAwIDMuOSAwIDV2MTRjMCAxLjEuOSAyIDIgMmgyMGMxLjEgMCAxLjk5LS45IDEuOTktMkwyNCA1YzAtMS4xLS45LTItMi0yek04IDZjMS42NiAwIDMgMS4zNCAzIDNzLTEuMzQgMy0zIDMtMy0xLjM0LTMtMyAxLjM0LTMgMy0zem02IDEySDJ2LTFjMC0yIDQtMy4xIDYtMy4xczYgMS4xIDYgMy4xdjF6bTgtNmgtOFY2aDh2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb250YWN0UGhvbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDNIMkMuOSAzIDAgMy45IDAgNXYxNGMwIDEuMS45IDIgMiAyaDIwYzEuMSAwIDEuOTktLjkgMS45OS0yTDI0IDVjMC0xLjEtLjktMi0yLTJ6TTggNmMxLjY2IDAgMyAxLjM0IDMgM3MtMS4zNCAzLTMgMy0zLTEuMzQtMy0zIDEuMzQtMyAzLTN6bTYgMTJIMnYtMWMwLTIgNC0zLjEgNi0zLjFzNiAxLjEgNiAzLjF2MXptMy44NS00aDEuNjRMMjEgMTZsLTEuOTkgMS45OWMtMS4zMS0uOTgtMi4yOC0yLjM4LTIuNzMtMy45OS0uMTgtLjY0LS4yOC0xLjMxLS4yOC0ycy4xLTEuMzYuMjgtMmMuNDUtMS42MiAxLjQyLTMuMDEgMi43My0zLjk5TDIxIDhsLTEuNTEgMmgtMS42NGMtLjIyLjYzLS4zNSAxLjMtLjM1IDJzLjEzIDEuMzcuMzUgMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb250YWN0cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMEg0djJoMTZWMHpNNCAyNGgxNnYtMkg0djJ6TTIwIDRINGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0tOCAyLjc1YzEuMjQgMCAyLjI1IDEuMDEgMi4yNSAyLjI1cy0xLjAxIDIuMjUtMi4yNSAyLjI1UzkuNzUgMTAuMjQgOS43NSA5IDEwLjc2IDYuNzUgMTIgNi43NXpNMTcgMTdIN3YtMS41YzAtMS42NyAzLjMzLTIuNSA1LTIuNXM1IC44MyA1IDIuNVYxN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREaWFsZXJTaXAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDNoLTF2NWgxVjN6bS0yIDJoLTJWNGgyVjNoLTN2M2gydjFoLTJ2MWgzVjV6bTMtMnY1aDFWNmgyVjNoLTN6bTIgMmgtMVY0aDF2MXptMCAxMC41Yy0xLjI1IDAtMi40NS0uMi0zLjU3LS41Ny0uMzUtLjExLS43NC0uMDMtMS4wMS4yNGwtMi4yIDIuMmMtMi44My0xLjQ0LTUuMTUtMy43NS02LjU5LTYuNTlsMi4yLTIuMjFjLjI3LS4yNi4zNS0uNjUuMjQtMUM4LjcgNi40NSA4LjUgNS4yNSA4LjUgNGMwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxIDAgOS4zOSA3LjYxIDE3IDE3IDE3IC41NSAwIDEtLjQ1IDEtMXYtMy41YzAtLjU1LS40NS0xLTEtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREaWFscGFkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxOWMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6TTYgMWMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTAgNmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTAgNmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTEyLThjMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem0tNiA4Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptNiAwYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptMC02Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptLTYgMGMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6bTAtNmMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRW1haWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDRINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNmMwLTEuMS0uOS0yLTItMnptMCA0bC04IDUtOC01VjZsOCA1IDgtNXYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcnVtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSA2aC0ydjlINnYyYzAgLjU1LjQ1IDEgMSAxaDExbDQgNFY3YzAtLjU1LS40NS0xLTEtMXptLTQgNlYzYzAtLjU1LS40NS0xLTEtMUgzYy0uNTUgMC0xIC40NS0xIDF2MTRsNC00aDEwYy41NSAwIDEtLjQ1IDEtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbXBvcnRDb250YWN0cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgNWMtMS4xMS0uMzUtMi4zMy0uNS0zLjUtLjUtMS45NSAwLTQuMDUuNC01LjUgMS41LTEuNDUtMS4xLTMuNTUtMS41LTUuNS0xLjVTMi40NSA0LjkgMSA2djE0LjY1YzAgLjI1LjI1LjUuNS41LjEgMCAuMTUtLjA1LjI1LS4wNUMzLjEgMjAuNDUgNS4wNSAyMCA2LjUgMjBjMS45NSAwIDQuMDUuNCA1LjUgMS41IDEuMzUtLjg1IDMuOC0xLjUgNS41LTEuNSAxLjY1IDAgMy4zNS4zIDQuNzUgMS4wNS4xLjA1LjE1LjA1LjI1LjA1LjI1IDAgLjUtLjI1LjUtLjVWNmMtLjYtLjQ1LTEuMjUtLjc1LTItMXptMCAxMy41Yy0xLjEtLjM1LTIuMy0uNS0zLjUtLjUtMS43IDAtNC4xNS42NS01LjUgMS41VjhjMS4zNS0uODUgMy44LTEuNSA1LjUtMS41IDEuMiAwIDIuNC4xNSAzLjUuNXYxMS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEltcG9ydEV4cG9ydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAzTDUgNi45OWgzVjE0aDJWNi45OWgzTDkgM3ptNyAxNC4wMVYxMGgtMnY3LjAxaC0zTDE1IDIxbDQtMy45OWgtM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbnZlcnRDb2xvcnNPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjY1IDIwLjg3bC0yLjM1LTIuMzUtNi4zLTYuMjktMy41Ni0zLjU3LTEuNDItMS40MUw0LjI3IDQuNSAzIDUuNzdsMi43OCAyLjc4Yy0yLjU1IDMuMTQtMi4zNiA3Ljc2LjU2IDEwLjY5QzcuOSAyMC44IDkuOTUgMjEuNTggMTIgMjEuNThjMS43OSAwIDMuNTctLjU5IDUuMDMtMS43OGwyLjcgMi43TDIxIDIxLjIzbC0uMzUtLjM2ek0xMiAxOS41OWMtMS42IDAtMy4xMS0uNjItNC4yNC0xLjc2QzYuNjIgMTYuNjkgNiAxNS4xOSA2IDEzLjU5YzAtMS4zMi40My0yLjU3IDEuMjEtMy42TDEyIDE0Ljc3djQuODJ6TTEyIDUuMXY0LjU4bDcuMjUgNy4yNmMxLjM3LTIuOTYuODQtNi41Ny0xLjYtOS4wMUwxMiAyLjI3bC0zLjcgMy43IDEuNDEgMS40MUwxMiA1LjF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGl2ZUhlbHAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDJINWMtMS4xMSAwLTIgLjktMiAydjE0YzAgMS4xLjg5IDIgMiAyaDRsMyAzIDMtM2g0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS02IDE2aC0ydi0yaDJ2MnptMi4wNy03Ljc1bC0uOS45MkMxMy40NSAxMS45IDEzIDEyLjUgMTMgMTRoLTJ2LS41YzAtMS4xLjQ1LTIuMSAxLjE3LTIuODNsMS4yNC0xLjI2Yy4zNy0uMzYuNTktLjg2LjU5LTEuNDEgMC0xLjEtLjktMi0yLTJzLTIgLjktMiAySDhjMC0yLjIxIDEuNzktNCA0LTRzNCAxLjc5IDQgNGMwIC44OC0uMzYgMS42OC0uOTMgMi4yNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhdGlvbk9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNi41YzEuMzggMCAyLjUgMS4xMiAyLjUgMi41IDAgLjc0LS4zMyAxLjM5LS44MyAxLjg1bDMuNjMgMy42M2MuOTgtMS44NiAxLjctMy44IDEuNy01LjQ4IDAtMy44Ny0zLjEzLTctNy03LTEuOTggMC0zLjc2LjgzLTUuMDQgMi4xNWwzLjE5IDMuMTljLjQ2LS41MiAxLjExLS44NCAxLjg1LS44NHptNC4zNyA5LjZsLTQuNjMtNC42My0uMTEtLjExTDMuMjcgMyAyIDQuMjdsMy4xOCAzLjE4QzUuMDcgNy45NSA1IDguNDcgNSA5YzAgNS4yNSA3IDEzIDcgMTNzMS42Ny0xLjg1IDMuMzgtNC4zNUwxOC43MyAyMSAyMCAxOS43M2wtMy42My0zLjYzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2F0aW9uT24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDOC4xMyAyIDUgNS4xMyA1IDljMCA1LjI1IDcgMTMgNyAxM3M3LTcuNzUgNy0xM2MwLTMuODctMy4xMy03LTctN3ptMCA5LjVjLTEuMzggMC0yLjUtMS4xMi0yLjUtMi41czEuMTItMi41IDIuNS0yLjUgMi41IDEuMTIgMi41IDIuNS0xLjEyIDIuNS0yLjUgMi41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1haWxPdXRsaW5lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA0SDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAxOGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bTAgMTRINFY4bDggNSA4LTV2MTB6bS04LTdMNCA2aDE2bC04IDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTWVzc2FnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMkg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMjJsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS0yIDEySDZ2LTJoMTJ2MnptMC0zSDZWOWgxMnYyem0wLTNINlY2aDEydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTm9TaW0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4Ljk5IDVjMC0xLjEtLjg5LTItMS45OS0yaC03TDcuNjYgNS4zNCAxOSAxNi42OCAxOC45OSA1ek0zLjY1IDMuODhMMi4zOCA1LjE1IDUgNy43N1YxOWMwIDEuMS45IDIgMiAyaDEwLjAxYy4zNSAwIC42Ny0uMS45Ni0uMjZsMS44OCAxLjg4IDEuMjctMS4yN0wzLjY1IDMuODh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuNjIgMTAuNzljMS40NCAyLjgzIDMuNzYgNS4xNCA2LjU5IDYuNTlsMi4yLTIuMmMuMjctLjI3LjY3LS4zNiAxLjAyLS4yNCAxLjEyLjM3IDIuMzMuNTcgMy41Ny41Ny41NSAwIDEgLjQ1IDEgMVYyMGMwIC41NS0uNDUgMS0xIDEtOS4zOSAwLTE3LTcuNjEtMTctMTcgMC0uNTUuNDUtMSAxLTFoMy41Yy41NSAwIDEgLjQ1IDEgMSAwIDEuMjUuMiAyLjQ1LjU3IDMuNTcuMTEuMzUuMDMuNzQtLjI1IDEuMDJsLTIuMiAyLjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvbmVsaW5rRXJhc2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDguMmwtMS0xLTQgNC00LTQtMSAxIDQgNC00IDQgMSAxIDQtNCA0IDQgMS0xLTQtNCA0LTR6TTE5IDFIOWMtMS4xIDAtMiAuOS0yIDJ2M2gyVjRoMTB2MTZIOXYtMkg3djNjMCAxLjEuOSAyIDIgMmgxMGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob25lbGlua0xvY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDFIOWMtMS4xIDAtMiAuOS0yIDJ2M2gyVjRoMTB2MTZIOXYtMkg3djNjMCAxLjEuOSAyIDIgMmgxMGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0tOC4yIDEwVjkuNUMxMC44IDguMSA5LjQgNyA4IDdTNS4yIDguMSA1LjIgOS41VjExYy0uNiAwLTEuMi42LTEuMiAxLjJ2My41YzAgLjcuNiAxLjMgMS4yIDEuM2g1LjVjLjcgMCAxLjMtLjYgMS4zLTEuMnYtMy41YzAtLjctLjYtMS4zLTEuMi0xLjN6bS0xLjMgMGgtM1Y5LjVjMC0uOC43LTEuMyAxLjUtMS4zczEuNS41IDEuNSAxLjNWMTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvbmVsaW5rUmluZyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuMSA3LjdsLTEgMWMxLjggMS44IDEuOCA0LjYgMCA2LjVsMSAxYzIuNS0yLjMgMi41LTYuMSAwLTguNXpNMTggOS44bC0xIDFjLjUuNy41IDEuNiAwIDIuM2wxIDFjMS4yLTEuMiAxLjItMyAwLTQuM3pNMTQgMUg0Yy0xLjEgMC0yIC45LTIgMnYxOGMwIDEuMS45IDIgMiAyaDEwYzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMi0yLTJ6bTAgMTlINFY0aDEwdjE2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob25lbGlua1NldHVwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS44IDEyLjV2LTFsMS4xLS44Yy4xLS4xLjEtLjIuMS0uM2wtMS0xLjdjLS4xLS4xLS4yLS4yLS4zLS4xbC0xLjMuNGMtLjMtLjItLjYtLjQtLjktLjVsLS4yLTEuM2MwLS4xLS4xLS4yLS4zLS4ySDdjLS4xIDAtLjIuMS0uMy4ybC0uMiAxLjNjLS4zLjEtLjYuMy0uOS41bC0xLjMtLjVjLS4xIDAtLjIgMC0uMy4xbC0xIDEuN2MtLjEuMSAwIC4yLjEuM2wxLjEuOHYxbC0xLjEuOGMtLjEuMi0uMS4zLS4xLjRsMSAxLjdjLjEuMS4yLjIuMy4xbDEuNC0uNGMuMy4yLjYuNC45LjVsLjIgMS4zYy0uMS4xLjEuMi4yLjJoMmMuMSAwIC4yLS4xLjMtLjJsLjItMS4zYy4zLS4xLjYtLjMuOS0uNWwxLjMuNWMuMSAwIC4yIDAgLjMtLjFsMS0xLjdjLjEtLjEgMC0uMi0uMS0uM2wtMS4xLS45ek04IDE0Yy0xLjEgMC0yLS45LTItMnMuOS0yIDItMiAyIC45IDIgMi0uOSAyLTIgMnpNMTkgMUg5Yy0xLjEgMC0yIC45LTIgMnYzaDJWNGgxMHYxNkg5di0ySDd2M2MwIDEuMS45IDIgMiAyaDEwYzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUG9ydGFibGVXaWZpT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy41NiAxNC4yNGMuMjgtLjY5LjQ0LTEuNDUuNDQtMi4yNCAwLTMuMzEtMi42OS02LTYtNi0uNzkgMC0xLjU1LjE2LTIuMjQuNDRsMS42MiAxLjYyYy4yLS4wMy40MS0uMDYuNjItLjA2IDIuMjEgMCA0IDEuNzkgNCA0IDAgLjIxLS4wMi40Mi0uMDUuNjNsMS42MSAxLjYxek0xMiA0YzQuNDIgMCA4IDMuNTggOCA4IDAgMS4zNS0uMzUgMi42Mi0uOTUgMy43NGwxLjQ3IDEuNDdDMjEuNDYgMTUuNjkgMjIgMTMuOTEgMjIgMTJjMC01LjUyLTQuNDgtMTAtMTAtMTAtMS45MSAwLTMuNjkuNTUtNS4yMSAxLjQ3bDEuNDYgMS40NkM5LjM3IDQuMzQgMTAuNjUgNCAxMiA0ek0zLjI3IDIuNUwyIDMuNzdsMi4xIDIuMUMyLjc5IDcuNTcgMiA5LjY5IDIgMTJjMCAzLjcgMi4wMSA2LjkyIDQuOTkgOC42NWwxLTEuNzNDNS42MSAxNy41MyA0IDE0Ljk2IDQgMTJjMC0xLjc2LjU3LTMuMzggMS41My00LjY5bDEuNDMgMS40NEM2LjM2IDkuNjggNiAxMC44IDYgMTJjMCAyLjIyIDEuMjEgNC4xNSAzIDUuMTlsMS0xLjc0Yy0xLjE5LS43LTItMS45Ny0yLTMuNDUgMC0uNjUuMTctMS4yNS40NC0xLjc5bDEuNTggMS41OEwxMCAxMmMwIDEuMS45IDIgMiAybC4yMS0uMDIuMDEuMDEgNy41MSA3LjUxTDIxIDIwLjIzIDQuMjcgMy41bC0xLTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUHJlc2VudFRvQWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzSDNjLTEuMTEgMC0yIC44OS0yIDJ2MTRjMCAxLjExLjg5IDIgMiAyaDE4YzEuMTEgMCAyLS44OSAyLTJWNWMwLTEuMTEtLjg5LTItMi0yem0wIDE2LjAySDNWNC45OGgxOHYxNC4wNHpNMTAgMTJIOGw0LTQgNCA0aC0ydjRoLTR2LTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmluZ1ZvbHVtZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjMuNzEgMTYuNjdDMjAuNjYgMTMuNzggMTYuNTQgMTIgMTIgMTIgNy40NiAxMiAzLjM0IDEzLjc4LjI5IDE2LjY3Yy0uMTguMTgtLjI5LjQzLS4yOS43MSAwIC4yOC4xMS41My4yOS43MWwyLjQ4IDIuNDhjLjE4LjE4LjQzLjI5LjcxLjI5LjI3IDAgLjUyLS4xMS43LS4yOC43OS0uNzQgMS42OS0xLjM2IDIuNjYtMS44NS4zMy0uMTYuNTYtLjUuNTYtLjl2LTMuMWMxLjQ1LS40OCAzLS43MyA0LjYtLjczczMuMTUuMjUgNC42LjcydjMuMWMwIC4zOS4yMy43NC41Ni45Ljk4LjQ5IDEuODcgMS4xMiAyLjY2IDEuODUuMTguMTguNDMuMjguNy4yOC4yOCAwIC41My0uMTEuNzEtLjI5bDIuNDgtMi40OGMuMTgtLjE4LjI5LS40My4yOS0uNzEgMC0uMjctLjExLS41Mi0uMjktLjd6TTIxLjE2IDYuMjZsLTEuNDEtMS40MS0zLjU2IDMuNTUgMS40MSAxLjQxczMuNDUtMy41MiAzLjU2LTMuNTV6TTEzIDJoLTJ2NWgyVjJ6TTYuNCA5LjgxTDcuODEgOC40IDQuMjYgNC44NCAyLjg0IDYuMjZjLjExLjAzIDMuNTYgMy41NSAzLjU2IDMuNTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUnNzRmVlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI2LjE4XCIsXCJjeVwiOlwiMTcuODJcIixcInJcIjpcIjIuMThcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDQuNDR2Mi44M2M3LjAzIDAgMTIuNzMgNS43IDEyLjczIDEyLjczaDIuODNjMC04LjU5LTYuOTctMTUuNTYtMTUuNTYtMTUuNTZ6bTAgNS42NnYyLjgzYzMuOSAwIDcuMDcgMy4xNyA3LjA3IDcuMDdoMi44M2MwLTUuNDctNC40My05LjktOS45LTkuOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTY3JlZW5TaGFyZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMThjMS4xIDAgMS45OS0uOSAxLjk5LTJMMjIgNmMwLTEuMTEtLjktMi0yLTJINGMtMS4xMSAwLTIgLjg5LTIgMnYxMGMwIDEuMS44OSAyIDIgMkgwdjJoMjR2LTJoLTR6bS03LTMuNTN2LTIuMTljLTIuNzggMC00LjYxLjg1LTYgMi43Mi41Ni0yLjY3IDIuMTEtNS4zMyA2LTUuODdWN2w0IDMuNzMtNCAzLjc0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNwZWFrZXJQaG9uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyA3LjA3TDguNDMgOC41Yy45MS0uOTEgMi4xOC0xLjQ4IDMuNTctMS40OHMyLjY2LjU3IDMuNTcgMS40OEwxNyA3LjA3QzE1LjcyIDUuNzkgMTMuOTUgNSAxMiA1cy0zLjcyLjc5LTUgMi4wN3pNMTIgMUM4Ljk4IDEgNi4yNCAyLjIzIDQuMjUgNC4yMWwxLjQxIDEuNDFDNy4yOCA0IDkuNTMgMyAxMiAzczQuNzIgMSA2LjM0IDIuNjJsMS40MS0xLjQxQzE3Ljc2IDIuMjMgMTUuMDIgMSAxMiAxem0yLjg2IDkuMDFMOS4xNCAxMEM4LjUxIDEwIDggMTAuNTEgOCAxMS4xNHY5LjcxYzAgLjYzLjUxIDEuMTQgMS4xNCAxLjE0aDUuNzFjLjYzIDAgMS4xNC0uNTEgMS4xNC0xLjE0di05LjcxYy4wMS0uNjMtLjUtMS4xMy0xLjEzLTEuMTN6TTE1IDIwSDl2LThoNnY4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0YXlDdXJyZW50TGFuZHNjYXBlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xLjAxIDdMMSAxN2MwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjdjMC0xLjEtLjktMi0yLTJIM2MtMS4xIDAtMS45OS45LTEuOTkgMnpNMTkgN3YxMEg1VjdoMTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RheUN1cnJlbnRQb3J0cmFpdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgMS4wMUw3IDFjLTEuMSAwLTEuOTkuOS0xLjk5IDJ2MThjMCAxLjEuODkgMiAxLjk5IDJoMTBjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0xLjk5LTItMS45OXpNMTcgMTlIN1Y1aDEwdjE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0YXlQcmltYXJ5TGFuZHNjYXBlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xLjAxIDdMMSAxN2MwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjdjMC0xLjEtLjktMi0yLTJIM2MtMS4xIDAtMS45OS45LTEuOTkgMnpNMTkgN3YxMEg1VjdoMTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RheVByaW1hcnlQb3J0cmFpdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgMS4wMUw3IDFjLTEuMSAwLTEuOTkuOS0xLjk5IDJ2MThjMCAxLjEuODkgMiAxLjk5IDJoMTBjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0xLjk5LTItMS45OXpNMTcgMTlIN1Y1aDEwdjE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0b3BTY3JlZW5TaGFyZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuMjIgMTguMDJsMiAySDI0di0yaC0yLjc4em0uNzctMmwuMDEtMTBjMC0xLjExLS45LTItMi0ySDcuMjJsNS4yMyA1LjIzYy4xOC0uMDQuMzYtLjA3LjU1LS4xVjcuMDJsNCAzLjczLTEuNTggMS40NyA1LjU0IDUuNTRjLjYxLS4zMyAxLjAzLS45OSAxLjAzLTEuNzR6TTIuMzkgMS43M0wxLjExIDNsMS41NCAxLjU0Yy0uNC4zNi0uNjUuODktLjY1IDEuNDh2MTBjMCAxLjEuODkgMiAyIDJIMHYyaDE4LjEzbDIuNzEgMi43MSAxLjI3LTEuMjdMMi4zOSAxLjczek03IDE1LjAyYy4zMS0xLjQ4LjkyLTIuOTUgMi4wNy00LjA2bDEuNTkgMS41OWMtMS41NC4zOC0yLjcgMS4xOC0zLjY2IDIuNDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3dhcENhbGxzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCA0bC00IDRoM3Y3YzAgMS4xLS45IDItMiAycy0yLS45LTItMlY4YzAtMi4yMS0xLjc5LTQtNC00UzUgNS43OSA1IDh2N0gybDQgNCA0LTRIN1Y4YzAtMS4xLjktMiAyLTJzMiAuOSAyIDJ2N2MwIDIuMjEgMS43OSA0IDQgNHM0LTEuNzkgNC00VjhoM2wtNC00elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRleHRzbXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yek05IDExSDdWOWgydjJ6bTQgMGgtMlY5aDJ2MnptNCAwaC0yVjloMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZvaWNlbWFpbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguNSA2QzE1LjQ2IDYgMTMgOC40NiAxMyAxMS41YzAgMS4zMy40NyAyLjU1IDEuMjYgMy41SDkuNzRjLjc5LS45NSAxLjI2LTIuMTcgMS4yNi0zLjVDMTEgOC40NiA4LjU0IDYgNS41IDZTMCA4LjQ2IDAgMTEuNSAyLjQ2IDE3IDUuNSAxN2gxM2MzLjA0IDAgNS41LTIuNDYgNS41LTUuNVMyMS41NCA2IDE4LjUgNnptLTEzIDlDMy41NyAxNSAyIDEzLjQzIDIgMTEuNVMzLjU3IDggNS41IDggOSA5LjU3IDkgMTEuNSA3LjQzIDE1IDUuNSAxNXptMTMgMGMtMS45MyAwLTMuNS0xLjU3LTMuNS0zLjVTMTYuNTcgOCAxOC41IDggMjIgOS41NyAyMiAxMS41IDIwLjQzIDE1IDE4LjUgMTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVnBuS2V5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi42NSAxMEMxMS44MyA3LjY3IDkuNjEgNiA3IDZjLTMuMzEgMC02IDIuNjktNiA2czIuNjkgNiA2IDZjMi42MSAwIDQuODMtMS42NyA1LjY1LTRIMTd2NGg0di00aDJ2LTRIMTIuNjV6TTcgMTRjLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgMTNoLTZ2NmgtMnYtNkg1di0yaDZWNWgydjZoNnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkZEJveCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM0g1Yy0xLjExIDAtMiAuOS0yIDJ2MTRjMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTIgMTBoLTR2NGgtMnYtNEg3di0yaDRWN2gydjRoNHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkZENpcmNsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptNSAxMWgtNHY0aC0ydi00SDd2LTJoNFY3aDJ2NGg0djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWRkQ2lyY2xlT3V0bGluZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMgN2gtMnY0SDd2Mmg0djRoMnYtNGg0di0yaC00Vjd6bS0xLTVDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFyY2hpdmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjU0IDUuMjNsLTEuMzktMS42OEMxOC44OCAzLjIxIDE4LjQ3IDMgMTggM0g2Yy0uNDcgMC0uODguMjEtMS4xNi41NUwzLjQ2IDUuMjNDMy4xNyA1LjU3IDMgNi4wMiAzIDYuNVYxOWMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjYuNWMwLS40OC0uMTctLjkzLS40Ni0xLjI3ek0xMiAxNy41TDYuNSAxMkgxMHYtMmg0djJoMy41TDEyIDE3LjV6TTUuMTIgNWwuODEtMWgxMmwuOTQgMUg1LjEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhY2tzcGFjZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjIgM0g3Yy0uNjkgMC0xLjIzLjM1LTEuNTkuODhMMCAxMmw1LjQxIDguMTFjLjM2LjUzLjkuODkgMS41OS44OWgxNWMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tMyAxMi41OUwxNy41OSAxNyAxNCAxMy40MSAxMC40MSAxNyA5IDE1LjU5IDEyLjU5IDEyIDkgOC40MSAxMC40MSA3IDE0IDEwLjU5IDE3LjU5IDcgMTkgOC40MSAxNS40MSAxMiAxOSAxNS41OXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCbG9jayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnpNNCAxMmMwLTQuNDIgMy41OC04IDgtOCAxLjg1IDAgMy41NS42MyA0LjkgMS42OUw1LjY5IDE2LjlDNC42MyAxNS41NSA0IDEzLjg1IDQgMTJ6bTggOGMtMS44NSAwLTMuNTUtLjYzLTQuOS0xLjY5TDE4LjMxIDcuMUMxOS4zNyA4LjQ1IDIwIDEwLjE1IDIwIDEyYzAgNC40Mi0zLjU4IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENsZWFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA2LjQxTDE3LjU5IDUgMTIgMTAuNTkgNi40MSA1IDUgNi40MSAxMC41OSAxMiA1IDE3LjU5IDYuNDEgMTkgMTIgMTMuNDEgMTcuNTkgMTkgMTkgMTcuNTkgMTMuNDEgMTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ29udGVudENvcHkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2IDFINGMtMS4xIDAtMiAuOS0yIDJ2MTRoMlYzaDEyVjF6bTMgNEg4Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDExYzEuMSAwIDItLjkgMi0yVjdjMC0xLjEtLjktMi0yLTJ6bTAgMTZIOFY3aDExdjE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENvbnRlbnRDdXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkuNjQgNy42NGMuMjMtLjUuMzYtMS4wNS4zNi0xLjY0IDAtMi4yMS0xLjc5LTQtNC00UzIgMy43OSAyIDZzMS43OSA0IDQgNGMuNTkgMCAxLjE0LS4xMyAxLjY0LS4zNkwxMCAxMmwtMi4zNiAyLjM2QzcuMTQgMTQuMTMgNi41OSAxNCA2IDE0Yy0yLjIxIDAtNCAxLjc5LTQgNHMxLjc5IDQgNCA0IDQtMS43OSA0LTRjMC0uNTktLjEzLTEuMTQtLjM2LTEuNjRMMTIgMTRsNyA3aDN2LTFMOS42NCA3LjY0ek02IDhjLTEuMSAwLTItLjg5LTItMnMuOS0yIDItMiAyIC44OSAyIDItLjkgMi0yIDJ6bTAgMTJjLTEuMSAwLTItLjg5LTItMnMuOS0yIDItMiAyIC44OSAyIDItLjkgMi0yIDJ6bTYtNy41Yy0uMjggMC0uNS0uMjItLjUtLjVzLjIyLS41LjUtLjUuNS4yMi41LjUtLjIyLjUtLjUuNXpNMTkgM2wtNiA2IDIgMiA3LTdWM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb250ZW50UGFzdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDJoLTQuMThDMTQuNC44NCAxMy4zIDAgMTIgMGMtMS4zIDAtMi40Ljg0LTIuODIgMkg1Yy0xLjEgMC0yIC45LTIgMnYxNmMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS03IDBjLjU1IDAgMSAuNDUgMSAxcy0uNDUgMS0xIDEtMS0uNDUtMS0xIC40NS0xIDEtMXptNyAxOEg1VjRoMnYzaDEwVjRoMnYxNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcmVhdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgMTcuMjVWMjFoMy43NUwxNy44MSA5Ljk0bC0zLjc1LTMuNzVMMyAxNy4yNXpNMjAuNzEgNy4wNGMuMzktLjM5LjM5LTEuMDIgMC0xLjQxbC0yLjM0LTIuMzRjLS4zOS0uMzktMS4wMi0uMzktMS40MSAwbC0xLjgzIDEuODMgMy43NSAzLjc1IDEuODMtMS44M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREZWxldGVTd2VlcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgMTZoNHYyaC00em0wLThoN3YyaC03em0wIDRoNnYyaC02ek0zIDE4YzAgMS4xLjkgMiAyIDJoNmMxLjEgMCAyLS45IDItMlY4SDN2MTB6TTE0IDVoLTNsLTEtMUg2TDUgNUgydjJoMTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRHJhZnRzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMS45OSA4YzAtLjcyLS4zNy0xLjM1LS45NC0xLjdMMTIgMSAyLjk1IDYuM0MyLjM4IDYuNjUgMiA3LjI4IDIgOHYxMGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0ybC0uMDEtMTB6TTEyIDEzTDMuNzQgNy44NCAxMiAzbDguMjYgNC44NEwxMiAxM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXJMaXN0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCAxOGg0di0yaC00djJ6TTMgNnYyaDE4VjZIM3ptMyA3aDEydi0ySDZ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGbGFnIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC40IDZMMTQgNEg1djE3aDJ2LTdoNS42bC40IDJoN1Y2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvbnREb3dubG9hZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJiYXNlUHJvZmlsZVwiOlwidGlueVwiLFwidmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkuOTMgMTMuNWg0LjE0TDEyIDcuOTh6TTIwIDJINGMtMS4xIDAtMiAuOS0yIDJ2MTZjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tNC4wNSAxNi41bC0xLjE0LTNIOS4xN2wtMS4xMiAzSDUuOTZsNS4xMS0xM2gxLjg2bDUuMTEgMTNoLTIuMDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9yd2FyZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgOFY0bDggOC04IDh2LTRINFY4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdlc3R1cmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuNTkgNi44OWMuNy0uNzEgMS40LTEuMzUgMS43MS0xLjIyLjUuMiAwIDEuMDMtLjMgMS41Mi0uMjUuNDItMi44NiAzLjg5LTIuODYgNi4zMSAwIDEuMjguNDggMi4zNCAxLjM0IDIuOTguNzUuNTYgMS43NC43MyAyLjY0LjQ2IDEuMDctLjMxIDEuOTUtMS40IDMuMDYtMi43NyAxLjIxLTEuNDkgMi44My0zLjQ0IDQuMDgtMy40NCAxLjYzIDAgMS42NSAxLjAxIDEuNzYgMS43OS0zLjc4LjY0LTUuMzggMy42Ny01LjM4IDUuMzcgMCAxLjcgMS40NCAzLjA5IDMuMjEgMy4wOSAxLjYzIDAgNC4yOS0xLjMzIDQuNjktNi4xSDIxdi0yLjVoLTIuNDdjLS4xNS0xLjY1LTEuMDktNC4yLTQuMDMtNC4yLTIuMjUgMC00LjE4IDEuOTEtNC45NCAyLjg0LS41OC43My0yLjA2IDIuNDgtMi4yOSAyLjcyLS4yNS4zLS42OC44NC0xLjExLjg0LS40NSAwLS43Mi0uODMtLjM2LTEuOTIuMzUtMS4wOSAxLjQtMi44NiAxLjg1LTMuNTIuNzgtMS4xNCAxLjMtMS45MiAxLjMtMy4yOEM4Ljk1IDMuNjkgNy4zMSAzIDYuNDQgMyA1LjEyIDMgMy45NyA0IDMuNzIgNC4yNWMtLjM2LjM2LS42Ni42Ni0uODguOTNsMS43NSAxLjcxem05LjI5IDExLjY2Yy0uMzEgMC0uNzQtLjI2LS43NC0uNzIgMC0uNi43My0yLjIgMi44Ny0yLjc2LS4zIDIuNjktMS40MyAzLjQ4LTIuMTMgMy40OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbmJveCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM0g0Ljk5Yy0xLjExIDAtMS45OC44OS0xLjk4IDJMMyAxOWMwIDEuMS44OCAyIDEuOTkgMkgxOWMxLjEgMCAyLS45IDItMlY1YzAtMS4xMS0uOS0yLTItMnptMCAxMmgtNGMwIDEuNjYtMS4zNSAzLTMgM3MtMy0xLjM0LTMtM0g0Ljk5VjVIMTl2MTB6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGluayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy45IDEyYzAtMS43MSAxLjM5LTMuMSAzLjEtMy4xaDRWN0g3Yy0yLjc2IDAtNSAyLjI0LTUgNXMyLjI0IDUgNSA1aDR2LTEuOUg3Yy0xLjcxIDAtMy4xLTEuMzktMy4xLTMuMXpNOCAxM2g4di0ySDh2MnptOS02aC00djEuOWg0YzEuNzEgMCAzLjEgMS4zOSAzLjEgMy4xcy0xLjM5IDMuMS0zLjEgMy4xaC00VjE3aDRjMi43NiAwIDUtMi4yNCA1LTVzLTIuMjQtNS01LTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG93UHJpb3JpdHkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0IDVoOHYyaC04em0wIDUuNWg4djJoLTh6bTAgNS41aDh2MmgtOHpNMiAxMS41QzIgMTUuMDggNC45MiAxOCA4LjUgMThIOXYybDMtMy0zLTN2MmgtLjVDNi4wMiAxNiA0IDEzLjk4IDQgMTEuNVM2LjAyIDcgOC41IDdIMTJWNUg4LjVDNC45MiA1IDIgNy45MiAyIDExLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTWFpbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNEg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMThjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDRsLTggNS04LTVWNmw4IDUgOC01djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTWFya3VucmVhZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNEg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMThjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDRsLTggNS04LTVWNmw4IDUgOC01djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTW92ZVRvSW5ib3ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNINC45OWMtMS4xMSAwLTEuOTguOS0xLjk4IDJMMyAxOWMwIDEuMS44OCAyIDEuOTkgMkgxOWMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDEyaC00YzAgMS42Ni0xLjM1IDMtMyAzcy0zLTEuMzQtMy0zSDQuOTlWNUgxOXYxMHptLTMtNWgtMlY3aC00djNIOGw0IDQgNC00elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5leHRXZWVrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA3aC00VjVjMC0uNTUtLjIyLTEuMDUtLjU5LTEuNDFDMTUuMDUgMy4yMiAxNC41NSAzIDE0IDNoLTRjLTEuMSAwLTIgLjktMiAydjJINGMtMS4xIDAtMiAuOS0yIDJ2MTFjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY5YzAtMS4xLS45LTItMi0yek0xMCA1aDR2MmgtNFY1em0xIDEzLjVsLTEtMSAzLTMtMy0zIDEtMSA0IDQtNCA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlZG8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQgMTAuNkMxNi41NSA4Ljk5IDE0LjE1IDggMTEuNSA4Yy00LjY1IDAtOC41OCAzLjAzLTkuOTYgNy4yMkwzLjkgMTZjMS4wNS0zLjE5IDQuMDUtNS41IDcuNi01LjUgMS45NSAwIDMuNzMuNzIgNS4xMiAxLjg4TDEzIDE2aDlWN2wtMy42IDMuNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZW1vdmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDEzSDV2LTJoMTR2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZW1vdmVDaXJjbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTUgMTFIN3YtMmgxMHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlbW92ZUNpcmNsZU91dGxpbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTF2MmgxMHYtMkg3em01LTlDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlcGx5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCA5VjVsLTcgNyA3IDd2LTQuMWM1IDAgOC41IDEuNiAxMSA1LjEtMS01LTQtMTAtMTEtMTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVwbHlBbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgOFY1bC03IDcgNyA3di0zbC00LTQgNC00em02IDFWNWwtNyA3IDcgN3YtNC4xYzUgMCA4LjUgMS42IDExIDUuMS0xLTUtNC0xMC0xMS0xMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZXBvcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjczIDNIOC4yN0wzIDguMjd2Ny40Nkw4LjI3IDIxaDcuNDZMMjEgMTUuNzNWOC4yN0wxNS43MyAzek0xMiAxNy4zYy0uNzIgMC0xLjMtLjU4LTEuMy0xLjMgMC0uNzIuNTgtMS4zIDEuMy0xLjMuNzIgMCAxLjMuNTggMS4zIDEuMyAwIC43Mi0uNTggMS4zLTEuMyAxLjN6bTEtNC4zaC0yVjdoMnY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNhdmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDNINWMtMS4xMSAwLTIgLjktMiAydjE0YzAgMS4xLjg5IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjdsLTQtNHptLTUgMTZjLTEuNjYgMC0zLTEuMzQtMy0zczEuMzQtMyAzLTMgMyAxLjM0IDMgMy0xLjM0IDMtMyAzem0zLTEwSDVWNWgxMHY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNlbGVjdEFsbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1aDJWM2MtMS4xIDAtMiAuOS0yIDJ6bTAgOGgydi0ySDN2MnptNCA4aDJ2LTJIN3Yyek0zIDloMlY3SDN2MnptMTAtNmgtMnYyaDJWM3ptNiAwdjJoMmMwLTEuMS0uOS0yLTItMnpNNSAyMXYtMkgzYzAgMS4xLjkgMiAyIDJ6bS0yLTRoMnYtMkgzdjJ6TTkgM0g3djJoMlYzem0yIDE4aDJ2LTJoLTJ2MnptOC04aDJ2LTJoLTJ2MnptMCA4YzEuMSAwIDItLjkgMi0yaC0ydjJ6bTAtMTJoMlY3aC0ydjJ6bTAgOGgydi0yaC0ydjJ6bS00IDRoMnYtMmgtMnYyem0wLTE2aDJWM2gtMnYyek03IDE3aDEwVjdIN3YxMHptMi04aDZ2Nkg5Vjl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2VuZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMi4wMSAyMUwyMyAxMiAyLjAxIDMgMiAxMGwxNSAyLTE1IDJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU29ydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAxOGg2di0ySDN2MnpNMyA2djJoMThWNkgzem0wIDdoMTJ2LTJIM3YyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRleHRGb3JtYXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgMTd2MmgxNHYtMkg1em00LjUtNC4yaDVsLjkgMi4yaDIuMUwxMi43NSA0aC0xLjVMNi41IDE1aDIuMWwuOS0yLjJ6TTEyIDUuOThMMTMuODcgMTFoLTMuNzRMMTIgNS45OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRVbmFyY2hpdmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjU1IDUuMjJsLTEuMzktMS42OEMxOC44OCAzLjIxIDE4LjQ3IDMgMTggM0g2Yy0uNDcgMC0uODguMjEtMS4xNS41NUwzLjQ2IDUuMjJDMy4xNyA1LjU3IDMgNi4wMSAzIDYuNVYxOWMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY2LjVjMC0uNDktLjE3LS45My0uNDUtMS4yOHpNMTIgOS41bDUuNSA1LjVIMTR2MmgtNHYtMkg2LjVMMTIgOS41ek01LjEyIDVsLjgyLTFoMTJsLjkzIDFINS4xMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRVbmRvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMi41IDhjLTIuNjUgMC01LjA1Ljk5LTYuOSAyLjZMMiA3djloOWwtMy42Mi0zLjYyYzEuMzktMS4xNiAzLjE2LTEuODggNS4xMi0xLjg4IDMuNTQgMCA2LjU1IDIuMzEgNy42IDUuNWwyLjM3LS43OEMyMS4wOCAxMS4wMyAxNy4xNSA4IDEyLjUgOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXZWVrZW5kIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAxMGMtMS4xIDAtMiAuOS0yIDJ2M0g1di0zYzAtMS4xLS45LTItMi0ycy0yIC45LTIgMnY1YzAgMS4xLjkgMiAyIDJoMThjMS4xIDAgMi0uOSAyLTJ2LTVjMC0xLjEtLjktMi0yLTJ6bS0zLTVINmMtMS4xIDAtMiAuOS0yIDJ2Mi4xNWMxLjE2LjQxIDIgMS41MSAyIDIuODJWMTRoMTJ2LTIuMDNjMC0xLjMuODQtMi40IDItMi44MlY3YzAtMS4xLS45LTItMi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFjY2Vzc0FsYXJtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiA1LjcybC00LjYtMy44Ni0xLjI5IDEuNTMgNC42IDMuODZMMjIgNS43MnpNNy44OCAzLjM5TDYuNiAxLjg2IDIgNS43MWwxLjI5IDEuNTMgNC41OS0zLjg1ek0xMi41IDhIMTF2Nmw0Ljc1IDIuODUuNzUtMS4yMy00LTIuMzdWOHpNMTIgNGMtNC45NyAwLTkgNC4wMy05IDlzNC4wMiA5IDkgOWM0Ljk3IDAgOS00LjAzIDktOXMtNC4wMy05LTktOXptMCAxNmMtMy44NyAwLTctMy4xMy03LTdzMy4xMy03IDctNyA3IDMuMTMgNyA3LTMuMTMgNy03IDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWNjZXNzQWxhcm1zIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiA1LjdsLTQuNi0zLjktMS4zIDEuNSA0LjYgMy45TDIyIDUuN3pNNy45IDMuNEw2LjYgMS45IDIgNS43bDEuMyAxLjUgNC42LTMuOHpNMTIuNSA4SDExdjZsNC43IDIuOS44LTEuMi00LTIuNFY4ek0xMiA0Yy01IDAtOSA0LTkgOXM0IDkgOSA5IDktNCA5LTktNC05LTktOXptMCAxNmMtMy45IDAtNy0zLjEtNy03czMuMS03IDctNyA3IDMuMSA3IDctMy4xIDctNyA3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFjY2Vzc1RpbWUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjk5IDJDNi40NyAyIDIgNi40OCAyIDEyczQuNDcgMTAgOS45OSAxMEMxNy41MiAyMiAyMiAxNy41MiAyMiAxMlMxNy41MiAyIDExLjk5IDJ6TTEyIDIwYy00LjQyIDAtOC0zLjU4LTgtOHMzLjU4LTggOC04IDggMy41OCA4IDgtMy41OCA4LTggOHptLjUtMTNIMTF2Nmw1LjI1IDMuMTUuNzUtMS4yMy00LjUtMi42N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBZGRBbGFybSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy44OCAzLjM5TDYuNiAxLjg2IDIgNS43MWwxLjI5IDEuNTMgNC41OS0zLjg1ek0yMiA1LjcybC00LjYtMy44Ni0xLjI5IDEuNTMgNC42IDMuODZMMjIgNS43MnpNMTIgNGMtNC45NyAwLTkgNC4wMy05IDlzNC4wMiA5IDkgOWM0Ljk3IDAgOS00LjAzIDktOXMtNC4wMy05LTktOXptMCAxNmMtMy44NyAwLTctMy4xMy03LTdzMy4xMy03IDctNyA3IDMuMTMgNyA3LTMuMTMgNy03IDd6bTEtMTFoLTJ2M0g4djJoM3YzaDJ2LTNoM3YtMmgtM1Y5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFpcnBsYW5lbW9kZUFjdGl2ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAuMTggOVwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDE2di0ybC04LTVWMy41YzAtLjgzLS42Ny0xLjUtMS41LTEuNVMxMCAyLjY3IDEwIDMuNVY5bC04IDV2Mmw4LTIuNVYxOWwtMiAxLjVWMjJsMy41LTEgMy41IDF2LTEuNUwxMyAxOXYtNS41bDggMi41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFpcnBsYW5lbW9kZUluYWN0aXZlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyA5VjMuNWMwLS44My0uNjctMS41LTEuNS0xLjVTMTAgMi42NyAxMCAzLjV2My42OGw3LjgzIDcuODNMMjEgMTZ2LTJsLTgtNXpNMyA1LjI3bDQuOTkgNC45OUwyIDE0djJsOC0yLjVWMTlsLTIgMS41VjIybDMuNS0xIDMuNSAxdi0xLjVMMTMgMTl2LTMuNzNMMTguNzMgMjEgMjAgMTkuNzMgNC4yNyA0IDMgNS4yN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5MjAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTd2My42N0M3IDIxLjQgNy42IDIyIDguMzMgMjJoNy4zM2MuNzQgMCAxLjM0LS42IDEuMzQtMS4zM1YxN0g3elwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMTcgNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDRIMTRWMmgtNHYySDguMzNDNy42IDQgNyA0LjYgNyA1LjMzVjE3aDEwVjUuMzN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmF0dGVyeTMwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTE3IDUuMzNDMTcgNC42IDE2LjQgNCAxNS42NyA0SDE0VjJoLTR2Mkg4LjMzQzcuNiA0IDcgNC42IDcgNS4zM1YxNWgxMFY1LjMzelwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTV2NS42N0M3IDIxLjQgNy42IDIyIDguMzMgMjJoNy4zM2MuNzQgMCAxLjM0LS42IDEuMzQtMS4zM1YxNUg3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhdHRlcnk1MCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xNyA1LjMzQzE3IDQuNiAxNi40IDQgMTUuNjcgNEgxNFYyaC00djJIOC4zM0M3LjYgNCA3IDQuNiA3IDUuMzNWMTNoMTBWNS4zM3pcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDEzdjcuNjdDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWMTNIN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5NjAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMTcgNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDRIMTRWMmgtNHYySDguMzNDNy42IDQgNyA0LjYgNyA1LjMzVjExaDEwVjUuMzN6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyAxMXY5LjY3QzcgMjEuNCA3LjYgMjIgOC4zMyAyMmg3LjMzYy43NCAwIDEuMzQtLjYgMS4zNC0xLjMzVjExSDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmF0dGVyeTgwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTE3IDUuMzNDMTcgNC42IDE2LjQgNCAxNS42NyA0SDE0VjJoLTR2Mkg4LjMzQzcuNiA0IDcgNC42IDcgNS4zM1Y5aDEwVjUuMzN6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyA5djExLjY3QzcgMjEuNCA3LjYgMjIgOC4zMyAyMmg3LjMzYy43NCAwIDEuMzQtLjYgMS4zNC0xLjMzVjlIN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5OTAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMTcgNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDRIMTRWMmgtNHYySDguMzNDNy42IDQgNyA0LjYgNyA1LjMzVjhoMTBWNS4zM3pcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDh2MTIuNjdDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWOEg3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhdHRlcnlBbGVydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNjcgNEgxNFYyaC00djJIOC4zM0M3LjYgNCA3IDQuNiA3IDUuMzN2MTUuMzNDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDR6TTEzIDE4aC0ydi0yaDJ2MnptMC00aC0yVjloMnY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhdHRlcnlDaGFyZ2luZzIwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAyMHYtM0g3djMuNjdDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWMTdoLTQuNEwxMSAyMHpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTE1LjY3IDRIMTRWMmgtNHYySDguMzNDNy42IDQgNyA0LjYgNyA1LjMzVjE3aDR2LTIuNUg5TDEzIDd2NS41aDJMMTIuNiAxN0gxN1Y1LjMzQzE3IDQuNiAxNi40IDQgMTUuNjcgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5Q2hhcmdpbmczMCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xNS42NyA0SDE0VjJoLTR2Mkg4LjMzQzcuNiA0IDcgNC42IDcgNS4zM3Y5LjE3aDJMMTMgN3Y1LjVoMmwtMS4wNyAySDE3VjUuMzNDMTcgNC42IDE2LjQgNCAxNS42NyA0elwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExIDIwdi01LjVIN3Y2LjE3QzcgMjEuNCA3LjYgMjIgOC4zMyAyMmg3LjMzYy43NCAwIDEuMzQtLjYgMS4zNC0xLjMzVjE0LjVoLTMuMDdMMTEgMjB6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmF0dGVyeUNoYXJnaW5nNTAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LjQ3IDEzLjVMMTEgMjB2LTUuNUg5bC41My0xSDd2Ny4xN0M3IDIxLjQgNy42IDIyIDguMzMgMjJoNy4zM2MuNzQgMCAxLjM0LS42IDEuMzQtMS4zM1YxMy41aC0yLjUzelwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMTUuNjcgNEgxNFYyaC00djJIOC4zM0M3LjYgNCA3IDQuNiA3IDUuMzN2OC4xN2gyLjUzTDEzIDd2NS41aDJsLS41MyAxSDE3VjUuMzNDMTcgNC42IDE2LjQgNCAxNS42NyA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhdHRlcnlDaGFyZ2luZzYwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTE1LjY3IDRIMTRWMmgtNHYySDguMzNDNy42IDQgNyA0LjYgNyA1LjMzVjExaDMuODdMMTMgN3Y0aDRWNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDR6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMgMTIuNWgyTDExIDIwdi01LjVIOWwxLjg3LTMuNUg3djkuNjdDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWMTFoLTR2MS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhdHRlcnlDaGFyZ2luZzgwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTE1LjY3IDRIMTRWMmgtNHYySDguMzNDNy42IDQgNyA0LjYgNyA1LjMzVjloNC45M0wxMyA3djJoNFY1LjMzQzE3IDQuNiAxNi40IDQgMTUuNjcgNHpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyAxMi41aDJMMTEgMjB2LTUuNUg5TDExLjkzIDlIN3YxMS42N0M3IDIxLjQgNy42IDIyIDguMzMgMjJoNy4zM2MuNzQgMCAxLjM0LS42IDEuMzQtMS4zM1Y5aC00djMuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5Q2hhcmdpbmc5MCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xNS42NyA0SDE0VjJoLTR2Mkg4LjMzQzcuNiA0IDcgNC42IDcgNS4zM1Y4aDUuNDdMMTMgN3YxaDRWNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDR6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMgMTIuNWgyTDExIDIwdi01LjVIOUwxMi40NyA4SDd2MTIuNjdDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWOGgtNHY0LjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmF0dGVyeUNoYXJnaW5nRnVsbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNjcgNEgxNFYyaC00djJIOC4zM0M3LjYgNCA3IDQuNiA3IDUuMzN2MTUuMzNDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDR6TTExIDIwdi01LjVIOUwxMyA3djUuNWgyTDExIDIwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJhdHRlcnlGdWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS42NyA0SDE0VjJoLTR2Mkg4LjMzQzcuNiA0IDcgNC42IDcgNS4zM3YxNS4zM0M3IDIxLjQgNy42IDIyIDguMzMgMjJoNy4zM2MuNzQgMCAxLjM0LS42IDEuMzQtMS4zM1Y1LjMzQzE3IDQuNiAxNi40IDQgMTUuNjcgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5U3RkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS42NyA0SDE0VjJoLTR2Mkg4LjMzQzcuNiA0IDcgNC42IDcgNS4zM3YxNS4zM0M3IDIxLjQgNy42IDIyIDguMzMgMjJoNy4zM2MuNzQgMCAxLjM0LS42IDEuMzQtMS4zM1Y1LjMzQzE3IDQuNiAxNi40IDQgMTUuNjcgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCYXR0ZXJ5VW5rbm93biAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNjcgNEgxNFYyaC00djJIOC4zM0M3LjYgNCA3IDQuNiA3IDUuMzN2MTUuMzNDNyAyMS40IDcuNiAyMiA4LjMzIDIyaDcuMzNjLjc0IDAgMS4zNC0uNiAxLjM0LTEuMzNWNS4zM0MxNyA0LjYgMTYuNCA0IDE1LjY3IDR6bS0yLjcyIDEzLjk1aC0xLjl2LTEuOWgxLjl2MS45em0xLjM1LTUuMjZzLS4zOC40Mi0uNjcuNzFjLS40OC40OC0uODMgMS4xNS0uODMgMS42aC0xLjZjMC0uODMuNDYtMS41Mi45My0ybC45My0uOTRjLjI3LS4yNy40NC0uNjUuNDQtMS4wNiAwLS44My0uNjctMS41LTEuNS0xLjVzLTEuNS42Ny0xLjUgMS41SDljMC0xLjY2IDEuMzQtMyAzLTNzMyAxLjM0IDMgM2MwIC42Ni0uMjcgMS4yNi0uNyAxLjY5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJsdWV0b290aCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcuNzEgNy43MUwxMiAyaC0xdjcuNTlMNi40MSA1IDUgNi40MSAxMC41OSAxMiA1IDE3LjU5IDYuNDEgMTkgMTEgMTQuNDFWMjJoMWw1LjcxLTUuNzEtNC4zLTQuMjkgNC4zLTQuMjl6TTEzIDUuODNsMS44OCAxLjg4TDEzIDkuNTlWNS44M3ptMS44OCAxMC40NkwxMyAxOC4xN3YtMy43NmwxLjg4IDEuODh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmx1ZXRvb3RoQ29ubmVjdGVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDEybC0yLTItMiAyIDIgMiAyLTJ6bTEwLjcxLTQuMjlMMTIgMmgtMXY3LjU5TDYuNDEgNSA1IDYuNDEgMTAuNTkgMTIgNSAxNy41OSA2LjQxIDE5IDExIDE0LjQxVjIyaDFsNS43MS01LjcxLTQuMy00LjI5IDQuMy00LjI5ek0xMyA1LjgzbDEuODggMS44OEwxMyA5LjU5VjUuODN6bTEuODggMTAuNDZMMTMgMTguMTd2LTMuNzZsMS44OCAxLjg4ek0xOSAxMGwtMiAyIDIgMiAyLTItMi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJsdWV0b290aERpc2FibGVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyA1LjgzbDEuODggMS44OC0xLjYgMS42IDEuNDEgMS40MSAzLjAyLTMuMDJMMTIgMmgtMXY1LjAzbDIgMnYtMy4yek01LjQxIDRMNCA1LjQxIDEwLjU5IDEyIDUgMTcuNTkgNi40MSAxOSAxMSAxNC40MVYyMmgxbDQuMjktNC4yOSAyLjMgMi4yOUwyMCAxOC41OSA1LjQxIDR6TTEzIDE4LjE3di0zLjc2bDEuODggMS44OEwxMyAxOC4xN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCbHVldG9vdGhTZWFyY2hpbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE0LjI0IDEyLjAxbDIuMzIgMi4zMmMuMjgtLjcyLjQ0LTEuNTEuNDQtMi4zMyAwLS44Mi0uMTYtMS41OS0uNDMtMi4zMWwtMi4zMyAyLjMyem01LjI5LTUuM2wtMS4yNiAxLjI2Yy42MyAxLjIxLjk4IDIuNTcuOTggNC4wMnMtLjM2IDIuODItLjk4IDQuMDJsMS4yIDEuMmMuOTctMS41NCAxLjU0LTMuMzYgMS41NC01LjMxLS4wMS0xLjg5LS41NS0zLjY3LTEuNDgtNS4xOXptLTMuODIgMUwxMCAySDl2Ny41OUw0LjQxIDUgMyA2LjQxIDguNTkgMTIgMyAxNy41OSA0LjQxIDE5IDkgMTQuNDFWMjJoMWw1LjcxLTUuNzEtNC4zLTQuMjkgNC4zLTQuMjl6TTExIDUuODNsMS44OCAxLjg4TDExIDkuNTlWNS44M3ptMS44OCAxMC40NkwxMSAxOC4xN3YtMy43NmwxLjg4IDEuODh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnJpZ2h0bmVzc0F1dG8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwLjg1IDEyLjY1aDIuM0wxMiA5bC0xLjE1IDMuNjV6TTIwIDguNjlWNGgtNC42OUwxMiAuNjkgOC42OSA0SDR2NC42OUwuNjkgMTIgNCAxNS4zMVYyMGg0LjY5TDEyIDIzLjMxIDE1LjMxIDIwSDIwdi00LjY5TDIzLjMxIDEyIDIwIDguNjl6TTE0LjMgMTZsLS43LTJoLTMuMmwtLjcgMkg3LjhMMTEgN2gybDMuMiA5aC0xLjl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnJpZ2h0bmVzc0hpZ2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDguNjlWNGgtNC42OUwxMiAuNjkgOC42OSA0SDR2NC42OUwuNjkgMTIgNCAxNS4zMVYyMGg0LjY5TDEyIDIzLjMxIDE1LjMxIDIwSDIwdi00LjY5TDIzLjMxIDEyIDIwIDguNjl6TTEyIDE4Yy0zLjMxIDAtNi0yLjY5LTYtNnMyLjY5LTYgNi02IDYgMi42OSA2IDYtMi42OSA2LTYgNnptMC0xMGMtMi4yMSAwLTQgMS43OS00IDRzMS43OSA0IDQgNCA0LTEuNzkgNC00LTEuNzktNC00LTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnJpZ2h0bmVzc0xvdyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMTUuMzFMMjMuMzEgMTIgMjAgOC42OVY0aC00LjY5TDEyIC42OSA4LjY5IDRINHY0LjY5TC42OSAxMiA0IDE1LjMxVjIwaDQuNjlMMTIgMjMuMzEgMTUuMzEgMjBIMjB2LTQuNjl6TTEyIDE4Yy0zLjMxIDAtNi0yLjY5LTYtNnMyLjY5LTYgNi02IDYgMi42OSA2IDYtMi42OSA2LTYgNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCcmlnaHRuZXNzTWVkaXVtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxNS4zMUwyMy4zMSAxMiAyMCA4LjY5VjRoLTQuNjlMMTIgLjY5IDguNjkgNEg0djQuNjlMLjY5IDEyIDQgMTUuMzFWMjBoNC42OUwxMiAyMy4zMSAxNS4zMSAyMEgyMHYtNC42OXpNMTIgMThWNmMzLjMxIDAgNiAyLjY5IDYgNnMtMi42OSA2LTYgNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREYXRhVXNhZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDIuMDV2My4wM2MzLjM5LjQ5IDYgMy4zOSA2IDYuOTIgMCAuOS0uMTggMS43NS0uNDggMi41NGwyLjYgMS41M2MuNTYtMS4yNC44OC0yLjYyLjg4LTQuMDcgMC01LjE4LTMuOTUtOS40NS05LTkuOTV6TTEyIDE5Yy0zLjg3IDAtNy0zLjEzLTctNyAwLTMuNTMgMi42MS02LjQzIDYtNi45MlYyLjA1Yy01LjA2LjUtOSA0Ljc2LTkgOS45NSAwIDUuNTIgNC40NyAxMCA5Ljk5IDEwIDMuMzEgMCA2LjI0LTEuNjEgOC4wNi00LjA5bC0yLjYtMS41M0MxNi4xNyAxNy45OCAxNC4yMSAxOSAxMiAxOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREZXZlbG9wZXJNb2RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDVoMTB2MmgyVjNjMC0xLjEtLjktMS45OS0yLTEuOTlMNyAxYy0xLjEgMC0yIC45LTIgMnY0aDJWNXptOC40MSAxMS41OUwyMCAxMmwtNC41OS00LjU5TDE0IDguODMgMTcuMTcgMTIgMTQgMTUuMTdsMS40MSAxLjQyek0xMCAxNS4xN0w2LjgzIDEyIDEwIDguODMgOC41OSA3LjQxIDQgMTJsNC41OSA0LjU5TDEwIDE1LjE3ek0xNyAxOUg3di0ySDV2NGMwIDEuMS45IDIgMiAyaDEwYzEuMSAwIDItLjkgMi0ydi00aC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGV2aWNlcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCA2aDE4VjRINGMtMS4xIDAtMiAuOS0yIDJ2MTFIMHYzaDE0di0zSDRWNnptMTkgMmgtNmMtLjU1IDAtMSAuNDUtMSAxdjEwYzAgLjU1LjQ1IDEgMSAxaDZjLjU1IDAgMS0uNDUgMS0xVjljMC0uNTUtLjQ1LTEtMS0xem0tMSA5aC00di03aDR2N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREdnIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmg1djJoOHYtMmg1YzEuMSAwIDEuOTktLjkgMS45OS0yTDIzIDVjMC0xLjEtLjktMi0yLTJ6bTAgMTRIM1Y1aDE4djEyem0tMi05SDh2MmgxMVY4em0wIDRIOHYyaDExdi0yek03IDhINXYyaDJWOHptMCA0SDV2Mmgydi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdwc0ZpeGVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA4Yy0yLjIxIDAtNCAxLjc5LTQgNHMxLjc5IDQgNCA0IDQtMS43OSA0LTQtMS43OS00LTQtNHptOC45NCAzYy0uNDYtNC4xNy0zLjc3LTcuNDgtNy45NC03Ljk0VjFoLTJ2Mi4wNkM2LjgzIDMuNTIgMy41MiA2LjgzIDMuMDYgMTFIMXYyaDIuMDZjLjQ2IDQuMTcgMy43NyA3LjQ4IDcuOTQgNy45NFYyM2gydi0yLjA2YzQuMTctLjQ2IDcuNDgtMy43NyA3Ljk0LTcuOTRIMjN2LTJoLTIuMDZ6TTEyIDE5Yy0zLjg3IDAtNy0zLjEzLTctN3MzLjEzLTcgNy03IDcgMy4xMyA3IDctMy4xMyA3LTcgN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRHcHNOb3RGaXhlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuOTQgMTFjLS40Ni00LjE3LTMuNzctNy40OC03Ljk0LTcuOTRWMWgtMnYyLjA2QzYuODMgMy41MiAzLjUyIDYuODMgMy4wNiAxMUgxdjJoMi4wNmMuNDYgNC4xNyAzLjc3IDcuNDggNy45NCA3Ljk0VjIzaDJ2LTIuMDZjNC4xNy0uNDYgNy40OC0zLjc3IDcuOTQtNy45NEgyM3YtMmgtMi4wNnpNMTIgMTljLTMuODcgMC03LTMuMTMtNy03czMuMTMtNyA3LTcgNyAzLjEzIDcgNy0zLjEzIDctNyA3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdwc09mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuOTQgMTFjLS40Ni00LjE3LTMuNzctNy40OC03Ljk0LTcuOTRWMWgtMnYyLjA2Yy0xLjEzLjEyLTIuMTkuNDYtMy4xNi45N2wxLjUgMS41QzEwLjE2IDUuMTkgMTEuMDYgNSAxMiA1YzMuODcgMCA3IDMuMTMgNyA3IDAgLjk0LS4xOSAxLjg0LS41MiAyLjY1bDEuNSAxLjVjLjUtLjk2Ljg0LTIuMDIuOTctMy4xNUgyM3YtMmgtMi4wNnpNMyA0LjI3bDIuMDQgMi4wNEMzLjk3IDcuNjIgMy4yNSA5LjIzIDMuMDYgMTFIMXYyaDIuMDZjLjQ2IDQuMTcgMy43NyA3LjQ4IDcuOTQgNy45NFYyM2gydi0yLjA2YzEuNzctLjIgMy4zOC0uOTEgNC42OS0xLjk4TDE5LjczIDIxIDIxIDE5LjczIDQuMjcgMyAzIDQuMjd6bTEzLjI3IDEzLjI3QzE1LjA5IDE4LjQ1IDEzLjYxIDE5IDEyIDE5Yy0zLjg3IDAtNy0zLjEzLTctNyAwLTEuNjEuNTUtMy4wOSAxLjQ2LTQuMjdsOS44MSA5LjgxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdyYXBoaWNFcSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyAxOGgyVjZIN3YxMnptNCA0aDJWMmgtMnYyMHptLTgtOGgydi00SDN2NHptMTIgNGgyVjZoLTJ2MTJ6bTQtOHY0aDJ2LTRoLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jYXRpb25EaXNhYmxlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuOTQgMTFjLS40Ni00LjE3LTMuNzctNy40OC03Ljk0LTcuOTRWMWgtMnYyLjA2Yy0xLjEzLjEyLTIuMTkuNDYtMy4xNi45N2wxLjUgMS41QzEwLjE2IDUuMTkgMTEuMDYgNSAxMiA1YzMuODcgMCA3IDMuMTMgNyA3IDAgLjk0LS4xOSAxLjg0LS41MiAyLjY1bDEuNSAxLjVjLjUtLjk2Ljg0LTIuMDIuOTctMy4xNUgyM3YtMmgtMi4wNnpNMyA0LjI3bDIuMDQgMi4wNEMzLjk3IDcuNjIgMy4yNSA5LjIzIDMuMDYgMTFIMXYyaDIuMDZjLjQ2IDQuMTcgMy43NyA3LjQ4IDcuOTQgNy45NFYyM2gydi0yLjA2YzEuNzctLjIgMy4zOC0uOTEgNC42OS0xLjk4TDE5LjczIDIxIDIxIDE5LjczIDQuMjcgMyAzIDQuMjd6bTEzLjI3IDEzLjI3QzE1LjA5IDE4LjQ1IDEzLjYxIDE5IDEyIDE5Yy0zLjg3IDAtNy0zLjEzLTctNyAwLTEuNjEuNTUtMy4wOSAxLjQ2LTQuMjdsOS44MSA5LjgxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2F0aW9uU2VhcmNoaW5nIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC45NCAxMWMtLjQ2LTQuMTctMy43Ny03LjQ4LTcuOTQtNy45NFYxaC0ydjIuMDZDNi44MyAzLjUyIDMuNTIgNi44MyAzLjA2IDExSDF2MmgyLjA2Yy40NiA0LjE3IDMuNzcgNy40OCA3Ljk0IDcuOTRWMjNoMnYtMi4wNmM0LjE3LS40NiA3LjQ4LTMuNzcgNy45NC03Ljk0SDIzdi0yaC0yLjA2ek0xMiAxOWMtMy44NyAwLTctMy4xMy03LTdzMy4xMy03IDctNyA3IDMuMTMgNyA3LTMuMTMgNy03IDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTmV0d29ya0NlbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMiAyMmgyMFYyelwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDdMMiAyMmgxNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROZXR3b3JrV2lmaSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xMi4wMSAyMS40OUwyMy42NCA3Yy0uNDUtLjM0LTQuOTMtNC0xMS42NC00QzUuMjggMyAuODEgNi42Ni4zNiA3bDExLjYzIDE0LjQ5LjAxLjAxLjAxLS4wMXpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjUzIDEwLjk1bDguNDYgMTAuNTQuMDEuMDEuMDEtLjAxIDguNDYtMTAuNTRDMjAuMDQgMTAuNjIgMTYuODEgOCAxMiA4Yy00LjgxIDAtOC4wNCAyLjYyLTguNDcgMi45NXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROZmMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMiAuOS0yIDJ2MTZjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0wIDE4SDRWNGgxNnYxNnpNMTggNmgtNWMtMS4xIDAtMiAuOS0yIDJ2Mi4yOGMtLjYuMzUtMSAuOTgtMSAxLjcyIDAgMS4xLjkgMiAyIDJzMi0uOSAyLTJjMC0uNzQtLjQtMS4zOC0xLTEuNzJWOGgzdjhIOFY4aDJWNkg2djEyaDEyVjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2NyZWVuTG9ja0xhbmRzY2FwZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgNUgzYy0xLjEgMC0yIC45LTIgMnYxMGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjdjMC0xLjEtLjktMi0yLTJ6bS0yIDEySDVWN2gxNHYxMHptLTktMWg0Yy41NSAwIDEtLjQ1IDEtMXYtM2MwLS41NS0uNDUtMS0xLTF2LTFjMC0xLjExLS45LTItMi0yLTEuMTEgMC0yIC45LTIgMnYxYy0uNTUgMC0xIC40NS0xIDF2M2MwIC41NS40NSAxIDEgMXptLjgtNmMwLS42Ni41NC0xLjIgMS4yLTEuMi42NiAwIDEuMi41NCAxLjIgMS4ydjFoLTIuNHYtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTY3JlZW5Mb2NrUG9ydHJhaXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDE2aDRjLjU1IDAgMS0uNDUgMS0xdi0zYzAtLjU1LS40NS0xLTEtMXYtMWMwLTEuMTEtLjktMi0yLTItMS4xMSAwLTIgLjktMiAydjFjLS41NSAwLTEgLjQ1LTEgMXYzYzAgLjU1LjQ1IDEgMSAxem0uOC02YzAtLjY2LjU0LTEuMiAxLjItMS4yLjY2IDAgMS4yLjU0IDEuMiAxLjJ2MWgtMi40di0xek0xNyAxSDdjLTEuMSAwLTIgLjktMiAydjE4YzAgMS4xLjkgMiAyIDJoMTBjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0yLTItMnptMCAxOEg3VjVoMTB2MTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2NyZWVuTG9ja1JvdGF0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMy4yNSAxMi43N2wtMi41Ny0yLjU3LTEuNDEgMS40MSAyLjIyIDIuMjItNS42NiA1LjY2TDQuNTEgOC4xN2w1LjY2LTUuNjYgMi4xIDIuMSAxLjQxLTEuNDFMMTEuMjMuNzVjLS41OS0uNTktMS41NC0uNTktMi4xMiAwTDIuNzUgNy4xMWMtLjU5LjU5LS41OSAxLjU0IDAgMi4xMmwxMi4wMiAxMi4wMmMuNTkuNTkgMS41NC41OSAyLjEyIDBsNi4zNi02LjM2Yy41OS0uNTkuNTktMS41NCAwLTIuMTJ6TTguNDcgMjAuNDhDNS4yIDE4Ljk0IDIuODYgMTUuNzYgMi41IDEySDFjLjUxIDYuMTYgNS42NiAxMSAxMS45NSAxMWwuNjYtLjAzLTMuODEtMy44Mi0xLjMzIDEuMzN6TTE2IDloNWMuNTUgMCAxLS40NSAxLTFWNGMwLS41NS0uNDUtMS0xLTF2LS41QzIxIDEuMTIgMTkuODggMCAxOC41IDBTMTYgMS4xMiAxNiAyLjVWM2MtLjU1IDAtMSAuNDUtMSAxdjRjMCAuNTUuNDUgMSAxIDF6bS44LTYuNWMwLS45NC43Ni0xLjcgMS43LTEuN3MxLjcuNzYgMS43IDEuN1YzaC0zLjR2LS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNjcmVlblJvdGF0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi40OCAyLjUyYzMuMjcgMS41NSA1LjYxIDQuNzIgNS45NyA4LjQ4aDEuNUMyMy40NCA0Ljg0IDE4LjI5IDAgMTIgMGwtLjY2LjAzIDMuODEgMy44MSAxLjMzLTEuMzJ6bS02LjI1LS43N2MtLjU5LS41OS0xLjU0LS41OS0yLjEyIDBMMS43NSA4LjExYy0uNTkuNTktLjU5IDEuNTQgMCAyLjEybDEyLjAyIDEyLjAyYy41OS41OSAxLjU0LjU5IDIuMTIgMGw2LjM2LTYuMzZjLjU5LS41OS41OS0xLjU0IDAtMi4xMkwxMC4yMyAxLjc1em00LjYgMTkuNDRMMi44MSA5LjE3bDYuMzYtNi4zNiAxMi4wMiAxMi4wMi02LjM2IDYuMzZ6bS03LjMxLjI5QzQuMjUgMTkuOTQgMS45MSAxNi43NiAxLjU1IDEzSC4wNUMuNTYgMTkuMTYgNS43MSAyNCAxMiAyNGwuNjYtLjAzLTMuODEtMy44MS0xLjMzIDEuMzJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2RTdG9yYWdlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCAyaC04TDQuMDIgOCA0IDIwYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTYgNmgtMlY0aDJ2NHptMyAwaC0yVjRoMnY0em0zIDBoLTJWNGgydjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2V0dGluZ3NTeXN0ZW1EYXlkcmVhbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxNmg2LjVjMS4zOCAwIDIuNS0xLjEyIDIuNS0yLjVTMTYuODggMTEgMTUuNSAxMWgtLjA1Yy0uMjQtMS42OS0xLjY5LTMtMy40NS0zLTEuNCAwLTIuNi44My0zLjE2IDIuMDJoLS4xNkM3LjE3IDEwLjE4IDYgMTEuNDUgNiAxM2MwIDEuNjYgMS4zNCAzIDMgM3pNMjEgM0gzYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTYuMDFIM1Y0Ljk5aDE4djE0LjAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbENlbGx1bGFyMEJhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0yIDIyaDIwVjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2lnbmFsQ2VsbHVsYXIxQmFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTIgMjJoMjBWMnpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxMkwyIDIyaDEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbENlbGx1bGFyMkJhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0yIDIyaDIwVjJ6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgMTBMMiAyMmgxMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxDZWxsdWxhcjNCYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMiAyMmgyMFYyelwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDdMMiAyMmgxNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxDZWxsdWxhcjRCYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIgMjJoMjBWMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxDZWxsdWxhckNvbm5lY3RlZE5vSW50ZXJuZXQwQmFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTIyIDhWMkwyIDIyaDE2Vjh6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMjJoMnYtMmgtMnYyem0wLTEydjhoMnYtOGgtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxDZWxsdWxhckNvbm5lY3RlZE5vSW50ZXJuZXQxQmFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTIyIDhWMkwyIDIyaDE2Vjh6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMTB2OGgydi04aC0yem0tOCAxMlYxMkwyIDIyaDEwem04IDBoMnYtMmgtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbENlbGx1bGFyQ29ubmVjdGVkTm9JbnRlcm5ldDJCYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zXCIsXCJkXCI6XCJNMjIgOFYyTDIgMjJoMTZWOHpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNCAyMlYxMEwyIDIyaDEyem02LTEydjhoMnYtOGgtMnptMCAxMmgydi0yaC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2lnbmFsQ2VsbHVsYXJDb25uZWN0ZWROb0ludGVybmV0M0JhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0yMiA4VjJMMiAyMmgxNlY4elwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDIyVjdMMiAyMmgxNXptMy0xMnY4aDJ2LThoLTJ6bTAgMTJoMnYtMmgtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbENlbGx1bGFyQ29ubmVjdGVkTm9JbnRlcm5ldDRCYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDE4aDJ2LThoLTJ2OHptMCA0aDJ2LTJoLTJ2MnpNMiAyMmgxNlY4aDRWMkwyIDIyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbENlbGx1bGFyTm9TaW0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4Ljk5IDVjMC0xLjEtLjg5LTItMS45OS0yaC03TDcuNjYgNS4zNCAxOSAxNi42OCAxOC45OSA1ek0zLjY1IDMuODhMMi4zOCA1LjE1IDUgNy43N1YxOWMwIDEuMS45IDIgMiAyaDEwLjAxYy4zNSAwIC42Ny0uMS45Ni0uMjZsMS44OCAxLjg4IDEuMjctMS4yN0wzLjY1IDMuODh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2lnbmFsQ2VsbHVsYXJOdWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2LjgzVjIwSDYuODNMMjAgNi44M00yMiAyTDIgMjJoMjBWMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxDZWxsdWxhck9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgMWwtOC41OSA4LjU5TDIxIDE4LjE4VjF6TTQuNzcgNC41TDMuNSA1Ljc3bDYuMzYgNi4zNkwxIDIxaDE3LjczbDIgMkwyMiAyMS43MyA0Ljc3IDQuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxXaWZpMEJhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xMi4wMSAyMS40OUwyMy42NCA3Yy0uNDUtLjM0LTQuOTMtNC0xMS42NC00QzUuMjggMyAuODEgNi42Ni4zNiA3bDExLjYzIDE0LjQ5LjAxLjAxLjAxLS4wMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxXaWZpMUJhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xMi4wMSAyMS40OUwyMy42NCA3Yy0uNDUtLjM0LTQuOTMtNC0xMS42NC00QzUuMjggMyAuODEgNi42Ni4zNiA3bDExLjYzIDE0LjQ5LjAxLjAxLjAxLS4wMXpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LjY3IDE0Ljg2TDEyIDIxLjQ5di4wMWwuMDEtLjAxIDUuMzMtNi42M0MxNy4wNiAxNC42NSAxNS4wMyAxMyAxMiAxM3MtNS4wNiAxLjY1LTUuMzMgMS44NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxXaWZpMUJhckxvY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIzIDE2di0xLjVjMC0xLjQtMS4xLTIuNS0yLjUtMi41UzE4IDEzLjEgMTggMTQuNVYxNmMtLjUgMC0xIC41LTEgMXY0YzAgLjUuNSAxIDEgMWg1Yy41IDAgMS0uNSAxLTF2LTRjMC0uNS0uNS0xLTEtMXptLTEgMGgtM3YtMS41YzAtLjguNy0xLjUgMS41LTEuNXMxLjUuNyAxLjUgMS41VjE2elwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjUgMTQuNWMwLTIuOCAyLjItNSA1LTUgLjQgMCAuNyAwIDEgLjFMMjMuNiA3Yy0uNC0uMy00LjktNC0xMS42LTRDNS4zIDMgLjggNi43LjQgN0wxMiAyMS41bDMuNS00LjN2LTIuN3pcIixcIm9wYWNpdHlcIjpcIi4zXCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi43IDE0LjlsNS4zIDYuNiAzLjUtNC4zdi0yLjZjMC0uMiAwLS41LjEtLjctLjktLjUtMi4yLS45LTMuNi0uOS0zIDAtNS4xIDEuNy01LjMgMS45elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbFdpZmkyQmFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuM1wiLFwiZFwiOlwiTTEyLjAxIDIxLjQ5TDIzLjY0IDdjLS40NS0uMzQtNC45My00LTExLjY0LTRDNS4yOCAzIC44MSA2LjY2LjM2IDdsMTEuNjMgMTQuNDkuMDEuMDEuMDEtLjAxelwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQuNzkgMTIuNTJsNy4yIDguOThIMTJsLjAxLS4wMSA3LjItOC45OEMxOC44NSAxMi4yNCAxNi4xIDEwIDEyIDEwcy02Ljg1IDIuMjQtNy4yMSAyLjUyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbFdpZmkyQmFyTG9jayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjMgMTZ2LTEuNWMwLTEuNC0xLjEtMi41LTIuNS0yLjVTMTggMTMuMSAxOCAxNC41VjE2Yy0uNSAwLTEgLjUtMSAxdjRjMCAuNS41IDEgMSAxaDVjLjUgMCAxLS41IDEtMXYtNGMwLS41LS41LTEtMS0xem0tMSAwaC0zdi0xLjVjMC0uOC43LTEuNSAxLjUtMS41czEuNS43IDEuNSAxLjVWMTZ6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNSAxNC41YzAtMi44IDIuMi01IDUtNSAuNCAwIC43IDAgMSAuMUwyMy42IDdjLS40LS4zLTQuOS00LTExLjYtNEM1LjMgMyAuOCA2LjcuNCA3TDEyIDIxLjVsMy41LTQuM3YtMi43elwiLFwib3BhY2l0eVwiOlwiLjNcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00LjggMTIuNWw3LjIgOSAzLjUtNC40di0yLjZjMC0xLjMuNS0yLjUgMS40LTMuNEMxNS42IDEwLjUgMTQgMTAgMTIgMTBjLTQuMSAwLTYuOCAyLjItNy4yIDIuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxXaWZpM0JhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xMi4wMSAyMS40OUwyMy42NCA3Yy0uNDUtLjM0LTQuOTMtNC0xMS42NC00QzUuMjggMyAuODEgNi42Ni4zNiA3bDExLjYzIDE0LjQ5LjAxLjAxLjAxLS4wMXpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjUzIDEwLjk1bDguNDYgMTAuNTQuMDEuMDEuMDEtLjAxIDguNDYtMTAuNTRDMjAuMDQgMTAuNjIgMTYuODEgOCAxMiA4Yy00LjgxIDAtOC4wNCAyLjYyLTguNDcgMi45NXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaWduYWxXaWZpM0JhckxvY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wib3BhY2l0eVwiOlwiLjNcIixcImRcIjpcIk0xMiAzQzUuMyAzIC44IDYuNy40IDdsMy4yIDMuOUwxMiAyMS41bDMuNS00LjN2LTIuNmMwLTIuMiAxLjQtNCAzLjMtNC43LjMtLjEuNS0uMi44LS4yLjMtLjEuNi0uMS45LS4xLjQgMCAuNyAwIDEgLjFMMjMuNiA3Yy0uNC0uMy00LjktNC0xMS42LTR6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjMgMTZ2LTEuNWMwLTEuNC0xLjEtMi41LTIuNS0yLjVTMTggMTMuMSAxOCAxNC41VjE2Yy0uNSAwLTEgLjUtMSAxdjRjMCAuNS41IDEgMSAxaDVjLjUgMCAxLS41IDEtMXYtNGMwLS41LS41LTEtMS0xem0tMSAwaC0zdi0xLjVjMC0uOC43LTEuNSAxLjUtMS41czEuNS43IDEuNSAxLjVWMTZ6bS0xMCA1LjVsMy41LTQuM3YtMi42YzAtMi4yIDEuNC00IDMuMy00LjdDMTcuMyA5IDE0LjkgOCAxMiA4Yy00LjggMC04IDIuNi04LjUgMi45XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2lnbmFsV2lmaTRCYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyLjAxIDIxLjQ5TDIzLjY0IDdjLS40NS0uMzQtNC45My00LTExLjY0LTRDNS4yOCAzIC44MSA2LjY2LjM2IDdsMTEuNjMgMTQuNDkuMDEuMDEuMDEtLjAxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbFdpZmk0QmFyTG9jayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjMgMTZ2LTEuNWMwLTEuNC0xLjEtMi41LTIuNS0yLjVTMTggMTMuMSAxOCAxNC41VjE2Yy0uNSAwLTEgLjUtMSAxdjRjMCAuNS41IDEgMSAxaDVjLjUgMCAxLS41IDEtMXYtNGMwLS41LS41LTEtMS0xem0tMSAwaC0zdi0xLjVjMC0uOC43LTEuNSAxLjUtMS41czEuNS43IDEuNSAxLjVWMTZ6bS02LjUtMS41YzAtMi44IDIuMi01IDUtNSAuNCAwIC43IDAgMSAuMUwyMy42IDdjLS40LS4zLTQuOS00LTExLjYtNEM1LjMgMyAuOCA2LjcuNCA3TDEyIDIxLjVsMy41LTQuNHYtMi42elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpZ25hbFdpZmlPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIzLjY0IDdjLS40NS0uMzQtNC45My00LTExLjY0LTQtMS41IDAtMi44OS4xOS00LjE1LjQ4TDE4LjE4IDEzLjggMjMuNjQgN3ptLTYuNiA4LjIyTDMuMjcgMS40NCAyIDIuNzJsMi4wNSAyLjA2QzEuOTEgNS43Ni41OSA2LjgyLjM2IDdsMTEuNjMgMTQuNDkuMDEuMDEuMDEtLjAxIDMuOS00Ljg2IDMuMzIgMy4zMiAxLjI3LTEuMjctMy40Ni0zLjQ2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0b3JhZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIgMjBoMjB2LTRIMnY0em0yLTNoMnYySDR2LTJ6TTIgNHY0aDIwVjRIMnptNCAzSDRWNWgydjJ6bS00IDdoMjB2LTRIMnY0em0yLTNoMnYySDR2LTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVXNiIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSA3djRoMXYyaC0zVjVoMmwtMy00LTMgNGgydjhIOHYtMi4wN2MuNy0uMzcgMS4yLTEuMDggMS4yLTEuOTMgMC0xLjIxLS45OS0yLjItMi4yLTIuMi0xLjIxIDAtMi4yLjk5LTIuMiAyLjIgMCAuODUuNSAxLjU2IDEuMiAxLjkzVjEzYzAgMS4xMS44OSAyIDIgMmgzdjMuMDVjLS43MS4zNy0xLjIgMS4xLTEuMiAxLjk1IDAgMS4yMi45OSAyLjIgMi4yIDIuMiAxLjIxIDAgMi4yLS45OCAyLjItMi4yIDAtLjg1LS40OS0xLjU4LTEuMi0xLjk1VjE1aDNjMS4xMSAwIDItLjg5IDItMnYtMmgxVjdoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV2FsbHBhcGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDRoN1YySDRjLTEuMSAwLTIgLjktMiAydjdoMlY0em02IDlsLTQgNWgxMmwtMy00LTIuMDMgMi43MUwxMCAxM3ptNy00LjVjMC0uODMtLjY3LTEuNS0xLjUtMS41UzE0IDcuNjcgMTQgOC41cy42NyAxLjUgMS41IDEuNVMxNyA5LjMzIDE3IDguNXpNMjAgMmgtN3YyaDd2N2gyVjRjMC0xLjEtLjktMi0yLTJ6bTAgMThoLTd2Mmg3YzEuMSAwIDItLjkgMi0ydi03aC0ydjd6TTQgMTNIMnY3YzAgMS4xLjkgMiAyIDJoN3YtMkg0di03elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFdpZGdldHMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDEzdjhoOHYtOGgtOHpNMyAyMWg4di04SDN2OHpNMyAzdjhoOFYzSDN6bTEzLjY2LTEuMzFMMTEgNy4zNCAxNi42NiAxM2w1LjY2LTUuNjYtNS42Ni01LjY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFdpZmlMb2NrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC41IDkuNWMuMjggMCAuNTUuMDQuODEuMDhMMjQgNmMtMy4zNC0yLjUxLTcuNS00LTEyLTRTMy4zNCAzLjQ5IDAgNmwxMiAxNiAzLjUtNC42N1YxNC41YzAtMi43NiAyLjI0LTUgNS01ek0yMyAxNnYtMS41YzAtMS4zOC0xLjEyLTIuNS0yLjUtMi41UzE4IDEzLjEyIDE4IDE0LjVWMTZjLS41NSAwLTEgLjQ1LTEgMXY0YzAgLjU1LjQ1IDEgMSAxaDVjLjU1IDAgMS0uNDUgMS0xdi00YzAtLjU1LS40NS0xLTEtMXptLTEgMGgtM3YtMS41YzAtLjgzLjY3LTEuNSAxLjUtMS41czEuNS42NyAxLjUgMS41VjE2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFdpZmlUZXRoZXJpbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDExYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptNiAyYzAtMy4zMS0yLjY5LTYtNi02cy02IDIuNjktNiA2YzAgMi4yMiAxLjIxIDQuMTUgMyA1LjE5bDEtMS43NGMtMS4xOS0uNy0yLTEuOTctMi0zLjQ1IDAtMi4yMSAxLjc5LTQgNC00czQgMS43OSA0IDRjMCAxLjQ4LS44MSAyLjc1LTIgMy40NWwxIDEuNzRjMS43OS0xLjA0IDMtMi45NyAzLTUuMTl6TTEyIDNDNi40OCAzIDIgNy40OCAyIDEzYzAgMy43IDIuMDEgNi45MiA0Ljk5IDguNjVsMS0xLjczQzUuNjEgMTguNTMgNCAxNS45NiA0IDEzYzAtNC40MiAzLjU4LTggOC04czggMy41OCA4IDhjMCAyLjk2LTEuNjEgNS41My00IDYuOTJsMSAxLjczYzIuOTktMS43MyA1LTQuOTUgNS04LjY1IDAtNS41Mi00LjQ4LTEwLTEwLTEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEF0dGFjaEZpbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjUgNnYxMS41YzAgMi4yMS0xLjc5IDQtNCA0cy00LTEuNzktNC00VjVjMC0xLjM4IDEuMTItMi41IDIuNS0yLjVzMi41IDEuMTIgMi41IDIuNXYxMC41YzAgLjU1LS40NSAxLTEgMXMtMS0uNDUtMS0xVjZIMTB2OS41YzAgMS4zOCAxLjEyIDIuNSAyLjUgMi41czIuNS0xLjEyIDIuNS0yLjVWNWMwLTIuMjEtMS43OS00LTQtNFM3IDIuNzkgNyA1djEyLjVjMCAzLjA0IDIuNDYgNS41IDUuNSA1LjVzNS41LTIuNDYgNS41LTUuNVY2aC0xLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQXR0YWNoTW9uZXkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjggMTAuOWMtMi4yNy0uNTktMy0xLjItMy0yLjE1IDAtMS4wOSAxLjAxLTEuODUgMi43LTEuODUgMS43OCAwIDIuNDQuODUgMi41IDIuMWgyLjIxYy0uMDctMS43Mi0xLjEyLTMuMy0zLjIxLTMuODFWM2gtM3YyLjE2Yy0xLjk0LjQyLTMuNSAxLjY4LTMuNSAzLjYxIDAgMi4zMSAxLjkxIDMuNDYgNC43IDQuMTMgMi41LjYgMyAxLjQ4IDMgMi40MSAwIC42OS0uNDkgMS43OS0yLjcgMS43OS0yLjA2IDAtMi44Ny0uOTItMi45OC0yLjFoLTIuMmMuMTIgMi4xOSAxLjc2IDMuNDIgMy42OCAzLjgzVjIxaDN2LTIuMTVjMS45NS0uMzcgMy41LTEuNSAzLjUtMy41NSAwLTIuODQtMi40My0zLjgxLTQuNy00LjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQm9yZGVyQWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDN2MThoMThWM0gzem04IDE2SDV2LTZoNnY2em0wLThINVY1aDZ2NnptOCA4aC02di02aDZ2NnptMC04aC02VjVoNnY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlckJvdHRvbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxMUg3djJoMnYtMnptNCA0aC0ydjJoMnYtMnpNOSAzSDd2MmgyVjN6bTQgOGgtMnYyaDJ2LTJ6TTUgM0gzdjJoMlYzem04IDRoLTJ2MmgyVjd6bTQgNGgtMnYyaDJ2LTJ6bS00LThoLTJ2MmgyVjN6bTQgMGgtMnYyaDJWM3ptMiAxMGgydi0yaC0ydjJ6bTAgNGgydi0yaC0ydjJ6TTUgN0gzdjJoMlY3em0xNC00djJoMlYzaC0yem0wIDZoMlY3aC0ydjJ6TTUgMTFIM3YyaDJ2LTJ6TTMgMjFoMTh2LTJIM3Yyem0yLTZIM3YyaDJ2LTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQm9yZGVyQ2xlYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgNWgyVjNIN3Yyem0wIDhoMnYtMkg3djJ6bTAgOGgydi0ySDd2MnptNC00aDJ2LTJoLTJ2MnptMCA0aDJ2LTJoLTJ2MnptLTggMGgydi0ySDN2MnptMC00aDJ2LTJIM3Yyem0wLTRoMnYtMkgzdjJ6bTAtNGgyVjdIM3Yyem0wLTRoMlYzSDN2MnptOCA4aDJ2LTJoLTJ2MnptOCA0aDJ2LTJoLTJ2MnptMC00aDJ2LTJoLTJ2MnptMCA4aDJ2LTJoLTJ2MnptMC0xMmgyVjdoLTJ2MnptLTggMGgyVjdoLTJ2MnptOC02djJoMlYzaC0yem0tOCAyaDJWM2gtMnYyem00IDE2aDJ2LTJoLTJ2MnptMC04aDJ2LTJoLTJ2MnptMC04aDJWM2gtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlckNvbG9yIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy43NSA3TDE0IDMuMjVsLTEwIDEwVjE3aDMuNzVsMTAtMTB6bTIuOTYtMi45NmMuMzktLjM5LjM5LTEuMDIgMC0xLjQxTDE4LjM3LjI5Yy0uMzktLjM5LTEuMDItLjM5LTEuNDEgMEwxNSAyLjI1IDE4Ljc1IDZsMS45Ni0xLjk2elwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZmlsbE9wYWNpdHlcIjpcIi4zNlwiLFwiZFwiOlwiTTAgMjBoMjR2NEgwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlckhvcml6b250YWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgMjFoMnYtMkgzdjJ6TTUgN0gzdjJoMlY3ek0zIDE3aDJ2LTJIM3Yyem00IDRoMnYtMkg3djJ6TTUgM0gzdjJoMlYzem00IDBIN3YyaDJWM3ptOCAwaC0ydjJoMlYzem0tNCA0aC0ydjJoMlY3em0wLTRoLTJ2MmgyVjN6bTYgMTRoMnYtMmgtMnYyem0tOCA0aDJ2LTJoLTJ2MnptLTgtOGgxOHYtMkgzdjJ6TTE5IDN2MmgyVjNoLTJ6bTAgNmgyVjdoLTJ2MnptLTggOGgydi0yaC0ydjJ6bTQgNGgydi0yaC0ydjJ6bTQgMGgydi0yaC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQm9yZGVySW5uZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgMjFoMnYtMkgzdjJ6bTQgMGgydi0ySDd2MnpNNSA3SDN2MmgyVjd6TTMgMTdoMnYtMkgzdjJ6TTkgM0g3djJoMlYzek01IDNIM3YyaDJWM3ptMTIgMGgtMnYyaDJWM3ptMiA2aDJWN2gtMnYyem0wLTZ2MmgyVjNoLTJ6bS00IDE4aDJ2LTJoLTJ2MnpNMTMgM2gtMnY4SDN2Mmg4djhoMnYtOGg4di0yaC04VjN6bTYgMThoMnYtMmgtMnYyem0wLTRoMnYtMmgtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlckxlZnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExIDIxaDJ2LTJoLTJ2MnptMC00aDJ2LTJoLTJ2MnptMC0xMmgyVjNoLTJ2MnptMCA0aDJWN2gtMnYyem0wIDRoMnYtMmgtMnYyem0tNCA4aDJ2LTJIN3Yyek03IDVoMlYzSDd2MnptMCA4aDJ2LTJIN3Yyem0tNCA4aDJWM0gzdjE4ek0xOSA5aDJWN2gtMnYyem0tNCAxMmgydi0yaC0ydjJ6bTQtNGgydi0yaC0ydjJ6bTAtMTR2MmgyVjNoLTJ6bTAgMTBoMnYtMmgtMnYyem0wIDhoMnYtMmgtMnYyem0tNC04aDJ2LTJoLTJ2MnptMC04aDJWM2gtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlck91dGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyA3aC0ydjJoMlY3em0wIDRoLTJ2Mmgydi0yem00IDBoLTJ2Mmgydi0yek0zIDN2MThoMThWM0gzem0xNiAxNkg1VjVoMTR2MTR6bS02LTRoLTJ2Mmgydi0yem0tNC00SDd2Mmgydi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlclJpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDIxaDJ2LTJIN3Yyek0zIDVoMlYzSDN2MnptNCAwaDJWM0g3djJ6bTAgOGgydi0ySDd2MnptLTQgOGgydi0ySDN2MnptOCAwaDJ2LTJoLTJ2MnptLTgtOGgydi0ySDN2MnptMCA0aDJ2LTJIM3Yyem0wLThoMlY3SDN2MnptOCA4aDJ2LTJoLTJ2MnptNC00aDJ2LTJoLTJ2MnptNC0xMHYxOGgyVjNoLTJ6bS00IDE4aDJ2LTJoLTJ2MnptMC0xNmgyVjNoLTJ2MnptLTQgOGgydi0yaC0ydjJ6bTAtOGgyVjNoLTJ2MnptMCA0aDJWN2gtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlclN0eWxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNSAyMWgydi0yaC0ydjJ6bTQgMGgydi0yaC0ydjJ6TTcgMjFoMnYtMkg3djJ6bTQgMGgydi0yaC0ydjJ6bTgtNGgydi0yaC0ydjJ6bTAtNGgydi0yaC0ydjJ6TTMgM3YxOGgyVjVoMTZWM0gzem0xNiA2aDJWN2gtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJvcmRlclRvcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyAyMWgydi0ySDd2MnptMC04aDJ2LTJIN3Yyem00IDBoMnYtMmgtMnYyem0wIDhoMnYtMmgtMnYyem0tOC00aDJ2LTJIM3Yyem0wIDRoMnYtMkgzdjJ6bTAtOGgydi0ySDN2MnptMC00aDJWN0gzdjJ6bTggOGgydi0yaC0ydjJ6bTgtOGgyVjdoLTJ2MnptMCA0aDJ2LTJoLTJ2MnpNMyAzdjJoMThWM0gzem0xNiAxNGgydi0yaC0ydjJ6bS00IDRoMnYtMmgtMnYyek0xMSA5aDJWN2gtMnYyem04IDEyaDJ2LTJoLTJ2MnptLTQtOGgydi0yaC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQm9yZGVyVmVydGljYWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgOWgyVjdIM3Yyem0wLTRoMlYzSDN2MnptNCAxNmgydi0ySDd2MnptMC04aDJ2LTJIN3Yyem0tNCAwaDJ2LTJIM3Yyem0wIDhoMnYtMkgzdjJ6bTAtNGgydi0ySDN2MnpNNyA1aDJWM0g3djJ6bTEyIDEyaDJ2LTJoLTJ2MnptLTggNGgyVjNoLTJ2MTh6bTggMGgydi0yaC0ydjJ6bTAtOGgydi0yaC0ydjJ6bTAtMTB2MmgyVjNoLTJ6bTAgNmgyVjdoLTJ2MnptLTQtNGgyVjNoLTJ2MnptMCAxNmgydi0yaC0ydjJ6bTAtOGgydi0yaC0ydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnViYmxlQ2hhcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiNy4yXCIsXCJjeVwiOlwiMTQuNFwiLFwiclwiOlwiMy4yXCJ9fSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxNC44XCIsXCJjeVwiOlwiMThcIixcInJcIjpcIjJcIn19LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE1LjJcIixcImN5XCI6XCI4LjhcIixcInJcIjpcIjQuOFwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERyYWdIYW5kbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDlINHYyaDE2Vjl6TTQgMTVoMTZ2LTJINHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcm1hdEFsaWduQ2VudGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDE1djJoMTB2LTJIN3ptLTQgNmgxOHYtMkgzdjJ6bTAtOGgxOHYtMkgzdjJ6bTQtNnYyaDEwVjdIN3pNMyAzdjJoMThWM0gzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcm1hdEFsaWduSnVzdGlmeSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAyMWgxOHYtMkgzdjJ6bTAtNGgxOHYtMkgzdjJ6bTAtNGgxOHYtMkgzdjJ6bTAtNGgxOFY3SDN2MnptMC02djJoMThWM0gzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcm1hdEFsaWduTGVmdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgMTVIM3YyaDEydi0yem0wLThIM3YyaDEyVjd6TTMgMTNoMTh2LTJIM3Yyem0wIDhoMTh2LTJIM3Yyek0zIDN2MmgxOFYzSDN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0QWxpZ25SaWdodCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAyMWgxOHYtMkgzdjJ6bTYtNGgxMnYtMkg5djJ6bS02LTRoMTh2LTJIM3Yyem02LTRoMTJWN0g5djJ6TTMgM3YyaDE4VjNIM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRCb2xkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS42IDEwLjc5Yy45Ny0uNjcgMS42NS0xLjc3IDEuNjUtMi43OSAwLTIuMjYtMS43NS00LTQtNEg3djE0aDcuMDRjMi4wOSAwIDMuNzEtMS43IDMuNzEtMy43OSAwLTEuNTItLjg2LTIuODItMi4xNS0zLjQyek0xMCA2LjVoM2MuODMgMCAxLjUuNjcgMS41IDEuNXMtLjY3IDEuNS0xLjUgMS41aC0zdi0zem0zLjUgOUgxMHYtM2gzLjVjLjgzIDAgMS41LjY3IDEuNSAxLjVzLS42NyAxLjUtMS41IDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRDbGVhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy4yNyA1TDIgNi4yN2w2Ljk3IDYuOTdMNi41IDE5aDNsMS41Ny0zLjY2TDE2LjczIDIxIDE4IDE5LjczIDMuNTUgNS4yNyAzLjI3IDV6TTYgNXYuMThMOC44MiA4aDIuNGwtLjcyIDEuNjggMi4xIDIuMUwxNC4yMSA4SDIwVjVINnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRDb2xvckZpbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjU2IDguOTRMNy42MiAwIDYuMjEgMS40MWwyLjM4IDIuMzgtNS4xNSA1LjE1Yy0uNTkuNTktLjU5IDEuNTQgMCAyLjEybDUuNSA1LjVjLjI5LjI5LjY4LjQ0IDEuMDYuNDRzLjc3LS4xNSAxLjA2LS40NGw1LjUtNS41Yy41OS0uNTguNTktMS41MyAwLTIuMTJ6TTUuMjEgMTBMMTAgNS4yMSAxNC43OSAxMEg1LjIxek0xOSAxMS41cy0yIDIuMTctMiAzLjVjMCAxLjEuOSAyIDIgMnMyLS45IDItMmMwLTEuMzMtMi0zLjUtMi0zLjV6XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJmaWxsT3BhY2l0eVwiOlwiLjM2XCIsXCJkXCI6XCJNMCAyMGgyNHY0SDB6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0Q29sb3JSZXNldCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTggMTRjMC00LTYtMTAuOC02LTEwLjhzLTEuMzMgMS41MS0yLjczIDMuNTJsOC41OSA4LjU5Yy4wOS0uNDIuMTQtLjg2LjE0LTEuMzF6bS0uODggMy4xMkwxMi41IDEyLjUgNS4yNyA1LjI3IDQgNi41NWwzLjMyIDMuMzJDNi41NSAxMS4zMiA2IDEyLjc5IDYgMTRjMCAzLjMxIDIuNjkgNiA2IDYgMS41MiAwIDIuOS0uNTcgMy45Ni0xLjVsMi42MyAyLjYzIDEuMjctMS4yNy0yLjc0LTIuNzR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0Q29sb3JUZXh0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImZpbGxPcGFjaXR5XCI6XCIuMzZcIixcImRcIjpcIk0wIDIwaDI0djRIMHpcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAzTDUuNSAxN2gyLjI1bDEuMTItM2g2LjI1bDEuMTIgM2gyLjI1TDEzIDNoLTJ6bS0xLjM4IDlMMTIgNS42NyAxNC4zOCAxMkg5LjYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcm1hdEluZGVudERlY3JlYXNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAxN2gxMHYtMkgxMXYyem0tOC01bDQgNFY4bC00IDR6bTAgOWgxOHYtMkgzdjJ6TTMgM3YyaDE4VjNIM3ptOCA2aDEwVjdIMTF2MnptMCA0aDEwdi0ySDExdjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0SW5kZW50SW5jcmVhc2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgMjFoMTh2LTJIM3Yyek0zIDh2OGw0LTQtNC00em04IDloMTB2LTJIMTF2MnpNMyAzdjJoMThWM0gzem04IDZoMTBWN0gxMXYyem0wIDRoMTB2LTJIMTF2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRJdGFsaWMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDR2M2gyLjIxbC0zLjQyIDhINnYzaDh2LTNoLTIuMjFsMy40Mi04SDE4VjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0TGluZVNwYWNpbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYgN2gyLjVMNSAzLjUgMS41IDdINHYxMEgxLjVMNSAyMC41IDguNSAxN0g2Vjd6bTQtMnYyaDEyVjVIMTB6bTAgMTRoMTJ2LTJIMTB2MnptMC02aDEydi0ySDEwdjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0TGlzdEJ1bGxldGVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDEwLjVjLS44MyAwLTEuNS42Ny0xLjUgMS41cy42NyAxLjUgMS41IDEuNSAxLjUtLjY3IDEuNS0xLjUtLjY3LTEuNS0xLjUtMS41em0wLTZjLS44MyAwLTEuNS42Ny0xLjUgMS41UzMuMTcgNy41IDQgNy41IDUuNSA2LjgzIDUuNSA2IDQuODMgNC41IDQgNC41em0wIDEyYy0uODMgMC0xLjUuNjgtMS41IDEuNXMuNjggMS41IDEuNSAxLjUgMS41LS42OCAxLjUtMS41LS42Ny0xLjUtMS41LTEuNXpNNyAxOWgxNHYtMkg3djJ6bTAtNmgxNHYtMkg3djJ6bTAtOHYyaDE0VjVIN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRMaXN0TnVtYmVyZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIgMTdoMnYuNUgzdjFoMXYuNUgydjFoM3YtNEgydjF6bTEtOWgxVjRIMnYxaDF2M3ptLTEgM2gxLjhMMiAxMy4xdi45aDN2LTFIMy4yTDUgMTAuOVYxMEgydjF6bTUtNnYyaDE0VjVIN3ptMCAxNGgxNHYtMkg3djJ6bTAtNmgxNHYtMkg3djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0UGFpbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDRWM2MwLS41NS0uNDUtMS0xLTFINWMtLjU1IDAtMSAuNDUtMSAxdjRjMCAuNTUuNDUgMSAxIDFoMTJjLjU1IDAgMS0uNDUgMS0xVjZoMXY0SDl2MTFjMCAuNTUuNDUgMSAxIDFoMmMuNTUgMCAxLS40NSAxLTF2LTloOFY0aC0zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcm1hdFF1b3RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02IDE3aDNsMi00VjdINXY2aDN6bTggMGgzbDItNFY3aC02djZoM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRTaGFwZXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIzIDdWMWgtNnYySDdWMUgxdjZoMnYxMEgxdjZoNnYtMmgxMHYyaDZ2LTZoLTJWN2gyek0zIDNoMnYySDNWM3ptMiAxOEgzdi0yaDJ2MnptMTItMkg3di0ySDVWN2gyVjVoMTB2MmgydjEwaC0ydjJ6bTQgMmgtMnYtMmgydjJ6TTE5IDVWM2gydjJoLTJ6bS01LjI3IDloLTMuNDlsLS43MyAySDcuODlsMy40LTloMS40bDMuNDEgOWgtMS42M2wtLjc0LTJ6bS0zLjA0LTEuMjZoMi42MUwxMiA4LjkxbC0xLjMxIDMuODN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9ybWF0U2l6ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSA0djNoNXYxMmgzVjdoNVY0SDl6bS02IDhoM3Y3aDN2LTdoM1Y5SDN2M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRTdHJpa2V0aHJvdWdoIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCAxOWg0di0zaC00djN6TTUgNHYzaDV2M2g0VjdoNVY0SDV6TTMgMTRoMTh2LTJIM3YyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZvcm1hdFRleHRkaXJlY3Rpb25MVG9SIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05IDEwdjVoMlY0aDJ2MTFoMlY0aDJWMkg5QzYuNzkgMiA1IDMuNzkgNSA2czEuNzkgNCA0IDR6bTEyIDhsLTQtNHYzSDV2MmgxMnYzbDQtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRUZXh0ZGlyZWN0aW9uUlRvTCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAgMTB2NWgyVjRoMnYxMWgyVjRoMlYyaC04QzcuNzkgMiA2IDMuNzkgNiA2czEuNzkgNCA0IDR6bS0yIDd2LTNsLTQgNCA0IDR2LTNoMTJ2LTJIOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb3JtYXRVbmRlcmxpbmVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxN2MzLjMxIDAgNi0yLjY5IDYtNlYzaC0yLjV2OGMwIDEuOTMtMS41NyAzLjUtMy41IDMuNVM4LjUgMTIuOTMgOC41IDExVjNINnY4YzAgMy4zMSAyLjY5IDYgNiA2em0tNyAydjJoMTR2LTJINXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGdW5jdGlvbnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDRINnYybDYuNSA2TDYgMTh2MmgxMnYtM2gtN2w1LTUtNS01aDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSGlnaGxpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02IDE0bDMgM3Y1aDZ2LTVsMy0zVjlINnptNS0xMmgydjNoLTJ6TTMuNSA1Ljg3NUw0LjkxNCA0LjQ2bDIuMTIgMi4xMjJMNS42MiA3Ljk5N3ptMTMuNDYuNzFsMi4xMjMtMi4xMiAxLjQxNCAxLjQxNEwxOC4zNzUgOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbnNlcnRDaGFydCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM0g1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6TTkgMTdIN3YtN2gydjd6bTQgMGgtMlY3aDJ2MTB6bTQgMGgtMnYtNGgydjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSW5zZXJ0Q29tbWVudCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMkg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE0bDQgNFY0YzAtMS4xLS45LTItMi0yem0tMiAxMkg2di0yaDEydjJ6bTAtM0g2VjloMTJ2MnptMC0zSDZWNmgxMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEluc2VydERyaXZlRmlsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiAyYy0xLjEgMC0xLjk5LjktMS45OSAyTDQgMjBjMCAxLjEuODkgMiAxLjk5IDJIMThjMS4xIDAgMi0uOSAyLTJWOGwtNi02SDZ6bTcgN1YzLjVMMTguNSA5SDEzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEluc2VydEVtb3RpY29uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS45OSAyQzYuNDcgMiAyIDYuNDggMiAxMnM0LjQ3IDEwIDkuOTkgMTBDMTcuNTIgMjIgMjIgMTcuNTIgMjIgMTJTMTcuNTIgMiAxMS45OSAyek0xMiAyMGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6bTMuNS05Yy44MyAwIDEuNS0uNjcgMS41LTEuNVMxNi4zMyA4IDE1LjUgOCAxNCA4LjY3IDE0IDkuNXMuNjcgMS41IDEuNSAxLjV6bS03IDBjLjgzIDAgMS41LS42NyAxLjUtMS41UzkuMzMgOCA4LjUgOCA3IDguNjcgNyA5LjUgNy42NyAxMSA4LjUgMTF6bTMuNSA2LjVjMi4zMyAwIDQuMzEtMS40NiA1LjExLTMuNUg2Ljg5Yy44IDIuMDQgMi43OCAzLjUgNS4xMSAzLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSW5zZXJ0SW52aXRhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgMTJoLTV2NWg1di01ek0xNiAxdjJIOFYxSDZ2Mkg1Yy0xLjExIDAtMS45OS45LTEuOTkgMkwzIDE5YzAgMS4xLjg5IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJoLTFWMWgtMnptMyAxOEg1VjhoMTR2MTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSW5zZXJ0TGluayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy45IDEyYzAtMS43MSAxLjM5LTMuMSAzLjEtMy4xaDRWN0g3Yy0yLjc2IDAtNSAyLjI0LTUgNXMyLjI0IDUgNSA1aDR2LTEuOUg3Yy0xLjcxIDAtMy4xLTEuMzktMy4xLTMuMXpNOCAxM2g4di0ySDh2MnptOS02aC00djEuOWg0YzEuNzEgMCAzLjEgMS4zOSAzLjEgMy4xcy0xLjM5IDMuMS0zLjEgMy4xaC00VjE3aDRjMi43NiAwIDUtMi4yNCA1LTVzLTIuMjQtNS01LTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSW5zZXJ0UGhvdG8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDE5VjVjMC0xLjEtLjktMi0yLTJINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMnpNOC41IDEzLjVsMi41IDMuMDFMMTQuNSAxMmw0LjUgNkg1bDMuNS00LjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGluZWFyU2NhbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjUgOS41Yy0xLjAzIDAtMS45LjYyLTIuMjkgMS41aC0yLjkyYy0uMzktLjg4LTEuMjYtMS41LTIuMjktMS41cy0xLjkuNjItMi4yOSAxLjVINi43OWMtLjM5LS44OC0xLjI2LTEuNS0yLjI5LTEuNUMzLjEyIDkuNSAyIDEwLjYyIDIgMTJzMS4xMiAyLjUgMi41IDIuNWMxLjAzIDAgMS45LS42MiAyLjI5LTEuNWgyLjkyYy4zOS44OCAxLjI2IDEuNSAyLjI5IDEuNXMxLjktLjYyIDIuMjktMS41aDIuOTJjLjM5Ljg4IDEuMjYgMS41IDIuMjkgMS41IDEuMzggMCAyLjUtMS4xMiAyLjUtMi41cy0xLjEyLTIuNS0yLjUtMi41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1lcmdlVHlwZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgMjAuNDFMMTguNDEgMTkgMTUgMTUuNTkgMTMuNTkgMTcgMTcgMjAuNDF6TTcuNSA4SDExdjUuNTlMNS41OSAxOSA3IDIwLjQxbDYtNlY4aDMuNUwxMiAzLjUgNy41IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTW9kZUNvbW1lbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjk5IDRjMC0xLjEtLjg5LTItMS45OS0ySDRjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTRsNCA0LS4wMS0xOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNb2RlRWRpdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAxNy4yNVYyMWgzLjc1TDE3LjgxIDkuOTRsLTMuNzUtMy43NUwzIDE3LjI1ek0yMC43MSA3LjA0Yy4zOS0uMzkuMzktMS4wMiAwLTEuNDFsLTIuMzQtMi4zNGMtLjM5LS4zOS0xLjAyLS4zOS0xLjQxIDBsLTEuODMgMS44MyAzLjc1IDMuNzUgMS44My0xLjgzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1vbmV0aXphdGlvbk9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0xLjQxIDE2LjA5VjIwaC0yLjY3di0xLjkzYy0xLjcxLS4zNi0zLjE2LTEuNDYtMy4yNy0zLjRoMS45NmMuMSAxLjA1LjgyIDEuODcgMi42NSAxLjg3IDEuOTYgMCAyLjQtLjk4IDIuNC0xLjU5IDAtLjgzLS40NC0xLjYxLTIuNjctMi4xNC0yLjQ4LS42LTQuMTgtMS42Mi00LjE4LTMuNjcgMC0xLjcyIDEuMzktMi44NCAzLjExLTMuMjFWNGgyLjY3djEuOTVjMS44Ni40NSAyLjc5IDEuODYgMi44NSAzLjM5SDE0LjNjLS4wNS0xLjExLS42NC0xLjg3LTIuMjItMS44Ny0xLjUgMC0yLjQuNjgtMi40IDEuNjQgMCAuODQuNjUgMS4zOSAyLjY3IDEuOTFzNC4xOCAxLjM5IDQuMTggMy45MWMtLjAxIDEuODMtMS4zOCAyLjgzLTMuMTIgMy4xNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNb25leU9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuNSA2LjljMS43OCAwIDIuNDQuODUgMi41IDIuMWgyLjIxYy0uMDctMS43Mi0xLjEyLTMuMy0zLjIxLTMuODFWM2gtM3YyLjE2Yy0uNTMuMTItMS4wMy4zLTEuNDguNTRsMS40NyAxLjQ3Yy40MS0uMTcuOTEtLjI3IDEuNTEtLjI3ek01LjMzIDQuMDZMNC4wNiA1LjMzIDcuNSA4Ljc3YzAgMi4wOCAxLjU2IDMuMjEgMy45MSAzLjkxbDMuNTEgMy41MWMtLjM0LjQ4LTEuMDUuOTEtMi40Mi45MS0yLjA2IDAtMi44Ny0uOTItMi45OC0yLjFoLTIuMmMuMTIgMi4xOSAxLjc2IDMuNDIgMy42OCAzLjgzVjIxaDN2LTIuMTVjLjk2LS4xOCAxLjgyLS41NSAyLjQ1LTEuMTJsMi4yMiAyLjIyIDEuMjctMS4yN0w1LjMzIDQuMDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTXVsdGlsaW5lQ2hhcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDYuOTJsLTEuNDEtMS40MS0yLjg1IDMuMjFDMTUuNjggNi40IDEyLjgzIDUgOS42MSA1IDYuNzIgNSA0LjA3IDYuMTYgMiA4bDEuNDIgMS40MkM1LjEyIDcuOTMgNy4yNyA3IDkuNjEgN2MyLjc0IDAgNS4wOSAxLjI2IDYuNzcgMy4yNGwtMi44OCAzLjI0LTQtNEwyIDE2Ljk5bDEuNSAxLjUgNi02LjAxIDQgNCA0LjA1LTQuNTVjLjc1IDEuMzUgMS4yNSAyLjkgMS40NCA0LjU1SDIxYy0uMjItMi4zLS45NS00LjM5LTIuMDQtNi4xNEwyMiA2LjkyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBpZUNoYXJ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAydjIwYy01LjA3LS41LTktNC43OS05LTEwczMuOTMtOS41IDktMTB6bTIuMDMgMHY4Ljk5SDIyYy0uNDctNC43NC00LjI0LTguNTItOC45Ny04Ljk5em0wIDExLjAxVjIyYzQuNzQtLjQ3IDguNS00LjI1IDguOTctOC45OWgtOC45N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaWVDaGFydE91dGxpbmVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNSAyIDIgNi41IDIgMTJzNC41IDEwIDEwIDEwIDEwLTQuNSAxMC0xMFMxNy41IDIgMTIgMnptMSAyLjA3YzMuNjEuNDUgNi40OCAzLjMzIDYuOTMgNi45M0gxM1Y0LjA3ek00IDEyYzAtNC4wNiAzLjA3LTcuNDQgNy03LjkzdjE1Ljg3Yy0zLjkzLS41LTctMy44OC03LTcuOTR6bTkgNy45M1YxM2g2LjkzYy0uNDUgMy42MS0zLjMyIDYuNDgtNi45MyA2LjkzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFB1Ymxpc2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgNHYyaDE0VjRINXptMCAxMGg0djZoNnYtNmg0bC03LTctNyA3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNob3J0VGV4dCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCA5aDE2djJINHptMCA0aDEwdjJINHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTaG93Q2hhcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMuNSAxOC40OWw2LTYuMDEgNCA0TDIyIDYuOTJsLTEuNDEtMS40MS03LjA5IDcuOTctNC00TDIgMTYuOTl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3BhY2VCYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDl2NEg2VjlINHY2aDE2Vjl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RyaWtldGhyb3VnaFMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcuMjQgOC43NWMtLjI2LS40OC0uMzktMS4wMy0uMzktMS42NyAwLS42MS4xMy0xLjE2LjQtMS42Ny4yNi0uNS42My0uOTMgMS4xMS0xLjI5LjQ4LS4zNSAxLjA1LS42MyAxLjctLjgzLjY2LS4xOSAxLjM5LS4yOSAyLjE4LS4yOS44MSAwIDEuNTQuMTEgMi4yMS4zNC42Ni4yMiAxLjIzLjU0IDEuNjkuOTQuNDcuNC44My44OCAxLjA4IDEuNDMuMjUuNTUuMzggMS4xNS4zOCAxLjgxaC0zLjAxYzAtLjMxLS4wNS0uNTktLjE1LS44NS0uMDktLjI3LS4yNC0uNDktLjQ0LS42OC0uMi0uMTktLjQ1LS4zMy0uNzUtLjQ0LS4zLS4xLS42Ni0uMTYtMS4wNi0uMTYtLjM5IDAtLjc0LjA0LTEuMDMuMTMtLjI5LjA5LS41My4yMS0uNzIuMzYtLjE5LjE2LS4zNC4zNC0uNDQuNTUtLjEuMjEtLjE1LjQzLS4xNS42NiAwIC40OC4yNS44OC43NCAxLjIxLjM4LjI1Ljc3LjQ4IDEuNDEuN0g3LjM5Yy0uMDUtLjA4LS4xMS0uMTctLjE1LS4yNXpNMjEgMTJ2LTJIM3YyaDkuNjJjLjE4LjA3LjQuMTQuNTUuMi4zNy4xNy42Ni4zNC44Ny41MS4yMS4xNy4zNS4zNi40My41Ny4wNy4yLjExLjQzLjExLjY5IDAgLjIzLS4wNS40NS0uMTQuNjYtLjA5LjItLjIzLjM4LS40Mi41My0uMTkuMTUtLjQyLjI2LS43MS4zNS0uMjkuMDgtLjYzLjEzLTEuMDEuMTMtLjQzIDAtLjgzLS4wNC0xLjE4LS4xM3MtLjY2LS4yMy0uOTEtLjQyYy0uMjUtLjE5LS40NS0uNDQtLjU5LS43NS0uMTQtLjMxLS4yNS0uNzYtLjI1LTEuMjFINi40YzAgLjU1LjA4IDEuMTMuMjQgMS41OC4xNi40NS4zNy44NS42NSAxLjIxLjI4LjM1LjYuNjYuOTguOTIuMzcuMjYuNzguNDggMS4yMi42NS40NC4xNy45LjMgMS4zOC4zOS40OC4wOC45Ni4xMyAxLjQ0LjEzLjggMCAxLjUzLS4wOSAyLjE4LS4yOHMxLjIxLS40NSAxLjY3LS43OWMuNDYtLjM0LjgyLS43NyAxLjA3LTEuMjdzLjM4LTEuMDcuMzgtMS43MWMwLS42LS4xLTEuMTQtLjMxLTEuNjEtLjA1LS4xMS0uMTEtLjIzLS4xNy0uMzNIMjF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGV4dEZpZWxkcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMi41IDR2M2g1djEyaDNWN2g1VjRoLTEzem0xOSA1aC05djNoM3Y3aDN2LTdoM1Y5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRpdGxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01IDR2M2g1LjV2MTJoM1Y3SDE5VjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmVydGljYWxBbGlnbkJvdHRvbSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYgMTNoLTNWM2gtMnYxMEg4bDQgNCA0LTR6TTQgMTl2MmgxNnYtMkg0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZlcnRpY2FsQWxpZ25DZW50ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTggMTloM3Y0aDJ2LTRoM2wtNC00LTQgNHptOC0xNGgtM1YxaC0ydjRIOGw0IDQgNC00ek00IDExdjJoMTZ2LTJINHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWZXJ0aWNhbEFsaWduVG9wIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04IDExaDN2MTBoMlYxMWgzbC00LTQtNCA0ek00IDN2MmgxNlYzSDR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV3JhcFRleHQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTloNnYtMkg0djJ6TTIwIDVINHYyaDE2VjV6bS0zIDZINHYyaDEzLjI1YzEuMSAwIDIgLjkgMiAycy0uOSAyLTIgMkgxNXYtMmwtMyAzIDMgM3YtMmgyYzIuMjEgMCA0LTEuNzkgNC00cy0xLjc5LTQtNC00elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEF0dGFjaG1lbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIgMTIuNUMyIDkuNDYgNC40NiA3IDcuNSA3SDE4YzIuMjEgMCA0IDEuNzkgNCA0cy0xLjc5IDQtNCA0SDkuNUM4LjEyIDE1IDcgMTMuODggNyAxMi41UzguMTIgMTAgOS41IDEwSDE3djJIOS40MWMtLjU1IDAtLjU1IDEgMCAxSDE4YzEuMSAwIDItLjkgMi0ycy0uOS0yLTItMkg3LjVDNS41NyA5IDQgMTAuNTcgNCAxMi41UzUuNTcgMTYgNy41IDE2SDE3djJINy41QzQuNDYgMTggMiAxNS41NCAyIDEyLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2xvdWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjM1IDEwLjA0QzE4LjY3IDYuNTkgMTUuNjQgNCAxMiA0IDkuMTEgNCA2LjYgNS42NCA1LjM1IDguMDQgMi4zNCA4LjM2IDAgMTAuOTEgMCAxNGMwIDMuMzEgMi42OSA2IDYgNmgxM2MyLjc2IDAgNS0yLjI0IDUtNSAwLTIuNjQtMi4wNS00Ljc4LTQuNjUtNC45NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDbG91ZENpcmNsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptNC41IDE0SDhjLTEuNjYgMC0zLTEuMzQtMy0zczEuMzQtMyAzLTNsLjE0LjAxQzguNTggOC4yOCAxMC4xMyA3IDEyIDdjMi4yMSAwIDQgMS43OSA0IDRoLjVjMS4zOCAwIDIuNSAxLjEyIDIuNSAyLjVTMTcuODggMTYgMTYuNSAxNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDbG91ZERvbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjM1IDEwLjA0QzE4LjY3IDYuNTkgMTUuNjQgNCAxMiA0IDkuMTEgNCA2LjYgNS42NCA1LjM1IDguMDQgMi4zNCA4LjM2IDAgMTAuOTEgMCAxNGMwIDMuMzEgMi42OSA2IDYgNmgxM2MyLjc2IDAgNS0yLjI0IDUtNSAwLTIuNjQtMi4wNS00Ljc4LTQuNjUtNC45NnpNMTAgMTdsLTMuNS0zLjUgMS40MS0xLjQxTDEwIDE0LjE3IDE1LjE4IDlsMS40MSAxLjQxTDEwIDE3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENsb3VkRG93bmxvYWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjM1IDEwLjA0QzE4LjY3IDYuNTkgMTUuNjQgNCAxMiA0IDkuMTEgNCA2LjYgNS42NCA1LjM1IDguMDQgMi4zNCA4LjM2IDAgMTAuOTEgMCAxNGMwIDMuMzEgMi42OSA2IDYgNmgxM2MyLjc2IDAgNS0yLjI0IDUtNSAwLTIuNjQtMi4wNS00Ljc4LTQuNjUtNC45NnpNMTcgMTNsLTUgNS01LTVoM1Y5aDR2NGgzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENsb3VkT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4zNSAxMC4wNEMxOC42NyA2LjU5IDE1LjY0IDQgMTIgNGMtMS40OCAwLTIuODUuNDMtNC4wMSAxLjE3bDEuNDYgMS40NkMxMC4yMSA2LjIzIDExLjA4IDYgMTIgNmMzLjA0IDAgNS41IDIuNDYgNS41IDUuNXYuNUgxOWMxLjY2IDAgMyAxLjM0IDMgMyAwIDEuMTMtLjY0IDIuMTEtMS41NiAyLjYybDEuNDUgMS40NUMyMy4xNiAxOC4xNiAyNCAxNi42OCAyNCAxNWMwLTIuNjQtMi4wNS00Ljc4LTQuNjUtNC45NnpNMyA1LjI3bDIuNzUgMi43NEMyLjU2IDguMTUgMCAxMC43NyAwIDE0YzAgMy4zMSAyLjY5IDYgNiA2aDExLjczbDIgMkwyMSAyMC43MyA0LjI3IDQgMyA1LjI3ek03LjczIDEwbDggOEg2Yy0yLjIxIDAtNC0xLjc5LTQtNHMxLjc5LTQgNC00aDEuNzN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2xvdWRRdWV1ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuMzUgMTAuMDRDMTguNjcgNi41OSAxNS42NCA0IDEyIDQgOS4xMSA0IDYuNiA1LjY0IDUuMzUgOC4wNCAyLjM0IDguMzYgMCAxMC45MSAwIDE0YzAgMy4zMSAyLjY5IDYgNiA2aDEzYzIuNzYgMCA1LTIuMjQgNS01IDAtMi42NC0yLjA1LTQuNzgtNC42NS00Ljk2ek0xOSAxOEg2Yy0yLjIxIDAtNC0xLjc5LTQtNHMxLjc5LTQgNC00aC43MUM3LjM3IDcuNjkgOS40OCA2IDEyIDZjMy4wNCAwIDUuNSAyLjQ2IDUuNSA1LjV2LjVIMTljMS42NiAwIDMgMS4zNCAzIDNzLTEuMzQgMy0zIDN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2xvdWRVcGxvYWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjM1IDEwLjA0QzE4LjY3IDYuNTkgMTUuNjQgNCAxMiA0IDkuMTEgNCA2LjYgNS42NCA1LjM1IDguMDQgMi4zNCA4LjM2IDAgMTAuOTEgMCAxNGMwIDMuMzEgMi42OSA2IDYgNmgxM2MyLjc2IDAgNS0yLjI0IDUtNSAwLTIuNjQtMi4wNS00Ljc4LTQuNjUtNC45NnpNMTQgMTN2NGgtNHYtNEg3bDUtNSA1IDVoLTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ3JlYXRlTmV3Rm9sZGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2aC04bC0yLTJINGMtMS4xMSAwLTEuOTkuODktMS45OSAyTDIgMThjMCAxLjExLjg5IDIgMiAyaDE2YzEuMTEgMCAyLS44OSAyLTJWOGMwLTEuMTEtLjg5LTItMi0yem0tMSA4aC0zdjNoLTJ2LTNoLTN2LTJoM1Y5aDJ2M2gzdjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsZURvd25sb2FkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA5aC00VjNIOXY2SDVsNyA3IDctN3pNNSAxOHYyaDE0di0ySDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsZVVwbG9hZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxNmg2di02aDRsLTctNy03IDdoNHptLTQgMmgxNHYySDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9sZGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCA0SDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAxOGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjhjMC0xLjEtLjktMi0yLTJoLThsLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGb2xkZXJPcGVuIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2aC04bC0yLTJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWOGMwLTEuMS0uOS0yLTItMnptMCAxMkg0VjhoMTZ2MTB6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9sZGVyU2hhcmVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2aC04bC0yLTJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWOGMwLTEuMS0uOS0yLTItMnptLTUgM2MxLjEgMCAyIC45IDIgMnMtLjkgMi0yIDItMi0uOS0yLTIgLjktMiAyLTJ6bTQgOGgtOHYtMWMwLTEuMzMgMi42Ny0yIDQtMnM0IC42NyA0IDJ2MXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYXN0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzSDNjLTEuMSAwLTIgLjktMiAydjNoMlY1aDE4djE0aC03djJoN2MxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yek0xIDE4djNoM2MwLTEuNjYtMS4zNC0zLTMtM3ptMC00djJjMi43NiAwIDUgMi4yNCA1IDVoMmMwLTMuODctMy4xMy03LTctN3ptMC00djJjNC45NyAwIDkgNC4wMyA5IDloMmMwLTYuMDgtNC45My0xMS0xMS0xMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYXN0Q29ubmVjdGVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xIDE4djNoM2MwLTEuNjYtMS4zNC0zLTMtM3ptMC00djJjMi43NiAwIDUgMi4yNCA1IDVoMmMwLTMuODctMy4xMy03LTctN3ptMTgtN0g1djEuNjNjMy45NiAxLjI4IDcuMDkgNC40MSA4LjM3IDguMzdIMTlWN3pNMSAxMHYyYzQuOTcgMCA5IDQuMDMgOSA5aDJjMC02LjA4LTQuOTMtMTEtMTEtMTF6bTIwLTdIM2MtMS4xIDAtMiAuOS0yIDJ2M2gyVjVoMTh2MTRoLTd2Mmg3YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ29tcHV0ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDE4YzEuMSAwIDEuOTktLjkgMS45OS0yTDIyIDZjMC0xLjEtLjktMi0yLTJINGMtMS4xIDAtMiAuOS0yIDJ2MTBjMCAxLjEuOSAyIDIgMkgwdjJoMjR2LTJoLTR6TTQgNmgxNnYxMEg0VjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGVza3RvcE1hYyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgMkgzYy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDdsLTIgM3YxaDh2LTFsLTItM2g3YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bTAgMTJIM1Y0aDE4djEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERlc2t0b3BXaW5kb3dzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAySDNjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoN3YySDh2Mmg4di0yaC0ydi0yaDdjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptMCAxNEgzVjRoMTh2MTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGV2ZWxvcGVyQm9hcmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDlWN2gtMlY1YzAtMS4xLS45LTItMi0ySDRjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJ2LTJoMnYtMmgtMnYtMmgydi0yaC0yVjloMnptLTQgMTBINFY1aDE0djE0ek02IDEzaDV2NEg2em02LTZoNHYzaC00ek02IDdoNXY1SDZ6bTYgNGg0djZoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGV2aWNlSHViIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyAxNmwtNC00VjguODJDMTQuMTYgOC40IDE1IDcuMyAxNSA2YzAtMS42Ni0xLjM0LTMtMy0zUzkgNC4zNCA5IDZjMCAxLjMuODQgMi40IDIgMi44MlYxMmwtNCA0SDN2NWg1di0zLjA1bDQtNC4yIDQgNC4yVjIxaDV2LTVoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGV2aWNlc090aGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDZoMThWNEgzYy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDR2LTJIM1Y2em0xMCA2SDl2MS43OGMtLjYxLjU1LTEgMS4zMy0xIDIuMjJzLjM5IDEuNjcgMSAyLjIyVjIwaDR2LTEuNzhjLjYxLS41NSAxLTEuMzQgMS0yLjIycy0uMzktMS42Ny0xLTIuMjJWMTJ6bS0yIDUuNWMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6TTIyIDhoLTZjLS41IDAtMSAuNS0xIDF2MTBjMCAuNS41IDEgMSAxaDZjLjUgMCAxLS41IDEtMVY5YzAtLjUtLjUtMS0xLTF6bS0xIDEwaC00di04aDR2OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREb2NrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04IDIzaDh2LTJIOHYyem04LTIxLjk5TDggMWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmg4YzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMS45OS0yLTEuOTl6TTE2IDE1SDhWNWg4djEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdhbWVwYWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1IDcuNVYySDl2NS41bDMgMyAzLTN6TTcuNSA5SDJ2Nmg1LjVsMy0zLTMtM3pNOSAxNi41VjIyaDZ2LTUuNWwtMy0zLTMgM3pNMTYuNSA5bC0zIDMgMyAzSDIyVjloLTUuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIZWFkc2V0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxYy00Ljk3IDAtOSA0LjAzLTkgOXY3YzAgMS42NiAxLjM0IDMgMyAzaDN2LThINXYtMmMwLTMuODcgMy4xMy03IDctN3M3IDMuMTMgNyA3djJoLTR2OGgzYzEuNjYgMCAzLTEuMzQgMy0zdi03YzAtNC45Ny00LjAzLTktOS05elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhlYWRzZXRNaWMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDFjLTQuOTcgMC05IDQuMDMtOSA5djdjMCAxLjY2IDEuMzQgMyAzIDNoM3YtOEg1di0yYzAtMy44NyAzLjEzLTcgNy03czcgMy4xMyA3IDd2MmgtNHY4aDR2MWgtN3YyaDZjMS42NiAwIDMtMS4zNCAzLTNWMTBjMC00Ljk3LTQuMDMtOS05LTl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kS2V5Ym9hcmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDVINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE3YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWN2MwLTEuMS0uOS0yLTItMnptLTkgM2gydjJoLTJWOHptMCAzaDJ2MmgtMnYtMnpNOCA4aDJ2Mkg4Vjh6bTAgM2gydjJIOHYtMnptLTEgMkg1di0yaDJ2MnptMC0zSDVWOGgydjJ6bTkgN0g4di0yaDh2MnptMC00aC0ydi0yaDJ2MnptMC0zaC0yVjhoMnYyem0zIDNoLTJ2LTJoMnYyem0wLTNoLTJWOGgydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kS2V5Ym9hcmRBcnJvd0Rvd24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcuNDEgNy44NEwxMiAxMi40Mmw0LjU5LTQuNThMMTggOS4yNWwtNiA2LTYtNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRLZXlib2FyZEFycm93TGVmdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNDEgMTYuMDlsLTQuNTgtNC41OSA0LjU4LTQuNTlMMTQgNS41bC02IDYgNiA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEtleWJvYXJkQXJyb3dSaWdodCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC41OSAxNi4zNGw0LjU4LTQuNTktNC41OC00LjU5TDEwIDUuNzVsNiA2LTYgNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRLZXlib2FyZEFycm93VXAgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcuNDEgMTUuNDFMMTIgMTAuODNsNC41OSA0LjU4TDE4IDE0bC02LTYtNiA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEtleWJvYXJkQmFja3NwYWNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAxMUg2LjgzbDMuNTgtMy41OUw5IDZsLTYgNiA2IDYgMS40MS0xLjQxTDYuODMgMTNIMjF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kS2V5Ym9hcmRDYXBzbG9jayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgOC40MUwxNi41OSAxMyAxOCAxMS41OWwtNi02LTYgNkw3LjQxIDEzIDEyIDguNDF6TTYgMThoMTJ2LTJINnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEtleWJvYXJkSGlkZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgM0g0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMTVjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tOSAzaDJ2MmgtMlY2em0wIDNoMnYyaC0yVjl6TTggNmgydjJIOFY2em0wIDNoMnYySDhWOXptLTEgMkg1VjloMnYyem0wLTNINVY2aDJ2MnptOSA3SDh2LTJoOHYyem0wLTRoLTJWOWgydjJ6bTAtM2gtMlY2aDJ2MnptMyAzaC0yVjloMnYyem0wLTNoLTJWNmgydjJ6bS03IDE1bDQtNEg4bDQgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRLZXlib2FyZFJldHVybiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgN3Y0SDUuODNsMy41OC0zLjU5TDggNmwtNiA2IDYgNiAxLjQxLTEuNDFMNS44MyAxM0gyMVY3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEtleWJvYXJkVGFiIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS41OSA3LjQxTDE1LjE3IDExSDF2MmgxNC4xN2wtMy41OSAzLjU5TDEzIDE4bDYtNi02LTYtMS40MSAxLjQxek0yMCA2djEyaDJWNmgtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRLZXlib2FyZFZvaWNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxNWMxLjY2IDAgMi45OS0xLjM0IDIuOTktM0wxNSA2YzAtMS42Ni0xLjM0LTMtMy0zUzkgNC4zNCA5IDZ2NmMwIDEuNjYgMS4zNCAzIDMgM3ptNS4zLTNjMCAzLTIuNTQgNS4xLTUuMyA1LjFTNi43IDE1IDYuNyAxMkg1YzAgMy40MiAyLjcyIDYuMjMgNiA2LjcyVjIyaDJ2LTMuMjhjMy4yOC0uNDggNi0zLjMgNi02LjcyaC0xLjd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGFwdG9wIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxOGMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0ySDRjLTEuMSAwLTIgLjktMiAydjEwYzAgMS4xLjkgMiAyIDJIMHYyaDI0di0yaC00ek00IDZoMTZ2MTBINFY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExhcHRvcENocm9tZWJvb2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDE4VjNIMnYxNUgwdjJoMjR2LTJoLTJ6bS04IDBoLTR2LTFoNHYxem02LTNINFY1aDE2djEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExhcHRvcE1hYyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMThjMS4xIDAgMS45OS0uOSAxLjk5LTJMMjIgNWMwLTEuMS0uOS0yLTItMkg0Yy0xLjEgMC0yIC45LTIgMnYxMWMwIDEuMS45IDIgMiAySDBjMCAxLjEuOSAyIDIgMmgyMGMxLjEgMCAyLS45IDItMmgtNHpNNCA1aDE2djExSDRWNXptOCAxNGMtLjU1IDAtMS0uNDUtMS0xcy40NS0xIDEtMSAxIC40NSAxIDEtLjQ1IDEtMSAxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExhcHRvcFdpbmRvd3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDE4di0xYzEuMSAwIDEuOTktLjkgMS45OS0yTDIyIDVjMC0xLjEtLjktMi0yLTJINGMtMS4xIDAtMiAuOS0yIDJ2MTBjMCAxLjEuOSAyIDIgMnYxSDB2MmgyNHYtMmgtNHpNNCA1aDE2djEwSDRWNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNZW1vcnkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1IDlIOXY2aDZWOXptLTIgNGgtMnYtMmgydjJ6bTgtMlY5aC0yVjdjMC0xLjEtLjktMi0yLTJoLTJWM2gtMnYyaC0yVjNIOXYySDdjLTEuMSAwLTIgLjktMiAydjJIM3YyaDJ2MkgzdjJoMnYyYzAgMS4xLjkgMiAyIDJoMnYyaDJ2LTJoMnYyaDJ2LTJoMmMxLjEgMCAyLS45IDItMnYtMmgydi0yaC0ydi0yaDJ6bS00IDZIN1Y3aDEwdjEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1vdXNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyAxLjA3VjloN2MwLTQuMDgtMy4wNS03LjQ0LTctNy45M3pNNCAxNWMwIDQuNDIgMy41OCA4IDggOHM4LTMuNTggOC04di00SDR2NHptNy0xMy45M0M3LjA1IDEuNTYgNCA0LjkyIDQgOWg3VjEuMDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvbmVBbmRyb2lkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNiAxSDhDNi4zNCAxIDUgMi4zNCA1IDR2MTZjMCAxLjY2IDEuMzQgMyAzIDNoOGMxLjY2IDAgMy0xLjM0IDMtM1Y0YzAtMS42Ni0xLjM0LTMtMy0zem0tMiAyMGgtNHYtMWg0djF6bTMuMjUtM0g2Ljc1VjRoMTAuNXYxNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaG9uZUlwaG9uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNSAxaC04QzYuMTIgMSA1IDIuMTIgNSAzLjV2MTdDNSAyMS44OCA2LjEyIDIzIDcuNSAyM2g4YzEuMzggMCAyLjUtMS4xMiAyLjUtMi41di0xN0MxOCAyLjEyIDE2Ljg4IDEgMTUuNSAxem0tNCAyMWMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6bTQuNS00SDdWNGg5djE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob25lbGluayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCA2aDE4VjRINGMtMS4xIDAtMiAuOS0yIDJ2MTFIMHYzaDE0di0zSDRWNnptMTkgMmgtNmMtLjU1IDAtMSAuNDUtMSAxdjEwYzAgLjU1LjQ1IDEgMSAxaDZjLjU1IDAgMS0uNDUgMS0xVjljMC0uNTUtLjQ1LTEtMS0xem0tMSA5aC00di03aDR2N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaG9uZWxpbmtPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDZWNEg2LjgybDIgMkgyMnpNMS45MiAxLjY1TC42NSAyLjkybDEuODIgMS44MkMyLjE4IDUuMDggMiA1LjUyIDIgNnYxMUgwdjNoMTcuNzNsMi4zNSAyLjM1IDEuMjctMS4yN0wzLjg5IDMuNjIgMS45MiAxLjY1ek00IDYuMjdMMTQuNzMgMTdINFY2LjI3ek0yMyA4aC02Yy0uNTUgMC0xIC40NS0xIDF2NC4xOGwyIDJWMTBoNHY3aC0yLjE4bDMgM0gyM2MuNTUgMCAxLS40NSAxLTFWOWMwLS41NS0uNDUtMS0xLTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUG93ZXJJbnB1dCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMiA5djJoMTlWOUgyem0wIDZoNXYtMkgydjJ6bTcgMGg1di0ySDl2MnptNyAwaDV2LTJoLTV2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSb3V0ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwLjIgNS45bC44LS44QzE5LjYgMy43IDE3LjggMyAxNiAzcy0zLjYuNy01IDIuMWwuOC44QzEzIDQuOCAxNC41IDQuMiAxNiA0LjJzMyAuNiA0LjIgMS43em0tLjkuOGMtLjktLjktMi4xLTEuNC0zLjMtMS40cy0yLjQuNS0zLjMgMS40bC44LjhjLjctLjcgMS42LTEgMi41LTEgLjkgMCAxLjguMyAyLjUgMWwuOC0uOHpNMTkgMTNoLTJWOWgtMnY0SDVjLTEuMSAwLTIgLjktMiAydjRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMnYtNGMwLTEuMS0uOS0yLTItMnpNOCAxOEg2di0yaDJ2MnptMy41IDBoLTJ2LTJoMnYyem0zLjUgMGgtMnYtMmgydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2Nhbm5lciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuOCAxMC43TDQuMiA1bC0uNyAxLjlMMTcuNiAxMkg1Yy0xLjEgMC0yIC45LTIgMnY0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJ2LTUuNWMwLS44LS41LTEuNi0xLjItMS44ek03IDE3SDV2LTJoMnYyem0xMiAwSDl2LTJoMTB2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZWN1cml0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMUwzIDV2NmMwIDUuNTUgMy44NCAxMC43NCA5IDEyIDUuMTYtMS4yNiA5LTYuNDUgOS0xMlY1bC05LTR6bTAgMTAuOTloN2MtLjUzIDQuMTItMy4yOCA3Ljc5LTcgOC45NFYxMkg1VjYuM2w3LTMuMTF2OC44elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNpbUNhcmQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5Ljk5IDRjMC0xLjEtLjg5LTItMS45OS0yaC04TDQgOHYxMmMwIDEuMS45IDIgMiAyaDEyLjAxYzEuMSAwIDEuOTktLjkgMS45OS0ybC0uMDEtMTZ6TTkgMTlIN3YtMmgydjJ6bTggMGgtMnYtMmgydjJ6bS04LTRIN3YtNGgydjR6bTQgNGgtMnYtNGgydjR6bTAtNmgtMnYtMmgydjJ6bTQgMmgtMnYtNGgydjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU21hcnRwaG9uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgMS4wMUw3IDFjLTEuMSAwLTIgLjktMiAydjE4YzAgMS4xLjkgMiAyIDJoMTBjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0xLjk5LTItMS45OXpNMTcgMTlIN1Y1aDEwdjE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNwZWFrZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDJIN2MtMS4xIDAtMiAuOS0yIDJ2MTZjMCAxLjEuOSAxLjk5IDIgMS45OUwxNyAyMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tNSAyYzEuMSAwIDIgLjkgMiAycy0uOSAyLTIgMmMtMS4xMSAwLTItLjktMi0ycy44OS0yIDItMnptMCAxNmMtMi43NiAwLTUtMi4yNC01LTVzMi4yNC01IDUtNSA1IDIuMjQgNSA1LTIuMjQgNS01IDV6bTAtOGMtMS42NiAwLTMgMS4zNC0zIDNzMS4zNCAzIDMgMyAzLTEuMzQgMy0zLTEuMzQtMy0zLTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3BlYWtlckdyb3VwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC4yIDFIOS44QzguODEgMSA4IDEuODEgOCAyLjh2MTQuNGMwIC45OS44MSAxLjc5IDEuOCAxLjc5bDguNC4wMWMuOTkgMCAxLjgtLjgxIDEuOC0xLjhWMi44YzAtLjk5LS44MS0xLjgtMS44LTEuOHpNMTQgM2MxLjEgMCAyIC44OSAyIDJzLS45IDItMiAyLTItLjg5LTItMiAuOS0yIDItMnptMCAxMy41Yy0yLjIxIDAtNC0xLjc5LTQtNHMxLjc5LTQgNC00IDQgMS43OSA0IDQtMS43OSA0LTQgNHpcIn19LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE0XCIsXCJjeVwiOlwiMTIuNVwiLFwiclwiOlwiMi41XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiA1SDR2MTZjMCAxLjEuODkgMiAyIDJoMTB2LTJINlY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRhYmxldCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgNEgzYy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDEuOTktLjkgMS45OS0yTDIzIDZjMC0xLjEtLjktMi0yLTJ6bS0yIDE0SDVWNmgxNHYxMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUYWJsZXRBbmRyb2lkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCAwSDZDNC4zNCAwIDMgMS4zNCAzIDN2MThjMCAxLjY2IDEuMzQgMyAzIDNoMTJjMS42NiAwIDMtMS4zNCAzLTNWM2MwLTEuNjYtMS4zNC0zLTMtM3ptLTQgMjJoLTR2LTFoNHYxem01LjI1LTNINC43NVYzaDE0LjV2MTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGFibGV0TWFjIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC41IDBoLTE0QzMuMTIgMCAyIDEuMTIgMiAyLjV2MTlDMiAyMi44OCAzLjEyIDI0IDQuNSAyNGgxNGMxLjM4IDAgMi41LTEuMTIgMi41LTIuNXYtMTlDMjEgMS4xMiAxOS44OCAwIDE4LjUgMHptLTcgMjNjLS44MyAwLTEuNS0uNjctMS41LTEuNXMuNjctMS41IDEuNS0xLjUgMS41LjY3IDEuNSAxLjUtLjY3IDEuNS0xLjUgMS41em03LjUtNEg0VjNoMTV2MTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVG95cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTJjMC0zIDIuNS01LjUgNS41LTUuNVMyMyA5IDIzIDEySDEyem0wIDBjMCAzLTIuNSA1LjUtNS41IDUuNVMxIDE1IDEgMTJoMTF6bTAgMGMtMyAwLTUuNS0yLjUtNS41LTUuNVM5IDEgMTIgMXYxMXptMCAwYzMgMCA1LjUgMi41IDUuNSA1LjVTMTUgMjMgMTIgMjNWMTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmg1djJoOHYtMmg1YzEuMSAwIDEuOTktLjkgMS45OS0yTDIzIDVjMC0xLjEtLjktMi0yLTJ6bTAgMTRIM1Y1aDE4djEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZGVvZ2FtZUFzc2V0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSA2SDNjLTEuMSAwLTIgLjktMiAydjhjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY4YzAtMS4xLS45LTItMi0yem0tMTAgN0g4djNINnYtM0gzdi0yaDNWOGgydjNoM3Yyem00LjUgMmMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6bTQtM2MtLjgzIDAtMS41LS42Ny0xLjUtMS41UzE4LjY3IDkgMTkuNSA5czEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXYXRjaCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMTJjMC0yLjU0LTEuMTktNC44MS0zLjA0LTYuMjdMMTYgMEg4bC0uOTUgNS43M0M1LjE5IDcuMTkgNCA5LjQ1IDQgMTJzMS4xOSA0LjgxIDMuMDUgNi4yN0w4IDI0aDhsLjk2LTUuNzNDMTguODEgMTYuODEgMjAgMTQuNTQgMjAgMTJ6TTYgMTJjMC0zLjMxIDIuNjktNiA2LTZzNiAyLjY5IDYgNi0yLjY5IDYtNiA2LTYtMi42OS02LTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWRkQVBob3RvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDRWMWgydjNoM3YySDV2M0gzVjZIMFY0aDN6bTMgNlY3aDNWNGg3bDEuODMgMkgyMWMxLjEgMCAyIC45IDIgMnYxMmMwIDEuMS0uOSAyLTIgMkg1Yy0xLjEgMC0yLS45LTItMlYxMGgzem03IDljMi43NiAwIDUtMi4yNCA1LTVzLTIuMjQtNS01LTUtNSAyLjI0LTUgNSAyLjI0IDUgNSA1em0tMy4yLTVjMCAxLjc3IDEuNDMgMy4yIDMuMiAzLjJzMy4yLTEuNDMgMy4yLTMuMi0xLjQzLTMuMi0zLjItMy4yLTMuMiAxLjQzLTMuMiAzLjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWRkVG9QaG90b3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgNkgydjE0YzAgMS4xLjkgMiAyIDJoMTR2LTJINFY2em0xNi00SDhjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTEgOWgtNHY0aC0ydi00SDlWOWg0VjVoMnY0aDR2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBZGp1c3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OSAyIDIgNi40OSAyIDEyczQuNDkgMTAgMTAgMTAgMTAtNC40OSAxMC0xMFMxNy41MSAyIDEyIDJ6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4em0zLThjMCAxLjY2LTEuMzQgMy0zIDNzLTMtMS4zNC0zLTMgMS4zNC0zIDMtMyAzIDEuMzQgMyAzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFzc2lzdGFudCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgMkg1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDRsMyAzIDMtM2g0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS01LjEyIDEwLjg4TDEyIDE3bC0xLjg4LTQuMTJMNiAxMWw0LjEyLTEuODhMMTIgNWwxLjg4IDQuMTJMMTggMTFsLTQuMTIgMS44OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBc3Npc3RhbnRQaG90byAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuNCA2TDE0IDRINXYxN2gydi03aDUuNmwuNCAyaDdWNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBdWRpb3RyYWNrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAzdjkuMjhjLS40Ny0uMTctLjk3LS4yOC0xLjUtLjI4QzguMDEgMTIgNiAxNC4wMSA2IDE2LjVTOC4wMSAyMSAxMC41IDIxYzIuMzEgMCA0LjItMS43NSA0LjQ1LTRIMTVWNmg0VjNoLTd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmx1ckNpcmN1bGFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCA5Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMS0uNDUtMS0xLTF6bTAgNGMtLjU1IDAtMSAuNDUtMSAxcy40NSAxIDEgMSAxLS40NSAxLTEtLjQ1LTEtMS0xek03IDkuNWMtLjI4IDAtLjUuMjItLjUuNXMuMjIuNS41LjUuNS0uMjIuNS0uNS0uMjItLjUtLjUtLjV6bTMgN2MtLjI4IDAtLjUuMjItLjUuNXMuMjIuNS41LjUuNS0uMjIuNS0uNS0uMjItLjUtLjUtLjV6bS0zLTNjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41em0zLTZjLjI4IDAgLjUtLjIyLjUtLjVzLS4yMi0uNS0uNS0uNS0uNS4yMi0uNS41LjIyLjUuNS41ek0xNCA5Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMS0uNDUtMS0xLTF6bTAtMS41Yy4yOCAwIC41LS4yMi41LS41cy0uMjItLjUtLjUtLjUtLjUuMjItLjUuNS4yMi41LjUuNXptMyA2Yy0uMjggMC0uNS4yMi0uNS41cy4yMi41LjUuNS41LS4yMi41LS41LS4yMi0uNS0uNS0uNXptMC00Yy0uMjggMC0uNS4yMi0uNS41cy4yMi41LjUuNS41LS4yMi41LS41LS4yMi0uNS0uNS0uNXpNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptMCAxOGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6bTItMy41Yy0uMjggMC0uNS4yMi0uNS41cy4yMi41LjUuNS41LS4yMi41LS41LS4yMi0uNS0uNS0uNXptMC0zLjVjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCbHVyTGluZWFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01IDE3LjVjLjgzIDAgMS41LS42NyAxLjUtMS41cy0uNjctMS41LTEuNS0xLjUtMS41LjY3LTEuNSAxLjUuNjcgMS41IDEuNSAxLjV6TTkgMTNjLjU1IDAgMS0uNDUgMS0xcy0uNDUtMS0xLTEtMSAuNDUtMSAxIC40NSAxIDEgMXptMC00Yy41NSAwIDEtLjQ1IDEtMXMtLjQ1LTEtMS0xLTEgLjQ1LTEgMSAuNDUgMSAxIDF6TTMgMjFoMTh2LTJIM3Yyek01IDkuNWMuODMgMCAxLjUtLjY3IDEuNS0xLjVTNS44MyA2LjUgNSA2LjUgMy41IDcuMTcgMy41IDggNC4xNyA5LjUgNSA5LjV6bTAgNGMuODMgMCAxLjUtLjY3IDEuNS0xLjVzLS42Ny0xLjUtMS41LTEuNS0xLjUuNjctMS41IDEuNS42NyAxLjUgMS41IDEuNXpNOSAxN2MuNTUgMCAxLS40NSAxLTFzLS40NS0xLTEtMS0xIC40NS0xIDEgLjQ1IDEgMSAxem04LS41Yy4yOCAwIC41LS4yMi41LS41cy0uMjItLjUtLjUtLjUtLjUuMjItLjUuNS4yMi41LjUuNXpNMyAzdjJoMThWM0gzem0xNCA1LjVjLjI4IDAgLjUtLjIyLjUtLjVzLS4yMi0uNS0uNS0uNS0uNS4yMi0uNS41LjIyLjUuNS41em0wIDRjLjI4IDAgLjUtLjIyLjUtLjVzLS4yMi0uNS0uNS0uNS0uNS4yMi0uNS41LjIyLjUuNS41ek0xMyA5Yy41NSAwIDEtLjQ1IDEtMXMtLjQ1LTEtMS0xLTEgLjQ1LTEgMSAuNDUgMSAxIDF6bTAgNGMuNTUgMCAxLS40NSAxLTFzLS40NS0xLTEtMS0xIC40NS0xIDEgLjQ1IDEgMSAxem0wIDRjLjU1IDAgMS0uNDUgMS0xcy0uNDUtMS0xLTEtMSAuNDUtMSAxIC40NSAxIDEgMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCbHVyT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNCA3Yy41NSAwIDEtLjQ1IDEtMXMtLjQ1LTEtMS0xLTEgLjQ1LTEgMSAuNDUgMSAxIDF6bS0uMiA0LjQ4bC4yLjAyYy44MyAwIDEuNS0uNjcgMS41LTEuNXMtLjY3LTEuNS0xLjUtMS41LTEuNS42Ny0xLjUgMS41bC4wMi4yYy4wOS42Ny42MSAxLjE5IDEuMjggMS4yOHpNMTQgMy41Yy4yOCAwIC41LS4yMi41LS41cy0uMjItLjUtLjUtLjUtLjUuMjItLjUuNS4yMi41LjUuNXptLTQgMGMuMjggMCAuNS0uMjIuNS0uNXMtLjIyLS41LS41LS41LS41LjIyLS41LjUuMjIuNS41LjV6bTExIDdjLjI4IDAgLjUtLjIyLjUtLjVzLS4yMi0uNS0uNS0uNS0uNS4yMi0uNS41LjIyLjUuNS41ek0xMCA3Yy41NSAwIDEtLjQ1IDEtMXMtLjQ1LTEtMS0xLTEgLjQ1LTEgMSAuNDUgMSAxIDF6bTggOGMuNTUgMCAxLS40NSAxLTFzLS40NS0xLTEtMS0xIC40NS0xIDEgLjQ1IDEgMSAxem0wLTRjLjU1IDAgMS0uNDUgMS0xcy0uNDUtMS0xLTEtMSAuNDUtMSAxIC40NSAxIDEgMXptMC00Yy41NSAwIDEtLjQ1IDEtMXMtLjQ1LTEtMS0xLTEgLjQ1LTEgMSAuNDUgMSAxIDF6bS00IDEzLjVjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41ek0yLjUgNS4yN2wzLjc4IDMuNzhMNiA5Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMWMwLS4xLS4wMy0uMTktLjA2LS4yOGwyLjgxIDIuODFjLS43MS4xMS0xLjI1LjczLTEuMjUgMS40NyAwIC44My42NyAxLjUgMS41IDEuNS43NCAwIDEuMzYtLjU0IDEuNDctMS4yNWwyLjgxIDIuODFjLS4wOS0uMDMtLjE4LS4wNi0uMjgtLjA2LS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xYzAtLjEtLjAzLS4xOS0uMDYtLjI4bDMuNzggMy43OEwyMCAyMC4yMyAzLjc3IDQgMi41IDUuMjd6TTEwIDE3Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMS0uNDUtMS0xLTF6bTExLTMuNWMtLjI4IDAtLjUuMjItLjUuNXMuMjIuNS41LjUuNS0uMjIuNS0uNS0uMjItLjUtLjUtLjV6TTYgMTNjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXpNMyA5LjVjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41em03IDExYy0uMjggMC0uNS4yMi0uNS41cy4yMi41LjUuNS41LS4yMi41LS41LS4yMi0uNS0uNS0uNXpNNiAxN2MtLjU1IDAtMSAuNDUtMSAxcy40NSAxIDEgMSAxLS40NSAxLTEtLjQ1LTEtMS0xem0tMy0zLjVjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJsdXJPbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiAxM2MtLjU1IDAtMSAuNDUtMSAxcy40NSAxIDEgMSAxLS40NSAxLTEtLjQ1LTEtMS0xem0wIDRjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXptMC04Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMS0uNDUtMS0xLTF6bS0zIC41Yy0uMjggMC0uNS4yMi0uNS41cy4yMi41LjUuNS41LS4yMi41LS41LS4yMi0uNS0uNS0uNXpNNiA1Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMS0uNDUtMS0xLTF6bTE1IDUuNWMuMjggMCAuNS0uMjIuNS0uNXMtLjIyLS41LS41LS41LS41LjIyLS41LjUuMjIuNS41LjV6TTE0IDdjLjU1IDAgMS0uNDUgMS0xcy0uNDUtMS0xLTEtMSAuNDUtMSAxIC40NSAxIDEgMXptMC0zLjVjLjI4IDAgLjUtLjIyLjUtLjVzLS4yMi0uNS0uNS0uNS0uNS4yMi0uNS41LjIyLjUuNS41em0tMTEgMTBjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41em03IDdjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41em0wLTE3Yy4yOCAwIC41LS4yMi41LS41cy0uMjItLjUtLjUtLjUtLjUuMjItLjUuNS4yMi41LjUuNXpNMTAgN2MuNTUgMCAxLS40NSAxLTFzLS40NS0xLTEtMS0xIC40NS0xIDEgLjQ1IDEgMSAxem0wIDUuNWMtLjgzIDAtMS41LjY3LTEuNSAxLjVzLjY3IDEuNSAxLjUgMS41IDEuNS0uNjcgMS41LTEuNS0uNjctMS41LTEuNS0xLjV6bTggLjVjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXptMCA0Yy0uNTUgMC0xIC40NS0xIDFzLjQ1IDEgMSAxIDEtLjQ1IDEtMS0uNDUtMS0xLTF6bTAtOGMtLjU1IDAtMSAuNDUtMSAxcy40NSAxIDEgMSAxLS40NSAxLTEtLjQ1LTEtMS0xem0wLTRjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXptMyA4LjVjLS4yOCAwLS41LjIyLS41LjVzLjIyLjUuNS41LjUtLjIyLjUtLjUtLjIyLS41LS41LS41ek0xNCAxN2MtLjU1IDAtMSAuNDUtMSAxcy40NSAxIDEgMSAxLS40NSAxLTEtLjQ1LTEtMS0xem0wIDMuNWMtLjI4IDAtLjUuMjItLjUuNXMuMjIuNS41LjUuNS0uMjIuNS0uNS0uMjItLjUtLjUtLjV6bS00LTEyYy0uODMgMC0xLjUuNjctMS41IDEuNXMuNjcgMS41IDEuNSAxLjUgMS41LS42NyAxLjUtMS41LS42Ny0xLjUtMS41LTEuNXptMCA4LjVjLS41NSAwLTEgLjQ1LTEgMXMuNDUgMSAxIDEgMS0uNDUgMS0xLS40NS0xLTEtMXptNC00LjVjLS44MyAwLTEuNS42Ny0xLjUgMS41cy42NyAxLjUgMS41IDEuNSAxLjUtLjY3IDEuNS0xLjUtLjY3LTEuNS0xLjUtMS41em0wLTRjLS44MyAwLTEuNS42Ny0xLjUgMS41cy42NyAxLjUgMS41IDEuNSAxLjUtLjY3IDEuNS0xLjUtLjY3LTEuNS0xLjUtMS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJyaWdodG5lc3MxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjEwXCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnJpZ2h0bmVzczIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDJjLTEuODIgMC0zLjUzLjUtNSAxLjM1QzcuOTkgNS4wOCAxMCA4LjMgMTAgMTJzLTIuMDEgNi45Mi01IDguNjVDNi40NyAyMS41IDguMTggMjIgMTAgMjJjNS41MiAwIDEwLTQuNDggMTAtMTBTMTUuNTIgMiAxMCAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJyaWdodG5lc3MzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05IDJjLTEuMDUgMC0yLjA1LjE2LTMgLjQ2IDQuMDYgMS4yNyA3IDUuMDYgNyA5LjU0IDAgNC40OC0yLjk0IDguMjctNyA5LjU0Ljk1LjMgMS45NS40NiAzIC40NiA1LjUyIDAgMTAtNC40OCAxMC0xMFMxNC41MiAyIDkgMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCcmlnaHRuZXNzNCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgOC42OVY0aC00LjY5TDEyIC42OSA4LjY5IDRINHY0LjY5TC42OSAxMiA0IDE1LjMxVjIwaDQuNjlMMTIgMjMuMzEgMTUuMzEgMjBIMjB2LTQuNjlMMjMuMzEgMTIgMjAgOC42OXpNMTIgMThjLS44OSAwLTEuNzQtLjItMi41LS41NUMxMS41NiAxNi41IDEzIDE0LjQyIDEzIDEycy0xLjQ0LTQuNS0zLjUtNS40NUMxMC4yNiA2LjIgMTEuMTEgNiAxMiA2YzMuMzEgMCA2IDIuNjkgNiA2cy0yLjY5IDYtNiA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJyaWdodG5lc3M1IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxNS4zMUwyMy4zMSAxMiAyMCA4LjY5VjRoLTQuNjlMMTIgLjY5IDguNjkgNEg0djQuNjlMLjY5IDEyIDQgMTUuMzFWMjBoNC42OUwxMiAyMy4zMSAxNS4zMSAyMEgyMHYtNC42OXpNMTIgMThjLTMuMzEgMC02LTIuNjktNi02czIuNjktNiA2LTYgNiAyLjY5IDYgNi0yLjY5IDYtNiA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJyaWdodG5lc3M2IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxNS4zMUwyMy4zMSAxMiAyMCA4LjY5VjRoLTQuNjlMMTIgLjY5IDguNjkgNEg0djQuNjlMLjY5IDEyIDQgMTUuMzFWMjBoNC42OUwxMiAyMy4zMSAxNS4zMSAyMEgyMHYtNC42OXpNMTIgMThWNmMzLjMxIDAgNiAyLjY5IDYgNnMtMi42OSA2LTYgNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCcmlnaHRuZXNzNyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgOC42OVY0aC00LjY5TDEyIC42OSA4LjY5IDRINHY0LjY5TC42OSAxMiA0IDE1LjMxVjIwaDQuNjlMMTIgMjMuMzEgMTUuMzEgMjBIMjB2LTQuNjlMMjMuMzEgMTIgMjAgOC42OXpNMTIgMThjLTMuMzEgMC02LTIuNjktNi02czIuNjktNiA2LTYgNiAyLjY5IDYgNi0yLjY5IDYtNiA2em0wLTEwYy0yLjIxIDAtNCAxLjc5LTQgNHMxLjc5IDQgNCA0IDQtMS43OSA0LTQtMS43OS00LTQtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCcm9rZW5JbWFnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgNXY2LjU5bC0zLTMuMDEtNCA0LjAxLTQtNC00IDQtMy0zLjAxVjVjMC0xLjEuOS0yIDItMmgxNGMxLjEgMCAyIC45IDIgMnptLTMgNi40MmwzIDMuMDFWMTljMCAxLjEtLjkgMi0yIDJINWMtMS4xIDAtMi0uOS0yLTJ2LTYuNThsMyAyLjk5IDQtNCA0IDQgNC0zLjk5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJydXNoIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDE0Yy0xLjY2IDAtMyAxLjM0LTMgMyAwIDEuMzEtMS4xNiAyLTIgMiAuOTIgMS4yMiAyLjQ5IDIgNCAyIDIuMjEgMCA0LTEuNzkgNC00IDAtMS42Ni0xLjM0LTMtMy0zem0xMy43MS05LjM3bC0xLjM0LTEuMzRjLS4zOS0uMzktMS4wMi0uMzktMS40MSAwTDkgMTIuMjUgMTEuNzUgMTVsOC45Ni04Ljk2Yy4zOS0uMzkuMzktMS4wMiAwLTEuNDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQnVyc3RNb2RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xIDVoMnYxNEgxem00IDBoMnYxNEg1em0xNyAwSDEwYy0uNTUgMC0xIC40NS0xIDF2MTJjMCAuNTUuNDUgMSAxIDFoMTJjLjU1IDAgMS0uNDUgMS0xVjZjMC0uNTUtLjQ1LTEtMS0xek0xMSAxN2wyLjUtMy4xNUwxNS4yOSAxNmwyLjUtMy4yMkwyMSAxN0gxMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYW1lcmEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkuNCAxMC41bDQuNzctOC4yNkMxMy40NyAyLjA5IDEyLjc1IDIgMTIgMmMtMi40IDAtNC42Ljg1LTYuMzIgMi4yNWwzLjY2IDYuMzUuMDYtLjF6TTIxLjU0IDljLS45Mi0yLjkyLTMuMTUtNS4yNi02LTYuMzRMMTEuODggOWg5LjY2em0uMjYgMWgtNy40OWwuMjkuNSA0Ljc2IDguMjVDMjEgMTYuOTcgMjIgMTQuNjEgMjIgMTJjMC0uNjktLjA3LTEuMzUtLjItMnpNOC41NCAxMmwtMy45LTYuNzVDMy4wMSA3LjAzIDIgOS4zOSAyIDEyYzAgLjY5LjA3IDEuMzUuMiAyaDcuNDlsLTEuMTUtMnptLTYuMDggM2MuOTIgMi45MiAzLjE1IDUuMjYgNiA2LjM0TDEyLjEyIDE1SDIuNDZ6bTExLjI3IDBsLTMuOSA2Ljc2Yy43LjE1IDEuNDIuMjQgMi4xNy4yNCAyLjQgMCA0LjYtLjg1IDYuMzItMi4yNWwtMy42Ni02LjM1LS45MyAxLjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FtZXJhQWx0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjMuMlwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgMkw3LjE3IDRINGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yaC0zLjE3TDE1IDJIOXptMyAxNWMtMi43NiAwLTUtMi4yNC01LTVzMi4yNC01IDUtNSA1IDIuMjQgNSA1LTIuMjQgNS01IDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FtZXJhRnJvbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDIwSDV2Mmg1djJsMy0zLTMtM3Yyem00IDB2Mmg1di0yaC01ek0xMiA4YzEuMSAwIDItLjkgMi0ycy0uOS0yLTItMi0xLjk5LjktMS45OSAyUzEwLjkgOCAxMiA4em01LThIN0M1LjkgMCA1IC45IDUgMnYxNGMwIDEuMS45IDIgMiAyaDEwYzEuMSAwIDItLjkgMi0yVjJjMC0xLjEtLjktMi0yLTJ6TTcgMmgxMHYxMC41YzAtMS42Ny0zLjMzLTIuNS01LTIuNXMtNSAuODMtNSAyLjVWMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYW1lcmFSZWFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCAyMEg1djJoNXYybDMtMy0zLTN2MnptNCAwdjJoNXYtMmgtNXptMy0yMEg3QzUuOSAwIDUgLjkgNSAydjE0YzAgMS4xLjkgMiAyIDJoMTBjMS4xIDAgMi0uOSAyLTJWMmMwLTEuMS0uOS0yLTItMnptLTUgNmMtMS4xMSAwLTItLjktMi0ycy44OS0yIDEuOTktMiAyIC45IDIgMkMxNCA1LjEgMTMuMSA2IDEyIDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FtZXJhUm9sbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgNWMwLTEuMS0uOS0yLTItMmgtMVYyYzAtLjU1LS40NS0xLTEtMUg2Yy0uNTUgMC0xIC40NS0xIDF2MUg0Yy0xLjEgMC0yIC45LTIgMnYxNWMwIDEuMS45IDIgMiAyaDhjMS4xIDAgMi0uOSAyLTJoOFY1aC04em0tMiAxM2gtMnYtMmgydjJ6bTAtOWgtMlY3aDJ2MnptNCA5aC0ydi0yaDJ2MnptMC05aC0yVjdoMnYyem00IDloLTJ2LTJoMnYyem0wLTloLTJWN2gydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2VudGVyRm9jdXNTdHJvbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDhjLTIuMjEgMC00IDEuNzktNCA0czEuNzkgNCA0IDQgNC0xLjc5IDQtNC0xLjc5LTQtNC00em0tNyA3SDN2NGMwIDEuMS45IDIgMiAyaDR2LTJINXYtNHpNNSA1aDRWM0g1Yy0xLjEgMC0yIC45LTIgMnY0aDJWNXptMTQtMmgtNHYyaDR2NGgyVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTZoLTR2Mmg0YzEuMSAwIDItLjkgMi0ydi00aC0ydjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2VudGVyRm9jdXNXZWFrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01IDE1SDN2NGMwIDEuMS45IDIgMiAyaDR2LTJINXYtNHpNNSA1aDRWM0g1Yy0xLjEgMC0yIC45LTIgMnY0aDJWNXptMTQtMmgtNHYyaDR2NGgyVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTZoLTR2Mmg0YzEuMSAwIDItLjkgMi0ydi00aC0ydjR6TTEyIDhjLTIuMjEgMC00IDEuNzktNCA0czEuNzkgNCA0IDQgNC0xLjc5IDQtNC0xLjc5LTQtNC00em0wIDZjLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENvbGxlY3Rpb25zIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiAxNlY0YzAtMS4xLS45LTItMi0ySDhjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJ6bS0xMS00bDIuMDMgMi43MUwxNiAxMWw0IDVIOGwzLTR6TTIgNnYxNGMwIDEuMS45IDIgMiAyaDE0di0ySDRWNkgyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENvbGxlY3Rpb25zQm9va21hcmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgNkgydjE0YzAgMS4xLjkgMiAyIDJoMTR2LTJINFY2em0xNi00SDhjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptMCAxMGwtMi41LTEuNUwxNSAxMlY0aDV2OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb2xvckxlbnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDNjLTQuOTcgMC05IDQuMDMtOSA5czQuMDMgOSA5IDljLjgzIDAgMS41LS42NyAxLjUtMS41IDAtLjM5LS4xNS0uNzQtLjM5LTEuMDEtLjIzLS4yNi0uMzgtLjYxLS4zOC0uOTkgMC0uODMuNjctMS41IDEuNS0xLjVIMTZjMi43NiAwIDUtMi4yNCA1LTUgMC00LjQyLTQuMDMtOC05LTh6bS01LjUgOWMtLjgzIDAtMS41LS42Ny0xLjUtMS41UzUuNjcgOSA2LjUgOSA4IDkuNjcgOCAxMC41IDcuMzMgMTIgNi41IDEyem0zLTRDOC42NyA4IDggNy4zMyA4IDYuNVM4LjY3IDUgOS41IDVzMS41LjY3IDEuNSAxLjVTMTAuMzMgOCA5LjUgOHptNSAwYy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTMTMuNjcgNSAxNC41IDVzMS41LjY3IDEuNSAxLjVTMTUuMzMgOCAxNC41IDh6bTMgNGMtLjgzIDAtMS41LS42Ny0xLjUtMS41UzE2LjY3IDkgMTcuNSA5czEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb2xvcml6ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNzEgNS42M2wtMi4zNC0yLjM0Yy0uMzktLjM5LTEuMDItLjM5LTEuNDEgMGwtMy4xMiAzLjEyLTEuOTMtMS45MS0xLjQxIDEuNDEgMS40MiAxLjQyTDMgMTYuMjVWMjFoNC43NWw4LjkyLTguOTIgMS40MiAxLjQyIDEuNDEtMS40MS0xLjkyLTEuOTIgMy4xMi0zLjEyYy40LS40LjQtMS4wMy4wMS0xLjQyek02LjkyIDE5TDUgMTcuMDhsOC4wNi04LjA2IDEuOTIgMS45Mkw2LjkyIDE5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENvbXBhcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDNINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmg1djJoMlYxaC0ydjJ6bTAgMTVINWw1LTZ2NnptOS0xNWgtNXYyaDV2MTNsLTUtNnY5aDVjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb250cm9sUG9pbnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDdoLTJ2NEg3djJoNHY0aDJ2LTRoNHYtMmgtNFY3em0tMS01QzYuNDkgMiAyIDYuNDkgMiAxMnM0LjQ5IDEwIDEwIDEwIDEwLTQuNDkgMTAtMTBTMTcuNTEgMiAxMiAyem0wIDE4Yy00LjQxIDAtOC0zLjU5LTgtOHMzLjU5LTggOC04IDggMy41OSA4IDgtMy41OSA4LTggOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb250cm9sUG9pbnREdXBsaWNhdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2IDhoLTJ2M2gtM3YyaDN2M2gydi0zaDN2LTJoLTN6TTIgMTJjMC0yLjc5IDEuNjQtNS4yIDQuMDEtNi4zMlYzLjUyQzIuNTIgNC43NiAwIDguMDkgMCAxMnMyLjUyIDcuMjQgNi4wMSA4LjQ4di0yLjE2QzMuNjQgMTcuMiAyIDE0Ljc5IDIgMTJ6bTEzLTljLTQuOTYgMC05IDQuMDQtOSA5czQuMDQgOSA5IDkgOS00LjA0IDktOS00LjA0LTktOS05em0wIDE2Yy0zLjg2IDAtNy0zLjE0LTctN3MzLjE0LTcgNy03IDcgMy4xNCA3IDctMy4xNCA3LTcgN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wMTY5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA2SDVjLTEuMSAwLTIgLjktMiAydjhjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY4YzAtMS4xLS45LTItMi0yem0wIDEwSDVWOGgxNHY4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENyb3AgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDE1aDJWN2MwLTEuMS0uOS0yLTItMkg5djJoOHY4ek03IDE3VjFINXY0SDF2Mmg0djEwYzAgMS4xLjkgMiAyIDJoMTB2NGgydi00aDR2LTJIN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wMzIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDRINWMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0wIDE0SDVWNmgxNHYxMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wNTQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDVINWMtMS4xIDAtMiAuOS0yIDJ2MTBjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY3YzAtMS4xLS45LTItMi0yem0wIDEySDVWN2gxNHYxMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wNzUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDdINWMtMS4xIDAtMiAuOS0yIDJ2NmMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjljMC0xLjEtLjktMi0yLTJ6bTAgOEg1VjloMTR2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wRGluIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkg1VjVoMTR2MTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ3JvcEZyZWUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgNXY0aDJWNWg0VjNINWMtMS4xIDAtMiAuOS0yIDJ6bTIgMTBIM3Y0YzAgMS4xLjkgMiAyIDJoNHYtMkg1di00em0xNCA0aC00djJoNGMxLjEgMCAyLS45IDItMnYtNGgtMnY0em0wLTE2aC00djJoNHY0aDJWNWMwLTEuMS0uOS0yLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wTGFuZHNjYXBlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA1SDVjLTEuMSAwLTIgLjktMiAydjEwYzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWN2MwLTEuMS0uOS0yLTItMnptMCAxMkg1VjdoMTR2MTB6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ3JvcE9yaWdpbmFsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkg1VjVoMTR2MTR6bS01LjA0LTYuNzFsLTIuNzUgMy41NC0xLjk2LTIuMzZMNi41IDE3aDExbC0zLjU0LTQuNzF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ3JvcFBvcnRyYWl0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyAzSDdjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTBjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkg3VjVoMTB2MTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ3JvcFJvdGF0ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy40NyAyMS40OUM0LjIgMTkuOTMgMS44NiAxNi43NiAxLjUgMTNIMGMuNTEgNi4xNiA1LjY2IDExIDExLjk1IDExIC4yMyAwIC40NC0uMDIuNjYtLjAzTDguOCAyMC4xNWwtMS4zMyAxLjM0ek0xMi4wNSAwYy0uMjMgMC0uNDQuMDItLjY2LjA0bDMuODEgMy44MSAxLjMzLTEuMzNDMTkuOCA0LjA3IDIyLjE0IDcuMjQgMjIuNSAxMUgyNGMtLjUxLTYuMTYtNS42Ni0xMS0xMS45NS0xMXpNMTYgMTRoMlY4YzAtMS4xMS0uOS0yLTItMmgtNnYyaDZ2NnptLTggMlY0SDZ2Mkg0djJoMnY4YzAgMS4xLjg5IDIgMiAyaDh2Mmgydi0yaDJ2LTJIOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDcm9wU3F1YXJlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCA0SDZjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNmMwLTEuMS0uOS0yLTItMnptMCAxNEg2VjZoMTJ2MTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGVoYXplIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yIDE1LjV2MmgyMHYtMkgyem0wLTV2MmgyMHYtMkgyem0wLTV2MmgyMHYtMkgyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERldGFpbHMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgNGw5IDE2IDktMTZIM3ptMy4zOCAyaDExLjI1TDEyIDE2IDYuMzggNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFZGl0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDE3LjI1VjIxaDMuNzVMMTcuODEgOS45NGwtMy43NS0zLjc1TDMgMTcuMjV6TTIwLjcxIDcuMDRjLjM5LS4zOS4zOS0xLjAyIDAtMS40MWwtMi4zNC0yLjM0Yy0uMzktLjM5LTEuMDItLjM5LTEuNDEgMGwtMS44MyAxLjgzIDMuNzUgMy43NSAxLjgzLTEuODN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXhwb3N1cmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1IDE3djJoMnYtMmgydi0yaC0ydi0yaC0ydjJoLTJ2Mmgyem01LTE1SDRjLTEuMSAwLTIgLjktMiAydjE2YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnpNNSA1aDZ2Mkg1VjV6bTE1IDE1SDRMMjAgNHYxNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFeHBvc3VyZU5lZzEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTF2Mmg4di0ySDR6bTE1IDdoLTJWNy4zOEwxNCA4LjRWNi43TDE4LjcgNWguM3YxM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFeHBvc3VyZU5lZzIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjA1IDE2LjI5bDIuODYtMy4wN2MuMzgtLjM5LjcyLS43OSAxLjA0LTEuMTguMzItLjM5LjU5LS43OC44Mi0xLjE3LjIzLS4zOS40MS0uNzguNTQtMS4xN3MuMTktLjc5LjE5LTEuMThjMC0uNTMtLjA5LTEuMDItLjI3LTEuNDYtLjE4LS40NC0uNDQtLjgxLS43OC0xLjExLS4zNC0uMzEtLjc3LS41NC0xLjI2LS43MS0uNTEtLjE2LTEuMDgtLjI0LTEuNzItLjI0LS42OSAwLTEuMzEuMTEtMS44NS4zMi0uNTQuMjEtMSAuNTEtMS4zNi44OC0uMzcuMzctLjY1LjgtLjg0IDEuMy0uMTguNDctLjI3Ljk3LS4yOCAxLjVoMi4xNGMuMDEtLjMxLjA1LS42LjEzLS44Ny4wOS0uMjkuMjMtLjU0LjQtLjc1LjE4LS4yMS40MS0uMzcuNjgtLjQ5LjI3LS4xMi42LS4xOC45Ni0uMTguMzEgMCAuNTguMDUuODEuMTUuMjMuMS40My4yNS41OS40My4xNi4xOC4yOC40LjM3LjY1LjA4LjI1LjEzLjUyLjEzLjgxIDAgLjIyLS4wMy40My0uMDguNjUtLjA2LjIyLS4xNS40NS0uMjkuNy0uMTQuMjUtLjMyLjUzLS41Ni44My0uMjMuMy0uNTIuNjUtLjg4IDEuMDNsLTQuMTcgNC41NVYxOEgyMXYtMS43MWgtNS45NXpNMiAxMXYyaDh2LTJIMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFeHBvc3VyZVBsdXMxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCA3SDh2NEg0djJoNHY0aDJ2LTRoNHYtMmgtNFY3em0xMCAxMWgtMlY3LjM4TDE1IDguNFY2LjdMMTkuNyA1aC4zdjEzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEV4cG9zdXJlUGx1czIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjA1IDE2LjI5bDIuODYtMy4wN2MuMzgtLjM5LjcyLS43OSAxLjA0LTEuMTguMzItLjM5LjU5LS43OC44Mi0xLjE3LjIzLS4zOS40MS0uNzguNTQtMS4xNy4xMy0uMzkuMTktLjc5LjE5LTEuMTggMC0uNTMtLjA5LTEuMDItLjI3LTEuNDYtLjE4LS40NC0uNDQtLjgxLS43OC0xLjExLS4zNC0uMzEtLjc3LS41NC0xLjI2LS43MS0uNTEtLjE2LTEuMDgtLjI0LTEuNzItLjI0LS42OSAwLTEuMzEuMTEtMS44NS4zMi0uNTQuMjEtMSAuNTEtMS4zNi44OC0uMzcuMzctLjY1LjgtLjg0IDEuMy0uMTguNDctLjI3Ljk3LS4yOCAxLjVoMi4xNGMuMDEtLjMxLjA1LS42LjEzLS44Ny4wOS0uMjkuMjMtLjU0LjQtLjc1LjE4LS4yMS40MS0uMzcuNjgtLjQ5LjI3LS4xMi42LS4xOC45Ni0uMTguMzEgMCAuNTguMDUuODEuMTUuMjMuMS40My4yNS41OS40My4xNi4xOC4yOC40LjM3LjY1LjA4LjI1LjEzLjUyLjEzLjgxIDAgLjIyLS4wMy40My0uMDguNjUtLjA2LjIyLS4xNS40NS0uMjkuNy0uMTQuMjUtLjMyLjUzLS41Ni44My0uMjMuMy0uNTIuNjUtLjg4IDEuMDNsLTQuMTcgNC41NVYxOEgyMnYtMS43MWgtNS45NXpNOCA3SDZ2NEgydjJoNHY0aDJ2LTRoNHYtMkg4Vjd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXhwb3N1cmVaZXJvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi4xNCAxMi41YzAgMS0uMSAxLjg1LS4zIDIuNTUtLjIuNy0uNDggMS4yNy0uODMgMS43LS4zNi40NC0uNzkuNzUtMS4zLjk1LS41MS4yLTEuMDcuMy0xLjcuMy0uNjIgMC0xLjE4LS4xLTEuNjktLjMtLjUxLS4yLS45NS0uNTEtMS4zMS0uOTUtLjM2LS40NC0uNjUtMS4wMS0uODUtMS43LS4yLS43LS4zLTEuNTUtLjMtMi41NXYtMi4wNGMwLTEgLjEtMS44NS4zLTIuNTUuMi0uNy40OC0xLjI2Ljg0LTEuNjkuMzYtLjQzLjgtLjc0IDEuMzEtLjkzQzEwLjgxIDUuMSAxMS4zOCA1IDEyIDVjLjYzIDAgMS4xOS4xIDEuNy4yOS41MS4xOS45NS41IDEuMzEuOTMuMzYuNDMuNjQuOTkuODQgMS42OS4yLjcuMyAxLjU0LjMgMi41NXYyLjA0em0tMi4xMS0yLjM2YzAtLjY0LS4wNS0xLjE4LS4xMy0xLjYyLS4wOS0uNDQtLjIyLS43OS0uNC0xLjA2LS4xNy0uMjctLjM5LS40Ni0uNjQtLjU4LS4yNS0uMTMtLjU0LS4xOS0uODYtLjE5LS4zMiAwLS42MS4wNi0uODYuMThzLS40Ny4zMS0uNjQuNThjLS4xNy4yNy0uMzEuNjItLjQgMS4wNnMtLjEzLjk4LS4xMyAxLjYydjIuNjdjMCAuNjQuMDUgMS4xOC4xNCAxLjYyLjA5LjQ1LjIzLjgxLjQgMS4wOXMuMzkuNDguNjQuNjEuNTQuMTkuODcuMTljLjMzIDAgLjYyLS4wNi44Ny0uMTlzLjQ2LS4zMy42My0uNjFjLjE3LS4yOC4zLS42NC4zOS0xLjA5LjA5LS40NS4xMy0uOTkuMTMtMS42MnYtMi42NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXIxIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDVIMXYxNmMwIDEuMS45IDIgMiAyaDE2di0ySDNWNXptMTEgMTBoMlY1aC00djJoMnY4em03LTE0SDdjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0yLTItMnptMCAxNkg3VjNoMTR2MTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsdGVyMiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTE4LTRIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDE2SDdWM2gxNHYxNHptLTQtNGgtNHYtMmgyYzEuMSAwIDItLjg5IDItMlY3YzAtMS4xMS0uOS0yLTItMmgtNHYyaDR2MmgtMmMtMS4xIDAtMiAuODktMiAydjRoNnYtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1Ljk2IDEwLjI5bC0yLjc1IDMuNTQtMS45Ni0yLjM2TDguNSAxNWgxMWwtMy41NC00Ljcxek0zIDVIMXYxNmMwIDEuMS45IDIgMiAyaDE2di0ySDNWNXptMTgtNEg3Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMi0yLTJ6bTAgMTZIN1YzaDE0djE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlcjMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDFIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDE2SDdWM2gxNHYxNHpNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTE0IDh2LTEuNWMwLS44My0uNjctMS41LTEuNS0xLjUuODMgMCAxLjUtLjY3IDEuNS0xLjVWN2MwLTEuMTEtLjktMi0yLTJoLTR2Mmg0djJoLTJ2MmgydjJoLTR2Mmg0YzEuMSAwIDItLjg5IDItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXI0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDVIMXYxNmMwIDEuMS45IDIgMiAyaDE2di0ySDNWNXptMTIgMTBoMlY1aC0ydjRoLTJWNWgtMnY2aDR2NHptNi0xNEg3Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMi0yLTJ6bTAgMTZIN1YzaDE0djE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlcjUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDFIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDE2SDdWM2gxNHYxNHpNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTE0IDh2LTJjMC0xLjExLS45LTItMi0yaC0yVjdoNFY1aC02djZoNHYyaC00djJoNGMxLjEgMCAyLS44OSAyLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsdGVyNiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTE4LTRIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDE2SDdWM2gxNHYxNHptLTgtMmgyYzEuMSAwIDItLjg5IDItMnYtMmMwLTEuMTEtLjktMi0yLTJoLTJWN2g0VjVoLTRjLTEuMSAwLTIgLjg5LTIgMnY2YzAgMS4xMS45IDIgMiAyem0wLTRoMnYyaC0ydi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlcjcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgNUgxdjE2YzAgMS4xLjkgMiAyIDJoMTZ2LTJIM1Y1em0xOC00SDdjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWM2MwLTEuMS0uOS0yLTItMnptMCAxNkg3VjNoMTR2MTR6bS04LTJsNC04VjVoLTZ2Mmg0bC00IDhoMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXI4IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDVIMXYxNmMwIDEuMS45IDIgMiAyaDE2di0ySDNWNXptMTgtNEg3Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMi0yLTJ6bTAgMTZIN1YzaDE0djE0em0tOC0yaDJjMS4xIDAgMi0uODkgMi0ydi0xLjVjMC0uODMtLjY3LTEuNS0xLjUtMS41LjgzIDAgMS41LS42NyAxLjUtMS41VjdjMC0xLjExLS45LTItMi0yaC0yYy0xLjEgMC0yIC44OS0yIDJ2MS41YzAgLjgzLjY3IDEuNSAxLjUgMS41LS44MyAwLTEuNS42Ny0xLjUgMS41VjEzYzAgMS4xMS45IDIgMiAyem0wLThoMnYyaC0yVjd6bTAgNGgydjJoLTJ2LTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsdGVyOSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTE4LTRIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDE2SDdWM2gxNHYxNHpNMTUgNWgtMmMtMS4xIDAtMiAuODktMiAydjJjMCAxLjExLjkgMiAyIDJoMnYyaC00djJoNGMxLjEgMCAyLS44OSAyLTJWN2MwLTEuMTEtLjktMi0yLTJ6bTAgNGgtMlY3aDJ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXI5UGx1cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTExIDdWOGMwLTEuMTEtLjktMi0yLTJoLTFjLTEuMSAwLTIgLjg5LTIgMnYxYzAgMS4xMS45IDIgMiAyaDF2MUg5djJoM2MxLjEgMCAyLS44OSAyLTJ6bS0zLTNWOGgxdjFoLTF6bTEwLThIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDhoLTJWN2gtMnYyaC0ydjJoMnYyaDJ2LTJoMnY2SDdWM2gxNHY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlckJBbmRXIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNmwtNy04djhINWw3LThWNWg3djE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlckNlbnRlckZvY3VzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01IDE1SDN2NGMwIDEuMS45IDIgMiAyaDR2LTJINXYtNHpNNSA1aDRWM0g1Yy0xLjEgMC0yIC45LTIgMnY0aDJWNXptMTQtMmgtNHYyaDR2NGgyVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTZoLTR2Mmg0YzEuMSAwIDItLjkgMi0ydi00aC0ydjR6TTEyIDljLTEuNjYgMC0zIDEuMzQtMyAzczEuMzQgMyAzIDMgMy0xLjM0IDMtMy0xLjM0LTMtMy0zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlckRyYW1hIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4zNSAxMC4wNEMxOC42NyA2LjU5IDE1LjY0IDQgMTIgNCA5LjExIDQgNi42MSA1LjY0IDUuMzYgOC4wNCAyLjM1IDguMzYgMCAxMC45IDAgMTRjMCAzLjMxIDIuNjkgNiA2IDZoMTNjMi43NiAwIDUtMi4yNCA1LTUgMC0yLjY0LTIuMDUtNC43OC00LjY1LTQuOTZ6TTE5IDE4SDZjLTIuMjEgMC00LTEuNzktNC00czEuNzktNCA0LTQgNCAxLjc5IDQgNGgyYzAtMi43Ni0xLjg2LTUuMDgtNC40LTUuNzhDOC42MSA2Ljg4IDEwLjIgNiAxMiA2YzMuMDMgMCA1LjUgMi40NyA1LjUgNS41di41SDE5YzEuNjUgMCAzIDEuMzUgMyAzcy0xLjM1IDMtMyAzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZpbHRlckZyYW1lcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNGgtNGwtNC00LTQgNEg0Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bTAgMTZINFY2aDQuNTJsMy41Mi0zLjVMMTUuNTIgNkgyMHYxNHpNMTggOEg2djEwaDEyXCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsdGVySGRyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNCA2bC0zLjc1IDUgMi44NSAzLjgtMS42IDEuMkM5LjgxIDEzLjc1IDcgMTAgNyAxMGwtNiA4aDIyTDE0IDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmlsdGVyTm9uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1SDF2MTZjMCAxLjEuOSAyIDIgMmgxNnYtMkgzVjV6bTE4LTRIN2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTItMi0yem0wIDE2SDdWM2gxNHYxNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXJUaWx0U2hpZnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExIDQuMDdWMi4wNWMtMi4wMS4yLTMuODQgMS01LjMyIDIuMjFMNy4xIDUuNjljMS4xMS0uODYgMi40NC0xLjQ0IDMuOS0xLjYyem03LjMyLjE5QzE2Ljg0IDMuMDUgMTUuMDEgMi4yNSAxMyAyLjA1djIuMDJjMS40Ni4xOCAyLjc5Ljc2IDMuOSAxLjYybDEuNDItMS40M3pNMTkuOTMgMTFoMi4wMmMtLjItMi4wMS0xLTMuODQtMi4yMS01LjMyTDE4LjMxIDcuMWMuODYgMS4xMSAxLjQ0IDIuNDQgMS42MiAzLjl6TTUuNjkgNy4xTDQuMjYgNS42OEMzLjA1IDcuMTYgMi4yNSA4Ljk5IDIuMDUgMTFoMi4wMmMuMTgtMS40Ni43Ni0yLjc5IDEuNjItMy45ek00LjA3IDEzSDIuMDVjLjIgMi4wMSAxIDMuODQgMi4yMSA1LjMybDEuNDMtMS40M2MtLjg2LTEuMS0xLjQ0LTIuNDMtMS42Mi0zLjg5ek0xNSAxMmMwLTEuNjYtMS4zNC0zLTMtM3MtMyAxLjM0LTMgMyAxLjM0IDMgMyAzIDMtMS4zNCAzLTN6bTMuMzEgNC45bDEuNDMgMS40M2MxLjIxLTEuNDggMi4wMS0zLjMyIDIuMjEtNS4zMmgtMi4wMmMtLjE4IDEuNDUtLjc2IDIuNzgtMS42MiAzLjg5ek0xMyAxOS45M3YyLjAyYzIuMDEtLjIgMy44NC0xIDUuMzItMi4yMWwtMS40My0xLjQzYy0xLjEuODYtMi40MyAxLjQ0LTMuODkgMS42MnptLTcuMzItLjE5QzcuMTYgMjAuOTUgOSAyMS43NSAxMSAyMS45NXYtMi4wMmMtMS40Ni0uMTgtMi43OS0uNzYtMy45LTEuNjJsLTEuNDIgMS40M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaWx0ZXJWaW50YWdlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC43IDEyLjRjLS4yOC0uMTYtLjU3LS4yOS0uODYtLjQuMjktLjExLjU4LS4yNC44Ni0uNCAxLjkyLTEuMTEgMi45OS0zLjEyIDMtNS4xOS0xLjc5LTEuMDMtNC4wNy0xLjExLTYgMC0uMjguMTYtLjU0LjM1LS43OC41NC4wNS0uMzEuMDgtLjYzLjA4LS45NSAwLTIuMjItMS4yMS00LjE1LTMtNS4xOUMxMC4yMSAxLjg1IDkgMy43OCA5IDZjMCAuMzIuMDMuNjQuMDguOTUtLjI0LS4yLS41LS4zOS0uNzgtLjU1LTEuOTItMS4xMS00LjItMS4wMy02IDAgMCAyLjA3IDEuMDcgNC4wOCAzIDUuMTkuMjguMTYuNTcuMjkuODYuNC0uMjkuMTEtLjU4LjI0LS44Ni40LTEuOTIgMS4xMS0yLjk5IDMuMTItMyA1LjE5IDEuNzkgMS4wMyA0LjA3IDEuMTEgNiAwIC4yOC0uMTYuNTQtLjM1Ljc4LS41NC0uMDUuMzItLjA4LjY0LS4wOC45NiAwIDIuMjIgMS4yMSA0LjE1IDMgNS4xOSAxLjc5LTEuMDQgMy0yLjk3IDMtNS4xOSAwLS4zMi0uMDMtLjY0LS4wOC0uOTUuMjQuMi41LjM4Ljc4LjU0IDEuOTIgMS4xMSA0LjIgMS4wMyA2IDAtLjAxLTIuMDctMS4wOC00LjA4LTMtNS4xOXpNMTIgMTZjLTIuMjEgMC00LTEuNzktNC00czEuNzktNCA0LTQgNCAxLjc5IDQgNC0xLjc5IDQtNCA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZsYXJlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDExSDF2Mmg2di0yem0yLjE3LTMuMjRMNy4wNSA1LjY0IDUuNjQgNy4wNWwyLjEyIDIuMTIgMS40MS0xLjQxek0xMyAxaC0ydjZoMlYxem01LjM2IDYuMDVsLTEuNDEtMS40MS0yLjEyIDIuMTIgMS40MSAxLjQxIDIuMTItMi4xMnpNMTcgMTF2Mmg2di0yaC02em0tNS0yYy0xLjY2IDAtMyAxLjM0LTMgM3MxLjM0IDMgMyAzIDMtMS4zNCAzLTMtMS4zNC0zLTMtM3ptMi44MyA3LjI0bDIuMTIgMi4xMiAxLjQxLTEuNDEtMi4xMi0yLjEyLTEuNDEgMS40MXptLTkuMTkuNzFsMS40MSAxLjQxIDIuMTItMi4xMi0xLjQxLTEuNDEtMi4xMiAyLjEyek0xMSAyM2gydi02aC0ydjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmxhc2hBdXRvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDJ2MTJoM3Y5bDctMTJIOWw0LTlIM3ptMTYgMGgtMmwtMy4yIDloMS45bC43LTJoMy4ybC43IDJoMS45TDE5IDJ6bS0yLjE1IDUuNjVMMTggNGwxLjE1IDMuNjVoLTIuM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGbGFzaE9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMy4yNyAzTDIgNC4yN2w1IDVWMTNoM3Y5bDMuNTgtNi4xNEwxNy43MyAyMCAxOSAxOC43MyAzLjI3IDN6TTE3IDEwaC00bDQtOEg3djIuMThsOC40NiA4LjQ2TDE3IDEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZsYXNoT24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMnYxMWgzdjlsNy0xMmgtNGw0LTh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRmxpcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgMjFoMnYtMmgtMnYyem00LTEyaDJWN2gtMnYyek0zIDV2MTRjMCAxLjEuOSAyIDIgMmg0di0ySDVWNWg0VjNINWMtMS4xIDAtMiAuOS0yIDJ6bTE2LTJ2MmgyYzAtMS4xLS45LTItMi0yem0tOCAyMGgyVjFoLTJ2MjJ6bTgtNmgydi0yaC0ydjJ6TTE1IDVoMlYzaC0ydjJ6bTQgOGgydi0yaC0ydjJ6bTAgOGMxLjEgMCAyLS45IDItMmgtMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdyYWRpZW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSA5aDJ2MmgtMnptLTIgMmgydjJIOXptNCAwaDJ2MmgtMnptMi0yaDJ2MmgtMnpNNyA5aDJ2Mkg3em0xMi02SDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnpNOSAxOEg3di0yaDJ2MnptNCAwaC0ydi0yaDJ2MnptNCAwaC0ydi0yaDJ2MnptMi03aC0ydjJoMnYyaC0ydi0yaC0ydjJoLTJ2LTJoLTJ2Mkg5di0ySDd2Mkg1di0yaDJ2LTJINVY1aDE0djZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kR3JhaW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDEyYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnpNNiA4Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptMCA4Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptMTItOGMxLjEgMCAyLS45IDItMnMtLjktMi0yLTItMiAuOS0yIDIgLjkgMiAyIDJ6bS00IDhjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yem00LTRjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yem0tNC00Yy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptLTQtNGMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kR3JpZE9mZiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOCA0djEuNDVsMiAyVjRoNHY0aC0zLjQ1bDIgMkgxNHYxLjQ1bDIgMlYxMGg0djRoLTMuNDVsMiAySDIwdjEuNDVsMiAyVjRjMC0xLjEtLjktMi0yLTJINC41NWwyIDJIOHptOCAwaDR2NGgtNFY0ek0xLjI3IDEuMjdMMCAyLjU1bDIgMlYyMGMwIDEuMS45IDIgMiAyaDE1LjQ2bDIgMiAxLjI3LTEuMjdMMS4yNyAxLjI3ek0xMCAxMi41NUwxMS40NSAxNEgxMHYtMS40NXptLTYtNkw1LjQ1IDhINFY2LjU1ek04IDIwSDR2LTRoNHY0em0wLTZINHYtNGgzLjQ1bC41NS41NVYxNHptNiA2aC00di00aDMuNDVsLjU1LjU0VjIwem0yIDB2LTEuNDZMMTcuNDYgMjBIMTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kR3JpZE9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAySDRjLTEuMSAwLTIgLjktMiAydjE2YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnpNOCAyMEg0di00aDR2NHptMC02SDR2LTRoNHY0em0wLTZINFY0aDR2NHptNiAxMmgtNHYtNGg0djR6bTAtNmgtNHYtNGg0djR6bTAtNmgtNFY0aDR2NHptNiAxMmgtNHYtNGg0djR6bTAtNmgtNHYtNGg0djR6bTAtNmgtNFY0aDR2NHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIZHJPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjUgMTV2LTJoMS4xbC45IDJIMjFsLS45LTIuMWMuNS0uMi45LS44LjktMS40di0xYzAtLjgtLjctMS41LTEuNS0xLjVIMTZ2NC45bDEuMSAxLjFoLjR6bTAtNC41aDJ2MWgtMnYtMXptLTQuNSAwdi40bDEuNSAxLjV2LTEuOWMwLS44LS43LTEuNS0xLjUtMS41aC0xLjlsMS41IDEuNWguNHptLTMuNS0xbC03LTctMS4xIDFMNi45IDloLS40djJoLTJWOUgzdjZoMS41di0yLjVoMlYxNUg4di00LjlsMS41IDEuNVYxNWgzLjRsNy42IDcuNiAxLjEtMS4xLTEyLjEtMTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSGRyT24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDExLjV2LTFjMC0uOC0uNy0xLjUtMS41LTEuNUgxNnY2aDEuNXYtMmgxLjFsLjkgMkgyMWwtLjktMi4xYy41LS4zLjktLjguOS0xLjR6bS0xLjUgMGgtMnYtMWgydjF6bS0xMy0uNWgtMlY5SDN2NmgxLjV2LTIuNWgyVjE1SDhWOUg2LjV2MnpNMTMgOUg5LjV2NkgxM2MuOCAwIDEuNS0uNyAxLjUtMS41di0zYzAtLjgtLjctMS41LTEuNS0xLjV6bTAgNC41aC0ydi0zaDJ2M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIZHJTdHJvbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDZjLTMuMzEgMC02IDIuNjktNiA2czIuNjkgNiA2IDYgNi0yLjY5IDYtNi0yLjY5LTYtNi02ek01IDhjLTIuMjEgMC00IDEuNzktNCA0czEuNzkgNCA0IDQgNC0xLjc5IDQtNC0xLjc5LTQtNC00em0wIDZjLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEhkcldlYWsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgOGMtMi4yMSAwLTQgMS43OS00IDRzMS43OSA0IDQgNCA0LTEuNzkgNC00LTEuNzktNC00LTR6bTEyLTJjLTMuMzEgMC02IDIuNjktNiA2czIuNjkgNiA2IDYgNi0yLjY5IDYtNi0yLjY5LTYtNi02em0wIDEwYy0yLjIxIDAtNC0xLjc5LTQtNHMxLjc5LTQgNC00IDQgMS43OSA0IDQtMS43OSA0LTQgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIZWFsaW5nIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNy43MyAxMi4wMmwzLjk4LTMuOThjLjM5LS4zOS4zOS0xLjAyIDAtMS40MWwtNC4zNC00LjM0Yy0uMzktLjM5LTEuMDItLjM5LTEuNDEgMGwtMy45OCAzLjk4TDggMi4yOUM3LjggMi4xIDcuNTUgMiA3LjI5IDJjLS4yNSAwLS41MS4xLS43LjI5TDIuMjUgNi42M2MtLjM5LjM5LS4zOSAxLjAyIDAgMS40MWwzLjk4IDMuOThMMi4yNSAxNmMtLjM5LjM5LS4zOSAxLjAyIDAgMS40MWw0LjM0IDQuMzRjLjM5LjM5IDEuMDIuMzkgMS40MSAwbDMuOTgtMy45OCAzLjk4IDMuOThjLjIuMi40NS4yOS43MS4yOS4yNiAwIC41MS0uMS43MS0uMjlsNC4zNC00LjM0Yy4zOS0uMzkuMzktMS4wMiAwLTEuNDFsLTMuOTktMy45OHpNMTIgOWMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMS0xLS40NS0xLTEgLjQ1LTEgMS0xem0tNC43MSAxLjk2TDMuNjYgNy4zNGwzLjYzLTMuNjMgMy42MiAzLjYyLTMuNjIgMy42M3pNMTAgMTNjLS41NSAwLTEtLjQ1LTEtMXMuNDUtMSAxLTEgMSAuNDUgMSAxLS40NSAxLTEgMXptMiAyYy0uNTUgMC0xLS40NS0xLTFzLjQ1LTEgMS0xIDEgLjQ1IDEgMS0uNDUgMS0xIDF6bTItNGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMS0xLS40NS0xLTEgLjQ1LTEgMS0xem0yLjY2IDkuMzRsLTMuNjMtMy42MiAzLjYzLTMuNjMgMy42MiAzLjYyLTMuNjIgMy42M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbWFnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgMTlWNWMwLTEuMS0uOS0yLTItMkg1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yek04LjUgMTMuNWwyLjUgMy4wMUwxNC41IDEybDQuNSA2SDVsMy41LTQuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRJbWFnZUFzcGVjdFJhdGlvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNiAxMGgtMnYyaDJ2LTJ6bTAgNGgtMnYyaDJ2LTJ6bS04LTRINnYyaDJ2LTJ6bTQgMGgtMnYyaDJ2LTJ6bTgtNkg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bTAgMTRINFY2aDE2djEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZElzbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM0g1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6TTUuNSA3LjVoMnYtMkg5djJoMlY5SDl2Mkg3LjVWOWgtMlY3LjV6TTE5IDE5SDVMMTkgNXYxNHptLTItMnYtMS41aC01VjE3aDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGFuZHNjYXBlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNCA2bC0zLjc1IDUgMi44NSAzLjgtMS42IDEuMkM5LjgxIDEzLjc1IDcgMTAgNyAxMGwtNiA4aDIyTDE0IDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGVha0FkZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNiAzSDN2M2MxLjY2IDAgMy0xLjM0IDMtM3ptOCAwaC0yYzAgNC45Ny00LjAzIDktOSA5djJjNi4wOCAwIDExLTQuOTMgMTEtMTF6bS00IDBIOGMwIDIuNzYtMi4yNCA1LTUgNXYyYzMuODcgMCA3LTMuMTMgNy03em0wIDE4aDJjMC00Ljk3IDQuMDMtOSA5LTl2LTJjLTYuMDcgMC0xMSA0LjkzLTExIDExem04IDBoM3YtM2MtMS42NiAwLTMgMS4zNC0zIDN6bS00IDBoMmMwLTIuNzYgMi4yNC01IDUtNXYtMmMtMy44NyAwLTcgMy4xMy03IDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGVha1JlbW92ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAgM0g4YzAgLjM3LS4wNC43Mi0uMTIgMS4wNmwxLjU5IDEuNTlDOS44MSA0Ljg0IDEwIDMuOTQgMTAgM3pNMyA0LjI3bDIuODQgMi44NEM1LjAzIDcuNjcgNC4wNiA4IDMgOHYyYzEuNjEgMCAzLjA5LS41NSA0LjI3LTEuNDZMOC43IDkuOTdDNy4xNCAxMS4yNCA1LjE2IDEyIDMgMTJ2MmMyLjcxIDAgNS4xOS0uOTkgNy4xMS0yLjYybDIuNSAyLjVDMTAuOTkgMTUuODEgMTAgMTguMjkgMTAgMjFoMmMwLTIuMTYuNzYtNC4xNCAyLjAzLTUuNjlsMS40MyAxLjQzQzE0LjU1IDE3LjkxIDE0IDE5LjM5IDE0IDIxaDJjMC0xLjA2LjMzLTIuMDMuODktMi44NEwxOS43MyAyMSAyMSAxOS43MyA0LjI3IDMgMyA0LjI3ek0xNCAzaC0yYzAgMS41LS4zNyAyLjkxLTEuMDIgNC4xNmwxLjQ2IDEuNDZDMTMuNDIgNi45OCAxNCA1LjA2IDE0IDN6bTUuOTQgMTMuMTJjLjM0LS4wOC42OS0uMTIgMS4wNi0uMTJ2LTJjLS45NCAwLTEuODQuMTktMi42Ni41MmwxLjYgMS42em0tNC41Ni00LjU2bDEuNDYgMS40NkMxOC4wOSAxMi4zNyAxOS41IDEyIDIxIDEydi0yYy0yLjA2IDAtMy45OC41OC01LjYyIDEuNTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGVucyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMaW5rZWRDYW1lcmEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTJcIixcImN5XCI6XCIxNFwiLFwiclwiOlwiMy4yXCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYgMy4zM2MyLjU4IDAgNC42NyAyLjA5IDQuNjcgNC42N0gyMmMwLTMuMzEtMi42OS02LTYtNnYxLjMzTTE2IDZjMS4xMSAwIDIgLjg5IDIgMmgxLjMzYzAtMS44NC0xLjQ5LTMuMzMtMy4zMy0zLjMzVjZcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyA5YzAtMS4xMS0uODktMi0yLTJWNEg5TDcuMTcgNkg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjloLTV6bS01IDEwYy0yLjc2IDAtNS0yLjI0LTUtNXMyLjI0LTUgNS01IDUgMi4yNCA1IDUtMi4yNCA1LTUgNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb29rcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMTBjLTMuODYgMC03IDMuMTQtNyA3aDJjMC0yLjc2IDIuMjQtNSA1LTVzNSAyLjI0IDUgNWgyYzAtMy44Ni0zLjE0LTctNy03em0wLTRDNS45MyA2IDEgMTAuOTMgMSAxN2gyYzAtNC45NiA0LjA0LTkgOS05czkgNC4wNCA5IDloMmMwLTYuMDctNC45My0xMS0xMS0xMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb29rczMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjAxIDNoLTE0Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bS00IDcuNWMwIC44My0uNjcgMS41LTEuNSAxLjUuODMgMCAxLjUuNjcgMS41IDEuNVYxNWMwIDEuMTEtLjkgMi0yIDJoLTR2LTJoNHYtMmgtMnYtMmgyVjloLTRWN2g0YzEuMSAwIDIgLjg5IDIgMnYxLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9va3M0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTQgMTRoLTJ2LTRIOVY3aDJ2NGgyVjdoMnYxMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb29rczUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tNCA2aC00djJoMmMxLjEgMCAyIC44OSAyIDJ2MmMwIDEuMTEtLjkgMi0yIDJIOXYtMmg0di0ySDlWN2g2djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9va3M2IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAxNWgydi0yaC0ydjJ6bTgtMTJINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tNCA2aC00djJoMmMxLjEgMCAyIC44OSAyIDJ2MmMwIDEuMTEtLjkgMi0yIDJoLTJjLTEuMSAwLTItLjg5LTItMlY5YzAtMS4xMS45LTIgMi0yaDR2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb29rc09uZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM0g1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bS01IDE0aC0yVjloLTJWN2g0djEwelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvb2tzVHdvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTQgOGMwIDEuMTEtLjkgMi0yIDJoLTJ2Mmg0djJIOXYtNGMwLTEuMTEuOS0yIDItMmgyVjlIOVY3aDRjMS4xIDAgMiAuODkgMiAydjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG91cGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDdoLTJ2NEg3djJoNHY0aDJ2LTRoNHYtMmgtNFY3em0tMS01QzYuNDkgMiAyIDYuNDkgMiAxMnM0LjQ5IDEwIDEwIDEwaDhjMS4xIDAgMi0uOSAyLTJ2LThjMC01LjUxLTQuNDktMTAtMTAtMTB6bTAgMThjLTQuNDEgMC04LTMuNTktOC04czMuNTktOCA4LTggOCAzLjU5IDggOC0zLjU5IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1vbm9jaHJvbWVQaG90b3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDVoLTMuMkwxNSAzSDlMNy4yIDVINGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY3YzAtMS4xLS45LTItMi0yem0wIDE0aC04di0xYy0yLjggMC01LTIuMi01LTVzMi4yLTUgNS01VjdoOHYxMnptLTMtNmMwLTIuOC0yLjItNS01LTV2MS44YzEuOCAwIDMuMiAxLjQgMy4yIDMuMnMtMS40IDMuMi0zLjIgMy4yVjE4YzIuOCAwIDUtMi4yIDUtNXptLTguMiAwYzAgMS44IDEuNCAzLjIgMy4yIDMuMlY5LjhjLTEuOCAwLTMuMiAxLjQtMy4yIDMuMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNb3ZpZUNyZWF0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCA0bDIgNGgtM2wtMi00aC0ybDIgNGgtM2wtMi00SDhsMiA0SDdMNSA0SDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAxOGMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjRoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTW92aWVGaWx0ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDRsMiAzaC0zbC0yLTNoLTJsMiAzaC0zbC0yLTNIOGwyIDNIN0w1IDRINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNGgtNHptLTYuNzUgMTEuMjVMMTAgMThsLTEuMjUtMi43NUw2IDE0bDIuNzUtMS4yNUwxMCAxMGwxLjI1IDIuNzVMMTQgMTRsLTIuNzUgMS4yNXptNS42OS0zLjMxTDE2IDE0bC0uOTQtMi4wNkwxMyAxMWwyLjA2LS45NEwxNiA4bC45NCAyLjA2TDE5IDExbC0yLjA2Ljk0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE11c2ljTm90ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgM3YxMC41NWMtLjU5LS4zNC0xLjI3LS41NS0yLS41NS0yLjIxIDAtNCAxLjc5LTQgNHMxLjc5IDQgNCA0IDQtMS43OSA0LTRWN2g0VjNoLTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTmF0dXJlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyAxNi4xMmMzLjQ3LS40MSA2LjE3LTMuMzYgNi4xNy02Ljk1IDAtMy44Ny0zLjEzLTctNy03cy03IDMuMTMtNyA3YzAgMy40NyAyLjUyIDYuMzQgNS44MyA2Ljg5VjIwSDV2MmgxNHYtMmgtNnYtMy44OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROYXR1cmVQZW9wbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyLjE3IDkuMTdjMC0zLjg3LTMuMTMtNy03LTdzLTcgMy4xMy03IDdjMCAzLjQ3IDIuNTIgNi4zNCA1LjgzIDYuODlWMjBINnYtM2gxdi00YzAtLjU1LS40NS0xLTEtMUgzYy0uNTUgMC0xIC40NS0xIDF2NGgxdjVoMTZ2LTJoLTN2LTMuODhjMy40Ny0uNDEgNi4xNy0zLjM2IDYuMTctNi45NXpNNC41IDExYy44MyAwIDEuNS0uNjcgMS41LTEuNVM1LjMzIDggNC41IDggMyA4LjY3IDMgOS41IDMuNjcgMTEgNC41IDExelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5hdmlnYXRlQmVmb3JlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNS40MSA3LjQxTDE0IDZsLTYgNiA2IDYgMS40MS0xLjQxTDEwLjgzIDEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5hdmlnYXRlTmV4dCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAgNkw4LjU5IDcuNDEgMTMuMTcgMTJsLTQuNTggNC41OUwxMCAxOGw2LTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGFsZXR0ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgM2MtNC45NyAwLTkgNC4wMy05IDlzNC4wMyA5IDkgOWMuODMgMCAxLjUtLjY3IDEuNS0xLjUgMC0uMzktLjE1LS43NC0uMzktMS4wMS0uMjMtLjI2LS4zOC0uNjEtLjM4LS45OSAwLS44My42Ny0xLjUgMS41LTEuNUgxNmMyLjc2IDAgNS0yLjI0IDUtNSAwLTQuNDItNC4wMy04LTktOHptLTUuNSA5Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTNS42NyA5IDYuNSA5IDggOS42NyA4IDEwLjUgNy4zMyAxMiA2LjUgMTJ6bTMtNEM4LjY3IDggOCA3LjMzIDggNi41UzguNjcgNSA5LjUgNXMxLjUuNjcgMS41IDEuNVMxMC4zMyA4IDkuNSA4em01IDBjLS44MyAwLTEuNS0uNjctMS41LTEuNVMxMy42NyA1IDE0LjUgNXMxLjUuNjcgMS41IDEuNVMxNS4zMyA4IDE0LjUgOHptMyA0Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTMTYuNjcgOSAxNy41IDlzMS41LjY3IDEuNSAxLjUtLjY3IDEuNS0xLjUgMS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBhbm9yYW1hIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMyAxOFY2YzAtMS4xLS45LTItMi0ySDNjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMThjMS4xIDAgMi0uOSAyLTJ6TTguNSAxMi41bDIuNSAzLjAxTDE0LjUgMTFsNC41IDZINWwzLjUtNC41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBhbm9yYW1hRmlzaEV5ZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ3IDIgMiA2LjQ3IDIgMTJzNC40NyAxMCAxMCAxMCAxMC00LjQ3IDEwLTEwUzE3LjUzIDIgMTIgMnptMCAxOGMtNC40MSAwLTgtMy41OS04LThzMy41OS04IDgtOCA4IDMuNTkgOCA4LTMuNTkgOC04IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGFub3JhbWFIb3Jpem9udGFsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA2LjU0djEwLjkxYy0yLjYtLjc3LTUuMjgtMS4xNi04LTEuMTYtMi43MiAwLTUuNC4zOS04IDEuMTZWNi41NGMyLjYuNzcgNS4yOCAxLjE2IDggMS4xNiAyLjcyLjAxIDUuNC0uMzggOC0xLjE2TTIxLjQzIDRjLS4xIDAtLjIuMDItLjMxLjA2QzE4LjE4IDUuMTYgMTUuMDkgNS43IDEyIDUuN2MtMy4wOSAwLTYuMTgtLjU1LTkuMTItMS42NC0uMTEtLjA0LS4yMi0uMDYtLjMxLS4wNi0uMzQgMC0uNTcuMjMtLjU3LjYzdjE0Ljc1YzAgLjM5LjIzLjYyLjU3LjYyLjEgMCAuMi0uMDIuMzEtLjA2IDIuOTQtMS4xIDYuMDMtMS42NCA5LjEyLTEuNjQgMy4wOSAwIDYuMTguNTUgOS4xMiAxLjY0LjExLjA0LjIxLjA2LjMxLjA2LjMzIDAgLjU3LS4yMy41Ny0uNjNWNC42M2MwLS40LS4yNC0uNjMtLjU3LS42M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQYW5vcmFtYVZlcnRpY2FsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS45NCAyMS4xMmMtMS4xLTIuOTQtMS42NC02LjAzLTEuNjQtOS4xMiAwLTMuMDkuNTUtNi4xOCAxLjY0LTkuMTIuMDQtLjExLjA2LS4yMi4wNi0uMzEgMC0uMzQtLjIzLS41Ny0uNjMtLjU3SDQuNjNjLS40IDAtLjYzLjIzLS42My41NyAwIC4xLjAyLjIuMDYuMzFDNS4xNiA1LjgyIDUuNzEgOC45MSA1LjcxIDEyYzAgMy4wOS0uNTUgNi4xOC0xLjY0IDkuMTItLjA1LjExLS4wNy4yMi0uMDcuMzEgMCAuMzMuMjMuNTcuNjMuNTdoMTQuNzVjLjM5IDAgLjYzLS4yNC42My0uNTctLjAxLS4xLS4wMy0uMi0uMDctLjMxek02LjU0IDIwYy43Ny0yLjYgMS4xNi01LjI4IDEuMTYtOCAwLTIuNzItLjM5LTUuNC0xLjE2LThoMTAuOTFjLS43NyAyLjYtMS4xNiA1LjI4LTEuMTYgOCAwIDIuNzIuMzkgNS40IDEuMTYgOEg2LjU0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBhbm9yYW1hV2lkZUFuZ2xlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA2YzIuNDUgMCA0LjcxLjIgNy4yOS42NC40NyAxLjc4LjcxIDMuNTguNzEgNS4zNiAwIDEuNzgtLjI0IDMuNTgtLjcxIDUuMzYtMi41OC40NC00Ljg0LjY0LTcuMjkuNjRzLTQuNzEtLjItNy4yOS0uNjRDNC4yNCAxNS41OCA0IDEzLjc4IDQgMTJjMC0xLjc4LjI0LTMuNTguNzEtNS4zNkM3LjI5IDYuMiA5LjU1IDYgMTIgNm0wLTJjLTIuNzMgMC01LjIyLjI0LTcuOTUuNzJsLS45My4xNi0uMjUuOUMyLjI5IDcuODUgMiA5LjkzIDIgMTJzLjI5IDQuMTUuODcgNi4yMmwuMjUuODkuOTMuMTZjMi43My40OSA1LjIyLjczIDcuOTUuNzNzNS4yMi0uMjQgNy45NS0uNzJsLjkzLS4xNi4yNS0uODljLjU4LTIuMDguODctNC4xNi44Ny02LjIzcy0uMjktNC4xNS0uODctNi4yMmwtLjI1LS44OS0uOTMtLjE2QzE3LjIyIDQuMjQgMTQuNzMgNCAxMiA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob3RvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAxOVY1YzAtMS4xLS45LTItMi0ySDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJ6TTguNSAxMy41bDIuNSAzLjAxTDE0LjUgMTJsNC41IDZINWwzLjUtNC41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob3RvQWxidW0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDJINmMtMS4xIDAtMiAuOS0yIDJ2MTZjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yek02IDRoNXY4bC0yLjUtMS41TDYgMTJWNHptMCAxNWwzLTMuODYgMi4xNCAyLjU4IDMtMy44NkwxOCAxOUg2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob3RvQ2FtZXJhIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjEyXCIsXCJjeVwiOlwiMTJcIixcInJcIjpcIjMuMlwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgMkw3LjE3IDRINGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yaC0zLjE3TDE1IDJIOXptMyAxNWMtMi43NiAwLTUtMi4yNC01LTVzMi4yNC01IDUtNSA1IDIuMjQgNSA1LTIuMjQgNS01IDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvdG9GaWx0ZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjAyIDEwdjlINVY1aDlWM0g1LjAyYy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0ydi05aC0yek0xNyAxMGwuOTQtMi4wNkwyMCA3bC0yLjA2LS45NEwxNyA0bC0uOTQgMi4wNkwxNCA3bDIuMDYuOTR6bS0zLjc1Ljc1TDEyIDhsLTEuMjUgMi43NUw4IDEybDIuNzUgMS4yNUwxMiAxNmwxLjI1LTIuNzVMMTYgMTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvdG9MaWJyYXJ5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiAxNlY0YzAtMS4xLS45LTItMi0ySDhjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJ6bS0xMS00bDIuMDMgMi43MUwxNiAxMWw0IDVIOGwzLTR6TTIgNnYxNGMwIDEuMS45IDIgMiAyaDE0di0ySDRWNkgyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob3RvU2l6ZVNlbGVjdEFjdHVhbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzQzIgMyAxIDQgMSA1djE0YzAgMS4xLjkgMiAyIDJoMThjMSAwIDItMSAyLTJWNWMwLTEtMS0yLTItMnpNNSAxN2wzLjUtNC41IDIuNSAzLjAxTDE0LjUgMTFsNC41IDZINXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaG90b1NpemVTZWxlY3RMYXJnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgMTVoMnYyaC0ydi0yem0wLTRoMnYyaC0ydi0yem0yIDhoLTJ2MmMxIDAgMi0xIDItMnpNMTMgM2gydjJoLTJWM3ptOCA0aDJ2MmgtMlY3em0wLTR2MmgyYzAtMS0xLTItMi0yek0xIDdoMnYySDFWN3ptMTYtNGgydjJoLTJWM3ptMCAxNmgydjJoLTJ2LTJ6TTMgM0MyIDMgMSA0IDEgNWgyVjN6bTYgMGgydjJIOVYzek01IDNoMnYySDVWM3ptLTQgOHY4YzAgMS4xLjkgMiAyIDJoMTJWMTFIMXptMiA4bDIuNS0zLjIxIDEuNzkgMi4xNSAyLjUtMy4yMkwxMyAxOUgzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob3RvU2l6ZVNlbGVjdFNtYWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMyAxNWgtMnYyaDJ2LTJ6bTAtNGgtMnYyaDJ2LTJ6bTAgOGgtMnYyYzEgMCAyLTEgMi0yek0xNSAzaC0ydjJoMlYzem04IDRoLTJ2MmgyVjd6bS0yLTR2MmgyYzAtMS0xLTItMi0yek0zIDIxaDh2LTZIMXY0YzAgMS4xLjkgMiAyIDJ6TTMgN0gxdjJoMlY3em0xMiAxMmgtMnYyaDJ2LTJ6bTQtMTZoLTJ2MmgyVjN6bTAgMTZoLTJ2Mmgydi0yek0zIDNDMiAzIDEgNCAxIDVoMlYzem0wIDhIMXYyaDJ2LTJ6bTgtOEg5djJoMlYzek03IDNINXYyaDJWM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaWN0dXJlQXNQZGYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJIOGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tOC41IDcuNWMwIC44My0uNjcgMS41LTEuNSAxLjVIOXYySDcuNVY3SDEwYy44MyAwIDEuNS42NyAxLjUgMS41djF6bTUgMmMwIC44My0uNjcgMS41LTEuNSAxLjVoLTIuNVY3SDE1Yy44MyAwIDEuNS42NyAxLjUgMS41djN6bTQtM0gxOXYxaDEuNVYxMUgxOXYyaC0xLjVWN2gzdjEuNXpNOSA5LjVoMXYtMUg5djF6TTQgNkgydjE0YzAgMS4xLjkgMiAyIDJoMTR2LTJINFY2em0xMCA1LjVoMXYtM2gtMXYzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBvcnRyYWl0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxMi4yNWMxLjI0IDAgMi4yNS0xLjAxIDIuMjUtMi4yNVMxMy4yNCA3Ljc1IDEyIDcuNzUgOS43NSA4Ljc2IDkuNzUgMTBzMS4wMSAyLjI1IDIuMjUgMi4yNXptNC41IDRjMC0xLjUtMy0yLjI1LTQuNS0yLjI1cy00LjUuNzUtNC41IDIuMjVWMTdoOXYtLjc1ek0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkg1VjVoMTR2MTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmVtb3ZlUmVkRXllIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA0LjVDNyA0LjUgMi43MyA3LjYxIDEgMTJjMS43MyA0LjM5IDYgNy41IDExIDcuNXM5LjI3LTMuMTEgMTEtNy41Yy0xLjczLTQuMzktNi03LjUtMTEtNy41ek0xMiAxN2MtMi43NiAwLTUtMi4yNC01LTVzMi4yNC01IDUtNSA1IDIuMjQgNSA1LTIuMjQgNS01IDV6bTAtOGMtMS42NiAwLTMgMS4zNC0zIDNzMS4zNCAzIDMgMyAzLTEuMzQgMy0zLTEuMzQtMy0zLTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUm90YXRlOTBEZWdyZWVzQ2N3IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03LjM0IDYuNDFMLjg2IDEyLjlsNi40OSA2LjQ4IDYuNDktNi40OC02LjUtNi40OXpNMy42OSAxMi45bDMuNjYtMy42NkwxMSAxMi45bC0zLjY2IDMuNjYtMy42NS0zLjY2em0xNS42Ny02LjI2QzE3LjYxIDQuODggMTUuMyA0IDEzIDRWLjc2TDguNzYgNSAxMyA5LjI0VjZjMS43OSAwIDMuNTguNjggNC45NSAyLjA1IDIuNzMgMi43MyAyLjczIDcuMTcgMCA5LjlDMTYuNTggMTkuMzIgMTQuNzkgMjAgMTMgMjBjLS45NyAwLTEuOTQtLjIxLTIuODQtLjYxbC0xLjQ5IDEuNDlDMTAuMDIgMjEuNjIgMTEuNTEgMjIgMTMgMjJjMi4zIDAgNC42MS0uODggNi4zNi0yLjY0IDMuNTItMy41MSAzLjUyLTkuMjEgMC0xMi43MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSb3RhdGVMZWZ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03LjExIDguNTNMNS43IDcuMTFDNC44IDguMjcgNC4yNCA5LjYxIDQuMDcgMTFoMi4wMmMuMTQtLjg3LjQ5LTEuNzIgMS4wMi0yLjQ3ek02LjA5IDEzSDQuMDdjLjE3IDEuMzkuNzIgMi43MyAxLjYyIDMuODlsMS40MS0xLjQyYy0uNTItLjc1LS44Ny0xLjU5LTEuMDEtMi40N3ptMS4wMSA1LjMyYzEuMTYuOSAyLjUxIDEuNDQgMy45IDEuNjFWMTcuOWMtLjg3LS4xNS0xLjcxLS40OS0yLjQ2LTEuMDNMNy4xIDE4LjMyek0xMyA0LjA3VjFMOC40NSA1LjU1IDEzIDEwVjYuMDljMi44NC40OCA1IDIuOTQgNSA1Ljkxcy0yLjE2IDUuNDMtNSA1LjkxdjIuMDJjMy45NS0uNDkgNy0zLjg1IDctNy45M3MtMy4wNS03LjQ0LTctNy45M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSb3RhdGVSaWdodCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUuNTUgNS41NUwxMSAxdjMuMDdDNy4wNiA0LjU2IDQgNy45MiA0IDEyczMuMDUgNy40NCA3IDcuOTN2LTIuMDJjLTIuODQtLjQ4LTUtMi45NC01LTUuOTFzMi4xNi01LjQzIDUtNS45MVYxMGw0LjU1LTQuNDV6TTE5LjkzIDExYy0uMTctMS4zOS0uNzItMi43My0xLjYyLTMuODlsLTEuNDIgMS40MmMuNTQuNzUuODggMS42IDEuMDIgMi40N2gyLjAyek0xMyAxNy45djIuMDJjMS4zOS0uMTcgMi43NC0uNzEgMy45LTEuNjFsLTEuNDQtMS40NGMtLjc1LjU0LTEuNTkuODktMi40NiAxLjAzem0zLjg5LTIuNDJsMS40MiAxLjQxYy45LTEuMTYgMS40NS0yLjUgMS42Mi0zLjg5aC0yLjAyYy0uMTQuODctLjQ4IDEuNzItMS4wMiAyLjQ4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNsaWRlc2hvdyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTAgOHY4bDUtNC01LTR6bTktNUg1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6bTAgMTZINVY1aDE0djE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0cmFpZ2h0ZW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDZIM2MtMS4xIDAtMiAuOS0yIDJ2OGMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjhjMC0xLjEtLjktMi0yLTJ6bTAgMTBIM1Y4aDJ2NGgyVjhoMnY0aDJWOGgydjRoMlY4aDJ2NGgyVjhoMnY4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0eWxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yLjUzIDE5LjY1bDEuMzQuNTZ2LTkuMDNsLTIuNDMgNS44NmMtLjQxIDEuMDIuMDggMi4xOSAxLjA5IDIuNjF6bTE5LjUtMy43TDE3LjA3IDMuOThjLS4zMS0uNzUtMS4wNC0xLjIxLTEuODEtMS4yMy0uMjYgMC0uNTMuMDQtLjc5LjE1TDcuMSA1Ljk1Yy0uNzUuMzEtMS4yMSAxLjAzLTEuMjMgMS44LS4wMS4yNy4wNC41NC4xNS44bDQuOTYgMTEuOTdjLjMxLjc2IDEuMDUgMS4yMiAxLjgzIDEuMjMuMjYgMCAuNTItLjA1Ljc3LS4xNWw3LjM2LTMuMDVjMS4wMi0uNDIgMS41MS0xLjU5IDEuMDktMi42ek03Ljg4IDguNzVjLS41NSAwLTEtLjQ1LTEtMXMuNDUtMSAxLTEgMSAuNDUgMSAxLS40NSAxLTEgMXptLTIgMTFjMCAxLjEuOSAyIDIgMmgxLjQ1bC0zLjQ1LTguMzR2Ni4zNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTd2l0Y2hDYW1lcmEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDRoLTMuMTdMMTUgMkg5TDcuMTcgNEg0Yy0xLjEgMC0yIC45LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE2YzEuMSAwIDItLjkgMi0yVjZjMC0xLjEtLjktMi0yLTJ6bS01IDExLjVWMTNIOXYyLjVMNS41IDEyIDkgOC41VjExaDZWOC41bDMuNSAzLjUtMy41IDMuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTd2l0Y2hWaWRlbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTggOS41VjZjMC0uNTUtLjQ1LTEtMS0xSDNjLS41NSAwLTEgLjQ1LTEgMXYxMmMwIC41NS40NSAxIDEgMWgxNGMuNTUgMCAxLS40NSAxLTF2LTMuNWw0IDR2LTEzbC00IDR6bS01IDZWMTNIN3YyLjVMMy41IDEyIDcgOC41VjExaDZWOC41bDMuNSAzLjUtMy41IDMuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUYWdGYWNlcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTkgMkM2LjQ3IDIgMiA2LjQ4IDIgMTJzNC40NyAxMCA5Ljk5IDEwQzE3LjUyIDIyIDIyIDE3LjUyIDIyIDEyUzE3LjUyIDIgMTEuOTkgMnpNMTIgMjBjLTQuNDIgMC04LTMuNTgtOC04czMuNTgtOCA4LTggOCAzLjU4IDggOC0zLjU4IDgtOCA4em0zLjUtOWMuODMgMCAxLjUtLjY3IDEuNS0xLjVTMTYuMzMgOCAxNS41IDggMTQgOC42NyAxNCA5LjVzLjY3IDEuNSAxLjUgMS41em0tNyAwYy44MyAwIDEuNS0uNjcgMS41LTEuNVM5LjMzIDggOC41IDggNyA4LjY3IDcgOS41IDcuNjcgMTEgOC41IDExem0zLjUgNi41YzIuMzMgMCA0LjMxLTEuNDYgNS4xMS0zLjVINi44OWMuOCAyLjA0IDIuNzggMy41IDUuMTEgMy41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRleHR1cmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5LjUxIDMuMDhMMy4wOCAxOS41MWMuMDkuMzQuMjcuNjUuNTEuOS4yNS4yNC41Ni40Mi45LjUxTDIwLjkzIDQuNDljLS4xOS0uNjktLjczLTEuMjMtMS40Mi0xLjQxek0xMS44OCAzTDMgMTEuODh2Mi44M0wxNC43MSAzaC0yLjgzek01IDNjLTEuMSAwLTIgLjktMiAydjJsNC00SDV6bTE0IDE4Yy41NSAwIDEuMDUtLjIyIDEuNDEtLjU5LjM3LS4zNi41OS0uODYuNTktMS40MXYtMmwtNCA0aDJ6bS05LjcxIDBoMi44M0wyMSAxMi4xMlY5LjI5TDkuMjkgMjF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGltZWxhcHNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi4yNCA3Ljc2QzE1LjA3IDYuNTkgMTMuNTQgNiAxMiA2djZsLTQuMjQgNC4yNGMyLjM0IDIuMzQgNi4xNCAyLjM0IDguNDkgMCAyLjM0LTIuMzQgMi4zNC02LjE0LS4wMS04LjQ4ek0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDE4Yy00LjQyIDAtOC0zLjU4LTgtOHMzLjU4LTggOC04IDggMy41OCA4IDgtMy41OCA4LTggOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUaW1lcjEwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0wIDcuNzJWOS40bDMtMVYxOGgyVjZoLS4yNUwwIDcuNzJ6bTIzLjc4IDYuNjVjLS4xNC0uMjgtLjM1LS41My0uNjMtLjc0LS4yOC0uMjEtLjYxLS4zOS0xLjAxLS41M3MtLjg1LS4yNy0xLjM1LS4zOGMtLjM1LS4wNy0uNjQtLjE1LS44Ny0uMjMtLjIzLS4wOC0uNDEtLjE2LS41NS0uMjUtLjE0LS4wOS0uMjMtLjE5LS4yOC0uMy0uMDUtLjExLS4wOC0uMjQtLjA4LS4zOSAwLS4xNC4wMy0uMjguMDktLjQxLjA2LS4xMy4xNS0uMjUuMjctLjM0LjEyLS4xLjI3LS4xOC40NS0uMjRzLjQtLjA5LjY0LS4wOWMuMjUgMCAuNDcuMDQuNjYuMTEuMTkuMDcuMzUuMTcuNDguMjkuMTMuMTIuMjIuMjYuMjkuNDIuMDYuMTYuMS4zMi4xLjQ5aDEuOTVjMC0uMzktLjA4LS43NS0uMjQtMS4wOS0uMTYtLjM0LS4zOS0uNjMtLjY5LS44OC0uMy0uMjUtLjY2LS40NC0xLjA5LS41OUMyMS40OSA5LjA3IDIxIDkgMjAuNDYgOWMtLjUxIDAtLjk4LjA3LTEuMzkuMjEtLjQxLjE0LS43Ny4zMy0xLjA2LjU3LS4yOS4yNC0uNTEuNTItLjY3Ljg0LS4xNi4zMi0uMjMuNjUtLjIzIDEuMDFzLjA4LjY5LjIzLjk2Yy4xNS4yOC4zNi41Mi42NC43My4yNy4yMS42LjM4Ljk4LjUzLjM4LjE0LjgxLjI2IDEuMjcuMzYuMzkuMDguNzEuMTcuOTUuMjZzLjQzLjE5LjU3LjI5Yy4xMy4xLjIyLjIyLjI3LjM0LjA1LjEyLjA3LjI1LjA3LjM5IDAgLjMyLS4xMy41Ny0uNC43Ny0uMjcuMi0uNjYuMjktMS4xNy4yOS0uMjIgMC0uNDMtLjAyLS42NC0uMDgtLjIxLS4wNS0uNC0uMTMtLjU2LS4yNC0uMTctLjExLS4zLS4yNi0uNDEtLjQ0LS4xMS0uMTgtLjE3LS40MS0uMTgtLjY3aC0xLjg5YzAgLjM2LjA4LjcxLjI0IDEuMDUuMTYuMzQuMzkuNjUuNy45My4zMS4yNy42OS40OSAxLjE1LjY2LjQ2LjE3Ljk4LjI1IDEuNTguMjUuNTMgMCAxLjAxLS4wNiAxLjQ0LS4xOS40My0uMTMuOC0uMzEgMS4xMS0uNTQuMzEtLjIzLjU0LS41MS43MS0uODMuMTctLjMyLjI1LS42Ny4yNS0xLjA2LS4wMi0uNC0uMDktLjc0LS4yNC0xLjAyem0tOS45Ni03LjMyYy0uMzQtLjQtLjc1LS43LTEuMjMtLjg4LS40Ny0uMTgtMS4wMS0uMjctMS41OS0uMjctLjU4IDAtMS4xMS4wOS0xLjU5LjI3LS40OC4xOC0uODkuNDctMS4yMy44OC0uMzQuNDEtLjYuOTMtLjc5IDEuNTktLjE4LjY1LS4yOCAxLjQ1LS4yOCAyLjM5djEuOTJjMCAuOTQuMDkgMS43NC4yOCAyLjM5LjE5LjY2LjQ1IDEuMTkuOCAxLjYuMzQuNDEuNzUuNzEgMS4yMy44OS40OC4xOCAxLjAxLjI4IDEuNTkuMjguNTkgMCAxLjEyLS4wOSAxLjU5LS4yOC40OC0uMTguODgtLjQ4IDEuMjItLjg5LjM0LS40MS42LS45NC43OC0xLjYuMTgtLjY1LjI4LTEuNDUuMjgtMi4zOXYtMS45MmMwLS45NC0uMDktMS43NC0uMjgtMi4zOS0uMTgtLjY2LS40NC0xLjE5LS43OC0xLjU5em0tLjkyIDYuMTdjMCAuNi0uMDQgMS4xMS0uMTIgMS41My0uMDguNDItLjIuNzYtLjM2IDEuMDItLjE2LjI2LS4zNi40NS0uNTkuNTctLjIzLjEyLS41MS4xOC0uODIuMTgtLjMgMC0uNTgtLjA2LS44Mi0uMThzLS40NC0uMzEtLjYtLjU3Yy0uMTYtLjI2LS4yOS0uNi0uMzgtMS4wMi0uMDktLjQyLS4xMy0uOTMtLjEzLTEuNTN2LTIuNWMwLS42LjA0LTEuMTEuMTMtMS41Mi4wOS0uNDEuMjEtLjc0LjM4LTEgLjE2LS4yNS4zNi0uNDMuNi0uNTUuMjQtLjExLjUxLS4xNy44MS0uMTcuMzEgMCAuNTguMDYuODEuMTcuMjQuMTEuNDQuMjkuNi41NS4xNi4yNS4yOS41OC4zNy45OS4wOC40MS4xMy45Mi4xMyAxLjUydjIuNTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGltZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1IDFIOXYyaDZWMXptLTQgMTNoMlY4aC0ydjZ6bTguMDMtNi42MWwxLjQyLTEuNDJjLS40My0uNTEtLjktLjk5LTEuNDEtMS40MWwtMS40MiAxLjQyQzE2LjA3IDQuNzQgMTQuMTIgNCAxMiA0Yy00Ljk3IDAtOSA0LjAzLTkgOXM0LjAyIDkgOSA5IDktNC4wMyA5LTljMC0yLjEyLS43NC00LjA3LTEuOTctNS42MXpNMTIgMjBjLTMuODcgMC03LTMuMTMtNy03czMuMTMtNyA3LTcgNyAzLjEzIDcgNy0zLjEzIDctNyA3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRpbWVyMyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuNjEgMTIuOTdjLS4xNi0uMjQtLjM2LS40Ni0uNjItLjY1LS4yNS0uMTktLjU2LS4zNS0uOTMtLjQ4LjMtLjE0LjU3LS4zLjgtLjUuMjMtLjIuNDItLjQxLjU3LS42NC4xNS0uMjMuMjctLjQ2LjM0LS43MS4wOC0uMjQuMTEtLjQ5LjExLS43MyAwLS41NS0uMDktMS4wNC0uMjgtMS40Ni0uMTgtLjQyLS40NC0uNzctLjc4LTEuMDYtLjMzLS4yOC0uNzMtLjUtMS4yLS42NC0uNDUtLjEzLS45Ny0uMi0xLjUzLS4yLS41NSAwLTEuMDYuMDgtMS41Mi4yNC0uNDcuMTctLjg3LjQtMS4yLjY5LS4zMy4yOS0uNi42My0uNzggMS4wMy0uMi4zOS0uMjkuODMtLjI5IDEuMjloMS45OGMwLS4yNi4wNS0uNDkuMTQtLjY5LjA5LS4yLjIyLS4zOC4zOC0uNTIuMTctLjE0LjM2LS4yNS41OC0uMzMuMjItLjA4LjQ2LS4xMi43My0uMTIuNjEgMCAxLjA2LjE2IDEuMzYuNDcuMy4zMS40NC43NS40NCAxLjMyIDAgLjI3LS4wNC41Mi0uMTIuNzQtLjA4LjIyLS4yMS40MS0uMzguNTctLjE3LjE2LS4zOC4yOC0uNjMuMzctLjI1LjA5LS41NS4xMy0uODkuMTNINi43MnYxLjU3SDcuOWMuMzQgMCAuNjQuMDQuOTEuMTEuMjcuMDguNS4xOS42OS4zNS4xOS4xNi4zNC4zNi40NC42MS4xLjI0LjE2LjU0LjE2Ljg3IDAgLjYyLS4xOCAxLjA5LS41MyAxLjQyLS4zNS4zMy0uODQuNDktMS40NS40OS0uMjkgMC0uNTYtLjA0LS44LS4xMy0uMjQtLjA4LS40NC0uMi0uNjEtLjM2LS4xNy0uMTYtLjMtLjM0LS4zOS0uNTYtLjA5LS4yMi0uMTQtLjQ2LS4xNC0uNzJINC4xOWMwIC41NS4xMSAxLjAzLjMyIDEuNDUuMjEuNDIuNS43Ny44NiAxLjA1cy43Ny40OSAxLjI0LjYzLjk2LjIxIDEuNDguMjFjLjU3IDAgMS4wOS0uMDggMS41OC0uMjMuNDktLjE1LjkxLS4zOCAxLjI2LS42OC4zNi0uMy42NC0uNjYuODQtMS4xLjItLjQzLjMtLjkzLjMtMS40OCAwLS4yOS0uMDQtLjU4LS4xMS0uODYtLjA4LS4yNS0uMTktLjUxLS4zNS0uNzZ6bTkuMjYgMS40Yy0uMTQtLjI4LS4zNS0uNTMtLjYzLS43NC0uMjgtLjIxLS42MS0uMzktMS4wMS0uNTNzLS44NS0uMjctMS4zNS0uMzhjLS4zNS0uMDctLjY0LS4xNS0uODctLjIzLS4yMy0uMDgtLjQxLS4xNi0uNTUtLjI1LS4xNC0uMDktLjIzLS4xOS0uMjgtLjMtLjA1LS4xMS0uMDgtLjI0LS4wOC0uMzlzLjAzLS4yOC4wOS0uNDFjLjA2LS4xMy4xNS0uMjUuMjctLjM0LjEyLS4xLjI3LS4xOC40NS0uMjRzLjQtLjA5LjY0LS4wOWMuMjUgMCAuNDcuMDQuNjYuMTEuMTkuMDcuMzUuMTcuNDguMjkuMTMuMTIuMjIuMjYuMjkuNDIuMDYuMTYuMS4zMi4xLjQ5aDEuOTVjMC0uMzktLjA4LS43NS0uMjQtMS4wOS0uMTYtLjM0LS4zOS0uNjMtLjY5LS44OC0uMy0uMjUtLjY2LS40NC0xLjA5LS41OS0uNDMtLjE1LS45Mi0uMjItMS40Ni0uMjItLjUxIDAtLjk4LjA3LTEuMzkuMjEtLjQxLjE0LS43Ny4zMy0xLjA2LjU3LS4yOS4yNC0uNTEuNTItLjY3Ljg0LS4xNi4zMi0uMjMuNjUtLjIzIDEuMDFzLjA4LjY4LjIzLjk2Yy4xNS4yOC4zNy41Mi42NC43My4yNy4yMS42LjM4Ljk4LjUzLjM4LjE0LjgxLjI2IDEuMjcuMzYuMzkuMDguNzEuMTcuOTUuMjZzLjQzLjE5LjU3LjI5Yy4xMy4xLjIyLjIyLjI3LjM0LjA1LjEyLjA3LjI1LjA3LjM5IDAgLjMyLS4xMy41Ny0uNC43Ny0uMjcuMi0uNjYuMjktMS4xNy4yOS0uMjIgMC0uNDMtLjAyLS42NC0uMDgtLjIxLS4wNS0uNC0uMTMtLjU2LS4yNC0uMTctLjExLS4zLS4yNi0uNDEtLjQ0LS4xMS0uMTgtLjE3LS40MS0uMTgtLjY3aC0xLjg5YzAgLjM2LjA4LjcxLjI0IDEuMDUuMTYuMzQuMzkuNjUuNy45My4zMS4yNy42OS40OSAxLjE1LjY2LjQ2LjE3Ljk4LjI1IDEuNTguMjUuNTMgMCAxLjAxLS4wNiAxLjQ0LS4xOS40My0uMTMuOC0uMzEgMS4xMS0uNTQuMzEtLjIzLjU0LS41MS43MS0uODMuMTctLjMyLjI1LS42Ny4yNS0xLjA2LS4wMi0uNC0uMDktLjc0LS4yNC0xLjAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRpbWVyT2ZmIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS4wNCA0LjU1bC0xLjQyIDEuNDJDMTYuMDcgNC43NCAxNC4xMiA0IDEyIDRjLTEuODMgMC0zLjUzLjU1LTQuOTUgMS40OGwxLjQ2IDEuNDZDOS41MyA2LjM1IDEwLjczIDYgMTIgNmMzLjg3IDAgNyAzLjEzIDcgNyAwIDEuMjctLjM1IDIuNDctLjk0IDMuNDlsMS40NSAxLjQ1QzIwLjQ1IDE2LjUzIDIxIDE0LjgzIDIxIDEzYzAtMi4xMi0uNzQtNC4wNy0xLjk3LTUuNjFsMS40Mi0xLjQyLTEuNDEtMS40MnpNMTUgMUg5djJoNlYxem0tNCA4LjQ0bDIgMlY4aC0ydjEuNDR6TTMuMDIgNEwxLjc1IDUuMjcgNC41IDguMDNDMy41NSA5LjQ1IDMgMTEuMTYgMyAxM2MwIDQuOTcgNC4wMiA5IDkgOSAxLjg0IDAgMy41NS0uNTUgNC45OC0xLjVsMi41IDIuNSAxLjI3LTEuMjctNy43MS03LjcxTDMuMDIgNHpNMTIgMjBjLTMuODcgMC03LTMuMTMtNy03IDAtMS4yOC4zNS0yLjQ4Ljk1LTMuNTJsOS41NiA5LjU2Yy0xLjAzLjYxLTIuMjMuOTYtMy41MS45NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRUb25hbGl0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptLTEgMTcuOTNjLTMuOTQtLjQ5LTctMy44NS03LTcuOTNzMy4wNS03LjQ0IDctNy45M3YxNS44NnptMi0xNS44NmMxLjAzLjEzIDIgLjQ1IDIuODcuOTNIMTN2LS45M3pNMTMgN2g1LjI0Yy4yNS4zMS40OC42NS42OCAxSDEzVjd6bTAgM2g2Ljc0Yy4wOC4zMy4xNS42Ni4xOSAxSDEzdi0xem0wIDkuOTNWMTloMi44N2MtLjg3LjQ4LTEuODQuOC0yLjg3Ljkzek0xOC4yNCAxN0gxM3YtMWg1LjkyYy0uMi4zNS0uNDMuNjktLjY4IDF6bTEuNS0zSDEzdi0xaDYuOTNjLS4wNC4zNC0uMTEuNjctLjE5IDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHJhbnNmb3JtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiAxOHYtMkg4VjRoMkw3IDEgNCA0aDJ2MkgydjJoNHY4YzAgMS4xLjkgMiAyIDJoOHYyaC0ybDMgMyAzLTNoLTJ2LTJoNHpNMTAgOGg2djZoMlY4YzAtMS4xLS45LTItMi0yaC02djJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHVuZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAxN3YyaDZ2LTJIM3pNMyA1djJoMTBWNUgzem0xMCAxNnYtMmg4di0yaC04di0yaC0ydjZoMnpNNyA5djJIM3YyaDR2MmgyVjlIN3ptMTQgNHYtMkgxMXYyaDEwem0tNi00aDJWN2g0VjVoLTRWM2gtMnY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpZXdDb21meSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA5aDRWNUgzdjR6bTAgNWg0di00SDN2NHptNSAwaDR2LTRIOHY0em01IDBoNHYtNGgtNHY0ek04IDloNFY1SDh2NHptNS00djRoNFY1aC00em01IDloNHYtNGgtNHY0ek0zIDE5aDR2LTRIM3Y0em01IDBoNHYtNEg4djR6bTUgMGg0di00aC00djR6bTUgMGg0di00aC00djR6bTAtMTR2NGg0VjVoLTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlld0NvbXBhY3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTMgMTloNnYtN0gzdjd6bTcgMGgxMnYtN0gxMHY3ek0zIDV2NmgxOVY1SDN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVmlnbmV0dGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDNIM2MtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxOGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0tOSAxNWMtNC40MiAwLTgtMi42OS04LTZzMy41OC02IDgtNiA4IDIuNjkgOCA2LTMuNTggNi04IDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kV2JBdXRvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02Ljg1IDEyLjY1aDIuM0w4IDlsLTEuMTUgMy42NXpNMjIgN2wtMS4yIDYuMjlMMTkuMyA3aC0xLjZsLTEuNDkgNi4yOUwxNSA3aC0uNzZDMTIuNzcgNS4xNyAxMC41MyA0IDggNGMtNC40MiAwLTggMy41OC04IDhzMy41OCA4IDggOGMzLjEzIDAgNS44NC0xLjgxIDcuMTUtNC40M2wuMS40M0gxN2wxLjUtNi4xTDIwIDE2aDEuNzVsMi4wNS05SDIyem0tMTEuNyA5bC0uNy0ySDYuNGwtLjcgMkgzLjhMNyA3aDJsMy4yIDloLTEuOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXYkNsb3VkeSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuMzYgMTAuMDRDMTguNjcgNi41OSAxNS42NCA0IDEyIDQgOS4xMSA0IDYuNiA1LjY0IDUuMzUgOC4wNCAyLjM0IDguMzYgMCAxMC45MSAwIDE0YzAgMy4zMSAyLjY5IDYgNiA2aDEzYzIuNzYgMCA1LTIuMjQgNS01IDAtMi42NC0yLjA1LTQuNzgtNC42NC00Ljk2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFdiSW5jYW5kZXNjZW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zLjU1IDE4LjU0bDEuNDEgMS40MSAxLjc5LTEuOC0xLjQxLTEuNDEtMS43OSAxLjh6TTExIDIyLjQ1aDJWMTkuNWgtMnYyLjk1ek00IDEwLjVIMXYyaDN2LTJ6bTExLTQuMTlWMS41SDl2NC44MUM3LjIxIDcuMzUgNiA5LjI4IDYgMTEuNWMwIDMuMzEgMi42OSA2IDYgNnM2LTIuNjkgNi02YzAtMi4yMi0xLjIxLTQuMTUtMy01LjE5em01IDQuMTl2Mmgzdi0yaC0zem0tMi43NiA3LjY2bDEuNzkgMS44IDEuNDEtMS40MS0xLjgtMS43OS0xLjQgMS40elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFdiSXJpZGVzY2VudCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNSAxNC41aDE0di02SDV2NnpNMTEgLjU1VjMuNWgyVi41NWgtMnptOC4wNCAyLjVsLTEuNzkgMS43OSAxLjQxIDEuNDEgMS44LTEuNzktMS40Mi0xLjQxek0xMyAyMi40NVYxOS41aC0ydjIuOTVoMnptNy40NS0zLjkxbC0xLjgtMS43OS0xLjQxIDEuNDEgMS43OSAxLjggMS40Mi0xLjQyek0zLjU1IDQuNDZsMS43OSAxLjc5IDEuNDEtMS40MS0xLjc5LTEuNzktMS40MSAxLjQxem0xLjQxIDE1LjQ5bDEuNzktMS44LTEuNDEtMS40MS0xLjc5IDEuNzkgMS40MSAxLjQyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFdiU3VubnkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYuNzYgNC44NGwtMS44LTEuNzktMS40MSAxLjQxIDEuNzkgMS43OSAxLjQyLTEuNDF6TTQgMTAuNUgxdjJoM3YtMnptOS05Ljk1aC0yVjMuNWgyVi41NXptNy40NSAzLjkxbC0xLjQxLTEuNDEtMS43OSAxLjc5IDEuNDEgMS40MSAxLjc5LTEuNzl6bS0zLjIxIDEzLjdsMS43OSAxLjggMS40MS0xLjQxLTEuOC0xLjc5LTEuNCAxLjR6TTIwIDEwLjV2Mmgzdi0yaC0zem0tOC01Yy0zLjMxIDAtNiAyLjY5LTYgNnMyLjY5IDYgNiA2IDYtMi42OSA2LTYtMi42OS02LTYtNnptLTEgMTYuOTVoMlYxOS41aC0ydjIuOTV6bS03LjQ1LTMuOTFsMS40MSAxLjQxIDEuNzktMS44LTEuNDEtMS40MS0xLjc5IDEuOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBZGRMb2NhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM4LjE0IDIgNSA1LjE0IDUgOWMwIDUuMjUgNyAxMyA3IDEzczctNy43NSA3LTEzYzAtMy44Ni0zLjE0LTctNy03em00IDhoLTN2M2gtMnYtM0g4VjhoM1Y1aDJ2M2gzdjJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmVlbmhlcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDFINWMtMS4xIDAtMS45OS45LTEuOTkgMkwzIDE1LjkzYzAgLjY5LjM1IDEuMy44OCAxLjY2TDEyIDIzbDguMTEtNS40MWMuNTMtLjM2Ljg4LS45Ny44OC0xLjY2TDIxIDNjMC0xLjEtLjktMi0yLTJ6bS05IDE1bC01LTUgMS40MS0xLjQxTDEwIDEzLjE3bDcuNTktNy41OUwxOSA3bC05IDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGlyZWN0aW9ucyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEuNzEgMTEuMjlsLTktOWMtLjM5LS4zOS0xLjAyLS4zOS0xLjQxIDBsLTkgOWMtLjM5LjM5LS4zOSAxLjAyIDAgMS40MWw5IDljLjM5LjM5IDEuMDIuMzkgMS40MSAwbDktOWMuMzktLjM4LjM5LTEuMDEgMC0xLjQxek0xNCAxNC41VjEyaC00djNIOHYtNGMwLS41NS40NS0xIDEtMWg1VjcuNWwzLjUgMy41LTMuNSAzLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGlyZWN0aW9uc0Jpa2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjUgNS41YzEuMSAwIDItLjkgMi0ycy0uOS0yLTItMi0yIC45LTIgMiAuOSAyIDIgMnpNNSAxMmMtMi44IDAtNSAyLjItNSA1czIuMiA1IDUgNSA1LTIuMiA1LTUtMi4yLTUtNS01em0wIDguNWMtMS45IDAtMy41LTEuNi0zLjUtMy41czEuNi0zLjUgMy41LTMuNSAzLjUgMS42IDMuNSAzLjUtMS42IDMuNS0zLjUgMy41em01LjgtMTBsMi40LTIuNC44LjhjMS4zIDEuMyAzIDIuMSA1LjEgMi4xVjljLTEuNSAwLTIuNy0uNi0zLjYtMS41bC0xLjktMS45Yy0uNS0uNC0xLS42LTEuNi0uNnMtMS4xLjItMS40LjZMNy44IDguNGMtLjQuNC0uNi45LS42IDEuNCAwIC42LjIgMS4xLjYgMS40TDExIDE0djVoMnYtNi4ybC0yLjItMi4zek0xOSAxMmMtMi44IDAtNSAyLjItNSA1czIuMiA1IDUgNSA1LTIuMiA1LTUtMi4yLTUtNS01em0wIDguNWMtMS45IDAtMy41LTEuNi0zLjUtMy41czEuNi0zLjUgMy41LTMuNSAzLjUgMS42IDMuNSAzLjUtMS42IDMuNS0zLjUgMy41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERpcmVjdGlvbnNCb2F0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAyMWMtMS4zOSAwLTIuNzgtLjQ3LTQtMS4zMi0yLjQ0IDEuNzEtNS41NiAxLjcxLTggMEM2Ljc4IDIwLjUzIDUuMzkgMjEgNCAyMUgydjJoMmMxLjM4IDAgMi43NC0uMzUgNC0uOTkgMi41MiAxLjI5IDUuNDggMS4yOSA4IDAgMS4yNi42NSAyLjYyLjk5IDQgLjk5aDJ2LTJoLTJ6TTMuOTUgMTlINGMxLjYgMCAzLjAyLS44OCA0LTIgLjk4IDEuMTIgMi40IDIgNCAyczMuMDItLjg4IDQtMmMuOTggMS4xMiAyLjQgMiA0IDJoLjA1bDEuODktNi42OGMuMDgtLjI2LjA2LS41NC0uMDYtLjc4cy0uMzQtLjQyLS42LS41TDIwIDEwLjYyVjZjMC0xLjEtLjktMi0yLTJoLTNWMUg5djNINmMtMS4xIDAtMiAuOS0yIDJ2NC42MmwtMS4yOS40MmMtLjI2LjA4LS40OC4yNi0uNi41cy0uMTUuNTItLjA2Ljc4TDMuOTUgMTl6TTYgNmgxMnYzLjk3TDEyIDggNiA5Ljk3VjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGlyZWN0aW9uc0J1cyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNCAxNmMwIC44OC4zOSAxLjY3IDEgMi4yMlYyMGMwIC41NS40NSAxIDEgMWgxYy41NSAwIDEtLjQ1IDEtMXYtMWg4djFjMCAuNTUuNDUgMSAxIDFoMWMuNTUgMCAxLS40NSAxLTF2LTEuNzhjLjYxLS41NSAxLTEuMzQgMS0yLjIyVjZjMC0zLjUtMy41OC00LTgtNHMtOCAuNS04IDR2MTB6bTMuNSAxYy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTNi42NyAxNCA3LjUgMTRzMS41LjY3IDEuNSAxLjVTOC4zMyAxNyA3LjUgMTd6bTkgMGMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6bTEuNS02SDZWNmgxMnY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERpcmVjdGlvbnNDYXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjkyIDYuMDFDMTguNzIgNS40MiAxOC4xNiA1IDE3LjUgNWgtMTFjLS42NiAwLTEuMjEuNDItMS40MiAxLjAxTDMgMTJ2OGMwIC41NS40NSAxIDEgMWgxYy41NSAwIDEtLjQ1IDEtMXYtMWgxMnYxYzAgLjU1LjQ1IDEgMSAxaDFjLjU1IDAgMS0uNDUgMS0xdi04bC0yLjA4LTUuOTl6TTYuNSAxNmMtLjgzIDAtMS41LS42Ny0xLjUtMS41UzUuNjcgMTMgNi41IDEzczEuNS42NyAxLjUgMS41UzcuMzMgMTYgNi41IDE2em0xMSAwYy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXpNNSAxMWwxLjUtNC41aDExTDE5IDExSDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRGlyZWN0aW9uc1JhaWx3YXkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTUuNUM0IDE3LjQzIDUuNTcgMTkgNy41IDE5TDYgMjAuNXYuNWgxMnYtLjVMMTYuNSAxOWMxLjkzIDAgMy41LTEuNTcgMy41LTMuNVY1YzAtMy41LTMuNTgtNC04LTRzLTggLjUtOCA0djEwLjV6bTggMS41Yy0xLjEgMC0yLS45LTItMnMuOS0yIDItMiAyIC45IDIgMi0uOSAyLTIgMnptNi03SDZWNWgxMnY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERpcmVjdGlvbnNSdW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjQ5IDUuNDhjMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem0tMy42IDEzLjlsMS00LjQgMi4xIDJ2Nmgydi03LjVsLTIuMS0yIC42LTNjMS4zIDEuNSAzLjMgMi41IDUuNSAyLjV2LTJjLTEuOSAwLTMuNS0xLTQuMy0yLjRsLTEtMS42Yy0uNC0uNi0xLTEtMS43LTEtLjMgMC0uNS4xLS44LjFsLTUuMiAyLjJ2NC43aDJ2LTMuNGwxLjgtLjctMS42IDguMS00LjktMS0uNCAyIDcgMS40elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERpcmVjdGlvbnNTdWJ3YXkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJjLTQuNDIgMC04IC41LTggNHY5LjVDNCAxNy40MyA1LjU3IDE5IDcuNSAxOUw2IDIwLjV2LjVoMTJ2LS41TDE2LjUgMTljMS45MyAwIDMuNS0xLjU3IDMuNS0zLjVWNmMwLTMuNS0zLjU4LTQtOC00ek03LjUgMTdjLS44MyAwLTEuNS0uNjctMS41LTEuNVM2LjY3IDE0IDcuNSAxNHMxLjUuNjcgMS41IDEuNVM4LjMzIDE3IDcuNSAxN3ptMy41LTZINlY2aDV2NXptNS41IDZjLS44MyAwLTEuNS0uNjctMS41LTEuNXMuNjctMS41IDEuNS0xLjUgMS41LjY3IDEuNSAxLjUtLjY3IDEuNS0xLjUgMS41em0xLjUtNmgtNVY2aDV2NXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREaXJlY3Rpb25zVHJhbnNpdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMmMtNC40MiAwLTggLjUtOCA0djkuNUM0IDE3LjQzIDUuNTcgMTkgNy41IDE5TDYgMjAuNXYuNWgxMnYtLjVMMTYuNSAxOWMxLjkzIDAgMy41LTEuNTcgMy41LTMuNVY2YzAtMy41LTMuNTgtNC04LTR6TTcuNSAxN2MtLjgzIDAtMS41LS42Ny0xLjUtMS41UzYuNjcgMTQgNy41IDE0czEuNS42NyAxLjUgMS41UzguMzMgMTcgNy41IDE3em0zLjUtNkg2VjZoNXY1em01LjUgNmMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6bTEuNS02aC01VjZoNXY1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERpcmVjdGlvbnNXYWxrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMy41IDUuNWMxLjEgMCAyLS45IDItMnMtLjktMi0yLTItMiAuOS0yIDIgLjkgMiAyIDJ6TTkuOCA4LjlMNyAyM2gyLjFsMS44LTggMi4xIDJ2Nmgydi03LjVsLTIuMS0yIC42LTNDMTQuOCAxMiAxNi44IDEzIDE5IDEzdi0yYy0xLjkgMC0zLjUtMS00LjMtMi40bC0xLTEuNmMtLjQtLjYtMS0xLTEuNy0xLS4zIDAtLjUuMS0uOC4xTDYgOC4zVjEzaDJWOS42bDEuOC0uN1wifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEVkaXRMb2NhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM4LjE0IDIgNSA1LjE0IDUgOWMwIDUuMjUgNyAxMyA3IDEzczctNy43NSA3LTEzYzAtMy44Ni0zLjE0LTctNy03em0tMS41NiAxMEg5di0xLjQ0bDMuMzUtMy4zNCAxLjQzIDEuNDNMMTAuNDQgMTJ6bTQuNDUtNC40NWwtLjcuNy0xLjQ0LTEuNDQuNy0uN2MuMTUtLjE1LjM5LS4xNS41NCAwbC45LjljLjE1LjE1LjE1LjM5IDAgLjU0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEV2U3RhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuNzcgNy4yM2wuMDEtLjAxLTMuNzItMy43MkwxNSA0LjU2bDIuMTEgMi4xMWMtLjk0LjM2LTEuNjEgMS4yNi0xLjYxIDIuMzMgMCAxLjM4IDEuMTIgMi41IDIuNSAyLjUuMzYgMCAuNjktLjA4IDEtLjIxdjcuMjFjMCAuNTUtLjQ1IDEtMSAxcy0xLS40NS0xLTFWMTRjMC0xLjEtLjktMi0yLTJoLTFWNWMwLTEuMS0uOS0yLTItMkg2Yy0xLjEgMC0yIC45LTIgMnYxNmgxMHYtNy41aDEuNXY1YzAgMS4zOCAxLjEyIDIuNSAyLjUgMi41czIuNS0xLjEyIDIuNS0yLjVWOWMwLS42OS0uMjgtMS4zMi0uNzMtMS43N3pNMTggMTBjLS41NSAwLTEtLjQ1LTEtMXMuNDUtMSAxLTEgMSAuNDUgMSAxLS40NSAxLTEgMXpNOCAxOHYtNC41SDZMMTAgNnY1aDJsLTQgN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGbGlnaHQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwLjE4IDlcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAxNnYtMmwtOC01VjMuNWMwLS44My0uNjctMS41LTEuNS0xLjVTMTAgMi42NyAxMCAzLjVWOWwtOCA1djJsOC0yLjVWMTlsLTIgMS41VjIybDMuNS0xIDMuNSAxdi0xLjVMMTMgMTl2LTUuNWw4IDIuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRIb3RlbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNyAxM2MxLjY2IDAgMy0xLjM0IDMtM1M4LjY2IDcgNyA3cy0zIDEuMzQtMyAzIDEuMzQgMyAzIDN6bTEyLTZoLTh2N0gzVjVIMXYxNWgydi0zaDE4djNoMnYtOWMwLTIuMjEtMS43OS00LTQtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMYXllcnMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjk5IDE4LjU0bC03LjM3LTUuNzNMMyAxNC4wN2w5IDcgOS03LTEuNjMtMS4yNy03LjM4IDUuNzR6TTEyIDE2bDcuMzYtNS43M0wyMSA5bC05LTctOSA3IDEuNjMgMS4yN0wxMiAxNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMYXllcnNDbGVhciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuODEgMTQuOTlsMS4xOS0uOTItMS40My0xLjQzLTEuMTkuOTIgMS40MyAxLjQzem0tLjQ1LTQuNzJMMjEgOWwtOS03LTIuOTEgMi4yNyA3Ljg3IDcuODggMi40LTEuODh6TTMuMjcgMUwyIDIuMjdsNC4yMiA0LjIyTDMgOWwxLjYzIDEuMjdMMTIgMTZsMi4xLTEuNjMgMS40MyAxLjQzTDEyIDE4LjU0bC03LjM3LTUuNzNMMyAxNC4wN2w5IDcgNC45NS0zLjg1TDIwLjczIDIxIDIyIDE5LjczIDMuMjcgMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbEFjdGl2aXR5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxMmMwLTEuMS45LTIgMi0yVjZjMC0xLjEtLjktMi0yLTJINGMtMS4xIDAtMS45OS45LTEuOTkgMnY0YzEuMSAwIDEuOTkuOSAxLjk5IDJzLS44OSAyLTIgMnY0YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJ2LTRjLTEuMSAwLTItLjktMi0yem0tNC40MiA0LjhMMTIgMTQuNWwtMy41OCAyLjMgMS4wOC00LjEyLTMuMjktMi42OSA0LjI0LS4yNUwxMiA1LjhsMS41NCAzLjk1IDQuMjQuMjUtMy4yOSAyLjY5IDEuMDkgNC4xMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbEFpcnBvcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxIDE2di0ybC04LTVWMy41YzAtLjgzLS42Ny0xLjUtMS41LTEuNVMxMCAyLjY3IDEwIDMuNVY5bC04IDV2Mmw4LTIuNVYxOWwtMiAxLjVWMjJsMy41LTEgMy41IDF2LTEuNUwxMyAxOXYtNS41bDggMi41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsQXRtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSAxN2gydi0xaDFjLjU1IDAgMS0uNDUgMS0xdi0zYzAtLjU1LS40NS0xLTEtMWgtM3YtMWg0VjhoLTJWN2gtMnYxaC0xYy0uNTUgMC0xIC40NS0xIDF2M2MwIC41NS40NSAxIDEgMWgzdjFIOXYyaDJ2MXptOS0xM0g0Yy0xLjExIDAtMS45OS44OS0xLjk5IDJMMiAxOGMwIDEuMTEuODkgMiAyIDJoMTZjMS4xMSAwIDItLjg5IDItMlY2YzAtMS4xMS0uODktMi0yLTJ6bTAgMTRINFY2aDE2djEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsQmFyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSA1VjNIM3YybDggOXY1SDZ2MmgxMnYtMmgtNXYtNWw4LTl6TTcuNDMgN0w1LjY2IDVoMTIuNjlsLTEuNzggMkg3LjQzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsQ2FmZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgM0g0djEwYzAgMi4yMSAxLjc5IDQgNCA0aDZjMi4yMSAwIDQtMS43OSA0LTR2LTNoMmMxLjExIDAgMi0uODkgMi0yVjVjMC0xLjExLS44OS0yLTItMnptMCA1aC0yVjVoMnYzek0yIDIxaDE4di0ySDJ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbENhcldhc2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDVjLjgzIDAgMS41LS42NyAxLjUtMS41IDAtMS0xLjUtMi43LTEuNS0yLjdzLTEuNSAxLjctMS41IDIuN2MwIC44My42NyAxLjUgMS41IDEuNXptLTUgMGMuODMgMCAxLjUtLjY3IDEuNS0xLjUgMC0xLTEuNS0yLjctMS41LTIuN3MtMS41IDEuNy0xLjUgMi43YzAgLjgzLjY3IDEuNSAxLjUgMS41ek03IDVjLjgzIDAgMS41LS42NyAxLjUtMS41QzguNSAyLjUgNyAuOCA3IC44UzUuNSAyLjUgNS41IDMuNUM1LjUgNC4zMyA2LjE3IDUgNyA1em0xMS45MiAzLjAxQzE4LjcyIDcuNDIgMTguMTYgNyAxNy41IDdoLTExYy0uNjYgMC0xLjIxLjQyLTEuNDIgMS4wMUwzIDE0djhjMCAuNTUuNDUgMSAxIDFoMWMuNTUgMCAxLS40NSAxLTF2LTFoMTJ2MWMwIC41NS40NSAxIDEgMWgxYy41NSAwIDEtLjQ1IDEtMXYtOGwtMi4wOC01Ljk5ek02LjUgMThjLS44MyAwLTEuNS0uNjctMS41LTEuNVM1LjY3IDE1IDYuNSAxNXMxLjUuNjcgMS41IDEuNVM3LjMzIDE4IDYuNSAxOHptMTEgMGMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6TTUgMTNsMS41LTQuNWgxMUwxOSAxM0g1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsQ29udmVuaWVuY2VTdG9yZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgN1Y0SDV2M0gydjEzaDh2LTRoNHY0aDhWN2gtM3ptLTggM0g5djFoMnYxSDhWOWgyVjhIOFY3aDN2M3ptNSAyaC0xdi0yaC0yVjdoMXYyaDFWN2gxdjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jYWxEaW5pbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTguMSAxMy4zNGwyLjgzLTIuODNMMy45MSAzLjVjLTEuNTYgMS41Ni0xLjU2IDQuMDkgMCA1LjY2bDQuMTkgNC4xOHptNi43OC0xLjgxYzEuNTMuNzEgMy42OC4yMSA1LjI3LTEuMzggMS45MS0xLjkxIDIuMjgtNC42NS44MS02LjEyLTEuNDYtMS40Ni00LjItMS4xLTYuMTIuODEtMS41OSAxLjU5LTIuMDkgMy43NC0xLjM4IDUuMjdMMy43IDE5Ljg3bDEuNDEgMS40MUwxMiAxNC40MWw2Ljg4IDYuODggMS40MS0xLjQxTDEzLjQxIDEzbDEuNDctMS40N3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbERyaW5rIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDJsMi4wMSAxOC4yM0M1LjEzIDIxLjIzIDUuOTcgMjIgNyAyMmgxMGMxLjAzIDAgMS44Ny0uNzcgMS45OS0xLjc3TDIxIDJIM3ptOSAxN2MtMS42NiAwLTMtMS4zNC0zLTMgMC0yIDMtNS40IDMtNS40czMgMy40IDMgNS40YzAgMS42Ni0xLjM0IDMtMyAzem02LjMzLTExSDUuNjdsLS40NC00aDEzLjUzbC0uNDMgNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbEZsb3Jpc3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDIyYzQuOTcgMCA5LTQuMDMgOS05LTQuOTcgMC05IDQuMDMtOSA5ek01LjYgMTAuMjVjMCAxLjM4IDEuMTIgMi41IDIuNSAyLjUuNTMgMCAxLjAxLS4xNiAxLjQyLS40NGwtLjAyLjE5YzAgMS4zOCAxLjEyIDIuNSAyLjUgMi41czIuNS0xLjEyIDIuNS0yLjVsLS4wMi0uMTljLjQuMjguODkuNDQgMS40Mi40NCAxLjM4IDAgMi41LTEuMTIgMi41LTIuNSAwLTEtLjU5LTEuODUtMS40My0yLjI1Ljg0LS40IDEuNDMtMS4yNSAxLjQzLTIuMjUgMC0xLjM4LTEuMTItMi41LTIuNS0yLjUtLjUzIDAtMS4wMS4xNi0xLjQyLjQ0bC4wMi0uMTlDMTQuNSAyLjEyIDEzLjM4IDEgMTIgMVM5LjUgMi4xMiA5LjUgMy41bC4wMi4xOWMtLjQtLjI4LS44OS0uNDQtMS40Mi0uNDQtMS4zOCAwLTIuNSAxLjEyLTIuNSAyLjUgMCAxIC41OSAxLjg1IDEuNDMgMi4yNS0uODQuNC0xLjQzIDEuMjUtMS40MyAyLjI1ek0xMiA1LjVjMS4zOCAwIDIuNSAxLjEyIDIuNSAyLjVzLTEuMTIgMi41LTIuNSAyLjVTOS41IDkuMzggOS41IDhzMS4xMi0yLjUgMi41LTIuNXpNMyAxM2MwIDQuOTcgNC4wMyA5IDkgOSAwLTQuOTctNC4wMy05LTktOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbEdhc1N0YXRpb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5Ljc3IDcuMjNsLjAxLS4wMS0zLjcyLTMuNzJMMTUgNC41NmwyLjExIDIuMTFjLS45NC4zNi0xLjYxIDEuMjYtMS42MSAyLjMzIDAgMS4zOCAxLjEyIDIuNSAyLjUgMi41LjM2IDAgLjY5LS4wOCAxLS4yMXY3LjIxYzAgLjU1LS40NSAxLTEgMXMtMS0uNDUtMS0xVjE0YzAtMS4xLS45LTItMi0yaC0xVjVjMC0xLjEtLjktMi0yLTJINmMtMS4xIDAtMiAuOS0yIDJ2MTZoMTB2LTcuNWgxLjV2NWMwIDEuMzggMS4xMiAyLjUgMi41IDIuNXMyLjUtMS4xMiAyLjUtMi41VjljMC0uNjktLjI4LTEuMzItLjczLTEuNzd6TTEyIDEwSDZWNWg2djV6bTYgMGMtLjU1IDAtMS0uNDUtMS0xcy40NS0xIDEtMSAxIC40NSAxIDEtLjQ1IDEtMSAxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsR3JvY2VyeVN0b3JlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDE4Yy0xLjEgMC0xLjk5LjktMS45OSAyUzUuOSAyMiA3IDIyczItLjkgMi0yLS45LTItMi0yek0xIDJ2MmgybDMuNiA3LjU5LTEuMzUgMi40NWMtLjE2LjI4LS4yNS42MS0uMjUuOTYgMCAxLjEuOSAyIDIgMmgxMnYtMkg3LjQyYy0uMTQgMC0uMjUtLjExLS4yNS0uMjVsLjAzLS4xMi45LTEuNjNoNy40NWMuNzUgMCAxLjQxLS40MSAxLjc1LTEuMDNsMy41OC02LjQ5Yy4wOC0uMTQuMTItLjMxLjEyLS40OCAwLS41NS0uNDUtMS0xLTFINS4yMWwtLjk0LTJIMXptMTYgMTZjLTEuMSAwLTEuOTkuOS0xLjk5IDJzLjg5IDIgMS45OSAyIDItLjkgMi0yLS45LTItMi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsSG9zcGl0YWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNINWMtMS4xIDAtMS45OS45LTEuOTkgMkwzIDE5YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTEgMTFoLTR2NGgtNHYtNEg2di00aDRWNmg0djRoNHY0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsSG90ZWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTNjMS42NiAwIDMtMS4zNCAzLTNTOC42NiA3IDcgN3MtMyAxLjM0LTMgMyAxLjM0IDMgMyAzem0xMi02aC04djdIM1Y1SDF2MTVoMnYtM2gxOHYzaDJ2LTljMC0yLjIxLTEuNzktNC00LTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jYWxMYXVuZHJ5U2VydmljZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOS4xNyAxNi44M2MxLjU2IDEuNTYgNC4xIDEuNTYgNS42NiAwIDEuNTYtMS41NiAxLjU2LTQuMSAwLTUuNjZsLTUuNjYgNS42NnpNMTggMi4wMUw2IDJjLTEuMTEgMC0yIC44OS0yIDJ2MTZjMCAxLjExLjg5IDIgMiAyaDEyYzEuMTEgMCAyLS44OSAyLTJWNGMwLTEuMTEtLjg5LTEuOTktMi0xLjk5ek0xMCA0Yy41NSAwIDEgLjQ1IDEgMXMtLjQ1IDEtMSAxLTEtLjQ1LTEtMSAuNDUtMSAxLTF6TTcgNGMuNTUgMCAxIC40NSAxIDFzLS40NSAxLTEgMS0xLS40NS0xLTEgLjQ1LTEgMS0xem01IDE2Yy0zLjMxIDAtNi0yLjY5LTYtNnMyLjY5LTYgNi02IDYgMi42OSA2IDYtMi42OSA2LTYgNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbExpYnJhcnkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDExLjU1QzkuNjQgOS4zNSA2LjQ4IDggMyA4djExYzMuNDggMCA2LjY0IDEuMzUgOSAzLjU1IDIuMzYtMi4xOSA1LjUyLTMuNTUgOS0zLjU1VjhjLTMuNDggMC02LjY0IDEuMzUtOSAzLjU1ek0xMiA4YzEuNjYgMCAzLTEuMzQgMy0zcy0xLjM0LTMtMy0zLTMgMS4zNC0zIDMgMS4zNCAzIDMgM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbE1hbGwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDZoLTJjMC0yLjc2LTIuMjQtNS01LTVTNyAzLjI0IDcgNkg1Yy0xLjEgMC0xLjk5LjktMS45OSAyTDMgMjBjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY4YzAtMS4xLS45LTItMi0yem0tNy0zYzEuNjYgMCAzIDEuMzQgMyAzSDljMC0xLjY2IDEuMzQtMyAzLTN6bTAgMTBjLTIuNzYgMC01LTIuMjQtNS01aDJjMCAxLjY2IDEuMzQgMyAzIDNzMy0xLjM0IDMtM2gyYzAgMi43Ni0yLjI0IDUtNSA1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsTW92aWVzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCAzdjJoLTJWM0g4djJINlYzSDR2MThoMnYtMmgydjJoOHYtMmgydjJoMlYzaC0yek04IDE3SDZ2LTJoMnYyem0wLTRINnYtMmgydjJ6bTAtNEg2VjdoMnYyem0xMCA4aC0ydi0yaDJ2MnptMC00aC0ydi0yaDJ2MnptMC00aC0yVjdoMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsT2ZmZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIxLjQxIDExLjU4bC05LTlDMTIuMDUgMi4yMiAxMS41NSAyIDExIDJINGMtMS4xIDAtMiAuOS0yIDJ2N2MwIC41NS4yMiAxLjA1LjU5IDEuNDJsOSA5Yy4zNi4zNi44Ni41OCAxLjQxLjU4LjU1IDAgMS4wNS0uMjIgMS40MS0uNTlsNy03Yy4zNy0uMzYuNTktLjg2LjU5LTEuNDEgMC0uNTUtLjIzLTEuMDYtLjU5LTEuNDJ6TTUuNSA3QzQuNjcgNyA0IDYuMzMgNCA1LjVTNC42NyA0IDUuNSA0IDcgNC42NyA3IDUuNSA2LjMzIDcgNS41IDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jYWxQYXJraW5nIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMyAzSDZ2MThoNHYtNmgzYzMuMzEgMCA2LTIuNjkgNi02cy0yLjY5LTYtNi02em0uMiA4SDEwVjdoMy4yYzEuMSAwIDIgLjkgMiAycy0uOSAyLTIgMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbFBoYXJtYWN5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSA1aC0yLjY0bDEuMTQtMy4xNEwxNy4xNSAxbC0xLjQ2IDRIM3YybDIgNi0yIDZ2MmgxOHYtMmwtMi02IDItNlY1em0tNSA5aC0zdjNoLTJ2LTNIOHYtMmgzVjloMnYzaDN2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbFBob25lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk02LjYyIDEwLjc5YzEuNDQgMi44MyAzLjc2IDUuMTQgNi41OSA2LjU5bDIuMi0yLjJjLjI3LS4yNy42Ny0uMzYgMS4wMi0uMjQgMS4xMi4zNyAyLjMzLjU3IDMuNTcuNTcuNTUgMCAxIC40NSAxIDFWMjBjMCAuNTUtLjQ1IDEtMSAxLTkuMzkgMC0xNy03LjYxLTE3LTE3IDAtLjU1LjQ1LTEgMS0xaDMuNWMuNTUgMCAxIC40NSAxIDEgMCAxLjI1LjIgMi40NS41NyAzLjU3LjExLjM1LjAzLjc0LS4yNSAxLjAybC0yLjIgMi4yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsUGl6emEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDOC40MyAyIDUuMjMgMy41NCAzLjAxIDZMMTIgMjJsOC45OS0xNkMxOC43OCAzLjU1IDE1LjU3IDIgMTIgMnpNNyA3YzAtMS4xLjktMiAyLTJzMiAuOSAyIDItLjkgMi0yIDItMi0uOS0yLTJ6bTUgOGMtMS4xIDAtMi0uOS0yLTJzLjktMiAyLTIgMiAuOSAyIDItLjkgMi0yIDJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jYWxQbGF5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxMmMwLTEuMS45LTIgMi0yVjZjMC0xLjEtLjktMi0yLTJINGMtMS4xIDAtMS45OS45LTEuOTkgMnY0YzEuMSAwIDEuOTkuOSAxLjk5IDJzLS44OSAyLTIgMnY0YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJ2LTRjLTEuMSAwLTItLjktMi0yem0tNC40MiA0LjhMMTIgMTQuNWwtMy41OCAyLjMgMS4wOC00LjEyLTMuMjktMi42OSA0LjI0LS4yNUwxMiA1LjhsMS41NCAzLjk1IDQuMjQuMjUtMy4yOSAyLjY5IDEuMDkgNC4xMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbFBvc3RPZmZpY2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDRINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNmMwLTEuMS0uOS0yLTItMnptMCA0bC04IDUtOC01VjZsOCA1IDgtNXYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsUHJpbnRzaG9wIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSA4SDVjLTEuNjYgMC0zIDEuMzQtMyAzdjZoNHY0aDEydi00aDR2LTZjMC0xLjY2LTEuMzQtMy0zLTN6bS0zIDExSDh2LTVoOHY1em0zLTdjLS41NSAwLTEtLjQ1LTEtMXMuNDUtMSAxLTEgMSAuNDUgMSAxLS40NSAxLTEgMXptLTEtOUg2djRoMTJWM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMb2NhbFNlZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxMlwiLFwiY3lcIjpcIjEyXCIsXCJyXCI6XCIzLjJcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05IDJMNy4xNyA0SDRjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWNmMwLTEuMS0uOS0yLTItMmgtMy4xN0wxNSAySDl6bTMgMTVjLTIuNzYgMC01LTIuMjQtNS01czIuMjQtNSA1LTUgNSAyLjI0IDUgNS0yLjI0IDUtNSA1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2FsU2hpcHBpbmcgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDhoLTNWNEgzYy0xLjEgMC0yIC45LTIgMnYxMWgyYzAgMS42NiAxLjM0IDMgMyAzczMtMS4zNCAzLTNoNmMwIDEuNjYgMS4zNCAzIDMgM3MzLTEuMzQgMy0zaDJ2LTVsLTMtNHpNNiAxOC41Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXptMTMuNS05bDEuOTYgMi41SDE3VjkuNWgyLjV6bS0xLjUgOWMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTG9jYWxUYXhpIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC45MiA2LjAxQzE4LjcyIDUuNDIgMTguMTYgNSAxNy41IDVIMTVWM0g5djJINi41Yy0uNjYgMC0xLjIxLjQyLTEuNDIgMS4wMUwzIDEydjhjMCAuNTUuNDUgMSAxIDFoMWMuNTUgMCAxLS40NSAxLTF2LTFoMTJ2MWMwIC41NS40NSAxIDEgMWgxYy41NSAwIDEtLjQ1IDEtMXYtOGwtMi4wOC01Ljk5ek02LjUgMTZjLS44MyAwLTEuNS0uNjctMS41LTEuNVM1LjY3IDEzIDYuNSAxM3MxLjUuNjcgMS41IDEuNVM3LjMzIDE2IDYuNSAxNnptMTEgMGMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6TTUgMTFsMS41LTQuNWgxMUwxOSAxMUg1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE1hcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAuNSAzbC0uMTYuMDNMMTUgNS4xIDkgMyAzLjM2IDQuOWMtLjIxLjA3LS4zNi4yNS0uMzYuNDhWMjAuNWMwIC4yOC4yMi41LjUuNWwuMTYtLjAzTDkgMTguOWw2IDIuMSA1LjY0LTEuOWMuMjEtLjA3LjM2LS4yNS4zNi0uNDhWMy41YzAtLjI4LS4yMi0uNS0uNS0uNXpNMTUgMTlsLTYtMi4xMVY1bDYgMi4xMVYxOXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNeUxvY2F0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA4Yy0yLjIxIDAtNCAxLjc5LTQgNHMxLjc5IDQgNCA0IDQtMS43OSA0LTQtMS43OS00LTQtNHptOC45NCAzYy0uNDYtNC4xNy0zLjc3LTcuNDgtNy45NC03Ljk0VjFoLTJ2Mi4wNkM2LjgzIDMuNTIgMy41MiA2LjgzIDMuMDYgMTFIMXYyaDIuMDZjLjQ2IDQuMTcgMy43NyA3LjQ4IDcuOTQgNy45NFYyM2gydi0yLjA2YzQuMTctLjQ2IDcuNDgtMy43NyA3Ljk0LTcuOTRIMjN2LTJoLTIuMDZ6TTEyIDE5Yy0zLjg3IDAtNy0zLjEzLTctN3MzLjEzLTcgNy03IDcgMy4xMyA3IDctMy4xMyA3LTcgN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROYXZpZ2F0aW9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyTDQuNSAyMC4yOWwuNzEuNzFMMTIgMThsNi43OSAzIC43MS0uNzF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTmVhck1lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzTDMgMTAuNTN2Ljk4bDYuODQgMi42NUwxMi40OCAyMWguOThMMjEgM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXJzb25QaW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDJINWMtMS4xMSAwLTIgLjktMiAydjE0YzAgMS4xLjg5IDIgMiAyaDRsMyAzIDMtM2g0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6bS03IDMuM2MxLjQ5IDAgMi43IDEuMjEgMi43IDIuNyAwIDEuNDktMS4yMSAyLjctMi43IDIuNy0xLjQ5IDAtMi43LTEuMjEtMi43LTIuNyAwLTEuNDkgMS4yMS0yLjcgMi43LTIuN3pNMTggMTZINnYtLjljMC0yIDQtMy4xIDYtMy4xczYgMS4xIDYgMy4xdi45elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBlcnNvblBpbkNpcmNsZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM4LjE0IDIgNSA1LjE0IDUgOWMwIDUuMjUgNyAxMyA3IDEzczctNy43NSA3LTEzYzAtMy44Ni0zLjE0LTctNy03em0wIDJjMS4xIDAgMiAuOSAyIDIgMCAxLjExLS45IDItMiAycy0yLS44OS0yLTJjMC0xLjEuOS0yIDItMnptMCAxMGMtMS42NyAwLTMuMTQtLjg1LTQtMi4xNS4wMi0xLjMyIDIuNjctMi4wNSA0LTIuMDVzMy45OC43MyA0IDIuMDVjLS44NiAxLjMtMi4zMyAyLjE1LTQgMi4xNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaW5Ecm9wIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCA4YzAtMy4zMS0yLjY5LTYtNi02UzYgNC42OSA2IDhjMCA0LjUgNiAxMSA2IDExczYtNi41IDYtMTF6bS04IDBjMC0xLjEuOS0yIDItMnMyIC45IDIgMi0uODkgMi0yIDJjLTEuMSAwLTItLjktMi0yek01IDIwdjJoMTR2LTJINXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQbGFjZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM4LjEzIDIgNSA1LjEzIDUgOWMwIDUuMjUgNyAxMyA3IDEzczctNy43NSA3LTEzYzAtMy44Ny0zLjEzLTctNy03em0wIDkuNWMtMS4zOCAwLTIuNS0xLjEyLTIuNS0yLjVzMS4xMi0yLjUgMi41LTIuNSAyLjUgMS4xMiAyLjUgMi41LTEuMTIgMi41LTIuNSAyLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmF0ZVJldmlldyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMkg0Yy0xLjEgMC0xLjk5LjktMS45OSAyTDIgMjJsNC00aDE0YzEuMSAwIDItLjkgMi0yVjRjMC0xLjEtLjktMi0yLTJ6TTYgMTR2LTIuNDdsNi44OC02Ljg4Yy4yLS4yLjUxLS4yLjcxIDBsMS43NyAxLjc3Yy4yLjIuMi41MSAwIC43MUw4LjQ3IDE0SDZ6bTEyIDBoLTcuNWwyLTJIMTh2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSZXN0YXVyYW50IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMSA5SDlWMkg3djdINVYySDN2N2MwIDIuMTIgMS42NiAzLjg0IDMuNzUgMy45N1YyMmgyLjV2LTkuMDNDMTEuMzQgMTIuODQgMTMgMTEuMTIgMTMgOVYyaC0ydjd6bTUtM3Y4aDIuNXY4SDIxVjJjLTIuNzYgMC01IDIuMjQtNSA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlc3RhdXJhbnRNZW51IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk04LjEgMTMuMzRsMi44My0yLjgzTDMuOTEgMy41Yy0xLjU2IDEuNTYtMS41NiA0LjA5IDAgNS42Nmw0LjE5IDQuMTh6bTYuNzgtMS44MWMxLjUzLjcxIDMuNjguMjEgNS4yNy0xLjM4IDEuOTEtMS45MSAyLjI4LTQuNjUuODEtNi4xMi0xLjQ2LTEuNDYtNC4yLTEuMS02LjEyLjgxLTEuNTkgMS41OS0yLjA5IDMuNzQtMS4zOCA1LjI3TDMuNyAxOS44N2wxLjQxIDEuNDFMMTIgMTQuNDFsNi44OCA2Ljg4IDEuNDEtMS40MUwxMy40MSAxM2wxLjQ3LTEuNDd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2F0ZWxsaXRlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnpNNSA0Ljk5aDNDOCA2LjY1IDYuNjYgOCA1IDhWNC45OXpNNSAxMnYtMmMyLjc2IDAgNS0yLjI1IDUtNS4wMWgyQzEyIDguODYgOC44NyAxMiA1IDEyem0wIDZsMy41LTQuNSAyLjUgMy4wMUwxNC41IDEybDQuNSA2SDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RvcmVNYWxsRGlyZWN0b3J5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA0SDR2MmgxNlY0em0xIDEwdi0ybC0xLTVINGwtMSA1djJoMXY2aDEwdi02aDR2Nmgydi02aDF6bS05IDRINnYtNGg2djR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RyZWV0dmlldyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIuNTYgMTQuMzNjLS4zNC4yNy0uNTYuNy0uNTYgMS4xN1YyMWg3YzEuMSAwIDItLjkgMi0ydi01Ljk4Yy0uOTQtLjMzLTEuOTUtLjUyLTMtLjUyLTIuMDMgMC0zLjkzLjctNS40NCAxLjgzelwifX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMThcIixcImN5XCI6XCI2XCIsXCJyXCI6XCI1XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuNSA2YzAtMS4wOC4yNy0yLjEuNzQtM0g1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIC41NS4yMyAxLjA1LjU5IDEuNDFsOS44Mi05LjgyQzEyLjIzIDkuNDIgMTEuNSA3LjggMTEuNSA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN1YndheSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxNS41XCIsXCJjeVwiOlwiMTZcIixcInJcIjpcIjFcIn19LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjguNVwiLFwiY3lcIjpcIjE2XCIsXCJyXCI6XCIxXCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNy4wMSA5aDEwdjVoLTEwek0xNy44IDIuOEMxNiAyLjA5IDEzLjg2IDIgMTIgMmMtMS44NiAwLTQgLjA5LTUuOC44QzMuNTMgMy44NCAyIDYuMDUgMiA4Ljg2VjIyaDIwVjguODZjMC0yLjgxLTEuNTMtNS4wMi00LjItNi4wNnptLjIgMTMuMDhjMCAxLjQ1LTEuMTggMi42Mi0yLjYzIDIuNjJsMS4xMyAxLjEyVjIwSDE1bC0xLjUtMS41aC0yLjgzTDkuMTcgMjBINy41di0uMzhsMS4xMi0xLjEyQzcuMTggMTguNSA2IDE3LjMyIDYgMTUuODhWOWMwLTIuNjMgMy0zIDYtMyAzLjMyIDAgNiAuMzggNiAzdjYuODh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVGVycmFpbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQgNmwtMy43NSA1IDIuODUgMy44LTEuNiAxLjJDOS44MSAxMy43NSA3IDEwIDcgMTBsLTYgOGgyMkwxNCA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRyYWZmaWMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDEwaC0zVjguODZjMS43Mi0uNDUgMy0yIDMtMy44NmgtM1Y0YzAtLjU1LS40NS0xLTEtMUg4Yy0uNTUgMC0xIC40NS0xIDF2MUg0YzAgMS44NiAxLjI4IDMuNDEgMyAzLjg2VjEwSDRjMCAxLjg2IDEuMjggMy40MSAzIDMuODZWMTVINGMwIDEuODYgMS4yOCAzLjQxIDMgMy44NlYyMGMwIC41NS40NSAxIDEgMWg4Yy41NSAwIDEtLjQ1IDEtMXYtMS4xNGMxLjcyLS40NSAzLTIgMy0zLjg2aC0zdi0xLjE0YzEuNzItLjQ1IDMtMiAzLTMuODZ6bS04IDljLTEuMTEgMC0yLS45LTItMnMuODktMiAyLTJjMS4xIDAgMiAuOSAyIDJzLS44OSAyLTIgMnptMC01Yy0xLjExIDAtMi0uOS0yLTJzLjg5LTIgMi0yYzEuMSAwIDIgLjkgMiAycy0uODkgMi0yIDJ6bTAtNWMtMS4xMSAwLTItLjktMi0yIDAtMS4xMS44OS0yIDItMiAxLjEgMCAyIC44OSAyIDIgMCAxLjEtLjg5IDItMiAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRyYWluIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyYy00IDAtOCAuNS04IDR2OS41QzQgMTcuNDMgNS41NyAxOSA3LjUgMTlMNiAyMC41di41aDIuMjNsMi0ySDE0bDIgMmgydi0uNUwxNi41IDE5YzEuOTMgMCAzLjUtMS41NyAzLjUtMy41VjZjMC0zLjUtMy41OC00LTgtNHpNNy41IDE3Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTNi42NyAxNCA3LjUgMTRzMS41LjY3IDEuNSAxLjVTOC4zMyAxNyA3LjUgMTd6bTMuNS03SDZWNmg1djR6bTIgMFY2aDV2NGgtNXptMy41IDdjLS44MyAwLTEuNS0uNjctMS41LTEuNXMuNjctMS41IDEuNS0xLjUgMS41LjY3IDEuNSAxLjUtLjY3IDEuNS0xLjUgMS41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRyYW0gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDE2Ljk0VjguNWMwLTIuNzktMi42MS0zLjQtNi4wMS0zLjQ5bC43Ni0xLjUxSDE3VjJIN3YxLjVoNC43NWwtLjc2IDEuNTJDNy44NiA1LjExIDUgNS43MyA1IDguNXY4LjQ0YzAgMS40NSAxLjE5IDIuNjYgMi41OSAyLjk3TDYgMjEuNXYuNWgyLjIzbDItMkgxNGwyIDJoMnYtLjVMMTYuNSAyMGgtLjA4YzEuNjkgMCAyLjU4LTEuMzcgMi41OC0zLjA2em0tNyAxLjU2Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXptNS00LjVIN1Y5aDEwdjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVHJhbnNmZXJXaXRoaW5BU3RhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuNDkgMTUuNXYtMS43NUwxNCAxNi4yNWwyLjQ5IDIuNVYxN0gyMnYtMS41em0zLjAyIDQuMjVIMTR2MS41aDUuNTFWMjNMMjIgMjAuNSAxOS41MSAxOHpNOS41IDUuNWMxLjEgMCAyLS45IDItMnMtLjktMi0yLTItMiAuOS0yIDIgLjkgMiAyIDJ6TTUuNzUgOC45TDMgMjNoMi4xbDEuNzUtOEw5IDE3djZoMnYtNy41NUw4Ljk1IDEzLjRsLjYtM0MxMC44NSAxMiAxMi44IDEzIDE1IDEzdi0yYy0xLjg1IDAtMy40NS0xLTQuMzUtMi40NWwtLjk1LTEuNkM5LjM1IDYuMzUgOC43IDYgOCA2Yy0uMjUgMC0uNS4wNS0uNzUuMTVMMiA4LjNWMTNoMlY5LjY1bDEuNzUtLjc1XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kWm9vbU91dE1hcCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgM2wyLjMgMi4zLTIuODkgMi44NyAxLjQyIDEuNDJMMTguNyA2LjcgMjEgOVYzek0zIDlsMi4zLTIuMyAyLjg3IDIuODkgMS40Mi0xLjQyTDYuNyA1LjMgOSAzSDN6bTYgMTJsLTIuMy0yLjMgMi44OS0yLjg3LTEuNDItMS40Mkw1LjMgMTcuMyAzIDE1djZ6bTEyLTZsLTIuMyAyLjMtMi44Ny0yLjg5LTEuNDIgMS40MiAyLjg5IDIuODdMMTUgMjFoNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBcHBzIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDhoNFY0SDR2NHptNiAxMmg0di00aC00djR6bS02IDBoNHYtNEg0djR6bTAtNmg0di00SDR2NHptNiAwaDR2LTRoLTR2NHptNi0xMHY0aDRWNGgtNHptLTYgNGg0VjRoLTR2NHptNiA2aDR2LTRoLTR2NHptMCA2aDR2LTRoLTR2NHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBcnJvd0JhY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDExSDcuODNsNS41OS01LjU5TDEyIDRsLTggOCA4IDggMS40MS0xLjQxTDcuODMgMTNIMjB2LTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQXJyb3dEb3dud2FyZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMTJsLTEuNDEtMS40MUwxMyAxNi4xN1Y0aC0ydjEyLjE3bC01LjU4LTUuNTlMNCAxMmw4IDggOC04elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFycm93RHJvcERvd24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTBsNSA1IDUtNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBcnJvd0Ryb3BEb3duQ2lyY2xlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0wIDEybC00LTRoOGwtNCA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFycm93RHJvcFVwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03IDE0bDUtNSA1IDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQXJyb3dGb3J3YXJkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA0bC0xLjQxIDEuNDFMMTYuMTcgMTFINHYyaDEyLjE3bC01LjU4IDUuNTlMMTIgMjBsOC04elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFycm93VXB3YXJkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk00IDEybDEuNDEgMS40MUwxMSA3LjgzVjIwaDJWNy44M2w1LjU4IDUuNTlMMjAgMTJsLTgtOC04IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FuY2VsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDcgMiAyIDYuNDcgMiAxMnM0LjQ3IDEwIDEwIDEwIDEwLTQuNDcgMTAtMTBTMTcuNTMgMiAxMiAyem01IDEzLjU5TDE1LjU5IDE3IDEyIDEzLjQxIDguNDEgMTcgNyAxNS41OSAxMC41OSAxMiA3IDguNDEgOC40MSA3IDEyIDEwLjU5IDE1LjU5IDcgMTcgOC40MSAxMy40MSAxMiAxNyAxNS41OXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDaGVjayAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOSAxNi4xN0w0LjgzIDEybC0xLjQyIDEuNDFMOSAxOSAyMSA3bC0xLjQxLTEuNDF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hldnJvbkxlZnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjQxIDcuNDFMMTQgNmwtNiA2IDYgNiAxLjQxLTEuNDFMMTAuODMgMTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hldnJvblJpZ2h0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCA2TDguNTkgNy40MSAxMy4xNyAxMmwtNC41OCA0LjU5TDEwIDE4bDYtNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDbG9zZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgNi40MUwxNy41OSA1IDEyIDEwLjU5IDYuNDEgNSA1IDYuNDEgMTAuNTkgMTIgNSAxNy41OSA2LjQxIDE5IDEyIDEzLjQxIDE3LjU5IDE5IDE5IDE3LjU5IDEzLjQxIDEyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEV4cGFuZExlc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDhsLTYgNiAxLjQxIDEuNDFMMTIgMTAuODNsNC41OSA0LjU4TDE4IDE0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEV4cGFuZE1vcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjU5IDguNTlMMTIgMTMuMTcgNy40MSA4LjU5IDYgMTBsNiA2IDYtNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaXJzdFBhZ2UgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4LjQxIDE2LjU5TDEzLjgyIDEybDQuNTktNC41OUwxNyA2bC02IDYgNiA2ek02IDZoMnYxMkg2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZ1bGxzY3JlZW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTRINXY1aDV2LTJIN3YtM3ptLTItNGgyVjdoM1Y1SDV2NXptMTIgN2gtM3YyaDV2LTVoLTJ2M3pNMTQgNXYyaDN2M2gyVjVoLTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRnVsbHNjcmVlbkV4aXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgMTZoM3YzaDJ2LTVINXYyem0zLThINXYyaDVWNUg4djN6bTYgMTFoMnYtM2gzdi0yaC01djV6bTItMTFWNWgtMnY1aDVWOGgtM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRMYXN0UGFnZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41OSA3LjQxTDEwLjE4IDEybC00LjU5IDQuNTlMNyAxOGw2LTYtNi02ek0xNiA2aDJ2MTJoLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTWVudSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyAxOGgxOHYtMkgzdjJ6bTAtNWgxOHYtMkgzdjJ6bTAtN3YyaDE4VjZIM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNb3JlSG9yaXogKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTYgMTBjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yem0xMiAwYy0xLjEgMC0yIC45LTIgMnMuOSAyIDIgMiAyLS45IDItMi0uOS0yLTItMnptLTYgMGMtMS4xIDAtMiAuOS0yIDJzLjkgMiAyIDIgMi0uOSAyLTItLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTW9yZVZlcnQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDhjMS4xIDAgMi0uOSAyLTJzLS45LTItMi0yLTIgLjktMiAyIC45IDIgMiAyem0wIDJjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yem0wIDZjLTEuMSAwLTIgLjktMiAycy45IDIgMiAyIDItLjkgMi0yLS45LTItMi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJlZnJlc2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3LjY1IDYuMzVDMTYuMiA0LjkgMTQuMjEgNCAxMiA0Yy00LjQyIDAtNy45OSAzLjU4LTcuOTkgOHMzLjU3IDggNy45OSA4YzMuNzMgMCA2Ljg0LTIuNTUgNy43My02aC0yLjA4Yy0uODIgMi4zMy0zLjA0IDQtNS42NSA0LTMuMzEgMC02LTIuNjktNi02czIuNjktNiA2LTZjMS42NiAwIDMuMTQuNjkgNC4yMiAxLjc4TDEzIDExaDdWNGwtMi4zNSAyLjM1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN1YmRpcmVjdG9yeUFycm93TGVmdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEgOWwxLjQyIDEuNDJMOC44MyAxNEgxOFY0aDJ2MTJIOC44M2wzLjU5IDMuNThMMTEgMjFsLTYtNiA2LTZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3ViZGlyZWN0b3J5QXJyb3dSaWdodCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgMTVsLTYgNi0xLjQyLTEuNDJMMTUuMTcgMTZINFY0aDJ2MTBoOS4xN2wtMy41OS0zLjU4TDEzIDlsNiA2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFVuZm9sZExlc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcuNDEgMTguNTlMOC44MyAyMCAxMiAxNi44MyAxNS4xNyAyMGwxLjQxLTEuNDFMMTIgMTRsLTQuNTkgNC41OXptOS4xOC0xMy4xOEwxNS4xNyA0IDEyIDcuMTcgOC44MyA0IDcuNDEgNS40MSAxMiAxMGw0LjU5LTQuNTl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kVW5mb2xkTW9yZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNS44M0wxNS4xNyA5bDEuNDEtMS40MUwxMiAzIDcuNDEgNy41OSA4LjgzIDkgMTIgNS44M3ptMCAxMi4zNEw4LjgzIDE1bC0xLjQxIDEuNDFMMTIgMjFsNC41OS00LjU5TDE1LjE3IDE1IDEyIDE4LjE3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFkYiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNSAxNmMwIDMuODcgMy4xMyA3IDcgN3M3LTMuMTMgNy03di00SDV2NHpNMTYuMTIgNC4zN2wyLjEtMi4xLS44Mi0uODMtMi4zIDIuMzFDMTQuMTYgMy4yOCAxMy4xMiAzIDEyIDNzLTIuMTYuMjgtMy4wOS43NUw2LjYgMS40NGwtLjgyLjgzIDIuMSAyLjFDNi4xNCA1LjY0IDUgNy42OCA1IDEwdjFoMTR2LTFjMC0yLjMyLTEuMTQtNC4zNi0yLjg4LTUuNjN6TTkgOWMtLjU1IDAtMS0uNDUtMS0xcy40NS0xIDEtMSAxIC40NSAxIDEtLjQ1IDEtMSAxem02IDBjLS41NSAwLTEtLjQ1LTEtMXMuNDUtMSAxLTEgMSAuNDUgMSAxLS40NSAxLTEgMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBaXJsaW5lU2VhdEZsYXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDExdjJIOVY3aDljMi4yMSAwIDQgMS43OSA0IDR6TTIgMTR2Mmg2djJoOHYtMmg2di0ySDJ6bTUuMTQtMS45YzEuMTYtMS4xOSAxLjE0LTMuMDgtLjA0LTQuMjQtMS4xOS0xLjE2LTMuMDgtMS4xNC00LjI0LjA0LTEuMTYgMS4xOS0xLjE0IDMuMDguMDQgNC4yNCAxLjE5IDEuMTYgMy4wOCAxLjE0IDQuMjQtLjA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFpcmxpbmVTZWF0RmxhdEFuZ2xlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjIuMjUgMTQuMjlsLS42OSAxLjg5TDkuMiAxMS43MWwyLjA4LTUuNjYgOC41NiAzLjA5YzIuMS43NiAzLjE4IDMuMDYgMi40MSA1LjE1ek0xLjUgMTIuMTRMOCAxNC40OFYxOWg4di0xLjYzTDIwLjUyIDE5bC42OS0xLjg5LTE5LjAyLTYuODYtLjY5IDEuODl6bTUuOC0xLjk0YzEuNDktLjcyIDIuMTItMi41MSAxLjQxLTRDNy45OSA0LjcxIDYuMiA0LjA4IDQuNyA0LjhjLTEuNDkuNzEtMi4xMiAyLjUtMS40IDQgLjcxIDEuNDkgMi41IDIuMTIgNCAxLjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWlybGluZVNlYXRJbmRpdmlkdWFsU3VpdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTcgMTNjMS42NSAwIDMtMS4zNSAzLTNTOC42NSA3IDcgN3MtMyAxLjM1LTMgMyAxLjM1IDMgMyAzem0xMi02aC04djdIM1Y3SDF2MTBoMjJ2LTZjMC0yLjIxLTEuNzktNC00LTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWlybGluZVNlYXRMZWdyb29tRXh0cmEgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTQgMTJWM0gydjljMCAyLjc2IDIuMjQgNSA1IDVoNnYtMkg3Yy0xLjY2IDAtMy0xLjM0LTMtM3ptMTguODMgNS4yNGMtLjM4LS43Mi0xLjI5LS45Ny0yLjAzLS42M2wtMS4wOS41LTMuNDEtNi45OGMtLjM0LS42OC0xLjAzLTEuMTItMS43OS0xLjEyTDExIDlWM0g1djhjMCAxLjY2IDEuMzQgMyAzIDNoN2wzLjQxIDcgMy43Mi0xLjdjLjc3LS4zNiAxLjEtMS4zLjctMi4wNnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRBaXJsaW5lU2VhdExlZ3Jvb21Ob3JtYWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTUgMTJWM0gzdjljMCAyLjc2IDIuMjQgNSA1IDVoNnYtMkg4Yy0xLjY2IDAtMy0xLjM0LTMtM3ptMTUuNSA2SDE5di03YzAtMS4xLS45LTItMi0yaC01VjNINnY4YzAgMS42NSAxLjM1IDMgMyAzaDd2N2g0LjVjLjgzIDAgMS41LS42NyAxLjUtMS41cy0uNjctMS41LTEuNS0xLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWlybGluZVNlYXRMZWdyb29tUmVkdWNlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkuOTcgMTkuMmMuMTguOTYtLjU1IDEuOC0xLjQ3IDEuOEgxNHYtM2wxLTRIOWMtMS42NSAwLTMtMS4zNS0zLTNWM2g2djZoNWMxLjEgMCAyIC45IDIgMmwtMiA3aDEuNDRjLjczIDAgMS4zOS40OSAxLjUzIDEuMnpNNSAxMlYzSDN2OWMwIDIuNzYgMi4yNCA1IDUgNWg0di0ySDhjLTEuNjYgMC0zLTEuMzQtMy0zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFpcmxpbmVTZWF0UmVjbGluZUV4dHJhIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk01LjM1IDUuNjRjLS45LS42NC0xLjEyLTEuODgtLjQ5LTIuNzkuNjMtLjkgMS44OC0xLjEyIDIuNzktLjQ5LjkuNjQgMS4xMiAxLjg4LjQ5IDIuNzktLjY0LjktMS44OCAxLjEyLTIuNzkuNDl6TTE2IDE5SDguOTNjLTEuNDggMC0yLjc0LTEuMDgtMi45Ni0yLjU0TDQgN0gybDEuOTkgOS43NkM0LjM3IDE5LjIgNi40NyAyMSA4Ljk0IDIxSDE2di0yem0uMjMtNGgtNC44OGwtMS4wMy00LjFjMS41OC44OSAzLjI4IDEuNTQgNS4xNSAxLjIyVjkuOTljLTEuNjMuMzEtMy40NC0uMjctNC42OS0xLjI1TDkuMTQgNy40N2MtLjIzLS4xOC0uNDktLjMtLjc2LS4zOC0uMzItLjA5LS42Ni0uMTItLjk5LS4wNmgtLjAyYy0xLjIzLjIyLTIuMDUgMS4zOS0xLjg0IDIuNjFsMS4zNSA1LjkyQzcuMTYgMTYuOTggOC4zOSAxOCA5LjgzIDE4aDYuODVsMy44MiAzIDEuNS0xLjUtNS43Ny00LjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWlybGluZVNlYXRSZWNsaW5lTm9ybWFsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03LjU5IDUuNDFjLS43OC0uNzgtLjc4LTIuMDUgMC0yLjgzLjc4LS43OCAyLjA1LS43OCAyLjgzIDAgLjc4Ljc4Ljc4IDIuMDUgMCAyLjgzLS43OS43OS0yLjA1Ljc5LTIuODMgMHpNNiAxNlY3SDR2OWMwIDIuNzYgMi4yNCA1IDUgNWg2di0ySDljLTEuNjYgMC0zLTEuMzQtMy0zem0xNCA0LjA3TDE0LjkzIDE1SDExLjV2LTMuNjhjMS40IDEuMTUgMy42IDIuMTYgNS41IDIuMTZ2LTIuMTZjLTEuNjYuMDItMy42MS0uODctNC42Ny0yLjA0bC0xLjQtMS41NWMtLjE5LS4yMS0uNDMtLjM4LS42OS0uNS0uMjktLjE0LS42Mi0uMjMtLjk2LS4yM2gtLjAzQzguMDEgNyA3IDguMDEgNyA5LjI1VjE1YzAgMS42NiAxLjM0IDMgMyAzaDUuMDdsMy41IDMuNUwyMCAyMC4wN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRCbHVldG9vdGhBdWRpbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTQuMjQgMTIuMDFsMi4zMiAyLjMyYy4yOC0uNzIuNDQtMS41MS40NC0yLjMzIDAtLjgyLS4xNi0xLjU5LS40My0yLjMxbC0yLjMzIDIuMzJ6bTUuMjktNS4zbC0xLjI2IDEuMjZjLjYzIDEuMjEuOTggMi41Ny45OCA0LjAycy0uMzYgMi44Mi0uOTggNC4wMmwxLjIgMS4yYy45Ny0xLjU0IDEuNTQtMy4zNiAxLjU0LTUuMzEtLjAxLTEuODktLjU1LTMuNjctMS40OC01LjE5em0tMy44MiAxTDEwIDJIOXY3LjU5TDQuNDEgNSAzIDYuNDEgOC41OSAxMiAzIDE3LjU5IDQuNDEgMTkgOSAxNC40MVYyMmgxbDUuNzEtNS43MS00LjMtNC4yOSA0LjMtNC4yOXpNMTEgNS44M2wxLjg4IDEuODhMMTEgOS41OVY1Ljgzem0xLjg4IDEwLjQ2TDExIDE4LjE3di0zLjc2bDEuODggMS44OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDb25maXJtYXRpb25OdW1iZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDEwVjZjMC0xLjExLS45LTItMi0ySDRjLTEuMSAwLTEuOTkuODktMS45OSAydjRjMS4xIDAgMS45OS45IDEuOTkgMnMtLjg5IDItMiAydjRjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMnYtNGMtMS4xIDAtMi0uOS0yLTJzLjktMiAyLTJ6bS05IDcuNWgtMnYtMmgydjJ6bTAtNC41aC0ydi0yaDJ2MnptMC00LjVoLTJ2LTJoMnYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERpc2NGdWxsIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxNmgydi0yaC0ydjJ6bTAtOXY1aDJWN2gtMnpNMTAgNGMtNC40MiAwLTggMy41OC04IDhzMy41OCA4IDggOCA4LTMuNTggOC04LTMuNTgtOC04LTh6bTAgMTBjLTEuMSAwLTItLjktMi0ycy45LTIgMi0yIDIgLjkgMiAyLS45IDItMiAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERvTm90RGlzdHVyYiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgMkM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptMCAxOGMtNC40MiAwLTgtMy41OC04LTggMC0xLjg1LjYzLTMuNTUgMS42OS00LjlMMTYuOSAxOC4zMUMxNS41NSAxOS4zNyAxMy44NSAyMCAxMiAyMHptNi4zMS0zLjFMNy4xIDUuNjlDOC40NSA0LjYzIDEwLjE1IDQgMTIgNGM0LjQyIDAgOCAzLjU4IDggOCAwIDEuODUtLjYzIDMuNTUtMS42OSA0Ljl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRG9Ob3REaXN0dXJiQWx0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNSAyIDIgNi41IDIgMTJzNC41IDEwIDEwIDEwIDEwLTQuNSAxMC0xMFMxNy41IDIgMTIgMnpNNCAxMmMwLTQuNCAzLjYtOCA4LTggMS44IDAgMy41LjYgNC45IDEuN0w1LjcgMTYuOUM0LjYgMTUuNSA0IDEzLjggNCAxMnptOCA4Yy0xLjggMC0zLjUtLjYtNC45LTEuN0wxOC4zIDcuMUMxOS40IDguNSAyMCAxMC4yIDIwIDEyYzAgNC40LTMuNiA4LTggOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREb05vdERpc3R1cmJPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDExdjJoLTEuNDZsNC42OCA0LjY4QzIxLjM0IDE2LjA3IDIyIDE0LjExIDIyIDEyYzAtNS41Mi00LjQ4LTEwLTEwLTEwLTIuMTEgMC00LjA3LjY2LTUuNjggMS43OEwxMy41NCAxMUgxN3pNMi4yNyAyLjI3TDEgMy41NGwyLjc4IDIuNzhDMi42NiA3LjkzIDIgOS44OSAyIDEyYzAgNS41MiA0LjQ4IDEwIDEwIDEwIDIuMTEgMCA0LjA3LS42NiA1LjY4LTEuNzhMMjAuNDYgMjNsMS4yNy0xLjI3TDExIDExIDIuMjcgMi4yN3pNNyAxM3YtMmgxLjQ2bDIgMkg3elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZERvTm90RGlzdHVyYk9uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem01IDExSDd2LTJoMTB2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWREcml2ZUV0YSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTguOTIgNS4wMUMxOC43MiA0LjQyIDE4LjE2IDQgMTcuNSA0aC0xMWMtLjY2IDAtMS4yMS40Mi0xLjQyIDEuMDFMMyAxMXY4YzAgLjU1LjQ1IDEgMSAxaDFjLjU1IDAgMS0uNDUgMS0xdi0xaDEydjFjMCAuNTUuNDUgMSAxIDFoMWMuNTUgMCAxLS40NSAxLTF2LThsLTIuMDgtNS45OXpNNi41IDE1Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTNS42NyAxMiA2LjUgMTJzMS41LjY3IDEuNSAxLjVTNy4zMyAxNSA2LjUgMTV6bTExIDBjLS44MyAwLTEuNS0uNjctMS41LTEuNXMuNjctMS41IDEuNS0xLjUgMS41LjY3IDEuNSAxLjUtLjY3IDEuNS0xLjUgMS41ek01IDEwbDEuNS00LjVoMTFMMTkgMTBINXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFbmhhbmNlZEVuY3J5cHRpb24gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDhoLTFWNmMwLTIuNzYtMi4yNC01LTUtNVM3IDMuMjQgNyA2djJINmMtMS4xIDAtMiAuOS0yIDJ2MTBjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlYxMGMwLTEuMS0uOS0yLTItMnpNOC45IDZjMC0xLjcxIDEuMzktMy4xIDMuMS0zLjFzMy4xIDEuMzkgMy4xIDMuMXYySDguOVY2ek0xNiAxNmgtM3YzaC0ydi0zSDh2LTJoM3YtM2gydjNoM3YyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEV2ZW50QXZhaWxhYmxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNi41MyAxMS4wNkwxNS40NyAxMGwtNC44OCA0Ljg4LTIuMTItMi4xMi0xLjA2IDEuMDZMMTAuNTkgMTdsNS45NC01Ljk0ek0xOSAzaC0xVjFoLTJ2Mkg4VjFINnYySDVjLTEuMTEgMC0xLjk5LjktMS45OSAyTDMgMTljMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkg1VjhoMTR2MTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRXZlbnRCdXN5IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk05LjMxIDE3bDIuNDQtMi40NEwxNC4xOSAxN2wxLjA2LTEuMDYtMi40NC0yLjQ0IDIuNDQtMi40NEwxNC4xOSAxMGwtMi40NCAyLjQ0TDkuMzEgMTBsLTEuMDYgMS4wNiAyLjQ0IDIuNDQtMi40NCAyLjQ0TDkuMzEgMTd6TTE5IDNoLTFWMWgtMnYySDhWMUg2djJINWMtMS4xMSAwLTEuOTkuOS0xLjk5IDJMMyAxOWMwIDEuMS44OSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yem0wIDE2SDVWOGgxNHYxMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRFdmVudE5vdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDEwSDd2MmgxMHYtMnptMi03aC0xVjFoLTJ2Mkg4VjFINnYySDVjLTEuMTEgMC0xLjk5LjktMS45OSAyTDMgMTljMCAxLjEuODkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptMCAxNkg1VjhoMTR2MTF6bS01LTVIN3YyaDd2LTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRm9sZGVyU3BlY2lhbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgNmgtOGwtMi0ySDRjLTEuMSAwLTIgLjktMiAydjEyYzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWOGMwLTEuMS0uOS0yLTItMnptLTIuMDYgMTFMMTUgMTUuMjggMTIuMDYgMTdsLjc4LTMuMzMtMi41OS0yLjI0IDMuNDEtLjI5TDE1IDhsMS4zNCAzLjE0IDMuNDEuMjktMi41OSAyLjI0Ljc4IDMuMzN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTGl2ZVR2IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSA2aC03LjU5bDMuMjktMy4yOUwxNiAybC00IDQtNC00LS43MS43MUwxMC41OSA2SDNjLTEuMSAwLTIgLjg5LTIgMnYxMmMwIDEuMS45IDIgMiAyaDE4YzEuMSAwIDItLjkgMi0yVjhjMC0xLjExLS45LTItMi0yem0wIDE0SDNWOGgxOHYxMnpNOSAxMHY4bDctNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNbXMgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yek01IDE0bDMuNS00LjUgMi41IDMuMDFMMTQuNSA4bDQuNSA2SDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTW9yZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjIgM0g3Yy0uNjkgMC0xLjIzLjM1LTEuNTkuODhMMCAxMmw1LjQxIDguMTFjLjM2LjUzLjk3Ljg5IDEuNjYuODlIMjJjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnpNOSAxMy41Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXptNSAwYy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXptNSAwYy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROZXR3b3JrQ2hlY2sgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjkgNWMtLjE3IDAtLjMyLjA5LS40MS4yM2wtLjA3LjE1LTUuMTggMTEuNjVjLS4xNi4yOS0uMjYuNjEtLjI2Ljk2IDAgMS4xMS45IDIuMDEgMi4wMSAyLjAxLjk2IDAgMS43Ny0uNjggMS45Ni0xLjU5bC4wMS0uMDNMMTYuNCA1LjVjMC0uMjgtLjIyLS41LS41LS41ek0xIDlsMiAyYzIuODgtMi44OCA2Ljc5LTQuMDggMTAuNTMtMy42MmwxLjE5LTIuNjhDOS44OSAzLjg0IDQuNzQgNS4yNyAxIDl6bTIwIDJsMi0yYy0xLjY0LTEuNjQtMy41NS0yLjgyLTUuNTktMy41N2wtLjUzIDIuODJjMS41LjYyIDIuOSAxLjUzIDQuMTIgMi43NXptLTQgNGwyLTJjLS44LS44LTEuNy0xLjQyLTIuNjYtMS44OWwtLjU1IDIuOTJjLjQyLjI3LjgzLjU5IDEuMjEuOTd6TTUgMTNsMiAyYzEuMTMtMS4xMyAyLjU2LTEuNzkgNC4wMy0ybDEuMjgtMi44OGMtMi42My0uMDgtNS4zLjg3LTcuMzEgMi44OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROZXR3b3JrTG9ja2VkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOS41IDEwYy4xNyAwIC4zMy4wMy41LjA1VjFMMSAyMGgxM3YtM2MwLS44OS4zOS0xLjY4IDEtMi4yM3YtLjI3YzAtMi40OCAyLjAyLTQuNSA0LjUtNC41em0yLjUgNnYtMS41YzAtMS4zOC0xLjEyLTIuNS0yLjUtMi41UzE3IDEzLjEyIDE3IDE0LjVWMTZjLS41NSAwLTEgLjQ1LTEgMXY0YzAgLjU1LjQ1IDEgMSAxaDVjLjU1IDAgMS0uNDUgMS0xdi00YzAtLjU1LS40NS0xLTEtMXptLTEgMGgtM3YtMS41YzAtLjgzLjY3LTEuNSAxLjUtMS41czEuNS42NyAxLjUgMS41VjE2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5vRW5jcnlwdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgMjEuNzhMNC4yMiA1IDMgNi4yMmwyLjA0IDIuMDRDNC40MiA4LjYgNCA5LjI1IDQgMTB2MTBjMCAxLjEuOSAyIDIgMmgxMmMuMjMgMCAuNDUtLjA1LjY2LS4xMkwxOS43OCAyMyAyMSAyMS43OHpNOC45IDZjMC0xLjcxIDEuMzktMy4xIDMuMS0zLjFzMy4xIDEuMzkgMy4xIDMuMXYySDkuNjZMMjAgMTguMzRWMTBjMC0xLjEtLjktMi0yLTJoLTFWNmMwLTIuNzYtMi4yNC01LTUtNS0yLjU2IDAtNC42NCAxLjkzLTQuOTQgNC40TDguOSA3LjI0VjZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kT25kZW1hbmRWaWRlbyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjEgM0gzYy0xLjExIDAtMiAuODktMiAydjEyYzAgMS4xLjg5IDIgMiAyaDV2Mmg4di0yaDVjMS4xIDAgMS45OS0uOSAxLjk5LTJMMjMgNWMwLTEuMTEtLjktMi0yLTJ6bTAgMTRIM1Y1aDE4djEyem0tNS02bC03IDRWN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXJzb25hbFZpZGVvIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMSAzSDNjLTEuMTEgMC0yIC44OS0yIDJ2MTJjMCAxLjEuODkgMiAyIDJoNXYyaDh2LTJoNWMxLjEgMCAxLjk5LS45IDEuOTktMkwyMyA1YzAtMS4xMS0uOS0yLTItMnptMCAxNEgzVjVoMTh2MTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvbmVCbHVldG9vdGhTcGVha2VyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNC43MSA5LjVMMTcgNy4yMVYxMWguNWwyLjg1LTIuODVMMTguMjEgNmwyLjE1LTIuMTVMMTcuNSAxSDE3djMuNzlMMTQuNzEgMi41bC0uNzEuNzFMMTYuNzkgNiAxNCA4Ljc5bC43MS43MXpNMTggMi45MWwuOTQuOTQtLjk0Ljk0VjIuOTF6bTAgNC4zbC45NC45NC0uOTQuOTRWNy4yMXptMiA4LjI5Yy0xLjI1IDAtMi40NS0uMi0zLjU3LS41Ny0uMzUtLjExLS43NC0uMDMtMS4wMi4yNGwtMi4yIDIuMmMtMi44My0xLjQ0LTUuMTUtMy43NS02LjU5LTYuNTlsMi4yLTIuMjFjLjI4LS4yNi4zNi0uNjUuMjUtMUM4LjcgNi40NSA4LjUgNS4yNSA4LjUgNGMwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxIDAgOS4zOSA3LjYxIDE3IDE3IDE3IC41NSAwIDEtLjQ1IDEtMXYtMy41YzAtLjU1LS40NS0xLTEtMXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaG9uZUZvcndhcmRlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTggMTFsNS01LTUtNXYzaC00djRoNHYzem0yIDQuNWMtMS4yNSAwLTIuNDUtLjItMy41Ny0uNTctLjM1LS4xMS0uNzQtLjAzLTEuMDIuMjRsLTIuMiAyLjJjLTIuODMtMS40NC01LjE1LTMuNzUtNi41OS02LjU5bDIuMi0yLjIxYy4yOC0uMjYuMzYtLjY1LjI1LTFDOC43IDYuNDUgOC41IDUuMjUgOC41IDRjMC0uNTUtLjQ1LTEtMS0xSDRjLS41NSAwLTEgLjQ1LTEgMSAwIDkuMzkgNy42MSAxNyAxNyAxNyAuNTUgMCAxLS40NSAxLTF2LTMuNWMwLS41NS0uNDUtMS0xLTF6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGhvbmVJblRhbGsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDE1LjVjLTEuMjUgMC0yLjQ1LS4yLTMuNTctLjU3LS4zNS0uMTEtLjc0LS4wMy0xLjAyLjI0bC0yLjIgMi4yYy0yLjgzLTEuNDQtNS4xNS0zLjc1LTYuNTktNi41OWwyLjItMi4yMWMuMjgtLjI2LjM2LS42NS4yNS0xQzguNyA2LjQ1IDguNSA1LjI1IDguNSA0YzAtLjU1LS40NS0xLTEtMUg0Yy0uNTUgMC0xIC40NS0xIDEgMCA5LjM5IDcuNjEgMTcgMTcgMTcgLjU1IDAgMS0uNDUgMS0xdi0zLjVjMC0uNTUtLjQ1LTEtMS0xek0xOSAxMmgyYzAtNC45Ny00LjAzLTktOS05djJjMy44NyAwIDcgMy4xMyA3IDd6bS00IDBoMmMwLTIuNzYtMi4yNC01LTUtNXYyYzEuNjYgMCAzIDEuMzQgMyAzelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBob25lTG9ja2VkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAxNS41Yy0xLjI1IDAtMi40NS0uMi0zLjU3LS41Ny0uMzUtLjExLS43NC0uMDMtMS4wMi4yNGwtMi4yIDIuMmMtMi44My0xLjQ0LTUuMTUtMy43NS02LjU5LTYuNTlsMi4yLTIuMjFjLjI4LS4yNi4zNi0uNjUuMjUtMUM4LjcgNi40NSA4LjUgNS4yNSA4LjUgNGMwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxIDAgOS4zOSA3LjYxIDE3IDE3IDE3IC41NSAwIDEtLjQ1IDEtMXYtMy41YzAtLjU1LS40NS0xLTEtMXpNMjAgNHYtLjVDMjAgMi4xMiAxOC44OCAxIDE3LjUgMVMxNSAyLjEyIDE1IDMuNVY0Yy0uNTUgMC0xIC40NS0xIDF2NGMwIC41NS40NSAxIDEgMWg1Yy41NSAwIDEtLjQ1IDEtMVY1YzAtLjU1LS40NS0xLTEtMXptLS44IDBoLTMuNHYtLjVjMC0uOTQuNzYtMS43IDEuNy0xLjdzMS43Ljc2IDEuNyAxLjdWNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaG9uZU1pc3NlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNi41IDUuNUwxMiAxMWw3LTctMS0xLTYgNi00LjUtNC41SDExVjNINXY2aDEuNVY1LjV6bTE3LjIxIDExLjE3QzIwLjY2IDEzLjc4IDE2LjU0IDEyIDEyIDEyIDcuNDYgMTIgMy4zNCAxMy43OC4yOSAxNi42N2MtLjE4LjE4LS4yOS40My0uMjkuNzFzLjExLjUzLjI5LjcxbDIuNDggMi40OGMuMTguMTguNDMuMjkuNzEuMjkuMjcgMCAuNTItLjExLjctLjI4Ljc5LS43NCAxLjY5LTEuMzYgMi42Ni0xLjg1LjMzLS4xNi41Ni0uNS41Ni0uOXYtMy4xYzEuNDUtLjQ4IDMtLjczIDQuNi0uNzMgMS42IDAgMy4xNS4yNSA0LjYuNzJ2My4xYzAgLjM5LjIzLjc0LjU2LjkuOTguNDkgMS44NyAxLjEyIDIuNjcgMS44NS4xOC4xOC40My4yOC43LjI4LjI4IDAgLjUzLS4xMS43MS0uMjlsMi40OC0yLjQ4Yy4xOC0uMTguMjktLjQzLjI5LS43MXMtLjEyLS41Mi0uMy0uN3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQaG9uZVBhdXNlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTcgM2gtMnY3aDJWM3ptMyAxMi41Yy0xLjI1IDAtMi40NS0uMi0zLjU3LS41Ny0uMzUtLjExLS43NC0uMDMtMS4wMi4yNGwtMi4yIDIuMmMtMi44My0xLjQ0LTUuMTUtMy43NS02LjU5LTYuNTlsMi4yLTIuMjFjLjI4LS4yNi4zNi0uNjUuMjUtMUM4LjcgNi40NSA4LjUgNS4yNSA4LjUgNGMwLS41NS0uNDUtMS0xLTFINGMtLjU1IDAtMSAuNDUtMSAxIDAgOS4zOSA3LjYxIDE3IDE3IDE3IC41NSAwIDEtLjQ1IDEtMXYtMy41YzAtLjU1LS40NS0xLTEtMXpNMTkgM3Y3aDJWM2gtMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQb3dlciAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTYuMDEgN0wxNiAzaC0ydjRoLTRWM0g4djRoLS4wMUM3IDYuOTkgNiA3Ljk5IDYgOC45OXY1LjQ5TDkuNSAxOHYzaDV2LTNsMy41LTMuNTF2LTUuNWMwLTEtMS0yLTEuOTktMS45OXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQcmlvcml0eUhpZ2ggKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTJcIixcImN5XCI6XCIxOVwiLFwiclwiOlwiMlwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDNoNHYxMmgtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSdkhvb2t1cCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjAgMTd2LTZjMC0xLjEtLjktMi0yLTJIN1Y3bC0zIDMgMyAzdi0yaDR2M0g0djNjMCAxLjEuOSAyIDIgMmgyYzAgMS42NiAxLjM0IDMgMyAzczMtMS4zNCAzLTNoOHYtMmgtMnptLTkgM2MtLjU1IDAtMS0uNDUtMS0xcy40NS0xIDEtMSAxIC40NSAxIDEtLjQ1IDEtMSAxem03LTZoLTR2LTNoNHYzek0xNyAydjJIOXYyaDh2MmwzLTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2RDYXJkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCAyaC04TDQuMDIgOCA0IDIwYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTYgNmgtMlY0aDJ2NHptMyAwaC0yVjRoMnY0em0zIDBoLTJWNGgydjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2ltQ2FyZEFsZXJ0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOCAyaC04TDQuMDIgOCA0IDIwYzAgMS4xLjkgMiAyIDJoMTJjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnptLTUgMTVoLTJ2LTJoMnYyem0wLTRoLTJWOGgydjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU21zIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCAySDRjLTEuMSAwLTEuOTkuOS0xLjk5IDJMMiAyMmw0LTRoMTRjMS4xIDAgMi0uOSAyLTJWNGMwLTEuMS0uOS0yLTItMnpNOSAxMUg3VjloMnYyem00IDBoLTJWOWgydjJ6bTQgMGgtMlY5aDJ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTbXNGYWlsZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tNyAxMmgtMnYtMmgydjJ6bTAtNGgtMlY2aDJ2NHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTeW5jIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA0VjFMOCA1bDQgNFY2YzMuMzEgMCA2IDIuNjkgNiA2IDAgMS4wMS0uMjUgMS45Ny0uNyAyLjhsMS40NiAxLjQ2QzE5LjU0IDE1LjAzIDIwIDEzLjU3IDIwIDEyYzAtNC40Mi0zLjU4LTgtOC04em0wIDE0Yy0zLjMxIDAtNi0yLjY5LTYtNiAwLTEuMDEuMjUtMS45Ny43LTIuOEw1LjI0IDcuNzRDNC40NiA4Ljk3IDQgMTAuNDMgNCAxMmMwIDQuNDIgMy41OCA4IDggOHYzbDQtNC00LTR2M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTeW5jRGlzYWJsZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEwIDYuMzVWNC4yNmMtLjguMjEtMS41NS41NC0yLjIzLjk2bDEuNDYgMS40NmMuMjUtLjEyLjUtLjI0Ljc3LS4zM3ptLTcuMTQtLjk0bDIuMzYgMi4zNkM0LjQ1IDguOTkgNCAxMC40NCA0IDEyYzAgMi4yMS45MSA0LjIgMi4zNiA1LjY0TDQgMjBoNnYtNmwtMi4yNCAyLjI0QzYuNjggMTUuMTUgNiAxMy42NiA2IDEyYzAtMSAuMjUtMS45NC42OC0yLjc3bDguMDggOC4wOGMtLjI1LjEzLS41LjI1LS43Ny4zNHYyLjA5Yy44LS4yMSAxLjU1LS41NCAyLjIzLS45NmwyLjM2IDIuMzYgMS4yNy0xLjI3TDQuMTQgNC4xNCAyLjg2IDUuNDF6TTIwIDRoLTZ2NmwyLjI0LTIuMjRDMTcuMzIgOC44NSAxOCAxMC4zNCAxOCAxMmMwIDEtLjI1IDEuOTQtLjY4IDIuNzdsMS40NiAxLjQ2QzE5LjU1IDE1LjAxIDIwIDEzLjU2IDIwIDEyYzAtMi4yMS0uOTEtNC4yLTIuMzYtNS42NEwyMCA0elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN5bmNQcm9ibGVtIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0zIDEyYzAgMi4yMS45MSA0LjIgMi4zNiA1LjY0TDMgMjBoNnYtNmwtMi4yNCAyLjI0QzUuNjggMTUuMTUgNSAxMy42NiA1IDEyYzAtMi42MSAxLjY3LTQuODMgNC01LjY1VjQuMjZDNS41NSA1LjE1IDMgOC4yNyAzIDEyem04IDVoMnYtMmgtMnYyek0yMSA0aC02djZsMi4yNC0yLjI0QzE4LjMyIDguODUgMTkgMTAuMzQgMTkgMTJjMCAyLjYxLTEuNjcgNC44My00IDUuNjV2Mi4wOWMzLjQ1LS44OSA2LTQuMDEgNi03Ljc0IDAtMi4yMS0uOTEtNC4yLTIuMzYtNS42NEwyMSA0em0tMTAgOWgyVjdoLTJ2NnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTeXN0ZW1VcGRhdGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE3IDEuMDFMNyAxYy0xLjEgMC0yIC45LTIgMnYxOGMwIDEuMS45IDIgMiAyaDEwYzEuMSAwIDItLjkgMi0yVjNjMC0xLjEtLjktMS45OS0yLTEuOTl6TTE3IDE5SDdWNWgxMHYxNHptLTEtNmgtM1Y4aC0ydjVIOGw0IDQgNC00elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRhcEFuZFBsYXkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIgMTZ2MmMyLjc2IDAgNSAyLjI0IDUgNWgyYzAtMy44Ny0zLjEzLTctNy03em0wIDR2M2gzYzAtMS42Ni0xLjM0LTMtMy0zem0wLTh2MmM0Ljk3IDAgOSA0LjAzIDkgOWgyYzAtNi4wOC00LjkyLTExLTExLTExek0xNyAxLjAxTDcgMWMtMS4xIDAtMiAuOS0yIDJ2Ny4zN2MuNjkuMTYgMS4zNi4zNyAyIC42NFY1aDEwdjEzaC0zLjAzYy41MiAxLjI1Ljg0IDIuNTkuOTUgNEgxN2MxLjEgMCAyLS45IDItMlYzYzAtMS4xLS45LTEuOTktMi0xLjk5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFRpbWVUb0xlYXZlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC45MiA1LjAxQzE4LjcyIDQuNDIgMTguMTYgNCAxNy41IDRoLTExYy0uNjYgMC0xLjIxLjQyLTEuNDIgMS4wMUwzIDExdjhjMCAuNTUuNDUgMSAxIDFoMWMuNTUgMCAxLS40NSAxLTF2LTFoMTJ2MWMwIC41NS40NSAxIDEgMWgxYy41NSAwIDEtLjQ1IDEtMXYtOGwtMi4wOC01Ljk5ek02LjUgMTVjLS44MyAwLTEuNS0uNjctMS41LTEuNVM1LjY3IDEyIDYuNSAxMnMxLjUuNjcgMS41IDEuNVM3LjMzIDE1IDYuNSAxNXptMTEgMGMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6TTUgMTBsMS41LTQuNWgxMUwxOSAxMEg1elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFZpYnJhdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMCAxNWgyVjlIMHY2em0zIDJoMlY3SDN2MTB6bTE5LTh2NmgyVjloLTJ6bS0zIDhoMlY3aC0ydjEwek0xNi41IDNoLTlDNi42NyAzIDYgMy42NyA2IDQuNXYxNWMwIC44My42NyAxLjUgMS41IDEuNWg5Yy44MyAwIDEuNS0uNjcgMS41LTEuNXYtMTVjMC0uODMtLjY3LTEuNS0xLjUtMS41ek0xNiAxOUg4VjVoOHYxNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWb2ljZUNoYXQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDJINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDIybDQtNGgxNGMxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0tMiAxMmwtNC0zLjJWMTRINlY2aDh2My4yTDE4IDZ2OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRWcG5Mb2NrIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiA0di0uNUMyMiAyLjEyIDIwLjg4IDEgMTkuNSAxUzE3IDIuMTIgMTcgMy41VjRjLS41NSAwLTEgLjQ1LTEgMXY0YzAgLjU1LjQ1IDEgMSAxaDVjLjU1IDAgMS0uNDUgMS0xVjVjMC0uNTUtLjQ1LTEtMS0xem0tLjggMGgtMy40di0uNWMwLS45NC43Ni0xLjcgMS43LTEuN3MxLjcuNzYgMS43IDEuN1Y0em0tMi4yOCA4Yy4wNC4zMy4wOC42Ni4wOCAxIDAgMi4wOC0uOCAzLjk3LTIuMSA1LjM5LS4yNi0uODEtMS0xLjM5LTEuOS0xLjM5aC0xdi0zYzAtLjU1LS40NS0xLTEtMUg3di0yaDJjLjU1IDAgMS0uNDUgMS0xVjhoMmMxLjEgMCAyLS45IDItMlYzLjQ2Yy0uOTUtLjMtMS45NS0uNDYtMy0uNDZDNS40OCAzIDEgNy40OCAxIDEzczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMGMwLS4zNC0uMDItLjY3LS4wNS0xaC0yLjAzek0xMCAyMC45M2MtMy45NS0uNDktNy0zLjg1LTctNy45MyAwLS42Mi4wOC0xLjIxLjIxLTEuNzlMOCAxNnYxYzAgMS4xLjkgMiAyIDJ2MS45M3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXYyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNS41IDIydi03LjVINFY5YzAtMS4xLjktMiAyLTJoM2MxLjEgMCAyIC45IDIgMnY1LjVIOS41VjIyaC00ek0xOCAyMnYtNmgzbC0yLjU0LTcuNjNDMTguMTggNy41NSAxNy40MiA3IDE2LjU2IDdoLS4xMmMtLjg2IDAtMS42My41NS0xLjkgMS4zN0wxMiAxNmgzdjZoM3pNNy41IDZjMS4xMSAwIDItLjg5IDItMnMtLjg5LTItMi0yLTIgLjg5LTIgMiAuODkgMiAyIDJ6bTkgMGMxLjExIDAgMi0uODkgMi0ycy0uODktMi0yLTItMiAuODktMiAyIC44OSAyIDIgMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXaWZpIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xIDlsMiAyYzQuOTctNC45NyAxMy4wMy00Ljk3IDE4IDBsMi0yQzE2LjkzIDIuOTMgNy4wOCAyLjkzIDEgOXptOCA4bDMgMyAzLTNjLTEuNjUtMS42Ni00LjM0LTEuNjYtNiAwem0tNC00bDIgMmMyLjc2LTIuNzYgNy4yNC0yLjc2IDEwIDBsMi0yQzE1LjE0IDkuMTQgOC44NyA5LjE0IDUgMTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWNVbml0IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMiAxMWgtNC4xN2wzLjI0LTMuMjQtMS40MS0xLjQyTDE1IDExaC0yVjlsNC42Ni00LjY2LTEuNDItMS40MUwxMyA2LjE3VjJoLTJ2NC4xN0w3Ljc2IDIuOTMgNi4zNCA0LjM0IDExIDl2Mkg5TDQuMzQgNi4zNCAyLjkzIDcuNzYgNi4xNyAxMUgydjJoNC4xN2wtMy4yNCAzLjI0IDEuNDEgMS40Mkw5IDEzaDJ2MmwtNC42NiA0LjY2IDEuNDIgMS40MUwxMSAxNy44M1YyMmgydi00LjE3bDMuMjQgMy4yNCAxLjQyLTEuNDFMMTMgMTV2LTJoMmw0LjY2IDQuNjYgMS40MS0xLjQyTDE3LjgzIDEzSDIyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEFpcnBvcnRTaHV0dGxlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyA1SDNjLTEuMSAwLTIgLjg5LTIgMnY5aDJjMCAxLjY1IDEuMzQgMyAzIDNzMy0xLjM1IDMtM2g1LjVjMCAxLjY1IDEuMzQgMyAzIDNzMy0xLjM1IDMtM0gyM3YtNWwtNi02ek0zIDExVjdoNHY0SDN6bTMgNi41Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXptNy02LjVIOVY3aDR2NHptNC41IDYuNWMtLjgzIDAtMS41LS42Ny0xLjUtMS41cy42Ny0xLjUgMS41LTEuNSAxLjUuNjcgMS41IDEuNS0uNjcgMS41LTEuNSAxLjV6TTE1IDExVjdoMWw0IDRoLTV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQWxsSW5jbHVzaXZlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOC42IDYuNjJjLTEuNDQgMC0yLjguNTYtMy43NyAxLjUzTDEyIDEwLjY2IDEwLjQ4IDEyaC4wMUw3LjggMTQuMzljLS42NC42NC0xLjQ5Ljk5LTIuNC45OS0xLjg3IDAtMy4zOS0xLjUxLTMuMzktMy4zOFMzLjUzIDguNjIgNS40IDguNjJjLjkxIDAgMS43Ni4zNSAyLjQ0IDEuMDNsMS4xMyAxIDEuNTEtMS4zNEw5LjIyIDguMkM4LjIgNy4xOCA2Ljg0IDYuNjIgNS40IDYuNjIgMi40MiA2LjYyIDAgOS4wNCAwIDEyczIuNDIgNS4zOCA1LjQgNS4zOGMxLjQ0IDAgMi44LS41NiAzLjc3LTEuNTNsMi44My0yLjUuMDEuMDFMMTMuNTIgMTJoLS4wMWwyLjY5LTIuMzljLjY0LS42NCAxLjQ5LS45OSAyLjQtLjk5IDEuODcgMCAzLjM5IDEuNTEgMy4zOSAzLjM4cy0xLjUyIDMuMzgtMy4zOSAzLjM4Yy0uOSAwLTEuNzYtLjM1LTIuNDQtMS4wM2wtMS4xNC0xLjAxLTEuNTEgMS4zNCAxLjI3IDEuMTJjMS4wMiAxLjAxIDIuMzcgMS41NyAzLjgyIDEuNTcgMi45OCAwIDUuNC0yLjQxIDUuNC01LjM4cy0yLjQyLTUuMzctNS40LTUuMzd6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQmVhY2hBY2Nlc3MgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzLjEyNyAxNC41NmwxLjQzLTEuNDMgNi40NCA2LjQ0M0wxOS41NyAyMXptNC4yOTMtNS43M2wyLjg2LTIuODZjLTMuOTUtMy45NS0xMC4zNS0zLjk2LTE0LjMtLjAyIDMuOTMtMS4zIDguMzEtLjI1IDExLjQ0IDIuODh6TTUuOTUgNS45OGMtMy45NCAzLjk1LTMuOTMgMTAuMzUuMDIgMTQuM2wyLjg2LTIuODZDNS43IDE0LjI5IDQuNjUgOS45MSA1Ljk1IDUuOTh6bS4wMi0uMDJsLS4wMS4wMWMtLjM4IDMuMDEgMS4xNyA2Ljg4IDQuMyAxMC4wMmw1LjczLTUuNzNjLTMuMTMtMy4xMy03LjAxLTQuNjgtMTAuMDItNC4zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEJ1c2luZXNzQ2VudGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCAxNnYtMUgzLjAxTDMgMTljMCAxLjExLjg5IDIgMiAyaDE0YzEuMTEgMCAyLS44OSAyLTJ2LTRoLTd2MWgtNHptMTAtOWgtNC4wMVY1bC0yLTJoLTRsLTIgMnYySDRjLTEuMSAwLTIgLjktMiAydjNjMCAxLjExLjg5IDIgMiAyaDZ2LTJoNHYyaDZjMS4xIDAgMi0uOSAyLTJWOWMwLTEuMS0uOS0yLTItMnptLTYgMGgtNFY1aDR2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRDYXNpbm8gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDNINWMtMS4xIDAtMiAuOS0yIDJ2MTRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY1YzAtMS4xLS45LTItMi0yek03LjUgMThjLS44MyAwLTEuNS0uNjctMS41LTEuNVM2LjY3IDE1IDcuNSAxNXMxLjUuNjcgMS41IDEuNVM4LjMzIDE4IDcuNSAxOHptMC05QzYuNjcgOSA2IDguMzMgNiA3LjVTNi42NyA2IDcuNSA2IDkgNi42NyA5IDcuNSA4LjMzIDkgNy41IDl6bTQuNSA0LjVjLS44MyAwLTEuNS0uNjctMS41LTEuNXMuNjctMS41IDEuNS0xLjUgMS41LjY3IDEuNSAxLjUtLjY3IDEuNS0xLjUgMS41em00LjUgNC41Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVzLjY3LTEuNSAxLjUtMS41IDEuNS42NyAxLjUgMS41LS42NyAxLjUtMS41IDEuNXptMC05Yy0uODMgMC0xLjUtLjY3LTEuNS0xLjVTMTUuNjcgNiAxNi41IDZzMS41LjY3IDEuNSAxLjVTMTcuMzMgOSAxNi41IDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hpbGRDYXJlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE0LjVcIixcImN5XCI6XCIxMC41XCIsXCJyXCI6XCIxLjI1XCJ9fSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI5LjVcIixcImN5XCI6XCIxMC41XCIsXCJyXCI6XCIxLjI1XCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjIuOTQgMTIuNjZjLjA0LS4yMS4wNi0uNDMuMDYtLjY2cy0uMDItLjQ1LS4wNi0uNjZjLS4yNS0xLjUxLTEuMzYtMi43NC0yLjgxLTMuMTctLjUzLTEuMTItMS4yOC0yLjEtMi4xOS0yLjkxQzE2LjM2IDMuODUgMTQuMjggMyAxMiAzcy00LjM2Ljg1LTUuOTQgMi4yNmMtLjkyLjgxLTEuNjcgMS44LTIuMTkgMi45MS0xLjQ1LjQzLTIuNTYgMS42NS0yLjgxIDMuMTctLjA0LjIxLS4wNi40My0uMDYuNjZzLjAyLjQ1LjA2LjY2Yy4yNSAxLjUxIDEuMzYgMi43NCAyLjgxIDMuMTcuNTIgMS4xMSAxLjI3IDIuMDkgMi4xNyAyLjg5QzcuNjIgMjAuMTQgOS43MSAyMSAxMiAyMXM0LjM4LS44NiA1Ljk3LTIuMjhjLjktLjggMS42NS0xLjc5IDIuMTctMi44OSAxLjQ0LS40MyAyLjU1LTEuNjUgMi44LTMuMTd6TTE5IDE0Yy0uMSAwLS4xOS0uMDItLjI5LS4wMy0uMi42Ny0uNDkgMS4yOS0uODYgMS44NkMxNi42IDE3Ljc0IDE0LjQ1IDE5IDEyIDE5cy00LjYtMS4yNi01Ljg1LTMuMTdjLS4zNy0uNTctLjY2LTEuMTktLjg2LTEuODYtLjEuMDEtLjE5LjAzLS4yOS4wMy0xLjEgMC0yLS45LTItMnMuOS0yIDItMmMuMSAwIC4xOS4wMi4yOS4wMy4yLS42Ny40OS0xLjI5Ljg2LTEuODZDNy40IDYuMjYgOS41NSA1IDEyIDVzNC42IDEuMjYgNS44NSAzLjE3Yy4zNy41Ny42NiAxLjE5Ljg2IDEuODYuMS0uMDEuMTktLjAzLjI5LS4wMyAxLjEgMCAyIC45IDIgMnMtLjkgMi0yIDJ6TTcuNSAxNGMuNzYgMS43NyAyLjQ5IDMgNC41IDNzMy43NC0xLjIzIDQuNS0zaC05elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENoaWxkRnJpZW5kbHkgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEzIDJ2OGg4YzAtNC40Mi0zLjU4LTgtOC04em02LjMyIDEzLjg5QzIwLjM3IDE0LjU0IDIxIDEyLjg0IDIxIDExSDYuNDRsLS45NS0ySDJ2MmgyLjIyczEuODkgNC4wNyAyLjEyIDQuNDJjLTEuMS41OS0xLjg0IDEuNzUtMS44NCAzLjA4QzQuNSAyMC40MyA2LjA3IDIyIDggMjJjMS43NiAwIDMuMjItMS4zIDMuNDYtM2gyLjA4Yy4yNCAxLjcgMS43IDMgMy40NiAzIDEuOTMgMCAzLjUtMS41NyAzLjUtMy41IDAtMS4wNC0uNDYtMS45Ny0xLjE4LTIuNjF6TTggMjBjLS44MyAwLTEuNS0uNjctMS41LTEuNVM3LjE3IDE3IDggMTdzMS41LjY3IDEuNSAxLjVTOC44MyAyMCA4IDIwem05IDBjLS44MyAwLTEuNS0uNjctMS41LTEuNVMxNi4xNyAxNyAxNyAxN3MxLjUuNjcgMS41IDEuNVMxNy44MyAyMCAxNyAyMHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRGaXRuZXNzQ2VudGVyIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMC41NyAxNC44NkwyMiAxMy40MyAyMC41NyAxMiAxNyAxNS41NyA4LjQzIDcgMTIgMy40MyAxMC41NyAyIDkuMTQgMy40MyA3LjcxIDIgNS41NyA0LjE0IDQuMTQgMi43MSAyLjcxIDQuMTRsMS40MyAxLjQzTDIgNy43MWwxLjQzIDEuNDNMMiAxMC41NyAzLjQzIDEyIDcgOC40MyAxNS41NyAxNyAxMiAyMC41NyAxMy40MyAyMmwxLjQzLTEuNDNMMTYuMjkgMjJsMi4xNC0yLjE0IDEuNDMgMS40MyAxLjQzLTEuNDMtMS40My0xLjQzTDIyIDE2LjI5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEZyZWVCcmVha2Zhc3QgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDNINHYxMGMwIDIuMjEgMS43OSA0IDQgNGg2YzIuMjEgMCA0LTEuNzkgNC00di0zaDJjMS4xMSAwIDItLjkgMi0yVjVjMC0xLjExLS44OS0yLTItMnptMCA1aC0yVjVoMnYzek00IDE5aDE2djJINHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRHb2xmQ291cnNlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE5LjVcIixcImN5XCI6XCIxOS41XCIsXCJyXCI6XCIxLjVcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNyA1LjkyTDkgMnYxOEg3di0xLjczYy0xLjc5LjM1LTMgLjk5LTMgMS43MyAwIDEuMSAyLjY5IDIgNiAyczYtLjkgNi0yYzAtLjk5LTIuMTYtMS44MS01LTEuOTdWOC45OGw2LTMuMDZ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSG90VHViIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjdcIixcImN5XCI6XCI2XCIsXCJyXCI6XCIyXCJ9fSx7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuMTUgMTJjLS4zMS0uMjItLjU5LS40Ni0uODItLjcybC0xLjQtMS41NWMtLjE5LS4yMS0uNDMtLjM4LS42OS0uNS0uMjktLjE0LS42Mi0uMjMtLjk2LS4yM2gtLjAzQzYuMDEgOSA1IDEwLjAxIDUgMTEuMjVWMTJIMnY4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJ2LThIMTEuMTV6TTcgMjBINXYtNmgydjZ6bTQgMEg5di02aDJ2NnptNCAwaC0ydi02aDJ2NnptNCAwaC0ydi02aDJ2NnptLS4zNS0xNC4xNGwtLjA3LS4wN2MtLjU3LS42Mi0uODItMS40MS0uNjctMi4yTDE4IDNoLTEuODlsLS4wNi40M2MtLjIgMS4zNi4yNyAyLjcxIDEuMyAzLjcybC4wNy4wNmMuNTcuNjIuODIgMS40MS42NyAyLjJsLS4xMS41OWgxLjkxbC4wNi0uNDNjLjIxLTEuMzYtLjI3LTIuNzEtMS4zLTMuNzF6bS00IDBsLS4wNy0uMDdjLS41Ny0uNjItLjgyLTEuNDEtLjY3LTIuMkwxNCAzaC0xLjg5bC0uMDYuNDNjLS4yIDEuMzYuMjcgMi43MSAxLjMgMy43MmwuMDcuMDZjLjU3LjYyLjgyIDEuNDEuNjcgMi4ybC0uMTEuNTloMS45MWwuMDYtLjQzYy4yMS0xLjM2LS4yNy0yLjcxLTEuMy0zLjcxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEtpdGNoZW4gKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDIuMDFMNiAyYy0xLjEgMC0yIC44OS0yIDJ2MTZjMCAxLjEuOSAyIDIgMmgxMmMxLjEgMCAyLS45IDItMlY0YzAtMS4xMS0uOS0xLjk5LTItMS45OXpNMTggMjBINnYtOS4wMmgxMlYyMHptMC0xMUg2VjRoMTJ2NXpNOCA1aDJ2M0g4em0wIDdoMnY1SDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUG9vbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMjIgMjFjLTEuMTEgMC0xLjczLS4zNy0yLjE4LS42NC0uMzctLjIyLS42LS4zNi0xLjE1LS4zNi0uNTYgMC0uNzguMTMtMS4xNS4zNi0uNDYuMjctMS4wNy42NC0yLjE4LjY0cy0xLjczLS4zNy0yLjE4LS42NGMtLjM3LS4yMi0uNi0uMzYtMS4xNS0uMzYtLjU2IDAtLjc4LjEzLTEuMTUuMzYtLjQ2LjI3LTEuMDguNjQtMi4xOS42NC0xLjExIDAtMS43My0uMzctMi4xOC0uNjQtLjM3LS4yMy0uNi0uMzYtMS4xNS0uMzZzLS43OC4xMy0xLjE1LjM2Yy0uNDYuMjctMS4wOC42NC0yLjE5LjY0di0yYy41NiAwIC43OC0uMTMgMS4xNS0uMzYuNDYtLjI3IDEuMDgtLjY0IDIuMTktLjY0czEuNzMuMzcgMi4xOC42NGMuMzcuMjMuNTkuMzYgMS4xNS4zNi41NiAwIC43OC0uMTMgMS4xNS0uMzYuNDYtLjI3IDEuMDgtLjY0IDIuMTktLjY0IDEuMTEgMCAxLjczLjM3IDIuMTguNjQuMzcuMjIuNi4zNiAxLjE1LjM2cy43OC0uMTMgMS4xNS0uMzZjLjQ1LS4yNyAxLjA3LS42NCAyLjE4LS42NHMxLjczLjM3IDIuMTguNjRjLjM3LjIzLjU5LjM2IDEuMTUuMzZ2MnptMC00LjVjLTEuMTEgMC0xLjczLS4zNy0yLjE4LS42NC0uMzctLjIyLS42LS4zNi0xLjE1LS4zNi0uNTYgMC0uNzguMTMtMS4xNS4zNi0uNDUuMjctMS4wNy42NC0yLjE4LjY0cy0xLjczLS4zNy0yLjE4LS42NGMtLjM3LS4yMi0uNi0uMzYtMS4xNS0uMzYtLjU2IDAtLjc4LjEzLTEuMTUuMzYtLjQ1LjI3LTEuMDcuNjQtMi4xOC42NHMtMS43My0uMzctMi4xOC0uNjRjLS4zNy0uMjItLjYtLjM2LTEuMTUtLjM2cy0uNzguMTMtMS4xNS4zNmMtLjQ3LjI3LTEuMDkuNjQtMi4yLjY0di0yYy41NiAwIC43OC0uMTMgMS4xNS0uMzYuNDUtLjI3IDEuMDctLjY0IDIuMTgtLjY0czEuNzMuMzcgMi4xOC42NGMuMzcuMjIuNi4zNiAxLjE1LjM2LjU2IDAgLjc4LS4xMyAxLjE1LS4zNi40NS0uMjcgMS4wNy0uNjQgMi4xOC0uNjRzMS43My4zNyAyLjE4LjY0Yy4zNy4yMi42LjM2IDEuMTUuMzZzLjc4LS4xMyAxLjE1LS4zNmMuNDUtLjI3IDEuMDctLjY0IDIuMTgtLjY0czEuNzMuMzcgMi4xOC42NGMuMzcuMjIuNi4zNiAxLjE1LjM2djJ6TTguNjcgMTJjLjU2IDAgLjc4LS4xMyAxLjE1LS4zNi40Ni0uMjcgMS4wOC0uNjQgMi4xOS0uNjQgMS4xMSAwIDEuNzMuMzcgMi4xOC42NC4zNy4yMi42LjM2IDEuMTUuMzZzLjc4LS4xMyAxLjE1LS4zNmMuMTItLjA3LjI2LS4xNS40MS0uMjNMMTAuNDggNUM4LjkzIDMuNDUgNy41IDIuOTkgNSAzdjIuNWMxLjgyLS4wMSAyLjg5LjM5IDQgMS41bDEgMS0zLjI1IDMuMjVjLjMxLjEyLjU2LjI3Ljc3LjM5LjM3LjIzLjU5LjM2IDEuMTUuMzZ6XCJ9fSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCIxNi41XCIsXCJjeVwiOlwiNS41XCIsXCJyXCI6XCIyLjVcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRSb29tU2VydmljZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMiAxN2gyMHYySDJ6bTExLjg0LTkuMjFjLjEtLjI0LjE2LS41MS4xNi0uNzkgMC0xLjEtLjktMi0yLTJzLTIgLjktMiAyYzAgLjI4LjA2LjU1LjE2Ljc5QzYuMjUgOC42IDMuMjcgMTEuOTMgMyAxNmgxOGMtLjI3LTQuMDctMy4yNS03LjQtNy4xNi04LjIxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNtb2tlRnJlZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMiA2bDYuOTkgN0gydjNoOS45OWw3IDcgMS4yNi0xLjI1LTE3LTE3em0xOC41IDdIMjJ2M2gtMS41ek0xOCAxM2gxLjV2M0gxOHptLjg1LTguMTJjLjYyLS42MSAxLTEuNDUgMS0yLjM4aC0xLjVjMCAxLjAyLS44MyAxLjg1LTEuODUgMS44NXYxLjVjMi4yNCAwIDQgMS44MyA0IDQuMDdWMTJIMjJWOS45MmMwLTIuMjMtMS4yOC00LjE1LTMuMTUtNS4wNHpNMTQuNSA4LjdoMS41M2MxLjA1IDAgMS45Ny43NCAxLjk3IDIuMDVWMTJoMS41di0xLjU5YzAtMS44LTEuNi0zLjE2LTMuNDctMy4xNkgxNC41Yy0xLjAyIDAtMS44NS0uOTgtMS44NS0ycy44My0xLjc1IDEuODUtMS43NVYyYy0xLjg1IDAtMy4zNSAxLjUtMy4zNSAzLjM1czEuNSAzLjM1IDMuMzUgMy4zNXptMi41IDcuMjNWMTNoLTIuOTN6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU21va2luZ1Jvb21zIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yIDE2aDE1djNIMnptMTguNSAwSDIydjNoLTEuNXpNMTggMTZoMS41djNIMTh6bS44NS04LjI3Yy42Mi0uNjEgMS0xLjQ1IDEtMi4zOEMxOS44NSAzLjUgMTguMzUgMiAxNi41IDJ2MS41YzEuMDIgMCAxLjg1LjgzIDEuODUgMS44NVMxNy41MiA3LjIgMTYuNSA3LjJ2MS41YzIuMjQgMCA0IDEuODMgNCA0LjA3VjE1SDIydi0yLjI0YzAtMi4yMi0xLjI4LTQuMTQtMy4xNS01LjAzem0tMi44MiAyLjQ3SDE0LjVjLTEuMDIgMC0xLjg1LS45OC0xLjg1LTJzLjgzLTEuNzUgMS44NS0xLjc1di0xLjVjLTEuODUgMC0zLjM1IDEuNS0zLjM1IDMuMzVzMS41IDMuMzUgMy4zNSAzLjM1aDEuNTNjMS4wNSAwIDEuOTcuNzQgMS45NyAyLjA1VjE1aDEuNXYtMS42NGMwLTEuODEtMS42LTMuMTYtMy40Ny0zLjE2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNwYSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOC41NSAxMmMtMS4wNy0uNzEtMi4yNS0xLjI3LTMuNTMtMS42MSAxLjI4LjM0IDIuNDYuOSAzLjUzIDEuNjF6bTEwLjQzLTEuNjFjLTEuMjkuMzQtMi40OS45MS0zLjU3IDEuNjQgMS4wOC0uNzMgMi4yOC0xLjMgMy41Ny0xLjY0elwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1LjQ5IDkuNjNjLS4xOC0yLjc5LTEuMzEtNS41MS0zLjQzLTcuNjMtMi4xNCAyLjE0LTMuMzIgNC44Ni0zLjU1IDcuNjMgMS4yOC42OCAyLjQ2IDEuNTYgMy40OSAyLjYzIDEuMDMtMS4wNiAyLjIxLTEuOTQgMy40OS0yLjYzem0tNi41IDIuNjVjLS4xNC0uMS0uMy0uMTktLjQ1LS4yOS4xNS4xMS4zMS4xOS40NS4yOXptNi40Mi0uMjVjLS4xMy4wOS0uMjcuMTYtLjQuMjYuMTMtLjEuMjctLjE3LjQtLjI2ek0xMiAxNS40NUM5Ljg1IDEyLjE3IDYuMTggMTAgMiAxMGMwIDUuMzIgMy4zNiA5LjgyIDguMDMgMTEuNDkuNjMuMjMgMS4yOS40IDEuOTcuNTEuNjgtLjEyIDEuMzMtLjI5IDEuOTctLjUxQzE4LjY0IDE5LjgyIDIyIDE1LjMyIDIyIDEwYy00LjE4IDAtNy44NSAyLjE3LTEwIDUuNDV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2FrZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNmMxLjExIDAgMi0uOSAyLTIgMC0uMzgtLjEtLjczLS4yOS0xLjAzTDEyIDBsLTEuNzEgMi45N2MtLjE5LjMtLjI5LjY1LS4yOSAxLjAzIDAgMS4xLjkgMiAyIDJ6bTQuNiA5Ljk5bC0xLjA3LTEuMDctMS4wOCAxLjA3Yy0xLjMgMS4zLTMuNTggMS4zMS00Ljg5IDBsLTEuMDctMS4wNy0xLjA5IDEuMDdDNi43NSAxNi42NCA1Ljg4IDE3IDQuOTYgMTdjLS43MyAwLTEuNC0uMjMtMS45Ni0uNjFWMjFjMCAuNTUuNDUgMSAxIDFoMTZjLjU1IDAgMS0uNDUgMS0xdi00LjYxYy0uNTYuMzgtMS4yMy42MS0xLjk2LjYxLS45MiAwLTEuNzktLjM2LTIuNDQtMS4wMXpNMTggOWgtNVY3aC0ydjJINmMtMS42NiAwLTMgMS4zNC0zIDN2MS41NGMwIDEuMDguODggMS45NiAxLjk2IDEuOTYuNTIgMCAxLjAyLS4yIDEuMzgtLjU3bDIuMTQtMi4xMyAyLjEzIDIuMTNjLjc0Ljc0IDIuMDMuNzQgMi43NyAwbDIuMTQtMi4xMyAyLjEzIDIuMTNjLjM3LjM3Ljg2LjU3IDEuMzguNTcgMS4wOCAwIDEuOTYtLjg4IDEuOTYtMS45NlYxMkMyMSAxMC4zNCAxOS42NiA5IDE4IDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kRG9tYWluIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiA3VjNIMnYxOGgyMFY3SDEyek02IDE5SDR2LTJoMnYyem0wLTRINHYtMmgydjJ6bTAtNEg0VjloMnYyem0wLTRINFY1aDJ2MnptNCAxMkg4di0yaDJ2MnptMC00SDh2LTJoMnYyem0wLTRIOFY5aDJ2MnptMC00SDhWNWgydjJ6bTEwIDEyaC04di0yaDJ2LTJoLTJ2LTJoMnYtMmgtMlY5aDh2MTB6bS0yLThoLTJ2Mmgydi0yem0wIDRoLTJ2Mmgydi0yelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZEdyb3VwIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xNiAxMWMxLjY2IDAgMi45OS0xLjM0IDIuOTktM1MxNy42NiA1IDE2IDVjLTEuNjYgMC0zIDEuMzQtMyAzczEuMzQgMyAzIDN6bS04IDBjMS42NiAwIDIuOTktMS4zNCAyLjk5LTNTOS42NiA1IDggNUM2LjM0IDUgNSA2LjM0IDUgOHMxLjM0IDMgMyAzem0wIDJjLTIuMzMgMC03IDEuMTctNyAzLjVWMTloMTR2LTIuNWMwLTIuMzMtNC42Ny0zLjUtNy0zLjV6bTggMGMtLjI5IDAtLjYyLjAyLS45Ny4wNSAxLjE2Ljg0IDEuOTcgMS45NyAxLjk3IDMuNDVWMTloNnYtMi41YzAtMi4zMy00LjY3LTMuNS03LTMuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRHcm91cEFkZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNOCAxMEg1VjdIM3YzSDB2MmgzdjNoMnYtM2gzdi0yem0xMCAxYzEuNjYgMCAyLjk5LTEuMzQgMi45OS0zUzE5LjY2IDUgMTggNWMtLjMyIDAtLjYzLjA1LS45MS4xNC41Ny44MS45IDEuNzkuOSAyLjg2cy0uMzQgMi4wNC0uOSAyLjg2Yy4yOC4wOS41OS4xNC45MS4xNHptLTUgMGMxLjY2IDAgMi45OS0xLjM0IDIuOTktM1MxNC42NiA1IDEzIDVjLTEuNjYgMC0zIDEuMzQtMyAzczEuMzQgMyAzIDN6bTYuNjIgMi4xNmMuODMuNzMgMS4zOCAxLjY2IDEuMzggMi44NHYyaDN2LTJjMC0xLjU0LTIuMzctMi40OS00LjM4LTIuODR6TTEzIDEzYy0yIDAtNiAxLTYgM3YyaDEydi0yYzAtMi00LTMtNi0zelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZExvY2F0aW9uQ2l0eSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTUgMTFWNWwtMy0zLTMgM3YySDN2MTRoMThWMTFoLTZ6bS04IDhINXYtMmgydjJ6bTAtNEg1di0yaDJ2MnptMC00SDVWOWgydjJ6bTYgOGgtMnYtMmgydjJ6bTAtNGgtMnYtMmgydjJ6bTAtNGgtMlY5aDJ2MnptMC00aC0yVjVoMnYyem02IDEyaC0ydi0yaDJ2MnptMC00aC0ydi0yaDJ2MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRNb29kIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS45OSAyQzYuNDcgMiAyIDYuNDggMiAxMnM0LjQ3IDEwIDkuOTkgMTBDMTcuNTIgMjIgMjIgMTcuNTIgMjIgMTJTMTcuNTIgMiAxMS45OSAyek0xMiAyMGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6bTMuNS05Yy44MyAwIDEuNS0uNjcgMS41LTEuNVMxNi4zMyA4IDE1LjUgOCAxNCA4LjY3IDE0IDkuNXMuNjcgMS41IDEuNSAxLjV6bS03IDBjLjgzIDAgMS41LS42NyAxLjUtMS41UzkuMzMgOCA4LjUgOCA3IDguNjcgNyA5LjUgNy42NyAxMSA4LjUgMTF6bTMuNSA2LjVjMi4zMyAwIDQuMzEtMS40NiA1LjExLTMuNUg2Ljg5Yy44IDIuMDQgMi43OCAzLjUgNS4xMSAzLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kTW9vZEJhZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTkgMkM2LjQ3IDIgMiA2LjQ4IDIgMTJzNC40NyAxMCA5Ljk5IDEwQzE3LjUyIDIyIDIyIDE3LjUyIDIyIDEyUzE3LjUyIDIgMTEuOTkgMnpNMTIgMjBjLTQuNDIgMC04LTMuNTgtOC04czMuNTgtOCA4LTggOCAzLjU4IDggOC0zLjU4IDgtOCA4em0zLjUtOWMuODMgMCAxLjUtLjY3IDEuNS0xLjVTMTYuMzMgOCAxNS41IDggMTQgOC42NyAxNCA5LjVzLjY3IDEuNSAxLjUgMS41em0tNyAwYy44MyAwIDEuNS0uNjcgMS41LTEuNVM5LjMzIDggOC41IDggNyA4LjY3IDcgOS41IDcuNjcgMTEgOC41IDExem0zLjUgM2MtMi4zMyAwLTQuMzEgMS40Ni01LjExIDMuNWgxMC4yMmMtLjgtMi4wNC0yLjc4LTMuNS01LjExLTMuNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROb3RpZmljYXRpb25zIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyMmMxLjEgMCAyLS45IDItMmgtNGMwIDEuMS44OSAyIDIgMnptNi02di01YzAtMy4wNy0xLjY0LTUuNjQtNC41LTYuMzJWNGMwLS44My0uNjctMS41LTEuNS0xLjVzLTEuNS42Ny0xLjUgMS41di42OEM3LjYzIDUuMzYgNiA3LjkyIDYgMTF2NWwtMiAydjFoMTZ2LTFsLTItMnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROb3RpZmljYXRpb25zQWN0aXZlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk03LjU4IDQuMDhMNi4xNSAyLjY1QzMuNzUgNC40OCAyLjE3IDcuMyAyLjAzIDEwLjVoMmMuMTUtMi42NSAxLjUxLTQuOTcgMy41NS02LjQyem0xMi4zOSA2LjQyaDJjLS4xNS0zLjItMS43My02LjAyLTQuMTItNy44NWwtMS40MiAxLjQzYzIuMDIgMS40NSAzLjM5IDMuNzcgMy41NCA2LjQyek0xOCAxMWMwLTMuMDctMS42NC01LjY0LTQuNS02LjMyVjRjMC0uODMtLjY3LTEuNS0xLjUtMS41cy0xLjUuNjctMS41IDEuNXYuNjhDNy42MyA1LjM2IDYgNy45MiA2IDExdjVsLTIgMnYxaDE2di0xbC0yLTJ2LTV6bS02IDExYy4xNCAwIC4yNy0uMDEuNC0uMDQuNjUtLjE0IDEuMTgtLjU4IDEuNDQtMS4xOC4xLS4yNC4xNS0uNS4xNS0uNzhoLTRjLjAxIDEuMS45IDIgMi4wMSAyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5vdGlmaWNhdGlvbnNOb25lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyMmMxLjEgMCAyLS45IDItMmgtNGMwIDEuMS45IDIgMiAyem02LTZ2LTVjMC0zLjA3LTEuNjMtNS42NC00LjUtNi4zMlY0YzAtLjgzLS42Ny0xLjUtMS41LTEuNXMtMS41LjY3LTEuNSAxLjV2LjY4QzcuNjQgNS4zNiA2IDcuOTIgNiAxMXY1bC0yIDJ2MWgxNnYtMWwtMi0yem0tMiAxSDh2LTZjMC0yLjQ4IDEuNTEtNC41IDQtNC41czQgMi4wMiA0IDQuNXY2elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZE5vdGlmaWNhdGlvbnNPZmYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIwIDE4LjY5TDcuODQgNi4xNCA1LjI3IDMuNDkgNCA0Ljc2bDIuOCAyLjh2LjAxYy0uNTIuOTktLjggMi4xNi0uOCAzLjQydjVsLTIgMnYxaDEzLjczbDIgMkwyMSAxOS43MmwtMS0xLjAzek0xMiAyMmMxLjExIDAgMi0uODkgMi0yaC00YzAgMS4xMS44OSAyIDIgMnptNi03LjMyVjExYzAtMy4wOC0xLjY0LTUuNjQtNC41LTYuMzJWNGMwLS44My0uNjctMS41LTEuNS0xLjVzLTEuNS42Ny0xLjUgMS41di42OGMtLjE1LjAzLS4yOS4wOC0uNDIuMTItLjEuMDMtLjIuMDctLjMuMTFoLS4wMWMtLjAxIDAtLjAxIDAtLjAyLjAxLS4yMy4wOS0uNDYuMi0uNjguMzEgMCAwLS4wMSAwLS4wMS4wMUwxOCAxNC42OHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWROb3RpZmljYXRpb25zUGF1c2VkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyMmMxLjEgMCAyLS45IDItMmgtNGMwIDEuMS44OSAyIDIgMnptNi02di01YzAtMy4wNy0xLjY0LTUuNjQtNC41LTYuMzJWNGMwLS44My0uNjctMS41LTEuNS0xLjVzLTEuNS42Ny0xLjUgMS41di42OEM3LjYzIDUuMzYgNiA3LjkzIDYgMTF2NWwtMiAydjFoMTZ2LTFsLTItMnptLTMuNS02LjJsLTIuOCAzLjRoMi44VjE1aC01di0xLjhsMi44LTMuNEg5LjVWOGg1djEuOHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQYWdlcyAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMyA1djZoNUw3IDdsNCAxVjNINWMtMS4xIDAtMiAuOS0yIDJ6bTUgOEgzdjZjMCAxLjEuOSAyIDIgMmg2di01bC00IDEgMS00em05IDRsLTQtMXY1aDZjMS4xIDAgMi0uOSAyLTJ2LTZoLTVsMSA0em0yLTE0aC02djVsNC0xLTEgNGg1VjVjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGFydHlNb2RlIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0yMCA0aC0zLjE3TDE1IDJIOUw3LjE3IDRINGMtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmgxNmMxLjEgMCAyLS45IDItMlY2YzAtMS4xLS45LTItMi0yem0tOCAzYzEuNjMgMCAzLjA2Ljc5IDMuOTggMkgxMmMtMS42NiAwLTMgMS4zNC0zIDMgMCAuMzUuMDcuNjkuMTggMUg3LjFjLS4wNi0uMzItLjEtLjY2LS4xLTEgMC0yLjc2IDIuMjQtNSA1LTV6bTAgMTBjLTEuNjMgMC0zLjA2LS43OS0zLjk4LTJIMTJjMS42NiAwIDMtMS4zNCAzLTMgMC0uMzUtLjA3LS42OS0uMTgtMWgyLjA4Yy4wNy4zMi4xLjY2LjEgMSAwIDIuNzYtMi4yNCA1LTUgNXpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZW9wbGUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2IDExYzEuNjYgMCAyLjk5LTEuMzQgMi45OS0zUzE3LjY2IDUgMTYgNWMtMS42NiAwLTMgMS4zNC0zIDNzMS4zNCAzIDMgM3ptLTggMGMxLjY2IDAgMi45OS0xLjM0IDIuOTktM1M5LjY2IDUgOCA1QzYuMzQgNSA1IDYuMzQgNSA4czEuMzQgMyAzIDN6bTAgMmMtMi4zMyAwLTcgMS4xNy03IDMuNVYxOWgxNHYtMi41YzAtMi4zMy00LjY3LTMuNS03LTMuNXptOCAwYy0uMjkgMC0uNjIuMDItLjk3LjA1IDEuMTYuODQgMS45NyAxLjk3IDEuOTcgMy40NVYxOWg2di0yLjVjMC0yLjMzLTQuNjctMy41LTctMy41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFBlb3BsZU91dGxpbmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE2LjUgMTNjLTEuMiAwLTMuMDcuMzQtNC41IDEtMS40My0uNjctMy4zLTEtNC41LTFDNS4zMyAxMyAxIDE0LjA4IDEgMTYuMjVWMTloMjJ2LTIuNzVjMC0yLjE3LTQuMzMtMy4yNS02LjUtMy4yNXptLTQgNC41aC0xMHYtMS4yNWMwLS41NCAyLjU2LTEuNzUgNS0xLjc1czUgMS4yMSA1IDEuNzV2MS4yNXptOSAwSDE0di0xLjI1YzAtLjQ2LS4yLS44Ni0uNTItMS4yMi44OC0uMyAxLjk2LS41MyAzLjAyLS41MyAyLjQ0IDAgNSAxLjIxIDUgMS43NXYxLjI1ek03LjUgMTJjMS45MyAwIDMuNS0xLjU3IDMuNS0zLjVTOS40MyA1IDcuNSA1IDQgNi41NyA0IDguNSA1LjU3IDEyIDcuNSAxMnptMC01LjVjMS4xIDAgMiAuOSAyIDJzLS45IDItMiAyLTItLjktMi0yIC45LTIgMi0yem05IDUuNWMxLjkzIDAgMy41LTEuNTcgMy41LTMuNVMxOC40MyA1IDE2LjUgNSAxMyA2LjU3IDEzIDguNXMxLjU3IDMuNSAzLjUgMy41em0wLTUuNWMxLjEgMCAyIC45IDIgMnMtLjkgMi0yIDItMi0uOS0yLTIgLjktMiAyLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGVyc29uIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAxMmMyLjIxIDAgNC0xLjc5IDQtNHMtMS43OS00LTQtNC00IDEuNzktNCA0IDEuNzkgNCA0IDR6bTAgMmMtMi42NyAwLTggMS4zNC04IDR2MmgxNnYtMmMwLTIuNjYtNS4zMy00LTgtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQZXJzb25BZGQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE1IDEyYzIuMjEgMCA0LTEuNzkgNC00cy0xLjc5LTQtNC00LTQgMS43OS00IDQgMS43OSA0IDQgNHptLTktMlY3SDR2M0gxdjJoM3YzaDJ2LTNoM3YtMkg2em05IDRjLTIuNjcgMC04IDEuMzQtOCA0djJoMTZ2LTJjMC0yLjY2LTUuMzMtNC04LTR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUGVyc29uT3V0bGluZSAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgNS45YzEuMTYgMCAyLjEuOTQgMi4xIDIuMXMtLjk0IDIuMS0yLjEgMi4xUzkuOSA5LjE2IDkuOSA4cy45NC0yLjEgMi4xLTIuMW0wIDljMi45NyAwIDYuMSAxLjQ2IDYuMSAyLjF2MS4xSDUuOVYxN2MwLS42NCAzLjEzLTIuMSA2LjEtMi4xTTEyIDRDOS43OSA0IDggNS43OSA4IDhzMS43OSA0IDQgNCA0LTEuNzkgNC00LTEuNzktNC00LTR6bTAgOWMtMi42NyAwLTggMS4zNC04IDR2M2gxNnYtM2MwLTIuNjYtNS4zMy00LTgtNHpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRQbHVzT25lIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMCA4SDh2NEg0djJoNHY0aDJ2LTRoNHYtMmgtNHptNC41LTEuOTJWNy45bDIuNS0uNVYxOGgyVjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUG9sbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTkgM0g1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6TTkgMTdIN3YtN2gydjd6bTQgMGgtMlY3aDJ2MTB6bTQgMGgtMnYtNGgydjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUHVibGljIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMiAyQzYuNDggMiAyIDYuNDggMiAxMnM0LjQ4IDEwIDEwIDEwIDEwLTQuNDggMTAtMTBTMTcuNTIgMiAxMiAyem0tMSAxNy45M2MtMy45NS0uNDktNy0zLjg1LTctNy45MyAwLS42Mi4wOC0xLjIxLjIxLTEuNzlMOSAxNXYxYzAgMS4xLjkgMiAyIDJ2MS45M3ptNi45LTIuNTRjLS4yNi0uODEtMS0xLjM5LTEuOS0xLjM5aC0xdi0zYzAtLjU1LS40NS0xLTEtMUg4di0yaDJjLjU1IDAgMS0uNDUgMS0xVjdoMmMxLjEgMCAyLS45IDItMnYtLjQxYzIuOTMgMS4xOSA1IDQuMDYgNSA3LjQxIDAgMi4wOC0uOCAzLjk3LTIuMSA1LjM5elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNjaG9vbCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNNSAxMy4xOHY0TDEyIDIxbDctMy44MnYtNEwxMiAxN2wtNy0zLjgyek0xMiAzTDEgOWwxMSA2IDktNC45MVYxN2gyVjlMMTIgM3pcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRTZW50aW1lbnREaXNzYXRpc2ZpZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiMTUuNVwiLFwiY3lcIjpcIjkuNVwiLFwiclwiOlwiMS41XCJ9fSx7XCJ0YWdcIjpcImNpcmNsZVwiLFwiYXR0clwiOntcImN4XCI6XCI4LjVcIixcImN5XCI6XCI5LjVcIixcInJcIjpcIjEuNVwifX0se1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTExLjk5IDJDNi40NyAyIDIgNi40OCAyIDEyczQuNDcgMTAgOS45OSAxMEMxNy41MiAyMiAyMiAxNy41MiAyMiAxMlMxNy41MiAyIDExLjk5IDJ6TTEyIDIwYy00LjQyIDAtOC0zLjU4LTgtOHMzLjU4LTggOC04IDggMy41OCA4IDgtMy41OCA4LTggOHptMC02Yy0yLjMzIDAtNC4zMiAxLjQ1LTUuMTIgMy41aDEuNjdjLjY5LTEuMTkgMS45Ny0yIDMuNDUtMnMyLjc1LjgxIDMuNDUgMmgxLjY3Yy0uOC0yLjA1LTIuNzktMy41LTUuMTItMy41elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFNlbnRpbWVudE5ldXRyYWwgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTkgMTRoNnYxLjVIOXpcIn19LHtcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE1LjVcIixcImN5XCI6XCI5LjVcIixcInJcIjpcIjEuNVwifX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOC41XCIsXCJjeVwiOlwiOS41XCIsXCJyXCI6XCIxLjVcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS45OSAyQzYuNDcgMiAyIDYuNDggMiAxMnM0LjQ3IDEwIDkuOTkgMTBDMTcuNTIgMjIgMjIgMTcuNTIgMjIgMTJTMTcuNTIgMiAxMS45OSAyek0xMiAyMGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2VudGltZW50U2F0aXNmaWVkIChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwiY2lyY2xlXCIsXCJhdHRyXCI6e1wiY3hcIjpcIjE1LjVcIixcImN5XCI6XCI5LjVcIixcInJcIjpcIjEuNVwifX0se1widGFnXCI6XCJjaXJjbGVcIixcImF0dHJcIjp7XCJjeFwiOlwiOC41XCIsXCJjeVwiOlwiOS41XCIsXCJyXCI6XCIxLjVcIn19LHtcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xMS45OSAyQzYuNDcgMiAyIDYuNDggMiAxMnM0LjQ3IDEwIDkuOTkgMTBDMTcuNTIgMjIgMjIgMTcuNTIgMjIgMTJTMTcuNTIgMiAxMS45OSAyek0xMiAyMGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6bTAtNGMtMS40OCAwLTIuNzUtLjgxLTMuNDUtMkg2Ljg4Yy44IDIuMDUgMi43OSAzLjUgNS4xMiAzLjVzNC4zMi0xLjQ1IDUuMTItMy41aC0xLjY3Yy0uNyAxLjE5LTEuOTcgMi0zLjQ1IDJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2VudGltZW50VmVyeURpc3NhdGlzZmllZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTkgMkM2LjQ3IDIgMiA2LjQ3IDIgMTJzNC40NyAxMCA5Ljk5IDEwUzIyIDE3LjUzIDIyIDEyIDE3LjUyIDIgMTEuOTkgMnpNMTIgMjBjLTQuNDIgMC04LTMuNTgtOC04czMuNTgtOCA4LTggOCAzLjU4IDggOC0zLjU4IDgtOCA4em00LjE4LTEyLjI0bC0xLjA2IDEuMDYtMS4wNi0xLjA2TDEzIDguODJsMS4wNiAxLjA2TDEzIDEwLjk0IDE0LjA2IDEybDEuMDYtMS4wNkwxNi4xOCAxMmwxLjA2LTEuMDYtMS4wNi0xLjA2IDEuMDYtMS4wNnpNNy44MiAxMmwxLjA2LTEuMDZMOS45NCAxMiAxMSAxMC45NCA5Ljk0IDkuODggMTEgOC44MiA5Ljk0IDcuNzYgOC44OCA4LjgyIDcuODIgNy43NiA2Ljc2IDguODJsMS4wNiAxLjA2LTEuMDYgMS4wNnpNMTIgMTRjLTIuMzMgMC00LjMxIDEuNDYtNS4xMSAzLjVoMTAuMjJjLS44LTIuMDQtMi43OC0zLjUtNS4xMS0zLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2VudGltZW50VmVyeVNhdGlzZmllZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTEuOTkgMkM2LjQ3IDIgMiA2LjQ3IDIgMTJzNC40NyAxMCA5Ljk5IDEwUzIyIDE3LjUzIDIyIDEyIDE3LjUyIDIgMTEuOTkgMnpNMTIgMjBjLTQuNDIgMC04LTMuNTgtOC04czMuNTgtOCA4LTggOCAzLjU4IDggOC0zLjU4IDgtOCA4em0xLTEwLjA2TDE0LjA2IDExbDEuMDYtMS4wNkwxNi4xOCAxMWwxLjA2LTEuMDYtMi4xMi0yLjEyem0tNC4xMiAwTDkuOTQgMTEgMTEgOS45NCA4Ljg4IDcuODIgNi43NiA5Ljk0IDcuODIgMTF6TTEyIDE3LjVjMi4zMyAwIDQuMzEtMS40NiA1LjExLTMuNUg2Ljg5Yy44IDIuMDQgMi43OCAzLjUgNS4xMSAzLjV6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU2hhcmUgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE4IDE2LjA4Yy0uNzYgMC0xLjQ0LjMtMS45Ni43N0w4LjkxIDEyLjdjLjA1LS4yMy4wOS0uNDYuMDktLjdzLS4wNC0uNDctLjA5LS43bDcuMDUtNC4xMWMuNTQuNSAxLjI1LjgxIDIuMDQuODEgMS42NiAwIDMtMS4zNCAzLTNzLTEuMzQtMy0zLTMtMyAxLjM0LTMgM2MwIC4yNC4wNC40Ny4wOS43TDguMDQgOS44MUM3LjUgOS4zMSA2Ljc5IDkgNiA5Yy0xLjY2IDAtMyAxLjM0LTMgM3MxLjM0IDMgMyAzYy43OSAwIDEuNS0uMzEgMi4wNC0uODFsNy4xMiA0LjE2Yy0uMDUuMjEtLjA4LjQzLS4wOC42NSAwIDEuNjEgMS4zMSAyLjkyIDIuOTIgMi45MiAxLjYxIDAgMi45Mi0xLjMxIDIuOTItMi45MnMtMS4zMS0yLjkyLTIuOTItMi45MnpcIn19XX0pKHByb3BzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gTWRXaGF0c2hvdCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTMuNS42N3MuNzQgMi42NS43NCA0LjhjMCAyLjA2LTEuMzUgMy43My0zLjQxIDMuNzMtMi4wNyAwLTMuNjMtMS42Ny0zLjYzLTMuNzNsLjAzLS4zNkM1LjIxIDcuNTEgNCAxMC42MiA0IDE0YzAgNC40MiAzLjU4IDggOCA4czgtMy41OCA4LThDMjAgOC42MSAxNy40MSAzLjggMTMuNS42N3pNMTEuNzEgMTljLTEuNzggMC0zLjIyLTEuNC0zLjIyLTMuMTQgMC0xLjYyIDEuMDUtMi43NiAyLjgxLTMuMTIgMS43Ny0uMzYgMy42LTEuMjEgNC42Mi0yLjU4LjM5IDEuMjkuNTkgMi42NS41OSA0LjA0IDAgMi42NS0yLjE1IDQuOC00LjggNC44elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZENoZWNrQm94IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMTEgMC0yIC45LTIgMnYxNGMwIDEuMS44OSAyIDIgMmgxNGMxLjExIDAgMi0uOSAyLTJWNWMwLTEuMS0uODktMi0yLTJ6bS05IDE0bC01LTUgMS40MS0xLjQxTDEwIDE0LjE3bDcuNTktNy41OUwxOSA4bC05IDl6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kQ2hlY2tCb3hPdXRsaW5lQmxhbmsgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTE5IDV2MTRINVY1aDE0bTAtMkg1Yy0xLjEgMC0yIC45LTIgMnYxNGMwIDEuMS45IDIgMiAyaDE0YzEuMSAwIDItLjkgMi0yVjVjMC0xLjEtLjktMi0yLTJ6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kSW5kZXRlcm1pbmF0ZUNoZWNrQm94IChwcm9wcykge1xuICByZXR1cm4gR2VuSWNvbih7XCJ0YWdcIjpcInN2Z1wiLFwiYXR0clwiOntcInZpZXdCb3hcIjpcIjAgMCAyNCAyNFwifSxcImNoaWxkXCI6W3tcInRhZ1wiOlwicGF0aFwiLFwiYXR0clwiOntcImRcIjpcIk0xOSAzSDVjLTEuMSAwLTIgLjktMiAydjE0YzAgMS4xLjkgMiAyIDJoMTRjMS4xIDAgMi0uOSAyLTJWNWMwLTEuMS0uOS0yLTItMnptLTIgMTBIN3YtMmgxMHYyelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFJhZGlvQnV0dG9uQ2hlY2tlZCAocHJvcHMpIHtcbiAgcmV0dXJuIEdlbkljb24oe1widGFnXCI6XCJzdmdcIixcImF0dHJcIjp7XCJ2aWV3Qm94XCI6XCIwIDAgMjQgMjRcIn0sXCJjaGlsZFwiOlt7XCJ0YWdcIjpcInBhdGhcIixcImF0dHJcIjp7XCJkXCI6XCJNMTIgN2MtMi43NiAwLTUgMi4yNC01IDVzMi4yNCA1IDUgNSA1LTIuMjQgNS01LTIuMjQtNS01LTV6bTAtNUM2LjQ4IDIgMiA2LjQ4IDIgMTJzNC40OCAxMCAxMCAxMCAxMC00LjQ4IDEwLTEwUzE3LjUyIDIgMTIgMnptMCAxOGMtNC40MiAwLTgtMy41OC04LThzMy41OC04IDgtOCA4IDMuNTggOCA4LTMuNTggOC04IDh6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kUmFkaW9CdXR0b25VbmNoZWNrZWQgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDJDNi40OCAyIDIgNi40OCAyIDEyczQuNDggMTAgMTAgMTAgMTAtNC40OCAxMC0xMFMxNy41MiAyIDEyIDJ6bTAgMThjLTQuNDIgMC04LTMuNTgtOC04czMuNTgtOCA4LTggOCAzLjU4IDggOC0zLjU4IDgtOCA4elwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0YXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTEyIDE3LjI3TDE4LjE4IDIxbC0xLjY0LTcuMDNMMjIgOS4yNGwtNy4xOS0uNjFMMTIgMiA5LjE5IDguNjMgMiA5LjI0bDUuNDYgNC43M0w1LjgyIDIxelwifX1dfSkocHJvcHMpO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBNZFN0YXJCb3JkZXIgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDkuMjRsLTcuMTktLjYyTDEyIDIgOS4xOSA4LjYzIDIgOS4yNGw1LjQ2IDQuNzNMNS44MiAyMSAxMiAxNy4yNyAxOC4xOCAyMWwtMS42My03LjAzTDIyIDkuMjR6TTEyIDE1LjRsLTMuNzYgMi4yNyAxLTQuMjgtMy4zMi0yLjg4IDQuMzgtLjM4TDEyIDYuMWwxLjcxIDQuMDQgNC4zOC4zOC0zLjMyIDIuODggMSA0LjI4TDEyIDE1LjR6XCJ9fV19KShwcm9wcyk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIE1kU3RhckhhbGYgKHByb3BzKSB7XG4gIHJldHVybiBHZW5JY29uKHtcInRhZ1wiOlwic3ZnXCIsXCJhdHRyXCI6e1widmlld0JveFwiOlwiMCAwIDI0IDI0XCJ9LFwiY2hpbGRcIjpbe1widGFnXCI6XCJwYXRoXCIsXCJhdHRyXCI6e1wiZFwiOlwiTTIyIDkuMjRsLTcuMTktLjYyTDEyIDIgOS4xOSA4LjYzIDIgOS4yNGw1LjQ2IDQuNzNMNS44MiAyMSAxMiAxNy4yNyAxOC4xOCAyMWwtMS42My03LjAzTDIyIDkuMjR6TTEyIDE1LjRWNi4xbDEuNzEgNC4wNCA0LjM4LjM4LTMuMzIgMi44OCAxIDQuMjhMMTIgMTUuNHpcIn19XX0pKHByb3BzKTtcbn07XG4iLCJleHBvcnQgY29uc3QgRkFWT1JJVEVfQk9SREVSID0gJ2Zhdm9yaXRlLWJvcmRlcic7XHJcbmV4cG9ydCBjb25zdCBGQVZPUklURV9GSUxMRUQgPSAnZmF2b3JpdGUtZmlsbGVkJztcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtNZEZhdm9yaXRlQm9yZGVyLCBNZEZhdm9yaXRlfSBmcm9tICdyZWFjdC1pY29ucy9tZCc7XHJcbmltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICcuL2NvbnN0cyc7XHJcblxyXG5leHBvcnQgY29uc3QgSWNvbiA9ICh7Y2xhc3NOYW1lLCBuYW1lLCBvbkNsaWNrfSkgPT4ge1xyXG4gICAgc3dpdGNoIChuYW1lKSB7XHJcbiAgICAgICAgY2FzZSBjb25zdHMuRkFWT1JJVEVfQk9SREVSOlxyXG4gICAgICAgICAgICByZXR1cm4gPE1kRmF2b3JpdGVCb3JkZXIgey4uLntjbGFzc05hbWUsIG9uQ2xpY2t9fS8+XHJcbiAgICAgICAgY2FzZSBjb25zdHMuRkFWT1JJVEVfRklMTEVEOlxyXG4gICAgICAgICAgICByZXR1cm4gPE1kRmF2b3JpdGUgey4uLntjbGFzc05hbWUsIG9uQ2xpY2t9fS8+XHJcbiAgICB9XHJcbn1cclxuIiwiaW1wb3J0IHtjc3N9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IHtnZXRDb2xvcn0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcblxyXG5leHBvcnQgY29uc3QgRmF2b3JpdGVJY29uID0gY3NzYFxyXG4gICAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggM3B4IDFweCAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2xpZ2h0ZXInKX07XHJcbiAgICBcclxuICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggNXB4IDJweCAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2xpZ2h0ZXInKX07XHJcbiAgICB9XHJcbmA7XHJcbiIsImltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgKiBhcyBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xyXG5pbXBvcnQge0ljb259IGZyb20gXCJAY29tbW9uLWNvbXBvbmVudHMvSWNvbi9JY29uXCI7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZhdm9yaXRlSWNvbiA9IHN0eWxlZCgoe2NsYXNzTmFtZSwgaXNGYXZvcml0ZSwgb25DbGljazogX29uQ2xpY2t9KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnN0IG9uQ2xpY2sgPSB1c2VDYWxsYmFjayhlID0+IHtcclxuICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcclxuICAgICAgICAgICAgICAgIF9vbkNsaWNrKHtpc0Zhdm9yaXRlfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAsIFtpc0Zhdm9yaXRlXSk7XHJcblxyXG4gICAgICAgIHJldHVybiA8ZGl2IHsuLi57b25DbGljaywgY2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ2ljb24td3JhcHBlcicpfX0+XHJcbiAgICAgICAgICAgIDxJY29uIHsuLi57XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBpc0Zhdm9yaXRlID8gJ2Zhdm9yaXRlLWZpbGxlZCcgOiAnZmF2b3JpdGUtYm9yZGVyJyxcclxuICAgICAgICAgICAgfX0vPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgfVxyXG4pYCR7c3R5bGVzLkZhdm9yaXRlSWNvbn1gO1xyXG4iLCJpbXBvcnQgaW52YXJpYW50IGZyb20gXCJpbnZhcmlhbnRcIjtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIHN0YXJ0c1dpdGgoc3RyaW5nLCBzZWFyY2gpIC0gQ2hlY2sgaWYgYHN0cmluZ2Agc3RhcnRzIHdpdGggYHNlYXJjaGBcbnZhciBzdGFydHNXaXRoID0gZnVuY3Rpb24gc3RhcnRzV2l0aChzdHJpbmcsIHNlYXJjaCkge1xuICByZXR1cm4gc3RyaW5nLnN1YnN0cigwLCBzZWFyY2gubGVuZ3RoKSA9PT0gc2VhcmNoO1xufTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIHBpY2socm91dGVzLCB1cmkpXG4vL1xuLy8gUmFua3MgYW5kIHBpY2tzIHRoZSBiZXN0IHJvdXRlIHRvIG1hdGNoLiBFYWNoIHNlZ21lbnQgZ2V0cyB0aGUgaGlnaGVzdFxuLy8gYW1vdW50IG9mIHBvaW50cywgdGhlbiB0aGUgdHlwZSBvZiBzZWdtZW50IGdldHMgYW4gYWRkaXRpb25hbCBhbW91bnQgb2Zcbi8vIHBvaW50cyB3aGVyZVxuLy9cbi8vICAgICBzdGF0aWMgPiBkeW5hbWljID4gc3BsYXQgPiByb290XG4vL1xuLy8gVGhpcyB3YXkgd2UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCB0aGUgb3JkZXIgb2Ygb3VyIHJvdXRlcywgbGV0IHRoZVxuLy8gY29tcHV0ZXJzIGRvIGl0LlxuLy9cbi8vIEEgcm91dGUgbG9va3MgbGlrZSB0aGlzXG4vL1xuLy8gICAgIHsgcGF0aCwgZGVmYXVsdCwgdmFsdWUgfVxuLy9cbi8vIEFuZCBhIHJldHVybmVkIG1hdGNoIGxvb2tzIGxpa2U6XG4vL1xuLy8gICAgIHsgcm91dGUsIHBhcmFtcywgdXJpIH1cbi8vXG4vLyBJIGtub3csIEkgc2hvdWxkIHVzZSBUeXBlU2NyaXB0IG5vdCBjb21tZW50cyBmb3IgdGhlc2UgdHlwZXMuXG52YXIgcGljayA9IGZ1bmN0aW9uIHBpY2socm91dGVzLCB1cmkpIHtcbiAgdmFyIG1hdGNoID0gdm9pZCAwO1xuICB2YXIgZGVmYXVsdF8gPSB2b2lkIDA7XG5cbiAgdmFyIF91cmkkc3BsaXQgPSB1cmkuc3BsaXQoXCI/XCIpLFxuICAgICAgdXJpUGF0aG5hbWUgPSBfdXJpJHNwbGl0WzBdO1xuXG4gIHZhciB1cmlTZWdtZW50cyA9IHNlZ21lbnRpemUodXJpUGF0aG5hbWUpO1xuICB2YXIgaXNSb290VXJpID0gdXJpU2VnbWVudHNbMF0gPT09IFwiXCI7XG4gIHZhciByYW5rZWQgPSByYW5rUm91dGVzKHJvdXRlcyk7XG5cbiAgZm9yICh2YXIgaSA9IDAsIGwgPSByYW5rZWQubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgdmFyIG1pc3NlZCA9IGZhbHNlO1xuICAgIHZhciByb3V0ZSA9IHJhbmtlZFtpXS5yb3V0ZTtcblxuICAgIGlmIChyb3V0ZS5kZWZhdWx0KSB7XG4gICAgICBkZWZhdWx0XyA9IHtcbiAgICAgICAgcm91dGU6IHJvdXRlLFxuICAgICAgICBwYXJhbXM6IHt9LFxuICAgICAgICB1cmk6IHVyaVxuICAgICAgfTtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIHZhciByb3V0ZVNlZ21lbnRzID0gc2VnbWVudGl6ZShyb3V0ZS5wYXRoKTtcbiAgICB2YXIgcGFyYW1zID0ge307XG4gICAgdmFyIG1heCA9IE1hdGgubWF4KHVyaVNlZ21lbnRzLmxlbmd0aCwgcm91dGVTZWdtZW50cy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IDA7XG5cbiAgICBmb3IgKDsgaW5kZXggPCBtYXg7IGluZGV4KyspIHtcbiAgICAgIHZhciByb3V0ZVNlZ21lbnQgPSByb3V0ZVNlZ21lbnRzW2luZGV4XTtcbiAgICAgIHZhciB1cmlTZWdtZW50ID0gdXJpU2VnbWVudHNbaW5kZXhdO1xuXG4gICAgICBpZiAoaXNTcGxhdChyb3V0ZVNlZ21lbnQpKSB7XG4gICAgICAgIC8vIEhpdCBhIHNwbGF0LCBqdXN0IGdyYWIgdGhlIHJlc3QsIGFuZCByZXR1cm4gYSBtYXRjaFxuICAgICAgICAvLyB1cmk6ICAgL2ZpbGVzL2RvY3VtZW50cy93b3JrXG4gICAgICAgIC8vIHJvdXRlOiAvZmlsZXMvKlxuICAgICAgICB2YXIgcGFyYW0gPSByb3V0ZVNlZ21lbnQuc2xpY2UoMSkgfHwgXCIqXCI7XG4gICAgICAgIHBhcmFtc1twYXJhbV0gPSB1cmlTZWdtZW50cy5zbGljZShpbmRleCkubWFwKGRlY29kZVVSSUNvbXBvbmVudCkuam9pbihcIi9cIik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICBpZiAodXJpU2VnbWVudCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIC8vIFVSSSBpcyBzaG9ydGVyIHRoYW4gdGhlIHJvdXRlLCBubyBtYXRjaFxuICAgICAgICAvLyB1cmk6ICAgL3VzZXJzXG4gICAgICAgIC8vIHJvdXRlOiAvdXNlcnMvOnVzZXJJZFxuICAgICAgICBtaXNzZWQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgdmFyIGR5bmFtaWNNYXRjaCA9IHBhcmFtUmUuZXhlYyhyb3V0ZVNlZ21lbnQpO1xuXG4gICAgICBpZiAoZHluYW1pY01hdGNoICYmICFpc1Jvb3RVcmkpIHtcbiAgICAgICAgdmFyIG1hdGNoSXNOb3RSZXNlcnZlZCA9IHJlc2VydmVkTmFtZXMuaW5kZXhPZihkeW5hbWljTWF0Y2hbMV0pID09PSAtMTtcbiAgICAgICAgIW1hdGNoSXNOb3RSZXNlcnZlZCA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCI8Um91dGVyPiBkeW5hbWljIHNlZ21lbnQgXFxcIlwiICsgZHluYW1pY01hdGNoWzFdICsgXCJcXFwiIGlzIGEgcmVzZXJ2ZWQgbmFtZS4gUGxlYXNlIHVzZSBhIGRpZmZlcmVudCBuYW1lIGluIHBhdGggXFxcIlwiICsgcm91dGUucGF0aCArIFwiXFxcIi5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgICB2YXIgdmFsdWUgPSBkZWNvZGVVUklDb21wb25lbnQodXJpU2VnbWVudCk7XG4gICAgICAgIHBhcmFtc1tkeW5hbWljTWF0Y2hbMV1dID0gdmFsdWU7XG4gICAgICB9IGVsc2UgaWYgKHJvdXRlU2VnbWVudCAhPT0gdXJpU2VnbWVudCkge1xuICAgICAgICAvLyBDdXJyZW50IHNlZ21lbnRzIGRvbid0IG1hdGNoLCBub3QgZHluYW1pYywgbm90IHNwbGF0LCBzbyBubyBtYXRjaFxuICAgICAgICAvLyB1cmk6ICAgL3VzZXJzLzEyMy9zZXR0aW5nc1xuICAgICAgICAvLyByb3V0ZTogL3VzZXJzLzppZC9wcm9maWxlXG4gICAgICAgIG1pc3NlZCA9IHRydWU7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghbWlzc2VkKSB7XG4gICAgICBtYXRjaCA9IHtcbiAgICAgICAgcm91dGU6IHJvdXRlLFxuICAgICAgICBwYXJhbXM6IHBhcmFtcyxcbiAgICAgICAgdXJpOiBcIi9cIiArIHVyaVNlZ21lbnRzLnNsaWNlKDAsIGluZGV4KS5qb2luKFwiL1wiKVxuICAgICAgfTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBtYXRjaCB8fCBkZWZhdWx0XyB8fCBudWxsO1xufTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIG1hdGNoKHBhdGgsIHVyaSkgLSBNYXRjaGVzIGp1c3Qgb25lIHBhdGggdG8gYSB1cmksIGFsc28gbG9sXG52YXIgbWF0Y2ggPSBmdW5jdGlvbiBtYXRjaChwYXRoLCB1cmkpIHtcbiAgcmV0dXJuIHBpY2soW3sgcGF0aDogcGF0aCB9XSwgdXJpKTtcbn07XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyByZXNvbHZlKHRvLCBiYXNlcGF0aClcbi8vXG4vLyBSZXNvbHZlcyBVUklzIGFzIHRob3VnaCBldmVyeSBwYXRoIGlzIGEgZGlyZWN0b3J5LCBubyBmaWxlcy4gIFJlbGF0aXZlIFVSSXNcbi8vIGluIHRoZSBicm93c2VyIGNhbiBmZWVsIGF3a3dhcmQgYmVjYXVzZSBub3Qgb25seSBjYW4geW91IGJlIFwiaW4gYSBkaXJlY3RvcnlcIlxuLy8geW91IGNhbiBiZSBcImF0IGEgZmlsZVwiLCB0b28uIEZvciBleGFtcGxlXG4vL1xuLy8gICAgIGJyb3dzZXJTcGVjUmVzb2x2ZSgnZm9vJywgJy9iYXIvJykgPT4gL2Jhci9mb29cbi8vICAgICBicm93c2VyU3BlY1Jlc29sdmUoJ2ZvbycsICcvYmFyJykgPT4gL2Zvb1xuLy9cbi8vIEJ1dCBvbiB0aGUgY29tbWFuZCBsaW5lIG9mIGEgZmlsZSBzeXN0ZW0sIGl0J3Mgbm90IGFzIGNvbXBsaWNhdGVkLCB5b3UgY2FuJ3Rcbi8vIGBjZGAgZnJvbSBhIGZpbGUsIG9ubHkgZGlyZWN0b3JpZXMuICBUaGlzIHdheSwgbGlua3MgaGF2ZSB0byBrbm93IGxlc3MgYWJvdXRcbi8vIHRoZWlyIGN1cnJlbnQgcGF0aC4gVG8gZ28gZGVlcGVyIHlvdSBjYW4gZG8gdGhpczpcbi8vXG4vLyAgICAgPExpbmsgdG89XCJkZWVwZXJcIi8+XG4vLyAgICAgLy8gaW5zdGVhZCBvZlxuLy8gICAgIDxMaW5rIHRvPWB7JHtwcm9wcy51cml9L2RlZXBlcn1gLz5cbi8vXG4vLyBKdXN0IGxpa2UgYGNkYCwgaWYgeW91IHdhbnQgdG8gZ28gZGVlcGVyIGZyb20gdGhlIGNvbW1hbmQgbGluZSwgeW91IGRvIHRoaXM6XG4vL1xuLy8gICAgIGNkIGRlZXBlclxuLy8gICAgICMgbm90XG4vLyAgICAgY2QgJChwd2QpL2RlZXBlclxuLy9cbi8vIEJ5IHRyZWF0aW5nIGV2ZXJ5IHBhdGggYXMgYSBkaXJlY3RvcnksIGxpbmtpbmcgdG8gcmVsYXRpdmUgcGF0aHMgc2hvdWxkXG4vLyByZXF1aXJlIGxlc3MgY29udGV4dHVhbCBpbmZvcm1hdGlvbiBhbmQgKGZpbmdlcnMgY3Jvc3NlZCkgYmUgbW9yZSBpbnR1aXRpdmUuXG52YXIgcmVzb2x2ZSA9IGZ1bmN0aW9uIHJlc29sdmUodG8sIGJhc2UpIHtcbiAgLy8gL2Zvby9iYXIsIC9iYXovcXV4ID0+IC9mb28vYmFyXG4gIGlmIChzdGFydHNXaXRoKHRvLCBcIi9cIikpIHtcbiAgICByZXR1cm4gdG87XG4gIH1cblxuICB2YXIgX3RvJHNwbGl0ID0gdG8uc3BsaXQoXCI/XCIpLFxuICAgICAgdG9QYXRobmFtZSA9IF90byRzcGxpdFswXSxcbiAgICAgIHRvUXVlcnkgPSBfdG8kc3BsaXRbMV07XG5cbiAgdmFyIF9iYXNlJHNwbGl0ID0gYmFzZS5zcGxpdChcIj9cIiksXG4gICAgICBiYXNlUGF0aG5hbWUgPSBfYmFzZSRzcGxpdFswXTtcblxuICB2YXIgdG9TZWdtZW50cyA9IHNlZ21lbnRpemUodG9QYXRobmFtZSk7XG4gIHZhciBiYXNlU2VnbWVudHMgPSBzZWdtZW50aXplKGJhc2VQYXRobmFtZSk7XG5cbiAgLy8gP2E9YiwgL3VzZXJzP2I9YyA9PiAvdXNlcnM/YT1iXG4gIGlmICh0b1NlZ21lbnRzWzBdID09PSBcIlwiKSB7XG4gICAgcmV0dXJuIGFkZFF1ZXJ5KGJhc2VQYXRobmFtZSwgdG9RdWVyeSk7XG4gIH1cblxuICAvLyBwcm9maWxlLCAvdXNlcnMvNzg5ID0+IC91c2Vycy83ODkvcHJvZmlsZVxuICBpZiAoIXN0YXJ0c1dpdGgodG9TZWdtZW50c1swXSwgXCIuXCIpKSB7XG4gICAgdmFyIHBhdGhuYW1lID0gYmFzZVNlZ21lbnRzLmNvbmNhdCh0b1NlZ21lbnRzKS5qb2luKFwiL1wiKTtcbiAgICByZXR1cm4gYWRkUXVlcnkoKGJhc2VQYXRobmFtZSA9PT0gXCIvXCIgPyBcIlwiIDogXCIvXCIpICsgcGF0aG5hbWUsIHRvUXVlcnkpO1xuICB9XG5cbiAgLy8gLi8gICAgICAgICAvdXNlcnMvMTIzICA9PiAgL3VzZXJzLzEyM1xuICAvLyAuLi8gICAgICAgIC91c2Vycy8xMjMgID0+ICAvdXNlcnNcbiAgLy8gLi4vLi4gICAgICAvdXNlcnMvMTIzICA9PiAgL1xuICAvLyAuLi8uLi9vbmUgIC9hL2IvYy9kICAgID0+ICAvYS9iL29uZVxuICAvLyAuLi8uL29uZSAgIC9hL2IvYy9kICAgID0+ICAvYS9iL2Mvb25lXG4gIHZhciBhbGxTZWdtZW50cyA9IGJhc2VTZWdtZW50cy5jb25jYXQodG9TZWdtZW50cyk7XG4gIHZhciBzZWdtZW50cyA9IFtdO1xuICBmb3IgKHZhciBpID0gMCwgbCA9IGFsbFNlZ21lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBzZWdtZW50ID0gYWxsU2VnbWVudHNbaV07XG4gICAgaWYgKHNlZ21lbnQgPT09IFwiLi5cIikgc2VnbWVudHMucG9wKCk7ZWxzZSBpZiAoc2VnbWVudCAhPT0gXCIuXCIpIHNlZ21lbnRzLnB1c2goc2VnbWVudCk7XG4gIH1cblxuICByZXR1cm4gYWRkUXVlcnkoXCIvXCIgKyBzZWdtZW50cy5qb2luKFwiL1wiKSwgdG9RdWVyeSk7XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gaW5zZXJ0UGFyYW1zKHBhdGgsIHBhcmFtcylcblxudmFyIGluc2VydFBhcmFtcyA9IGZ1bmN0aW9uIGluc2VydFBhcmFtcyhwYXRoLCBwYXJhbXMpIHtcbiAgdmFyIF9wYXRoJHNwbGl0ID0gcGF0aC5zcGxpdChcIj9cIiksXG4gICAgICBwYXRoQmFzZSA9IF9wYXRoJHNwbGl0WzBdLFxuICAgICAgX3BhdGgkc3BsaXQkID0gX3BhdGgkc3BsaXRbMV0sXG4gICAgICBxdWVyeSA9IF9wYXRoJHNwbGl0JCA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IF9wYXRoJHNwbGl0JDtcblxuICB2YXIgc2VnbWVudHMgPSBzZWdtZW50aXplKHBhdGhCYXNlKTtcbiAgdmFyIGNvbnN0cnVjdGVkUGF0aCA9IFwiL1wiICsgc2VnbWVudHMubWFwKGZ1bmN0aW9uIChzZWdtZW50KSB7XG4gICAgdmFyIG1hdGNoID0gcGFyYW1SZS5leGVjKHNlZ21lbnQpO1xuICAgIHJldHVybiBtYXRjaCA/IHBhcmFtc1ttYXRjaFsxXV0gOiBzZWdtZW50O1xuICB9KS5qb2luKFwiL1wiKTtcbiAgdmFyIF9wYXJhbXMkbG9jYXRpb24gPSBwYXJhbXMubG9jYXRpb247XG4gIF9wYXJhbXMkbG9jYXRpb24gPSBfcGFyYW1zJGxvY2F0aW9uID09PSB1bmRlZmluZWQgPyB7fSA6IF9wYXJhbXMkbG9jYXRpb247XG4gIHZhciBfcGFyYW1zJGxvY2F0aW9uJHNlYXIgPSBfcGFyYW1zJGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIHNlYXJjaCA9IF9wYXJhbXMkbG9jYXRpb24kc2VhciA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IF9wYXJhbXMkbG9jYXRpb24kc2VhcjtcblxuICB2YXIgc2VhcmNoU3BsaXQgPSBzZWFyY2guc3BsaXQoXCI/XCIpWzFdIHx8IFwiXCI7XG4gIGNvbnN0cnVjdGVkUGF0aCA9IGFkZFF1ZXJ5KGNvbnN0cnVjdGVkUGF0aCwgcXVlcnksIHNlYXJjaFNwbGl0KTtcbiAgcmV0dXJuIGNvbnN0cnVjdGVkUGF0aDtcbn07XG5cbnZhciB2YWxpZGF0ZVJlZGlyZWN0ID0gZnVuY3Rpb24gdmFsaWRhdGVSZWRpcmVjdChmcm9tLCB0bykge1xuICB2YXIgZmlsdGVyID0gZnVuY3Rpb24gZmlsdGVyKHNlZ21lbnQpIHtcbiAgICByZXR1cm4gaXNEeW5hbWljKHNlZ21lbnQpO1xuICB9O1xuICB2YXIgZnJvbVN0cmluZyA9IHNlZ21lbnRpemUoZnJvbSkuZmlsdGVyKGZpbHRlcikuc29ydCgpLmpvaW4oXCIvXCIpO1xuICB2YXIgdG9TdHJpbmcgPSBzZWdtZW50aXplKHRvKS5maWx0ZXIoZmlsdGVyKS5zb3J0KCkuam9pbihcIi9cIik7XG4gIHJldHVybiBmcm9tU3RyaW5nID09PSB0b1N0cmluZztcbn07XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBKdW5rXG52YXIgcGFyYW1SZSA9IC9eOiguKykvO1xuXG52YXIgU0VHTUVOVF9QT0lOVFMgPSA0O1xudmFyIFNUQVRJQ19QT0lOVFMgPSAzO1xudmFyIERZTkFNSUNfUE9JTlRTID0gMjtcbnZhciBTUExBVF9QRU5BTFRZID0gMTtcbnZhciBST09UX1BPSU5UUyA9IDE7XG5cbnZhciBpc1Jvb3RTZWdtZW50ID0gZnVuY3Rpb24gaXNSb290U2VnbWVudChzZWdtZW50KSB7XG4gIHJldHVybiBzZWdtZW50ID09PSBcIlwiO1xufTtcbnZhciBpc0R5bmFtaWMgPSBmdW5jdGlvbiBpc0R5bmFtaWMoc2VnbWVudCkge1xuICByZXR1cm4gcGFyYW1SZS50ZXN0KHNlZ21lbnQpO1xufTtcbnZhciBpc1NwbGF0ID0gZnVuY3Rpb24gaXNTcGxhdChzZWdtZW50KSB7XG4gIHJldHVybiBzZWdtZW50ICYmIHNlZ21lbnRbMF0gPT09IFwiKlwiO1xufTtcblxudmFyIHJhbmtSb3V0ZSA9IGZ1bmN0aW9uIHJhbmtSb3V0ZShyb3V0ZSwgaW5kZXgpIHtcbiAgdmFyIHNjb3JlID0gcm91dGUuZGVmYXVsdCA/IDAgOiBzZWdtZW50aXplKHJvdXRlLnBhdGgpLnJlZHVjZShmdW5jdGlvbiAoc2NvcmUsIHNlZ21lbnQpIHtcbiAgICBzY29yZSArPSBTRUdNRU5UX1BPSU5UUztcbiAgICBpZiAoaXNSb290U2VnbWVudChzZWdtZW50KSkgc2NvcmUgKz0gUk9PVF9QT0lOVFM7ZWxzZSBpZiAoaXNEeW5hbWljKHNlZ21lbnQpKSBzY29yZSArPSBEWU5BTUlDX1BPSU5UUztlbHNlIGlmIChpc1NwbGF0KHNlZ21lbnQpKSBzY29yZSAtPSBTRUdNRU5UX1BPSU5UUyArIFNQTEFUX1BFTkFMVFk7ZWxzZSBzY29yZSArPSBTVEFUSUNfUE9JTlRTO1xuICAgIHJldHVybiBzY29yZTtcbiAgfSwgMCk7XG4gIHJldHVybiB7IHJvdXRlOiByb3V0ZSwgc2NvcmU6IHNjb3JlLCBpbmRleDogaW5kZXggfTtcbn07XG5cbnZhciByYW5rUm91dGVzID0gZnVuY3Rpb24gcmFua1JvdXRlcyhyb3V0ZXMpIHtcbiAgcmV0dXJuIHJvdXRlcy5tYXAocmFua1JvdXRlKS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGEuc2NvcmUgPCBiLnNjb3JlID8gMSA6IGEuc2NvcmUgPiBiLnNjb3JlID8gLTEgOiBhLmluZGV4IC0gYi5pbmRleDtcbiAgfSk7XG59O1xuXG52YXIgc2VnbWVudGl6ZSA9IGZ1bmN0aW9uIHNlZ21lbnRpemUodXJpKSB7XG4gIHJldHVybiB1cmlcbiAgLy8gc3RyaXAgc3RhcnRpbmcvZW5kaW5nIHNsYXNoZXNcbiAgLnJlcGxhY2UoLyheXFwvK3xcXC8rJCkvZywgXCJcIikuc3BsaXQoXCIvXCIpO1xufTtcblxudmFyIGFkZFF1ZXJ5ID0gZnVuY3Rpb24gYWRkUXVlcnkocGF0aG5hbWUpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHF1ZXJ5ID0gQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHF1ZXJ5W19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHF1ZXJ5ID0gcXVlcnkuZmlsdGVyKGZ1bmN0aW9uIChxKSB7XG4gICAgcmV0dXJuIHEgJiYgcS5sZW5ndGggPiAwO1xuICB9KTtcbiAgcmV0dXJuIHBhdGhuYW1lICsgKHF1ZXJ5ICYmIHF1ZXJ5Lmxlbmd0aCA+IDAgPyBcIj9cIiArIHF1ZXJ5LmpvaW4oXCImXCIpIDogXCJcIik7XG59O1xuXG52YXIgcmVzZXJ2ZWROYW1lcyA9IFtcInVyaVwiLCBcInBhdGhcIl07XG5cbi8qKlxuICogU2hhbGxvdyBjb21wYXJlcyB0d28gb2JqZWN0cy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoxIFRoZSBmaXJzdCBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmoyIFRoZSBzZWNvbmQgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKi9cbnZhciBzaGFsbG93Q29tcGFyZSA9IGZ1bmN0aW9uIHNoYWxsb3dDb21wYXJlKG9iajEsIG9iajIpIHtcbiAgdmFyIG9iajFLZXlzID0gT2JqZWN0LmtleXMob2JqMSk7XG4gIHJldHVybiBvYmoxS2V5cy5sZW5ndGggPT09IE9iamVjdC5rZXlzKG9iajIpLmxlbmd0aCAmJiBvYmoxS2V5cy5ldmVyeShmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuIG9iajIuaGFzT3duUHJvcGVydHkoa2V5KSAmJiBvYmoxW2tleV0gPT09IG9iajJba2V5XTtcbiAgfSk7XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuZXhwb3J0IHsgc3RhcnRzV2l0aCwgcGljaywgbWF0Y2gsIHJlc29sdmUsIGluc2VydFBhcmFtcywgdmFsaWRhdGVSZWRpcmVjdCwgc2hhbGxvd0NvbXBhcmUgfTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG52YXIgZ2V0TG9jYXRpb24gPSBmdW5jdGlvbiBnZXRMb2NhdGlvbihzb3VyY2UpIHtcbiAgdmFyIF9zb3VyY2UkbG9jYXRpb24gPSBzb3VyY2UubG9jYXRpb24sXG4gICAgICBzZWFyY2ggPSBfc291cmNlJGxvY2F0aW9uLnNlYXJjaCxcbiAgICAgIGhhc2ggPSBfc291cmNlJGxvY2F0aW9uLmhhc2gsXG4gICAgICBocmVmID0gX3NvdXJjZSRsb2NhdGlvbi5ocmVmLFxuICAgICAgb3JpZ2luID0gX3NvdXJjZSRsb2NhdGlvbi5vcmlnaW4sXG4gICAgICBwcm90b2NvbCA9IF9zb3VyY2UkbG9jYXRpb24ucHJvdG9jb2wsXG4gICAgICBob3N0ID0gX3NvdXJjZSRsb2NhdGlvbi5ob3N0LFxuICAgICAgaG9zdG5hbWUgPSBfc291cmNlJGxvY2F0aW9uLmhvc3RuYW1lLFxuICAgICAgcG9ydCA9IF9zb3VyY2UkbG9jYXRpb24ucG9ydDtcbiAgdmFyIHBhdGhuYW1lID0gc291cmNlLmxvY2F0aW9uLnBhdGhuYW1lO1xuXG5cbiAgaWYgKCFwYXRobmFtZSAmJiBocmVmICYmIGNhblVzZURPTSkge1xuICAgIHZhciB1cmwgPSBuZXcgVVJMKGhyZWYpO1xuICAgIHBhdGhuYW1lID0gdXJsLnBhdGhuYW1lO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwYXRobmFtZTogZW5jb2RlVVJJKGRlY29kZVVSSShwYXRobmFtZSkpLFxuICAgIHNlYXJjaDogc2VhcmNoLFxuICAgIGhhc2g6IGhhc2gsXG4gICAgaHJlZjogaHJlZixcbiAgICBvcmlnaW46IG9yaWdpbixcbiAgICBwcm90b2NvbDogcHJvdG9jb2wsXG4gICAgaG9zdDogaG9zdCxcbiAgICBob3N0bmFtZTogaG9zdG5hbWUsXG4gICAgcG9ydDogcG9ydCxcbiAgICBzdGF0ZTogc291cmNlLmhpc3Rvcnkuc3RhdGUsXG4gICAga2V5OiBzb3VyY2UuaGlzdG9yeS5zdGF0ZSAmJiBzb3VyY2UuaGlzdG9yeS5zdGF0ZS5rZXkgfHwgXCJpbml0aWFsXCJcbiAgfTtcbn07XG5cbnZhciBjcmVhdGVIaXN0b3J5ID0gZnVuY3Rpb24gY3JlYXRlSGlzdG9yeShzb3VyY2UsIG9wdGlvbnMpIHtcbiAgdmFyIGxpc3RlbmVycyA9IFtdO1xuICB2YXIgbG9jYXRpb24gPSBnZXRMb2NhdGlvbihzb3VyY2UpO1xuICB2YXIgdHJhbnNpdGlvbmluZyA9IGZhbHNlO1xuICB2YXIgcmVzb2x2ZVRyYW5zaXRpb24gPSBmdW5jdGlvbiByZXNvbHZlVHJhbnNpdGlvbigpIHt9O1xuXG4gIHJldHVybiB7XG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIGxvY2F0aW9uO1xuICAgIH0sXG5cbiAgICBnZXQgdHJhbnNpdGlvbmluZygpIHtcbiAgICAgIHJldHVybiB0cmFuc2l0aW9uaW5nO1xuICAgIH0sXG5cbiAgICBfb25UcmFuc2l0aW9uQ29tcGxldGU6IGZ1bmN0aW9uIF9vblRyYW5zaXRpb25Db21wbGV0ZSgpIHtcbiAgICAgIHRyYW5zaXRpb25pbmcgPSBmYWxzZTtcbiAgICAgIHJlc29sdmVUcmFuc2l0aW9uKCk7XG4gICAgfSxcbiAgICBsaXN0ZW46IGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgICAgbGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgICB2YXIgcG9wc3RhdGVMaXN0ZW5lciA9IGZ1bmN0aW9uIHBvcHN0YXRlTGlzdGVuZXIoKSB7XG4gICAgICAgIGxvY2F0aW9uID0gZ2V0TG9jYXRpb24oc291cmNlKTtcbiAgICAgICAgbGlzdGVuZXIoeyBsb2NhdGlvbjogbG9jYXRpb24sIGFjdGlvbjogXCJQT1BcIiB9KTtcbiAgICAgIH07XG5cbiAgICAgIHNvdXJjZS5hZGRFdmVudExpc3RlbmVyKFwicG9wc3RhdGVcIiwgcG9wc3RhdGVMaXN0ZW5lcik7XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHNvdXJjZS5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9wc3RhdGVcIiwgcG9wc3RhdGVMaXN0ZW5lcik7XG4gICAgICAgIGxpc3RlbmVycyA9IGxpc3RlbmVycy5maWx0ZXIoZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgICAgcmV0dXJuIGZuICE9PSBsaXN0ZW5lcjtcbiAgICAgICAgfSk7XG4gICAgICB9O1xuICAgIH0sXG4gICAgbmF2aWdhdGU6IGZ1bmN0aW9uIG5hdmlnYXRlKHRvKSB7XG4gICAgICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sXG4gICAgICAgICAgc3RhdGUgPSBfcmVmLnN0YXRlLFxuICAgICAgICAgIF9yZWYkcmVwbGFjZSA9IF9yZWYucmVwbGFjZSxcbiAgICAgICAgICByZXBsYWNlID0gX3JlZiRyZXBsYWNlID09PSB1bmRlZmluZWQgPyBmYWxzZSA6IF9yZWYkcmVwbGFjZTtcblxuICAgICAgaWYgKHR5cGVvZiB0byA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICBzb3VyY2UuaGlzdG9yeS5nbyh0byk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzdGF0ZSA9IF9leHRlbmRzKHt9LCBzdGF0ZSwgeyBrZXk6IERhdGUubm93KCkgKyBcIlwiIH0pO1xuICAgICAgICAvLyB0cnkuLi5jYXRjaCBpT1MgU2FmYXJpIGxpbWl0cyB0byAxMDAgcHVzaFN0YXRlIGNhbGxzXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgaWYgKHRyYW5zaXRpb25pbmcgfHwgcmVwbGFjZSkge1xuICAgICAgICAgICAgc291cmNlLmhpc3RvcnkucmVwbGFjZVN0YXRlKHN0YXRlLCBudWxsLCB0byk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNvdXJjZS5oaXN0b3J5LnB1c2hTdGF0ZShzdGF0ZSwgbnVsbCwgdG8pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIHNvdXJjZS5sb2NhdGlvbltyZXBsYWNlID8gXCJyZXBsYWNlXCIgOiBcImFzc2lnblwiXSh0byk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbG9jYXRpb24gPSBnZXRMb2NhdGlvbihzb3VyY2UpO1xuICAgICAgdHJhbnNpdGlvbmluZyA9IHRydWU7XG4gICAgICB2YXIgdHJhbnNpdGlvbiA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXMpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVUcmFuc2l0aW9uID0gcmVzO1xuICAgICAgfSk7XG4gICAgICBsaXN0ZW5lcnMuZm9yRWFjaChmdW5jdGlvbiAobGlzdGVuZXIpIHtcbiAgICAgICAgcmV0dXJuIGxpc3RlbmVyKHsgbG9jYXRpb246IGxvY2F0aW9uLCBhY3Rpb246IFwiUFVTSFwiIH0pO1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gdHJhbnNpdGlvbjtcbiAgICB9XG4gIH07XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gU3RvcmVzIGhpc3RvcnkgZW50cmllcyBpbiBtZW1vcnkgZm9yIHRlc3Rpbmcgb3Igb3RoZXIgcGxhdGZvcm1zIGxpa2UgTmF0aXZlXG52YXIgY3JlYXRlTWVtb3J5U291cmNlID0gZnVuY3Rpb24gY3JlYXRlTWVtb3J5U291cmNlKCkge1xuICB2YXIgaW5pdGlhbFBhdGggPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IFwiL1wiO1xuXG4gIHZhciBzZWFyY2hJbmRleCA9IGluaXRpYWxQYXRoLmluZGV4T2YoXCI/XCIpO1xuICB2YXIgaW5pdGlhbExvY2F0aW9uID0ge1xuICAgIHBhdGhuYW1lOiBzZWFyY2hJbmRleCA+IC0xID8gaW5pdGlhbFBhdGguc3Vic3RyKDAsIHNlYXJjaEluZGV4KSA6IGluaXRpYWxQYXRoLFxuICAgIHNlYXJjaDogc2VhcmNoSW5kZXggPiAtMSA/IGluaXRpYWxQYXRoLnN1YnN0cihzZWFyY2hJbmRleCkgOiBcIlwiXG4gIH07XG4gIHZhciBpbmRleCA9IDA7XG4gIHZhciBzdGFjayA9IFtpbml0aWFsTG9jYXRpb25dO1xuICB2YXIgc3RhdGVzID0gW251bGxdO1xuXG4gIHJldHVybiB7XG4gICAgZ2V0IGxvY2F0aW9uKCkge1xuICAgICAgcmV0dXJuIHN0YWNrW2luZGV4XTtcbiAgICB9LFxuICAgIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIGFkZEV2ZW50TGlzdGVuZXIobmFtZSwgZm4pIHt9LFxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uIHJlbW92ZUV2ZW50TGlzdGVuZXIobmFtZSwgZm4pIHt9LFxuXG4gICAgaGlzdG9yeToge1xuICAgICAgZ2V0IGVudHJpZXMoKSB7XG4gICAgICAgIHJldHVybiBzdGFjaztcbiAgICAgIH0sXG4gICAgICBnZXQgaW5kZXgoKSB7XG4gICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgIH0sXG4gICAgICBnZXQgc3RhdGUoKSB7XG4gICAgICAgIHJldHVybiBzdGF0ZXNbaW5kZXhdO1xuICAgICAgfSxcbiAgICAgIHB1c2hTdGF0ZTogZnVuY3Rpb24gcHVzaFN0YXRlKHN0YXRlLCBfLCB1cmkpIHtcbiAgICAgICAgdmFyIF91cmkkc3BsaXQgPSB1cmkuc3BsaXQoXCI/XCIpLFxuICAgICAgICAgICAgcGF0aG5hbWUgPSBfdXJpJHNwbGl0WzBdLFxuICAgICAgICAgICAgX3VyaSRzcGxpdCQgPSBfdXJpJHNwbGl0WzFdLFxuICAgICAgICAgICAgc2VhcmNoID0gX3VyaSRzcGxpdCQgPT09IHVuZGVmaW5lZCA/IFwiXCIgOiBfdXJpJHNwbGl0JDtcblxuICAgICAgICBpbmRleCsrO1xuICAgICAgICBzdGFjay5wdXNoKHsgcGF0aG5hbWU6IHBhdGhuYW1lLCBzZWFyY2g6IHNlYXJjaC5sZW5ndGggPyBcIj9cIiArIHNlYXJjaCA6IHNlYXJjaCB9KTtcbiAgICAgICAgc3RhdGVzLnB1c2goc3RhdGUpO1xuICAgICAgfSxcbiAgICAgIHJlcGxhY2VTdGF0ZTogZnVuY3Rpb24gcmVwbGFjZVN0YXRlKHN0YXRlLCBfLCB1cmkpIHtcbiAgICAgICAgdmFyIF91cmkkc3BsaXQyID0gdXJpLnNwbGl0KFwiP1wiKSxcbiAgICAgICAgICAgIHBhdGhuYW1lID0gX3VyaSRzcGxpdDJbMF0sXG4gICAgICAgICAgICBfdXJpJHNwbGl0MiQgPSBfdXJpJHNwbGl0MlsxXSxcbiAgICAgICAgICAgIHNlYXJjaCA9IF91cmkkc3BsaXQyJCA9PT0gdW5kZWZpbmVkID8gXCJcIiA6IF91cmkkc3BsaXQyJDtcblxuICAgICAgICBzdGFja1tpbmRleF0gPSB7IHBhdGhuYW1lOiBwYXRobmFtZSwgc2VhcmNoOiBzZWFyY2ggfTtcbiAgICAgICAgc3RhdGVzW2luZGV4XSA9IHN0YXRlO1xuICAgICAgfSxcbiAgICAgIGdvOiBmdW5jdGlvbiBnbyh0bykge1xuICAgICAgICB2YXIgbmV3SW5kZXggPSBpbmRleCArIHRvO1xuXG4gICAgICAgIGlmIChuZXdJbmRleCA8IDAgfHwgbmV3SW5kZXggPiBzdGF0ZXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGluZGV4ID0gbmV3SW5kZXg7XG4gICAgICB9XG4gICAgfVxuICB9O1xufTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIGdsb2JhbCBoaXN0b3J5IC0gdXNlcyB3aW5kb3cuaGlzdG9yeSBhcyB0aGUgc291cmNlIGlmIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIGFcbi8vIG1lbW9yeSBoaXN0b3J5XG52YXIgY2FuVXNlRE9NID0gISEodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xudmFyIGdldFNvdXJjZSA9IGZ1bmN0aW9uIGdldFNvdXJjZSgpIHtcbiAgcmV0dXJuIGNhblVzZURPTSA/IHdpbmRvdyA6IGNyZWF0ZU1lbW9yeVNvdXJjZSgpO1xufTtcblxudmFyIGdsb2JhbEhpc3RvcnkgPSBjcmVhdGVIaXN0b3J5KGdldFNvdXJjZSgpKTtcbnZhciBuYXZpZ2F0ZSA9IGdsb2JhbEhpc3RvcnkubmF2aWdhdGU7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbmV4cG9ydCB7IGdsb2JhbEhpc3RvcnksIG5hdmlnYXRlLCBjcmVhdGVIaXN0b3J5LCBjcmVhdGVNZW1vcnlTb3VyY2UgfTsiLCJ2YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuLyogZXNsaW50LWRpc2FibGUganN4LWExMXkvYW5jaG9yLWhhcy1jb250ZW50ICovXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IGludmFyaWFudCBmcm9tIFwiaW52YXJpYW50XCI7XG5pbXBvcnQgY3JlYXRlQ29udGV4dCBmcm9tIFwiY3JlYXRlLXJlYWN0LWNvbnRleHRcIjtcbmltcG9ydCB7IHBvbHlmaWxsIH0gZnJvbSBcInJlYWN0LWxpZmVjeWNsZXMtY29tcGF0XCI7XG5pbXBvcnQgeyBzdGFydHNXaXRoLCBwaWNrLCByZXNvbHZlLCBtYXRjaCwgaW5zZXJ0UGFyYW1zLCB2YWxpZGF0ZVJlZGlyZWN0LCBzaGFsbG93Q29tcGFyZSB9IGZyb20gXCIuL2xpYi91dGlsc1wiO1xuaW1wb3J0IHsgZ2xvYmFsSGlzdG9yeSwgbmF2aWdhdGUsIGNyZWF0ZUhpc3RvcnksIGNyZWF0ZU1lbW9yeVNvdXJjZSB9IGZyb20gXCIuL2xpYi9oaXN0b3J5XCI7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbnZhciBjcmVhdGVOYW1lZENvbnRleHQgPSBmdW5jdGlvbiBjcmVhdGVOYW1lZENvbnRleHQobmFtZSwgZGVmYXVsdFZhbHVlKSB7XG4gIHZhciBDdHggPSBjcmVhdGVDb250ZXh0KGRlZmF1bHRWYWx1ZSk7XG4gIEN0eC5kaXNwbGF5TmFtZSA9IG5hbWU7XG4gIHJldHVybiBDdHg7XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gTG9jYXRpb24gQ29udGV4dC9Qcm92aWRlclxudmFyIExvY2F0aW9uQ29udGV4dCA9IGNyZWF0ZU5hbWVkQ29udGV4dChcIkxvY2F0aW9uXCIpO1xuXG4vLyBzZXRzIHVwIGEgbGlzdGVuZXIgaWYgdGhlcmUgaXNuJ3Qgb25lIGFscmVhZHkgc28gYXBwcyBkb24ndCBuZWVkIHRvIGJlXG4vLyB3cmFwcGVkIGluIHNvbWUgdG9wIGxldmVsIHByb3ZpZGVyXG52YXIgTG9jYXRpb24gPSBmdW5jdGlvbiBMb2NhdGlvbihfcmVmKSB7XG4gIHZhciBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIExvY2F0aW9uQ29udGV4dC5Db25zdW1lcixcbiAgICBudWxsLFxuICAgIGZ1bmN0aW9uIChjb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dCA/IGNoaWxkcmVuKGNvbnRleHQpIDogUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgTG9jYXRpb25Qcm92aWRlcixcbiAgICAgICAgbnVsbCxcbiAgICAgICAgY2hpbGRyZW5cbiAgICAgICk7XG4gICAgfVxuICApO1xufTtcblxudmFyIExvY2F0aW9uUHJvdmlkZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoTG9jYXRpb25Qcm92aWRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gTG9jYXRpb25Qcm92aWRlcigpIHtcbiAgICB2YXIgX3RlbXAsIF90aGlzLCBfcmV0O1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExvY2F0aW9uUHJvdmlkZXIpO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQgPSAoX3RlbXAgPSAoX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50LmNhbGwuYXBwbHkoX1JlYWN0JENvbXBvbmVudCwgW3RoaXNdLmNvbmNhdChhcmdzKSkpLCBfdGhpcyksIF90aGlzLnN0YXRlID0ge1xuICAgICAgY29udGV4dDogX3RoaXMuZ2V0Q29udGV4dCgpLFxuICAgICAgcmVmczogeyB1bmxpc3RlbjogbnVsbCB9XG4gICAgfSwgX3RlbXApLCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihfdGhpcywgX3JldCk7XG4gIH1cblxuICBMb2NhdGlvblByb3ZpZGVyLnByb3RvdHlwZS5nZXRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q29udGV4dCgpIHtcbiAgICB2YXIgX3Byb3BzJGhpc3RvcnkgPSB0aGlzLnByb3BzLmhpc3RvcnksXG4gICAgICAgIG5hdmlnYXRlID0gX3Byb3BzJGhpc3RvcnkubmF2aWdhdGUsXG4gICAgICAgIGxvY2F0aW9uID0gX3Byb3BzJGhpc3RvcnkubG9jYXRpb247XG5cbiAgICByZXR1cm4geyBuYXZpZ2F0ZTogbmF2aWdhdGUsIGxvY2F0aW9uOiBsb2NhdGlvbiB9O1xuICB9O1xuXG4gIExvY2F0aW9uUHJvdmlkZXIucHJvdG90eXBlLmNvbXBvbmVudERpZENhdGNoID0gZnVuY3Rpb24gY29tcG9uZW50RGlkQ2F0Y2goZXJyb3IsIGluZm8pIHtcbiAgICBpZiAoaXNSZWRpcmVjdChlcnJvcikpIHtcbiAgICAgIHZhciBfbmF2aWdhdGUgPSB0aGlzLnByb3BzLmhpc3RvcnkubmF2aWdhdGU7XG5cbiAgICAgIF9uYXZpZ2F0ZShlcnJvci51cmksIHsgcmVwbGFjZTogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICB9O1xuXG4gIExvY2F0aW9uUHJvdmlkZXIucHJvdG90eXBlLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMsIHByZXZTdGF0ZSkge1xuICAgIGlmIChwcmV2U3RhdGUuY29udGV4dC5sb2NhdGlvbiAhPT0gdGhpcy5zdGF0ZS5jb250ZXh0LmxvY2F0aW9uKSB7XG4gICAgICB0aGlzLnByb3BzLmhpc3RvcnkuX29uVHJhbnNpdGlvbkNvbXBsZXRlKCk7XG4gICAgfVxuICB9O1xuXG4gIExvY2F0aW9uUHJvdmlkZXIucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICB2YXIgcmVmcyA9IHRoaXMuc3RhdGUucmVmcyxcbiAgICAgICAgaGlzdG9yeSA9IHRoaXMucHJvcHMuaGlzdG9yeTtcblxuICAgIGhpc3RvcnkuX29uVHJhbnNpdGlvbkNvbXBsZXRlKCk7XG4gICAgcmVmcy51bmxpc3RlbiA9IGhpc3RvcnkubGlzdGVuKGZ1bmN0aW9uICgpIHtcbiAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBUT0RPOiByZXBsYWNlIHJBRiB3aXRoIHJlYWN0IGRlZmVycmVkIHVwZGF0ZSBBUEkgd2hlbiBpdCdzIHJlYWR5IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9pc3N1ZXMvMTMzMDZcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBpZiAoIV90aGlzMi51bm1vdW50ZWQpIHtcbiAgICAgICAgICAgIF90aGlzMi5zZXRTdGF0ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiB7IGNvbnRleHQ6IF90aGlzMi5nZXRDb250ZXh0KCkgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBMb2NhdGlvblByb3ZpZGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHZhciByZWZzID0gdGhpcy5zdGF0ZS5yZWZzO1xuXG4gICAgdGhpcy51bm1vdW50ZWQgPSB0cnVlO1xuICAgIHJlZnMudW5saXN0ZW4oKTtcbiAgfTtcblxuICBMb2NhdGlvblByb3ZpZGVyLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGNvbnRleHQgPSB0aGlzLnN0YXRlLmNvbnRleHQsXG4gICAgICAgIGNoaWxkcmVuID0gdGhpcy5wcm9wcy5jaGlsZHJlbjtcblxuICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgTG9jYXRpb25Db250ZXh0LlByb3ZpZGVyLFxuICAgICAgeyB2YWx1ZTogY29udGV4dCB9LFxuICAgICAgdHlwZW9mIGNoaWxkcmVuID09PSBcImZ1bmN0aW9uXCIgPyBjaGlsZHJlbihjb250ZXh0KSA6IGNoaWxkcmVuIHx8IG51bGxcbiAgICApO1xuICB9O1xuXG4gIHJldHVybiBMb2NhdGlvblByb3ZpZGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cbkxvY2F0aW9uUHJvdmlkZXIuZGVmYXVsdFByb3BzID0ge1xuICBoaXN0b3J5OiBnbG9iYWxIaXN0b3J5XG59O1xucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gTG9jYXRpb25Qcm92aWRlci5wcm9wVHlwZXMgPSB7XG4gIGhpc3Rvcnk6IFByb3BUeXBlcy5vYmplY3QuaXNSZXF1aXJlZFxufSA6IHZvaWQgMDtcbnZhciBTZXJ2ZXJMb2NhdGlvbiA9IGZ1bmN0aW9uIFNlcnZlckxvY2F0aW9uKF9yZWYyKSB7XG4gIHZhciB1cmwgPSBfcmVmMi51cmwsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYyLmNoaWxkcmVuO1xuXG4gIHZhciBzZWFyY2hJbmRleCA9IHVybC5pbmRleE9mKFwiP1wiKTtcbiAgdmFyIHNlYXJjaEV4aXN0cyA9IHNlYXJjaEluZGV4ID4gLTE7XG4gIHZhciBwYXRobmFtZSA9IHZvaWQgMDtcbiAgdmFyIHNlYXJjaCA9IFwiXCI7XG4gIHZhciBoYXNoID0gXCJcIjtcblxuICBpZiAoc2VhcmNoRXhpc3RzKSB7XG4gICAgcGF0aG5hbWUgPSB1cmwuc3Vic3RyaW5nKDAsIHNlYXJjaEluZGV4KTtcbiAgICBzZWFyY2ggPSB1cmwuc3Vic3RyaW5nKHNlYXJjaEluZGV4KTtcbiAgfSBlbHNlIHtcbiAgICBwYXRobmFtZSA9IHVybDtcbiAgfVxuXG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIExvY2F0aW9uQ29udGV4dC5Qcm92aWRlcixcbiAgICB7XG4gICAgICB2YWx1ZToge1xuICAgICAgICBsb2NhdGlvbjoge1xuICAgICAgICAgIHBhdGhuYW1lOiBwYXRobmFtZSxcbiAgICAgICAgICBzZWFyY2g6IHNlYXJjaCxcbiAgICAgICAgICBoYXNoOiBoYXNoXG4gICAgICAgIH0sXG4gICAgICAgIG5hdmlnYXRlOiBmdW5jdGlvbiBuYXZpZ2F0ZSgpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJZb3UgY2FuJ3QgY2FsbCBuYXZpZ2F0ZSBvbiB0aGUgc2VydmVyLlwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgY2hpbGRyZW5cbiAgKTtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gU2V0cyBiYXNldXJpIGFuZCBiYXNlcGF0aCBmb3IgbmVzdGVkIHJvdXRlcnMgYW5kIGxpbmtzXG52YXIgQmFzZUNvbnRleHQgPSBjcmVhdGVOYW1lZENvbnRleHQoXCJCYXNlXCIsIHsgYmFzZXVyaTogXCIvXCIsIGJhc2VwYXRoOiBcIi9cIiB9KTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFRoZSBtYWluIGV2ZW50LCB3ZWxjb21lIHRvIHRoZSBzaG93IGV2ZXJ5Ym9keS5cbnZhciBSb3V0ZXIgPSBmdW5jdGlvbiBSb3V0ZXIocHJvcHMpIHtcbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgQmFzZUNvbnRleHQuQ29uc3VtZXIsXG4gICAgbnVsbCxcbiAgICBmdW5jdGlvbiAoYmFzZUNvbnRleHQpIHtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICBMb2NhdGlvbixcbiAgICAgICAgbnVsbCxcbiAgICAgICAgZnVuY3Rpb24gKGxvY2F0aW9uQ29udGV4dCkge1xuICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlckltcGwsIF9leHRlbmRzKHt9LCBiYXNlQ29udGV4dCwgbG9jYXRpb25Db250ZXh0LCBwcm9wcykpO1xuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgKTtcbn07XG5cbnZhciBSb3V0ZXJJbXBsID0gZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhSb3V0ZXJJbXBsLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gUm91dGVySW1wbCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUm91dGVySW1wbCk7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX1JlYWN0JFB1cmVDb21wb25lbnQuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBSb3V0ZXJJbXBsLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGxvY2F0aW9uID0gX3Byb3BzLmxvY2F0aW9uLFxuICAgICAgICBfbmF2aWdhdGUyID0gX3Byb3BzLm5hdmlnYXRlLFxuICAgICAgICBiYXNlcGF0aCA9IF9wcm9wcy5iYXNlcGF0aCxcbiAgICAgICAgcHJpbWFyeSA9IF9wcm9wcy5wcmltYXJ5LFxuICAgICAgICBjaGlsZHJlbiA9IF9wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgYmFzZXVyaSA9IF9wcm9wcy5iYXNldXJpLFxuICAgICAgICBfcHJvcHMkY29tcG9uZW50ID0gX3Byb3BzLmNvbXBvbmVudCxcbiAgICAgICAgY29tcG9uZW50ID0gX3Byb3BzJGNvbXBvbmVudCA9PT0gdW5kZWZpbmVkID8gXCJkaXZcIiA6IF9wcm9wcyRjb21wb25lbnQsXG4gICAgICAgIGRvbVByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9wcm9wcywgW1wibG9jYXRpb25cIiwgXCJuYXZpZ2F0ZVwiLCBcImJhc2VwYXRoXCIsIFwicHJpbWFyeVwiLCBcImNoaWxkcmVuXCIsIFwiYmFzZXVyaVwiLCBcImNvbXBvbmVudFwiXSk7XG5cbiAgICB2YXIgcm91dGVzID0gUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbikucmVkdWNlKGZ1bmN0aW9uIChhcnJheSwgY2hpbGQpIHtcbiAgICAgIHZhciByb3V0ZXMgPSBjcmVhdGVSb3V0ZShiYXNlcGF0aCkoY2hpbGQpO1xuICAgICAgcmV0dXJuIGFycmF5LmNvbmNhdChyb3V0ZXMpO1xuICAgIH0sIFtdKTtcbiAgICB2YXIgcGF0aG5hbWUgPSBsb2NhdGlvbi5wYXRobmFtZTtcblxuXG4gICAgdmFyIG1hdGNoID0gcGljayhyb3V0ZXMsIHBhdGhuYW1lKTtcblxuICAgIGlmIChtYXRjaCkge1xuICAgICAgdmFyIHBhcmFtcyA9IG1hdGNoLnBhcmFtcyxcbiAgICAgICAgICB1cmkgPSBtYXRjaC51cmksXG4gICAgICAgICAgcm91dGUgPSBtYXRjaC5yb3V0ZSxcbiAgICAgICAgICBlbGVtZW50ID0gbWF0Y2gucm91dGUudmFsdWU7XG5cbiAgICAgIC8vIHJlbW92ZSB0aGUgLyogZnJvbSB0aGUgZW5kIGZvciBjaGlsZCByb3V0ZXMgcmVsYXRpdmUgcGF0aHNcblxuICAgICAgYmFzZXBhdGggPSByb3V0ZS5kZWZhdWx0ID8gYmFzZXBhdGggOiByb3V0ZS5wYXRoLnJlcGxhY2UoL1xcKiQvLCBcIlwiKTtcblxuICAgICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIHBhcmFtcywge1xuICAgICAgICB1cmk6IHVyaSxcbiAgICAgICAgbG9jYXRpb246IGxvY2F0aW9uLFxuICAgICAgICBuYXZpZ2F0ZTogZnVuY3Rpb24gbmF2aWdhdGUodG8sIG9wdGlvbnMpIHtcbiAgICAgICAgICByZXR1cm4gX25hdmlnYXRlMihyZXNvbHZlKHRvLCB1cmkpLCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHZhciBjbG9uZSA9IFJlYWN0LmNsb25lRWxlbWVudChlbGVtZW50LCBwcm9wcywgZWxlbWVudC5wcm9wcy5jaGlsZHJlbiA/IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIFJvdXRlcixcbiAgICAgICAgeyBsb2NhdGlvbjogbG9jYXRpb24sIHByaW1hcnk6IHByaW1hcnkgfSxcbiAgICAgICAgZWxlbWVudC5wcm9wcy5jaGlsZHJlblxuICAgICAgKSA6IHVuZGVmaW5lZCk7XG5cbiAgICAgIC8vIHVzaW5nICdkaXYnIGZvciA8IDE2LjMgc3VwcG9ydFxuICAgICAgdmFyIEZvY3VzV3JhcHBlciA9IHByaW1hcnkgPyBGb2N1c0hhbmRsZXIgOiBjb21wb25lbnQ7XG4gICAgICAvLyBkb24ndCBwYXNzIGFueSBwcm9wcyB0byAnZGl2J1xuICAgICAgdmFyIHdyYXBwZXJQcm9wcyA9IHByaW1hcnkgPyBfZXh0ZW5kcyh7IHVyaTogdXJpLCBsb2NhdGlvbjogbG9jYXRpb24sIGNvbXBvbmVudDogY29tcG9uZW50IH0sIGRvbVByb3BzKSA6IGRvbVByb3BzO1xuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgQmFzZUNvbnRleHQuUHJvdmlkZXIsXG4gICAgICAgIHsgdmFsdWU6IHsgYmFzZXVyaTogdXJpLCBiYXNlcGF0aDogYmFzZXBhdGggfSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgIEZvY3VzV3JhcHBlcixcbiAgICAgICAgICB3cmFwcGVyUHJvcHMsXG4gICAgICAgICAgY2xvbmVcbiAgICAgICAgKVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gTm90IHN1cmUgaWYgd2Ugd2FudCB0aGlzLCB3b3VsZCByZXF1aXJlIGluZGV4IHJvdXRlcyBhdCBldmVyeSBsZXZlbFxuICAgICAgLy8gd2FybmluZyhcbiAgICAgIC8vICAgZmFsc2UsXG4gICAgICAvLyAgIGA8Um91dGVyIGJhc2VwYXRoPVwiJHtiYXNlcGF0aH1cIj5cXG5cXG5Ob3RoaW5nIG1hdGNoZWQ6XFxuXFx0JHtcbiAgICAgIC8vICAgICBsb2NhdGlvbi5wYXRobmFtZVxuICAgICAgLy8gICB9XFxuXFxuUGF0aHMgY2hlY2tlZDogXFxuXFx0JHtyb3V0ZXNcbiAgICAgIC8vICAgICAubWFwKHJvdXRlID0+IHJvdXRlLnBhdGgpXG4gICAgICAvLyAgICAgLmpvaW4oXG4gICAgICAvLyAgICAgICBcIlxcblxcdFwiXG4gICAgICAvLyAgICAgKX1cXG5cXG5UbyBnZXQgcmlkIG9mIHRoaXMgd2FybmluZywgYWRkIGEgZGVmYXVsdCBOb3RGb3VuZCBjb21wb25lbnQgYXMgY2hpbGQgb2YgUm91dGVyOlxuICAgICAgLy8gICBcXG5cXHRsZXQgTm90Rm91bmQgPSAoKSA9PiA8ZGl2Pk5vdCBGb3VuZCE8L2Rpdj5cbiAgICAgIC8vICAgXFxuXFx0PFJvdXRlcj5cXG5cXHQgIDxOb3RGb3VuZCBkZWZhdWx0Lz5cXG5cXHQgIHsvKiAuLi4gKi99XFxuXFx0PC9Sb3V0ZXI+YFxuICAgICAgLy8gKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gUm91dGVySW1wbDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cblJvdXRlckltcGwuZGVmYXVsdFByb3BzID0ge1xuICBwcmltYXJ5OiB0cnVlXG59O1xuXG5cbnZhciBGb2N1c0NvbnRleHQgPSBjcmVhdGVOYW1lZENvbnRleHQoXCJGb2N1c1wiKTtcblxudmFyIEZvY3VzSGFuZGxlciA9IGZ1bmN0aW9uIEZvY3VzSGFuZGxlcihfcmVmMykge1xuICB2YXIgdXJpID0gX3JlZjMudXJpLFxuICAgICAgbG9jYXRpb24gPSBfcmVmMy5sb2NhdGlvbixcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYzLmNvbXBvbmVudCxcbiAgICAgIGRvbVByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYzLCBbXCJ1cmlcIiwgXCJsb2NhdGlvblwiLCBcImNvbXBvbmVudFwiXSk7XG5cbiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgRm9jdXNDb250ZXh0LkNvbnN1bWVyLFxuICAgIG51bGwsXG4gICAgZnVuY3Rpb24gKHJlcXVlc3RGb2N1cykge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9jdXNIYW5kbGVySW1wbCwgX2V4dGVuZHMoe30sIGRvbVByb3BzLCB7XG4gICAgICAgIGNvbXBvbmVudDogY29tcG9uZW50LFxuICAgICAgICByZXF1ZXN0Rm9jdXM6IHJlcXVlc3RGb2N1cyxcbiAgICAgICAgdXJpOiB1cmksXG4gICAgICAgIGxvY2F0aW9uOiBsb2NhdGlvblxuICAgICAgfSkpO1xuICAgIH1cbiAgKTtcbn07XG5cbi8vIGRvbid0IGZvY3VzIG9uIGluaXRpYWwgcmVuZGVyXG52YXIgaW5pdGlhbFJlbmRlciA9IHRydWU7XG52YXIgZm9jdXNIYW5kbGVyQ291bnQgPSAwO1xuXG52YXIgRm9jdXNIYW5kbGVySW1wbCA9IGZ1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50Mikge1xuICBfaW5oZXJpdHMoRm9jdXNIYW5kbGVySW1wbCwgX1JlYWN0JENvbXBvbmVudDIpO1xuXG4gIGZ1bmN0aW9uIEZvY3VzSGFuZGxlckltcGwoKSB7XG4gICAgdmFyIF90ZW1wMiwgX3RoaXM0LCBfcmV0MjtcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBGb2N1c0hhbmRsZXJJbXBsKTtcblxuICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICBhcmdzW19rZXkyXSA9IGFyZ3VtZW50c1tfa2V5Ml07XG4gICAgfVxuXG4gICAgcmV0dXJuIF9yZXQyID0gKF90ZW1wMiA9IChfdGhpczQgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50Mi5jYWxsLmFwcGx5KF9SZWFjdCRDb21wb25lbnQyLCBbdGhpc10uY29uY2F0KGFyZ3MpKSksIF90aGlzNCksIF90aGlzNC5zdGF0ZSA9IHt9LCBfdGhpczQucmVxdWVzdEZvY3VzID0gZnVuY3Rpb24gKG5vZGUpIHtcbiAgICAgIGlmICghX3RoaXM0LnN0YXRlLnNob3VsZEZvY3VzICYmIG5vZGUpIHtcbiAgICAgICAgbm9kZS5mb2N1cygpO1xuICAgICAgfVxuICAgIH0sIF90ZW1wMiksIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKF90aGlzNCwgX3JldDIpO1xuICB9XG5cbiAgRm9jdXNIYW5kbGVySW1wbC5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMgPSBmdW5jdGlvbiBnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMobmV4dFByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICB2YXIgaW5pdGlhbCA9IHByZXZTdGF0ZS51cmkgPT0gbnVsbDtcbiAgICBpZiAoaW5pdGlhbCkge1xuICAgICAgcmV0dXJuIF9leHRlbmRzKHtcbiAgICAgICAgc2hvdWxkRm9jdXM6IHRydWVcbiAgICAgIH0sIG5leHRQcm9wcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBteVVSSUNoYW5nZWQgPSBuZXh0UHJvcHMudXJpICE9PSBwcmV2U3RhdGUudXJpO1xuICAgICAgdmFyIG5hdmlnYXRlZFVwVG9NZSA9IHByZXZTdGF0ZS5sb2NhdGlvbi5wYXRobmFtZSAhPT0gbmV4dFByb3BzLmxvY2F0aW9uLnBhdGhuYW1lICYmIG5leHRQcm9wcy5sb2NhdGlvbi5wYXRobmFtZSA9PT0gbmV4dFByb3BzLnVyaTtcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7XG4gICAgICAgIHNob3VsZEZvY3VzOiBteVVSSUNoYW5nZWQgfHwgbmF2aWdhdGVkVXBUb01lXG4gICAgICB9LCBuZXh0UHJvcHMpO1xuICAgIH1cbiAgfTtcblxuICBGb2N1c0hhbmRsZXJJbXBsLnByb3RvdHlwZS5jb21wb25lbnREaWRNb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIGZvY3VzSGFuZGxlckNvdW50Kys7XG4gICAgdGhpcy5mb2N1cygpO1xuICB9O1xuXG4gIEZvY3VzSGFuZGxlckltcGwucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgZm9jdXNIYW5kbGVyQ291bnQtLTtcbiAgICBpZiAoZm9jdXNIYW5kbGVyQ291bnQgPT09IDApIHtcbiAgICAgIGluaXRpYWxSZW5kZXIgPSB0cnVlO1xuICAgIH1cbiAgfTtcblxuICBGb2N1c0hhbmRsZXJJbXBsLnByb3RvdHlwZS5jb21wb25lbnREaWRVcGRhdGUgPSBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICBpZiAocHJldlByb3BzLmxvY2F0aW9uICE9PSB0aGlzLnByb3BzLmxvY2F0aW9uICYmIHRoaXMuc3RhdGUuc2hvdWxkRm9jdXMpIHtcbiAgICAgIHRoaXMuZm9jdXMoKTtcbiAgICB9XG4gIH07XG5cbiAgRm9jdXNIYW5kbGVySW1wbC5wcm90b3R5cGUuZm9jdXMgPSBmdW5jdGlvbiBmb2N1cygpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09IFwidGVzdFwiKSB7XG4gICAgICAvLyBnZXR0aW5nIGNhbm5vdCByZWFkIHByb3BlcnR5IGZvY3VzIG9mIG51bGwgaW4gdGhlIHRlc3RzXG4gICAgICAvLyBhbmQgdGhhdCBiaXQgb2YgZ2xvYmFsIGBpbml0aWFsUmVuZGVyYCBzdGF0ZSBjYXVzZXMgcHJvYmxlbXNcbiAgICAgIC8vIHNob3VsZCBwcm9iYWJseSBmaWd1cmUgaXQgb3V0IVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciByZXF1ZXN0Rm9jdXMgPSB0aGlzLnByb3BzLnJlcXVlc3RGb2N1cztcblxuXG4gICAgaWYgKHJlcXVlc3RGb2N1cykge1xuICAgICAgcmVxdWVzdEZvY3VzKHRoaXMubm9kZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpbml0aWFsUmVuZGVyKSB7XG4gICAgICAgIGluaXRpYWxSZW5kZXIgPSBmYWxzZTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5ub2RlKSB7XG4gICAgICAgIC8vIFJlYWN0IHBvbHlmaWxscyBbYXV0b2ZvY3VzXSBhbmQgaXQgZmlyZXMgZWFybGllciB0aGFuIGNETSxcbiAgICAgICAgLy8gc28gd2Ugd2VyZSBzdGVhbGluZyBmb2N1cyBhd2F5LCB0aGlzIGxpbmUgcHJldmVudHMgdGhhdC5cbiAgICAgICAgaWYgKCF0aGlzLm5vZGUuY29udGFpbnMoZG9jdW1lbnQuYWN0aXZlRWxlbWVudCkpIHtcbiAgICAgICAgICB0aGlzLm5vZGUuZm9jdXMoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBGb2N1c0hhbmRsZXJJbXBsLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzNSA9IHRoaXM7XG5cbiAgICB2YXIgX3Byb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3Byb3BzMi5jaGlsZHJlbixcbiAgICAgICAgc3R5bGUgPSBfcHJvcHMyLnN0eWxlLFxuICAgICAgICByZXF1ZXN0Rm9jdXMgPSBfcHJvcHMyLnJlcXVlc3RGb2N1cyxcbiAgICAgICAgX3Byb3BzMiRjb21wb25lbnQgPSBfcHJvcHMyLmNvbXBvbmVudCxcbiAgICAgICAgQ29tcCA9IF9wcm9wczIkY29tcG9uZW50ID09PSB1bmRlZmluZWQgPyBcImRpdlwiIDogX3Byb3BzMiRjb21wb25lbnQsXG4gICAgICAgIHVyaSA9IF9wcm9wczIudXJpLFxuICAgICAgICBsb2NhdGlvbiA9IF9wcm9wczIubG9jYXRpb24sXG4gICAgICAgIGRvbVByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9wcm9wczIsIFtcImNoaWxkcmVuXCIsIFwic3R5bGVcIiwgXCJyZXF1ZXN0Rm9jdXNcIiwgXCJjb21wb25lbnRcIiwgXCJ1cmlcIiwgXCJsb2NhdGlvblwiXSk7XG5cbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgIENvbXAsXG4gICAgICBfZXh0ZW5kcyh7XG4gICAgICAgIHN0eWxlOiBfZXh0ZW5kcyh7IG91dGxpbmU6IFwibm9uZVwiIH0sIHN0eWxlKSxcbiAgICAgICAgdGFiSW5kZXg6IFwiLTFcIixcbiAgICAgICAgcmVmOiBmdW5jdGlvbiByZWYobikge1xuICAgICAgICAgIHJldHVybiBfdGhpczUubm9kZSA9IG47XG4gICAgICAgIH1cbiAgICAgIH0sIGRvbVByb3BzKSxcbiAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIEZvY3VzQ29udGV4dC5Qcm92aWRlcixcbiAgICAgICAgeyB2YWx1ZTogdGhpcy5yZXF1ZXN0Rm9jdXMgfSxcbiAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlblxuICAgICAgKVxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIEZvY3VzSGFuZGxlckltcGw7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbnBvbHlmaWxsKEZvY3VzSGFuZGxlckltcGwpO1xuXG52YXIgayA9IGZ1bmN0aW9uIGsoKSB7fTtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbnZhciBmb3J3YXJkUmVmID0gUmVhY3QuZm9yd2FyZFJlZjtcblxuaWYgKHR5cGVvZiBmb3J3YXJkUmVmID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIGZvcndhcmRSZWYgPSBmdW5jdGlvbiBmb3J3YXJkUmVmKEMpIHtcbiAgICByZXR1cm4gQztcbiAgfTtcbn1cblxudmFyIExpbmsgPSBmb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmNCwgcmVmKSB7XG4gIHZhciBpbm5lclJlZiA9IF9yZWY0LmlubmVyUmVmLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZjQsIFtcImlubmVyUmVmXCJdKTtcblxuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICBCYXNlQ29udGV4dC5Db25zdW1lcixcbiAgICBudWxsLFxuICAgIGZ1bmN0aW9uIChfcmVmNSkge1xuICAgICAgdmFyIGJhc2VwYXRoID0gX3JlZjUuYmFzZXBhdGgsXG4gICAgICAgICAgYmFzZXVyaSA9IF9yZWY1LmJhc2V1cmk7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgTG9jYXRpb24sXG4gICAgICAgIG51bGwsXG4gICAgICAgIGZ1bmN0aW9uIChfcmVmNikge1xuICAgICAgICAgIHZhciBsb2NhdGlvbiA9IF9yZWY2LmxvY2F0aW9uLFxuICAgICAgICAgICAgICBuYXZpZ2F0ZSA9IF9yZWY2Lm5hdmlnYXRlO1xuXG4gICAgICAgICAgdmFyIHRvID0gcHJvcHMudG8sXG4gICAgICAgICAgICAgIHN0YXRlID0gcHJvcHMuc3RhdGUsXG4gICAgICAgICAgICAgIHJlcGxhY2UgPSBwcm9wcy5yZXBsYWNlLFxuICAgICAgICAgICAgICBfcHJvcHMkZ2V0UHJvcHMgPSBwcm9wcy5nZXRQcm9wcyxcbiAgICAgICAgICAgICAgZ2V0UHJvcHMgPSBfcHJvcHMkZ2V0UHJvcHMgPT09IHVuZGVmaW5lZCA/IGsgOiBfcHJvcHMkZ2V0UHJvcHMsXG4gICAgICAgICAgICAgIGFuY2hvclByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKHByb3BzLCBbXCJ0b1wiLCBcInN0YXRlXCIsIFwicmVwbGFjZVwiLCBcImdldFByb3BzXCJdKTtcblxuICAgICAgICAgIHZhciBocmVmID0gcmVzb2x2ZSh0bywgYmFzZXVyaSk7XG4gICAgICAgICAgdmFyIGVuY29kZWRIcmVmID0gZW5jb2RlVVJJKGhyZWYpO1xuICAgICAgICAgIHZhciBpc0N1cnJlbnQgPSBsb2NhdGlvbi5wYXRobmFtZSA9PT0gZW5jb2RlZEhyZWY7XG4gICAgICAgICAgdmFyIGlzUGFydGlhbGx5Q3VycmVudCA9IHN0YXJ0c1dpdGgobG9jYXRpb24ucGF0aG5hbWUsIGVuY29kZWRIcmVmKTtcblxuICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYVwiLCBfZXh0ZW5kcyh7XG4gICAgICAgICAgICByZWY6IHJlZiB8fCBpbm5lclJlZixcbiAgICAgICAgICAgIFwiYXJpYS1jdXJyZW50XCI6IGlzQ3VycmVudCA/IFwicGFnZVwiIDogdW5kZWZpbmVkXG4gICAgICAgICAgfSwgYW5jaG9yUHJvcHMsIGdldFByb3BzKHsgaXNDdXJyZW50OiBpc0N1cnJlbnQsIGlzUGFydGlhbGx5Q3VycmVudDogaXNQYXJ0aWFsbHlDdXJyZW50LCBocmVmOiBocmVmLCBsb2NhdGlvbjogbG9jYXRpb24gfSksIHtcbiAgICAgICAgICAgIGhyZWY6IGhyZWYsXG4gICAgICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKGV2ZW50KSB7XG4gICAgICAgICAgICAgIGlmIChhbmNob3JQcm9wcy5vbkNsaWNrKSBhbmNob3JQcm9wcy5vbkNsaWNrKGV2ZW50KTtcbiAgICAgICAgICAgICAgaWYgKHNob3VsZE5hdmlnYXRlKGV2ZW50KSkge1xuICAgICAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgdmFyIHNob3VsZFJlcGxhY2UgPSByZXBsYWNlO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgcmVwbGFjZSAhPT0gXCJib29sZWFuXCIgJiYgaXNDdXJyZW50KSB7XG4gICAgICAgICAgICAgICAgICB2YXIgX2xvY2F0aW9uJHN0YXRlID0gX2V4dGVuZHMoe30sIGxvY2F0aW9uLnN0YXRlKSxcbiAgICAgICAgICAgICAgICAgICAgICBrZXkgPSBfbG9jYXRpb24kc3RhdGUua2V5LFxuICAgICAgICAgICAgICAgICAgICAgIHJlc3RTdGF0ZSA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfbG9jYXRpb24kc3RhdGUsIFtcImtleVwiXSk7XG5cbiAgICAgICAgICAgICAgICAgIHNob3VsZFJlcGxhY2UgPSBzaGFsbG93Q29tcGFyZShfZXh0ZW5kcyh7fSwgc3RhdGUpLCByZXN0U3RhdGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuYXZpZ2F0ZShocmVmLCB7XG4gICAgICAgICAgICAgICAgICBzdGF0ZTogc3RhdGUsXG4gICAgICAgICAgICAgICAgICByZXBsYWNlOiBzaG91bGRSZXBsYWNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICk7XG4gICAgfVxuICApO1xufSk7XG5cbkxpbmsuZGlzcGxheU5hbWUgPSBcIkxpbmtcIjtcblxucHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gTGluay5wcm9wVHlwZXMgPSB7XG4gIHRvOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWRcbn0gOiB2b2lkIDA7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5mdW5jdGlvbiBSZWRpcmVjdFJlcXVlc3QodXJpKSB7XG4gIHRoaXMudXJpID0gdXJpO1xufVxuXG52YXIgaXNSZWRpcmVjdCA9IGZ1bmN0aW9uIGlzUmVkaXJlY3Qobykge1xuICByZXR1cm4gbyBpbnN0YW5jZW9mIFJlZGlyZWN0UmVxdWVzdDtcbn07XG5cbnZhciByZWRpcmVjdFRvID0gZnVuY3Rpb24gcmVkaXJlY3RUbyh0bykge1xuICB0aHJvdyBuZXcgUmVkaXJlY3RSZXF1ZXN0KHRvKTtcbn07XG5cbnZhciBSZWRpcmVjdEltcGwgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudDMpIHtcbiAgX2luaGVyaXRzKFJlZGlyZWN0SW1wbCwgX1JlYWN0JENvbXBvbmVudDMpO1xuXG4gIGZ1bmN0aW9uIFJlZGlyZWN0SW1wbCgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVkaXJlY3RJbXBsKTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfUmVhY3QkQ29tcG9uZW50My5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIC8vIFN1cHBvcnQgUmVhY3QgPCAxNiB3aXRoIHRoaXMgaG9va1xuICBSZWRpcmVjdEltcGwucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdmFyIF9wcm9wczMgPSB0aGlzLnByb3BzLFxuICAgICAgICBuYXZpZ2F0ZSA9IF9wcm9wczMubmF2aWdhdGUsXG4gICAgICAgIHRvID0gX3Byb3BzMy50byxcbiAgICAgICAgZnJvbSA9IF9wcm9wczMuZnJvbSxcbiAgICAgICAgX3Byb3BzMyRyZXBsYWNlID0gX3Byb3BzMy5yZXBsYWNlLFxuICAgICAgICByZXBsYWNlID0gX3Byb3BzMyRyZXBsYWNlID09PSB1bmRlZmluZWQgPyB0cnVlIDogX3Byb3BzMyRyZXBsYWNlLFxuICAgICAgICBzdGF0ZSA9IF9wcm9wczMuc3RhdGUsXG4gICAgICAgIG5vVGhyb3cgPSBfcHJvcHMzLm5vVGhyb3csXG4gICAgICAgIGJhc2V1cmkgPSBfcHJvcHMzLmJhc2V1cmksXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9wcm9wczMsIFtcIm5hdmlnYXRlXCIsIFwidG9cIiwgXCJmcm9tXCIsIFwicmVwbGFjZVwiLCBcInN0YXRlXCIsIFwibm9UaHJvd1wiLCBcImJhc2V1cmlcIl0pO1xuXG4gICAgUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgcmVzb2x2ZWRUbyA9IHJlc29sdmUodG8sIGJhc2V1cmkpO1xuICAgICAgbmF2aWdhdGUoaW5zZXJ0UGFyYW1zKHJlc29sdmVkVG8sIHByb3BzKSwgeyByZXBsYWNlOiByZXBsYWNlLCBzdGF0ZTogc3RhdGUgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgUmVkaXJlY3RJbXBsLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF9wcm9wczQgPSB0aGlzLnByb3BzLFxuICAgICAgICBuYXZpZ2F0ZSA9IF9wcm9wczQubmF2aWdhdGUsXG4gICAgICAgIHRvID0gX3Byb3BzNC50byxcbiAgICAgICAgZnJvbSA9IF9wcm9wczQuZnJvbSxcbiAgICAgICAgcmVwbGFjZSA9IF9wcm9wczQucmVwbGFjZSxcbiAgICAgICAgc3RhdGUgPSBfcHJvcHM0LnN0YXRlLFxuICAgICAgICBub1Rocm93ID0gX3Byb3BzNC5ub1Rocm93LFxuICAgICAgICBiYXNldXJpID0gX3Byb3BzNC5iYXNldXJpLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcHJvcHM0LCBbXCJuYXZpZ2F0ZVwiLCBcInRvXCIsIFwiZnJvbVwiLCBcInJlcGxhY2VcIiwgXCJzdGF0ZVwiLCBcIm5vVGhyb3dcIiwgXCJiYXNldXJpXCJdKTtcblxuICAgIHZhciByZXNvbHZlZFRvID0gcmVzb2x2ZSh0bywgYmFzZXVyaSk7XG4gICAgaWYgKCFub1Rocm93KSByZWRpcmVjdFRvKGluc2VydFBhcmFtcyhyZXNvbHZlZFRvLCBwcm9wcykpO1xuICAgIHJldHVybiBudWxsO1xuICB9O1xuXG4gIHJldHVybiBSZWRpcmVjdEltcGw7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbnZhciBSZWRpcmVjdCA9IGZ1bmN0aW9uIFJlZGlyZWN0KHByb3BzKSB7XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIEJhc2VDb250ZXh0LkNvbnN1bWVyLFxuICAgIG51bGwsXG4gICAgZnVuY3Rpb24gKF9yZWY3KSB7XG4gICAgICB2YXIgYmFzZXVyaSA9IF9yZWY3LmJhc2V1cmk7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgTG9jYXRpb24sXG4gICAgICAgIG51bGwsXG4gICAgICAgIGZ1bmN0aW9uIChsb2NhdGlvbkNvbnRleHQpIHtcbiAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChSZWRpcmVjdEltcGwsIF9leHRlbmRzKHt9LCBsb2NhdGlvbkNvbnRleHQsIHsgYmFzZXVyaTogYmFzZXVyaSB9LCBwcm9wcykpO1xuICAgICAgICB9XG4gICAgICApO1xuICAgIH1cbiAgKTtcbn07XG5cbnByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IFJlZGlyZWN0LnByb3BUeXBlcyA9IHtcbiAgZnJvbTogUHJvcFR5cGVzLnN0cmluZyxcbiAgdG86IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZFxufSA6IHZvaWQgMDtcblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbnZhciBNYXRjaCA9IGZ1bmN0aW9uIE1hdGNoKF9yZWY4KSB7XG4gIHZhciBwYXRoID0gX3JlZjgucGF0aCxcbiAgICAgIGNoaWxkcmVuID0gX3JlZjguY2hpbGRyZW47XG4gIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgIEJhc2VDb250ZXh0LkNvbnN1bWVyLFxuICAgIG51bGwsXG4gICAgZnVuY3Rpb24gKF9yZWY5KSB7XG4gICAgICB2YXIgYmFzZXVyaSA9IF9yZWY5LmJhc2V1cmk7XG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgTG9jYXRpb24sXG4gICAgICAgIG51bGwsXG4gICAgICAgIGZ1bmN0aW9uIChfcmVmMTApIHtcbiAgICAgICAgICB2YXIgbmF2aWdhdGUgPSBfcmVmMTAubmF2aWdhdGUsXG4gICAgICAgICAgICAgIGxvY2F0aW9uID0gX3JlZjEwLmxvY2F0aW9uO1xuXG4gICAgICAgICAgdmFyIHJlc29sdmVkUGF0aCA9IHJlc29sdmUocGF0aCwgYmFzZXVyaSk7XG4gICAgICAgICAgdmFyIHJlc3VsdCA9IG1hdGNoKHJlc29sdmVkUGF0aCwgbG9jYXRpb24ucGF0aG5hbWUpO1xuICAgICAgICAgIHJldHVybiBjaGlsZHJlbih7XG4gICAgICAgICAgICBuYXZpZ2F0ZTogbmF2aWdhdGUsXG4gICAgICAgICAgICBsb2NhdGlvbjogbG9jYXRpb24sXG4gICAgICAgICAgICBtYXRjaDogcmVzdWx0ID8gX2V4dGVuZHMoe30sIHJlc3VsdC5wYXJhbXMsIHtcbiAgICAgICAgICAgICAgdXJpOiByZXN1bHQudXJpLFxuICAgICAgICAgICAgICBwYXRoOiBwYXRoXG4gICAgICAgICAgICB9KSA6IG51bGxcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9XG4gICk7XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSG9va3NcblxudmFyIHVzZUxvY2F0aW9uID0gZnVuY3Rpb24gdXNlTG9jYXRpb24oKSB7XG4gIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChMb2NhdGlvbkNvbnRleHQpO1xuXG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZUxvY2F0aW9uIGhvb2sgd2FzIHVzZWQgYnV0IGEgTG9jYXRpb25Db250ZXh0LlByb3ZpZGVyIHdhcyBub3QgZm91bmQgaW4gdGhlIHBhcmVudCB0cmVlLiBNYWtlIHN1cmUgdGhpcyBpcyB1c2VkIGluIGEgY29tcG9uZW50IHRoYXQgaXMgYSBjaGlsZCBvZiBSb3V0ZXJcIik7XG4gIH1cblxuICByZXR1cm4gY29udGV4dC5sb2NhdGlvbjtcbn07XG5cbnZhciB1c2VOYXZpZ2F0ZSA9IGZ1bmN0aW9uIHVzZU5hdmlnYXRlKCkge1xuICB2YXIgY29udGV4dCA9IHVzZUNvbnRleHQoTG9jYXRpb25Db250ZXh0KTtcblxuICBpZiAoIWNvbnRleHQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJ1c2VOYXZpZ2F0ZSBob29rIHdhcyB1c2VkIGJ1dCBhIExvY2F0aW9uQ29udGV4dC5Qcm92aWRlciB3YXMgbm90IGZvdW5kIGluIHRoZSBwYXJlbnQgdHJlZS4gTWFrZSBzdXJlIHRoaXMgaXMgdXNlZCBpbiBhIGNvbXBvbmVudCB0aGF0IGlzIGEgY2hpbGQgb2YgUm91dGVyXCIpO1xuICB9XG5cbiAgcmV0dXJuIGNvbnRleHQubmF2aWdhdGU7XG59O1xuXG52YXIgdXNlUGFyYW1zID0gZnVuY3Rpb24gdXNlUGFyYW1zKCkge1xuICB2YXIgY29udGV4dCA9IHVzZUNvbnRleHQoQmFzZUNvbnRleHQpO1xuXG4gIGlmICghY29udGV4dCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcInVzZVBhcmFtcyBob29rIHdhcyB1c2VkIGJ1dCBhIExvY2F0aW9uQ29udGV4dC5Qcm92aWRlciB3YXMgbm90IGZvdW5kIGluIHRoZSBwYXJlbnQgdHJlZS4gTWFrZSBzdXJlIHRoaXMgaXMgdXNlZCBpbiBhIGNvbXBvbmVudCB0aGF0IGlzIGEgY2hpbGQgb2YgUm91dGVyXCIpO1xuICB9XG5cbiAgdmFyIGxvY2F0aW9uID0gdXNlTG9jYXRpb24oKTtcblxuICB2YXIgcmVzdWx0cyA9IG1hdGNoKGNvbnRleHQuYmFzZXBhdGgsIGxvY2F0aW9uLnBhdGhuYW1lKTtcblxuICByZXR1cm4gcmVzdWx0cyA/IHJlc3VsdHMucGFyYW1zIDogbnVsbDtcbn07XG5cbnZhciB1c2VNYXRjaCA9IGZ1bmN0aW9uIHVzZU1hdGNoKHBhdGgpIHtcbiAgaWYgKCFwYXRoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXNlTWF0Y2gocGF0aDogc3RyaW5nKSByZXF1aXJlcyBhbiBhcmd1bWVudCBvZiBhIHN0cmluZyB0byBtYXRjaCBhZ2FpbnN0XCIpO1xuICB9XG4gIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChCYXNlQ29udGV4dCk7XG5cbiAgaWYgKCFjb250ZXh0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwidXNlTWF0Y2ggaG9vayB3YXMgdXNlZCBidXQgYSBMb2NhdGlvbkNvbnRleHQuUHJvdmlkZXIgd2FzIG5vdCBmb3VuZCBpbiB0aGUgcGFyZW50IHRyZWUuIE1ha2Ugc3VyZSB0aGlzIGlzIHVzZWQgaW4gYSBjb21wb25lbnQgdGhhdCBpcyBhIGNoaWxkIG9mIFJvdXRlclwiKTtcbiAgfVxuXG4gIHZhciBsb2NhdGlvbiA9IHVzZUxvY2F0aW9uKCk7XG5cbiAgdmFyIHJlc29sdmVkUGF0aCA9IHJlc29sdmUocGF0aCwgY29udGV4dC5iYXNldXJpKTtcbiAgdmFyIHJlc3VsdCA9IG1hdGNoKHJlc29sdmVkUGF0aCwgbG9jYXRpb24ucGF0aG5hbWUpO1xuICByZXR1cm4gcmVzdWx0ID8gX2V4dGVuZHMoe30sIHJlc3VsdC5wYXJhbXMsIHtcbiAgICB1cmk6IHJlc3VsdC51cmksXG4gICAgcGF0aDogcGF0aFxuICB9KSA6IG51bGw7XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gSnVua1xudmFyIHN0cmlwU2xhc2hlcyA9IGZ1bmN0aW9uIHN0cmlwU2xhc2hlcyhzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oXlxcLyt8XFwvKyQpL2csIFwiXCIpO1xufTtcblxudmFyIGNyZWF0ZVJvdXRlID0gZnVuY3Rpb24gY3JlYXRlUm91dGUoYmFzZXBhdGgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChlbGVtZW50KSB7XG4gICAgaWYgKCFlbGVtZW50KSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAoZWxlbWVudC50eXBlID09PSBSZWFjdC5GcmFnbWVudCAmJiBlbGVtZW50LnByb3BzLmNoaWxkcmVuKSB7XG4gICAgICByZXR1cm4gUmVhY3QuQ2hpbGRyZW4ubWFwKGVsZW1lbnQucHJvcHMuY2hpbGRyZW4sIGNyZWF0ZVJvdXRlKGJhc2VwYXRoKSk7XG4gICAgfVxuICAgICEoZWxlbWVudC5wcm9wcy5wYXRoIHx8IGVsZW1lbnQucHJvcHMuZGVmYXVsdCB8fCBlbGVtZW50LnR5cGUgPT09IFJlZGlyZWN0KSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCI8Um91dGVyPjogQ2hpbGRyZW4gb2YgPFJvdXRlcj4gbXVzdCBoYXZlIGEgYHBhdGhgIG9yIGBkZWZhdWx0YCBwcm9wLCBvciBiZSBhIGA8UmVkaXJlY3Q+YC4gTm9uZSBmb3VuZCBvbiBlbGVtZW50IHR5cGUgYFwiICsgZWxlbWVudC50eXBlICsgXCJgXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcblxuICAgICEhKGVsZW1lbnQudHlwZSA9PT0gUmVkaXJlY3QgJiYgKCFlbGVtZW50LnByb3BzLmZyb20gfHwgIWVsZW1lbnQucHJvcHMudG8pKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCI8UmVkaXJlY3QgZnJvbT1cXFwiXCIgKyBlbGVtZW50LnByb3BzLmZyb20gKyBcIlxcXCIgdG89XFxcIlwiICsgZWxlbWVudC5wcm9wcy50byArIFwiXFxcIi8+IHJlcXVpcmVzIGJvdGggXFxcImZyb21cXFwiIGFuZCBcXFwidG9cXFwiIHByb3BzIHdoZW4gaW5zaWRlIGEgPFJvdXRlcj4uXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcblxuICAgICEhKGVsZW1lbnQudHlwZSA9PT0gUmVkaXJlY3QgJiYgIXZhbGlkYXRlUmVkaXJlY3QoZWxlbWVudC5wcm9wcy5mcm9tLCBlbGVtZW50LnByb3BzLnRvKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiPFJlZGlyZWN0IGZyb209XFxcIlwiICsgZWxlbWVudC5wcm9wcy5mcm9tICsgXCIgdG89XFxcIlwiICsgZWxlbWVudC5wcm9wcy50byArIFwiXFxcIi8+IGhhcyBtaXNtYXRjaGVkIGR5bmFtaWMgc2VnbWVudHMsIGVuc3VyZSBib3RoIHBhdGhzIGhhdmUgdGhlIGV4YWN0IHNhbWUgZHluYW1pYyBzZWdtZW50cy5cIikgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuXG4gICAgaWYgKGVsZW1lbnQucHJvcHMuZGVmYXVsdCkge1xuICAgICAgcmV0dXJuIHsgdmFsdWU6IGVsZW1lbnQsIGRlZmF1bHQ6IHRydWUgfTtcbiAgICB9XG5cbiAgICB2YXIgZWxlbWVudFBhdGggPSBlbGVtZW50LnR5cGUgPT09IFJlZGlyZWN0ID8gZWxlbWVudC5wcm9wcy5mcm9tIDogZWxlbWVudC5wcm9wcy5wYXRoO1xuXG4gICAgdmFyIHBhdGggPSBlbGVtZW50UGF0aCA9PT0gXCIvXCIgPyBiYXNlcGF0aCA6IHN0cmlwU2xhc2hlcyhiYXNlcGF0aCkgKyBcIi9cIiArIHN0cmlwU2xhc2hlcyhlbGVtZW50UGF0aCk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgdmFsdWU6IGVsZW1lbnQsXG4gICAgICBkZWZhdWx0OiBlbGVtZW50LnByb3BzLmRlZmF1bHQsXG4gICAgICBwYXRoOiBlbGVtZW50LnByb3BzLmNoaWxkcmVuID8gc3RyaXBTbGFzaGVzKHBhdGgpICsgXCIvKlwiIDogcGF0aFxuICAgIH07XG4gIH07XG59O1xuXG52YXIgc2hvdWxkTmF2aWdhdGUgPSBmdW5jdGlvbiBzaG91bGROYXZpZ2F0ZShldmVudCkge1xuICByZXR1cm4gIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQgJiYgZXZlbnQuYnV0dG9uID09PSAwICYmICEoZXZlbnQubWV0YUtleSB8fCBldmVudC5hbHRLZXkgfHwgZXZlbnQuY3RybEtleSB8fCBldmVudC5zaGlmdEtleSk7XG59O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbmV4cG9ydCB7IExpbmssIExvY2F0aW9uLCBMb2NhdGlvblByb3ZpZGVyLCBNYXRjaCwgUmVkaXJlY3QsIFJvdXRlciwgU2VydmVyTG9jYXRpb24sIGNyZWF0ZUhpc3RvcnksIGNyZWF0ZU1lbW9yeVNvdXJjZSwgaXNSZWRpcmVjdCwgbmF2aWdhdGUsIHJlZGlyZWN0VG8sIGdsb2JhbEhpc3RvcnksIG1hdGNoIGFzIG1hdGNoUGF0aCwgdXNlTG9jYXRpb24sIHVzZU5hdmlnYXRlLCB1c2VQYXJhbXMsIHVzZU1hdGNoIH07IiwiaW1wb3J0IHtjc3N9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xyXG5pbXBvcnQge2dldENvbG9yfSBmcm9tICdzdHlsZXMvaGVscGVyJztcclxuXHJcbmV4cG9ydCBjb25zdCBMYXlvdXQgPSBjc3NgXHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgXHJcbiAgICA+IC5yb3V0ZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBmbGV4LWdyb3c6IDE7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgICAgICBvdmVyZmxvdzogYXV0bztcclxuICAgIH1cclxuYDtcclxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgX2dldFByb3RvdHlwZU9mID0gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LmdldFByb3RvdHlwZU9mIDogZnVuY3Rpb24gX2dldFByb3RvdHlwZU9mKG8pIHtcbiAgICByZXR1cm4gby5fX3Byb3RvX18gfHwgT2JqZWN0LmdldFByb3RvdHlwZU9mKG8pO1xuICB9O1xuICByZXR1cm4gX2dldFByb3RvdHlwZU9mKG8pO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9zZXRQcm90b3R5cGVPZihvLCBwKSB7XG4gIF9zZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICAgIG8uX19wcm90b19fID0gcDtcbiAgICByZXR1cm4gbztcbiAgfTtcblxuICByZXR1cm4gX3NldFByb3RvdHlwZU9mKG8sIHApO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7XG4gIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTtcbiAgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTtcbiAgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTtcblxuICB0cnkge1xuICAgIERhdGUucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoRGF0ZSwgW10sIGZ1bmN0aW9uICgpIHt9KSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2ZcIjtcbmltcG9ydCBpc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgZnJvbSBcIi4vaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0XCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgaWYgKGlzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpKSB7XG4gICAgX2NvbnN0cnVjdCA9IFJlZmxlY3QuY29uc3RydWN0O1xuICB9IGVsc2Uge1xuICAgIF9jb25zdHJ1Y3QgPSBmdW5jdGlvbiBfY29uc3RydWN0KFBhcmVudCwgYXJncywgQ2xhc3MpIHtcbiAgICAgIHZhciBhID0gW251bGxdO1xuICAgICAgYS5wdXNoLmFwcGx5KGEsIGFyZ3MpO1xuICAgICAgdmFyIENvbnN0cnVjdG9yID0gRnVuY3Rpb24uYmluZC5hcHBseShQYXJlbnQsIGEpO1xuICAgICAgdmFyIGluc3RhbmNlID0gbmV3IENvbnN0cnVjdG9yKCk7XG4gICAgICBpZiAoQ2xhc3MpIHNldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH07XG4gIH1cblxuICByZXR1cm4gX2NvbnN0cnVjdC5hcHBseShudWxsLCBhcmd1bWVudHMpO1xufSIsImltcG9ydCBnZXRQcm90b3R5cGVPZiBmcm9tIFwiLi9nZXRQcm90b3R5cGVPZlwiO1xuaW1wb3J0IHNldFByb3RvdHlwZU9mIGZyb20gXCIuL3NldFByb3RvdHlwZU9mXCI7XG5pbXBvcnQgaXNOYXRpdmVGdW5jdGlvbiBmcm9tIFwiLi9pc05hdGl2ZUZ1bmN0aW9uXCI7XG5pbXBvcnQgY29uc3RydWN0IGZyb20gXCIuL2NvbnN0cnVjdFwiO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX3dyYXBOYXRpdmVTdXBlcihDbGFzcykge1xuICB2YXIgX2NhY2hlID0gdHlwZW9mIE1hcCA9PT0gXCJmdW5jdGlvblwiID8gbmV3IE1hcCgpIDogdW5kZWZpbmVkO1xuXG4gIF93cmFwTmF0aXZlU3VwZXIgPSBmdW5jdGlvbiBfd3JhcE5hdGl2ZVN1cGVyKENsYXNzKSB7XG4gICAgaWYgKENsYXNzID09PSBudWxsIHx8ICFpc05hdGl2ZUZ1bmN0aW9uKENsYXNzKSkgcmV0dXJuIENsYXNzO1xuXG4gICAgaWYgKHR5cGVvZiBDbGFzcyAhPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBfY2FjaGUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgIGlmIChfY2FjaGUuaGFzKENsYXNzKSkgcmV0dXJuIF9jYWNoZS5nZXQoQ2xhc3MpO1xuXG4gICAgICBfY2FjaGUuc2V0KENsYXNzLCBXcmFwcGVyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBXcmFwcGVyKCkge1xuICAgICAgcmV0dXJuIGNvbnN0cnVjdChDbGFzcywgYXJndW1lbnRzLCBnZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3Rvcik7XG4gICAgfVxuXG4gICAgV3JhcHBlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKENsYXNzLnByb3RvdHlwZSwge1xuICAgICAgY29uc3RydWN0b3I6IHtcbiAgICAgICAgdmFsdWU6IFdyYXBwZXIsXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHNldFByb3RvdHlwZU9mKFdyYXBwZXIsIENsYXNzKTtcbiAgfTtcblxuICByZXR1cm4gX3dyYXBOYXRpdmVTdXBlcihDbGFzcyk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2lzTmF0aXZlRnVuY3Rpb24oZm4pIHtcbiAgcmV0dXJuIEZ1bmN0aW9uLnRvU3RyaW5nLmNhbGwoZm4pLmluZGV4T2YoXCJbbmF0aXZlIGNvZGVdXCIpICE9PSAtMTtcbn0iLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyc7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQnO1xuaW1wb3J0IF9pbmhlcml0c0xvb3NlIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2UnO1xuaW1wb3J0IF93cmFwTmF0aXZlU3VwZXIgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vd3JhcE5hdGl2ZVN1cGVyJztcbmltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsTG9vc2UgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsTG9vc2UnO1xuXG5mdW5jdGlvbiBsYXN0KCkge1xuICB2YXIgX3JlZjtcblxuICByZXR1cm4gX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggLSAxLCBfcmVmIDwgMCB8fCBhcmd1bWVudHMubGVuZ3RoIDw9IF9yZWYgPyB1bmRlZmluZWQgOiBhcmd1bWVudHNbX3JlZl07XG59XG5cbmZ1bmN0aW9uIG5lZ2F0aW9uKGEpIHtcbiAgcmV0dXJuIC1hO1xufVxuXG5mdW5jdGlvbiBhZGRpdGlvbihhLCBiKSB7XG4gIHJldHVybiBhICsgYjtcbn1cblxuZnVuY3Rpb24gc3VidHJhY3Rpb24oYSwgYikge1xuICByZXR1cm4gYSAtIGI7XG59XG5cbmZ1bmN0aW9uIG11bHRpcGxpY2F0aW9uKGEsIGIpIHtcbiAgcmV0dXJuIGEgKiBiO1xufVxuXG5mdW5jdGlvbiBkaXZpc2lvbihhLCBiKSB7XG4gIHJldHVybiBhIC8gYjtcbn1cblxuZnVuY3Rpb24gZmFjdG9yaWFsKGEpIHtcbiAgaWYgKGEgJSAxIHx8ICEoK2EgPj0gMCkpIHJldHVybiBOYU47XG4gIGlmIChhID4gMTcwKSByZXR1cm4gSW5maW5pdHk7ZWxzZSBpZiAoYSA9PT0gMCkgcmV0dXJuIDE7ZWxzZSB7XG4gICAgcmV0dXJuIGEgKiBmYWN0b3JpYWwoYSAtIDEpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHBvd2VyKGEsIGIpIHtcbiAgcmV0dXJuIE1hdGgucG93KGEsIGIpO1xufVxuXG5mdW5jdGlvbiBzcXJ0KGEpIHtcbiAgcmV0dXJuIE1hdGguc3FydChhKTtcbn1cblxuZnVuY3Rpb24gbWF4KCkge1xuICByZXR1cm4gTWF0aC5tYXguYXBwbHkoTWF0aCwgYXJndW1lbnRzKTtcbn1cblxuZnVuY3Rpb24gbWluKCkge1xuICByZXR1cm4gTWF0aC5taW4uYXBwbHkoTWF0aCwgYXJndW1lbnRzKTtcbn1cblxuZnVuY3Rpb24gY29tbWEoKSB7XG4gIHJldHVybiBBcnJheS5vZi5hcHBseShBcnJheSwgYXJndW1lbnRzKTtcbn1cblxudmFyIGRlZmF1bHRNYXRoU3ltYm9scyA9IHtcbiAgc3ltYm9sczoge1xuICAgICchJzoge1xuICAgICAgcG9zdGZpeDoge1xuICAgICAgICBzeW1ib2w6ICchJyxcbiAgICAgICAgZjogZmFjdG9yaWFsLFxuICAgICAgICBub3RhdGlvbjogJ3Bvc3RmaXgnLFxuICAgICAgICBwcmVjZWRlbmNlOiA2LFxuICAgICAgICByaWdodFRvTGVmdDogMCxcbiAgICAgICAgYXJnQ291bnQ6IDFcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6ICchJyxcbiAgICAgIHJlZ1N5bWJvbDogJyEnXG4gICAgfSxcbiAgICAnXic6IHtcbiAgICAgIGluZml4OiB7XG4gICAgICAgIHN5bWJvbDogJ14nLFxuICAgICAgICBmOiBwb3dlcixcbiAgICAgICAgbm90YXRpb246ICdpbmZpeCcsXG4gICAgICAgIHByZWNlZGVuY2U6IDUsXG4gICAgICAgIHJpZ2h0VG9MZWZ0OiAxLFxuICAgICAgICBhcmdDb3VudDogMlxuICAgICAgfSxcbiAgICAgIHN5bWJvbDogJ14nLFxuICAgICAgcmVnU3ltYm9sOiAnXFxcXF4nXG4gICAgfSxcbiAgICAnKic6IHtcbiAgICAgIGluZml4OiB7XG4gICAgICAgIHN5bWJvbDogJyonLFxuICAgICAgICBmOiBtdWx0aXBsaWNhdGlvbixcbiAgICAgICAgbm90YXRpb246ICdpbmZpeCcsXG4gICAgICAgIHByZWNlZGVuY2U6IDQsXG4gICAgICAgIHJpZ2h0VG9MZWZ0OiAwLFxuICAgICAgICBhcmdDb3VudDogMlxuICAgICAgfSxcbiAgICAgIHN5bWJvbDogJyonLFxuICAgICAgcmVnU3ltYm9sOiAnXFxcXConXG4gICAgfSxcbiAgICAnLyc6IHtcbiAgICAgIGluZml4OiB7XG4gICAgICAgIHN5bWJvbDogJy8nLFxuICAgICAgICBmOiBkaXZpc2lvbixcbiAgICAgICAgbm90YXRpb246ICdpbmZpeCcsXG4gICAgICAgIHByZWNlZGVuY2U6IDQsXG4gICAgICAgIHJpZ2h0VG9MZWZ0OiAwLFxuICAgICAgICBhcmdDb3VudDogMlxuICAgICAgfSxcbiAgICAgIHN5bWJvbDogJy8nLFxuICAgICAgcmVnU3ltYm9sOiAnLydcbiAgICB9LFxuICAgICcrJzoge1xuICAgICAgaW5maXg6IHtcbiAgICAgICAgc3ltYm9sOiAnKycsXG4gICAgICAgIGY6IGFkZGl0aW9uLFxuICAgICAgICBub3RhdGlvbjogJ2luZml4JyxcbiAgICAgICAgcHJlY2VkZW5jZTogMixcbiAgICAgICAgcmlnaHRUb0xlZnQ6IDAsXG4gICAgICAgIGFyZ0NvdW50OiAyXG4gICAgICB9LFxuICAgICAgcHJlZml4OiB7XG4gICAgICAgIHN5bWJvbDogJysnLFxuICAgICAgICBmOiBsYXN0LFxuICAgICAgICBub3RhdGlvbjogJ3ByZWZpeCcsXG4gICAgICAgIHByZWNlZGVuY2U6IDMsXG4gICAgICAgIHJpZ2h0VG9MZWZ0OiAwLFxuICAgICAgICBhcmdDb3VudDogMVxuICAgICAgfSxcbiAgICAgIHN5bWJvbDogJysnLFxuICAgICAgcmVnU3ltYm9sOiAnXFxcXCsnXG4gICAgfSxcbiAgICAnLSc6IHtcbiAgICAgIGluZml4OiB7XG4gICAgICAgIHN5bWJvbDogJy0nLFxuICAgICAgICBmOiBzdWJ0cmFjdGlvbixcbiAgICAgICAgbm90YXRpb246ICdpbmZpeCcsXG4gICAgICAgIHByZWNlZGVuY2U6IDIsXG4gICAgICAgIHJpZ2h0VG9MZWZ0OiAwLFxuICAgICAgICBhcmdDb3VudDogMlxuICAgICAgfSxcbiAgICAgIHByZWZpeDoge1xuICAgICAgICBzeW1ib2w6ICctJyxcbiAgICAgICAgZjogbmVnYXRpb24sXG4gICAgICAgIG5vdGF0aW9uOiAncHJlZml4JyxcbiAgICAgICAgcHJlY2VkZW5jZTogMyxcbiAgICAgICAgcmlnaHRUb0xlZnQ6IDAsXG4gICAgICAgIGFyZ0NvdW50OiAxXG4gICAgICB9LFxuICAgICAgc3ltYm9sOiAnLScsXG4gICAgICByZWdTeW1ib2w6ICctJ1xuICAgIH0sXG4gICAgJywnOiB7XG4gICAgICBpbmZpeDoge1xuICAgICAgICBzeW1ib2w6ICcsJyxcbiAgICAgICAgZjogY29tbWEsXG4gICAgICAgIG5vdGF0aW9uOiAnaW5maXgnLFxuICAgICAgICBwcmVjZWRlbmNlOiAxLFxuICAgICAgICByaWdodFRvTGVmdDogMCxcbiAgICAgICAgYXJnQ291bnQ6IDJcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6ICcsJyxcbiAgICAgIHJlZ1N5bWJvbDogJywnXG4gICAgfSxcbiAgICAnKCc6IHtcbiAgICAgIHByZWZpeDoge1xuICAgICAgICBzeW1ib2w6ICcoJyxcbiAgICAgICAgZjogbGFzdCxcbiAgICAgICAgbm90YXRpb246ICdwcmVmaXgnLFxuICAgICAgICBwcmVjZWRlbmNlOiAwLFxuICAgICAgICByaWdodFRvTGVmdDogMCxcbiAgICAgICAgYXJnQ291bnQ6IDFcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6ICcoJyxcbiAgICAgIHJlZ1N5bWJvbDogJ1xcXFwoJ1xuICAgIH0sXG4gICAgJyknOiB7XG4gICAgICBwb3N0Zml4OiB7XG4gICAgICAgIHN5bWJvbDogJyknLFxuICAgICAgICBmOiB1bmRlZmluZWQsXG4gICAgICAgIG5vdGF0aW9uOiAncG9zdGZpeCcsXG4gICAgICAgIHByZWNlZGVuY2U6IDAsXG4gICAgICAgIHJpZ2h0VG9MZWZ0OiAwLFxuICAgICAgICBhcmdDb3VudDogMVxuICAgICAgfSxcbiAgICAgIHN5bWJvbDogJyknLFxuICAgICAgcmVnU3ltYm9sOiAnXFxcXCknXG4gICAgfSxcbiAgICBtaW46IHtcbiAgICAgIGZ1bmM6IHtcbiAgICAgICAgc3ltYm9sOiAnbWluJyxcbiAgICAgICAgZjogbWluLFxuICAgICAgICBub3RhdGlvbjogJ2Z1bmMnLFxuICAgICAgICBwcmVjZWRlbmNlOiAwLFxuICAgICAgICByaWdodFRvTGVmdDogMCxcbiAgICAgICAgYXJnQ291bnQ6IDFcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6ICdtaW4nLFxuICAgICAgcmVnU3ltYm9sOiAnbWluXFxcXGInXG4gICAgfSxcbiAgICBtYXg6IHtcbiAgICAgIGZ1bmM6IHtcbiAgICAgICAgc3ltYm9sOiAnbWF4JyxcbiAgICAgICAgZjogbWF4LFxuICAgICAgICBub3RhdGlvbjogJ2Z1bmMnLFxuICAgICAgICBwcmVjZWRlbmNlOiAwLFxuICAgICAgICByaWdodFRvTGVmdDogMCxcbiAgICAgICAgYXJnQ291bnQ6IDFcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6ICdtYXgnLFxuICAgICAgcmVnU3ltYm9sOiAnbWF4XFxcXGInXG4gICAgfSxcbiAgICBzcXJ0OiB7XG4gICAgICBmdW5jOiB7XG4gICAgICAgIHN5bWJvbDogJ3NxcnQnLFxuICAgICAgICBmOiBzcXJ0LFxuICAgICAgICBub3RhdGlvbjogJ2Z1bmMnLFxuICAgICAgICBwcmVjZWRlbmNlOiAwLFxuICAgICAgICByaWdodFRvTGVmdDogMCxcbiAgICAgICAgYXJnQ291bnQ6IDFcbiAgICAgIH0sXG4gICAgICBzeW1ib2w6ICdzcXJ0JyxcbiAgICAgIHJlZ1N5bWJvbDogJ3NxcnRcXFxcYidcbiAgICB9XG4gIH1cbn07XG5cbi8vIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9uZW50cy9zdHlsZWQtY29tcG9uZW50cy9ibG9iL2ZjZjZmMzgwNGM1N2ExNGRkNzk4NGRmYWI3YmMwNmVlMmVkY2EwNDQvc3JjL3V0aWxzL2Vycm9yLmpzXG5cbi8qKlxuICogUGFyc2UgZXJyb3JzLm1kIGFuZCB0dXJuIGl0IGludG8gYSBzaW1wbGUgaGFzaCBvZiBjb2RlOiBtZXNzYWdlXG4gKiBAcHJpdmF0ZVxuICovXG52YXIgRVJST1JTID0ge1xuICBcIjFcIjogXCJQYXNzZWQgaW52YWxpZCBhcmd1bWVudHMgdG8gaHNsLCBwbGVhc2UgcGFzcyBtdWx0aXBsZSBudW1iZXJzIGUuZy4gaHNsKDM2MCwgMC43NSwgMC40KSBvciBhbiBvYmplY3QgZS5nLiByZ2IoeyBodWU6IDI1NSwgc2F0dXJhdGlvbjogMC40LCBsaWdodG5lc3M6IDAuNzUgfSkuXFxuXFxuXCIsXG4gIFwiMlwiOiBcIlBhc3NlZCBpbnZhbGlkIGFyZ3VtZW50cyB0byBoc2xhLCBwbGVhc2UgcGFzcyBtdWx0aXBsZSBudW1iZXJzIGUuZy4gaHNsYSgzNjAsIDAuNzUsIDAuNCwgMC43KSBvciBhbiBvYmplY3QgZS5nLiByZ2IoeyBodWU6IDI1NSwgc2F0dXJhdGlvbjogMC40LCBsaWdodG5lc3M6IDAuNzUsIGFscGhhOiAwLjcgfSkuXFxuXFxuXCIsXG4gIFwiM1wiOiBcIlBhc3NlZCBhbiBpbmNvcnJlY3QgYXJndW1lbnQgdG8gYSBjb2xvciBmdW5jdGlvbiwgcGxlYXNlIHBhc3MgYSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgYSBjb2xvci5cXG5cXG5cIixcbiAgXCI0XCI6IFwiQ291bGRuJ3QgZ2VuZXJhdGUgdmFsaWQgcmdiIHN0cmluZyBmcm9tICVzLCBpdCByZXR1cm5lZCAlcy5cXG5cXG5cIixcbiAgXCI1XCI6IFwiQ291bGRuJ3QgcGFyc2UgdGhlIGNvbG9yIHN0cmluZy4gUGxlYXNlIHByb3ZpZGUgdGhlIGNvbG9yIGFzIGEgc3RyaW5nIGluIGhleCwgcmdiLCByZ2JhLCBoc2wgb3IgaHNsYSBub3RhdGlvbi5cXG5cXG5cIixcbiAgXCI2XCI6IFwiUGFzc2VkIGludmFsaWQgYXJndW1lbnRzIHRvIHJnYiwgcGxlYXNlIHBhc3MgbXVsdGlwbGUgbnVtYmVycyBlLmcuIHJnYigyNTUsIDIwNSwgMTAwKSBvciBhbiBvYmplY3QgZS5nLiByZ2IoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwIH0pLlxcblxcblwiLFxuICBcIjdcIjogXCJQYXNzZWQgaW52YWxpZCBhcmd1bWVudHMgdG8gcmdiYSwgcGxlYXNlIHBhc3MgbXVsdGlwbGUgbnVtYmVycyBlLmcuIHJnYigyNTUsIDIwNSwgMTAwLCAwLjc1KSBvciBhbiBvYmplY3QgZS5nLiByZ2IoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwLCBhbHBoYTogMC43NSB9KS5cXG5cXG5cIixcbiAgXCI4XCI6IFwiUGFzc2VkIGludmFsaWQgYXJndW1lbnQgdG8gdG9Db2xvclN0cmluZywgcGxlYXNlIHBhc3MgYSBSZ2JDb2xvciwgUmdiYUNvbG9yLCBIc2xDb2xvciBvciBIc2xhQ29sb3Igb2JqZWN0LlxcblxcblwiLFxuICBcIjlcIjogXCJQbGVhc2UgcHJvdmlkZSBhIG51bWJlciBvZiBzdGVwcyB0byB0aGUgbW9kdWxhclNjYWxlIGhlbHBlci5cXG5cXG5cIixcbiAgXCIxMFwiOiBcIlBsZWFzZSBwYXNzIGEgbnVtYmVyIG9yIG9uZSBvZiB0aGUgcHJlZGVmaW5lZCBzY2FsZXMgdG8gdGhlIG1vZHVsYXJTY2FsZSBoZWxwZXIgYXMgdGhlIHJhdGlvLlxcblxcblwiLFxuICBcIjExXCI6IFwiSW52YWxpZCB2YWx1ZSBwYXNzZWQgYXMgYmFzZSB0byBtb2R1bGFyU2NhbGUsIGV4cGVjdGVkIG51bWJlciBvciBlbSBzdHJpbmcgYnV0IGdvdCBcXFwiJXNcXFwiXFxuXFxuXCIsXG4gIFwiMTJcIjogXCJFeHBlY3RlZCBhIHN0cmluZyBlbmRpbmcgaW4gXFxcInB4XFxcIiBvciBhIG51bWJlciBwYXNzZWQgYXMgdGhlIGZpcnN0IGFyZ3VtZW50IHRvICVzKCksIGdvdCBcXFwiJXNcXFwiIGluc3RlYWQuXFxuXFxuXCIsXG4gIFwiMTNcIjogXCJFeHBlY3RlZCBhIHN0cmluZyBlbmRpbmcgaW4gXFxcInB4XFxcIiBvciBhIG51bWJlciBwYXNzZWQgYXMgdGhlIHNlY29uZCBhcmd1bWVudCB0byAlcygpLCBnb3QgXFxcIiVzXFxcIiBpbnN0ZWFkLlxcblxcblwiLFxuICBcIjE0XCI6IFwiUGFzc2VkIGludmFsaWQgcGl4ZWwgdmFsdWUgKFxcXCIlc1xcXCIpIHRvICVzKCksIHBsZWFzZSBwYXNzIGEgdmFsdWUgbGlrZSBcXFwiMTJweFxcXCIgb3IgMTIuXFxuXFxuXCIsXG4gIFwiMTVcIjogXCJQYXNzZWQgaW52YWxpZCBiYXNlIHZhbHVlIChcXFwiJXNcXFwiKSB0byAlcygpLCBwbGVhc2UgcGFzcyBhIHZhbHVlIGxpa2UgXFxcIjEycHhcXFwiIG9yIDEyLlxcblxcblwiLFxuICBcIjE2XCI6IFwiWW91IG11c3QgcHJvdmlkZSBhIHRlbXBsYXRlIHRvIHRoaXMgbWV0aG9kLlxcblxcblwiLFxuICBcIjE3XCI6IFwiWW91IHBhc3NlZCBhbiB1bnN1cHBvcnRlZCBzZWxlY3RvciBzdGF0ZSB0byB0aGlzIG1ldGhvZC5cXG5cXG5cIixcbiAgXCIxOFwiOiBcIm1pblNjcmVlbiBhbmQgbWF4U2NyZWVuIG11c3QgYmUgcHJvdmlkZWQgYXMgc3RyaW5naWZpZWQgbnVtYmVycyB3aXRoIHRoZSBzYW1lIHVuaXRzLlxcblxcblwiLFxuICBcIjE5XCI6IFwiZnJvbVNpemUgYW5kIHRvU2l6ZSBtdXN0IGJlIHByb3ZpZGVkIGFzIHN0cmluZ2lmaWVkIG51bWJlcnMgd2l0aCB0aGUgc2FtZSB1bml0cy5cXG5cXG5cIixcbiAgXCIyMFwiOiBcImV4cGVjdHMgZWl0aGVyIGFuIGFycmF5IG9mIG9iamVjdHMgb3IgYSBzaW5nbGUgb2JqZWN0IHdpdGggdGhlIHByb3BlcnRpZXMgcHJvcCwgZnJvbVNpemUsIGFuZCB0b1NpemUuXFxuXFxuXCIsXG4gIFwiMjFcIjogXCJleHBlY3RzIHRoZSBvYmplY3RzIGluIHRoZSBmaXJzdCBhcmd1bWVudCBhcnJheSB0byBoYXZlIHRoZSBwcm9wZXJ0aWVzIGBwcm9wYCwgYGZyb21TaXplYCwgYW5kIGB0b1NpemVgLlxcblxcblwiLFxuICBcIjIyXCI6IFwiZXhwZWN0cyB0aGUgZmlyc3QgYXJndW1lbnQgb2JqZWN0IHRvIGhhdmUgdGhlIHByb3BlcnRpZXMgYHByb3BgLCBgZnJvbVNpemVgLCBhbmQgYHRvU2l6ZWAuXFxuXFxuXCIsXG4gIFwiMjNcIjogXCJmb250RmFjZSBleHBlY3RzIGEgbmFtZSBvZiBhIGZvbnQtZmFtaWx5LlxcblxcblwiLFxuICBcIjI0XCI6IFwiZm9udEZhY2UgZXhwZWN0cyBlaXRoZXIgdGhlIHBhdGggdG8gdGhlIGZvbnQgZmlsZShzKSBvciBhIG5hbWUgb2YgYSBsb2NhbCBjb3B5LlxcblxcblwiLFxuICBcIjI1XCI6IFwiZm9udEZhY2UgZXhwZWN0cyBsb2NhbEZvbnRzIHRvIGJlIGFuIGFycmF5LlxcblxcblwiLFxuICBcIjI2XCI6IFwiZm9udEZhY2UgZXhwZWN0cyBmaWxlRm9ybWF0cyB0byBiZSBhbiBhcnJheS5cXG5cXG5cIixcbiAgXCIyN1wiOiBcInJhZGlhbEdyYWRpZW50IHJlcXVyaWVzIGF0IGxlYXN0IDIgY29sb3Itc3RvcHMgdG8gcHJvcGVybHkgcmVuZGVyLlxcblxcblwiLFxuICBcIjI4XCI6IFwiUGxlYXNlIHN1cHBseSBhIGZpbGVuYW1lIHRvIHJldGluYUltYWdlKCkgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LlxcblxcblwiLFxuICBcIjI5XCI6IFwiUGFzc2VkIGludmFsaWQgYXJndW1lbnQgdG8gdHJpYW5nbGUsIHBsZWFzZSBwYXNzIGNvcnJlY3QgcG9pbnRpbmdEaXJlY3Rpb24gZS5nLiAncmlnaHQnLlxcblxcblwiLFxuICBcIjMwXCI6IFwiUGFzc2VkIGFuIGludmFsaWQgdmFsdWUgdG8gYGhlaWdodGAgb3IgYHdpZHRoYC4gUGxlYXNlIHByb3ZpZGUgYSBwaXhlbCBiYXNlZCB1bml0LlxcblxcblwiLFxuICBcIjMxXCI6IFwiVGhlIGFuaW1hdGlvbiBzaG9ydGhhbmQgb25seSB0YWtlcyA4IGFyZ3VtZW50cy4gU2VlIHRoZSBzcGVjaWZpY2F0aW9uIGZvciBtb3JlIGluZm9ybWF0aW9uOiBodHRwOi8vbWRuLmlvL2FuaW1hdGlvblxcblxcblwiLFxuICBcIjMyXCI6IFwiVG8gcGFzcyBtdWx0aXBsZSBhbmltYXRpb25zIHBsZWFzZSBzdXBwbHkgdGhlbSBpbiBhcnJheXMsIGUuZy4gYW5pbWF0aW9uKFsncm90YXRlJywgJzJzJ10sIFsnbW92ZScsICcxcyddKVxcblRvIHBhc3MgYSBzaW5nbGUgYW5pbWF0aW9uIHBsZWFzZSBzdXBwbHkgdGhlbSBpbiBzaW1wbGUgdmFsdWVzLCBlLmcuIGFuaW1hdGlvbigncm90YXRlJywgJzJzJylcXG5cXG5cIixcbiAgXCIzM1wiOiBcIlRoZSBhbmltYXRpb24gc2hvcnRoYW5kIGFycmF5cyBjYW4gb25seSBoYXZlIDggZWxlbWVudHMuIFNlZSB0aGUgc3BlY2lmaWNhdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbjogaHR0cDovL21kbi5pby9hbmltYXRpb25cXG5cXG5cIixcbiAgXCIzNFwiOiBcImJvcmRlclJhZGl1cyBleHBlY3RzIGEgcmFkaXVzIHZhbHVlIGFzIGEgc3RyaW5nIG9yIG51bWJlciBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LlxcblxcblwiLFxuICBcIjM1XCI6IFwiYm9yZGVyUmFkaXVzIGV4cGVjdHMgb25lIG9mIFxcXCJ0b3BcXFwiLCBcXFwiYm90dG9tXFxcIiwgXFxcImxlZnRcXFwiIG9yIFxcXCJyaWdodFxcXCIgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LlxcblxcblwiLFxuICBcIjM2XCI6IFwiUHJvcGVydHkgbXVzdCBiZSBhIHN0cmluZyB2YWx1ZS5cXG5cXG5cIixcbiAgXCIzN1wiOiBcIlN5bnRheCBFcnJvciBhdCAlcy5cXG5cXG5cIixcbiAgXCIzOFwiOiBcIkZvcm11bGEgY29udGFpbnMgYSBmdW5jdGlvbiB0aGF0IG5lZWRzIHBhcmVudGhlc2VzIGF0ICVzLlxcblxcblwiLFxuICBcIjM5XCI6IFwiRm9ybXVsYSBpcyBtaXNzaW5nIGNsb3NpbmcgcGFyZW50aGVzaXMgYXQgJXMuXFxuXFxuXCIsXG4gIFwiNDBcIjogXCJGb3JtdWxhIGhhcyB0b28gbWFueSBjbG9zaW5nIHBhcmVudGhlc2VzIGF0ICVzLlxcblxcblwiLFxuICBcIjQxXCI6IFwiQWxsIHZhbHVlcyBpbiBhIGZvcm11bGEgbXVzdCBoYXZlIHRoZSBzYW1lIHVuaXQgb3IgYmUgdW5pdGxlc3MuXFxuXFxuXCIsXG4gIFwiNDJcIjogXCJQbGVhc2UgcHJvdmlkZSBhIG51bWJlciBvZiBzdGVwcyB0byB0aGUgbW9kdWxhclNjYWxlIGhlbHBlci5cXG5cXG5cIixcbiAgXCI0M1wiOiBcIlBsZWFzZSBwYXNzIGEgbnVtYmVyIG9yIG9uZSBvZiB0aGUgcHJlZGVmaW5lZCBzY2FsZXMgdG8gdGhlIG1vZHVsYXJTY2FsZSBoZWxwZXIgYXMgdGhlIHJhdGlvLlxcblxcblwiLFxuICBcIjQ0XCI6IFwiSW52YWxpZCB2YWx1ZSBwYXNzZWQgYXMgYmFzZSB0byBtb2R1bGFyU2NhbGUsIGV4cGVjdGVkIG51bWJlciBvciBlbS9yZW0gc3RyaW5nIGJ1dCBnb3QgJXMuXFxuXFxuXCIsXG4gIFwiNDVcIjogXCJQYXNzZWQgaW52YWxpZCBhcmd1bWVudCB0byBoc2xUb0NvbG9yU3RyaW5nLCBwbGVhc2UgcGFzcyBhIEhzbENvbG9yIG9yIEhzbGFDb2xvciBvYmplY3QuXFxuXFxuXCIsXG4gIFwiNDZcIjogXCJQYXNzZWQgaW52YWxpZCBhcmd1bWVudCB0byByZ2JUb0NvbG9yU3RyaW5nLCBwbGVhc2UgcGFzcyBhIFJnYkNvbG9yIG9yIFJnYmFDb2xvciBvYmplY3QuXFxuXFxuXCIsXG4gIFwiNDdcIjogXCJtaW5TY3JlZW4gYW5kIG1heFNjcmVlbiBtdXN0IGJlIHByb3ZpZGVkIGFzIHN0cmluZ2lmaWVkIG51bWJlcnMgd2l0aCB0aGUgc2FtZSB1bml0cy5cXG5cXG5cIixcbiAgXCI0OFwiOiBcImZyb21TaXplIGFuZCB0b1NpemUgbXVzdCBiZSBwcm92aWRlZCBhcyBzdHJpbmdpZmllZCBudW1iZXJzIHdpdGggdGhlIHNhbWUgdW5pdHMuXFxuXFxuXCIsXG4gIFwiNDlcIjogXCJFeHBlY3RzIGVpdGhlciBhbiBhcnJheSBvZiBvYmplY3RzIG9yIGEgc2luZ2xlIG9iamVjdCB3aXRoIHRoZSBwcm9wZXJ0aWVzIHByb3AsIGZyb21TaXplLCBhbmQgdG9TaXplLlxcblxcblwiLFxuICBcIjUwXCI6IFwiRXhwZWN0cyB0aGUgb2JqZWN0cyBpbiB0aGUgZmlyc3QgYXJndW1lbnQgYXJyYXkgdG8gaGF2ZSB0aGUgcHJvcGVydGllcyBwcm9wLCBmcm9tU2l6ZSwgYW5kIHRvU2l6ZS5cXG5cXG5cIixcbiAgXCI1MVwiOiBcIkV4cGVjdHMgdGhlIGZpcnN0IGFyZ3VtZW50IG9iamVjdCB0byBoYXZlIHRoZSBwcm9wZXJ0aWVzIHByb3AsIGZyb21TaXplLCBhbmQgdG9TaXplLlxcblxcblwiLFxuICBcIjUyXCI6IFwiZm9udEZhY2UgZXhwZWN0cyBlaXRoZXIgdGhlIHBhdGggdG8gdGhlIGZvbnQgZmlsZShzKSBvciBhIG5hbWUgb2YgYSBsb2NhbCBjb3B5LlxcblxcblwiLFxuICBcIjUzXCI6IFwiZm9udEZhY2UgZXhwZWN0cyBsb2NhbEZvbnRzIHRvIGJlIGFuIGFycmF5LlxcblxcblwiLFxuICBcIjU0XCI6IFwiZm9udEZhY2UgZXhwZWN0cyBmaWxlRm9ybWF0cyB0byBiZSBhbiBhcnJheS5cXG5cXG5cIixcbiAgXCI1NVwiOiBcImZvbnRGYWNlIGV4cGVjdHMgYSBuYW1lIG9mIGEgZm9udC1mYW1pbHkuXFxuXFxuXCIsXG4gIFwiNTZcIjogXCJsaW5lYXJHcmFkaWVudCByZXF1cmllcyBhdCBsZWFzdCAyIGNvbG9yLXN0b3BzIHRvIHByb3Blcmx5IHJlbmRlci5cXG5cXG5cIixcbiAgXCI1N1wiOiBcInJhZGlhbEdyYWRpZW50IHJlcXVyaWVzIGF0IGxlYXN0IDIgY29sb3Itc3RvcHMgdG8gcHJvcGVybHkgcmVuZGVyLlxcblxcblwiLFxuICBcIjU4XCI6IFwiUGxlYXNlIHN1cHBseSBhIGZpbGVuYW1lIHRvIHJldGluYUltYWdlKCkgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LlxcblxcblwiLFxuICBcIjU5XCI6IFwiUGFzc2VkIGludmFsaWQgYXJndW1lbnQgdG8gdHJpYW5nbGUsIHBsZWFzZSBwYXNzIGNvcnJlY3QgcG9pbnRpbmdEaXJlY3Rpb24gZS5nLiAncmlnaHQnLlxcblxcblwiLFxuICBcIjYwXCI6IFwiUGFzc2VkIGFuIGludmFsaWQgdmFsdWUgdG8gYGhlaWdodGAgb3IgYHdpZHRoYC4gUGxlYXNlIHByb3ZpZGUgYSBwaXhlbCBiYXNlZCB1bml0LlxcblxcblwiLFxuICBcIjYxXCI6IFwiUHJvcGVydHkgbXVzdCBiZSBhIHN0cmluZyB2YWx1ZS5cXG5cXG5cIixcbiAgXCI2MlwiOiBcImJvcmRlclJhZGl1cyBleHBlY3RzIGEgcmFkaXVzIHZhbHVlIGFzIGEgc3RyaW5nIG9yIG51bWJlciBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LlxcblxcblwiLFxuICBcIjYzXCI6IFwiYm9yZGVyUmFkaXVzIGV4cGVjdHMgb25lIG9mIFxcXCJ0b3BcXFwiLCBcXFwiYm90dG9tXFxcIiwgXFxcImxlZnRcXFwiIG9yIFxcXCJyaWdodFxcXCIgYXMgdGhlIGZpcnN0IGFyZ3VtZW50LlxcblxcblwiLFxuICBcIjY0XCI6IFwiVGhlIGFuaW1hdGlvbiBzaG9ydGhhbmQgb25seSB0YWtlcyA4IGFyZ3VtZW50cy4gU2VlIHRoZSBzcGVjaWZpY2F0aW9uIGZvciBtb3JlIGluZm9ybWF0aW9uOiBodHRwOi8vbWRuLmlvL2FuaW1hdGlvbi5cXG5cXG5cIixcbiAgXCI2NVwiOiBcIlRvIHBhc3MgbXVsdGlwbGUgYW5pbWF0aW9ucyBwbGVhc2Ugc3VwcGx5IHRoZW0gaW4gYXJyYXlzLCBlLmcuIGFuaW1hdGlvbihbJ3JvdGF0ZScsICcycyddLCBbJ21vdmUnLCAnMXMnXSlcXFxcblRvIHBhc3MgYSBzaW5nbGUgYW5pbWF0aW9uIHBsZWFzZSBzdXBwbHkgdGhlbSBpbiBzaW1wbGUgdmFsdWVzLCBlLmcuIGFuaW1hdGlvbigncm90YXRlJywgJzJzJykuXFxuXFxuXCIsXG4gIFwiNjZcIjogXCJUaGUgYW5pbWF0aW9uIHNob3J0aGFuZCBhcnJheXMgY2FuIG9ubHkgaGF2ZSA4IGVsZW1lbnRzLiBTZWUgdGhlIHNwZWNpZmljYXRpb24gZm9yIG1vcmUgaW5mb3JtYXRpb246IGh0dHA6Ly9tZG4uaW8vYW5pbWF0aW9uLlxcblxcblwiLFxuICBcIjY3XCI6IFwiWW91IG11c3QgcHJvdmlkZSBhIHRlbXBsYXRlIHRvIHRoaXMgbWV0aG9kLlxcblxcblwiLFxuICBcIjY4XCI6IFwiWW91IHBhc3NlZCBhbiB1bnN1cHBvcnRlZCBzZWxlY3RvciBzdGF0ZSB0byB0aGlzIG1ldGhvZC5cXG5cXG5cIixcbiAgXCI2OVwiOiBcIkV4cGVjdGVkIGEgc3RyaW5nIGVuZGluZyBpbiBcXFwicHhcXFwiIG9yIGEgbnVtYmVyIHBhc3NlZCBhcyB0aGUgZmlyc3QgYXJndW1lbnQgdG8gJXMoKSwgZ290ICVzIGluc3RlYWQuXFxuXFxuXCIsXG4gIFwiNzBcIjogXCJFeHBlY3RlZCBhIHN0cmluZyBlbmRpbmcgaW4gXFxcInB4XFxcIiBvciBhIG51bWJlciBwYXNzZWQgYXMgdGhlIHNlY29uZCBhcmd1bWVudCB0byAlcygpLCBnb3QgJXMgaW5zdGVhZC5cXG5cXG5cIixcbiAgXCI3MVwiOiBcIlBhc3NlZCBpbnZhbGlkIHBpeGVsIHZhbHVlICVzIHRvICVzKCksIHBsZWFzZSBwYXNzIGEgdmFsdWUgbGlrZSBcXFwiMTJweFxcXCIgb3IgMTIuXFxuXFxuXCIsXG4gIFwiNzJcIjogXCJQYXNzZWQgaW52YWxpZCBiYXNlIHZhbHVlICVzIHRvICVzKCksIHBsZWFzZSBwYXNzIGEgdmFsdWUgbGlrZSBcXFwiMTJweFxcXCIgb3IgMTIuXFxuXFxuXCIsXG4gIFwiNzNcIjogXCJQbGVhc2UgcHJvdmlkZSBhIHZhbGlkIENTUyB2YXJpYWJsZS5cXG5cXG5cIixcbiAgXCI3NFwiOiBcIkNTUyB2YXJpYWJsZSBub3QgZm91bmQuXFxuXCJcbn07XG4vKipcbiAqIHN1cGVyIGJhc2ljIHZlcnNpb24gb2Ygc3ByaW50ZlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmb3JtYXQoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICB2YXIgYSA9IGFyZ3NbMF07XG4gIHZhciBiID0gW107XG4gIHZhciBjO1xuXG4gIGZvciAoYyA9IDE7IGMgPCBhcmdzLmxlbmd0aDsgYyArPSAxKSB7XG4gICAgYi5wdXNoKGFyZ3NbY10pO1xuICB9XG5cbiAgYi5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7XG4gICAgYSA9IGEucmVwbGFjZSgvJVthLXpdLywgZCk7XG4gIH0pO1xuICByZXR1cm4gYTtcbn1cbi8qKlxuICogQ3JlYXRlIGFuIGVycm9yIGZpbGUgb3V0IG9mIGVycm9ycy5tZCBmb3IgZGV2ZWxvcG1lbnQgYW5kIGEgc2ltcGxlIHdlYiBsaW5rIHRvIHRoZSBmdWxsIGVycm9yc1xuICogaW4gcHJvZHVjdGlvbiBtb2RlLlxuICogQHByaXZhdGVcbiAqL1xuXG5cbnZhciBQb2xpc2hlZEVycm9yID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfRXJyb3IpIHtcbiAgX2luaGVyaXRzTG9vc2UoUG9saXNoZWRFcnJvciwgX0Vycm9yKTtcblxuICBmdW5jdGlvbiBQb2xpc2hlZEVycm9yKGNvZGUpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgX3RoaXMgPSBfRXJyb3IuY2FsbCh0aGlzLCBcIkFuIGVycm9yIG9jY3VycmVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3N0eWxlZC1jb21wb25lbnRzL3BvbGlzaGVkL2Jsb2IvbWFpbi9zcmMvaW50ZXJuYWxIZWxwZXJzL2Vycm9ycy5tZCNcIiArIGNvZGUgKyBcIiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIikgfHwgdGhpcztcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yID4gMSA/IF9sZW4yIC0gMSA6IDApLCBfa2V5MiA9IDE7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMgPSBfRXJyb3IuY2FsbCh0aGlzLCBmb3JtYXQuYXBwbHkodm9pZCAwLCBbRVJST1JTW2NvZGVdXS5jb25jYXQoYXJncykpKSB8fCB0aGlzO1xuICAgIH1cblxuICAgIHJldHVybiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKTtcbiAgfVxuXG4gIHJldHVybiBQb2xpc2hlZEVycm9yO1xufSggLyojX19QVVJFX18qL193cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTtcblxudmFyIHVuaXRSZWdFeHAgPSAvKCg/IVxcdylhfG5hfGhjfG1jfGRnfG1lW3JdP3x4ZXxuaSg/IVthLXpBLVpdKXxtbXxjcHx0cHx4cHxxKD8hcyl8aHZ8eGFtdnxuaW12fHd2fHNtfHMoPyFcXER8JCl8Z2VkfGRhcmc/fG5ydXQpL2c7IC8vIE1lcmdlcyBhZGRpdGlvbmFsIG1hdGggZnVuY3Rpb25hbGl0eSBpbnRvIHRoZSBkZWZhdWx0cy5cblxuZnVuY3Rpb24gbWVyZ2VTeW1ib2xNYXBzKGFkZGl0aW9uYWxTeW1ib2xzKSB7XG4gIHZhciBzeW1ib2xNYXAgPSB7fTtcbiAgc3ltYm9sTWFwLnN5bWJvbHMgPSBhZGRpdGlvbmFsU3ltYm9scyA/IF9leHRlbmRzKHt9LCBkZWZhdWx0TWF0aFN5bWJvbHMuc3ltYm9scywgYWRkaXRpb25hbFN5bWJvbHMuc3ltYm9scykgOiBfZXh0ZW5kcyh7fSwgZGVmYXVsdE1hdGhTeW1ib2xzLnN5bWJvbHMpO1xuICByZXR1cm4gc3ltYm9sTWFwO1xufVxuXG5mdW5jdGlvbiBleGVjKG9wZXJhdG9ycywgdmFsdWVzKSB7XG4gIHZhciBfcmVmO1xuXG4gIHZhciBvcCA9IG9wZXJhdG9ycy5wb3AoKTtcbiAgdmFsdWVzLnB1c2gob3AuZi5hcHBseShvcCwgKF9yZWYgPSBbXSkuY29uY2F0LmFwcGx5KF9yZWYsIHZhbHVlcy5zcGxpY2UoLW9wLmFyZ0NvdW50KSkpKTtcbiAgcmV0dXJuIG9wLnByZWNlZGVuY2U7XG59XG5cbmZ1bmN0aW9uIGNhbGN1bGF0ZShleHByZXNzaW9uLCBhZGRpdGlvbmFsU3ltYm9scykge1xuICB2YXIgc3ltYm9sTWFwID0gbWVyZ2VTeW1ib2xNYXBzKGFkZGl0aW9uYWxTeW1ib2xzKTtcbiAgdmFyIG1hdGNoO1xuICB2YXIgb3BlcmF0b3JzID0gW3N5bWJvbE1hcC5zeW1ib2xzWycoJ10ucHJlZml4XTtcbiAgdmFyIHZhbHVlcyA9IFtdO1xuICB2YXIgcGF0dGVybiA9IG5ldyBSZWdFeHAoIC8vIFBhdHRlcm4gZm9yIG51bWJlcnNcbiAgXCJcXFxcZCsoPzpcXFxcLlxcXFxkKyk/fFwiICsgLy8gLi4uYW5kIHBhdHRlcm5zIGZvciBpbmRpdmlkdWFsIG9wZXJhdG9ycy9mdW5jdGlvbiBuYW1lc1xuICBPYmplY3Qua2V5cyhzeW1ib2xNYXAuc3ltYm9scykubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gc3ltYm9sTWFwLnN5bWJvbHNba2V5XTtcbiAgfSkgLy8gbG9uZ2VyIHN5bWJvbHMgc2hvdWxkIGJlIGxpc3RlZCBmaXJzdFxuICAvLyAkRmxvd0ZpeE1lXG4gIC5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgcmV0dXJuIGIuc3ltYm9sLmxlbmd0aCAtIGEuc3ltYm9sLmxlbmd0aDtcbiAgfSkgLy8gJEZsb3dGaXhNZVxuICAubWFwKGZ1bmN0aW9uICh2YWwpIHtcbiAgICByZXR1cm4gdmFsLnJlZ1N5bWJvbDtcbiAgfSkuam9pbignfCcpICsgXCJ8KFxcXFxTKVwiLCAnZycpO1xuICBwYXR0ZXJuLmxhc3RJbmRleCA9IDA7IC8vIFJlc2V0IHJlZ3VsYXIgZXhwcmVzc2lvbiBvYmplY3RcblxuICB2YXIgYWZ0ZXJWYWx1ZSA9IGZhbHNlO1xuXG4gIGRvIHtcbiAgICBtYXRjaCA9IHBhdHRlcm4uZXhlYyhleHByZXNzaW9uKTtcblxuICAgIHZhciBfcmVmMiA9IG1hdGNoIHx8IFsnKScsIHVuZGVmaW5lZF0sXG4gICAgICAgIHRva2VuID0gX3JlZjJbMF0sXG4gICAgICAgIGJhZCA9IF9yZWYyWzFdO1xuXG4gICAgdmFyIG5vdE51bWJlciA9IHN5bWJvbE1hcC5zeW1ib2xzW3Rva2VuXTtcbiAgICB2YXIgbm90TmV3VmFsdWUgPSBub3ROdW1iZXIgJiYgIW5vdE51bWJlci5wcmVmaXggJiYgIW5vdE51bWJlci5mdW5jO1xuICAgIHZhciBub3RBZnRlclZhbHVlID0gIW5vdE51bWJlciB8fCAhbm90TnVtYmVyLnBvc3RmaXggJiYgIW5vdE51bWJlci5pbmZpeDsgLy8gQ2hlY2sgZm9yIHN5bnRheCBlcnJvcnM6XG5cbiAgICBpZiAoYmFkIHx8IChhZnRlclZhbHVlID8gbm90QWZ0ZXJWYWx1ZSA6IG5vdE5ld1ZhbHVlKSkge1xuICAgICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoMzcsIG1hdGNoID8gbWF0Y2guaW5kZXggOiBleHByZXNzaW9uLmxlbmd0aCwgZXhwcmVzc2lvbik7XG4gICAgfVxuXG4gICAgaWYgKGFmdGVyVmFsdWUpIHtcbiAgICAgIC8vIFdlIGVpdGhlciBoYXZlIGFuIGluZml4IG9yIHBvc3RmaXggb3BlcmF0b3IgKHRoZXkgc2hvdWxkIGJlIG11dHVhbGx5IGV4Y2x1c2l2ZSlcbiAgICAgIHZhciBjdXJyID0gbm90TnVtYmVyLnBvc3RmaXggfHwgbm90TnVtYmVyLmluZml4O1xuXG4gICAgICBkbyB7XG4gICAgICAgIHZhciBwcmV2ID0gb3BlcmF0b3JzW29wZXJhdG9ycy5sZW5ndGggLSAxXTtcbiAgICAgICAgaWYgKChjdXJyLnByZWNlZGVuY2UgLSBwcmV2LnByZWNlZGVuY2UgfHwgcHJldi5yaWdodFRvTGVmdCkgPiAwKSBicmVhazsgLy8gQXBwbHkgcHJldmlvdXMgb3BlcmF0b3IsIHNpbmNlIGl0IGhhcyBwcmVjZWRlbmNlIG92ZXIgY3VycmVudCBvbmVcbiAgICAgIH0gd2hpbGUgKGV4ZWMob3BlcmF0b3JzLCB2YWx1ZXMpKTsgLy8gRXhpdCBsb29wIGFmdGVyIGV4ZWN1dGluZyBhbiBvcGVuaW5nIHBhcmVudGhlc2lzIG9yIGZ1bmN0aW9uXG5cblxuICAgICAgYWZ0ZXJWYWx1ZSA9IGN1cnIubm90YXRpb24gPT09ICdwb3N0Zml4JztcblxuICAgICAgaWYgKGN1cnIuc3ltYm9sICE9PSAnKScpIHtcbiAgICAgICAgb3BlcmF0b3JzLnB1c2goY3Vycik7IC8vIFBvc3RmaXggYWx3YXlzIGhhcyBwcmVjZWRlbmNlIG92ZXIgYW55IG9wZXJhdG9yIHRoYXQgZm9sbG93cyBhZnRlciBpdFxuXG4gICAgICAgIGlmIChhZnRlclZhbHVlKSBleGVjKG9wZXJhdG9ycywgdmFsdWVzKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKG5vdE51bWJlcikge1xuICAgICAgLy8gcHJlZml4IG9wZXJhdG9yIG9yIGZ1bmN0aW9uXG4gICAgICBvcGVyYXRvcnMucHVzaChub3ROdW1iZXIucHJlZml4IHx8IG5vdE51bWJlci5mdW5jKTtcblxuICAgICAgaWYgKG5vdE51bWJlci5mdW5jKSB7XG4gICAgICAgIC8vIFJlcXVpcmUgYW4gb3BlbmluZyBwYXJlbnRoZXNpc1xuICAgICAgICBtYXRjaCA9IHBhdHRlcm4uZXhlYyhleHByZXNzaW9uKTtcblxuICAgICAgICBpZiAoIW1hdGNoIHx8IG1hdGNoWzBdICE9PSAnKCcpIHtcbiAgICAgICAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcigzOCwgbWF0Y2ggPyBtYXRjaC5pbmRleCA6IGV4cHJlc3Npb24ubGVuZ3RoLCBleHByZXNzaW9uKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBudW1iZXJcbiAgICAgIHZhbHVlcy5wdXNoKCt0b2tlbik7XG4gICAgICBhZnRlclZhbHVlID0gdHJ1ZTtcbiAgICB9XG4gIH0gd2hpbGUgKG1hdGNoICYmIG9wZXJhdG9ycy5sZW5ndGgpO1xuXG4gIGlmIChvcGVyYXRvcnMubGVuZ3RoKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoMzksIG1hdGNoID8gbWF0Y2guaW5kZXggOiBleHByZXNzaW9uLmxlbmd0aCwgZXhwcmVzc2lvbik7XG4gIH0gZWxzZSBpZiAobWF0Y2gpIHtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0MCwgbWF0Y2ggPyBtYXRjaC5pbmRleCA6IGV4cHJlc3Npb24ubGVuZ3RoLCBleHByZXNzaW9uKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdmFsdWVzLnBvcCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJldmVyc2VTdHJpbmcoc3RyKSB7XG4gIHJldHVybiBzdHIuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKTtcbn1cbi8qKlxuICogSGVscGVyIGZvciBkb2luZyBtYXRoIHdpdGggQ1NTIFVuaXRzLiBBY2NlcHRzIGEgZm9ybXVsYSBhcyBhIHN0cmluZy4gQWxsIHZhbHVlcyBpbiB0aGUgZm9ybXVsYSBtdXN0IGhhdmUgdGhlIHNhbWUgdW5pdCAob3IgYmUgdW5pdGxlc3MpLiBTdXBwb3J0cyBjb21wbGV4IGZvcm11bGFzIHV0bGl6aWluZyBhZGRpdGlvbiwgc3VidHJhY3Rpb24sIG11bHRpcGxpY2F0aW9uLCBkaXZpc2lvbiwgc3F1YXJlIHJvb3QsIHBvd2VycywgZmFjdG9yaWFsLCBtaW4sIG1heCwgYXMgd2VsbCBhcyBwYXJlbnRoZXNlcyBmb3Igb3JkZXIgb2Ygb3BlcmF0aW9uLlxuICpcbiAqSW4gY2FzZXMgd2hlcmUgeW91IG5lZWQgdG8gZG8gY2FsY3VsYXRpb25zIHdpdGggbWl4ZWQgdW5pdHMgd2hlcmUgb25lIHVuaXQgaXMgYSBbcmVsYXRpdmUgbGVuZ3RoIHVuaXRdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0NTUy9sZW5ndGgjUmVsYXRpdmVfbGVuZ3RoX3VuaXRzKSwgeW91IHdpbGwgd2FudCB0byB1c2UgW0NTUyBDYWxjXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvY2FsYykuXG4gKlxuICogKndhcm5pbmcqIFdoaWxlIHdlJ3ZlIGRvbmUgZXZlcnl0aGluZyBwb3NzaWJsZSB0byBlbnN1cmUgbWF0aCBzYWZlbHkgZXZhbHV0ZXMgZm9ybXVsYXMgZXhwcmVzc2VkIGFzIHN0cmluZ3MsIHlvdSBzaG91bGQgYWx3YXlzIHVzZSBleHRyZW1lIGNhdXRpb24gd2hlbiBwYXNzaW5nIGBtYXRoYCB1c2VyIHByb3ZpZGVkIHZhbHVlcy5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGZvbnRTaXplOiBtYXRoKCcxMnJlbSArIDhyZW0nKSxcbiAqICAgZm9udFNpemU6IG1hdGgoJygxMnB4ICsgMnB4KSAqIDMnKSxcbiAqICAgZm9udFNpemU6IG1hdGgoJzNweF4yICsgc3FydCg0KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBmb250U2l6ZTogJHttYXRoKCcxMnJlbSArIDhyZW0nKX07XG4gKiAgIGZvbnRTaXplOiAke21hdGgoJygxMnB4ICsgMnB4KSAqIDMnKX07XG4gKiAgIGZvbnRTaXplOiAke21hdGgoJzNweF4yICsgc3FydCg0KScpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2OiB7XG4gKiAgIGZvbnRTaXplOiAnMjByZW0nLFxuICogICBmb250U2l6ZTogJzQycHgnLFxuICogICBmb250U2l6ZTogJzExcHgnLFxuICogfVxuICovXG5cblxuZnVuY3Rpb24gbWF0aChmb3JtdWxhLCBhZGRpdGlvbmFsU3ltYm9scykge1xuICB2YXIgcmV2ZXJzZWRGb3JtdWxhID0gcmV2ZXJzZVN0cmluZyhmb3JtdWxhKTtcbiAgdmFyIGZvcm11bGFNYXRjaCA9IHJldmVyc2VkRm9ybXVsYS5tYXRjaCh1bml0UmVnRXhwKTsgLy8gQ2hlY2sgdGhhdCBhbGwgdW5pdHMgYXJlIHRoZSBzYW1lXG5cbiAgaWYgKGZvcm11bGFNYXRjaCAmJiAhZm9ybXVsYU1hdGNoLmV2ZXJ5KGZ1bmN0aW9uICh1bml0KSB7XG4gICAgcmV0dXJuIHVuaXQgPT09IGZvcm11bGFNYXRjaFswXTtcbiAgfSkpIHtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0MSk7XG4gIH1cblxuICB2YXIgY2xlYW5Gb3JtdWxhID0gcmV2ZXJzZVN0cmluZyhyZXZlcnNlZEZvcm11bGEucmVwbGFjZSh1bml0UmVnRXhwLCAnJykpO1xuICByZXR1cm4gXCJcIiArIGNhbGN1bGF0ZShjbGVhbkZvcm11bGEsIGFkZGl0aW9uYWxTeW1ib2xzKSArIChmb3JtdWxhTWF0Y2ggPyByZXZlcnNlU3RyaW5nKGZvcm11bGFNYXRjaFswXSkgOiAnJyk7XG59XG5cbnZhciBjc3NWYXJpYWJsZVJlZ2V4ID0gLy0tW1xcU10qL2c7XG4vKipcbiAqIEZldGNoZXMgdGhlIHZhbHVlIG9mIGEgcGFzc2VkIENTUyBWYXJpYWJsZS5cbiAqXG4gKiBQYXNzdGhyb3VnaCBjYW4gYmUgZW5hYmxlZCAob2ZmIGJ5IGRlZmF1bHQpIGZvciB3aGVuIHlvdSBhcmUgdW5zdXJlIG9mIHRoZSBpbnB1dCBhbmQgd2FudCBub24tdmFyaWFibGUgdmFsdWVzIHRvIGJlIHJldHVybmVkIGluc3RlYWQgb2YgYW4gZXJyb3IuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgJ2JhY2tncm91bmQnOiBjc3NWYXIoJy0tYmFja2dyb3VuZC1jb2xvcicpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke2Nzc1ZhcignLS1iYWNrZ3JvdW5kLWNvbG9yJyl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqXG4gKiBlbGVtZW50IHtcbiAqICAgJ2JhY2tncm91bmQnOiAncmVkJ1xuICogfVxuICovXG5cbmZ1bmN0aW9uIGNzc1Zhcihjc3NWYXJpYWJsZSwgcGFzc1Rocm91Z2gpIHtcbiAgaWYgKCFjc3NWYXJpYWJsZSB8fCAhY3NzVmFyaWFibGUubWF0Y2goY3NzVmFyaWFibGVSZWdleCkpIHtcbiAgICBpZiAocGFzc1Rocm91Z2gpIHJldHVybiBjc3NWYXJpYWJsZTtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig3Myk7XG4gIH1cblxuICB2YXIgdmFyaWFibGVWYWx1ZTtcbiAgLyogZXNsaW50LWRpc2FibGUgKi9cblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuXG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgIT09ICd1bmRlZmluZWQnICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCAhPT0gbnVsbCkge1xuICAgIHZhcmlhYmxlVmFsdWUgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuZ2V0UHJvcGVydHlWYWx1ZShjc3NWYXJpYWJsZSk7XG4gIH1cbiAgLyogZXNsaW50LWVuYWJsZSAqL1xuXG5cbiAgaWYgKHZhcmlhYmxlVmFsdWUpIHtcbiAgICByZXR1cm4gdmFyaWFibGVWYWx1ZS50cmltKCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNzQpO1xuICB9XG59XG5cbi8vIEBwcml2YXRlXG5mdW5jdGlvbiBjYXBpdGFsaXplU3RyaW5nKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyaW5nLnNsaWNlKDEpO1xufVxuXG52YXIgcG9zaXRpb25NYXAgPSBbJ1RvcCcsICdSaWdodCcsICdCb3R0b20nLCAnTGVmdCddO1xuXG5mdW5jdGlvbiBnZW5lcmF0ZVByb3BlcnR5KHByb3BlcnR5LCBwb3NpdGlvbikge1xuICBpZiAoIXByb3BlcnR5KSByZXR1cm4gcG9zaXRpb24udG9Mb3dlckNhc2UoKTtcbiAgdmFyIHNwbGl0UHJvcGVydHkgPSBwcm9wZXJ0eS5zcGxpdCgnLScpO1xuXG4gIGlmIChzcGxpdFByb3BlcnR5Lmxlbmd0aCA+IDEpIHtcbiAgICBzcGxpdFByb3BlcnR5LnNwbGljZSgxLCAwLCBwb3NpdGlvbik7XG4gICAgcmV0dXJuIHNwbGl0UHJvcGVydHkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIHZhbCkge1xuICAgICAgcmV0dXJuIFwiXCIgKyBhY2MgKyBjYXBpdGFsaXplU3RyaW5nKHZhbCk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIgam9pbmVkUHJvcGVydHkgPSBwcm9wZXJ0eS5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXCIgKyBwb3NpdGlvbiArIFwiJDJcIik7XG4gIHJldHVybiBwcm9wZXJ0eSA9PT0gam9pbmVkUHJvcGVydHkgPyBcIlwiICsgcHJvcGVydHkgKyBwb3NpdGlvbiA6IGpvaW5lZFByb3BlcnR5O1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVN0eWxlcyhwcm9wZXJ0eSwgdmFsdWVzV2l0aERlZmF1bHRzKSB7XG4gIHZhciBzdHlsZXMgPSB7fTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbHVlc1dpdGhEZWZhdWx0cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIGlmICh2YWx1ZXNXaXRoRGVmYXVsdHNbaV0gfHwgdmFsdWVzV2l0aERlZmF1bHRzW2ldID09PSAwKSB7XG4gICAgICBzdHlsZXNbZ2VuZXJhdGVQcm9wZXJ0eShwcm9wZXJ0eSwgcG9zaXRpb25NYXBbaV0pXSA9IHZhbHVlc1dpdGhEZWZhdWx0c1tpXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gc3R5bGVzO1xufVxuLyoqXG4gKiBFbmFibGVzIHNob3J0aGFuZCBmb3IgZGlyZWN0aW9uLWJhc2VkIHByb3BlcnRpZXMuIEl0IGFjY2VwdHMgYSBwcm9wZXJ0eSAoaHlwaGVuYXRlZCBvciBjYW1lbENhc2VkKSBhbmQgdXAgdG8gZm91ciB2YWx1ZXMgdGhhdCBtYXAgdG8gdG9wLCByaWdodCwgYm90dG9tLCBhbmQgbGVmdCwgcmVzcGVjdGl2ZWx5LiBZb3UgY2FuIG9wdGlvbmFsbHkgcGFzcyBhbiBlbXB0eSBzdHJpbmcgdG8gZ2V0IG9ubHkgdGhlIGRpcmVjdGlvbmFsIHZhbHVlcyBhcyBwcm9wZXJ0aWVzLiBZb3UgY2FuIGFsc28gb3B0aW9uYWxseSBwYXNzIGEgbnVsbCBhcmd1bWVudCBmb3IgYSBkaXJlY3Rpb25hbCB2YWx1ZSB0byBpZ25vcmUgaXQuXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5kaXJlY3Rpb25hbFByb3BlcnR5KCdwYWRkaW5nJywgJzEycHgnLCAnMjRweCcsICczNnB4JywgJzQ4cHgnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke2RpcmVjdGlvbmFsUHJvcGVydHkoJ3BhZGRpbmcnLCAnMTJweCcsICcyNHB4JywgJzM2cHgnLCAnNDhweCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAncGFkZGluZ1RvcCc6ICcxMnB4JyxcbiAqICAgJ3BhZGRpbmdSaWdodCc6ICcyNHB4JyxcbiAqICAgJ3BhZGRpbmdCb3R0b20nOiAnMzZweCcsXG4gKiAgICdwYWRkaW5nTGVmdCc6ICc0OHB4J1xuICogfVxuICovXG5cblxuZnVuY3Rpb24gZGlyZWN0aW9uYWxQcm9wZXJ0eShwcm9wZXJ0eSkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgdmFsdWVzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICB2YWx1ZXNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgLy8gIHByZXR0aWVyLWlnbm9yZVxuICB2YXIgZmlyc3RWYWx1ZSA9IHZhbHVlc1swXSxcbiAgICAgIF92YWx1ZXMkID0gdmFsdWVzWzFdLFxuICAgICAgc2Vjb25kVmFsdWUgPSBfdmFsdWVzJCA9PT0gdm9pZCAwID8gZmlyc3RWYWx1ZSA6IF92YWx1ZXMkLFxuICAgICAgX3ZhbHVlcyQyID0gdmFsdWVzWzJdLFxuICAgICAgdGhpcmRWYWx1ZSA9IF92YWx1ZXMkMiA9PT0gdm9pZCAwID8gZmlyc3RWYWx1ZSA6IF92YWx1ZXMkMixcbiAgICAgIF92YWx1ZXMkMyA9IHZhbHVlc1szXSxcbiAgICAgIGZvdXJ0aFZhbHVlID0gX3ZhbHVlcyQzID09PSB2b2lkIDAgPyBzZWNvbmRWYWx1ZSA6IF92YWx1ZXMkMztcbiAgdmFyIHZhbHVlc1dpdGhEZWZhdWx0cyA9IFtmaXJzdFZhbHVlLCBzZWNvbmRWYWx1ZSwgdGhpcmRWYWx1ZSwgZm91cnRoVmFsdWVdO1xuICByZXR1cm4gZ2VuZXJhdGVTdHlsZXMocHJvcGVydHksIHZhbHVlc1dpdGhEZWZhdWx0cyk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSBzdHJpbmcgZW5kcyB3aXRoIHNvbWV0aGluZ1xuICogQHByaXZhdGVcbiAqL1xuZnVuY3Rpb24gZW5kc1dpdGggKHN0cmluZywgc3VmZml4KSB7XG4gIHJldHVybiBzdHJpbmcuc3Vic3RyKC1zdWZmaXgubGVuZ3RoKSA9PT0gc3VmZml4O1xufVxuXG52YXIgY3NzUmVnZXggPSAvXihbKy1dPyg/OlxcZCt8XFxkKlxcLlxcZCspKShbYS16XSp8JSkkLztcbi8qKlxuICogUmV0dXJucyBhIGdpdmVuIENTUyB2YWx1ZSBtaW51cyBpdHMgdW5pdCBvZiBtZWFzdXJlLlxuICpcbiAqIEBkZXByZWNhdGVkIC0gc3RyaXBVbml0J3MgdW5pdFJldHVybiBmdW5jdGlvbmFsaXR5IGhhcyBiZWVuIG1hcmtlZCBmb3IgZGVwcmVjYXRpb24gaW4gcG9saXNoZWQgNC4wLiBJdCdzIGZ1bmN0aW9uYWxpdHkgaGFzIGJlZW4gYmVlbiBtb3ZlZCB0byBnZXRWYWx1ZUFuZFVuaXQuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgJy0tZGltZW5zaW9uJzogc3RyaXBVbml0KCcxMDBweCcpXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIC0tZGltZW5zaW9uOiAke3N0cmlwVW5pdCgnMTAwcHgnKX07XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqIGVsZW1lbnQge1xuICogICAnLS1kaW1lbnNpb24nOiAxMDBcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBzdHJpcFVuaXQodmFsdWUsIHVuaXRSZXR1cm4pIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHJldHVybiB1bml0UmV0dXJuID8gW3ZhbHVlLCB1bmRlZmluZWRdIDogdmFsdWU7XG4gIHZhciBtYXRjaGVkVmFsdWUgPSB2YWx1ZS5tYXRjaChjc3NSZWdleCk7XG5cbiAgaWYgKHVuaXRSZXR1cm4pIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgIGNvbnNvbGUud2FybihcInN0cmlwVW5pdCdzIHVuaXRSZXR1cm4gZnVuY3Rpb25hbGl0eSBoYXMgYmVlbiBtYXJrZWQgZm9yIGRlcHJlY2F0aW9uIGluIHBvbGlzaGVkIDQuMC4gSXQncyBmdW5jdGlvbmFsaXR5IGhhcyBiZWVuIGJlZW4gbW92ZWQgdG8gZ2V0VmFsdWVBbmRVbml0LlwiKTtcbiAgICBpZiAobWF0Y2hlZFZhbHVlKSByZXR1cm4gW3BhcnNlRmxvYXQodmFsdWUpLCBtYXRjaGVkVmFsdWVbMl1dO1xuICAgIHJldHVybiBbdmFsdWUsIHVuZGVmaW5lZF07XG4gIH1cblxuICBpZiAobWF0Y2hlZFZhbHVlKSByZXR1cm4gcGFyc2VGbG9hdCh2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLyoqXG4gKiBGYWN0b3J5IGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBwaXhlbC10by14IGNvbnZlcnRlcnNcbiAqIEBwcml2YXRlXG4gKi9cblxudmFyIHB4dG9GYWN0b3J5ID0gZnVuY3Rpb24gcHh0b0ZhY3RvcnkodG8pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChweHZhbCwgYmFzZSkge1xuICAgIGlmIChiYXNlID09PSB2b2lkIDApIHtcbiAgICAgIGJhc2UgPSAnMTZweCc7XG4gICAgfVxuXG4gICAgdmFyIG5ld1B4dmFsID0gcHh2YWw7XG4gICAgdmFyIG5ld0Jhc2UgPSBiYXNlO1xuXG4gICAgaWYgKHR5cGVvZiBweHZhbCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGlmICghZW5kc1dpdGgocHh2YWwsICdweCcpKSB7XG4gICAgICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDY5LCB0bywgcHh2YWwpO1xuICAgICAgfVxuXG4gICAgICBuZXdQeHZhbCA9IHN0cmlwVW5pdChweHZhbCk7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBiYXNlID09PSAnc3RyaW5nJykge1xuICAgICAgaWYgKCFlbmRzV2l0aChiYXNlLCAncHgnKSkge1xuICAgICAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig3MCwgdG8sIGJhc2UpO1xuICAgICAgfVxuXG4gICAgICBuZXdCYXNlID0gc3RyaXBVbml0KGJhc2UpO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgbmV3UHh2YWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig3MSwgcHh2YWwsIHRvKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG5ld0Jhc2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig3MiwgYmFzZSwgdG8pO1xuICAgIH1cblxuICAgIHJldHVybiBcIlwiICsgbmV3UHh2YWwgLyBuZXdCYXNlICsgdG87XG4gIH07XG59O1xuXG4vKipcbiAqIENvbnZlcnQgcGl4ZWwgdmFsdWUgdG8gZW1zLiBUaGUgZGVmYXVsdCBiYXNlIHZhbHVlIGlzIDE2cHgsIGJ1dCBjYW4gYmUgY2hhbmdlZCBieSBwYXNzaW5nIGFcbiAqIHNlY29uZCBhcmd1bWVudCB0byB0aGUgZnVuY3Rpb24uXG4gKiBAZnVuY3Rpb25cbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gcHh2YWxcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gW2Jhc2U9JzE2cHgnXVxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgJ2hlaWdodCc6IGVtKCcxNnB4JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgaGVpZ2h0OiAke2VtKCcxNnB4Jyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqIGVsZW1lbnQge1xuICogICAnaGVpZ2h0JzogJzFlbSdcbiAqIH1cbiAqL1xuXG52YXIgZW0gPSAvKiNfX1BVUkVfXyovcHh0b0ZhY3RvcnkoJ2VtJyk7XG5cbnZhciBjc3NSZWdleCQxID0gL14oWystXT8oPzpcXGQrfFxcZCpcXC5cXGQrKSkoW2Etel0qfCUpJC87XG4vKipcbiAqIFJldHVybnMgYSBnaXZlbiBDU1MgdmFsdWUgYW5kIGl0cyB1bml0IGFzIGVsZW1lbnRzIG9mIGFuIGFycmF5LlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgICctLWRpbWVuc2lvbic6IGdldFZhbHVlQW5kVW5pdCgnMTAwcHgnKVswXSxcbiAqICAgJy0tdW5pdCc6IGdldFZhbHVlQW5kVW5pdCgnMTAwcHgnKVsxXSxcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgLS1kaW1lbnNpb246ICR7Z2V0VmFsdWVBbmRVbml0KCcxMDBweCcpWzBdfTtcbiAqICAgLS11bml0OiAke2dldFZhbHVlQW5kVW5pdCgnMTAwcHgnKVsxXX07XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqIGVsZW1lbnQge1xuICogICAnLS1kaW1lbnNpb24nOiAxMDAsXG4gKiAgICctLXVuaXQnOiAncHgnLFxuICogfVxuICovXG5cbmZ1bmN0aW9uIGdldFZhbHVlQW5kVW5pdCh2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykgcmV0dXJuIFt2YWx1ZSwgJyddO1xuICB2YXIgbWF0Y2hlZFZhbHVlID0gdmFsdWUubWF0Y2goY3NzUmVnZXgkMSk7XG4gIGlmIChtYXRjaGVkVmFsdWUpIHJldHVybiBbcGFyc2VGbG9hdCh2YWx1ZSksIG1hdGNoZWRWYWx1ZVsyXV07XG4gIHJldHVybiBbdmFsdWUsIHVuZGVmaW5lZF07XG59XG5cbnZhciByYXRpb05hbWVzID0ge1xuICBtaW5vclNlY29uZDogMS4wNjcsXG4gIG1ham9yU2Vjb25kOiAxLjEyNSxcbiAgbWlub3JUaGlyZDogMS4yLFxuICBtYWpvclRoaXJkOiAxLjI1LFxuICBwZXJmZWN0Rm91cnRoOiAxLjMzMyxcbiAgYXVnRm91cnRoOiAxLjQxNCxcbiAgcGVyZmVjdEZpZnRoOiAxLjUsXG4gIG1pbm9yU2l4dGg6IDEuNixcbiAgZ29sZGVuU2VjdGlvbjogMS42MTgsXG4gIG1ham9yU2l4dGg6IDEuNjY3LFxuICBtaW5vclNldmVudGg6IDEuNzc4LFxuICBtYWpvclNldmVudGg6IDEuODc1LFxuICBvY3RhdmU6IDIsXG4gIG1ham9yVGVudGg6IDIuNSxcbiAgbWFqb3JFbGV2ZW50aDogMi42NjcsXG4gIG1ham9yVHdlbGZ0aDogMyxcbiAgZG91YmxlT2N0YXZlOiA0XG59O1xuXG5mdW5jdGlvbiBnZXRSYXRpbyhyYXRpb05hbWUpIHtcbiAgcmV0dXJuIHJhdGlvTmFtZXNbcmF0aW9OYW1lXTtcbn1cbi8qKlxuICogRXN0YWJsaXNoIGNvbnNpc3RlbnQgbWVhc3VyZW1lbnRzIGFuZCBzcGFjaWFsIHJlbGF0aW9uc2hpcHMgdGhyb3VnaG91dCB5b3VyIHByb2plY3RzIGJ5IGluY3JlbWVudGluZyBhbiBlbSBvciByZW0gdmFsdWUgdXAgb3IgZG93biBhIGRlZmluZWQgc2NhbGUuIFdlIHByb3ZpZGUgYSBsaXN0IG9mIGNvbW1vbmx5IHVzZWQgc2NhbGVzIGFzIHByZS1kZWZpbmVkIHZhcmlhYmxlcy5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgICAvLyBJbmNyZW1lbnQgdHdvIHN0ZXBzIHVwIHRoZSBkZWZhdWx0IHNjYWxlXG4gKiAgICdmb250U2l6ZSc6IG1vZHVsYXJTY2FsZSgyKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAgLy8gSW5jcmVtZW50IHR3byBzdGVwcyB1cCB0aGUgZGVmYXVsdCBzY2FsZVxuICogICBmb250U2l6ZTogJHttb2R1bGFyU2NhbGUoMil9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqIGVsZW1lbnQge1xuICogICAnZm9udFNpemUnOiAnMS43NzY4OWVtJ1xuICogfVxuICovXG5cblxuZnVuY3Rpb24gbW9kdWxhclNjYWxlKHN0ZXBzLCBiYXNlLCByYXRpbykge1xuICBpZiAoYmFzZSA9PT0gdm9pZCAwKSB7XG4gICAgYmFzZSA9ICcxZW0nO1xuICB9XG5cbiAgaWYgKHJhdGlvID09PSB2b2lkIDApIHtcbiAgICByYXRpbyA9IDEuMzMzO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBzdGVwcyAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0Mik7XG4gIH1cblxuICBpZiAodHlwZW9mIHJhdGlvID09PSAnc3RyaW5nJyAmJiAhcmF0aW9OYW1lc1tyYXRpb10pIHtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0Myk7XG4gIH1cblxuICB2YXIgX3JlZiA9IHR5cGVvZiBiYXNlID09PSAnc3RyaW5nJyA/IGdldFZhbHVlQW5kVW5pdChiYXNlKSA6IFtiYXNlLCAnJ10sXG4gICAgICByZWFsQmFzZSA9IF9yZWZbMF0sXG4gICAgICB1bml0ID0gX3JlZlsxXTtcblxuICB2YXIgcmVhbFJhdGlvID0gdHlwZW9mIHJhdGlvID09PSAnc3RyaW5nJyA/IGdldFJhdGlvKHJhdGlvKSA6IHJhdGlvO1xuXG4gIGlmICh0eXBlb2YgcmVhbEJhc2UgPT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNDQsIGJhc2UpO1xuICB9XG5cbiAgcmV0dXJuIFwiXCIgKyByZWFsQmFzZSAqIE1hdGgucG93KHJlYWxSYXRpbywgc3RlcHMpICsgKHVuaXQgfHwgJycpO1xufVxuXG4vKipcbiAqIENvbnZlcnQgcGl4ZWwgdmFsdWUgdG8gcmVtcy4gVGhlIGRlZmF1bHQgYmFzZSB2YWx1ZSBpcyAxNnB4LCBidXQgY2FuIGJlIGNoYW5nZWQgYnkgcGFzc2luZyBhXG4gKiBzZWNvbmQgYXJndW1lbnQgdG8gdGhlIGZ1bmN0aW9uLlxuICogQGZ1bmN0aW9uXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IHB4dmFsXG4gKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IFtiYXNlPScxNnB4J11cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgICdoZWlnaHQnOiByZW0oJzE2cHgnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBoZWlnaHQ6ICR7cmVtKCcxNnB4Jyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqIGVsZW1lbnQge1xuICogICAnaGVpZ2h0JzogJzFyZW0nXG4gKiB9XG4gKi9cblxudmFyIHJlbSA9IC8qI19fUFVSRV9fKi9weHRvRmFjdG9yeSgncmVtJyk7XG5cbi8qKlxuICogUmV0dXJucyBhIENTUyBjYWxjIGZvcm11bGEgZm9yIGxpbmVhciBpbnRlcnBvbGF0aW9uIG9mIGEgcHJvcGVydHkgYmV0d2VlbiB0d28gdmFsdWVzLiBBY2NlcHRzIG9wdGlvbmFsIG1pblNjcmVlbiAoZGVmYXVsdHMgdG8gJzMyMHB4JykgYW5kIG1heFNjcmVlbiAoZGVmYXVsdHMgdG8gJzEyMDBweCcpLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGZvbnRTaXplOiBiZXR3ZWVuKCcyMHB4JywgJzEwMHB4JywgJzQwMHB4JywgJzEwMDBweCcpLFxuICogICBmb250U2l6ZTogYmV0d2VlbignMjBweCcsICcxMDBweCcpXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGZvbnRTaXplOiAke2JldHdlZW4oJzIwcHgnLCAnMTAwcHgnLCAnNDAwcHgnLCAnMTAwMHB4Jyl9O1xuICogICBmb250U2l6ZTogJHtiZXR3ZWVuKCcyMHB4JywgJzEwMHB4Jyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGgxOiB7XG4gKiAgICdmb250U2l6ZSc6ICdjYWxjKC0zMy4zMzMzMzMzMzMzMzMzNHB4ICsgMTMuMzMzMzMzMzMzMzMzMzM0dncpJyxcbiAqICAgJ2ZvbnRTaXplJzogJ2NhbGMoLTkuMDkwOTA5MDkwOTA5MDkzcHggKyA5LjA5MDkwOTA5MDkwOTA5MnZ3KSdcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBiZXR3ZWVuKGZyb21TaXplLCB0b1NpemUsIG1pblNjcmVlbiwgbWF4U2NyZWVuKSB7XG4gIGlmIChtaW5TY3JlZW4gPT09IHZvaWQgMCkge1xuICAgIG1pblNjcmVlbiA9ICczMjBweCc7XG4gIH1cblxuICBpZiAobWF4U2NyZWVuID09PSB2b2lkIDApIHtcbiAgICBtYXhTY3JlZW4gPSAnMTIwMHB4JztcbiAgfVxuXG4gIHZhciBfZ2V0VmFsdWVBbmRVbml0ID0gZ2V0VmFsdWVBbmRVbml0KGZyb21TaXplKSxcbiAgICAgIHVuaXRsZXNzRnJvbVNpemUgPSBfZ2V0VmFsdWVBbmRVbml0WzBdLFxuICAgICAgZnJvbVNpemVVbml0ID0gX2dldFZhbHVlQW5kVW5pdFsxXTtcblxuICB2YXIgX2dldFZhbHVlQW5kVW5pdDIgPSBnZXRWYWx1ZUFuZFVuaXQodG9TaXplKSxcbiAgICAgIHVuaXRsZXNzVG9TaXplID0gX2dldFZhbHVlQW5kVW5pdDJbMF0sXG4gICAgICB0b1NpemVVbml0ID0gX2dldFZhbHVlQW5kVW5pdDJbMV07XG5cbiAgdmFyIF9nZXRWYWx1ZUFuZFVuaXQzID0gZ2V0VmFsdWVBbmRVbml0KG1pblNjcmVlbiksXG4gICAgICB1bml0bGVzc01pblNjcmVlbiA9IF9nZXRWYWx1ZUFuZFVuaXQzWzBdLFxuICAgICAgbWluU2NyZWVuVW5pdCA9IF9nZXRWYWx1ZUFuZFVuaXQzWzFdO1xuXG4gIHZhciBfZ2V0VmFsdWVBbmRVbml0NCA9IGdldFZhbHVlQW5kVW5pdChtYXhTY3JlZW4pLFxuICAgICAgdW5pdGxlc3NNYXhTY3JlZW4gPSBfZ2V0VmFsdWVBbmRVbml0NFswXSxcbiAgICAgIG1heFNjcmVlblVuaXQgPSBfZ2V0VmFsdWVBbmRVbml0NFsxXTtcblxuICBpZiAodHlwZW9mIHVuaXRsZXNzTWluU2NyZWVuICE9PSAnbnVtYmVyJyB8fCB0eXBlb2YgdW5pdGxlc3NNYXhTY3JlZW4gIT09ICdudW1iZXInIHx8ICFtaW5TY3JlZW5Vbml0IHx8ICFtYXhTY3JlZW5Vbml0IHx8IG1pblNjcmVlblVuaXQgIT09IG1heFNjcmVlblVuaXQpIHtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0Nyk7XG4gIH1cblxuICBpZiAodHlwZW9mIHVuaXRsZXNzRnJvbVNpemUgIT09ICdudW1iZXInIHx8IHR5cGVvZiB1bml0bGVzc1RvU2l6ZSAhPT0gJ251bWJlcicgfHwgZnJvbVNpemVVbml0ICE9PSB0b1NpemVVbml0KSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNDgpO1xuICB9XG5cbiAgdmFyIHNsb3BlID0gKHVuaXRsZXNzRnJvbVNpemUgLSB1bml0bGVzc1RvU2l6ZSkgLyAodW5pdGxlc3NNaW5TY3JlZW4gLSB1bml0bGVzc01heFNjcmVlbik7XG4gIHZhciBiYXNlID0gdW5pdGxlc3NUb1NpemUgLSBzbG9wZSAqIHVuaXRsZXNzTWF4U2NyZWVuO1xuICByZXR1cm4gXCJjYWxjKFwiICsgYmFzZS50b0ZpeGVkKDIpICsgKGZyb21TaXplVW5pdCB8fCAnJykgKyBcIiArIFwiICsgKDEwMCAqIHNsb3BlKS50b0ZpeGVkKDIpICsgXCJ2dylcIjtcbn1cblxuLyoqXG4gKiBDU1MgdG8gY29udGFpbiBhIGZsb2F0IChjcmVkaXQgdG8gQ1NTTW9qbykuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgIC4uLmNsZWFyRml4KCksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgICR7Y2xlYXJGaXgoKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogJyY6OmFmdGVyJzoge1xuICogICAnY2xlYXInOiAnYm90aCcsXG4gKiAgICdjb250ZW50JzogJ1wiXCInLFxuICogICAnZGlzcGxheSc6ICd0YWJsZSdcbiAqIH1cbiAqL1xuZnVuY3Rpb24gY2xlYXJGaXgocGFyZW50KSB7XG4gIHZhciBfcmVmO1xuXG4gIGlmIChwYXJlbnQgPT09IHZvaWQgMCkge1xuICAgIHBhcmVudCA9ICcmJztcbiAgfVxuXG4gIHZhciBwc2V1ZG9TZWxlY3RvciA9IHBhcmVudCArIFwiOjphZnRlclwiO1xuICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW3BzZXVkb1NlbGVjdG9yXSA9IHtcbiAgICBjbGVhcjogJ2JvdGgnLFxuICAgIGNvbnRlbnQ6ICdcIlwiJyxcbiAgICBkaXNwbGF5OiAndGFibGUnXG4gIH0sIF9yZWY7XG59XG5cbi8qKlxuICogQ1NTIHRvIGZ1bGx5IGNvdmVyIGFuIGFyZWEuIENhbiBvcHRpb25hbGx5IGJlIHBhc3NlZCBhbiBvZmZzZXQgdG8gYWN0IGFzIGEgXCJwYWRkaW5nXCIuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4uY292ZXIoKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke2NvdmVyKCl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGRpdjoge1xuICogICAncG9zaXRpb24nOiAnYWJzb2x1dGUnLFxuICogICAndG9wJzogJzAnLFxuICogICAncmlnaHQ6ICcwJyxcbiAqICAgJ2JvdHRvbSc6ICcwJyxcbiAqICAgJ2xlZnQ6ICcwJ1xuICogfVxuICovXG5mdW5jdGlvbiBjb3ZlcihvZmZzZXQpIHtcbiAgaWYgKG9mZnNldCA9PT0gdm9pZCAwKSB7XG4gICAgb2Zmc2V0ID0gMDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgdG9wOiBvZmZzZXQsXG4gICAgcmlnaHQ6IG9mZnNldCxcbiAgICBib3R0b206IG9mZnNldCxcbiAgICBsZWZ0OiBvZmZzZXRcbiAgfTtcbn1cblxuLyoqXG4gKiBDU1MgdG8gcmVwcmVzZW50IHRydW5jYXRlZCB0ZXh0IHdpdGggYW4gZWxsaXBzaXMuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4uZWxsaXBzaXMoJzI1MHB4JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtlbGxpcHNpcygnMjUwcHgnKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2OiB7XG4gKiAgICdkaXNwbGF5JzogJ2lubGluZS1ibG9jaycsXG4gKiAgICdtYXhXaWR0aCc6ICcyNTBweCcsXG4gKiAgICdvdmVyZmxvdyc6ICdoaWRkZW4nLFxuICogICAndGV4dE92ZXJmbG93JzogJ2VsbGlwc2lzJyxcbiAqICAgJ3doaXRlU3BhY2UnOiAnbm93cmFwJyxcbiAqICAgJ3dvcmRXcmFwJzogJ25vcm1hbCdcbiAqIH1cbiAqL1xuZnVuY3Rpb24gZWxsaXBzaXMod2lkdGgpIHtcbiAgaWYgKHdpZHRoID09PSB2b2lkIDApIHtcbiAgICB3aWR0aCA9ICcxMDAlJztcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZGlzcGxheTogJ2lubGluZS1ibG9jaycsXG4gICAgbWF4V2lkdGg6IHdpZHRoLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICB0ZXh0T3ZlcmZsb3c6ICdlbGxpcHNpcycsXG4gICAgd2hpdGVTcGFjZTogJ25vd3JhcCcsXG4gICAgd29yZFdyYXA6ICdub3JtYWwnXG4gIH07XG59XG5cbmZ1bmN0aW9uIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyTG9vc2UobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0OyBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJ1bmRlZmluZWRcIiB8fCBvW1N5bWJvbC5pdGVyYXRvcl0gPT0gbnVsbCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHJldHVybiBmdW5jdGlvbiAoKSB7IGlmIChpID49IG8ubGVuZ3RoKSByZXR1cm4geyBkb25lOiB0cnVlIH07IHJldHVybiB7IGRvbmU6IGZhbHNlLCB2YWx1ZTogb1tpKytdIH07IH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9IGl0ID0gb1tTeW1ib2wuaXRlcmF0b3JdKCk7IHJldHVybiBpdC5uZXh0LmJpbmQoaXQpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuLyoqXG4gKiBSZXR1cm5zIGEgc2V0IG9mIG1lZGlhIHF1ZXJpZXMgdGhhdCByZXNpemVzIGEgcHJvcGVydHkgKG9yIHNldCBvZiBwcm9wZXJ0aWVzKSBiZXR3ZWVuIGEgcHJvdmlkZWQgZnJvbVNpemUgYW5kIHRvU2l6ZS4gQWNjZXB0cyBvcHRpb25hbCBtaW5TY3JlZW4gKGRlZmF1bHRzIHRvICczMjBweCcpIGFuZCBtYXhTY3JlZW4gKGRlZmF1bHRzIHRvICcxMjAwcHgnKSB0byBjb25zdHJhaW4gdGhlIGludGVycG9sYXRpb24uXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4uZmx1aWRSYW5nZShcbiAqICAgIHtcbiAqICAgICAgICBwcm9wOiAncGFkZGluZycsXG4gKiAgICAgICAgZnJvbVNpemU6ICcyMHB4JyxcbiAqICAgICAgICB0b1NpemU6ICcxMDBweCcsXG4gKiAgICAgIH0sXG4gKiAgICAgICc0MDBweCcsXG4gKiAgICAgICcxMDAwcHgnLFxuICogICAgKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke2ZsdWlkUmFuZ2UoXG4gKiAgICAgIHtcbiAqICAgICAgICBwcm9wOiAncGFkZGluZycsXG4gKiAgICAgICAgZnJvbVNpemU6ICcyMHB4JyxcbiAqICAgICAgICB0b1NpemU6ICcxMDBweCcsXG4gKiAgICAgIH0sXG4gKiAgICAgICc0MDBweCcsXG4gKiAgICAgICcxMDAwcHgnLFxuICogICAgKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2OiB7XG4gKiAgIFwiQG1lZGlhIChtaW4td2lkdGg6IDEwMDBweClcIjogT2JqZWN0IHtcbiAqICAgICBcInBhZGRpbmdcIjogXCIxMDBweFwiLFxuICogICB9LFxuICogICBcIkBtZWRpYSAobWluLXdpZHRoOiA0MDBweClcIjogT2JqZWN0IHtcbiAqICAgICBcInBhZGRpbmdcIjogXCJjYWxjKC0zMy4zMzMzMzMzMzMzMzMzNHB4ICsgMTMuMzMzMzMzMzMzMzMzMzM0dncpXCIsXG4gKiAgIH0sXG4gKiAgIFwicGFkZGluZ1wiOiBcIjIwcHhcIixcbiAqIH1cbiAqL1xuZnVuY3Rpb24gZmx1aWRSYW5nZShjc3NQcm9wLCBtaW5TY3JlZW4sIG1heFNjcmVlbikge1xuICBpZiAobWluU2NyZWVuID09PSB2b2lkIDApIHtcbiAgICBtaW5TY3JlZW4gPSAnMzIwcHgnO1xuICB9XG5cbiAgaWYgKG1heFNjcmVlbiA9PT0gdm9pZCAwKSB7XG4gICAgbWF4U2NyZWVuID0gJzEyMDBweCc7XG4gIH1cblxuICBpZiAoIUFycmF5LmlzQXJyYXkoY3NzUHJvcCkgJiYgdHlwZW9mIGNzc1Byb3AgIT09ICdvYmplY3QnIHx8IGNzc1Byb3AgPT09IG51bGwpIHtcbiAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0OSk7XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShjc3NQcm9wKSkge1xuICAgIHZhciBtZWRpYVF1ZXJpZXMgPSB7fTtcbiAgICB2YXIgZmFsbGJhY2tzID0ge307XG5cbiAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlckxvb3NlKGNzc1Byb3ApLCBfc3RlcDsgIShfc3RlcCA9IF9pdGVyYXRvcigpKS5kb25lOykge1xuICAgICAgdmFyIF9leHRlbmRzMiwgX2V4dGVuZHMzO1xuXG4gICAgICB2YXIgb2JqID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgIGlmICghb2JqLnByb3AgfHwgIW9iai5mcm9tU2l6ZSB8fCAhb2JqLnRvU2l6ZSkge1xuICAgICAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig1MCk7XG4gICAgICB9XG5cbiAgICAgIGZhbGxiYWNrc1tvYmoucHJvcF0gPSBvYmouZnJvbVNpemU7XG4gICAgICBtZWRpYVF1ZXJpZXNbXCJAbWVkaWEgKG1pbi13aWR0aDogXCIgKyBtaW5TY3JlZW4gKyBcIilcIl0gPSBfZXh0ZW5kcyh7fSwgbWVkaWFRdWVyaWVzW1wiQG1lZGlhIChtaW4td2lkdGg6IFwiICsgbWluU2NyZWVuICsgXCIpXCJdLCAoX2V4dGVuZHMyID0ge30sIF9leHRlbmRzMltvYmoucHJvcF0gPSBiZXR3ZWVuKG9iai5mcm9tU2l6ZSwgb2JqLnRvU2l6ZSwgbWluU2NyZWVuLCBtYXhTY3JlZW4pLCBfZXh0ZW5kczIpKTtcbiAgICAgIG1lZGlhUXVlcmllc1tcIkBtZWRpYSAobWluLXdpZHRoOiBcIiArIG1heFNjcmVlbiArIFwiKVwiXSA9IF9leHRlbmRzKHt9LCBtZWRpYVF1ZXJpZXNbXCJAbWVkaWEgKG1pbi13aWR0aDogXCIgKyBtYXhTY3JlZW4gKyBcIilcIl0sIChfZXh0ZW5kczMgPSB7fSwgX2V4dGVuZHMzW29iai5wcm9wXSA9IG9iai50b1NpemUsIF9leHRlbmRzMykpO1xuICAgIH1cblxuICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgZmFsbGJhY2tzLCBtZWRpYVF1ZXJpZXMpO1xuICB9IGVsc2Uge1xuICAgIHZhciBfcmVmLCBfcmVmMiwgX3JlZjM7XG5cbiAgICBpZiAoIWNzc1Byb3AucHJvcCB8fCAhY3NzUHJvcC5mcm9tU2l6ZSB8fCAhY3NzUHJvcC50b1NpemUpIHtcbiAgICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDUxKTtcbiAgICB9XG5cbiAgICByZXR1cm4gX3JlZjMgPSB7fSwgX3JlZjNbY3NzUHJvcC5wcm9wXSA9IGNzc1Byb3AuZnJvbVNpemUsIF9yZWYzW1wiQG1lZGlhIChtaW4td2lkdGg6IFwiICsgbWluU2NyZWVuICsgXCIpXCJdID0gKF9yZWYgPSB7fSwgX3JlZltjc3NQcm9wLnByb3BdID0gYmV0d2Vlbihjc3NQcm9wLmZyb21TaXplLCBjc3NQcm9wLnRvU2l6ZSwgbWluU2NyZWVuLCBtYXhTY3JlZW4pLCBfcmVmKSwgX3JlZjNbXCJAbWVkaWEgKG1pbi13aWR0aDogXCIgKyBtYXhTY3JlZW4gKyBcIilcIl0gPSAoX3JlZjIgPSB7fSwgX3JlZjJbY3NzUHJvcC5wcm9wXSA9IGNzc1Byb3AudG9TaXplLCBfcmVmMiksIF9yZWYzO1xuICB9XG59XG5cbnZhciBkYXRhVVJJUmVnZXggPSAvXlxccypkYXRhOihbYS16XStcXC9bYS16LV0rKDtbYS16LV0rPVthLXotXSspPyk/KDtjaGFyc2V0PVthLXowLTktXSspPyg7YmFzZTY0KT8sW2EtejAtOSEkJicsKCkqKyw7PVxcLS5ffjpALz8lXFxzXSpcXHMqJC9pO1xudmFyIGZvcm1hdEhpbnRNYXAgPSB7XG4gIHdvZmY6ICd3b2ZmJyxcbiAgd29mZjI6ICd3b2ZmMicsXG4gIHR0ZjogJ3RydWV0eXBlJyxcbiAgb3RmOiAnb3BlbnR5cGUnLFxuICBlb3Q6ICdlbWJlZGRlZC1vcGVudHlwZScsXG4gIHN2ZzogJ3N2ZycsXG4gIHN2Z3o6ICdzdmcnXG59O1xuXG5mdW5jdGlvbiBnZW5lcmF0ZUZvcm1hdEhpbnQoZm9ybWF0LCBmb3JtYXRIaW50KSB7XG4gIGlmICghZm9ybWF0SGludCkgcmV0dXJuICcnO1xuICByZXR1cm4gXCIgZm9ybWF0KFxcXCJcIiArIGZvcm1hdEhpbnRNYXBbZm9ybWF0XSArIFwiXFxcIilcIjtcbn1cblxuZnVuY3Rpb24gaXNEYXRhVVJJKGZvbnRGaWxlUGF0aCkge1xuICByZXR1cm4gISFmb250RmlsZVBhdGgubWF0Y2goZGF0YVVSSVJlZ2V4KTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVGaWxlUmVmZXJlbmNlcyhmb250RmlsZVBhdGgsIGZpbGVGb3JtYXRzLCBmb3JtYXRIaW50KSB7XG4gIGlmIChpc0RhdGFVUkkoZm9udEZpbGVQYXRoKSkge1xuICAgIHJldHVybiBcInVybChcXFwiXCIgKyBmb250RmlsZVBhdGggKyBcIlxcXCIpXCIgKyBnZW5lcmF0ZUZvcm1hdEhpbnQoZmlsZUZvcm1hdHNbMF0sIGZvcm1hdEhpbnQpO1xuICB9XG5cbiAgdmFyIGZpbGVGb250UmVmZXJlbmNlcyA9IGZpbGVGb3JtYXRzLm1hcChmdW5jdGlvbiAoZm9ybWF0KSB7XG4gICAgcmV0dXJuIFwidXJsKFxcXCJcIiArIGZvbnRGaWxlUGF0aCArIFwiLlwiICsgZm9ybWF0ICsgXCJcXFwiKVwiICsgZ2VuZXJhdGVGb3JtYXRIaW50KGZvcm1hdCwgZm9ybWF0SGludCk7XG4gIH0pO1xuICByZXR1cm4gZmlsZUZvbnRSZWZlcmVuY2VzLmpvaW4oJywgJyk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlTG9jYWxSZWZlcmVuY2VzKGxvY2FsRm9udHMpIHtcbiAgdmFyIGxvY2FsRm9udFJlZmVyZW5jZXMgPSBsb2NhbEZvbnRzLm1hcChmdW5jdGlvbiAoZm9udCkge1xuICAgIHJldHVybiBcImxvY2FsKFxcXCJcIiArIGZvbnQgKyBcIlxcXCIpXCI7XG4gIH0pO1xuICByZXR1cm4gbG9jYWxGb250UmVmZXJlbmNlcy5qb2luKCcsICcpO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVNvdXJjZXMoZm9udEZpbGVQYXRoLCBsb2NhbEZvbnRzLCBmaWxlRm9ybWF0cywgZm9ybWF0SGludCkge1xuICB2YXIgZm9udFJlZmVyZW5jZXMgPSBbXTtcbiAgaWYgKGxvY2FsRm9udHMpIGZvbnRSZWZlcmVuY2VzLnB1c2goZ2VuZXJhdGVMb2NhbFJlZmVyZW5jZXMobG9jYWxGb250cykpO1xuXG4gIGlmIChmb250RmlsZVBhdGgpIHtcbiAgICBmb250UmVmZXJlbmNlcy5wdXNoKGdlbmVyYXRlRmlsZVJlZmVyZW5jZXMoZm9udEZpbGVQYXRoLCBmaWxlRm9ybWF0cywgZm9ybWF0SGludCkpO1xuICB9XG5cbiAgcmV0dXJuIGZvbnRSZWZlcmVuY2VzLmpvaW4oJywgJyk7XG59XG4vKipcbiAqIENTUyBmb3IgYSBAZm9udC1mYWNlIGRlY2xhcmF0aW9uLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IGJhc2ljIHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgICAuLi5mb250RmFjZSh7XG4gKiAgICAgICdmb250RmFtaWx5JzogJ1NhbnMtUHJvJyxcbiAqICAgICAgJ2ZvbnRGaWxlUGF0aCc6ICdwYXRoL3RvL2ZpbGUnXG4gKiAgICB9KVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIGJhc2ljIHVzYWdlXG4gKiBjb25zdCBHbG9iYWxTdHlsZSA9IGNyZWF0ZUdsb2JhbFN0eWxlYCR7XG4gKiAgIGZvbnRGYWNlKHtcbiAqICAgICAnZm9udEZhbWlseSc6ICdTYW5zLVBybycsXG4gKiAgICAgJ2ZvbnRGaWxlUGF0aCc6ICdwYXRoL3RvL2ZpbGUnXG4gKiAgIH1cbiAqICl9YFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiAnQGZvbnQtZmFjZSc6IHtcbiAqICAgJ2ZvbnRGYW1pbHknOiAnU2Fucy1Qcm8nLFxuICogICAnc3JjJzogJ3VybChcInBhdGgvdG8vZmlsZS5lb3RcIiksIHVybChcInBhdGgvdG8vZmlsZS53b2ZmMlwiKSwgdXJsKFwicGF0aC90by9maWxlLndvZmZcIiksIHVybChcInBhdGgvdG8vZmlsZS50dGZcIiksIHVybChcInBhdGgvdG8vZmlsZS5zdmdcIiknLFxuICogfVxuICovXG5cblxuZnVuY3Rpb24gZm9udEZhY2UoX3JlZikge1xuICB2YXIgZm9udEZhbWlseSA9IF9yZWYuZm9udEZhbWlseSxcbiAgICAgIGZvbnRGaWxlUGF0aCA9IF9yZWYuZm9udEZpbGVQYXRoLFxuICAgICAgZm9udFN0cmV0Y2ggPSBfcmVmLmZvbnRTdHJldGNoLFxuICAgICAgZm9udFN0eWxlID0gX3JlZi5mb250U3R5bGUsXG4gICAgICBmb250VmFyaWFudCA9IF9yZWYuZm9udFZhcmlhbnQsXG4gICAgICBmb250V2VpZ2h0ID0gX3JlZi5mb250V2VpZ2h0LFxuICAgICAgX3JlZiRmaWxlRm9ybWF0cyA9IF9yZWYuZmlsZUZvcm1hdHMsXG4gICAgICBmaWxlRm9ybWF0cyA9IF9yZWYkZmlsZUZvcm1hdHMgPT09IHZvaWQgMCA/IFsnZW90JywgJ3dvZmYyJywgJ3dvZmYnLCAndHRmJywgJ3N2ZyddIDogX3JlZiRmaWxlRm9ybWF0cyxcbiAgICAgIF9yZWYkZm9ybWF0SGludCA9IF9yZWYuZm9ybWF0SGludCxcbiAgICAgIGZvcm1hdEhpbnQgPSBfcmVmJGZvcm1hdEhpbnQgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRmb3JtYXRIaW50LFxuICAgICAgbG9jYWxGb250cyA9IF9yZWYubG9jYWxGb250cyxcbiAgICAgIHVuaWNvZGVSYW5nZSA9IF9yZWYudW5pY29kZVJhbmdlLFxuICAgICAgZm9udERpc3BsYXkgPSBfcmVmLmZvbnREaXNwbGF5LFxuICAgICAgZm9udFZhcmlhdGlvblNldHRpbmdzID0gX3JlZi5mb250VmFyaWF0aW9uU2V0dGluZ3MsXG4gICAgICBmb250RmVhdHVyZVNldHRpbmdzID0gX3JlZi5mb250RmVhdHVyZVNldHRpbmdzO1xuICAvLyBFcnJvciBIYW5kbGluZ1xuICBpZiAoIWZvbnRGYW1pbHkpIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDU1KTtcblxuICBpZiAoIWZvbnRGaWxlUGF0aCAmJiAhbG9jYWxGb250cykge1xuICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDUyKTtcbiAgfVxuXG4gIGlmIChsb2NhbEZvbnRzICYmICFBcnJheS5pc0FycmF5KGxvY2FsRm9udHMpKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNTMpO1xuICB9XG5cbiAgaWYgKCFBcnJheS5pc0FycmF5KGZpbGVGb3JtYXRzKSkge1xuICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDU0KTtcbiAgfVxuXG4gIHZhciBmb250RmFjZURlY2xhcmF0aW9uID0ge1xuICAgICdAZm9udC1mYWNlJzoge1xuICAgICAgZm9udEZhbWlseTogZm9udEZhbWlseSxcbiAgICAgIHNyYzogZ2VuZXJhdGVTb3VyY2VzKGZvbnRGaWxlUGF0aCwgbG9jYWxGb250cywgZmlsZUZvcm1hdHMsIGZvcm1hdEhpbnQpLFxuICAgICAgdW5pY29kZVJhbmdlOiB1bmljb2RlUmFuZ2UsXG4gICAgICBmb250U3RyZXRjaDogZm9udFN0cmV0Y2gsXG4gICAgICBmb250U3R5bGU6IGZvbnRTdHlsZSxcbiAgICAgIGZvbnRWYXJpYW50OiBmb250VmFyaWFudCxcbiAgICAgIGZvbnRXZWlnaHQ6IGZvbnRXZWlnaHQsXG4gICAgICBmb250RGlzcGxheTogZm9udERpc3BsYXksXG4gICAgICBmb250VmFyaWF0aW9uU2V0dGluZ3M6IGZvbnRWYXJpYXRpb25TZXR0aW5ncyxcbiAgICAgIGZvbnRGZWF0dXJlU2V0dGluZ3M6IGZvbnRGZWF0dXJlU2V0dGluZ3NcbiAgICB9XG4gIH07IC8vIFJlbW92ZXMgdW5kZWZpbmVkIGZpZWxkcyBmb3IgY2xlYW5lciBjc3Mgb2JqZWN0LlxuXG4gIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGZvbnRGYWNlRGVjbGFyYXRpb24pKTtcbn1cblxuLyoqXG4gKiBDU1MgdG8gaGlkZSB0ZXh0IHRvIHNob3cgYSBiYWNrZ3JvdW5kIGltYWdlIGluIGEgU0VPLWZyaWVuZGx5IHdheS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAnYmFja2dyb3VuZEltYWdlJzogJ3VybChsb2dvLnBuZyknLFxuICogICAuLi5oaWRlVGV4dCgpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kSW1hZ2U6IHVybChsb2dvLnBuZyk7XG4gKiAgICR7aGlkZVRleHQoKX07XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqICdkaXYnOiB7XG4gKiAgICdiYWNrZ3JvdW5kSW1hZ2UnOiAndXJsKGxvZ28ucG5nKScsXG4gKiAgICd0ZXh0SW5kZW50JzogJzEwMSUnLFxuICogICAnb3ZlcmZsb3cnOiAnaGlkZGVuJyxcbiAqICAgJ3doaXRlU3BhY2UnOiAnbm93cmFwJyxcbiAqIH1cbiAqL1xuZnVuY3Rpb24gaGlkZVRleHQoKSB7XG4gIHJldHVybiB7XG4gICAgdGV4dEluZGVudDogJzEwMSUnLFxuICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJ1xuICB9O1xufVxuXG4vKipcbiAqIENTUyB0byBoaWRlIGNvbnRlbnQgdmlzdWFsbHkgYnV0IHJlbWFpbiBhY2Nlc3NpYmxlIHRvIHNjcmVlbiByZWFkZXJzLlxuICogZnJvbSBbSFRNTDUgQm9pbGVycGxhdGVdKGh0dHBzOi8vZ2l0aHViLmNvbS9oNWJwL2h0bWw1LWJvaWxlcnBsYXRlL2Jsb2IvOWExNzZmNTdhZjFjZmU4ZWM3MDMwMGRhNDYyMWZiOWIwN2U1ZmEzMS9zcmMvY3NzL21haW4uY3NzI0wxMjEpXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4uaGlkZVZpc3VhbGx5KCksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgICR7aGlkZVZpc3VhbGx5KCl9O1xuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiAnZGl2Jzoge1xuICogICAnYm9yZGVyJzogJzAnLFxuICogICAnY2xpcCc6ICdyZWN0KDAgMCAwIDApJyxcbiAqICAgJ2hlaWdodCc6ICcxcHgnLFxuICogICAnbWFyZ2luJzogJy0xcHgnLFxuICogICAnb3ZlcmZsb3cnOiAnaGlkZGVuJyxcbiAqICAgJ3BhZGRpbmcnOiAnMCcsXG4gKiAgICdwb3NpdGlvbic6ICdhYnNvbHV0ZScsXG4gKiAgICd3aGl0ZVNwYWNlJzogJ25vd3JhcCcsXG4gKiAgICd3aWR0aCc6ICcxcHgnLFxuICogfVxuICovXG5mdW5jdGlvbiBoaWRlVmlzdWFsbHkoKSB7XG4gIHJldHVybiB7XG4gICAgYm9yZGVyOiAnMCcsXG4gICAgY2xpcDogJ3JlY3QoMCAwIDAgMCknLFxuICAgIGhlaWdodDogJzFweCcsXG4gICAgbWFyZ2luOiAnLTFweCcsXG4gICAgb3ZlcmZsb3c6ICdoaWRkZW4nLFxuICAgIHBhZGRpbmc6ICcwJyxcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICB3aWR0aDogJzFweCdcbiAgfTtcbn1cblxuLyoqXG4gKiBHZW5lcmF0ZXMgYSBtZWRpYSBxdWVyeSB0byB0YXJnZXQgSGlEUEkgZGV2aWNlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogIFtoaURQSSgxLjUpXToge1xuICogICAgd2lkdGg6IDIwMHB4O1xuICogIH1cbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtoaURQSSgxLjUpfSB7XG4gKiAgICAgd2lkdGg6IDIwMHB4O1xuICogICB9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqICdAbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksXG4gKiAgb25seSBzY3JlZW4gYW5kIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksXG4gKiAgb25seSBzY3JlZW4gYW5kICgtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUvMSksXG4gKiAgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogMTQ0ZHBpKSxcbiAqICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxLjVkcHB4KSc6IHtcbiAqICAgJ3dpZHRoJzogJzIwMHB4JyxcbiAqIH1cbiAqL1xuZnVuY3Rpb24gaGlEUEkocmF0aW8pIHtcbiAgaWYgKHJhdGlvID09PSB2b2lkIDApIHtcbiAgICByYXRpbyA9IDEuMztcbiAgfVxuXG4gIHJldHVybiBcIlxcbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IFwiICsgcmF0aW8gKyBcIiksXFxuICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiBcIiArIHJhdGlvICsgXCIpLFxcbiAgICBvbmx5IHNjcmVlbiBhbmQgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IFwiICsgcmF0aW8gKyBcIi8xKSxcXG4gICAgb25seSBzY3JlZW4gYW5kIChtaW4tcmVzb2x1dGlvbjogXCIgKyBNYXRoLnJvdW5kKHJhdGlvICogOTYpICsgXCJkcGkpLFxcbiAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiBcIiArIHJhdGlvICsgXCJkcHB4KVxcbiAgXCI7XG59XG5cbmZ1bmN0aW9uIGNvbnN0cnVjdEdyYWRpZW50VmFsdWUobGl0ZXJhbHMpIHtcbiAgdmFyIHRlbXBsYXRlID0gJyc7XG5cbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHN1YnN0aXR1dGlvbnMgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHN1YnN0aXR1dGlvbnNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXRlcmFscy5sZW5ndGg7IGkgKz0gMSkge1xuICAgIHRlbXBsYXRlICs9IGxpdGVyYWxzW2ldO1xuXG4gICAgaWYgKGkgPT09IHN1YnN0aXR1dGlvbnMubGVuZ3RoIC0gMSAmJiBzdWJzdGl0dXRpb25zW2ldKSB7XG4gICAgICB2YXIgZGVmaW5lZFZhbHVlcyA9IHN1YnN0aXR1dGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChzdWJzdGl0dXRlKSB7XG4gICAgICAgIHJldHVybiAhIXN1YnN0aXR1dGU7XG4gICAgICB9KTsgLy8gQWRkcyBsZWFkaW5nIGNvbWEgaWYgcHJvcGVydGllcyBwcmVjZWVkIGNvbG9yLXN0b3BzXG5cbiAgICAgIGlmIChkZWZpbmVkVmFsdWVzLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgdGVtcGxhdGUgPSB0ZW1wbGF0ZS5zbGljZSgwLCAtMSk7XG4gICAgICAgIHRlbXBsYXRlICs9IFwiLCBcIiArIHN1YnN0aXR1dGlvbnNbaV07IC8vIE5vIHRyYWlsaW5nIHNwYWNlIGlmIGNvbG9yLXN0b3BzIGlzIHRoZSBvbmx5IHBhcmFtIHByb3ZpZGVkXG4gICAgICB9IGVsc2UgaWYgKGRlZmluZWRWYWx1ZXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHRlbXBsYXRlICs9IFwiXCIgKyBzdWJzdGl0dXRpb25zW2ldO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoc3Vic3RpdHV0aW9uc1tpXSkge1xuICAgICAgdGVtcGxhdGUgKz0gc3Vic3RpdHV0aW9uc1tpXSArIFwiIFwiO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0ZW1wbGF0ZS50cmltKCk7XG59XG5cbmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsTG9vc2UoW1wibGluZWFyLWdyYWRpZW50KFwiLCBcIlwiLCBcIilcIl0pO1xuXG4gIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBDU1MgZm9yIGRlY2xhcmluZyBhIGxpbmVhciBncmFkaWVudCwgaW5jbHVkaW5nIGEgZmFsbGJhY2sgYmFja2dyb3VuZC1jb2xvci4gVGhlIGZhbGxiYWNrIGlzIGVpdGhlciB0aGUgZmlyc3QgY29sb3Itc3RvcCBvciBhbiBleHBsaWNpdGx5IHBhc3NlZCBmYWxsYmFjayBjb2xvci5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5saW5lYXJHcmFkaWVudCh7XG4gICAgICAgIGNvbG9yU3RvcHM6IFsnIzAwRkZGRiAwJScsICdyZ2JhKDAsIDAsIDI1NSwgMCkgNTAlJywgJyMwMDAwRkYgOTUlJ10sXG4gICAgICAgIHRvRGlyZWN0aW9uOiAndG8gdG9wIHJpZ2h0JyxcbiAgICAgICAgZmFsbGJhY2s6ICcjRkZGJyxcbiAgICAgIH0pXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgICR7bGluZWFyR3JhZGllbnQoe1xuICAgICAgICBjb2xvclN0b3BzOiBbJyMwMEZGRkYgMCUnLCAncmdiYSgwLCAwLCAyNTUsIDApIDUwJScsICcjMDAwMEZGIDk1JSddLFxuICAgICAgICB0b0RpcmVjdGlvbjogJ3RvIHRvcCByaWdodCcsXG4gICAgICAgIGZhbGxiYWNrOiAnI0ZGRicsXG4gICAgICB9KX1cbiAqYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXY6IHtcbiAqICAgJ2JhY2tncm91bmRDb2xvcic6ICcjRkZGJyxcbiAqICAgJ2JhY2tncm91bmRJbWFnZSc6ICdsaW5lYXItZ3JhZGllbnQodG8gdG9wIHJpZ2h0LCAjMDBGRkZGIDAlLCByZ2JhKDAsIDAsIDI1NSwgMCkgNTAlLCAjMDAwMEZGIDk1JSknLFxuICogfVxuICovXG5mdW5jdGlvbiBsaW5lYXJHcmFkaWVudChfcmVmKSB7XG4gIHZhciBjb2xvclN0b3BzID0gX3JlZi5jb2xvclN0b3BzLFxuICAgICAgZmFsbGJhY2sgPSBfcmVmLmZhbGxiYWNrLFxuICAgICAgX3JlZiR0b0RpcmVjdGlvbiA9IF9yZWYudG9EaXJlY3Rpb24sXG4gICAgICB0b0RpcmVjdGlvbiA9IF9yZWYkdG9EaXJlY3Rpb24gPT09IHZvaWQgMCA/ICcnIDogX3JlZiR0b0RpcmVjdGlvbjtcblxuICBpZiAoIWNvbG9yU3RvcHMgfHwgY29sb3JTdG9wcy5sZW5ndGggPCAyKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNTYpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGZhbGxiYWNrIHx8IGNvbG9yU3RvcHNbMF0ucmVwbGFjZSgvLFxccysvZywgJywnKS5zcGxpdCgnICcpWzBdLnJlcGxhY2UoLywoPz1cXFMpL2csICcsICcpLFxuICAgIGJhY2tncm91bmRJbWFnZTogY29uc3RydWN0R3JhZGllbnRWYWx1ZShfdGVtcGxhdGVPYmplY3QoKSwgdG9EaXJlY3Rpb24sIGNvbG9yU3RvcHMuam9pbignLCAnKS5yZXBsYWNlKC8sKD89XFxTKS9nLCAnLCAnKSlcbiAgfTtcbn1cblxuLyoqXG4gKiBDU1MgdG8gbm9ybWFsaXplIGFibm9ybWFsaXRpZXMgYWNyb3NzIGJyb3dzZXJzIChub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MpXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgIC4uLm5vcm1hbGl6ZSgpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBHbG9iYWxTdHlsZSA9IGNyZWF0ZUdsb2JhbFN0eWxlYCR7bm9ybWFsaXplKCl9YFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBodG1sIHtcbiAqICAgbGluZUhlaWdodDogMS4xNSxcbiAqICAgdGV4dFNpemVBZGp1c3Q6IDEwMCUsXG4gKiB9IC4uLlxuICovXG5mdW5jdGlvbiBub3JtYWxpemUoKSB7XG4gIHZhciBfcmVmO1xuXG4gIHJldHVybiBbKF9yZWYgPSB7XG4gICAgaHRtbDoge1xuICAgICAgbGluZUhlaWdodDogJzEuMTUnLFxuICAgICAgdGV4dFNpemVBZGp1c3Q6ICcxMDAlJ1xuICAgIH0sXG4gICAgYm9keToge1xuICAgICAgbWFyZ2luOiAnMCdcbiAgICB9LFxuICAgIG1haW46IHtcbiAgICAgIGRpc3BsYXk6ICdibG9jaydcbiAgICB9LFxuICAgIGgxOiB7XG4gICAgICBmb250U2l6ZTogJzJlbScsXG4gICAgICBtYXJnaW46ICcwLjY3ZW0gMCdcbiAgICB9LFxuICAgIGhyOiB7XG4gICAgICBib3hTaXppbmc6ICdjb250ZW50LWJveCcsXG4gICAgICBoZWlnaHQ6ICcwJyxcbiAgICAgIG92ZXJmbG93OiAndmlzaWJsZSdcbiAgICB9LFxuICAgIHByZToge1xuICAgICAgZm9udEZhbWlseTogJ21vbm9zcGFjZSwgbW9ub3NwYWNlJyxcbiAgICAgIGZvbnRTaXplOiAnMWVtJ1xuICAgIH0sXG4gICAgYToge1xuICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnXG4gICAgfSxcbiAgICAnYWJiclt0aXRsZV0nOiB7XG4gICAgICBib3JkZXJCb3R0b206ICdub25lJyxcbiAgICAgIHRleHREZWNvcmF0aW9uOiAndW5kZXJsaW5lJ1xuICAgIH1cbiAgfSwgX3JlZltcImIsXFxuICAgIHN0cm9uZ1wiXSA9IHtcbiAgICBmb250V2VpZ2h0OiAnYm9sZGVyJ1xuICB9LCBfcmVmW1wiY29kZSxcXG4gICAga2JkLFxcbiAgICBzYW1wXCJdID0ge1xuICAgIGZvbnRGYW1pbHk6ICdtb25vc3BhY2UsIG1vbm9zcGFjZScsXG4gICAgZm9udFNpemU6ICcxZW0nXG4gIH0sIF9yZWYuc21hbGwgPSB7XG4gICAgZm9udFNpemU6ICc4MCUnXG4gIH0sIF9yZWZbXCJzdWIsXFxuICAgIHN1cFwiXSA9IHtcbiAgICBmb250U2l6ZTogJzc1JScsXG4gICAgbGluZUhlaWdodDogJzAnLFxuICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgIHZlcnRpY2FsQWxpZ246ICdiYXNlbGluZSdcbiAgfSwgX3JlZi5zdWIgPSB7XG4gICAgYm90dG9tOiAnLTAuMjVlbSdcbiAgfSwgX3JlZi5zdXAgPSB7XG4gICAgdG9wOiAnLTAuNWVtJ1xuICB9LCBfcmVmLmltZyA9IHtcbiAgICBib3JkZXJTdHlsZTogJ25vbmUnXG4gIH0sIF9yZWZbXCJidXR0b24sXFxuICAgIGlucHV0LFxcbiAgICBvcHRncm91cCxcXG4gICAgc2VsZWN0LFxcbiAgICB0ZXh0YXJlYVwiXSA9IHtcbiAgICBmb250RmFtaWx5OiAnaW5oZXJpdCcsXG4gICAgZm9udFNpemU6ICcxMDAlJyxcbiAgICBsaW5lSGVpZ2h0OiAnMS4xNScsXG4gICAgbWFyZ2luOiAnMCdcbiAgfSwgX3JlZltcImJ1dHRvbixcXG4gICAgaW5wdXRcIl0gPSB7XG4gICAgb3ZlcmZsb3c6ICd2aXNpYmxlJ1xuICB9LCBfcmVmW1wiYnV0dG9uLFxcbiAgICBzZWxlY3RcIl0gPSB7XG4gICAgdGV4dFRyYW5zZm9ybTogJ25vbmUnXG4gIH0sIF9yZWZbXCJidXR0b24sXFxuICAgIGh0bWwgW3R5cGU9XFxcImJ1dHRvblxcXCJdLFxcbiAgICBbdHlwZT1cXFwicmVzZXRcXFwiXSxcXG4gICAgW3R5cGU9XFxcInN1Ym1pdFxcXCJdXCJdID0ge1xuICAgIFdlYmtpdEFwcGVhcmFuY2U6ICdidXR0b24nXG4gIH0sIF9yZWZbXCJidXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXFxuICAgIFt0eXBlPVxcXCJidXR0b25cXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG4gICAgW3R5cGU9XFxcInJlc2V0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuICAgIFt0eXBlPVxcXCJzdWJtaXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lclwiXSA9IHtcbiAgICBib3JkZXJTdHlsZTogJ25vbmUnLFxuICAgIHBhZGRpbmc6ICcwJ1xuICB9LCBfcmVmW1wiYnV0dG9uOi1tb3otZm9jdXNyaW5nLFxcbiAgICBbdHlwZT1cXFwiYnV0dG9uXFxcIl06LW1vei1mb2N1c3JpbmcsXFxuICAgIFt0eXBlPVxcXCJyZXNldFxcXCJdOi1tb3otZm9jdXNyaW5nLFxcbiAgICBbdHlwZT1cXFwic3VibWl0XFxcIl06LW1vei1mb2N1c3JpbmdcIl0gPSB7XG4gICAgb3V0bGluZTogJzFweCBkb3R0ZWQgQnV0dG9uVGV4dCdcbiAgfSwgX3JlZi5maWVsZHNldCA9IHtcbiAgICBwYWRkaW5nOiAnMC4zNWVtIDAuNjI1ZW0gMC43NWVtJ1xuICB9LCBfcmVmLmxlZ2VuZCA9IHtcbiAgICBib3hTaXppbmc6ICdib3JkZXItYm94JyxcbiAgICBjb2xvcjogJ2luaGVyaXQnLFxuICAgIGRpc3BsYXk6ICd0YWJsZScsXG4gICAgbWF4V2lkdGg6ICcxMDAlJyxcbiAgICBwYWRkaW5nOiAnMCcsXG4gICAgd2hpdGVTcGFjZTogJ25vcm1hbCdcbiAgfSwgX3JlZi5wcm9ncmVzcyA9IHtcbiAgICB2ZXJ0aWNhbEFsaWduOiAnYmFzZWxpbmUnXG4gIH0sIF9yZWYudGV4dGFyZWEgPSB7XG4gICAgb3ZlcmZsb3c6ICdhdXRvJ1xuICB9LCBfcmVmW1wiW3R5cGU9XFxcImNoZWNrYm94XFxcIl0sXFxuICAgIFt0eXBlPVxcXCJyYWRpb1xcXCJdXCJdID0ge1xuICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgIHBhZGRpbmc6ICcwJ1xuICB9LCBfcmVmW1wiW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcbiAgICBbdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b25cIl0gPSB7XG4gICAgaGVpZ2h0OiAnYXV0bydcbiAgfSwgX3JlZlsnW3R5cGU9XCJzZWFyY2hcIl0nXSA9IHtcbiAgICBXZWJraXRBcHBlYXJhbmNlOiAndGV4dGZpZWxkJyxcbiAgICBvdXRsaW5lT2Zmc2V0OiAnLTJweCdcbiAgfSwgX3JlZlsnW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24nXSA9IHtcbiAgICBXZWJraXRBcHBlYXJhbmNlOiAnbm9uZSdcbiAgfSwgX3JlZlsnOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiddID0ge1xuICAgIFdlYmtpdEFwcGVhcmFuY2U6ICdidXR0b24nLFxuICAgIGZvbnQ6ICdpbmhlcml0J1xuICB9LCBfcmVmLmRldGFpbHMgPSB7XG4gICAgZGlzcGxheTogJ2Jsb2NrJ1xuICB9LCBfcmVmLnN1bW1hcnkgPSB7XG4gICAgZGlzcGxheTogJ2xpc3QtaXRlbSdcbiAgfSwgX3JlZi50ZW1wbGF0ZSA9IHtcbiAgICBkaXNwbGF5OiAnbm9uZSdcbiAgfSwgX3JlZlsnW2hpZGRlbl0nXSA9IHtcbiAgICBkaXNwbGF5OiAnbm9uZSdcbiAgfSwgX3JlZiksIHtcbiAgICAnYWJiclt0aXRsZV0nOiB7XG4gICAgICB0ZXh0RGVjb3JhdGlvbjogJ3VuZGVybGluZSBkb3R0ZWQnXG4gICAgfVxuICB9XTtcbn1cblxuZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0JDEoKSB7XG4gIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbExvb3NlKFtcInJhZGlhbC1ncmFkaWVudChcIiwgXCJcIiwgXCJcIiwgXCJcIiwgXCIpXCJdKTtcblxuICBfdGVtcGxhdGVPYmplY3QkMSA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHtcbiAgICByZXR1cm4gZGF0YTtcbiAgfTtcblxuICByZXR1cm4gZGF0YTtcbn1cblxuLyoqXG4gKiBDU1MgZm9yIGRlY2xhcmluZyBhIHJhZGlhbCBncmFkaWVudCwgaW5jbHVkaW5nIGEgZmFsbGJhY2sgYmFja2dyb3VuZC1jb2xvci4gVGhlIGZhbGxiYWNrIGlzIGVpdGhlciB0aGUgZmlyc3QgY29sb3Itc3RvcCBvciBhbiBleHBsaWNpdGx5IHBhc3NlZCBmYWxsYmFjayBjb2xvci5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5yYWRpYWxHcmFkaWVudCh7XG4gKiAgICAgY29sb3JTdG9wczogWycjMDBGRkZGIDAlJywgJ3JnYmEoMCwgMCwgMjU1LCAwKSA1MCUnLCAnIzAwMDBGRiA5NSUnXSxcbiAqICAgICBleHRlbnQ6ICdmYXJ0aGVzdC1jb3JuZXIgYXQgNDVweCA0NXB4JyxcbiAqICAgICBwb3NpdGlvbjogJ2NlbnRlcicsXG4gKiAgICAgc2hhcGU6ICdlbGxpcHNlJyxcbiAqICAgfSlcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtyYWRpYWxHcmFkaWVudCh7XG4gKiAgICAgY29sb3JTdG9wczogWycjMDBGRkZGIDAlJywgJ3JnYmEoMCwgMCwgMjU1LCAwKSA1MCUnLCAnIzAwMDBGRiA5NSUnXSxcbiAqICAgICBleHRlbnQ6ICdmYXJ0aGVzdC1jb3JuZXIgYXQgNDVweCA0NXB4JyxcbiAqICAgICBwb3NpdGlvbjogJ2NlbnRlcicsXG4gKiAgICAgc2hhcGU6ICdlbGxpcHNlJyxcbiAqICAgfSl9XG4gKmBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2OiB7XG4gKiAgICdiYWNrZ3JvdW5kQ29sb3InOiAnIzAwRkZGRicsXG4gKiAgICdiYWNrZ3JvdW5kSW1hZ2UnOiAncmFkaWFsLWdyYWRpZW50KGNlbnRlciBlbGxpcHNlIGZhcnRoZXN0LWNvcm5lciBhdCA0NXB4IDQ1cHgsICMwMEZGRkYgMCUsIHJnYmEoMCwgMCwgMjU1LCAwKSA1MCUsICMwMDAwRkYgOTUlKScsXG4gKiB9XG4gKi9cbmZ1bmN0aW9uIHJhZGlhbEdyYWRpZW50KF9yZWYpIHtcbiAgdmFyIGNvbG9yU3RvcHMgPSBfcmVmLmNvbG9yU3RvcHMsXG4gICAgICBfcmVmJGV4dGVudCA9IF9yZWYuZXh0ZW50LFxuICAgICAgZXh0ZW50ID0gX3JlZiRleHRlbnQgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRleHRlbnQsXG4gICAgICBmYWxsYmFjayA9IF9yZWYuZmFsbGJhY2ssXG4gICAgICBfcmVmJHBvc2l0aW9uID0gX3JlZi5wb3NpdGlvbixcbiAgICAgIHBvc2l0aW9uID0gX3JlZiRwb3NpdGlvbiA9PT0gdm9pZCAwID8gJycgOiBfcmVmJHBvc2l0aW9uLFxuICAgICAgX3JlZiRzaGFwZSA9IF9yZWYuc2hhcGUsXG4gICAgICBzaGFwZSA9IF9yZWYkc2hhcGUgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRzaGFwZTtcblxuICBpZiAoIWNvbG9yU3RvcHMgfHwgY29sb3JTdG9wcy5sZW5ndGggPCAyKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNTcpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBiYWNrZ3JvdW5kQ29sb3I6IGZhbGxiYWNrIHx8IGNvbG9yU3RvcHNbMF0uc3BsaXQoJyAnKVswXSxcbiAgICBiYWNrZ3JvdW5kSW1hZ2U6IGNvbnN0cnVjdEdyYWRpZW50VmFsdWUoX3RlbXBsYXRlT2JqZWN0JDEoKSwgcG9zaXRpb24sIHNoYXBlLCBleHRlbnQsIGNvbG9yU3RvcHMuam9pbignLCAnKSlcbiAgfTtcbn1cblxuLyoqXG4gKiBBIGhlbHBlciB0byBnZW5lcmF0ZSBhIHJldGluYSBiYWNrZ3JvdW5kIGltYWdlIGFuZCBub24tcmV0aW5hXG4gKiBiYWNrZ3JvdW5kIGltYWdlLiBUaGUgcmV0aW5hIGJhY2tncm91bmQgaW1hZ2Ugd2lsbCBvdXRwdXQgdG8gYSBIaURQSSBtZWRpYSBxdWVyeS4gVGhlIG1peGluIHVzZXNcbiAqIGEgXzJ4LnBuZyBmaWxlbmFtZSBzdWZmaXggYnkgZGVmYXVsdC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogIC4uLnJldGluYUltYWdlKCdteS1pbWcnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke3JldGluYUltYWdlKCdteS1pbWcnKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKiBkaXYge1xuICogICBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwobXktaW1nLnBuZyknLFxuICogICAnQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjMpLFxuICogICAgb25seSBzY3JlZW4gYW5kIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuMyksXG4gKiAgICBvbmx5IHNjcmVlbiBhbmQgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuMy8xKSxcbiAqICAgIG9ubHkgc2NyZWVuIGFuZCAobWluLXJlc29sdXRpb246IDE0NGRwaSksXG4gKiAgICBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxLjVkcHB4KSc6IHtcbiAqICAgICBiYWNrZ3JvdW5kSW1hZ2U6ICd1cmwobXktaW1nXzJ4LnBuZyknLFxuICogICB9XG4gKiB9XG4gKi9cbmZ1bmN0aW9uIHJldGluYUltYWdlKGZpbGVuYW1lLCBiYWNrZ3JvdW5kU2l6ZSwgZXh0ZW5zaW9uLCByZXRpbmFGaWxlbmFtZSwgcmV0aW5hU3VmZml4KSB7XG4gIHZhciBfcmVmO1xuXG4gIGlmIChleHRlbnNpb24gPT09IHZvaWQgMCkge1xuICAgIGV4dGVuc2lvbiA9ICdwbmcnO1xuICB9XG5cbiAgaWYgKHJldGluYVN1ZmZpeCA9PT0gdm9pZCAwKSB7XG4gICAgcmV0aW5hU3VmZml4ID0gJ18yeCc7XG4gIH1cblxuICBpZiAoIWZpbGVuYW1lKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNTgpO1xuICB9IC8vIFJlcGxhY2UgdGhlIGRvdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwYXNzZWQgZXh0ZW5zaW9uIGlmIG9uZSBleGlzdHNcblxuXG4gIHZhciBleHQgPSBleHRlbnNpb24ucmVwbGFjZSgvXlxcLi8sICcnKTtcbiAgdmFyIHJGaWxlbmFtZSA9IHJldGluYUZpbGVuYW1lID8gcmV0aW5hRmlsZW5hbWUgKyBcIi5cIiArIGV4dCA6IFwiXCIgKyBmaWxlbmFtZSArIHJldGluYVN1ZmZpeCArIFwiLlwiICsgZXh0O1xuICByZXR1cm4gX3JlZiA9IHtcbiAgICBiYWNrZ3JvdW5kSW1hZ2U6IFwidXJsKFwiICsgZmlsZW5hbWUgKyBcIi5cIiArIGV4dCArIFwiKVwiXG4gIH0sIF9yZWZbaGlEUEkoKV0gPSBfZXh0ZW5kcyh7XG4gICAgYmFja2dyb3VuZEltYWdlOiBcInVybChcIiArIHJGaWxlbmFtZSArIFwiKVwiXG4gIH0sIGJhY2tncm91bmRTaXplID8ge1xuICAgIGJhY2tncm91bmRTaXplOiBiYWNrZ3JvdW5kU2l6ZVxuICB9IDoge30pLCBfcmVmO1xufVxuXG4vKiBlc2xpbnQtZGlzYWJsZSBrZXktc3BhY2luZyAqL1xudmFyIGZ1bmN0aW9uc01hcCA9IHtcbiAgZWFzZUluQmFjazogJ2N1YmljLWJlemllcigwLjYwMCwgLTAuMjgwLCAwLjczNSwgMC4wNDUpJyxcbiAgZWFzZUluQ2lyYzogJ2N1YmljLWJlemllcigwLjYwMCwgIDAuMDQwLCAwLjk4MCwgMC4zMzUpJyxcbiAgZWFzZUluQ3ViaWM6ICdjdWJpYy1iZXppZXIoMC41NTAsICAwLjA1NSwgMC42NzUsIDAuMTkwKScsXG4gIGVhc2VJbkV4cG86ICdjdWJpYy1iZXppZXIoMC45NTAsICAwLjA1MCwgMC43OTUsIDAuMDM1KScsXG4gIGVhc2VJblF1YWQ6ICdjdWJpYy1iZXppZXIoMC41NTAsICAwLjA4NSwgMC42ODAsIDAuNTMwKScsXG4gIGVhc2VJblF1YXJ0OiAnY3ViaWMtYmV6aWVyKDAuODk1LCAgMC4wMzAsIDAuNjg1LCAwLjIyMCknLFxuICBlYXNlSW5RdWludDogJ2N1YmljLWJlemllcigwLjc1NSwgIDAuMDUwLCAwLjg1NSwgMC4wNjApJyxcbiAgZWFzZUluU2luZTogJ2N1YmljLWJlemllcigwLjQ3MCwgIDAuMDAwLCAwLjc0NSwgMC43MTUpJyxcbiAgZWFzZU91dEJhY2s6ICdjdWJpYy1iZXppZXIoMC4xNzUsICAwLjg4NSwgMC4zMjAsIDEuMjc1KScsXG4gIGVhc2VPdXRDdWJpYzogJ2N1YmljLWJlemllcigwLjIxNSwgIDAuNjEwLCAwLjM1NSwgMS4wMDApJyxcbiAgZWFzZU91dENpcmM6ICdjdWJpYy1iZXppZXIoMC4wNzUsICAwLjgyMCwgMC4xNjUsIDEuMDAwKScsXG4gIGVhc2VPdXRFeHBvOiAnY3ViaWMtYmV6aWVyKDAuMTkwLCAgMS4wMDAsIDAuMjIwLCAxLjAwMCknLFxuICBlYXNlT3V0UXVhZDogJ2N1YmljLWJlemllcigwLjI1MCwgIDAuNDYwLCAwLjQ1MCwgMC45NDApJyxcbiAgZWFzZU91dFF1YXJ0OiAnY3ViaWMtYmV6aWVyKDAuMTY1LCAgMC44NDAsIDAuNDQwLCAxLjAwMCknLFxuICBlYXNlT3V0UXVpbnQ6ICdjdWJpYy1iZXppZXIoMC4yMzAsICAxLjAwMCwgMC4zMjAsIDEuMDAwKScsXG4gIGVhc2VPdXRTaW5lOiAnY3ViaWMtYmV6aWVyKDAuMzkwLCAgMC41NzUsIDAuNTY1LCAxLjAwMCknLFxuICBlYXNlSW5PdXRCYWNrOiAnY3ViaWMtYmV6aWVyKDAuNjgwLCAtMC41NTAsIDAuMjY1LCAxLjU1MCknLFxuICBlYXNlSW5PdXRDaXJjOiAnY3ViaWMtYmV6aWVyKDAuNzg1LCAgMC4xMzUsIDAuMTUwLCAwLjg2MCknLFxuICBlYXNlSW5PdXRDdWJpYzogJ2N1YmljLWJlemllcigwLjY0NSwgIDAuMDQ1LCAwLjM1NSwgMS4wMDApJyxcbiAgZWFzZUluT3V0RXhwbzogJ2N1YmljLWJlemllcigxLjAwMCwgIDAuMDAwLCAwLjAwMCwgMS4wMDApJyxcbiAgZWFzZUluT3V0UXVhZDogJ2N1YmljLWJlemllcigwLjQ1NSwgIDAuMDMwLCAwLjUxNSwgMC45NTUpJyxcbiAgZWFzZUluT3V0UXVhcnQ6ICdjdWJpYy1iZXppZXIoMC43NzAsICAwLjAwMCwgMC4xNzUsIDEuMDAwKScsXG4gIGVhc2VJbk91dFF1aW50OiAnY3ViaWMtYmV6aWVyKDAuODYwLCAgMC4wMDAsIDAuMDcwLCAxLjAwMCknLFxuICBlYXNlSW5PdXRTaW5lOiAnY3ViaWMtYmV6aWVyKDAuNDQ1LCAgMC4wNTAsIDAuNTUwLCAwLjk1MCknXG59O1xuLyogZXNsaW50LWVuYWJsZSBrZXktc3BhY2luZyAqL1xuXG5mdW5jdGlvbiBnZXRUaW1pbmdGdW5jdGlvbihmdW5jdGlvbk5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uc01hcFtmdW5jdGlvbk5hbWVdO1xufVxuLyoqXG4gKiBTdHJpbmcgdG8gcmVwcmVzZW50IGNvbW1vbiBlYXNpbmcgZnVuY3Rpb25zIGFzIGRlbW9uc3RyYXRlZCBoZXJlOiAoZ2l0aHViLmNvbS9qYXVraWEvZWFzaWUpLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgICd0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24nOiB0aW1pbmdGdW5jdGlvbnMoJ2Vhc2VJblF1YWQnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiAgY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uOiAke3RpbWluZ0Z1bmN0aW9ucygnZWFzZUluUXVhZCcpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogJ2Rpdic6IHtcbiAqICAgJ3RyYW5zaXRpb25UaW1pbmdGdW5jdGlvbic6ICdjdWJpYy1iZXppZXIoMC41NTAsICAwLjA4NSwgMC42ODAsIDAuNTMwKScsXG4gKiB9XG4gKi9cblxuXG5mdW5jdGlvbiB0aW1pbmdGdW5jdGlvbnModGltaW5nRnVuY3Rpb24pIHtcbiAgcmV0dXJuIGdldFRpbWluZ0Z1bmN0aW9uKHRpbWluZ0Z1bmN0aW9uKTtcbn1cblxudmFyIGdldEJvcmRlcldpZHRoID0gZnVuY3Rpb24gZ2V0Qm9yZGVyV2lkdGgocG9pbnRpbmdEaXJlY3Rpb24sIGhlaWdodCwgd2lkdGgpIHtcbiAgdmFyIGZ1bGxXaWR0aCA9IFwiXCIgKyB3aWR0aFswXSArICh3aWR0aFsxXSB8fCAnJyk7XG4gIHZhciBoYWxmV2lkdGggPSBcIlwiICsgd2lkdGhbMF0gLyAyICsgKHdpZHRoWzFdIHx8ICcnKTtcbiAgdmFyIGZ1bGxIZWlnaHQgPSBcIlwiICsgaGVpZ2h0WzBdICsgKGhlaWdodFsxXSB8fCAnJyk7XG4gIHZhciBoYWxmSGVpZ2h0ID0gXCJcIiArIGhlaWdodFswXSAvIDIgKyAoaGVpZ2h0WzFdIHx8ICcnKTtcblxuICBzd2l0Y2ggKHBvaW50aW5nRGlyZWN0aW9uKSB7XG4gICAgY2FzZSAndG9wJzpcbiAgICAgIHJldHVybiBcIjAgXCIgKyBoYWxmV2lkdGggKyBcIiBcIiArIGZ1bGxIZWlnaHQgKyBcIiBcIiArIGhhbGZXaWR0aDtcblxuICAgIGNhc2UgJ3RvcExlZnQnOlxuICAgICAgcmV0dXJuIGZ1bGxXaWR0aCArIFwiIFwiICsgZnVsbEhlaWdodCArIFwiIDAgMFwiO1xuXG4gICAgY2FzZSAnbGVmdCc6XG4gICAgICByZXR1cm4gaGFsZkhlaWdodCArIFwiIFwiICsgZnVsbFdpZHRoICsgXCIgXCIgKyBoYWxmSGVpZ2h0ICsgXCIgMFwiO1xuXG4gICAgY2FzZSAnYm90dG9tTGVmdCc6XG4gICAgICByZXR1cm4gZnVsbFdpZHRoICsgXCIgMCAwIFwiICsgZnVsbEhlaWdodDtcblxuICAgIGNhc2UgJ2JvdHRvbSc6XG4gICAgICByZXR1cm4gZnVsbEhlaWdodCArIFwiIFwiICsgaGFsZldpZHRoICsgXCIgMCBcIiArIGhhbGZXaWR0aDtcblxuICAgIGNhc2UgJ2JvdHRvbVJpZ2h0JzpcbiAgICAgIHJldHVybiBcIjAgMCBcIiArIGZ1bGxXaWR0aCArIFwiIFwiICsgZnVsbEhlaWdodDtcblxuICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgIHJldHVybiBoYWxmSGVpZ2h0ICsgXCIgMCBcIiArIGhhbGZIZWlnaHQgKyBcIiBcIiArIGZ1bGxXaWR0aDtcblxuICAgIGNhc2UgJ3RvcFJpZ2h0JzpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwiMCBcIiArIGZ1bGxXaWR0aCArIFwiIFwiICsgZnVsbEhlaWdodCArIFwiIDBcIjtcbiAgfVxufTtcblxudmFyIGdldEJvcmRlckNvbG9yID0gZnVuY3Rpb24gZ2V0Qm9yZGVyQ29sb3IocG9pbnRpbmdEaXJlY3Rpb24sIGZvcmVncm91bmRDb2xvciwgYmFja2dyb3VuZENvbG9yKSB7XG4gIHN3aXRjaCAocG9pbnRpbmdEaXJlY3Rpb24pIHtcbiAgICBjYXNlICd0b3AnOlxuICAgIGNhc2UgJ2JvdHRvbVJpZ2h0JzpcbiAgICAgIHJldHVybiBiYWNrZ3JvdW5kQ29sb3IgKyBcIiBcIiArIGJhY2tncm91bmRDb2xvciArIFwiIFwiICsgZm9yZWdyb3VuZENvbG9yICsgXCIgXCIgKyBiYWNrZ3JvdW5kQ29sb3I7XG5cbiAgICBjYXNlICdyaWdodCc6XG4gICAgY2FzZSAnYm90dG9tTGVmdCc6XG4gICAgICByZXR1cm4gYmFja2dyb3VuZENvbG9yICsgXCIgXCIgKyBiYWNrZ3JvdW5kQ29sb3IgKyBcIiBcIiArIGJhY2tncm91bmRDb2xvciArIFwiIFwiICsgZm9yZWdyb3VuZENvbG9yO1xuXG4gICAgY2FzZSAnYm90dG9tJzpcbiAgICBjYXNlICd0b3BMZWZ0JzpcbiAgICAgIHJldHVybiBmb3JlZ3JvdW5kQ29sb3IgKyBcIiBcIiArIGJhY2tncm91bmRDb2xvciArIFwiIFwiICsgYmFja2dyb3VuZENvbG9yICsgXCIgXCIgKyBiYWNrZ3JvdW5kQ29sb3I7XG5cbiAgICBjYXNlICdsZWZ0JzpcbiAgICBjYXNlICd0b3BSaWdodCc6XG4gICAgICByZXR1cm4gYmFja2dyb3VuZENvbG9yICsgXCIgXCIgKyBmb3JlZ3JvdW5kQ29sb3IgKyBcIiBcIiArIGJhY2tncm91bmRDb2xvciArIFwiIFwiICsgYmFja2dyb3VuZENvbG9yO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDU5KTtcbiAgfVxufTtcbi8qKlxuICogQ1NTIHRvIHJlcHJlc2VudCB0cmlhbmdsZSB3aXRoIGFueSBwb2ludGluZyBkaXJlY3Rpb24gd2l0aCBhbiBvcHRpb25hbCBiYWNrZ3JvdW5kIGNvbG9yLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKlxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi50cmlhbmdsZSh7IHBvaW50aW5nRGlyZWN0aW9uOiAncmlnaHQnLCB3aWR0aDogJzEwMHB4JywgaGVpZ2h0OiAnMTAwcHgnLCBmb3JlZ3JvdW5kQ29sb3I6ICdyZWQnIH0pXG4gKiB9XG4gKlxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke3RyaWFuZ2xlKHsgcG9pbnRpbmdEaXJlY3Rpb246ICdyaWdodCcsIHdpZHRoOiAnMTAwcHgnLCBoZWlnaHQ6ICcxMDBweCcsIGZvcmVncm91bmRDb2xvcjogJ3JlZCcgfSl9XG4gKlxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXY6IHtcbiAqICAnYm9yZGVyQ29sb3InOiAndHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgcmVkJyxcbiAqICAnYm9yZGVyU3R5bGUnOiAnc29saWQnLFxuICogICdib3JkZXJXaWR0aCc6ICc1MHB4IDAgNTBweCAxMDBweCcsXG4gKiAgJ2hlaWdodCc6ICcwJyxcbiAqICAnd2lkdGgnOiAnMCcsXG4gKiB9XG4gKi9cblxuXG5mdW5jdGlvbiB0cmlhbmdsZShfcmVmKSB7XG4gIHZhciBwb2ludGluZ0RpcmVjdGlvbiA9IF9yZWYucG9pbnRpbmdEaXJlY3Rpb24sXG4gICAgICBoZWlnaHQgPSBfcmVmLmhlaWdodCxcbiAgICAgIHdpZHRoID0gX3JlZi53aWR0aCxcbiAgICAgIGZvcmVncm91bmRDb2xvciA9IF9yZWYuZm9yZWdyb3VuZENvbG9yLFxuICAgICAgX3JlZiRiYWNrZ3JvdW5kQ29sb3IgPSBfcmVmLmJhY2tncm91bmRDb2xvcixcbiAgICAgIGJhY2tncm91bmRDb2xvciA9IF9yZWYkYmFja2dyb3VuZENvbG9yID09PSB2b2lkIDAgPyAndHJhbnNwYXJlbnQnIDogX3JlZiRiYWNrZ3JvdW5kQ29sb3I7XG4gIHZhciB3aWR0aEFuZFVuaXQgPSBnZXRWYWx1ZUFuZFVuaXQod2lkdGgpO1xuICB2YXIgaGVpZ2h0QW5kVW5pdCA9IGdldFZhbHVlQW5kVW5pdChoZWlnaHQpO1xuXG4gIGlmIChpc05hTihoZWlnaHRBbmRVbml0WzBdKSB8fCBpc05hTih3aWR0aEFuZFVuaXRbMF0pKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNjApO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB3aWR0aDogJzAnLFxuICAgIGhlaWdodDogJzAnLFxuICAgIGJvcmRlckNvbG9yOiBnZXRCb3JkZXJDb2xvcihwb2ludGluZ0RpcmVjdGlvbiwgZm9yZWdyb3VuZENvbG9yLCBiYWNrZ3JvdW5kQ29sb3IpLFxuICAgIGJvcmRlclN0eWxlOiAnc29saWQnLFxuICAgIGJvcmRlcldpZHRoOiBnZXRCb3JkZXJXaWR0aChwb2ludGluZ0RpcmVjdGlvbiwgaGVpZ2h0QW5kVW5pdCwgd2lkdGhBbmRVbml0KVxuICB9O1xufVxuXG4vKipcbiAqIFByb3ZpZGVzIGFuIGVhc3kgd2F5IHRvIGNoYW5nZSB0aGUgYHdvcmRXcmFwYCBwcm9wZXJ0eS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi53b3JkV3JhcCgnYnJlYWstd29yZCcpXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgICR7d29yZFdyYXAoJ2JyZWFrLXdvcmQnKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBvdmVyZmxvd1dyYXA6ICdicmVhay13b3JkJyxcbiAqICAgd29yZFdyYXA6ICdicmVhay13b3JkJyxcbiAqICAgd29yZEJyZWFrOiAnYnJlYWstYWxsJyxcbiAqIH1cbiAqL1xuZnVuY3Rpb24gd29yZFdyYXAod3JhcCkge1xuICBpZiAod3JhcCA9PT0gdm9pZCAwKSB7XG4gICAgd3JhcCA9ICdicmVhay13b3JkJztcbiAgfVxuXG4gIHZhciB3b3JkQnJlYWsgPSB3cmFwID09PSAnYnJlYWstd29yZCcgPyAnYnJlYWstYWxsJyA6IHdyYXA7XG4gIHJldHVybiB7XG4gICAgb3ZlcmZsb3dXcmFwOiB3cmFwLFxuICAgIHdvcmRXcmFwOiB3cmFwLFxuICAgIHdvcmRCcmVhazogd29yZEJyZWFrXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbG9yVG9JbnQoY29sb3IpIHtcbiAgcmV0dXJuIE1hdGgucm91bmQoY29sb3IgKiAyNTUpO1xufVxuXG5mdW5jdGlvbiBjb252ZXJ0VG9JbnQocmVkLCBncmVlbiwgYmx1ZSkge1xuICByZXR1cm4gY29sb3JUb0ludChyZWQpICsgXCIsXCIgKyBjb2xvclRvSW50KGdyZWVuKSArIFwiLFwiICsgY29sb3JUb0ludChibHVlKTtcbn1cblxuZnVuY3Rpb24gaHNsVG9SZ2IoaHVlLCBzYXR1cmF0aW9uLCBsaWdodG5lc3MsIGNvbnZlcnQpIHtcbiAgaWYgKGNvbnZlcnQgPT09IHZvaWQgMCkge1xuICAgIGNvbnZlcnQgPSBjb252ZXJ0VG9JbnQ7XG4gIH1cblxuICBpZiAoc2F0dXJhdGlvbiA9PT0gMCkge1xuICAgIC8vIGFjaHJvbWF0aWNcbiAgICByZXR1cm4gY29udmVydChsaWdodG5lc3MsIGxpZ2h0bmVzcywgbGlnaHRuZXNzKTtcbiAgfSAvLyBmb3JtdWxhZSBmcm9tIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0hTTF9hbmRfSFNWXG5cblxuICB2YXIgaHVlUHJpbWUgPSAoaHVlICUgMzYwICsgMzYwKSAlIDM2MCAvIDYwO1xuICB2YXIgY2hyb21hID0gKDEgLSBNYXRoLmFicygyICogbGlnaHRuZXNzIC0gMSkpICogc2F0dXJhdGlvbjtcbiAgdmFyIHNlY29uZENvbXBvbmVudCA9IGNocm9tYSAqICgxIC0gTWF0aC5hYnMoaHVlUHJpbWUgJSAyIC0gMSkpO1xuICB2YXIgcmVkID0gMDtcbiAgdmFyIGdyZWVuID0gMDtcbiAgdmFyIGJsdWUgPSAwO1xuXG4gIGlmIChodWVQcmltZSA+PSAwICYmIGh1ZVByaW1lIDwgMSkge1xuICAgIHJlZCA9IGNocm9tYTtcbiAgICBncmVlbiA9IHNlY29uZENvbXBvbmVudDtcbiAgfSBlbHNlIGlmIChodWVQcmltZSA+PSAxICYmIGh1ZVByaW1lIDwgMikge1xuICAgIHJlZCA9IHNlY29uZENvbXBvbmVudDtcbiAgICBncmVlbiA9IGNocm9tYTtcbiAgfSBlbHNlIGlmIChodWVQcmltZSA+PSAyICYmIGh1ZVByaW1lIDwgMykge1xuICAgIGdyZWVuID0gY2hyb21hO1xuICAgIGJsdWUgPSBzZWNvbmRDb21wb25lbnQ7XG4gIH0gZWxzZSBpZiAoaHVlUHJpbWUgPj0gMyAmJiBodWVQcmltZSA8IDQpIHtcbiAgICBncmVlbiA9IHNlY29uZENvbXBvbmVudDtcbiAgICBibHVlID0gY2hyb21hO1xuICB9IGVsc2UgaWYgKGh1ZVByaW1lID49IDQgJiYgaHVlUHJpbWUgPCA1KSB7XG4gICAgcmVkID0gc2Vjb25kQ29tcG9uZW50O1xuICAgIGJsdWUgPSBjaHJvbWE7XG4gIH0gZWxzZSBpZiAoaHVlUHJpbWUgPj0gNSAmJiBodWVQcmltZSA8IDYpIHtcbiAgICByZWQgPSBjaHJvbWE7XG4gICAgYmx1ZSA9IHNlY29uZENvbXBvbmVudDtcbiAgfVxuXG4gIHZhciBsaWdodG5lc3NNb2RpZmljYXRpb24gPSBsaWdodG5lc3MgLSBjaHJvbWEgLyAyO1xuICB2YXIgZmluYWxSZWQgPSByZWQgKyBsaWdodG5lc3NNb2RpZmljYXRpb247XG4gIHZhciBmaW5hbEdyZWVuID0gZ3JlZW4gKyBsaWdodG5lc3NNb2RpZmljYXRpb247XG4gIHZhciBmaW5hbEJsdWUgPSBibHVlICsgbGlnaHRuZXNzTW9kaWZpY2F0aW9uO1xuICByZXR1cm4gY29udmVydChmaW5hbFJlZCwgZmluYWxHcmVlbiwgZmluYWxCbHVlKTtcbn1cblxudmFyIG5hbWVkQ29sb3JNYXAgPSB7XG4gIGFsaWNlYmx1ZTogJ2YwZjhmZicsXG4gIGFudGlxdWV3aGl0ZTogJ2ZhZWJkNycsXG4gIGFxdWE6ICcwMGZmZmYnLFxuICBhcXVhbWFyaW5lOiAnN2ZmZmQ0JyxcbiAgYXp1cmU6ICdmMGZmZmYnLFxuICBiZWlnZTogJ2Y1ZjVkYycsXG4gIGJpc3F1ZTogJ2ZmZTRjNCcsXG4gIGJsYWNrOiAnMDAwJyxcbiAgYmxhbmNoZWRhbG1vbmQ6ICdmZmViY2QnLFxuICBibHVlOiAnMDAwMGZmJyxcbiAgYmx1ZXZpb2xldDogJzhhMmJlMicsXG4gIGJyb3duOiAnYTUyYTJhJyxcbiAgYnVybHl3b29kOiAnZGViODg3JyxcbiAgY2FkZXRibHVlOiAnNWY5ZWEwJyxcbiAgY2hhcnRyZXVzZTogJzdmZmYwMCcsXG4gIGNob2NvbGF0ZTogJ2QyNjkxZScsXG4gIGNvcmFsOiAnZmY3ZjUwJyxcbiAgY29ybmZsb3dlcmJsdWU6ICc2NDk1ZWQnLFxuICBjb3Juc2lsazogJ2ZmZjhkYycsXG4gIGNyaW1zb246ICdkYzE0M2MnLFxuICBjeWFuOiAnMDBmZmZmJyxcbiAgZGFya2JsdWU6ICcwMDAwOGInLFxuICBkYXJrY3lhbjogJzAwOGI4YicsXG4gIGRhcmtnb2xkZW5yb2Q6ICdiODg2MGInLFxuICBkYXJrZ3JheTogJ2E5YTlhOScsXG4gIGRhcmtncmVlbjogJzAwNjQwMCcsXG4gIGRhcmtncmV5OiAnYTlhOWE5JyxcbiAgZGFya2toYWtpOiAnYmRiNzZiJyxcbiAgZGFya21hZ2VudGE6ICc4YjAwOGInLFxuICBkYXJrb2xpdmVncmVlbjogJzU1NmIyZicsXG4gIGRhcmtvcmFuZ2U6ICdmZjhjMDAnLFxuICBkYXJrb3JjaGlkOiAnOTkzMmNjJyxcbiAgZGFya3JlZDogJzhiMDAwMCcsXG4gIGRhcmtzYWxtb246ICdlOTk2N2EnLFxuICBkYXJrc2VhZ3JlZW46ICc4ZmJjOGYnLFxuICBkYXJrc2xhdGVibHVlOiAnNDgzZDhiJyxcbiAgZGFya3NsYXRlZ3JheTogJzJmNGY0ZicsXG4gIGRhcmtzbGF0ZWdyZXk6ICcyZjRmNGYnLFxuICBkYXJrdHVycXVvaXNlOiAnMDBjZWQxJyxcbiAgZGFya3Zpb2xldDogJzk0MDBkMycsXG4gIGRlZXBwaW5rOiAnZmYxNDkzJyxcbiAgZGVlcHNreWJsdWU6ICcwMGJmZmYnLFxuICBkaW1ncmF5OiAnNjk2OTY5JyxcbiAgZGltZ3JleTogJzY5Njk2OScsXG4gIGRvZGdlcmJsdWU6ICcxZTkwZmYnLFxuICBmaXJlYnJpY2s6ICdiMjIyMjInLFxuICBmbG9yYWx3aGl0ZTogJ2ZmZmFmMCcsXG4gIGZvcmVzdGdyZWVuOiAnMjI4YjIyJyxcbiAgZnVjaHNpYTogJ2ZmMDBmZicsXG4gIGdhaW5zYm9ybzogJ2RjZGNkYycsXG4gIGdob3N0d2hpdGU6ICdmOGY4ZmYnLFxuICBnb2xkOiAnZmZkNzAwJyxcbiAgZ29sZGVucm9kOiAnZGFhNTIwJyxcbiAgZ3JheTogJzgwODA4MCcsXG4gIGdyZWVuOiAnMDA4MDAwJyxcbiAgZ3JlZW55ZWxsb3c6ICdhZGZmMmYnLFxuICBncmV5OiAnODA4MDgwJyxcbiAgaG9uZXlkZXc6ICdmMGZmZjAnLFxuICBob3RwaW5rOiAnZmY2OWI0JyxcbiAgaW5kaWFucmVkOiAnY2Q1YzVjJyxcbiAgaW5kaWdvOiAnNGIwMDgyJyxcbiAgaXZvcnk6ICdmZmZmZjAnLFxuICBraGFraTogJ2YwZTY4YycsXG4gIGxhdmVuZGVyOiAnZTZlNmZhJyxcbiAgbGF2ZW5kZXJibHVzaDogJ2ZmZjBmNScsXG4gIGxhd25ncmVlbjogJzdjZmMwMCcsXG4gIGxlbW9uY2hpZmZvbjogJ2ZmZmFjZCcsXG4gIGxpZ2h0Ymx1ZTogJ2FkZDhlNicsXG4gIGxpZ2h0Y29yYWw6ICdmMDgwODAnLFxuICBsaWdodGN5YW46ICdlMGZmZmYnLFxuICBsaWdodGdvbGRlbnJvZHllbGxvdzogJ2ZhZmFkMicsXG4gIGxpZ2h0Z3JheTogJ2QzZDNkMycsXG4gIGxpZ2h0Z3JlZW46ICc5MGVlOTAnLFxuICBsaWdodGdyZXk6ICdkM2QzZDMnLFxuICBsaWdodHBpbms6ICdmZmI2YzEnLFxuICBsaWdodHNhbG1vbjogJ2ZmYTA3YScsXG4gIGxpZ2h0c2VhZ3JlZW46ICcyMGIyYWEnLFxuICBsaWdodHNreWJsdWU6ICc4N2NlZmEnLFxuICBsaWdodHNsYXRlZ3JheTogJzc4OScsXG4gIGxpZ2h0c2xhdGVncmV5OiAnNzg5JyxcbiAgbGlnaHRzdGVlbGJsdWU6ICdiMGM0ZGUnLFxuICBsaWdodHllbGxvdzogJ2ZmZmZlMCcsXG4gIGxpbWU6ICcwZjAnLFxuICBsaW1lZ3JlZW46ICczMmNkMzInLFxuICBsaW5lbjogJ2ZhZjBlNicsXG4gIG1hZ2VudGE6ICdmMGYnLFxuICBtYXJvb246ICc4MDAwMDAnLFxuICBtZWRpdW1hcXVhbWFyaW5lOiAnNjZjZGFhJyxcbiAgbWVkaXVtYmx1ZTogJzAwMDBjZCcsXG4gIG1lZGl1bW9yY2hpZDogJ2JhNTVkMycsXG4gIG1lZGl1bXB1cnBsZTogJzkzNzBkYicsXG4gIG1lZGl1bXNlYWdyZWVuOiAnM2NiMzcxJyxcbiAgbWVkaXVtc2xhdGVibHVlOiAnN2I2OGVlJyxcbiAgbWVkaXVtc3ByaW5nZ3JlZW46ICcwMGZhOWEnLFxuICBtZWRpdW10dXJxdW9pc2U6ICc0OGQxY2MnLFxuICBtZWRpdW12aW9sZXRyZWQ6ICdjNzE1ODUnLFxuICBtaWRuaWdodGJsdWU6ICcxOTE5NzAnLFxuICBtaW50Y3JlYW06ICdmNWZmZmEnLFxuICBtaXN0eXJvc2U6ICdmZmU0ZTEnLFxuICBtb2NjYXNpbjogJ2ZmZTRiNScsXG4gIG5hdmFqb3doaXRlOiAnZmZkZWFkJyxcbiAgbmF2eTogJzAwMDA4MCcsXG4gIG9sZGxhY2U6ICdmZGY1ZTYnLFxuICBvbGl2ZTogJzgwODAwMCcsXG4gIG9saXZlZHJhYjogJzZiOGUyMycsXG4gIG9yYW5nZTogJ2ZmYTUwMCcsXG4gIG9yYW5nZXJlZDogJ2ZmNDUwMCcsXG4gIG9yY2hpZDogJ2RhNzBkNicsXG4gIHBhbGVnb2xkZW5yb2Q6ICdlZWU4YWEnLFxuICBwYWxlZ3JlZW46ICc5OGZiOTgnLFxuICBwYWxldHVycXVvaXNlOiAnYWZlZWVlJyxcbiAgcGFsZXZpb2xldHJlZDogJ2RiNzA5MycsXG4gIHBhcGF5YXdoaXA6ICdmZmVmZDUnLFxuICBwZWFjaHB1ZmY6ICdmZmRhYjknLFxuICBwZXJ1OiAnY2Q4NTNmJyxcbiAgcGluazogJ2ZmYzBjYicsXG4gIHBsdW06ICdkZGEwZGQnLFxuICBwb3dkZXJibHVlOiAnYjBlMGU2JyxcbiAgcHVycGxlOiAnODAwMDgwJyxcbiAgcmViZWNjYXB1cnBsZTogJzYzOScsXG4gIHJlZDogJ2YwMCcsXG4gIHJvc3licm93bjogJ2JjOGY4ZicsXG4gIHJveWFsYmx1ZTogJzQxNjllMScsXG4gIHNhZGRsZWJyb3duOiAnOGI0NTEzJyxcbiAgc2FsbW9uOiAnZmE4MDcyJyxcbiAgc2FuZHlicm93bjogJ2Y0YTQ2MCcsXG4gIHNlYWdyZWVuOiAnMmU4YjU3JyxcbiAgc2Vhc2hlbGw6ICdmZmY1ZWUnLFxuICBzaWVubmE6ICdhMDUyMmQnLFxuICBzaWx2ZXI6ICdjMGMwYzAnLFxuICBza3libHVlOiAnODdjZWViJyxcbiAgc2xhdGVibHVlOiAnNmE1YWNkJyxcbiAgc2xhdGVncmF5OiAnNzA4MDkwJyxcbiAgc2xhdGVncmV5OiAnNzA4MDkwJyxcbiAgc25vdzogJ2ZmZmFmYScsXG4gIHNwcmluZ2dyZWVuOiAnMDBmZjdmJyxcbiAgc3RlZWxibHVlOiAnNDY4MmI0JyxcbiAgdGFuOiAnZDJiNDhjJyxcbiAgdGVhbDogJzAwODA4MCcsXG4gIHRoaXN0bGU6ICdkOGJmZDgnLFxuICB0b21hdG86ICdmZjYzNDcnLFxuICB0dXJxdW9pc2U6ICc0MGUwZDAnLFxuICB2aW9sZXQ6ICdlZTgyZWUnLFxuICB3aGVhdDogJ2Y1ZGViMycsXG4gIHdoaXRlOiAnZmZmJyxcbiAgd2hpdGVzbW9rZTogJ2Y1ZjVmNScsXG4gIHllbGxvdzogJ2ZmMCcsXG4gIHllbGxvd2dyZWVuOiAnOWFjZDMyJ1xufTtcbi8qKlxuICogQ2hlY2tzIGlmIGEgc3RyaW5nIGlzIGEgQ1NTIG5hbWVkIGNvbG9yIGFuZCByZXR1cm5zIGl0cyBlcXVpdmFsZW50IGhleCB2YWx1ZSwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG9yaWdpbmFsIGNvbG9yLlxuICogQHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBuYW1lVG9IZXgoY29sb3IpIHtcbiAgaWYgKHR5cGVvZiBjb2xvciAhPT0gJ3N0cmluZycpIHJldHVybiBjb2xvcjtcbiAgdmFyIG5vcm1hbGl6ZWRDb2xvck5hbWUgPSBjb2xvci50b0xvd2VyQ2FzZSgpO1xuICByZXR1cm4gbmFtZWRDb2xvck1hcFtub3JtYWxpemVkQ29sb3JOYW1lXSA/IFwiI1wiICsgbmFtZWRDb2xvck1hcFtub3JtYWxpemVkQ29sb3JOYW1lXSA6IGNvbG9yO1xufVxuXG52YXIgaGV4UmVnZXggPSAvXiNbYS1mQS1GMC05XXs2fSQvO1xudmFyIGhleFJnYmFSZWdleCA9IC9eI1thLWZBLUYwLTldezh9JC87XG52YXIgcmVkdWNlZEhleFJlZ2V4ID0gL14jW2EtZkEtRjAtOV17M30kLztcbnZhciByZWR1Y2VkUmdiYUhleFJlZ2V4ID0gL14jW2EtZkEtRjAtOV17NH0kLztcbnZhciByZ2JSZWdleCA9IC9ecmdiXFwoXFxzKihcXGR7MSwzfSlcXHMqLFxccyooXFxkezEsM30pXFxzKixcXHMqKFxcZHsxLDN9KVxccypcXCkkL2k7XG52YXIgcmdiYVJlZ2V4ID0gL15yZ2JhXFwoXFxzKihcXGR7MSwzfSlcXHMqLFxccyooXFxkezEsM30pXFxzKixcXHMqKFxcZHsxLDN9KVxccyosXFxzKihbLStdP1swLTldKlsuXT9bMC05XSspXFxzKlxcKSQvaTtcbnZhciBoc2xSZWdleCA9IC9eaHNsXFwoXFxzKihcXGR7MCwzfVsuXT9bMC05XSspXFxzKixcXHMqKFxcZHsxLDN9Wy5dP1swLTldPyklXFxzKixcXHMqKFxcZHsxLDN9Wy5dP1swLTldPyklXFxzKlxcKSQvaTtcbnZhciBoc2xhUmVnZXggPSAvXmhzbGFcXChcXHMqKFxcZHswLDN9Wy5dP1swLTldKylcXHMqLFxccyooXFxkezEsM31bLl0/WzAtOV0/KSVcXHMqLFxccyooXFxkezEsM31bLl0/WzAtOV0/KSVcXHMqLFxccyooWy0rXT9bMC05XSpbLl0/WzAtOV0rKVxccypcXCkkL2k7XG4vKipcbiAqIFJldHVybnMgYW4gUmdiQ29sb3Igb3IgUmdiYUNvbG9yIG9iamVjdC4gVGhpcyB1dGlsaXR5IGZ1bmN0aW9uIGlzIG9ubHkgdXNlZnVsXG4gKiBpZiB3YW50IHRvIGV4dHJhY3QgYSBjb2xvciBjb21wb25lbnQuIFdpdGggdGhlIGNvbG9yIHV0aWwgYHRvQ29sb3JTdHJpbmdgIHlvdVxuICogY2FuIGNvbnZlcnQgYSBSZ2JDb2xvciBvciBSZ2JhQ29sb3Igb2JqZWN0IGJhY2sgdG8gYSBzdHJpbmcuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEFzc2lnbnMgYHsgcmVkOiAyNTUsIGdyZWVuOiAwLCBibHVlOiAwIH1gIHRvIGNvbG9yMVxuICogY29uc3QgY29sb3IxID0gcGFyc2VUb1JnYigncmdiKDI1NSwgMCwgMCknKTtcbiAqIC8vIEFzc2lnbnMgYHsgcmVkOiA5MiwgZ3JlZW46IDEwMiwgYmx1ZTogMTEyLCBhbHBoYTogMC43NSB9YCB0byBjb2xvcjJcbiAqIGNvbnN0IGNvbG9yMiA9IHBhcnNlVG9SZ2IoJ2hzbGEoMjEwLCAxMCUsIDQwJSwgMC43NSknKTtcbiAqL1xuXG5mdW5jdGlvbiBwYXJzZVRvUmdiKGNvbG9yKSB7XG4gIGlmICh0eXBlb2YgY29sb3IgIT09ICdzdHJpbmcnKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoMyk7XG4gIH1cblxuICB2YXIgbm9ybWFsaXplZENvbG9yID0gbmFtZVRvSGV4KGNvbG9yKTtcblxuICBpZiAobm9ybWFsaXplZENvbG9yLm1hdGNoKGhleFJlZ2V4KSkge1xuICAgIHJldHVybiB7XG4gICAgICByZWQ6IHBhcnNlSW50KFwiXCIgKyBub3JtYWxpemVkQ29sb3JbMV0gKyBub3JtYWxpemVkQ29sb3JbMl0sIDE2KSxcbiAgICAgIGdyZWVuOiBwYXJzZUludChcIlwiICsgbm9ybWFsaXplZENvbG9yWzNdICsgbm9ybWFsaXplZENvbG9yWzRdLCAxNiksXG4gICAgICBibHVlOiBwYXJzZUludChcIlwiICsgbm9ybWFsaXplZENvbG9yWzVdICsgbm9ybWFsaXplZENvbG9yWzZdLCAxNilcbiAgICB9O1xuICB9XG5cbiAgaWYgKG5vcm1hbGl6ZWRDb2xvci5tYXRjaChoZXhSZ2JhUmVnZXgpKSB7XG4gICAgdmFyIGFscGhhID0gcGFyc2VGbG9hdCgocGFyc2VJbnQoXCJcIiArIG5vcm1hbGl6ZWRDb2xvcls3XSArIG5vcm1hbGl6ZWRDb2xvcls4XSwgMTYpIC8gMjU1KS50b0ZpeGVkKDIpKTtcbiAgICByZXR1cm4ge1xuICAgICAgcmVkOiBwYXJzZUludChcIlwiICsgbm9ybWFsaXplZENvbG9yWzFdICsgbm9ybWFsaXplZENvbG9yWzJdLCAxNiksXG4gICAgICBncmVlbjogcGFyc2VJbnQoXCJcIiArIG5vcm1hbGl6ZWRDb2xvclszXSArIG5vcm1hbGl6ZWRDb2xvcls0XSwgMTYpLFxuICAgICAgYmx1ZTogcGFyc2VJbnQoXCJcIiArIG5vcm1hbGl6ZWRDb2xvcls1XSArIG5vcm1hbGl6ZWRDb2xvcls2XSwgMTYpLFxuICAgICAgYWxwaGE6IGFscGhhXG4gICAgfTtcbiAgfVxuXG4gIGlmIChub3JtYWxpemVkQ29sb3IubWF0Y2gocmVkdWNlZEhleFJlZ2V4KSkge1xuICAgIHJldHVybiB7XG4gICAgICByZWQ6IHBhcnNlSW50KFwiXCIgKyBub3JtYWxpemVkQ29sb3JbMV0gKyBub3JtYWxpemVkQ29sb3JbMV0sIDE2KSxcbiAgICAgIGdyZWVuOiBwYXJzZUludChcIlwiICsgbm9ybWFsaXplZENvbG9yWzJdICsgbm9ybWFsaXplZENvbG9yWzJdLCAxNiksXG4gICAgICBibHVlOiBwYXJzZUludChcIlwiICsgbm9ybWFsaXplZENvbG9yWzNdICsgbm9ybWFsaXplZENvbG9yWzNdLCAxNilcbiAgICB9O1xuICB9XG5cbiAgaWYgKG5vcm1hbGl6ZWRDb2xvci5tYXRjaChyZWR1Y2VkUmdiYUhleFJlZ2V4KSkge1xuICAgIHZhciBfYWxwaGEgPSBwYXJzZUZsb2F0KChwYXJzZUludChcIlwiICsgbm9ybWFsaXplZENvbG9yWzRdICsgbm9ybWFsaXplZENvbG9yWzRdLCAxNikgLyAyNTUpLnRvRml4ZWQoMikpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHJlZDogcGFyc2VJbnQoXCJcIiArIG5vcm1hbGl6ZWRDb2xvclsxXSArIG5vcm1hbGl6ZWRDb2xvclsxXSwgMTYpLFxuICAgICAgZ3JlZW46IHBhcnNlSW50KFwiXCIgKyBub3JtYWxpemVkQ29sb3JbMl0gKyBub3JtYWxpemVkQ29sb3JbMl0sIDE2KSxcbiAgICAgIGJsdWU6IHBhcnNlSW50KFwiXCIgKyBub3JtYWxpemVkQ29sb3JbM10gKyBub3JtYWxpemVkQ29sb3JbM10sIDE2KSxcbiAgICAgIGFscGhhOiBfYWxwaGFcbiAgICB9O1xuICB9XG5cbiAgdmFyIHJnYk1hdGNoZWQgPSByZ2JSZWdleC5leGVjKG5vcm1hbGl6ZWRDb2xvcik7XG5cbiAgaWYgKHJnYk1hdGNoZWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgcmVkOiBwYXJzZUludChcIlwiICsgcmdiTWF0Y2hlZFsxXSwgMTApLFxuICAgICAgZ3JlZW46IHBhcnNlSW50KFwiXCIgKyByZ2JNYXRjaGVkWzJdLCAxMCksXG4gICAgICBibHVlOiBwYXJzZUludChcIlwiICsgcmdiTWF0Y2hlZFszXSwgMTApXG4gICAgfTtcbiAgfVxuXG4gIHZhciByZ2JhTWF0Y2hlZCA9IHJnYmFSZWdleC5leGVjKG5vcm1hbGl6ZWRDb2xvcik7XG5cbiAgaWYgKHJnYmFNYXRjaGVkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlZDogcGFyc2VJbnQoXCJcIiArIHJnYmFNYXRjaGVkWzFdLCAxMCksXG4gICAgICBncmVlbjogcGFyc2VJbnQoXCJcIiArIHJnYmFNYXRjaGVkWzJdLCAxMCksXG4gICAgICBibHVlOiBwYXJzZUludChcIlwiICsgcmdiYU1hdGNoZWRbM10sIDEwKSxcbiAgICAgIGFscGhhOiBwYXJzZUZsb2F0KFwiXCIgKyByZ2JhTWF0Y2hlZFs0XSlcbiAgICB9O1xuICB9XG5cbiAgdmFyIGhzbE1hdGNoZWQgPSBoc2xSZWdleC5leGVjKG5vcm1hbGl6ZWRDb2xvcik7XG5cbiAgaWYgKGhzbE1hdGNoZWQpIHtcbiAgICB2YXIgaHVlID0gcGFyc2VJbnQoXCJcIiArIGhzbE1hdGNoZWRbMV0sIDEwKTtcbiAgICB2YXIgc2F0dXJhdGlvbiA9IHBhcnNlSW50KFwiXCIgKyBoc2xNYXRjaGVkWzJdLCAxMCkgLyAxMDA7XG4gICAgdmFyIGxpZ2h0bmVzcyA9IHBhcnNlSW50KFwiXCIgKyBoc2xNYXRjaGVkWzNdLCAxMCkgLyAxMDA7XG4gICAgdmFyIHJnYkNvbG9yU3RyaW5nID0gXCJyZ2IoXCIgKyBoc2xUb1JnYihodWUsIHNhdHVyYXRpb24sIGxpZ2h0bmVzcykgKyBcIilcIjtcbiAgICB2YXIgaHNsUmdiTWF0Y2hlZCA9IHJnYlJlZ2V4LmV4ZWMocmdiQ29sb3JTdHJpbmcpO1xuXG4gICAgaWYgKCFoc2xSZ2JNYXRjaGVkKSB7XG4gICAgICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig0LCBub3JtYWxpemVkQ29sb3IsIHJnYkNvbG9yU3RyaW5nKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgcmVkOiBwYXJzZUludChcIlwiICsgaHNsUmdiTWF0Y2hlZFsxXSwgMTApLFxuICAgICAgZ3JlZW46IHBhcnNlSW50KFwiXCIgKyBoc2xSZ2JNYXRjaGVkWzJdLCAxMCksXG4gICAgICBibHVlOiBwYXJzZUludChcIlwiICsgaHNsUmdiTWF0Y2hlZFszXSwgMTApXG4gICAgfTtcbiAgfVxuXG4gIHZhciBoc2xhTWF0Y2hlZCA9IGhzbGFSZWdleC5leGVjKG5vcm1hbGl6ZWRDb2xvcik7XG5cbiAgaWYgKGhzbGFNYXRjaGVkKSB7XG4gICAgdmFyIF9odWUgPSBwYXJzZUludChcIlwiICsgaHNsYU1hdGNoZWRbMV0sIDEwKTtcblxuICAgIHZhciBfc2F0dXJhdGlvbiA9IHBhcnNlSW50KFwiXCIgKyBoc2xhTWF0Y2hlZFsyXSwgMTApIC8gMTAwO1xuXG4gICAgdmFyIF9saWdodG5lc3MgPSBwYXJzZUludChcIlwiICsgaHNsYU1hdGNoZWRbM10sIDEwKSAvIDEwMDtcblxuICAgIHZhciBfcmdiQ29sb3JTdHJpbmcgPSBcInJnYihcIiArIGhzbFRvUmdiKF9odWUsIF9zYXR1cmF0aW9uLCBfbGlnaHRuZXNzKSArIFwiKVwiO1xuXG4gICAgdmFyIF9oc2xSZ2JNYXRjaGVkID0gcmdiUmVnZXguZXhlYyhfcmdiQ29sb3JTdHJpbmcpO1xuXG4gICAgaWYgKCFfaHNsUmdiTWF0Y2hlZCkge1xuICAgICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNCwgbm9ybWFsaXplZENvbG9yLCBfcmdiQ29sb3JTdHJpbmcpO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICByZWQ6IHBhcnNlSW50KFwiXCIgKyBfaHNsUmdiTWF0Y2hlZFsxXSwgMTApLFxuICAgICAgZ3JlZW46IHBhcnNlSW50KFwiXCIgKyBfaHNsUmdiTWF0Y2hlZFsyXSwgMTApLFxuICAgICAgYmx1ZTogcGFyc2VJbnQoXCJcIiArIF9oc2xSZ2JNYXRjaGVkWzNdLCAxMCksXG4gICAgICBhbHBoYTogcGFyc2VGbG9hdChcIlwiICsgaHNsYU1hdGNoZWRbNF0pXG4gICAgfTtcbiAgfVxuXG4gIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDUpO1xufVxuXG5mdW5jdGlvbiByZ2JUb0hzbChjb2xvcikge1xuICAvLyBtYWtlIHN1cmUgcmdiIGFyZSBjb250YWluZWQgaW4gYSBzZXQgb2YgWzAsIDI1NV1cbiAgdmFyIHJlZCA9IGNvbG9yLnJlZCAvIDI1NTtcbiAgdmFyIGdyZWVuID0gY29sb3IuZ3JlZW4gLyAyNTU7XG4gIHZhciBibHVlID0gY29sb3IuYmx1ZSAvIDI1NTtcbiAgdmFyIG1heCA9IE1hdGgubWF4KHJlZCwgZ3JlZW4sIGJsdWUpO1xuICB2YXIgbWluID0gTWF0aC5taW4ocmVkLCBncmVlbiwgYmx1ZSk7XG4gIHZhciBsaWdodG5lc3MgPSAobWF4ICsgbWluKSAvIDI7XG5cbiAgaWYgKG1heCA9PT0gbWluKSB7XG4gICAgLy8gYWNocm9tYXRpY1xuICAgIGlmIChjb2xvci5hbHBoYSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBodWU6IDAsXG4gICAgICAgIHNhdHVyYXRpb246IDAsXG4gICAgICAgIGxpZ2h0bmVzczogbGlnaHRuZXNzLFxuICAgICAgICBhbHBoYTogY29sb3IuYWxwaGFcbiAgICAgIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGh1ZTogMCxcbiAgICAgICAgc2F0dXJhdGlvbjogMCxcbiAgICAgICAgbGlnaHRuZXNzOiBsaWdodG5lc3NcbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIGh1ZTtcbiAgdmFyIGRlbHRhID0gbWF4IC0gbWluO1xuICB2YXIgc2F0dXJhdGlvbiA9IGxpZ2h0bmVzcyA+IDAuNSA/IGRlbHRhIC8gKDIgLSBtYXggLSBtaW4pIDogZGVsdGEgLyAobWF4ICsgbWluKTtcblxuICBzd2l0Y2ggKG1heCkge1xuICAgIGNhc2UgcmVkOlxuICAgICAgaHVlID0gKGdyZWVuIC0gYmx1ZSkgLyBkZWx0YSArIChncmVlbiA8IGJsdWUgPyA2IDogMCk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgZ3JlZW46XG4gICAgICBodWUgPSAoYmx1ZSAtIHJlZCkgLyBkZWx0YSArIDI7XG4gICAgICBicmVhaztcblxuICAgIGRlZmF1bHQ6XG4gICAgICAvLyBibHVlIGNhc2VcbiAgICAgIGh1ZSA9IChyZWQgLSBncmVlbikgLyBkZWx0YSArIDQ7XG4gICAgICBicmVhaztcbiAgfVxuXG4gIGh1ZSAqPSA2MDtcblxuICBpZiAoY29sb3IuYWxwaGEgIT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiB7XG4gICAgICBodWU6IGh1ZSxcbiAgICAgIHNhdHVyYXRpb246IHNhdHVyYXRpb24sXG4gICAgICBsaWdodG5lc3M6IGxpZ2h0bmVzcyxcbiAgICAgIGFscGhhOiBjb2xvci5hbHBoYVxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGh1ZTogaHVlLFxuICAgIHNhdHVyYXRpb246IHNhdHVyYXRpb24sXG4gICAgbGlnaHRuZXNzOiBsaWdodG5lc3NcbiAgfTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGFuIEhzbENvbG9yIG9yIEhzbGFDb2xvciBvYmplY3QuIFRoaXMgdXRpbGl0eSBmdW5jdGlvbiBpcyBvbmx5IHVzZWZ1bFxuICogaWYgd2FudCB0byBleHRyYWN0IGEgY29sb3IgY29tcG9uZW50LiBXaXRoIHRoZSBjb2xvciB1dGlsIGB0b0NvbG9yU3RyaW5nYCB5b3VcbiAqIGNhbiBjb252ZXJ0IGEgSHNsQ29sb3Igb3IgSHNsYUNvbG9yIG9iamVjdCBiYWNrIHRvIGEgc3RyaW5nLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBBc3NpZ25zIGB7IGh1ZTogMCwgc2F0dXJhdGlvbjogMSwgbGlnaHRuZXNzOiAwLjUgfWAgdG8gY29sb3IxXG4gKiBjb25zdCBjb2xvcjEgPSBwYXJzZVRvSHNsKCdyZ2IoMjU1LCAwLCAwKScpO1xuICogLy8gQXNzaWducyBgeyBodWU6IDEyOCwgc2F0dXJhdGlvbjogMSwgbGlnaHRuZXNzOiAwLjUsIGFscGhhOiAwLjc1IH1gIHRvIGNvbG9yMlxuICogY29uc3QgY29sb3IyID0gcGFyc2VUb0hzbCgnaHNsYSgxMjgsIDEwMCUsIDUwJSwgMC43NSknKTtcbiAqL1xuZnVuY3Rpb24gcGFyc2VUb0hzbChjb2xvcikge1xuICAvLyBOb3RlOiBBdCBhIGxhdGVyIHN0YWdlIHdlIGNhbiBvcHRpbWl6ZSB0aGlzIGZ1bmN0aW9uIGFzIHJpZ2h0IG5vdyBhIGhzbFxuICAvLyBjb2xvciB3b3VsZCBiZSBwYXJzZWQgY29udmVydGVkIHRvIHJnYiB2YWx1ZXMgYW5kIGNvbnZlcnRlZCBiYWNrIHRvIGhzbC5cbiAgcmV0dXJuIHJnYlRvSHNsKHBhcnNlVG9SZ2IoY29sb3IpKTtcbn1cblxuLyoqXG4gKiBSZWR1Y2VzIGhleCB2YWx1ZXMgaWYgcG9zc2libGUgZS5nLiAjZmY4ODY2IHRvICNmODZcbiAqIEBwcml2YXRlXG4gKi9cbnZhciByZWR1Y2VIZXhWYWx1ZSA9IGZ1bmN0aW9uIHJlZHVjZUhleFZhbHVlKHZhbHVlKSB7XG4gIGlmICh2YWx1ZS5sZW5ndGggPT09IDcgJiYgdmFsdWVbMV0gPT09IHZhbHVlWzJdICYmIHZhbHVlWzNdID09PSB2YWx1ZVs0XSAmJiB2YWx1ZVs1XSA9PT0gdmFsdWVbNl0pIHtcbiAgICByZXR1cm4gXCIjXCIgKyB2YWx1ZVsxXSArIHZhbHVlWzNdICsgdmFsdWVbNV07XG4gIH1cblxuICByZXR1cm4gdmFsdWU7XG59O1xuXG5mdW5jdGlvbiBudW1iZXJUb0hleCh2YWx1ZSkge1xuICB2YXIgaGV4ID0gdmFsdWUudG9TdHJpbmcoMTYpO1xuICByZXR1cm4gaGV4Lmxlbmd0aCA9PT0gMSA/IFwiMFwiICsgaGV4IDogaGV4O1xufVxuXG5mdW5jdGlvbiBjb2xvclRvSGV4KGNvbG9yKSB7XG4gIHJldHVybiBudW1iZXJUb0hleChNYXRoLnJvdW5kKGNvbG9yICogMjU1KSk7XG59XG5cbmZ1bmN0aW9uIGNvbnZlcnRUb0hleChyZWQsIGdyZWVuLCBibHVlKSB7XG4gIHJldHVybiByZWR1Y2VIZXhWYWx1ZShcIiNcIiArIGNvbG9yVG9IZXgocmVkKSArIGNvbG9yVG9IZXgoZ3JlZW4pICsgY29sb3JUb0hleChibHVlKSk7XG59XG5cbmZ1bmN0aW9uIGhzbFRvSGV4KGh1ZSwgc2F0dXJhdGlvbiwgbGlnaHRuZXNzKSB7XG4gIHJldHVybiBoc2xUb1JnYihodWUsIHNhdHVyYXRpb24sIGxpZ2h0bmVzcywgY29udmVydFRvSGV4KTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHZhbHVlIGZvciB0aGUgY29sb3IuIFRoZSByZXR1cm5lZCByZXN1bHQgaXMgdGhlIHNtYWxsZXN0IHBvc3NpYmxlIGhleCBub3RhdGlvbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBoc2woMzU5LCAwLjc1LCAwLjQpLFxuICogICBiYWNrZ3JvdW5kOiBoc2woeyBodWU6IDM2MCwgc2F0dXJhdGlvbjogMC43NSwgbGlnaHRuZXNzOiAwLjQgfSksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7aHNsKDM1OSwgMC43NSwgMC40KX07XG4gKiAgIGJhY2tncm91bmQ6ICR7aHNsKHsgaHVlOiAzNjAsIHNhdHVyYXRpb246IDAuNzUsIGxpZ2h0bmVzczogMC40IH0pfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiI2IzMTkxY1wiO1xuICogICBiYWNrZ3JvdW5kOiBcIiNiMzE5MWNcIjtcbiAqIH1cbiAqL1xuZnVuY3Rpb24gaHNsKHZhbHVlLCBzYXR1cmF0aW9uLCBsaWdodG5lc3MpIHtcbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHNhdHVyYXRpb24gPT09ICdudW1iZXInICYmIHR5cGVvZiBsaWdodG5lc3MgPT09ICdudW1iZXInKSB7XG4gICAgcmV0dXJuIGhzbFRvSGV4KHZhbHVlLCBzYXR1cmF0aW9uLCBsaWdodG5lc3MpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgc2F0dXJhdGlvbiA9PT0gdW5kZWZpbmVkICYmIGxpZ2h0bmVzcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIGhzbFRvSGV4KHZhbHVlLmh1ZSwgdmFsdWUuc2F0dXJhdGlvbiwgdmFsdWUubGlnaHRuZXNzKTtcbiAgfVxuXG4gIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDEpO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBzdHJpbmcgdmFsdWUgZm9yIHRoZSBjb2xvci4gVGhlIHJldHVybmVkIHJlc3VsdCBpcyB0aGUgc21hbGxlc3QgcG9zc2libGUgcmdiYSBvciBoZXggbm90YXRpb24uXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgYmFja2dyb3VuZDogaHNsYSgzNTksIDAuNzUsIDAuNCwgMC43KSxcbiAqICAgYmFja2dyb3VuZDogaHNsYSh7IGh1ZTogMzYwLCBzYXR1cmF0aW9uOiAwLjc1LCBsaWdodG5lc3M6IDAuNCwgYWxwaGE6IDAsNyB9KSxcbiAqICAgYmFja2dyb3VuZDogaHNsYSgzNTksIDAuNzUsIDAuNCwgMSksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7aHNsYSgzNTksIDAuNzUsIDAuNCwgMC43KX07XG4gKiAgIGJhY2tncm91bmQ6ICR7aHNsYSh7IGh1ZTogMzYwLCBzYXR1cmF0aW9uOiAwLjc1LCBsaWdodG5lc3M6IDAuNCwgYWxwaGE6IDAsNyB9KX07XG4gKiAgIGJhY2tncm91bmQ6ICR7aHNsYSgzNTksIDAuNzUsIDAuNCwgMSl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqXG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDE3OSwyNSwyOCwwLjcpXCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgxNzksMjUsMjgsMC43KVwiO1xuICogICBiYWNrZ3JvdW5kOiBcIiNiMzE5MWNcIjtcbiAqIH1cbiAqL1xuZnVuY3Rpb24gaHNsYSh2YWx1ZSwgc2F0dXJhdGlvbiwgbGlnaHRuZXNzLCBhbHBoYSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygc2F0dXJhdGlvbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGxpZ2h0bmVzcyA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGFscGhhID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiBhbHBoYSA+PSAxID8gaHNsVG9IZXgodmFsdWUsIHNhdHVyYXRpb24sIGxpZ2h0bmVzcykgOiBcInJnYmEoXCIgKyBoc2xUb1JnYih2YWx1ZSwgc2F0dXJhdGlvbiwgbGlnaHRuZXNzKSArIFwiLFwiICsgYWxwaGEgKyBcIilcIjtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHNhdHVyYXRpb24gPT09IHVuZGVmaW5lZCAmJiBsaWdodG5lc3MgPT09IHVuZGVmaW5lZCAmJiBhbHBoYSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHZhbHVlLmFscGhhID49IDEgPyBoc2xUb0hleCh2YWx1ZS5odWUsIHZhbHVlLnNhdHVyYXRpb24sIHZhbHVlLmxpZ2h0bmVzcykgOiBcInJnYmEoXCIgKyBoc2xUb1JnYih2YWx1ZS5odWUsIHZhbHVlLnNhdHVyYXRpb24sIHZhbHVlLmxpZ2h0bmVzcykgKyBcIixcIiArIHZhbHVlLmFscGhhICsgXCIpXCI7XG4gIH1cblxuICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcigyKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHZhbHVlIGZvciB0aGUgY29sb3IuIFRoZSByZXR1cm5lZCByZXN1bHQgaXMgdGhlIHNtYWxsZXN0IHBvc3NpYmxlIGhleCBub3RhdGlvbi5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiByZ2IoMjU1LCAyMDUsIDEwMCksXG4gKiAgIGJhY2tncm91bmQ6IHJnYih7IHJlZDogMjU1LCBncmVlbjogMjA1LCBibHVlOiAxMDAgfSksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7cmdiKDI1NSwgMjA1LCAxMDApfTtcbiAqICAgYmFja2dyb3VuZDogJHtyZ2IoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwIH0pfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiI2ZmY2Q2NFwiO1xuICogICBiYWNrZ3JvdW5kOiBcIiNmZmNkNjRcIjtcbiAqIH1cbiAqL1xuZnVuY3Rpb24gcmdiKHZhbHVlLCBncmVlbiwgYmx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgZ3JlZW4gPT09ICdudW1iZXInICYmIHR5cGVvZiBibHVlID09PSAnbnVtYmVyJykge1xuICAgIHJldHVybiByZWR1Y2VIZXhWYWx1ZShcIiNcIiArIG51bWJlclRvSGV4KHZhbHVlKSArIG51bWJlclRvSGV4KGdyZWVuKSArIG51bWJlclRvSGV4KGJsdWUpKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIGdyZWVuID09PSB1bmRlZmluZWQgJiYgYmx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHJlZHVjZUhleFZhbHVlKFwiI1wiICsgbnVtYmVyVG9IZXgodmFsdWUucmVkKSArIG51bWJlclRvSGV4KHZhbHVlLmdyZWVuKSArIG51bWJlclRvSGV4KHZhbHVlLmJsdWUpKTtcbiAgfVxuXG4gIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDYpO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBzdHJpbmcgdmFsdWUgZm9yIHRoZSBjb2xvci4gVGhlIHJldHVybmVkIHJlc3VsdCBpcyB0aGUgc21hbGxlc3QgcG9zc2libGUgcmdiYSBvciBoZXggbm90YXRpb24uXG4gKlxuICogQ2FuIGFsc28gYmUgdXNlZCB0byBmYWRlIGEgY29sb3IgYnkgcGFzc2luZyBhIGhleCB2YWx1ZSBvciBuYW1lZCBDU1MgY29sb3IgYWxvbmcgd2l0aCBhbiBhbHBoYSB2YWx1ZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjA1LCAxMDAsIDAuNyksXG4gKiAgIGJhY2tncm91bmQ6IHJnYmEoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwLCBhbHBoYTogMC43IH0pLFxuICogICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjA1LCAxMDAsIDEpLFxuICogICBiYWNrZ3JvdW5kOiByZ2JhKCcjZmZmZmZmJywgMC40KSxcbiAqICAgYmFja2dyb3VuZDogcmdiYSgnYmxhY2snLCAwLjcpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke3JnYmEoMjU1LCAyMDUsIDEwMCwgMC43KX07XG4gKiAgIGJhY2tncm91bmQ6ICR7cmdiYSh7IHJlZDogMjU1LCBncmVlbjogMjA1LCBibHVlOiAxMDAsIGFscGhhOiAwLjcgfSl9O1xuICogICBiYWNrZ3JvdW5kOiAke3JnYmEoMjU1LCAyMDUsIDEwMCwgMSl9O1xuICogICBiYWNrZ3JvdW5kOiAke3JnYmEoJyNmZmZmZmYnLCAwLjQpfTtcbiAqICAgYmFja2dyb3VuZDogJHtyZ2JhKCdibGFjaycsIDAuNyl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqXG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDI1NSwyMDUsMTAwLDAuNylcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDI1NSwyMDUsMTAwLDAuNylcIjtcbiAqICAgYmFja2dyb3VuZDogXCIjZmZjZDY0XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgyNTUsMjU1LDI1NSwwLjQpXCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgwLDAsMCwwLjcpXCI7XG4gKiB9XG4gKi9cbmZ1bmN0aW9uIHJnYmEoZmlyc3RWYWx1ZSwgc2Vjb25kVmFsdWUsIHRoaXJkVmFsdWUsIGZvdXJ0aFZhbHVlKSB7XG4gIGlmICh0eXBlb2YgZmlyc3RWYWx1ZSA9PT0gJ3N0cmluZycgJiYgdHlwZW9mIHNlY29uZFZhbHVlID09PSAnbnVtYmVyJykge1xuICAgIHZhciByZ2JWYWx1ZSA9IHBhcnNlVG9SZ2IoZmlyc3RWYWx1ZSk7XG4gICAgcmV0dXJuIFwicmdiYShcIiArIHJnYlZhbHVlLnJlZCArIFwiLFwiICsgcmdiVmFsdWUuZ3JlZW4gKyBcIixcIiArIHJnYlZhbHVlLmJsdWUgKyBcIixcIiArIHNlY29uZFZhbHVlICsgXCIpXCI7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGZpcnN0VmFsdWUgPT09ICdudW1iZXInICYmIHR5cGVvZiBzZWNvbmRWYWx1ZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHRoaXJkVmFsdWUgPT09ICdudW1iZXInICYmIHR5cGVvZiBmb3VydGhWYWx1ZSA9PT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gZm91cnRoVmFsdWUgPj0gMSA/IHJnYihmaXJzdFZhbHVlLCBzZWNvbmRWYWx1ZSwgdGhpcmRWYWx1ZSkgOiBcInJnYmEoXCIgKyBmaXJzdFZhbHVlICsgXCIsXCIgKyBzZWNvbmRWYWx1ZSArIFwiLFwiICsgdGhpcmRWYWx1ZSArIFwiLFwiICsgZm91cnRoVmFsdWUgKyBcIilcIjtcbiAgfSBlbHNlIGlmICh0eXBlb2YgZmlyc3RWYWx1ZSA9PT0gJ29iamVjdCcgJiYgc2Vjb25kVmFsdWUgPT09IHVuZGVmaW5lZCAmJiB0aGlyZFZhbHVlID09PSB1bmRlZmluZWQgJiYgZm91cnRoVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHJldHVybiBmaXJzdFZhbHVlLmFscGhhID49IDEgPyByZ2IoZmlyc3RWYWx1ZS5yZWQsIGZpcnN0VmFsdWUuZ3JlZW4sIGZpcnN0VmFsdWUuYmx1ZSkgOiBcInJnYmEoXCIgKyBmaXJzdFZhbHVlLnJlZCArIFwiLFwiICsgZmlyc3RWYWx1ZS5ncmVlbiArIFwiLFwiICsgZmlyc3RWYWx1ZS5ibHVlICsgXCIsXCIgKyBmaXJzdFZhbHVlLmFscGhhICsgXCIpXCI7XG4gIH1cblxuICB0aHJvdyBuZXcgUG9saXNoZWRFcnJvcig3KTtcbn1cblxudmFyIGlzUmdiID0gZnVuY3Rpb24gaXNSZ2IoY29sb3IpIHtcbiAgcmV0dXJuIHR5cGVvZiBjb2xvci5yZWQgPT09ICdudW1iZXInICYmIHR5cGVvZiBjb2xvci5ncmVlbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmJsdWUgPT09ICdudW1iZXInICYmICh0eXBlb2YgY29sb3IuYWxwaGEgIT09ICdudW1iZXInIHx8IHR5cGVvZiBjb2xvci5hbHBoYSA9PT0gJ3VuZGVmaW5lZCcpO1xufTtcblxudmFyIGlzUmdiYSA9IGZ1bmN0aW9uIGlzUmdiYShjb2xvcikge1xuICByZXR1cm4gdHlwZW9mIGNvbG9yLnJlZCA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmdyZWVuID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgY29sb3IuYmx1ZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmFscGhhID09PSAnbnVtYmVyJztcbn07XG5cbnZhciBpc0hzbCA9IGZ1bmN0aW9uIGlzSHNsKGNvbG9yKSB7XG4gIHJldHVybiB0eXBlb2YgY29sb3IuaHVlID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgY29sb3Iuc2F0dXJhdGlvbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmxpZ2h0bmVzcyA9PT0gJ251bWJlcicgJiYgKHR5cGVvZiBjb2xvci5hbHBoYSAhPT0gJ251bWJlcicgfHwgdHlwZW9mIGNvbG9yLmFscGhhID09PSAndW5kZWZpbmVkJyk7XG59O1xuXG52YXIgaXNIc2xhID0gZnVuY3Rpb24gaXNIc2xhKGNvbG9yKSB7XG4gIHJldHVybiB0eXBlb2YgY29sb3IuaHVlID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgY29sb3Iuc2F0dXJhdGlvbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmxpZ2h0bmVzcyA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmFscGhhID09PSAnbnVtYmVyJztcbn07XG4vKipcbiAqIENvbnZlcnRzIGEgUmdiQ29sb3IsIFJnYmFDb2xvciwgSHNsQ29sb3Igb3IgSHNsYUNvbG9yIG9iamVjdCB0byBhIGNvbG9yIHN0cmluZy5cbiAqIFRoaXMgdXRpbCBpcyB1c2VmdWwgaW4gY2FzZSB5b3Ugb25seSBrbm93IG9uIHJ1bnRpbWUgd2hpY2ggY29sb3Igb2JqZWN0IGlzXG4gKiB1c2VkLiBPdGhlcndpc2Ugd2UgcmVjb21tZW5kIHRvIHJlbHkgb24gYHJnYmAsIGByZ2JhYCwgYGhzbGAgb3IgYGhzbGFgLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IHRvQ29sb3JTdHJpbmcoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwIH0pLFxuICogICBiYWNrZ3JvdW5kOiB0b0NvbG9yU3RyaW5nKHsgcmVkOiAyNTUsIGdyZWVuOiAyMDUsIGJsdWU6IDEwMCwgYWxwaGE6IDAuNzIgfSksXG4gKiAgIGJhY2tncm91bmQ6IHRvQ29sb3JTdHJpbmcoeyBodWU6IDI0MCwgc2F0dXJhdGlvbjogMSwgbGlnaHRuZXNzOiAwLjUgfSksXG4gKiAgIGJhY2tncm91bmQ6IHRvQ29sb3JTdHJpbmcoeyBodWU6IDM2MCwgc2F0dXJhdGlvbjogMC43NSwgbGlnaHRuZXNzOiAwLjQsIGFscGhhOiAwLjcyIH0pLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke3RvQ29sb3JTdHJpbmcoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwIH0pfTtcbiAqICAgYmFja2dyb3VuZDogJHt0b0NvbG9yU3RyaW5nKHsgcmVkOiAyNTUsIGdyZWVuOiAyMDUsIGJsdWU6IDEwMCwgYWxwaGE6IDAuNzIgfSl9O1xuICogICBiYWNrZ3JvdW5kOiAke3RvQ29sb3JTdHJpbmcoeyBodWU6IDI0MCwgc2F0dXJhdGlvbjogMSwgbGlnaHRuZXNzOiAwLjUgfSl9O1xuICogICBiYWNrZ3JvdW5kOiAke3RvQ29sb3JTdHJpbmcoeyBodWU6IDM2MCwgc2F0dXJhdGlvbjogMC43NSwgbGlnaHRuZXNzOiAwLjQsIGFscGhhOiAwLjcyIH0pfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjZmZjZDY0XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgyNTUsMjA1LDEwMCwwLjcyKVwiO1xuICogICBiYWNrZ3JvdW5kOiBcIiMwMGZcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDE3OSwyNSwyNSwwLjcyKVwiO1xuICogfVxuICovXG5cblxuZnVuY3Rpb24gdG9Db2xvclN0cmluZyhjb2xvcikge1xuICBpZiAodHlwZW9mIGNvbG9yICE9PSAnb2JqZWN0JykgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoOCk7XG4gIGlmIChpc1JnYmEoY29sb3IpKSByZXR1cm4gcmdiYShjb2xvcik7XG4gIGlmIChpc1JnYihjb2xvcikpIHJldHVybiByZ2IoY29sb3IpO1xuICBpZiAoaXNIc2xhKGNvbG9yKSkgcmV0dXJuIGhzbGEoY29sb3IpO1xuICBpZiAoaXNIc2woY29sb3IpKSByZXR1cm4gaHNsKGNvbG9yKTtcbiAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoOCk7XG59XG5cbi8vIFR5cGUgZGVmaW5pdGlvbnMgdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ2NhbnRpL2Zsb3ctc3RhdGljLWxhbmQvYmxvYi9tYXN0ZXIvc3JjL0Z1bi5qc1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZWRlY2xhcmVcbmZ1bmN0aW9uIGN1cnJpZWQoZiwgbGVuZ3RoLCBhY2MpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZuKCkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItcmVzdC1wYXJhbXNcbiAgICB2YXIgY29tYmluZWQgPSBhY2MuY29uY2F0KEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpO1xuICAgIHJldHVybiBjb21iaW5lZC5sZW5ndGggPj0gbGVuZ3RoID8gZi5hcHBseSh0aGlzLCBjb21iaW5lZCkgOiBjdXJyaWVkKGYsIGxlbmd0aCwgY29tYmluZWQpO1xuICB9O1xufSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVkZWNsYXJlXG5cblxuZnVuY3Rpb24gY3VycnkoZikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXJlZGVjbGFyZVxuICByZXR1cm4gY3VycmllZChmLCBmLmxlbmd0aCwgW10pO1xufVxuXG4vKipcbiAqIENoYW5nZXMgdGhlIGh1ZSBvZiB0aGUgY29sb3IuIEh1ZSBpcyBhIG51bWJlciBiZXR3ZWVuIDAgdG8gMzYwLiBUaGUgZmlyc3RcbiAqIGFyZ3VtZW50IGZvciBhZGp1c3RIdWUgaXMgdGhlIGFtb3VudCBvZiBkZWdyZWVzIHRoZSBjb2xvciBpcyByb3RhdGVkIGFyb3VuZFxuICogdGhlIGNvbG9yIHdoZWVsLCBhbHdheXMgcHJvZHVjaW5nIGEgcG9zaXRpdmUgaHVlIHZhbHVlLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IGFkanVzdEh1ZSgxODAsICcjNDQ4JyksXG4gKiAgIGJhY2tncm91bmQ6IGFkanVzdEh1ZSgnMTgwJywgJ3JnYmEoMTAxLDEwMCwyMDUsMC43KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke2FkanVzdEh1ZSgxODAsICcjNDQ4Jyl9O1xuICogICBiYWNrZ3JvdW5kOiAke2FkanVzdEh1ZSgnMTgwJywgJ3JnYmEoMTAxLDEwMCwyMDUsMC43KScpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjODg4ODQ0XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgxMzYsMTM2LDY4LDAuNylcIjtcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBhZGp1c3RIdWUoZGVncmVlLCBjb2xvcikge1xuICBpZiAoY29sb3IgPT09ICd0cmFuc3BhcmVudCcpIHJldHVybiBjb2xvcjtcbiAgdmFyIGhzbENvbG9yID0gcGFyc2VUb0hzbChjb2xvcik7XG4gIHJldHVybiB0b0NvbG9yU3RyaW5nKF9leHRlbmRzKHt9LCBoc2xDb2xvciwge1xuICAgIGh1ZTogaHNsQ29sb3IuaHVlICsgcGFyc2VGbG9hdChkZWdyZWUpXG4gIH0pKTtcbn0gLy8gcHJldHRpZXItaWdub3JlXG5cblxudmFyIGN1cnJpZWRBZGp1c3RIdWUgPSAvKiNfX1BVUkVfXyovY3Vycnlcbi8qIDo6PG51bWJlciB8IHN0cmluZywgc3RyaW5nLCBzdHJpbmc+ICovXG4oYWRqdXN0SHVlKTtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjb21wbGVtZW50IG9mIHRoZSBwcm92aWRlZCBjb2xvci4gVGhpcyBpcyBpZGVudGljYWwgdG8gYWRqdXN0SHVlKDE4MCwgPGNvbG9yPikuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgYmFja2dyb3VuZDogY29tcGxlbWVudCgnIzQ0OCcpLFxuICogICBiYWNrZ3JvdW5kOiBjb21wbGVtZW50KCdyZ2JhKDIwNCwyMDUsMTAwLDAuNyknKSxcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgYmFja2dyb3VuZDogJHtjb21wbGVtZW50KCcjNDQ4Jyl9O1xuICogICBiYWNrZ3JvdW5kOiAke2NvbXBsZW1lbnQoJ3JnYmEoMjA0LDIwNSwxMDAsMC43KScpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjODg0XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgxNTMsMTUzLDE1MywwLjcpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gY29tcGxlbWVudChjb2xvcikge1xuICBpZiAoY29sb3IgPT09ICd0cmFuc3BhcmVudCcpIHJldHVybiBjb2xvcjtcbiAgdmFyIGhzbENvbG9yID0gcGFyc2VUb0hzbChjb2xvcik7XG4gIHJldHVybiB0b0NvbG9yU3RyaW5nKF9leHRlbmRzKHt9LCBoc2xDb2xvciwge1xuICAgIGh1ZTogKGhzbENvbG9yLmh1ZSArIDE4MCkgJSAzNjBcbiAgfSkpO1xufVxuXG5mdW5jdGlvbiBndWFyZChsb3dlckJvdW5kYXJ5LCB1cHBlckJvdW5kYXJ5LCB2YWx1ZSkge1xuICByZXR1cm4gTWF0aC5tYXgobG93ZXJCb3VuZGFyeSwgTWF0aC5taW4odXBwZXJCb3VuZGFyeSwgdmFsdWUpKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHZhbHVlIGZvciB0aGUgZGFya2VuZWQgY29sb3IuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgYmFja2dyb3VuZDogZGFya2VuKDAuMiwgJyNGRkNENjQnKSxcbiAqICAgYmFja2dyb3VuZDogZGFya2VuKCcwLjInLCAncmdiYSgyNTUsMjA1LDEwMCwwLjcpJyksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7ZGFya2VuKDAuMiwgJyNGRkNENjQnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7ZGFya2VuKCcwLjInLCAncmdiYSgyNTUsMjA1LDEwMCwwLjcpJyl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqXG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjZmZiZDMxXCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgyNTUsMTg5LDQ5LDAuNylcIjtcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBkYXJrZW4oYW1vdW50LCBjb2xvcikge1xuICBpZiAoY29sb3IgPT09ICd0cmFuc3BhcmVudCcpIHJldHVybiBjb2xvcjtcbiAgdmFyIGhzbENvbG9yID0gcGFyc2VUb0hzbChjb2xvcik7XG4gIHJldHVybiB0b0NvbG9yU3RyaW5nKF9leHRlbmRzKHt9LCBoc2xDb2xvciwge1xuICAgIGxpZ2h0bmVzczogZ3VhcmQoMCwgMSwgaHNsQ29sb3IubGlnaHRuZXNzIC0gcGFyc2VGbG9hdChhbW91bnQpKVxuICB9KSk7XG59IC8vIHByZXR0aWVyLWlnbm9yZVxuXG5cbnZhciBjdXJyaWVkRGFya2VuID0gLyojX19QVVJFX18qL2N1cnJ5XG4vKiA6OjxudW1iZXIgfCBzdHJpbmcsIHN0cmluZywgc3RyaW5nPiAqL1xuKGRhcmtlbik7XG5cbi8qKlxuICogRGVjcmVhc2VzIHRoZSBpbnRlbnNpdHkgb2YgYSBjb2xvci4gSXRzIHJhbmdlIGlzIGJldHdlZW4gMCB0byAxLiBUaGUgZmlyc3RcbiAqIGFyZ3VtZW50IG9mIHRoZSBkZXNhdHVyYXRlIGZ1bmN0aW9uIGlzIHRoZSBhbW91bnQgYnkgaG93IG11Y2ggdGhlIGNvbG9yXG4gKiBpbnRlbnNpdHkgc2hvdWxkIGJlIGRlY3JlYXNlZC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBkZXNhdHVyYXRlKDAuMiwgJyNDQ0NENjQnKSxcbiAqICAgYmFja2dyb3VuZDogZGVzYXR1cmF0ZSgnMC4yJywgJ3JnYmEoMjA0LDIwNSwxMDAsMC43KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke2Rlc2F0dXJhdGUoMC4yLCAnI0NDQ0Q2NCcpfTtcbiAqICAgYmFja2dyb3VuZDogJHtkZXNhdHVyYXRlKCcwLjInLCAncmdiYSgyMDQsMjA1LDEwMCwwLjcpJyl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqIGVsZW1lbnQge1xuICogICBiYWNrZ3JvdW5kOiBcIiNiOGI5NzlcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDE4NCwxODUsMTIxLDAuNylcIjtcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBkZXNhdHVyYXRlKGFtb3VudCwgY29sb3IpIHtcbiAgaWYgKGNvbG9yID09PSAndHJhbnNwYXJlbnQnKSByZXR1cm4gY29sb3I7XG4gIHZhciBoc2xDb2xvciA9IHBhcnNlVG9Ic2woY29sb3IpO1xuICByZXR1cm4gdG9Db2xvclN0cmluZyhfZXh0ZW5kcyh7fSwgaHNsQ29sb3IsIHtcbiAgICBzYXR1cmF0aW9uOiBndWFyZCgwLCAxLCBoc2xDb2xvci5zYXR1cmF0aW9uIC0gcGFyc2VGbG9hdChhbW91bnQpKVxuICB9KSk7XG59IC8vIHByZXR0aWVyLWlnbm9yZVxuXG5cbnZhciBjdXJyaWVkRGVzYXR1cmF0ZSA9IC8qI19fUFVSRV9fKi9jdXJyeVxuLyogOjo8bnVtYmVyIHwgc3RyaW5nLCBzdHJpbmcsIHN0cmluZz4gKi9cbihkZXNhdHVyYXRlKTtcblxuLyoqXG4gKiBSZXR1cm5zIGEgbnVtYmVyIChmbG9hdCkgcmVwcmVzZW50aW5nIHRoZSBsdW1pbmFuY2Ugb2YgYSBjb2xvci5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBnZXRMdW1pbmFuY2UoJyNDQ0NENjQnKSA+PSBnZXRMdW1pbmFuY2UoJyMwMDAwZmYnKSA/ICcjQ0NDRDY0JyA6ICcjMDAwMGZmJyxcbiAqICAgYmFja2dyb3VuZDogZ2V0THVtaW5hbmNlKCdyZ2JhKDU4LCAxMzMsIDI1NSwgMSknKSA+PSBnZXRMdW1pbmFuY2UoJ3JnYmEoMjU1LCA1NywgMTQ5LCAxKScpID9cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAncmdiYSg1OCwgMTMzLCAyNTUsIDEpJyA6XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JnYmEoMjU1LCA1NywgMTQ5LCAxKScsXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7Z2V0THVtaW5hbmNlKCcjQ0NDRDY0JykgPj0gZ2V0THVtaW5hbmNlKCcjMDAwMGZmJykgPyAnI0NDQ0Q2NCcgOiAnIzAwMDBmZid9O1xuICogICBiYWNrZ3JvdW5kOiAke2dldEx1bWluYW5jZSgncmdiYSg1OCwgMTMzLCAyNTUsIDEpJykgPj0gZ2V0THVtaW5hbmNlKCdyZ2JhKDI1NSwgNTcsIDE0OSwgMSknKSA/XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JnYmEoNTgsIDEzMywgMjU1LCAxKScgOlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICdyZ2JhKDI1NSwgNTcsIDE0OSwgMSknfTtcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZGl2IHtcbiAqICAgYmFja2dyb3VuZDogXCIjQ0NDRDY0XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSg1OCwgMTMzLCAyNTUsIDEpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gZ2V0THVtaW5hbmNlKGNvbG9yKSB7XG4gIGlmIChjb2xvciA9PT0gJ3RyYW5zcGFyZW50JykgcmV0dXJuIDA7XG4gIHZhciByZ2JDb2xvciA9IHBhcnNlVG9SZ2IoY29sb3IpO1xuXG4gIHZhciBfT2JqZWN0JGtleXMkbWFwID0gT2JqZWN0LmtleXMocmdiQ29sb3IpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGNoYW5uZWwgPSByZ2JDb2xvcltrZXldIC8gMjU1O1xuICAgIHJldHVybiBjaGFubmVsIDw9IDAuMDM5MjggPyBjaGFubmVsIC8gMTIuOTIgOiBNYXRoLnBvdygoY2hhbm5lbCArIDAuMDU1KSAvIDEuMDU1LCAyLjQpO1xuICB9KSxcbiAgICAgIHIgPSBfT2JqZWN0JGtleXMkbWFwWzBdLFxuICAgICAgZyA9IF9PYmplY3Qka2V5cyRtYXBbMV0sXG4gICAgICBiID0gX09iamVjdCRrZXlzJG1hcFsyXTtcblxuICByZXR1cm4gcGFyc2VGbG9hdCgoMC4yMTI2ICogciArIDAuNzE1MiAqIGcgKyAwLjA3MjIgKiBiKS50b0ZpeGVkKDMpKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBjb250cmFzdCByYXRpbyBiZXR3ZWVuIHR3byBjb2xvcnMgYmFzZWQgb25cbiAqIFtXMydzIHJlY29tbWVuZGVkIGVxdWF0aW9uIGZvciBjYWxjdWxhdGluZyBjb250cmFzdF0oaHR0cDovL3d3dy53My5vcmcvVFIvV0NBRzIwLyNjb250cmFzdC1yYXRpb2RlZikuXG4gKlxuICogQGV4YW1wbGVcbiAqIGNvbnN0IGNvbnRyYXN0UmF0aW8gPSBnZXRDb250cmFzdCgnIzQ0NCcsICcjZmZmJyk7XG4gKi9cblxuZnVuY3Rpb24gZ2V0Q29udHJhc3QoY29sb3IxLCBjb2xvcjIpIHtcbiAgdmFyIGx1bWluYW5jZTEgPSBnZXRMdW1pbmFuY2UoY29sb3IxKTtcbiAgdmFyIGx1bWluYW5jZTIgPSBnZXRMdW1pbmFuY2UoY29sb3IyKTtcbiAgcmV0dXJuIHBhcnNlRmxvYXQoKGx1bWluYW5jZTEgPiBsdW1pbmFuY2UyID8gKGx1bWluYW5jZTEgKyAwLjA1KSAvIChsdW1pbmFuY2UyICsgMC4wNSkgOiAobHVtaW5hbmNlMiArIDAuMDUpIC8gKGx1bWluYW5jZTEgKyAwLjA1KSkudG9GaXhlZCgyKSk7XG59XG5cbi8qKlxuICogQ29udmVydHMgdGhlIGNvbG9yIHRvIGEgZ3JheXNjYWxlLCBieSByZWR1Y2luZyBpdHMgc2F0dXJhdGlvbiB0byAwLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IGdyYXlzY2FsZSgnI0NDQ0Q2NCcpLFxuICogICBiYWNrZ3JvdW5kOiBncmF5c2NhbGUoJ3JnYmEoMjA0LDIwNSwxMDAsMC43KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke2dyYXlzY2FsZSgnI0NDQ0Q2NCcpfTtcbiAqICAgYmFja2dyb3VuZDogJHtncmF5c2NhbGUoJ3JnYmEoMjA0LDIwNSwxMDAsMC43KScpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjOTk5XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgxNTMsMTUzLDE1MywwLjcpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gZ3JheXNjYWxlKGNvbG9yKSB7XG4gIGlmIChjb2xvciA9PT0gJ3RyYW5zcGFyZW50JykgcmV0dXJuIGNvbG9yO1xuICByZXR1cm4gdG9Db2xvclN0cmluZyhfZXh0ZW5kcyh7fSwgcGFyc2VUb0hzbChjb2xvciksIHtcbiAgICBzYXR1cmF0aW9uOiAwXG4gIH0pKTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIEhzbENvbG9yIG9yIEhzbGFDb2xvciBvYmplY3QgdG8gYSBjb2xvciBzdHJpbmcuXG4gKiBUaGlzIHV0aWwgaXMgdXNlZnVsIGluIGNhc2UgeW91IG9ubHkga25vdyBvbiBydW50aW1lIHdoaWNoIGNvbG9yIG9iamVjdCBpc1xuICogdXNlZC4gT3RoZXJ3aXNlIHdlIHJlY29tbWVuZCB0byByZWx5IG9uIGBoc2xgIG9yIGBoc2xhYC5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBoc2xUb0NvbG9yU3RyaW5nKHsgaHVlOiAyNDAsIHNhdHVyYXRpb246IDEsIGxpZ2h0bmVzczogMC41IH0pLFxuICogICBiYWNrZ3JvdW5kOiBoc2xUb0NvbG9yU3RyaW5nKHsgaHVlOiAzNjAsIHNhdHVyYXRpb246IDAuNzUsIGxpZ2h0bmVzczogMC40LCBhbHBoYTogMC43MiB9KSxcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgYmFja2dyb3VuZDogJHtoc2xUb0NvbG9yU3RyaW5nKHsgaHVlOiAyNDAsIHNhdHVyYXRpb246IDEsIGxpZ2h0bmVzczogMC41IH0pfTtcbiAqICAgYmFja2dyb3VuZDogJHtoc2xUb0NvbG9yU3RyaW5nKHsgaHVlOiAzNjAsIHNhdHVyYXRpb246IDAuNzUsIGxpZ2h0bmVzczogMC40LCBhbHBoYTogMC43MiB9KX07XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiIzAwZlwiO1xuICogICBiYWNrZ3JvdW5kOiBcInJnYmEoMTc5LDI1LDI1LDAuNzIpXCI7XG4gKiB9XG4gKi9cbmZ1bmN0aW9uIGhzbFRvQ29sb3JTdHJpbmcoY29sb3IpIHtcbiAgaWYgKHR5cGVvZiBjb2xvciA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIGNvbG9yLmh1ZSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLnNhdHVyYXRpb24gPT09ICdudW1iZXInICYmIHR5cGVvZiBjb2xvci5saWdodG5lc3MgPT09ICdudW1iZXInKSB7XG4gICAgaWYgKGNvbG9yLmFscGhhICYmIHR5cGVvZiBjb2xvci5hbHBoYSA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJldHVybiBoc2xhKHtcbiAgICAgICAgaHVlOiBjb2xvci5odWUsXG4gICAgICAgIHNhdHVyYXRpb246IGNvbG9yLnNhdHVyYXRpb24sXG4gICAgICAgIGxpZ2h0bmVzczogY29sb3IubGlnaHRuZXNzLFxuICAgICAgICBhbHBoYTogY29sb3IuYWxwaGFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBoc2woe1xuICAgICAgaHVlOiBjb2xvci5odWUsXG4gICAgICBzYXR1cmF0aW9uOiBjb2xvci5zYXR1cmF0aW9uLFxuICAgICAgbGlnaHRuZXNzOiBjb2xvci5saWdodG5lc3NcbiAgICB9KTtcbiAgfVxuXG4gIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDQ1KTtcbn1cblxuLyoqXG4gKiBJbnZlcnRzIHRoZSByZWQsIGdyZWVuIGFuZCBibHVlIHZhbHVlcyBvZiBhIGNvbG9yLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IGludmVydCgnI0NDQ0Q2NCcpLFxuICogICBiYWNrZ3JvdW5kOiBpbnZlcnQoJ3JnYmEoMTAxLDEwMCwyMDUsMC43KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke2ludmVydCgnI0NDQ0Q2NCcpfTtcbiAqICAgYmFja2dyb3VuZDogJHtpbnZlcnQoJ3JnYmEoMTAxLDEwMCwyMDUsMC43KScpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiIzMzMzI5YlwiO1xuICogICBiYWNrZ3JvdW5kOiBcInJnYmEoMTU0LDE1NSw1MCwwLjcpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gaW52ZXJ0KGNvbG9yKSB7XG4gIGlmIChjb2xvciA9PT0gJ3RyYW5zcGFyZW50JykgcmV0dXJuIGNvbG9yOyAvLyBwYXJzZSBjb2xvciBzdHJpbmcgdG8gcmdiXG5cbiAgdmFyIHZhbHVlID0gcGFyc2VUb1JnYihjb2xvcik7XG4gIHJldHVybiB0b0NvbG9yU3RyaW5nKF9leHRlbmRzKHt9LCB2YWx1ZSwge1xuICAgIHJlZDogMjU1IC0gdmFsdWUucmVkLFxuICAgIGdyZWVuOiAyNTUgLSB2YWx1ZS5ncmVlbixcbiAgICBibHVlOiAyNTUgLSB2YWx1ZS5ibHVlXG4gIH0pKTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgc3RyaW5nIHZhbHVlIGZvciB0aGUgbGlnaHRlbmVkIGNvbG9yLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oMC4yLCAnI0NDQ0Q2NCcpLFxuICogICBiYWNrZ3JvdW5kOiBsaWdodGVuKCcwLjInLCAncmdiYSgyMDQsMjA1LDEwMCwwLjcpJyksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7bGlnaHRlbigwLjIsICcjRkZDRDY0Jyl9O1xuICogICBiYWNrZ3JvdW5kOiAke2xpZ2h0ZW4oJzAuMicsICdyZ2JhKDIwNCwyMDUsMTAwLDAuNyknKX07XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqIGVsZW1lbnQge1xuICogICBiYWNrZ3JvdW5kOiBcIiNlNWU2YjFcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDIyOSwyMzAsMTc3LDAuNylcIjtcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBsaWdodGVuKGFtb3VudCwgY29sb3IpIHtcbiAgaWYgKGNvbG9yID09PSAndHJhbnNwYXJlbnQnKSByZXR1cm4gY29sb3I7XG4gIHZhciBoc2xDb2xvciA9IHBhcnNlVG9Ic2woY29sb3IpO1xuICByZXR1cm4gdG9Db2xvclN0cmluZyhfZXh0ZW5kcyh7fSwgaHNsQ29sb3IsIHtcbiAgICBsaWdodG5lc3M6IGd1YXJkKDAsIDEsIGhzbENvbG9yLmxpZ2h0bmVzcyArIHBhcnNlRmxvYXQoYW1vdW50KSlcbiAgfSkpO1xufSAvLyBwcmV0dGllci1pZ25vcmVcblxuXG52YXIgY3VycmllZExpZ2h0ZW4gPSAvKiNfX1BVUkVfXyovY3Vycnlcbi8qIDo6PG51bWJlciB8IHN0cmluZywgc3RyaW5nLCBzdHJpbmc+ICovXG4obGlnaHRlbik7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGljaCBjb250cmFzdCBndWlkZWxpbmVzIGhhdmUgYmVlbiBtZXQgZm9yIHR3byBjb2xvcnMuXG4gKiBCYXNlZCBvbiB0aGUgW2NvbnRyYXN0IGNhbGN1bGF0aW9ucyByZWNvbW1lbmRlZCBieSBXM10oaHR0cHM6Ly93d3cudzMub3JnL1dBSS9XQ0FHMjEvVW5kZXJzdGFuZGluZy9jb250cmFzdC1lbmhhbmNlZC5odG1sKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3Qgc2NvcmVzID0gbWVldHNDb250cmFzdEd1aWRlbGluZXMoJyM0NDQnLCAnI2ZmZicpO1xuICovXG5mdW5jdGlvbiBtZWV0c0NvbnRyYXN0R3VpZGVsaW5lcyhjb2xvcjEsIGNvbG9yMikge1xuICB2YXIgY29udHJhc3RSYXRpbyA9IGdldENvbnRyYXN0KGNvbG9yMSwgY29sb3IyKTtcbiAgcmV0dXJuIHtcbiAgICBBQTogY29udHJhc3RSYXRpbyA+PSA0LjUsXG4gICAgQUFMYXJnZTogY29udHJhc3RSYXRpbyA+PSAzLFxuICAgIEFBQTogY29udHJhc3RSYXRpbyA+PSA3LFxuICAgIEFBQUxhcmdlOiBjb250cmFzdFJhdGlvID49IDQuNVxuICB9O1xufVxuXG4vKipcbiAqIE1peGVzIHRoZSB0d28gcHJvdmlkZWQgY29sb3JzIHRvZ2V0aGVyIGJ5IGNhbGN1bGF0aW5nIHRoZSBhdmVyYWdlIG9mIGVhY2ggb2YgdGhlIFJHQiBjb21wb25lbnRzIHdlaWdodGVkIHRvIHRoZSBmaXJzdCBjb2xvciBieSB0aGUgcHJvdmlkZWQgd2VpZ2h0LlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IG1peCgwLjUsICcjZjAwJywgJyMwMGYnKVxuICogICBiYWNrZ3JvdW5kOiBtaXgoMC4yNSwgJyNmMDAnLCAnIzAwZicpXG4gKiAgIGJhY2tncm91bmQ6IG1peCgnMC41JywgJ3JnYmEoMjU1LCAwLCAwLCAwLjUpJywgJyMwMGYnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke21peCgwLjUsICcjZjAwJywgJyMwMGYnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7bWl4KDAuMjUsICcjZjAwJywgJyMwMGYnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7bWl4KCcwLjUnLCAncmdiYSgyNTUsIDAsIDAsIDAuNSknLCAnIzAwZicpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiIzdmMDA3ZlwiO1xuICogICBiYWNrZ3JvdW5kOiBcIiMzZjAwYmZcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDYzLCAwLCAxOTEsIDAuNzUpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gbWl4KHdlaWdodCwgY29sb3IsIG90aGVyQ29sb3IpIHtcbiAgaWYgKGNvbG9yID09PSAndHJhbnNwYXJlbnQnKSByZXR1cm4gb3RoZXJDb2xvcjtcbiAgaWYgKG90aGVyQ29sb3IgPT09ICd0cmFuc3BhcmVudCcpIHJldHVybiBjb2xvcjtcbiAgaWYgKHdlaWdodCA9PT0gMCkgcmV0dXJuIG90aGVyQ29sb3I7XG4gIHZhciBwYXJzZWRDb2xvcjEgPSBwYXJzZVRvUmdiKGNvbG9yKTtcblxuICB2YXIgY29sb3IxID0gX2V4dGVuZHMoe30sIHBhcnNlZENvbG9yMSwge1xuICAgIGFscGhhOiB0eXBlb2YgcGFyc2VkQ29sb3IxLmFscGhhID09PSAnbnVtYmVyJyA/IHBhcnNlZENvbG9yMS5hbHBoYSA6IDFcbiAgfSk7XG5cbiAgdmFyIHBhcnNlZENvbG9yMiA9IHBhcnNlVG9SZ2Iob3RoZXJDb2xvcik7XG5cbiAgdmFyIGNvbG9yMiA9IF9leHRlbmRzKHt9LCBwYXJzZWRDb2xvcjIsIHtcbiAgICBhbHBoYTogdHlwZW9mIHBhcnNlZENvbG9yMi5hbHBoYSA9PT0gJ251bWJlcicgPyBwYXJzZWRDb2xvcjIuYWxwaGEgOiAxXG4gIH0pOyAvLyBUaGUgZm9ybXVsYSBpcyBjb3BpZWQgZnJvbSB0aGUgb3JpZ2luYWwgU2FzcyBpbXBsZW1lbnRhdGlvbjpcbiAgLy8gaHR0cDovL3Nhc3MtbGFuZy5jb20vZG9jdW1lbnRhdGlvbi9TYXNzL1NjcmlwdC9GdW5jdGlvbnMuaHRtbCNtaXgtaW5zdGFuY2VfbWV0aG9kXG5cblxuICB2YXIgYWxwaGFEZWx0YSA9IGNvbG9yMS5hbHBoYSAtIGNvbG9yMi5hbHBoYTtcbiAgdmFyIHggPSBwYXJzZUZsb2F0KHdlaWdodCkgKiAyIC0gMTtcbiAgdmFyIHkgPSB4ICogYWxwaGFEZWx0YSA9PT0gLTEgPyB4IDogeCArIGFscGhhRGVsdGE7XG4gIHZhciB6ID0gMSArIHggKiBhbHBoYURlbHRhO1xuICB2YXIgd2VpZ2h0MSA9ICh5IC8geiArIDEpIC8gMi4wO1xuICB2YXIgd2VpZ2h0MiA9IDEgLSB3ZWlnaHQxO1xuICB2YXIgbWl4ZWRDb2xvciA9IHtcbiAgICByZWQ6IE1hdGguZmxvb3IoY29sb3IxLnJlZCAqIHdlaWdodDEgKyBjb2xvcjIucmVkICogd2VpZ2h0MiksXG4gICAgZ3JlZW46IE1hdGguZmxvb3IoY29sb3IxLmdyZWVuICogd2VpZ2h0MSArIGNvbG9yMi5ncmVlbiAqIHdlaWdodDIpLFxuICAgIGJsdWU6IE1hdGguZmxvb3IoY29sb3IxLmJsdWUgKiB3ZWlnaHQxICsgY29sb3IyLmJsdWUgKiB3ZWlnaHQyKSxcbiAgICBhbHBoYTogY29sb3IxLmFscGhhICogKHBhcnNlRmxvYXQod2VpZ2h0KSAvIDEuMCkgKyBjb2xvcjIuYWxwaGEgKiAoMSAtIHBhcnNlRmxvYXQod2VpZ2h0KSAvIDEuMClcbiAgfTtcbiAgcmV0dXJuIHJnYmEobWl4ZWRDb2xvcik7XG59IC8vIHByZXR0aWVyLWlnbm9yZVxuXG5cbnZhciBjdXJyaWVkTWl4ID0gLyojX19QVVJFX18qL2N1cnJ5XG4vKiA6OjxudW1iZXIgfCBzdHJpbmcsIHN0cmluZywgc3RyaW5nLCBzdHJpbmc+ICovXG4obWl4KTtcblxuLyoqXG4gKiBJbmNyZWFzZXMgdGhlIG9wYWNpdHkgb2YgYSBjb2xvci4gSXRzIHJhbmdlIGZvciB0aGUgYW1vdW50IGlzIGJldHdlZW4gMCB0byAxLlxuICpcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBvcGFjaWZ5KDAuMSwgJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMC45KScpO1xuICogICBiYWNrZ3JvdW5kOiBvcGFjaWZ5KDAuMiwgJ2hzbGEoMCwgMCUsIDEwMCUsIDAuNSknKSxcbiAqICAgYmFja2dyb3VuZDogb3BhY2lmeSgnMC41JywgJ3JnYmEoMjU1LCAwLCAwLCAwLjIpJyksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7b3BhY2lmeSgwLjEsICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSknKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7b3BhY2lmeSgwLjIsICdoc2xhKDAsIDAlLCAxMDAlLCAwLjUpJyl9LFxuICogICBiYWNrZ3JvdW5kOiAke29wYWNpZnkoJzAuNScsICdyZ2JhKDI1NSwgMCwgMCwgMC4yKScpfSxcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiI2ZmZlwiO1xuICogICBiYWNrZ3JvdW5kOiBcInJnYmEoMjU1LDI1NSwyNTUsMC43KVwiO1xuICogICBiYWNrZ3JvdW5kOiBcInJnYmEoMjU1LDAsMCwwLjcpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gb3BhY2lmeShhbW91bnQsIGNvbG9yKSB7XG4gIGlmIChjb2xvciA9PT0gJ3RyYW5zcGFyZW50JykgcmV0dXJuIGNvbG9yO1xuICB2YXIgcGFyc2VkQ29sb3IgPSBwYXJzZVRvUmdiKGNvbG9yKTtcbiAgdmFyIGFscGhhID0gdHlwZW9mIHBhcnNlZENvbG9yLmFscGhhID09PSAnbnVtYmVyJyA/IHBhcnNlZENvbG9yLmFscGhhIDogMTtcblxuICB2YXIgY29sb3JXaXRoQWxwaGEgPSBfZXh0ZW5kcyh7fSwgcGFyc2VkQ29sb3IsIHtcbiAgICBhbHBoYTogZ3VhcmQoMCwgMSwgKGFscGhhICogMTAwICsgcGFyc2VGbG9hdChhbW91bnQpICogMTAwKSAvIDEwMClcbiAgfSk7XG5cbiAgcmV0dXJuIHJnYmEoY29sb3JXaXRoQWxwaGEpO1xufSAvLyBwcmV0dGllci1pZ25vcmVcblxuXG52YXIgY3VycmllZE9wYWNpZnkgPSAvKiNfX1BVUkVfXyovY3Vycnlcbi8qIDo6PG51bWJlciB8IHN0cmluZywgc3RyaW5nLCBzdHJpbmc+ICovXG4ob3BhY2lmeSk7XG5cbnZhciBkZWZhdWx0TGlnaHRSZXR1cm5Db2xvciA9ICcjMDAwJztcbnZhciBkZWZhdWx0RGFya1JldHVybkNvbG9yID0gJyNmZmYnO1xuLyoqXG4gKiBSZXR1cm5zIGJsYWNrIG9yIHdoaXRlIChvciBvcHRpb25hbCBsaWdodCBhbmQgZGFyayByZXR1cm4gY29sb3JzKSBmb3IgYmVzdFxuICogY29udHJhc3QgZGVwZW5kaW5nIG9uIHRoZSBsdW1pbm9zaXR5IG9mIHRoZSBnaXZlbiBjb2xvci5cbiAqIFdoZW4gcGFzc2luZyBjdXN0b20gcmV0dXJuIGNvbG9ycywgc2V0IGBzdHJpY3RgIHRvIGB0cnVlYCB0byBlbnN1cmUgdGhhdCB0aGVcbiAqIHJldHVybiBjb2xvciBhbHdheXMgbWVldHMgb3IgZXhjZWVkcyBXQ0FHIGxldmVsIEFBIG9yIGdyZWF0ZXIuIElmIHRoaXMgdGVzdFxuICogZmFpbHMsIHRoZSBkZWZhdWx0IHJldHVybiBjb2xvciAoYmxhY2sgb3Igd2hpdGUpIGlzIHJldHVybmVkIGluIHBsYWNlIG9mIHRoZVxuICogY3VzdG9tIHJldHVybiBjb2xvci5cbiAqXG4gKiBGb2xsb3dzIFtXM0Mgc3BlY3MgZm9yIHJlYWRhYmlsaXR5XShodHRwczovL3d3dy53My5vcmcvVFIvV0NBRzIwLVRFQ0hTL0cxOC5odG1sKS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBjb2xvcjogcmVhZGFibGVDb2xvcignIzAwMCcpLFxuICogICBjb2xvcjogcmVhZGFibGVDb2xvcignYmxhY2snLCAnIzAwMScsICcjZmY4JyksXG4gKiAgIGNvbG9yOiByZWFkYWJsZUNvbG9yKCd3aGl0ZScsICcjMDAxJywgJyNmZjgnKSxcbiAqICAgY29sb3I6IHJlYWRhYmxlQ29sb3IoJ3JlZCcsICcjMzMzJywgJyNkZGQnLCB0cnVlKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBjb2xvcjogJHtyZWFkYWJsZUNvbG9yKCcjMDAwJyl9O1xuICogICBjb2xvcjogJHtyZWFkYWJsZUNvbG9yKCdibGFjaycsICcjMDAxJywgJyNmZjgnKX07XG4gKiAgIGNvbG9yOiAke3JlYWRhYmxlQ29sb3IoJ3doaXRlJywgJyMwMDEnLCAnI2ZmOCcpfTtcbiAqICAgY29sb3I6ICR7cmVhZGFibGVDb2xvcigncmVkJywgJyMzMzMnLCAnI2RkZCcsIHRydWUpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgY29sb3I6IFwiI2ZmZlwiO1xuICogICBjb2xvcjogXCIjZmY4XCI7XG4gKiAgIGNvbG9yOiBcIiMwMDFcIjtcbiAqICAgY29sb3I6IFwiIzAwMFwiO1xuICogfVxuICovXG5cbmZ1bmN0aW9uIHJlYWRhYmxlQ29sb3IoY29sb3IsIGxpZ2h0UmV0dXJuQ29sb3IsIGRhcmtSZXR1cm5Db2xvciwgc3RyaWN0KSB7XG4gIGlmIChsaWdodFJldHVybkNvbG9yID09PSB2b2lkIDApIHtcbiAgICBsaWdodFJldHVybkNvbG9yID0gZGVmYXVsdExpZ2h0UmV0dXJuQ29sb3I7XG4gIH1cblxuICBpZiAoZGFya1JldHVybkNvbG9yID09PSB2b2lkIDApIHtcbiAgICBkYXJrUmV0dXJuQ29sb3IgPSBkZWZhdWx0RGFya1JldHVybkNvbG9yO1xuICB9XG5cbiAgaWYgKHN0cmljdCA9PT0gdm9pZCAwKSB7XG4gICAgc3RyaWN0ID0gZmFsc2U7XG4gIH1cblxuICB2YXIgaXNMaWdodENvbG9yID0gZ2V0THVtaW5hbmNlKGNvbG9yKSA+IDAuMTc5O1xuICB2YXIgcHJlZmVycmVkUmV0dXJuQ29sb3IgPSBpc0xpZ2h0Q29sb3IgPyBsaWdodFJldHVybkNvbG9yIDogZGFya1JldHVybkNvbG9yOyAvLyBUT0RPOiBNYWtlIGBzdHJpY3RgIHRoZSBkZWZhdWx0IGJlaGF2aW91ciBpbiB0aGUgbmV4dCBtYWpvciByZWxlYXNlLlxuICAvLyBXaXRob3V0IGBzdHJpY3RgLCB0aGlzIG1heSByZXR1cm4gYSBjb2xvciB0aGF0IGRvZXMgbm90IG1lZXQgV0NBRyBBQS5cblxuICBpZiAoIXN0cmljdCB8fCBnZXRDb250cmFzdChjb2xvciwgcHJlZmVycmVkUmV0dXJuQ29sb3IpID49IDQuNSkge1xuICAgIHJldHVybiBwcmVmZXJyZWRSZXR1cm5Db2xvcjtcbiAgfVxuXG4gIHJldHVybiBpc0xpZ2h0Q29sb3IgPyBkZWZhdWx0TGlnaHRSZXR1cm5Db2xvciA6IGRlZmF1bHREYXJrUmV0dXJuQ29sb3I7XG59XG5cbi8qKlxuICogQ29udmVydHMgYSBSZ2JDb2xvciBvciBSZ2JhQ29sb3Igb2JqZWN0IHRvIGEgY29sb3Igc3RyaW5nLlxuICogVGhpcyB1dGlsIGlzIHVzZWZ1bCBpbiBjYXNlIHlvdSBvbmx5IGtub3cgb24gcnVudGltZSB3aGljaCBjb2xvciBvYmplY3QgaXNcbiAqIHVzZWQuIE90aGVyd2lzZSB3ZSByZWNvbW1lbmQgdG8gcmVseSBvbiBgcmdiYCBvciBgcmdiYWAuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgYmFja2dyb3VuZDogcmdiVG9Db2xvclN0cmluZyh7IHJlZDogMjU1LCBncmVlbjogMjA1LCBibHVlOiAxMDAgfSksXG4gKiAgIGJhY2tncm91bmQ6IHJnYlRvQ29sb3JTdHJpbmcoeyByZWQ6IDI1NSwgZ3JlZW46IDIwNSwgYmx1ZTogMTAwLCBhbHBoYTogMC43MiB9KSxcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgYmFja2dyb3VuZDogJHtyZ2JUb0NvbG9yU3RyaW5nKHsgcmVkOiAyNTUsIGdyZWVuOiAyMDUsIGJsdWU6IDEwMCB9KX07XG4gKiAgIGJhY2tncm91bmQ6ICR7cmdiVG9Db2xvclN0cmluZyh7IHJlZDogMjU1LCBncmVlbjogMjA1LCBibHVlOiAxMDAsIGFscGhhOiAwLjcyIH0pfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjZmZjZDY0XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgyNTUsMjA1LDEwMCwwLjcyKVwiO1xuICogfVxuICovXG5mdW5jdGlvbiByZ2JUb0NvbG9yU3RyaW5nKGNvbG9yKSB7XG4gIGlmICh0eXBlb2YgY29sb3IgPT09ICdvYmplY3QnICYmIHR5cGVvZiBjb2xvci5yZWQgPT09ICdudW1iZXInICYmIHR5cGVvZiBjb2xvci5ncmVlbiA9PT0gJ251bWJlcicgJiYgdHlwZW9mIGNvbG9yLmJsdWUgPT09ICdudW1iZXInKSB7XG4gICAgaWYgKHR5cGVvZiBjb2xvci5hbHBoYSA9PT0gJ251bWJlcicpIHtcbiAgICAgIHJldHVybiByZ2JhKHtcbiAgICAgICAgcmVkOiBjb2xvci5yZWQsXG4gICAgICAgIGdyZWVuOiBjb2xvci5ncmVlbixcbiAgICAgICAgYmx1ZTogY29sb3IuYmx1ZSxcbiAgICAgICAgYWxwaGE6IGNvbG9yLmFscGhhXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmdiKHtcbiAgICAgIHJlZDogY29sb3IucmVkLFxuICAgICAgZ3JlZW46IGNvbG9yLmdyZWVuLFxuICAgICAgYmx1ZTogY29sb3IuYmx1ZVxuICAgIH0pO1xuICB9XG5cbiAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNDYpO1xufVxuXG4vKipcbiAqIEluY3JlYXNlcyB0aGUgaW50ZW5zaXR5IG9mIGEgY29sb3IuIEl0cyByYW5nZSBpcyBiZXR3ZWVuIDAgdG8gMS4gVGhlIGZpcnN0XG4gKiBhcmd1bWVudCBvZiB0aGUgc2F0dXJhdGUgZnVuY3Rpb24gaXMgdGhlIGFtb3VudCBieSBob3cgbXVjaCB0aGUgY29sb3JcbiAqIGludGVuc2l0eSBzaG91bGQgYmUgaW5jcmVhc2VkLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IHNhdHVyYXRlKDAuMiwgJyNDQ0NENjQnKSxcbiAqICAgYmFja2dyb3VuZDogc2F0dXJhdGUoJzAuMicsICdyZ2JhKDIwNCwyMDUsMTAwLDAuNyknKSxcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgYmFja2dyb3VuZDogJHtzYXR1cmF0ZSgwLjIsICcjRkZDRDY0Jyl9O1xuICogICBiYWNrZ3JvdW5kOiAke3NhdHVyYXRlKCcwLjInLCAncmdiYSgyMDQsMjA1LDEwMCwwLjcpJyl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqXG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjZTBlMjUwXCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgyMjQsMjI2LDgwLDAuNylcIjtcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBzYXR1cmF0ZShhbW91bnQsIGNvbG9yKSB7XG4gIGlmIChjb2xvciA9PT0gJ3RyYW5zcGFyZW50JykgcmV0dXJuIGNvbG9yO1xuICB2YXIgaHNsQ29sb3IgPSBwYXJzZVRvSHNsKGNvbG9yKTtcbiAgcmV0dXJuIHRvQ29sb3JTdHJpbmcoX2V4dGVuZHMoe30sIGhzbENvbG9yLCB7XG4gICAgc2F0dXJhdGlvbjogZ3VhcmQoMCwgMSwgaHNsQ29sb3Iuc2F0dXJhdGlvbiArIHBhcnNlRmxvYXQoYW1vdW50KSlcbiAgfSkpO1xufSAvLyBwcmV0dGllci1pZ25vcmVcblxuXG52YXIgY3VycmllZFNhdHVyYXRlID0gLyojX19QVVJFX18qL2N1cnJ5XG4vKiA6OjxudW1iZXIgfCBzdHJpbmcsIHN0cmluZywgc3RyaW5nPiAqL1xuKHNhdHVyYXRlKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBodWUgb2YgYSBjb2xvciB0byB0aGUgcHJvdmlkZWQgdmFsdWUuIFRoZSBodWUgcmFuZ2UgY2FuIGJlXG4gKiBmcm9tIDAgYW5kIDM1OS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBzZXRIdWUoNDIsICcjQ0NDRDY0JyksXG4gKiAgIGJhY2tncm91bmQ6IHNldEh1ZSgnMjQ0JywgJ3JnYmEoMjA0LDIwNSwxMDAsMC43KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke3NldEh1ZSg0MiwgJyNDQ0NENjQnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7c2V0SHVlKCcyNDQnLCAncmdiYSgyMDQsMjA1LDEwMCwwLjcpJyl9O1xuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqIGVsZW1lbnQge1xuICogICBiYWNrZ3JvdW5kOiBcIiNjZGFlNjRcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDEwNywxMDAsMjA1LDAuNylcIjtcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBzZXRIdWUoaHVlLCBjb2xvcikge1xuICBpZiAoY29sb3IgPT09ICd0cmFuc3BhcmVudCcpIHJldHVybiBjb2xvcjtcbiAgcmV0dXJuIHRvQ29sb3JTdHJpbmcoX2V4dGVuZHMoe30sIHBhcnNlVG9Ic2woY29sb3IpLCB7XG4gICAgaHVlOiBwYXJzZUZsb2F0KGh1ZSlcbiAgfSkpO1xufSAvLyBwcmV0dGllci1pZ25vcmVcblxuXG52YXIgY3VycmllZFNldEh1ZSA9IC8qI19fUFVSRV9fKi9jdXJyeVxuLyogOjo8bnVtYmVyIHwgc3RyaW5nLCBzdHJpbmcsIHN0cmluZz4gKi9cbihzZXRIdWUpO1xuXG4vKipcbiAqIFNldHMgdGhlIGxpZ2h0bmVzcyBvZiBhIGNvbG9yIHRvIHRoZSBwcm92aWRlZCB2YWx1ZS4gVGhlIGxpZ2h0bmVzcyByYW5nZSBjYW4gYmVcbiAqIGZyb20gMCBhbmQgMS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBzZXRMaWdodG5lc3MoMC4yLCAnI0NDQ0Q2NCcpLFxuICogICBiYWNrZ3JvdW5kOiBzZXRMaWdodG5lc3MoJzAuNzUnLCAncmdiYSgyMDQsMjA1LDEwMCwwLjcpJyksXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7c2V0TGlnaHRuZXNzKDAuMiwgJyNDQ0NENjQnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7c2V0TGlnaHRuZXNzKCcwLjc1JywgJ3JnYmEoMjA0LDIwNSwxMDAsMC43KScpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCIjNGQ0ZDE5XCI7XG4gKiAgIGJhY2tncm91bmQ6IFwicmdiYSgyMjMsMjI0LDE1OSwwLjcpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gc2V0TGlnaHRuZXNzKGxpZ2h0bmVzcywgY29sb3IpIHtcbiAgaWYgKGNvbG9yID09PSAndHJhbnNwYXJlbnQnKSByZXR1cm4gY29sb3I7XG4gIHJldHVybiB0b0NvbG9yU3RyaW5nKF9leHRlbmRzKHt9LCBwYXJzZVRvSHNsKGNvbG9yKSwge1xuICAgIGxpZ2h0bmVzczogcGFyc2VGbG9hdChsaWdodG5lc3MpXG4gIH0pKTtcbn0gLy8gcHJldHRpZXItaWdub3JlXG5cblxudmFyIGN1cnJpZWRTZXRMaWdodG5lc3MgPSAvKiNfX1BVUkVfXyovY3Vycnlcbi8qIDo6PG51bWJlciB8IHN0cmluZywgc3RyaW5nLCBzdHJpbmc+ICovXG4oc2V0TGlnaHRuZXNzKTtcblxuLyoqXG4gKiBTZXRzIHRoZSBzYXR1cmF0aW9uIG9mIGEgY29sb3IgdG8gdGhlIHByb3ZpZGVkIHZhbHVlLiBUaGUgc2F0dXJhdGlvbiByYW5nZSBjYW4gYmVcbiAqIGZyb20gMCBhbmQgMS5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiBzZXRTYXR1cmF0aW9uKDAuMiwgJyNDQ0NENjQnKSxcbiAqICAgYmFja2dyb3VuZDogc2V0U2F0dXJhdGlvbignMC43NScsICdyZ2JhKDIwNCwyMDUsMTAwLDAuNyknKSxcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgYmFja2dyb3VuZDogJHtzZXRTYXR1cmF0aW9uKDAuMiwgJyNDQ0NENjQnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7c2V0U2F0dXJhdGlvbignMC43NScsICdyZ2JhKDIwNCwyMDUsMTAwLDAuNyknKX07XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiI2FkYWQ4NFwiO1xuICogICBiYWNrZ3JvdW5kOiBcInJnYmEoMjI4LDIyOSw3NiwwLjcpXCI7XG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gc2V0U2F0dXJhdGlvbihzYXR1cmF0aW9uLCBjb2xvcikge1xuICBpZiAoY29sb3IgPT09ICd0cmFuc3BhcmVudCcpIHJldHVybiBjb2xvcjtcbiAgcmV0dXJuIHRvQ29sb3JTdHJpbmcoX2V4dGVuZHMoe30sIHBhcnNlVG9Ic2woY29sb3IpLCB7XG4gICAgc2F0dXJhdGlvbjogcGFyc2VGbG9hdChzYXR1cmF0aW9uKVxuICB9KSk7XG59IC8vIHByZXR0aWVyLWlnbm9yZVxuXG5cbnZhciBjdXJyaWVkU2V0U2F0dXJhdGlvbiA9IC8qI19fUFVSRV9fKi9jdXJyeVxuLyogOjo8bnVtYmVyIHwgc3RyaW5nLCBzdHJpbmcsIHN0cmluZz4gKi9cbihzZXRTYXR1cmF0aW9uKTtcblxuLyoqXG4gKiBTaGFkZXMgYSBjb2xvciBieSBtaXhpbmcgaXQgd2l0aCBibGFjay4gYHNoYWRlYCBjYW4gcHJvZHVjZVxuICogaHVlIHNoaWZ0cywgd2hlcmUgYXMgYGRhcmtlbmAgbWFuaXB1bGF0ZXMgdGhlIGx1bWluYW5jZSBjaGFubmVsIGFuZCB0aGVyZWZvcmVcbiAqIGRvZXNuJ3QgcHJvZHVjZSBodWUgc2hpZnRzLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIGJhY2tncm91bmQ6IHNoYWRlKDAuMjUsICcjMDBmJylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgYmFja2dyb3VuZDogJHtzaGFkZSgwLjI1LCAnIzAwZicpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiIzAwMDAzZlwiO1xuICogfVxuICovXG5cbmZ1bmN0aW9uIHNoYWRlKHBlcmNlbnRhZ2UsIGNvbG9yKSB7XG4gIGlmIChjb2xvciA9PT0gJ3RyYW5zcGFyZW50JykgcmV0dXJuIGNvbG9yO1xuICByZXR1cm4gY3VycmllZE1peChwYXJzZUZsb2F0KHBlcmNlbnRhZ2UpLCAncmdiKDAsIDAsIDApJywgY29sb3IpO1xufSAvLyBwcmV0dGllci1pZ25vcmVcblxuXG52YXIgY3VycmllZFNoYWRlID0gLyojX19QVVJFX18qL2N1cnJ5XG4vKiA6OjxudW1iZXIgfCBzdHJpbmcsIHN0cmluZywgc3RyaW5nPiAqL1xuKHNoYWRlKTtcblxuLyoqXG4gKiBUaW50cyBhIGNvbG9yIGJ5IG1peGluZyBpdCB3aXRoIHdoaXRlLiBgdGludGAgY2FuIHByb2R1Y2VcbiAqIGh1ZSBzaGlmdHMsIHdoZXJlIGFzIGBsaWdodGVuYCBtYW5pcHVsYXRlcyB0aGUgbHVtaW5hbmNlIGNoYW5uZWwgYW5kIHRoZXJlZm9yZVxuICogZG9lc24ndCBwcm9kdWNlIGh1ZSBzaGlmdHMuXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgYmFja2dyb3VuZDogdGludCgwLjI1LCAnIzAwZicpXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgIGJhY2tncm91bmQ6ICR7dGludCgwLjI1LCAnIzAwZicpfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgaW4gSlMgT3V0cHV0XG4gKlxuICogZWxlbWVudCB7XG4gKiAgIGJhY2tncm91bmQ6IFwiI2JmYmZmZlwiO1xuICogfVxuICovXG5cbmZ1bmN0aW9uIHRpbnQocGVyY2VudGFnZSwgY29sb3IpIHtcbiAgaWYgKGNvbG9yID09PSAndHJhbnNwYXJlbnQnKSByZXR1cm4gY29sb3I7XG4gIHJldHVybiBjdXJyaWVkTWl4KHBhcnNlRmxvYXQocGVyY2VudGFnZSksICdyZ2IoMjU1LCAyNTUsIDI1NSknLCBjb2xvcik7XG59IC8vIHByZXR0aWVyLWlnbm9yZVxuXG5cbnZhciBjdXJyaWVkVGludCA9IC8qI19fUFVSRV9fKi9jdXJyeVxuLyogOjo8bnVtYmVyIHwgc3RyaW5nLCBzdHJpbmcsIHN0cmluZz4gKi9cbih0aW50KTtcblxuLyoqXG4gKiBEZWNyZWFzZXMgdGhlIG9wYWNpdHkgb2YgYSBjb2xvci4gSXRzIHJhbmdlIGZvciB0aGUgYW1vdW50IGlzIGJldHdlZW4gMCB0byAxLlxuICpcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudGl6ZSgwLjEsICcjZmZmJyk7XG4gKiAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50aXplKDAuMiwgJ2hzbCgwLCAwJSwgMTAwJSknKSxcbiAqICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnRpemUoJzAuNScsICdyZ2JhKDI1NSwgMCwgMCwgMC44KScpLFxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICBiYWNrZ3JvdW5kOiAke3RyYW5zcGFyZW50aXplKDAuMSwgJyNmZmYnKX07XG4gKiAgIGJhY2tncm91bmQ6ICR7dHJhbnNwYXJlbnRpemUoMC4yLCAnaHNsKDAsIDAlLCAxMDAlKScpfSxcbiAqICAgYmFja2dyb3VuZDogJHt0cmFuc3BhcmVudGl6ZSgnMC41JywgJ3JnYmEoMjU1LCAwLCAwLCAwLjgpJyl9LFxuICogYFxuICpcbiAqIC8vIENTUyBpbiBKUyBPdXRwdXRcbiAqXG4gKiBlbGVtZW50IHtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDI1NSwyNTUsMjU1LDAuOSlcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDI1NSwyNTUsMjU1LDAuOClcIjtcbiAqICAgYmFja2dyb3VuZDogXCJyZ2JhKDI1NSwwLDAsMC4zKVwiO1xuICogfVxuICovXG5cbmZ1bmN0aW9uIHRyYW5zcGFyZW50aXplKGFtb3VudCwgY29sb3IpIHtcbiAgaWYgKGNvbG9yID09PSAndHJhbnNwYXJlbnQnKSByZXR1cm4gY29sb3I7XG4gIHZhciBwYXJzZWRDb2xvciA9IHBhcnNlVG9SZ2IoY29sb3IpO1xuICB2YXIgYWxwaGEgPSB0eXBlb2YgcGFyc2VkQ29sb3IuYWxwaGEgPT09ICdudW1iZXInID8gcGFyc2VkQ29sb3IuYWxwaGEgOiAxO1xuXG4gIHZhciBjb2xvcldpdGhBbHBoYSA9IF9leHRlbmRzKHt9LCBwYXJzZWRDb2xvciwge1xuICAgIGFscGhhOiBndWFyZCgwLCAxLCAoYWxwaGEgKiAxMDAgLSBwYXJzZUZsb2F0KGFtb3VudCkgKiAxMDApIC8gMTAwKVxuICB9KTtcblxuICByZXR1cm4gcmdiYShjb2xvcldpdGhBbHBoYSk7XG59IC8vIHByZXR0aWVyLWlnbm9yZVxuXG5cbnZhciBjdXJyaWVkVHJhbnNwYXJlbnRpemUgPSAvKiNfX1BVUkVfXyovY3Vycnlcbi8qIDo6PG51bWJlciB8IHN0cmluZywgc3RyaW5nLCBzdHJpbmc+ICovXG4odHJhbnNwYXJlbnRpemUpO1xuXG4vKipcbiAqIFNob3J0aGFuZCBmb3IgZWFzaWx5IHNldHRpbmcgdGhlIGFuaW1hdGlvbiBwcm9wZXJ0eS4gQWxsb3dzIGVpdGhlciBtdWx0aXBsZSBhcnJheXMgd2l0aCBhbmltYXRpb25zXG4gKiBvciBhIHNpbmdsZSBhbmltYXRpb24gc3ByZWFkIG92ZXIgdGhlIGFyZ3VtZW50cy5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIC4uLmFuaW1hdGlvbihbJ3JvdGF0ZScsICcxcycsICdlYXNlLWluLW91dCddLCBbJ2NvbG9yY2hhbmdlJywgJzJzJ10pXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgICR7YW5pbWF0aW9uKFsncm90YXRlJywgJzFzJywgJ2Vhc2UtaW4tb3V0J10sIFsnY29sb3JjaGFuZ2UnLCAnMnMnXSl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGRpdiB7XG4gKiAgICdhbmltYXRpb24nOiAncm90YXRlIDFzIGVhc2UtaW4tb3V0LCBjb2xvcmNoYW5nZSAycydcbiAqIH1cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIC4uLmFuaW1hdGlvbigncm90YXRlJywgJzFzJywgJ2Vhc2UtaW4tb3V0JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHthbmltYXRpb24oJ3JvdGF0ZScsICcxcycsICdlYXNlLWluLW91dCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnYW5pbWF0aW9uJzogJ3JvdGF0ZSAxcyBlYXNlLWluLW91dCdcbiAqIH1cbiAqL1xuZnVuY3Rpb24gYW5pbWF0aW9uKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgLy8gQWxsb3cgc2luZ2xlIG9yIG11bHRpcGxlIGFuaW1hdGlvbnMgcGFzc2VkXG4gIHZhciBtdWx0aU1vZGUgPSBBcnJheS5pc0FycmF5KGFyZ3NbMF0pO1xuXG4gIGlmICghbXVsdGlNb2RlICYmIGFyZ3MubGVuZ3RoID4gOCkge1xuICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDY0KTtcbiAgfVxuXG4gIHZhciBjb2RlID0gYXJncy5tYXAoZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChtdWx0aU1vZGUgJiYgIUFycmF5LmlzQXJyYXkoYXJnKSB8fCAhbXVsdGlNb2RlICYmIEFycmF5LmlzQXJyYXkoYXJnKSkge1xuICAgICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNjUpO1xuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KGFyZykgJiYgYXJnLmxlbmd0aCA+IDgpIHtcbiAgICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDY2KTtcbiAgICB9XG5cbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShhcmcpID8gYXJnLmpvaW4oJyAnKSA6IGFyZztcbiAgfSkuam9pbignLCAnKTtcbiAgcmV0dXJuIHtcbiAgICBhbmltYXRpb246IGNvZGVcbiAgfTtcbn1cblxuLyoqXG4gKiBTaG9ydGhhbmQgdGhhdCBhY2NlcHRzIGFueSBudW1iZXIgb2YgYmFja2dyb3VuZEltYWdlIHZhbHVlcyBhcyBwYXJhbWV0ZXJzIGZvciBjcmVhdGluZyBhIHNpbmdsZSBiYWNrZ3JvdW5kIHN0YXRlbWVudC5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIC4uLmJhY2tncm91bmRJbWFnZXMoJ3VybChcIi9pbWFnZS9iYWNrZ3JvdW5kLmpwZ1wiKScsICdsaW5lYXItZ3JhZGllbnQocmVkLCBncmVlbiknKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke2JhY2tncm91bmRJbWFnZXMoJ3VybChcIi9pbWFnZS9iYWNrZ3JvdW5kLmpwZ1wiKScsICdsaW5lYXItZ3JhZGllbnQocmVkLCBncmVlbiknKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2IHtcbiAqICAgJ2JhY2tncm91bmRJbWFnZSc6ICd1cmwoXCIvaW1hZ2UvYmFja2dyb3VuZC5qcGdcIiksIGxpbmVhci1ncmFkaWVudChyZWQsIGdyZWVuKSdcbiAqIH1cbiAqL1xuZnVuY3Rpb24gYmFja2dyb3VuZEltYWdlcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHByb3BlcnRpZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgcHJvcGVydGllc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgYmFja2dyb3VuZEltYWdlOiBwcm9wZXJ0aWVzLmpvaW4oJywgJylcbiAgfTtcbn1cblxuLyoqXG4gKiBTaG9ydGhhbmQgdGhhdCBhY2NlcHRzIGFueSBudW1iZXIgb2YgYmFja2dyb3VuZCB2YWx1ZXMgYXMgcGFyYW1ldGVycyBmb3IgY3JlYXRpbmcgYSBzaW5nbGUgYmFja2dyb3VuZCBzdGF0ZW1lbnQuXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5iYWNrZ3JvdW5kcygndXJsKFwiL2ltYWdlL2JhY2tncm91bmQuanBnXCIpJywgJ2xpbmVhci1ncmFkaWVudChyZWQsIGdyZWVuKScsICdjZW50ZXIgbm8tcmVwZWF0JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtiYWNrZ3JvdW5kcygndXJsKFwiL2ltYWdlL2JhY2tncm91bmQuanBnXCIpJywgJ2xpbmVhci1ncmFkaWVudChyZWQsIGdyZWVuKScsICdjZW50ZXIgbm8tcmVwZWF0Jyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGRpdiB7XG4gKiAgICdiYWNrZ3JvdW5kJzogJ3VybChcIi9pbWFnZS9iYWNrZ3JvdW5kLmpwZ1wiKSwgbGluZWFyLWdyYWRpZW50KHJlZCwgZ3JlZW4pLCBjZW50ZXIgbm8tcmVwZWF0J1xuICogfVxuICovXG5mdW5jdGlvbiBiYWNrZ3JvdW5kcygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHByb3BlcnRpZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgcHJvcGVydGllc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgYmFja2dyb3VuZDogcHJvcGVydGllcy5qb2luKCcsICcpXG4gIH07XG59XG5cbnZhciBzaWRlTWFwID0gWyd0b3AnLCAncmlnaHQnLCAnYm90dG9tJywgJ2xlZnQnXTtcbi8qKlxuICogU2hvcnRoYW5kIGZvciB0aGUgYm9yZGVyIHByb3BlcnR5IHRoYXQgc3BsaXRzIG91dCBpbmRpdmlkdWFsIHByb3BlcnRpZXMgZm9yIHVzZSB3aXRoIHRvb2xzIGxpa2UgRmVsYSBhbmQgU3R5bGV0cm9uLiBBIHNpZGUga2V5d29yZCBjYW4gb3B0aW9uYWxseSBiZSBwYXNzZWQgdG8gdGFyZ2V0IG9ubHkgb25lIHNpZGUncyBib3JkZXIgcHJvcGVydGllcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5ib3JkZXIoJzFweCcsICdzb2xpZCcsICdyZWQnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke2JvcmRlcignMXB4JywgJ3NvbGlkJywgJ3JlZCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnYm9yZGVyQ29sb3InOiAncmVkJyxcbiAqICAgJ2JvcmRlclN0eWxlJzogJ3NvbGlkJyxcbiAqICAgJ2JvcmRlcldpZHRoJzogYDFweGAsXG4gKiB9XG4gKlxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5ib3JkZXIoJ3RvcCcsICcxcHgnLCAnc29saWQnLCAncmVkJylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtib3JkZXIoJ3RvcCcsICcxcHgnLCAnc29saWQnLCAncmVkJyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGRpdiB7XG4gKiAgICdib3JkZXJUb3BDb2xvcic6ICdyZWQnLFxuICogICAnYm9yZGVyVG9wU3R5bGUnOiAnc29saWQnLFxuICogICAnYm9yZGVyVG9wV2lkdGgnOiBgMXB4YCxcbiAqIH1cbiAqL1xuXG5mdW5jdGlvbiBib3JkZXIoc2lkZUtleXdvcmQpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHVlcyA9IG5ldyBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgdmFsdWVzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmICh0eXBlb2Ygc2lkZUtleXdvcmQgPT09ICdzdHJpbmcnICYmIHNpZGVNYXAuaW5kZXhPZihzaWRlS2V5d29yZCkgPj0gMCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgcmV0dXJuIF9yZWYgPSB7fSwgX3JlZltcImJvcmRlclwiICsgY2FwaXRhbGl6ZVN0cmluZyhzaWRlS2V5d29yZCkgKyBcIldpZHRoXCJdID0gdmFsdWVzWzBdLCBfcmVmW1wiYm9yZGVyXCIgKyBjYXBpdGFsaXplU3RyaW5nKHNpZGVLZXl3b3JkKSArIFwiU3R5bGVcIl0gPSB2YWx1ZXNbMV0sIF9yZWZbXCJib3JkZXJcIiArIGNhcGl0YWxpemVTdHJpbmcoc2lkZUtleXdvcmQpICsgXCJDb2xvclwiXSA9IHZhbHVlc1syXSwgX3JlZjtcbiAgfSBlbHNlIHtcbiAgICB2YWx1ZXMudW5zaGlmdChzaWRlS2V5d29yZCk7XG4gICAgcmV0dXJuIHtcbiAgICAgIGJvcmRlcldpZHRoOiB2YWx1ZXNbMF0sXG4gICAgICBib3JkZXJTdHlsZTogdmFsdWVzWzFdLFxuICAgICAgYm9yZGVyQ29sb3I6IHZhbHVlc1syXVxuICAgIH07XG4gIH1cbn1cblxuLyoqXG4gKiBTaG9ydGhhbmQgdGhhdCBhY2NlcHRzIHVwIHRvIGZvdXIgdmFsdWVzLCBpbmNsdWRpbmcgbnVsbCB0byBza2lwIGEgdmFsdWUsIGFuZCBtYXBzIHRoZW0gdG8gdGhlaXIgcmVzcGVjdGl2ZSBkaXJlY3Rpb25zLlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4uYm9yZGVyQ29sb3IoJ3JlZCcsICdncmVlbicsICdibHVlJywgJ3llbGxvdycpXG4gKiB9XG4gKlxuICogLy8gc3R5bGVkLWNvbXBvbmVudHMgdXNhZ2VcbiAqIGNvbnN0IGRpdiA9IHN0eWxlZC5kaXZgXG4gKiAgICR7Ym9yZGVyQ29sb3IoJ3JlZCcsICdncmVlbicsICdibHVlJywgJ3llbGxvdycpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnYm9yZGVyVG9wQ29sb3InOiAncmVkJyxcbiAqICAgJ2JvcmRlclJpZ2h0Q29sb3InOiAnZ3JlZW4nLFxuICogICAnYm9yZGVyQm90dG9tQ29sb3InOiAnYmx1ZScsXG4gKiAgICdib3JkZXJMZWZ0Q29sb3InOiAneWVsbG93J1xuICogfVxuICovXG5mdW5jdGlvbiBib3JkZXJDb2xvcigpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHVlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICB2YWx1ZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gZGlyZWN0aW9uYWxQcm9wZXJ0eS5hcHBseSh2b2lkIDAsIFsnYm9yZGVyQ29sb3InXS5jb25jYXQodmFsdWVzKSk7XG59XG5cbi8qKlxuICogU2hvcnRoYW5kIHRoYXQgYWNjZXB0cyBhIHZhbHVlIGZvciBzaWRlIGFuZCBhIHZhbHVlIGZvciByYWRpdXMgYW5kIGFwcGxpZXMgdGhlIHJhZGl1cyB2YWx1ZSB0byBib3RoIGNvcm5lcnMgb2YgdGhlIHNpZGUuXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5ib3JkZXJSYWRpdXMoJ3RvcCcsICc1cHgnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke2JvcmRlclJhZGl1cygndG9wJywgJzVweCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnYm9yZGVyVG9wUmlnaHRSYWRpdXMnOiAnNXB4JyxcbiAqICAgJ2JvcmRlclRvcExlZnRSYWRpdXMnOiAnNXB4JyxcbiAqIH1cbiAqL1xuZnVuY3Rpb24gYm9yZGVyUmFkaXVzKHNpZGUsIHJhZGl1cykge1xuICB2YXIgdXBwZXJjYXNlU2lkZSA9IGNhcGl0YWxpemVTdHJpbmcoc2lkZSk7XG5cbiAgaWYgKCFyYWRpdXMgJiYgcmFkaXVzICE9PSAwKSB7XG4gICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNjIpO1xuICB9XG5cbiAgaWYgKHVwcGVyY2FzZVNpZGUgPT09ICdUb3AnIHx8IHVwcGVyY2FzZVNpZGUgPT09ICdCb3R0b20nKSB7XG4gICAgdmFyIF9yZWY7XG5cbiAgICByZXR1cm4gX3JlZiA9IHt9LCBfcmVmW1wiYm9yZGVyXCIgKyB1cHBlcmNhc2VTaWRlICsgXCJSaWdodFJhZGl1c1wiXSA9IHJhZGl1cywgX3JlZltcImJvcmRlclwiICsgdXBwZXJjYXNlU2lkZSArIFwiTGVmdFJhZGl1c1wiXSA9IHJhZGl1cywgX3JlZjtcbiAgfVxuXG4gIGlmICh1cHBlcmNhc2VTaWRlID09PSAnTGVmdCcgfHwgdXBwZXJjYXNlU2lkZSA9PT0gJ1JpZ2h0Jykge1xuICAgIHZhciBfcmVmMjtcblxuICAgIHJldHVybiBfcmVmMiA9IHt9LCBfcmVmMltcImJvcmRlclRvcFwiICsgdXBwZXJjYXNlU2lkZSArIFwiUmFkaXVzXCJdID0gcmFkaXVzLCBfcmVmMltcImJvcmRlckJvdHRvbVwiICsgdXBwZXJjYXNlU2lkZSArIFwiUmFkaXVzXCJdID0gcmFkaXVzLCBfcmVmMjtcbiAgfVxuXG4gIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDYzKTtcbn1cblxuLyoqXG4gKiBTaG9ydGhhbmQgdGhhdCBhY2NlcHRzIHVwIHRvIGZvdXIgdmFsdWVzLCBpbmNsdWRpbmcgbnVsbCB0byBza2lwIGEgdmFsdWUsIGFuZCBtYXBzIHRoZW0gdG8gdGhlaXIgcmVzcGVjdGl2ZSBkaXJlY3Rpb25zLlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4uYm9yZGVyU3R5bGUoJ3NvbGlkJywgJ2Rhc2hlZCcsICdkb3R0ZWQnLCAnZG91YmxlJylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtib3JkZXJTdHlsZSgnc29saWQnLCAnZGFzaGVkJywgJ2RvdHRlZCcsICdkb3VibGUnKX1cbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2IHtcbiAqICAgJ2JvcmRlclRvcFN0eWxlJzogJ3NvbGlkJyxcbiAqICAgJ2JvcmRlclJpZ2h0U3R5bGUnOiAnZGFzaGVkJyxcbiAqICAgJ2JvcmRlckJvdHRvbVN0eWxlJzogJ2RvdHRlZCcsXG4gKiAgICdib3JkZXJMZWZ0U3R5bGUnOiAnZG91YmxlJ1xuICogfVxuICovXG5mdW5jdGlvbiBib3JkZXJTdHlsZSgpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHVlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICB2YWx1ZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gZGlyZWN0aW9uYWxQcm9wZXJ0eS5hcHBseSh2b2lkIDAsIFsnYm9yZGVyU3R5bGUnXS5jb25jYXQodmFsdWVzKSk7XG59XG5cbi8qKlxuICogU2hvcnRoYW5kIHRoYXQgYWNjZXB0cyB1cCB0byBmb3VyIHZhbHVlcywgaW5jbHVkaW5nIG51bGwgdG8gc2tpcCBhIHZhbHVlLCBhbmQgbWFwcyB0aGVtIHRvIHRoZWlyIHJlc3BlY3RpdmUgZGlyZWN0aW9ucy5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIC4uLmJvcmRlcldpZHRoKCcxMnB4JywgJzI0cHgnLCAnMzZweCcsICc0OHB4JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtib3JkZXJXaWR0aCgnMTJweCcsICcyNHB4JywgJzM2cHgnLCAnNDhweCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnYm9yZGVyVG9wV2lkdGgnOiAnMTJweCcsXG4gKiAgICdib3JkZXJSaWdodFdpZHRoJzogJzI0cHgnLFxuICogICAnYm9yZGVyQm90dG9tV2lkdGgnOiAnMzZweCcsXG4gKiAgICdib3JkZXJMZWZ0V2lkdGgnOiAnNDhweCdcbiAqIH1cbiAqL1xuZnVuY3Rpb24gYm9yZGVyV2lkdGgoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCB2YWx1ZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgdmFsdWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGRpcmVjdGlvbmFsUHJvcGVydHkuYXBwbHkodm9pZCAwLCBbJ2JvcmRlcldpZHRoJ10uY29uY2F0KHZhbHVlcykpO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZVNlbGVjdG9ycyh0ZW1wbGF0ZSwgc3RhdGUpIHtcbiAgdmFyIHN0YXRlU3VmZml4ID0gc3RhdGUgPyBcIjpcIiArIHN0YXRlIDogJyc7XG4gIHJldHVybiB0ZW1wbGF0ZShzdGF0ZVN1ZmZpeCk7XG59XG4vKipcbiAqIEZ1bmN0aW9uIGhlbHBlciB0aGF0IGFkZHMgYW4gYXJyYXkgb2Ygc3RhdGVzIHRvIGEgdGVtcGxhdGUgb2Ygc2VsZWN0b3JzLiBVc2VkIGluIHRleHRJbnB1dHMgYW5kIGJ1dHRvbnMuXG4gKiBAcHJpdmF0ZVxuICovXG5cblxuZnVuY3Rpb24gc3RhdGVmdWxTZWxlY3RvcnMoc3RhdGVzLCB0ZW1wbGF0ZSwgc3RhdGVNYXApIHtcbiAgaWYgKCF0ZW1wbGF0ZSkgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNjcpO1xuICBpZiAoc3RhdGVzLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGdlbmVyYXRlU2VsZWN0b3JzKHRlbXBsYXRlLCBudWxsKTtcbiAgdmFyIHNlbGVjdG9ycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3RhdGVzLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgaWYgKHN0YXRlTWFwICYmIHN0YXRlTWFwLmluZGV4T2Yoc3RhdGVzW2ldKSA8IDApIHtcbiAgICAgIHRocm93IG5ldyBQb2xpc2hlZEVycm9yKDY4KTtcbiAgICB9XG5cbiAgICBzZWxlY3RvcnMucHVzaChnZW5lcmF0ZVNlbGVjdG9ycyh0ZW1wbGF0ZSwgc3RhdGVzW2ldKSk7XG4gIH1cblxuICBzZWxlY3RvcnMgPSBzZWxlY3RvcnMuam9pbignLCcpO1xuICByZXR1cm4gc2VsZWN0b3JzO1xufVxuXG52YXIgc3RhdGVNYXAgPSBbdW5kZWZpbmVkLCBudWxsLCAnYWN0aXZlJywgJ2ZvY3VzJywgJ2hvdmVyJ107XG5cbmZ1bmN0aW9uIHRlbXBsYXRlKHN0YXRlKSB7XG4gIHJldHVybiBcImJ1dHRvblwiICsgc3RhdGUgKyBcIixcXG4gIGlucHV0W3R5cGU9XFxcImJ1dHRvblxcXCJdXCIgKyBzdGF0ZSArIFwiLFxcbiAgaW5wdXRbdHlwZT1cXFwicmVzZXRcXFwiXVwiICsgc3RhdGUgKyBcIixcXG4gIGlucHV0W3R5cGU9XFxcInN1Ym1pdFxcXCJdXCIgKyBzdGF0ZTtcbn1cbi8qKlxuICogUG9wdWxhdGVzIHNlbGVjdG9ycyB0aGF0IHRhcmdldCBhbGwgYnV0dG9ucy4gWW91IGNhbiBwYXNzIG9wdGlvbmFsIHN0YXRlcyB0byBhcHBlbmQgdG8gdGhlIHNlbGVjdG9ycy5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIFtidXR0b25zKCdhY3RpdmUnKV06IHtcbiAqICAgICAnYm9yZGVyJzogJ25vbmUnXG4gKiAgIH1cbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgPiAke2J1dHRvbnMoJ2FjdGl2ZScpfSB7XG4gKiAgICAgYm9yZGVyOiBub25lO1xuICogICB9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqICAnYnV0dG9uOmFjdGl2ZSxcbiAqICAnaW5wdXRbdHlwZT1cImJ1dHRvblwiXTphY3RpdmUsXG4gKiAgJ2lucHV0W3R5cGU9XFxcInJlc2V0XFxcIl06YWN0aXZlLFxuICogICdpbnB1dFt0eXBlPVxcXCJzdWJtaXRcXFwiXTphY3RpdmU6IHtcbiAqICAgJ2JvcmRlcic6ICdub25lJ1xuICogfVxuICovXG5cblxuZnVuY3Rpb24gYnV0dG9ucygpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHN0YXRlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBzdGF0ZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gc3RhdGVmdWxTZWxlY3RvcnMoc3RhdGVzLCB0ZW1wbGF0ZSwgc3RhdGVNYXApO1xufVxuXG4vKipcbiAqIFNob3J0aGFuZCB0aGF0IGFjY2VwdHMgdXAgdG8gZm91ciB2YWx1ZXMsIGluY2x1ZGluZyBudWxsIHRvIHNraXAgYSB2YWx1ZSwgYW5kIG1hcHMgdGhlbSB0byB0aGVpciByZXNwZWN0aXZlIGRpcmVjdGlvbnMuXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5tYXJnaW4oJzEycHgnLCAnMjRweCcsICczNnB4JywgJzQ4cHgnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke21hcmdpbignMTJweCcsICcyNHB4JywgJzM2cHgnLCAnNDhweCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnbWFyZ2luVG9wJzogJzEycHgnLFxuICogICAnbWFyZ2luUmlnaHQnOiAnMjRweCcsXG4gKiAgICdtYXJnaW5Cb3R0b20nOiAnMzZweCcsXG4gKiAgICdtYXJnaW5MZWZ0JzogJzQ4cHgnXG4gKiB9XG4gKi9cbmZ1bmN0aW9uIG1hcmdpbigpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHZhbHVlcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICB2YWx1ZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gZGlyZWN0aW9uYWxQcm9wZXJ0eS5hcHBseSh2b2lkIDAsIFsnbWFyZ2luJ10uY29uY2F0KHZhbHVlcykpO1xufVxuXG4vKipcbiAqIFNob3J0aGFuZCB0aGF0IGFjY2VwdHMgdXAgdG8gZm91ciB2YWx1ZXMsIGluY2x1ZGluZyBudWxsIHRvIHNraXAgYSB2YWx1ZSwgYW5kIG1hcHMgdGhlbSB0byB0aGVpciByZXNwZWN0aXZlIGRpcmVjdGlvbnMuXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi5wYWRkaW5nKCcxMnB4JywgJzI0cHgnLCAnMzZweCcsICc0OHB4JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtwYWRkaW5nKCcxMnB4JywgJzI0cHgnLCAnMzZweCcsICc0OHB4Jyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGRpdiB7XG4gKiAgICdwYWRkaW5nVG9wJzogJzEycHgnLFxuICogICAncGFkZGluZ1JpZ2h0JzogJzI0cHgnLFxuICogICAncGFkZGluZ0JvdHRvbSc6ICczNnB4JyxcbiAqICAgJ3BhZGRpbmdMZWZ0JzogJzQ4cHgnXG4gKiB9XG4gKi9cbmZ1bmN0aW9uIHBhZGRpbmcoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCB2YWx1ZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgdmFsdWVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIGRpcmVjdGlvbmFsUHJvcGVydHkuYXBwbHkodm9pZCAwLCBbJ3BhZGRpbmcnXS5jb25jYXQodmFsdWVzKSk7XG59XG5cbnZhciBwb3NpdGlvbk1hcCQxID0gWydhYnNvbHV0ZScsICdmaXhlZCcsICdyZWxhdGl2ZScsICdzdGF0aWMnLCAnc3RpY2t5J107XG4vKipcbiAqIFNob3J0aGFuZCBhY2NlcHRzIHVwIHRvIGZpdmUgdmFsdWVzLCBpbmNsdWRpbmcgbnVsbCB0byBza2lwIGEgdmFsdWUsIGFuZCBtYXBzIHRoZW0gdG8gdGhlaXIgcmVzcGVjdGl2ZSBkaXJlY3Rpb25zLiBUaGUgZmlyc3QgdmFsdWUgY2FuIG9wdGlvbmFsbHkgYmUgYSBwb3NpdGlvbiBrZXl3b3JkLlxuICogQGV4YW1wbGVcbiAqIC8vIFN0eWxlcyBhcyBvYmplY3QgdXNhZ2VcbiAqIGNvbnN0IHN0eWxlcyA9IHtcbiAqICAgLi4ucG9zaXRpb24oJzEycHgnLCAnMjRweCcsICczNnB4JywgJzQ4cHgnKVxuICogfVxuICpcbiAqIC8vIHN0eWxlZC1jb21wb25lbnRzIHVzYWdlXG4gKiBjb25zdCBkaXYgPSBzdHlsZWQuZGl2YFxuICogICAke3Bvc2l0aW9uKCcxMnB4JywgJzI0cHgnLCAnMzZweCcsICc0OHB4Jyl9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGFzIEpTIE91dHB1dFxuICpcbiAqIGRpdiB7XG4gKiAgICd0b3AnOiAnMTJweCcsXG4gKiAgICdyaWdodCc6ICcyNHB4JyxcbiAqICAgJ2JvdHRvbSc6ICczNnB4JyxcbiAqICAgJ2xlZnQnOiAnNDhweCdcbiAqIH1cbiAqXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIC4uLnBvc2l0aW9uKCdhYnNvbHV0ZScsICcxMnB4JywgJzI0cHgnLCAnMzZweCcsICc0OHB4JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtwb3NpdGlvbignYWJzb2x1dGUnLCAnMTJweCcsICcyNHB4JywgJzM2cHgnLCAnNDhweCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAncG9zaXRpb24nOiAnYWJzb2x1dGUnLFxuICogICAndG9wJzogJzEycHgnLFxuICogICAncmlnaHQnOiAnMjRweCcsXG4gKiAgICdib3R0b20nOiAnMzZweCcsXG4gKiAgICdsZWZ0JzogJzQ4cHgnXG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gcG9zaXRpb24oZmlyc3RWYWx1ZSkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgdmFsdWVzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICB2YWx1ZXNbX2tleSAtIDFdID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgaWYgKHBvc2l0aW9uTWFwJDEuaW5kZXhPZihmaXJzdFZhbHVlKSA+PSAwICYmIGZpcnN0VmFsdWUpIHtcbiAgICByZXR1cm4gX2V4dGVuZHMoe30sIGRpcmVjdGlvbmFsUHJvcGVydHkuYXBwbHkodm9pZCAwLCBbJyddLmNvbmNhdCh2YWx1ZXMpKSwge1xuICAgICAgcG9zaXRpb246IGZpcnN0VmFsdWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZGlyZWN0aW9uYWxQcm9wZXJ0eS5hcHBseSh2b2lkIDAsIFsnJywgZmlyc3RWYWx1ZV0uY29uY2F0KHZhbHVlcykpO1xuICB9XG59XG5cbi8qKlxuICogU2hvcnRoYW5kIHRvIHNldCB0aGUgaGVpZ2h0IGFuZCB3aWR0aCBwcm9wZXJ0aWVzIGluIGEgc2luZ2xlIHN0YXRlbWVudC5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIC4uLnNpemUoJzMwMHB4JywgJzI1MHB4JylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHtzaXplKCczMDBweCcsICcyNTBweCcpfVxuICogYFxuICpcbiAqIC8vIENTUyBhcyBKUyBPdXRwdXRcbiAqXG4gKiBkaXYge1xuICogICAnaGVpZ2h0JzogJzMwMHB4JyxcbiAqICAgJ3dpZHRoJzogJzI1MHB4JyxcbiAqIH1cbiAqL1xuZnVuY3Rpb24gc2l6ZShoZWlnaHQsIHdpZHRoKSB7XG4gIGlmICh3aWR0aCA9PT0gdm9pZCAwKSB7XG4gICAgd2lkdGggPSBoZWlnaHQ7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGhlaWdodDogaGVpZ2h0LFxuICAgIHdpZHRoOiB3aWR0aFxuICB9O1xufVxuXG52YXIgc3RhdGVNYXAkMSA9IFt1bmRlZmluZWQsIG51bGwsICdhY3RpdmUnLCAnZm9jdXMnLCAnaG92ZXInXTtcblxuZnVuY3Rpb24gdGVtcGxhdGUkMShzdGF0ZSkge1xuICByZXR1cm4gXCJpbnB1dFt0eXBlPVxcXCJjb2xvclxcXCJdXCIgKyBzdGF0ZSArIFwiLFxcbiAgICBpbnB1dFt0eXBlPVxcXCJkYXRlXFxcIl1cIiArIHN0YXRlICsgXCIsXFxuICAgIGlucHV0W3R5cGU9XFxcImRhdGV0aW1lXFxcIl1cIiArIHN0YXRlICsgXCIsXFxuICAgIGlucHV0W3R5cGU9XFxcImRhdGV0aW1lLWxvY2FsXFxcIl1cIiArIHN0YXRlICsgXCIsXFxuICAgIGlucHV0W3R5cGU9XFxcImVtYWlsXFxcIl1cIiArIHN0YXRlICsgXCIsXFxuICAgIGlucHV0W3R5cGU9XFxcIm1vbnRoXFxcIl1cIiArIHN0YXRlICsgXCIsXFxuICAgIGlucHV0W3R5cGU9XFxcIm51bWJlclxcXCJdXCIgKyBzdGF0ZSArIFwiLFxcbiAgICBpbnB1dFt0eXBlPVxcXCJwYXNzd29yZFxcXCJdXCIgKyBzdGF0ZSArIFwiLFxcbiAgICBpbnB1dFt0eXBlPVxcXCJzZWFyY2hcXFwiXVwiICsgc3RhdGUgKyBcIixcXG4gICAgaW5wdXRbdHlwZT1cXFwidGVsXFxcIl1cIiArIHN0YXRlICsgXCIsXFxuICAgIGlucHV0W3R5cGU9XFxcInRleHRcXFwiXVwiICsgc3RhdGUgKyBcIixcXG4gICAgaW5wdXRbdHlwZT1cXFwidGltZVxcXCJdXCIgKyBzdGF0ZSArIFwiLFxcbiAgICBpbnB1dFt0eXBlPVxcXCJ1cmxcXFwiXVwiICsgc3RhdGUgKyBcIixcXG4gICAgaW5wdXRbdHlwZT1cXFwid2Vla1xcXCJdXCIgKyBzdGF0ZSArIFwiLFxcbiAgICBpbnB1dDpub3QoW3R5cGVdKVwiICsgc3RhdGUgKyBcIixcXG4gICAgdGV4dGFyZWFcIiArIHN0YXRlO1xufVxuLyoqXG4gKiBQb3B1bGF0ZXMgc2VsZWN0b3JzIHRoYXQgdGFyZ2V0IGFsbCB0ZXh0IGlucHV0cy4gWW91IGNhbiBwYXNzIG9wdGlvbmFsIHN0YXRlcyB0byBhcHBlbmQgdG8gdGhlIHNlbGVjdG9ycy5cbiAqIEBleGFtcGxlXG4gKiAvLyBTdHlsZXMgYXMgb2JqZWN0IHVzYWdlXG4gKiBjb25zdCBzdHlsZXMgPSB7XG4gKiAgIFt0ZXh0SW5wdXRzKCdhY3RpdmUnKV06IHtcbiAqICAgICAnYm9yZGVyJzogJ25vbmUnXG4gKiAgIH1cbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgPiAke3RleHRJbnB1dHMoJ2FjdGl2ZScpfSB7XG4gKiAgICAgYm9yZGVyOiBub25lO1xuICogICB9XG4gKiBgXG4gKlxuICogLy8gQ1NTIGluIEpTIE91dHB1dFxuICpcbiAqICAnaW5wdXRbdHlwZT1cImNvbG9yXCJdOmFjdGl2ZSxcbiAqICBpbnB1dFt0eXBlPVwiZGF0ZVwiXTphY3RpdmUsXG4gKiAgaW5wdXRbdHlwZT1cImRhdGV0aW1lXCJdOmFjdGl2ZSxcbiAqICBpbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl06YWN0aXZlLFxuICogIGlucHV0W3R5cGU9XCJlbWFpbFwiXTphY3RpdmUsXG4gKiAgaW5wdXRbdHlwZT1cIm1vbnRoXCJdOmFjdGl2ZSxcbiAqICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdOmFjdGl2ZSxcbiAqICBpbnB1dFt0eXBlPVwicGFzc3dvcmRcIl06YWN0aXZlLFxuICogIGlucHV0W3R5cGU9XCJzZWFyY2hcIl06YWN0aXZlLFxuICogIGlucHV0W3R5cGU9XCJ0ZWxcIl06YWN0aXZlLFxuICogIGlucHV0W3R5cGU9XCJ0ZXh0XCJdOmFjdGl2ZSxcbiAqICBpbnB1dFt0eXBlPVwidGltZVwiXTphY3RpdmUsXG4gKiAgaW5wdXRbdHlwZT1cInVybFwiXTphY3RpdmUsXG4gKiAgaW5wdXRbdHlwZT1cIndlZWtcIl06YWN0aXZlLFxuICogIGlucHV0Om5vdChbdHlwZV0pOmFjdGl2ZSxcbiAqICB0ZXh0YXJlYTphY3RpdmUnOiB7XG4gKiAgICdib3JkZXInOiAnbm9uZSdcbiAqIH1cbiAqL1xuXG5cbmZ1bmN0aW9uIHRleHRJbnB1dHMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBzdGF0ZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgc3RhdGVzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICB9XG5cbiAgcmV0dXJuIHN0YXRlZnVsU2VsZWN0b3JzKHN0YXRlcywgdGVtcGxhdGUkMSwgc3RhdGVNYXAkMSk7XG59XG5cbi8qKlxuICogQWNjZXB0cyBhbnkgbnVtYmVyIG9mIHRyYW5zaXRpb24gdmFsdWVzIGFzIHBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgc2luZ2xlIHRyYW5zaXRpb24gc3RhdGVtZW50LiBZb3UgbWF5IGFsc28gcGFzcyBhbiBhcnJheSBvZiBwcm9wZXJ0aWVzIGFzIHRoZSBmaXJzdCBwYXJhbWV0ZXIgdGhhdCB5b3Ugd291bGQgbGlrZSB0byBhcHBseSB0aGUgc2FtZSB0cmFuc2l0aW9uIHZhbHVlcyB0byAoc2Vjb25kIHBhcmFtZXRlcikuXG4gKiBAZXhhbXBsZVxuICogLy8gU3R5bGVzIGFzIG9iamVjdCB1c2FnZVxuICogY29uc3Qgc3R5bGVzID0ge1xuICogICAuLi50cmFuc2l0aW9ucygnb3BhY2l0eSAxLjBzIGVhc2UtaW4gMHMnLCAnd2lkdGggMi4wcyBlYXNlLWluIDJzJyksXG4gKiAgIC4uLnRyYW5zaXRpb25zKFsnY29sb3InLCAnYmFja2dyb3VuZC1jb2xvciddLCAnMi4wcyBlYXNlLWluIDJzJylcbiAqIH1cbiAqXG4gKiAvLyBzdHlsZWQtY29tcG9uZW50cyB1c2FnZVxuICogY29uc3QgZGl2ID0gc3R5bGVkLmRpdmBcbiAqICAgJHt0cmFuc2l0aW9ucygnb3BhY2l0eSAxLjBzIGVhc2UtaW4gMHMnLCAnd2lkdGggMi4wcyBlYXNlLWluIDJzJyl9O1xuICogICAke3RyYW5zaXRpb25zKFsnY29sb3InLCAnYmFja2dyb3VuZC1jb2xvciddLCAnMi4wcyBlYXNlLWluIDJzJyksfTtcbiAqIGBcbiAqXG4gKiAvLyBDU1MgYXMgSlMgT3V0cHV0XG4gKlxuICogZGl2IHtcbiAqICAgJ3RyYW5zaXRpb24nOiAnb3BhY2l0eSAxLjBzIGVhc2UtaW4gMHMsIHdpZHRoIDIuMHMgZWFzZS1pbiAycydcbiAqICAgJ3RyYW5zaXRpb24nOiAnY29sb3IgMi4wcyBlYXNlLWluIDJzLCBiYWNrZ3JvdW5kLWNvbG9yIDIuMHMgZWFzZS1pbiAycycsXG4gKiB9XG4gKi9cblxuZnVuY3Rpb24gdHJhbnNpdGlvbnMoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBwcm9wZXJ0aWVzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgIHByb3BlcnRpZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICBpZiAoQXJyYXkuaXNBcnJheShwcm9wZXJ0aWVzWzBdKSAmJiBwcm9wZXJ0aWVzLmxlbmd0aCA9PT0gMikge1xuICAgIHZhciB2YWx1ZSA9IHByb3BlcnRpZXNbMV07XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFBvbGlzaGVkRXJyb3IoNjEpO1xuICAgIH1cblxuICAgIHZhciB0cmFuc2l0aW9uc1N0cmluZyA9IHByb3BlcnRpZXNbMF0ubWFwKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgcmV0dXJuIHByb3BlcnR5ICsgXCIgXCIgKyB2YWx1ZTtcbiAgICB9KS5qb2luKCcsICcpO1xuICAgIHJldHVybiB7XG4gICAgICB0cmFuc2l0aW9uOiB0cmFuc2l0aW9uc1N0cmluZ1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRyYW5zaXRpb246IHByb3BlcnRpZXMuam9pbignLCAnKVxuICAgIH07XG4gIH1cbn1cblxuZXhwb3J0IHsgY3VycmllZEFkanVzdEh1ZSBhcyBhZGp1c3RIdWUsIGFuaW1hdGlvbiwgYmFja2dyb3VuZEltYWdlcywgYmFja2dyb3VuZHMsIGJldHdlZW4sIGJvcmRlciwgYm9yZGVyQ29sb3IsIGJvcmRlclJhZGl1cywgYm9yZGVyU3R5bGUsIGJvcmRlcldpZHRoLCBidXR0b25zLCBjbGVhckZpeCwgY29tcGxlbWVudCwgY292ZXIsIGNzc1ZhciwgY3VycmllZERhcmtlbiBhcyBkYXJrZW4sIGN1cnJpZWREZXNhdHVyYXRlIGFzIGRlc2F0dXJhdGUsIGRpcmVjdGlvbmFsUHJvcGVydHksIGVsbGlwc2lzLCBlbSwgZmx1aWRSYW5nZSwgZm9udEZhY2UsIGdldENvbnRyYXN0LCBnZXRMdW1pbmFuY2UsIGdldFZhbHVlQW5kVW5pdCwgZ3JheXNjYWxlLCBoaURQSSwgaGlkZVRleHQsIGhpZGVWaXN1YWxseSwgaHNsLCBoc2xUb0NvbG9yU3RyaW5nLCBoc2xhLCBpbnZlcnQsIGN1cnJpZWRMaWdodGVuIGFzIGxpZ2h0ZW4sIGxpbmVhckdyYWRpZW50LCBtYXJnaW4sIG1hdGgsIG1lZXRzQ29udHJhc3RHdWlkZWxpbmVzLCBjdXJyaWVkTWl4IGFzIG1peCwgbW9kdWxhclNjYWxlLCBub3JtYWxpemUsIGN1cnJpZWRPcGFjaWZ5IGFzIG9wYWNpZnksIHBhZGRpbmcsIHBhcnNlVG9Ic2wsIHBhcnNlVG9SZ2IsIHBvc2l0aW9uLCByYWRpYWxHcmFkaWVudCwgcmVhZGFibGVDb2xvciwgcmVtLCByZXRpbmFJbWFnZSwgcmdiLCByZ2JUb0NvbG9yU3RyaW5nLCByZ2JhLCBjdXJyaWVkU2F0dXJhdGUgYXMgc2F0dXJhdGUsIGN1cnJpZWRTZXRIdWUgYXMgc2V0SHVlLCBjdXJyaWVkU2V0TGlnaHRuZXNzIGFzIHNldExpZ2h0bmVzcywgY3VycmllZFNldFNhdHVyYXRpb24gYXMgc2V0U2F0dXJhdGlvbiwgY3VycmllZFNoYWRlIGFzIHNoYWRlLCBzaXplLCBzdHJpcFVuaXQsIHRleHRJbnB1dHMsIHRpbWluZ0Z1bmN0aW9ucywgY3VycmllZFRpbnQgYXMgdGludCwgdG9Db2xvclN0cmluZywgdHJhbnNpdGlvbnMsIGN1cnJpZWRUcmFuc3BhcmVudGl6ZSBhcyB0cmFuc3BhcmVudGl6ZSwgdHJpYW5nbGUsIHdvcmRXcmFwIH07XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImltcG9ydCB7Y3NzfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcclxuaW1wb3J0IHtnZXRDb2xvcn0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcbmltcG9ydCB7bGlnaHRlbn0gZnJvbSAncG9saXNoZWQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IFNlYXJjaEZvcm0gPSBjc3NgXHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgXHJcbiAgICA+IGlucHV0IHtcclxuICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDJweDtcclxuICAgICAgICBjb2xvcjogaW5pdGlhbDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgPiBidXR0b24ge1xyXG4gICAgICAgIGNvbG9yOiBpbml0aWFsO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IC5mb3JtLXRvYXN0IHtcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCA1cHg7ICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICA+IC50b2FzdC1oZWFkZXIge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA6YmVmb3JlIHtcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEycHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgID4gLnRvYXN0LWJvZHkge1xyXG4gICAgICAgICAgICBjb2xvcjogaW5pdGlhbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnNlYXJjaC1idXR0b24ge1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBsaWdodGVuKDAuMiwgZ2V0Q29sb3IoJ3ByaW1hcnknKShwcm9wcykpfTtcclxuICAgICAgICBcclxuICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgICAgICB9IFxyXG4gICAgICAgIFxyXG4gICAgICAgICY6YWN0aXZlIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHsocHJvcHMpID0+IGxpZ2h0ZW4oMC4yLCBnZXRDb2xvcigncHJpbWFyeScpKHByb3BzKSl9O1xyXG4gICAgICAgIH0gXHJcbiAgICB9XHJcbiAgICAgICAgXHJcbmA7XHJcbiIsImltcG9ydCB7IHVzZU1lbW8sIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNb3VudGVkIGZyb20gJy4vdXNlTW91bnRlZCc7XG5pbXBvcnQgdXNlV2lsbFVubW91bnQgZnJvbSAnLi91c2VXaWxsVW5tb3VudCc7XG4vKlxuICogQnJvd3NlcnMgaW5jbHVkaW5nIEludGVybmV0IEV4cGxvcmVyLCBDaHJvbWUsIFNhZmFyaSwgYW5kIEZpcmVmb3ggc3RvcmUgdGhlXG4gKiBkZWxheSBhcyBhIDMyLWJpdCBzaWduZWQgaW50ZWdlciBpbnRlcm5hbGx5LiBUaGlzIGNhdXNlcyBhbiBpbnRlZ2VyIG92ZXJmbG93XG4gKiB3aGVuIHVzaW5nIGRlbGF5cyBsYXJnZXIgdGhhbiAyLDE0Nyw0ODMsNjQ3IG1zIChhYm91dCAyNC44IGRheXMpLFxuICogcmVzdWx0aW5nIGluIHRoZSB0aW1lb3V0IGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5LlxuICpcbiAqIHZpYTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL1dpbmRvd09yV29ya2VyR2xvYmFsU2NvcGUvc2V0VGltZW91dFxuICovXG5cbnZhciBNQVhfREVMQVlfTVMgPSBNYXRoLnBvdygyLCAzMSkgLSAxO1xuXG5mdW5jdGlvbiBzZXRDaGFpbmVkVGltZW91dChoYW5kbGVSZWYsIGZuLCB0aW1lb3V0QXRNcykge1xuICB2YXIgZGVsYXlNcyA9IHRpbWVvdXRBdE1zIC0gRGF0ZS5ub3coKTtcbiAgaGFuZGxlUmVmLmN1cnJlbnQgPSBkZWxheU1zIDw9IE1BWF9ERUxBWV9NUyA/IHNldFRpbWVvdXQoZm4sIGRlbGF5TXMpIDogc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHNldENoYWluZWRUaW1lb3V0KGhhbmRsZVJlZiwgZm4sIHRpbWVvdXRBdE1zKTtcbiAgfSwgTUFYX0RFTEFZX01TKTtcbn1cbi8qKlxuICogUmV0dXJucyBhIGNvbnRyb2xsZXIgb2JqZWN0IGZvciBzZXR0aW5nIGEgdGltZW91dCB0aGF0IGlzIHByb3Blcmx5IGNsZWFuZWQgdXBcbiAqIG9uY2UgdGhlIGNvbXBvbmVudCB1bm1vdW50cy4gTmV3IHRpbWVvdXRzIGNhbmNlbCBhbmQgcmVwbGFjZSBleGlzdGluZyBvbmVzLlxuICovXG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdXNlVGltZW91dCgpIHtcbiAgdmFyIGlzTW91bnRlZCA9IHVzZU1vdW50ZWQoKTsgLy8gdHlwZXMgYXJlIGNvbmZ1c2VkIGJldHdlZW4gbm9kZSBhbmQgd2ViIGhlcmUgSURLXG5cbiAgdmFyIGhhbmRsZVJlZiA9IHVzZVJlZigpO1xuICB1c2VXaWxsVW5tb3VudChmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNsZWFyVGltZW91dChoYW5kbGVSZWYuY3VycmVudCk7XG4gIH0pO1xuICByZXR1cm4gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGNsZWFyID0gZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KGhhbmRsZVJlZi5jdXJyZW50KTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gc2V0KGZuLCBkZWxheU1zKSB7XG4gICAgICBpZiAoZGVsYXlNcyA9PT0gdm9pZCAwKSB7XG4gICAgICAgIGRlbGF5TXMgPSAwO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTW91bnRlZCgpKSByZXR1cm47XG4gICAgICBjbGVhcigpO1xuXG4gICAgICBpZiAoZGVsYXlNcyA8PSBNQVhfREVMQVlfTVMpIHtcbiAgICAgICAgLy8gRm9yIHNpbXBsaWNpdHksIGlmIHRoZSB0aW1lb3V0IGlzIHNob3J0LCBqdXN0IHNldCBhIG5vcm1hbCB0aW1lb3V0LlxuICAgICAgICBoYW5kbGVSZWYuY3VycmVudCA9IHNldFRpbWVvdXQoZm4sIGRlbGF5TXMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0Q2hhaW5lZFRpbWVvdXQoaGFuZGxlUmVmLCBmbiwgRGF0ZS5ub3coKSArIGRlbGF5TXMpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICBzZXQ6IHNldCxcbiAgICAgIGNsZWFyOiBjbGVhclxuICAgIH07XG4gIH0sIFtdKTtcbn0iLCJpbXBvcnQgY3NzIGZyb20gJy4vY3NzJztcbmltcG9ydCBsaXN0ZW4gZnJvbSAnLi9saXN0ZW4nO1xuXG5mdW5jdGlvbiBwYXJzZUR1cmF0aW9uKG5vZGUpIHtcbiAgdmFyIHN0ciA9IGNzcyhub2RlLCAndHJhbnNpdGlvbkR1cmF0aW9uJykgfHwgJyc7XG4gIHZhciBtdWx0ID0gc3RyLmluZGV4T2YoJ21zJykgPT09IC0xID8gMTAwMCA6IDE7XG4gIHJldHVybiBwYXJzZUZsb2F0KHN0cikgKiBtdWx0O1xufVxuXG5mdW5jdGlvbiB0cmlnZ2VyVHJhbnNpdGlvbkVuZChlbGVtZW50KSB7XG4gIHZhciBldnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnSFRNTEV2ZW50cycpO1xuICBldnQuaW5pdEV2ZW50KCd0cmFuc2l0aW9uZW5kJywgdHJ1ZSwgdHJ1ZSk7XG4gIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChldnQpO1xufVxuXG5mdW5jdGlvbiBlbXVsYXRlVHJhbnNpdGlvbkVuZChlbGVtZW50LCBkdXJhdGlvbiwgcGFkZGluZykge1xuICBpZiAocGFkZGluZyA9PT0gdm9pZCAwKSB7XG4gICAgcGFkZGluZyA9IDU7XG4gIH1cblxuICB2YXIgY2FsbGVkID0gZmFsc2U7XG4gIHZhciBoYW5kbGUgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoIWNhbGxlZCkgdHJpZ2dlclRyYW5zaXRpb25FbmQoZWxlbWVudCk7XG4gIH0sIGR1cmF0aW9uICsgcGFkZGluZyk7XG4gIHZhciByZW1vdmUgPSBsaXN0ZW4oZWxlbWVudCwgJ3RyYW5zaXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgY2FsbGVkID0gdHJ1ZTtcbiAgfSwge1xuICAgIG9uY2U6IHRydWVcbiAgfSk7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgY2xlYXJUaW1lb3V0KGhhbmRsZSk7XG4gICAgcmVtb3ZlKCk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyYW5zaXRpb25FbmQoZWxlbWVudCwgaGFuZGxlciwgZHVyYXRpb24sIHBhZGRpbmcpIHtcbiAgaWYgKGR1cmF0aW9uID09IG51bGwpIGR1cmF0aW9uID0gcGFyc2VEdXJhdGlvbihlbGVtZW50KSB8fCAwO1xuICB2YXIgcmVtb3ZlRW11bGF0ZSA9IGVtdWxhdGVUcmFuc2l0aW9uRW5kKGVsZW1lbnQsIGR1cmF0aW9uLCBwYWRkaW5nKTtcbiAgdmFyIHJlbW92ZSA9IGxpc3RlbihlbGVtZW50LCAndHJhbnNpdGlvbmVuZCcsIGhhbmRsZXIpO1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHJlbW92ZUVtdWxhdGUoKTtcbiAgICByZW1vdmUoKTtcbiAgfTtcbn0iLCJleHBvcnQgZGVmYXVsdCB7XG4gIGRpc2FibGVkOiBmYWxzZVxufTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGRlZmF1bHQgUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTsiLCJpbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBfaW5oZXJpdHNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHNMb29zZVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJztcbmltcG9ydCBjb25maWcgZnJvbSAnLi9jb25maWcnO1xuaW1wb3J0IHsgdGltZW91dHNTaGFwZSB9IGZyb20gJy4vdXRpbHMvUHJvcFR5cGVzJztcbmltcG9ydCBUcmFuc2l0aW9uR3JvdXBDb250ZXh0IGZyb20gJy4vVHJhbnNpdGlvbkdyb3VwQ29udGV4dCc7XG5leHBvcnQgdmFyIFVOTU9VTlRFRCA9ICd1bm1vdW50ZWQnO1xuZXhwb3J0IHZhciBFWElURUQgPSAnZXhpdGVkJztcbmV4cG9ydCB2YXIgRU5URVJJTkcgPSAnZW50ZXJpbmcnO1xuZXhwb3J0IHZhciBFTlRFUkVEID0gJ2VudGVyZWQnO1xuZXhwb3J0IHZhciBFWElUSU5HID0gJ2V4aXRpbmcnO1xuLyoqXG4gKiBUaGUgVHJhbnNpdGlvbiBjb21wb25lbnQgbGV0cyB5b3UgZGVzY3JpYmUgYSB0cmFuc2l0aW9uIGZyb20gb25lIGNvbXBvbmVudFxuICogc3RhdGUgdG8gYW5vdGhlciBfb3ZlciB0aW1lXyB3aXRoIGEgc2ltcGxlIGRlY2xhcmF0aXZlIEFQSS4gTW9zdCBjb21tb25seVxuICogaXQncyB1c2VkIHRvIGFuaW1hdGUgdGhlIG1vdW50aW5nIGFuZCB1bm1vdW50aW5nIG9mIGEgY29tcG9uZW50LCBidXQgY2FuIGFsc29cbiAqIGJlIHVzZWQgdG8gZGVzY3JpYmUgaW4tcGxhY2UgdHJhbnNpdGlvbiBzdGF0ZXMgYXMgd2VsbC5cbiAqXG4gKiAtLS1cbiAqXG4gKiAqKk5vdGUqKjogYFRyYW5zaXRpb25gIGlzIGEgcGxhdGZvcm0tYWdub3N0aWMgYmFzZSBjb21wb25lbnQuIElmIHlvdSdyZSB1c2luZ1xuICogdHJhbnNpdGlvbnMgaW4gQ1NTLCB5b3UnbGwgcHJvYmFibHkgd2FudCB0byB1c2VcbiAqIFtgQ1NTVHJhbnNpdGlvbmBdKGh0dHBzOi8vcmVhY3Rjb21tdW5pdHkub3JnL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvY3NzLXRyYW5zaXRpb24pXG4gKiBpbnN0ZWFkLiBJdCBpbmhlcml0cyBhbGwgdGhlIGZlYXR1cmVzIG9mIGBUcmFuc2l0aW9uYCwgYnV0IGNvbnRhaW5zXG4gKiBhZGRpdGlvbmFsIGZlYXR1cmVzIG5lY2Vzc2FyeSB0byBwbGF5IG5pY2Ugd2l0aCBDU1MgdHJhbnNpdGlvbnMgKGhlbmNlIHRoZVxuICogbmFtZSBvZiB0aGUgY29tcG9uZW50KS5cbiAqXG4gKiAtLS1cbiAqXG4gKiBCeSBkZWZhdWx0IHRoZSBgVHJhbnNpdGlvbmAgY29tcG9uZW50IGRvZXMgbm90IGFsdGVyIHRoZSBiZWhhdmlvciBvZiB0aGVcbiAqIGNvbXBvbmVudCBpdCByZW5kZXJzLCBpdCBvbmx5IHRyYWNrcyBcImVudGVyXCIgYW5kIFwiZXhpdFwiIHN0YXRlcyBmb3IgdGhlXG4gKiBjb21wb25lbnRzLiBJdCdzIHVwIHRvIHlvdSB0byBnaXZlIG1lYW5pbmcgYW5kIGVmZmVjdCB0byB0aG9zZSBzdGF0ZXMuIEZvclxuICogZXhhbXBsZSB3ZSBjYW4gYWRkIHN0eWxlcyB0byBhIGNvbXBvbmVudCB3aGVuIGl0IGVudGVycyBvciBleGl0czpcbiAqXG4gKiBgYGBqc3hcbiAqIGltcG9ydCB7IFRyYW5zaXRpb24gfSBmcm9tICdyZWFjdC10cmFuc2l0aW9uLWdyb3VwJztcbiAqXG4gKiBjb25zdCBkdXJhdGlvbiA9IDMwMDtcbiAqXG4gKiBjb25zdCBkZWZhdWx0U3R5bGUgPSB7XG4gKiAgIHRyYW5zaXRpb246IGBvcGFjaXR5ICR7ZHVyYXRpb259bXMgZWFzZS1pbi1vdXRgLFxuICogICBvcGFjaXR5OiAwLFxuICogfVxuICpcbiAqIGNvbnN0IHRyYW5zaXRpb25TdHlsZXMgPSB7XG4gKiAgIGVudGVyaW5nOiB7IG9wYWNpdHk6IDEgfSxcbiAqICAgZW50ZXJlZDogIHsgb3BhY2l0eTogMSB9LFxuICogICBleGl0aW5nOiAgeyBvcGFjaXR5OiAwIH0sXG4gKiAgIGV4aXRlZDogIHsgb3BhY2l0eTogMCB9LFxuICogfTtcbiAqXG4gKiBjb25zdCBGYWRlID0gKHsgaW46IGluUHJvcCB9KSA9PiAoXG4gKiAgIDxUcmFuc2l0aW9uIGluPXtpblByb3B9IHRpbWVvdXQ9e2R1cmF0aW9ufT5cbiAqICAgICB7c3RhdGUgPT4gKFxuICogICAgICAgPGRpdiBzdHlsZT17e1xuICogICAgICAgICAuLi5kZWZhdWx0U3R5bGUsXG4gKiAgICAgICAgIC4uLnRyYW5zaXRpb25TdHlsZXNbc3RhdGVdXG4gKiAgICAgICB9fT5cbiAqICAgICAgICAgSSdtIGEgZmFkZSBUcmFuc2l0aW9uIVxuICogICAgICAgPC9kaXY+XG4gKiAgICAgKX1cbiAqICAgPC9UcmFuc2l0aW9uPlxuICogKTtcbiAqIGBgYFxuICpcbiAqIFRoZXJlIGFyZSA0IG1haW4gc3RhdGVzIGEgVHJhbnNpdGlvbiBjYW4gYmUgaW46XG4gKiAgLSBgJ2VudGVyaW5nJ2BcbiAqICAtIGAnZW50ZXJlZCdgXG4gKiAgLSBgJ2V4aXRpbmcnYFxuICogIC0gYCdleGl0ZWQnYFxuICpcbiAqIFRyYW5zaXRpb24gc3RhdGUgaXMgdG9nZ2xlZCB2aWEgdGhlIGBpbmAgcHJvcC4gV2hlbiBgdHJ1ZWAgdGhlIGNvbXBvbmVudFxuICogYmVnaW5zIHRoZSBcIkVudGVyXCIgc3RhZ2UuIER1cmluZyB0aGlzIHN0YWdlLCB0aGUgY29tcG9uZW50IHdpbGwgc2hpZnQgZnJvbVxuICogaXRzIGN1cnJlbnQgdHJhbnNpdGlvbiBzdGF0ZSwgdG8gYCdlbnRlcmluZydgIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlXG4gKiB0cmFuc2l0aW9uIGFuZCB0aGVuIHRvIHRoZSBgJ2VudGVyZWQnYCBzdGFnZSBvbmNlIGl0J3MgY29tcGxldGUuIExldCdzIHRha2VcbiAqIHRoZSBmb2xsb3dpbmcgZXhhbXBsZSAod2UnbGwgdXNlIHRoZVxuICogW3VzZVN0YXRlXShodHRwczovL3JlYWN0anMub3JnL2RvY3MvaG9va3MtcmVmZXJlbmNlLmh0bWwjdXNlc3RhdGUpIGhvb2spOlxuICpcbiAqIGBgYGpzeFxuICogZnVuY3Rpb24gQXBwKCkge1xuICogICBjb25zdCBbaW5Qcm9wLCBzZXRJblByb3BdID0gdXNlU3RhdGUoZmFsc2UpO1xuICogICByZXR1cm4gKFxuICogICAgIDxkaXY+XG4gKiAgICAgICA8VHJhbnNpdGlvbiBpbj17aW5Qcm9wfSB0aW1lb3V0PXs1MDB9PlxuICogICAgICAgICB7c3RhdGUgPT4gKFxuICogICAgICAgICAgIC8vIC4uLlxuICogICAgICAgICApfVxuICogICAgICAgPC9UcmFuc2l0aW9uPlxuICogICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBzZXRJblByb3AodHJ1ZSl9PlxuICogICAgICAgICBDbGljayB0byBFbnRlclxuICogICAgICAgPC9idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgICk7XG4gKiB9XG4gKiBgYGBcbiAqXG4gKiBXaGVuIHRoZSBidXR0b24gaXMgY2xpY2tlZCB0aGUgY29tcG9uZW50IHdpbGwgc2hpZnQgdG8gdGhlIGAnZW50ZXJpbmcnYCBzdGF0ZVxuICogYW5kIHN0YXkgdGhlcmUgZm9yIDUwMG1zICh0aGUgdmFsdWUgb2YgYHRpbWVvdXRgKSBiZWZvcmUgaXQgZmluYWxseSBzd2l0Y2hlc1xuICogdG8gYCdlbnRlcmVkJ2AuXG4gKlxuICogV2hlbiBgaW5gIGlzIGBmYWxzZWAgdGhlIHNhbWUgdGhpbmcgaGFwcGVucyBleGNlcHQgdGhlIHN0YXRlIG1vdmVzIGZyb21cbiAqIGAnZXhpdGluZydgIHRvIGAnZXhpdGVkJ2AuXG4gKi9cblxudmFyIFRyYW5zaXRpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoVHJhbnNpdGlvbiwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVHJhbnNpdGlvbihwcm9wcywgY29udGV4dCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzLCBjb250ZXh0KSB8fCB0aGlzO1xuICAgIHZhciBwYXJlbnRHcm91cCA9IGNvbnRleHQ7IC8vIEluIHRoZSBjb250ZXh0IG9mIGEgVHJhbnNpdGlvbkdyb3VwIGFsbCBlbnRlcnMgYXJlIHJlYWxseSBhcHBlYXJzXG5cbiAgICB2YXIgYXBwZWFyID0gcGFyZW50R3JvdXAgJiYgIXBhcmVudEdyb3VwLmlzTW91bnRpbmcgPyBwcm9wcy5lbnRlciA6IHByb3BzLmFwcGVhcjtcbiAgICB2YXIgaW5pdGlhbFN0YXR1cztcbiAgICBfdGhpcy5hcHBlYXJTdGF0dXMgPSBudWxsO1xuXG4gICAgaWYgKHByb3BzLmluKSB7XG4gICAgICBpZiAoYXBwZWFyKSB7XG4gICAgICAgIGluaXRpYWxTdGF0dXMgPSBFWElURUQ7XG4gICAgICAgIF90aGlzLmFwcGVhclN0YXR1cyA9IEVOVEVSSU5HO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IEVOVEVSRUQ7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9wcy51bm1vdW50T25FeGl0IHx8IHByb3BzLm1vdW50T25FbnRlcikge1xuICAgICAgICBpbml0aWFsU3RhdHVzID0gVU5NT1VOVEVEO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW5pdGlhbFN0YXR1cyA9IEVYSVRFRDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHN0YXR1czogaW5pdGlhbFN0YXR1c1xuICAgIH07XG4gICAgX3RoaXMubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBUcmFuc2l0aW9uLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyA9IGZ1bmN0aW9uIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyhfcmVmLCBwcmV2U3RhdGUpIHtcbiAgICB2YXIgbmV4dEluID0gX3JlZi5pbjtcblxuICAgIGlmIChuZXh0SW4gJiYgcHJldlN0YXRlLnN0YXR1cyA9PT0gVU5NT1VOVEVEKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBzdGF0dXM6IEVYSVRFRFxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfSAvLyBnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgLy8gICBsZXQgbmV4dFN0YXR1cyA9IG51bGxcbiAgLy8gICBpZiAocHJldlByb3BzICE9PSB0aGlzLnByb3BzKSB7XG4gIC8vICAgICBjb25zdCB7IHN0YXR1cyB9ID0gdGhpcy5zdGF0ZVxuICAvLyAgICAgaWYgKHRoaXMucHJvcHMuaW4pIHtcbiAgLy8gICAgICAgaWYgKHN0YXR1cyAhPT0gRU5URVJJTkcgJiYgc3RhdHVzICE9PSBFTlRFUkVEKSB7XG4gIC8vICAgICAgICAgbmV4dFN0YXR1cyA9IEVOVEVSSU5HXG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH0gZWxzZSB7XG4gIC8vICAgICAgIGlmIChzdGF0dXMgPT09IEVOVEVSSU5HIHx8IHN0YXR1cyA9PT0gRU5URVJFRCkge1xuICAvLyAgICAgICAgIG5leHRTdGF0dXMgPSBFWElUSU5HXG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH1cbiAgLy8gICB9XG4gIC8vICAgcmV0dXJuIHsgbmV4dFN0YXR1cyB9XG4gIC8vIH1cbiAgO1xuXG4gIHZhciBfcHJvdG8gPSBUcmFuc2l0aW9uLnByb3RvdHlwZTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnVwZGF0ZVN0YXR1cyh0cnVlLCB0aGlzLmFwcGVhclN0YXR1cyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICB2YXIgbmV4dFN0YXR1cyA9IG51bGw7XG5cbiAgICBpZiAocHJldlByb3BzICE9PSB0aGlzLnByb3BzKSB7XG4gICAgICB2YXIgc3RhdHVzID0gdGhpcy5zdGF0ZS5zdGF0dXM7XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmluKSB7XG4gICAgICAgIGlmIChzdGF0dXMgIT09IEVOVEVSSU5HICYmIHN0YXR1cyAhPT0gRU5URVJFRCkge1xuICAgICAgICAgIG5leHRTdGF0dXMgPSBFTlRFUklORztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHN0YXR1cyA9PT0gRU5URVJJTkcgfHwgc3RhdHVzID09PSBFTlRFUkVEKSB7XG4gICAgICAgICAgbmV4dFN0YXR1cyA9IEVYSVRJTkc7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZVN0YXR1cyhmYWxzZSwgbmV4dFN0YXR1cyk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgdGhpcy5jYW5jZWxOZXh0Q2FsbGJhY2soKTtcbiAgfTtcblxuICBfcHJvdG8uZ2V0VGltZW91dHMgPSBmdW5jdGlvbiBnZXRUaW1lb3V0cygpIHtcbiAgICB2YXIgdGltZW91dCA9IHRoaXMucHJvcHMudGltZW91dDtcbiAgICB2YXIgZXhpdCwgZW50ZXIsIGFwcGVhcjtcbiAgICBleGl0ID0gZW50ZXIgPSBhcHBlYXIgPSB0aW1lb3V0O1xuXG4gICAgaWYgKHRpbWVvdXQgIT0gbnVsbCAmJiB0eXBlb2YgdGltZW91dCAhPT0gJ251bWJlcicpIHtcbiAgICAgIGV4aXQgPSB0aW1lb3V0LmV4aXQ7XG4gICAgICBlbnRlciA9IHRpbWVvdXQuZW50ZXI7IC8vIFRPRE86IHJlbW92ZSBmYWxsYmFjayBmb3IgbmV4dCBtYWpvclxuXG4gICAgICBhcHBlYXIgPSB0aW1lb3V0LmFwcGVhciAhPT0gdW5kZWZpbmVkID8gdGltZW91dC5hcHBlYXIgOiBlbnRlcjtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZXhpdDogZXhpdCxcbiAgICAgIGVudGVyOiBlbnRlcixcbiAgICAgIGFwcGVhcjogYXBwZWFyXG4gICAgfTtcbiAgfTtcblxuICBfcHJvdG8udXBkYXRlU3RhdHVzID0gZnVuY3Rpb24gdXBkYXRlU3RhdHVzKG1vdW50aW5nLCBuZXh0U3RhdHVzKSB7XG4gICAgaWYgKG1vdW50aW5nID09PSB2b2lkIDApIHtcbiAgICAgIG1vdW50aW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKG5leHRTdGF0dXMgIT09IG51bGwpIHtcbiAgICAgIC8vIG5leHRTdGF0dXMgd2lsbCBhbHdheXMgYmUgRU5URVJJTkcgb3IgRVhJVElORy5cbiAgICAgIHRoaXMuY2FuY2VsTmV4dENhbGxiYWNrKCk7XG5cbiAgICAgIGlmIChuZXh0U3RhdHVzID09PSBFTlRFUklORykge1xuICAgICAgICB0aGlzLnBlcmZvcm1FbnRlcihtb3VudGluZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBlcmZvcm1FeGl0KCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICh0aGlzLnByb3BzLnVubW91bnRPbkV4aXQgJiYgdGhpcy5zdGF0ZS5zdGF0dXMgPT09IEVYSVRFRCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN0YXR1czogVU5NT1VOVEVEXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FbnRlciA9IGZ1bmN0aW9uIHBlcmZvcm1FbnRlcihtb3VudGluZykge1xuICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgdmFyIGVudGVyID0gdGhpcy5wcm9wcy5lbnRlcjtcbiAgICB2YXIgYXBwZWFyaW5nID0gdGhpcy5jb250ZXh0ID8gdGhpcy5jb250ZXh0LmlzTW91bnRpbmcgOiBtb3VudGluZztcblxuICAgIHZhciBfcmVmMiA9IHRoaXMucHJvcHMubm9kZVJlZiA/IFthcHBlYXJpbmddIDogW1JlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpLCBhcHBlYXJpbmddLFxuICAgICAgICBtYXliZU5vZGUgPSBfcmVmMlswXSxcbiAgICAgICAgbWF5YmVBcHBlYXJpbmcgPSBfcmVmMlsxXTtcblxuICAgIHZhciB0aW1lb3V0cyA9IHRoaXMuZ2V0VGltZW91dHMoKTtcbiAgICB2YXIgZW50ZXJUaW1lb3V0ID0gYXBwZWFyaW5nID8gdGltZW91dHMuYXBwZWFyIDogdGltZW91dHMuZW50ZXI7IC8vIG5vIGVudGVyIGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVOVEVSRURcbiAgICAvLyBpZiB3ZSBhcmUgbW91bnRpbmcgYW5kIHJ1bm5pbmcgdGhpcyBpdCBtZWFucyBhcHBlYXIgX211c3RfIGJlIHNldFxuXG4gICAgaWYgKCFtb3VudGluZyAmJiAhZW50ZXIgfHwgY29uZmlnLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgIHN0YXR1czogRU5URVJFRFxuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIucHJvcHMub25FbnRlcmVkKG1heWJlTm9kZSk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnByb3BzLm9uRW50ZXIobWF5YmVOb2RlLCBtYXliZUFwcGVhcmluZyk7XG4gICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgc3RhdHVzOiBFTlRFUklOR1xuICAgIH0sIGZ1bmN0aW9uICgpIHtcbiAgICAgIF90aGlzMi5wcm9wcy5vbkVudGVyaW5nKG1heWJlTm9kZSwgbWF5YmVBcHBlYXJpbmcpO1xuXG4gICAgICBfdGhpczIub25UcmFuc2l0aW9uRW5kKGVudGVyVGltZW91dCwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczIuc2FmZVNldFN0YXRlKHtcbiAgICAgICAgICBzdGF0dXM6IEVOVEVSRURcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMi5wcm9wcy5vbkVudGVyZWQobWF5YmVOb2RlLCBtYXliZUFwcGVhcmluZyk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLnBlcmZvcm1FeGl0ID0gZnVuY3Rpb24gcGVyZm9ybUV4aXQoKSB7XG4gICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICB2YXIgZXhpdCA9IHRoaXMucHJvcHMuZXhpdDtcbiAgICB2YXIgdGltZW91dHMgPSB0aGlzLmdldFRpbWVvdXRzKCk7XG4gICAgdmFyIG1heWJlTm9kZSA9IHRoaXMucHJvcHMubm9kZVJlZiA/IHVuZGVmaW5lZCA6IFJlYWN0RE9NLmZpbmRET01Ob2RlKHRoaXMpOyAvLyBubyBleGl0IGFuaW1hdGlvbiBza2lwIHJpZ2h0IHRvIEVYSVRFRFxuXG4gICAgaWYgKCFleGl0IHx8IGNvbmZpZy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgICBzdGF0dXM6IEVYSVRFRFxuICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBfdGhpczMucHJvcHMub25FeGl0ZWQobWF5YmVOb2RlKTtcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMucHJvcHMub25FeGl0KG1heWJlTm9kZSk7XG4gICAgdGhpcy5zYWZlU2V0U3RhdGUoe1xuICAgICAgc3RhdHVzOiBFWElUSU5HXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgX3RoaXMzLnByb3BzLm9uRXhpdGluZyhtYXliZU5vZGUpO1xuXG4gICAgICBfdGhpczMub25UcmFuc2l0aW9uRW5kKHRpbWVvdXRzLmV4aXQsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgX3RoaXMzLnNhZmVTZXRTdGF0ZSh7XG4gICAgICAgICAgc3RhdHVzOiBFWElURURcbiAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIF90aGlzMy5wcm9wcy5vbkV4aXRlZChtYXliZU5vZGUpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9O1xuXG4gIF9wcm90by5jYW5jZWxOZXh0Q2FsbGJhY2sgPSBmdW5jdGlvbiBjYW5jZWxOZXh0Q2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMubmV4dENhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICB0aGlzLm5leHRDYWxsYmFjay5jYW5jZWwoKTtcbiAgICAgIHRoaXMubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnNhZmVTZXRTdGF0ZSA9IGZ1bmN0aW9uIHNhZmVTZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKSB7XG4gICAgLy8gVGhpcyBzaG91bGRuJ3QgYmUgbmVjZXNzYXJ5LCBidXQgdGhlcmUgYXJlIHdlaXJkIHJhY2UgY29uZGl0aW9ucyB3aXRoXG4gICAgLy8gc2V0U3RhdGUgY2FsbGJhY2tzIGFuZCB1bm1vdW50aW5nIGluIHRlc3RpbmcsIHNvIGFsd2F5cyBtYWtlIHN1cmUgdGhhdFxuICAgIC8vIHdlIGNhbiBjYW5jZWwgYW55IHBlbmRpbmcgc2V0U3RhdGUgY2FsbGJhY2tzIGFmdGVyIHdlIHVubW91bnQuXG4gICAgY2FsbGJhY2sgPSB0aGlzLnNldE5leHRDYWxsYmFjayhjYWxsYmFjayk7XG4gICAgdGhpcy5zZXRTdGF0ZShuZXh0U3RhdGUsIGNhbGxiYWNrKTtcbiAgfTtcblxuICBfcHJvdG8uc2V0TmV4dENhbGxiYWNrID0gZnVuY3Rpb24gc2V0TmV4dENhbGxiYWNrKGNhbGxiYWNrKSB7XG4gICAgdmFyIF90aGlzNCA9IHRoaXM7XG5cbiAgICB2YXIgYWN0aXZlID0gdHJ1ZTtcblxuICAgIHRoaXMubmV4dENhbGxiYWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICBpZiAoYWN0aXZlKSB7XG4gICAgICAgIGFjdGl2ZSA9IGZhbHNlO1xuICAgICAgICBfdGhpczQubmV4dENhbGxiYWNrID0gbnVsbDtcbiAgICAgICAgY2FsbGJhY2soZXZlbnQpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLm5leHRDYWxsYmFjay5jYW5jZWwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBhY3RpdmUgPSBmYWxzZTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXMubmV4dENhbGxiYWNrO1xuICB9O1xuXG4gIF9wcm90by5vblRyYW5zaXRpb25FbmQgPSBmdW5jdGlvbiBvblRyYW5zaXRpb25FbmQodGltZW91dCwgaGFuZGxlcikge1xuICAgIHRoaXMuc2V0TmV4dENhbGxiYWNrKGhhbmRsZXIpO1xuICAgIHZhciBub2RlID0gdGhpcy5wcm9wcy5ub2RlUmVmID8gdGhpcy5wcm9wcy5ub2RlUmVmLmN1cnJlbnQgOiBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKTtcbiAgICB2YXIgZG9lc05vdEhhdmVUaW1lb3V0T3JMaXN0ZW5lciA9IHRpbWVvdXQgPT0gbnVsbCAmJiAhdGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcjtcblxuICAgIGlmICghbm9kZSB8fCBkb2VzTm90SGF2ZVRpbWVvdXRPckxpc3RlbmVyKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMubmV4dENhbGxiYWNrLCAwKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcikge1xuICAgICAgdmFyIF9yZWYzID0gdGhpcy5wcm9wcy5ub2RlUmVmID8gW3RoaXMubmV4dENhbGxiYWNrXSA6IFtub2RlLCB0aGlzLm5leHRDYWxsYmFja10sXG4gICAgICAgICAgbWF5YmVOb2RlID0gX3JlZjNbMF0sXG4gICAgICAgICAgbWF5YmVOZXh0Q2FsbGJhY2sgPSBfcmVmM1sxXTtcblxuICAgICAgdGhpcy5wcm9wcy5hZGRFbmRMaXN0ZW5lcihtYXliZU5vZGUsIG1heWJlTmV4dENhbGxiYWNrKTtcbiAgICB9XG5cbiAgICBpZiAodGltZW91dCAhPSBudWxsKSB7XG4gICAgICBzZXRUaW1lb3V0KHRoaXMubmV4dENhbGxiYWNrLCB0aW1lb3V0KTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICB2YXIgc3RhdHVzID0gdGhpcy5zdGF0ZS5zdGF0dXM7XG5cbiAgICBpZiAoc3RhdHVzID09PSBVTk1PVU5URUQpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMuY2hpbGRyZW4sXG4gICAgICAgIF9pbiA9IF90aGlzJHByb3BzLmluLFxuICAgICAgICBfbW91bnRPbkVudGVyID0gX3RoaXMkcHJvcHMubW91bnRPbkVudGVyLFxuICAgICAgICBfdW5tb3VudE9uRXhpdCA9IF90aGlzJHByb3BzLnVubW91bnRPbkV4aXQsXG4gICAgICAgIF9hcHBlYXIgPSBfdGhpcyRwcm9wcy5hcHBlYXIsXG4gICAgICAgIF9lbnRlciA9IF90aGlzJHByb3BzLmVudGVyLFxuICAgICAgICBfZXhpdCA9IF90aGlzJHByb3BzLmV4aXQsXG4gICAgICAgIF90aW1lb3V0ID0gX3RoaXMkcHJvcHMudGltZW91dCxcbiAgICAgICAgX2FkZEVuZExpc3RlbmVyID0gX3RoaXMkcHJvcHMuYWRkRW5kTGlzdGVuZXIsXG4gICAgICAgIF9vbkVudGVyID0gX3RoaXMkcHJvcHMub25FbnRlcixcbiAgICAgICAgX29uRW50ZXJpbmcgPSBfdGhpcyRwcm9wcy5vbkVudGVyaW5nLFxuICAgICAgICBfb25FbnRlcmVkID0gX3RoaXMkcHJvcHMub25FbnRlcmVkLFxuICAgICAgICBfb25FeGl0ID0gX3RoaXMkcHJvcHMub25FeGl0LFxuICAgICAgICBfb25FeGl0aW5nID0gX3RoaXMkcHJvcHMub25FeGl0aW5nLFxuICAgICAgICBfb25FeGl0ZWQgPSBfdGhpcyRwcm9wcy5vbkV4aXRlZCxcbiAgICAgICAgX25vZGVSZWYgPSBfdGhpcyRwcm9wcy5ub2RlUmVmLFxuICAgICAgICBjaGlsZFByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImNoaWxkcmVuXCIsIFwiaW5cIiwgXCJtb3VudE9uRW50ZXJcIiwgXCJ1bm1vdW50T25FeGl0XCIsIFwiYXBwZWFyXCIsIFwiZW50ZXJcIiwgXCJleGl0XCIsIFwidGltZW91dFwiLCBcImFkZEVuZExpc3RlbmVyXCIsIFwib25FbnRlclwiLCBcIm9uRW50ZXJpbmdcIiwgXCJvbkVudGVyZWRcIiwgXCJvbkV4aXRcIiwgXCJvbkV4aXRpbmdcIiwgXCJvbkV4aXRlZFwiLCBcIm5vZGVSZWZcIl0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgIC8qI19fUFVSRV9fKi9cbiAgICAgIC8vIGFsbG93cyBmb3IgbmVzdGVkIFRyYW5zaXRpb25zXG4gICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zaXRpb25Hcm91cENvbnRleHQuUHJvdmlkZXIsIHtcbiAgICAgICAgdmFsdWU6IG51bGxcbiAgICAgIH0sIHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHN0YXR1cywgY2hpbGRQcm9wcykgOiBSZWFjdC5jbG9uZUVsZW1lbnQoUmVhY3QuQ2hpbGRyZW4ub25seShjaGlsZHJlbiksIGNoaWxkUHJvcHMpKVxuICAgICk7XG4gIH07XG5cbiAgcmV0dXJuIFRyYW5zaXRpb247XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblRyYW5zaXRpb24uY29udGV4dFR5cGUgPSBUcmFuc2l0aW9uR3JvdXBDb250ZXh0O1xuVHJhbnNpdGlvbi5wcm9wVHlwZXMgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyB7XG4gIC8qKlxuICAgKiBBIFJlYWN0IHJlZmVyZW5jZSB0byBET00gZWxlbWVudCB0aGF0IG5lZWQgdG8gdHJhbnNpdGlvbjpcbiAgICogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzUxMTI3MTMwLzQ2NzE5MzJcbiAgICpcbiAgICogICAtIFdoZW4gYG5vZGVSZWZgIHByb3AgaXMgdXNlZCwgYG5vZGVgIGlzIG5vdCBwYXNzZWQgdG8gY2FsbGJhY2sgZnVuY3Rpb25zXG4gICAqICAgICAgKGUuZy4gYG9uRW50ZXJgKSBiZWNhdXNlIHVzZXIgYWxyZWFkeSBoYXMgZGlyZWN0IGFjY2VzcyB0byB0aGUgbm9kZS5cbiAgICogICAtIFdoZW4gY2hhbmdpbmcgYGtleWAgcHJvcCBvZiBgVHJhbnNpdGlvbmAgaW4gYSBgVHJhbnNpdGlvbkdyb3VwYCBhIG5ld1xuICAgKiAgICAgYG5vZGVSZWZgIG5lZWQgdG8gYmUgcHJvdmlkZWQgdG8gYFRyYW5zaXRpb25gIHdpdGggY2hhbmdlZCBga2V5YCBwcm9wXG4gICAqICAgICAoc2VlXG4gICAqICAgICBbdGVzdC9DU1NUcmFuc2l0aW9uLXRlc3QuanNdKGh0dHBzOi8vZ2l0aHViLmNvbS9yZWFjdGpzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvYmxvYi8xMzQzNWY4OTdiM2FiNzFmNmUxOWQ3MjRmMTQ1NTk2ZjU5MTA1ODFjL3Rlc3QvQ1NTVHJhbnNpdGlvbi10ZXN0LmpzI0wzNjItTDQzNykpLlxuICAgKi9cbiAgbm9kZVJlZjogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBjdXJyZW50OiB0eXBlb2YgRWxlbWVudCA9PT0gJ3VuZGVmaW5lZCcgPyBQcm9wVHlwZXMuYW55IDogUHJvcFR5cGVzLmluc3RhbmNlT2YoRWxlbWVudClcbiAgfSksXG5cbiAgLyoqXG4gICAqIEEgYGZ1bmN0aW9uYCBjaGlsZCBjYW4gYmUgdXNlZCBpbnN0ZWFkIG9mIGEgUmVhY3QgZWxlbWVudC4gVGhpcyBmdW5jdGlvbiBpc1xuICAgKiBjYWxsZWQgd2l0aCB0aGUgY3VycmVudCB0cmFuc2l0aW9uIHN0YXR1cyAoYCdlbnRlcmluZydgLCBgJ2VudGVyZWQnYCxcbiAgICogYCdleGl0aW5nJ2AsIGAnZXhpdGVkJ2ApLCB3aGljaCBjYW4gYmUgdXNlZCB0byBhcHBseSBjb250ZXh0XG4gICAqIHNwZWNpZmljIHByb3BzIHRvIGEgY29tcG9uZW50LlxuICAgKlxuICAgKiBgYGBqc3hcbiAgICogPFRyYW5zaXRpb24gaW49e3RoaXMuc3RhdGUuaW59IHRpbWVvdXQ9ezE1MH0+XG4gICAqICAge3N0YXRlID0+IChcbiAgICogICAgIDxNeUNvbXBvbmVudCBjbGFzc05hbWU9e2BmYWRlIGZhZGUtJHtzdGF0ZX1gfSAvPlxuICAgKiAgICl9XG4gICAqIDwvVHJhbnNpdGlvbj5cbiAgICogYGBgXG4gICAqL1xuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCwgUHJvcFR5cGVzLmVsZW1lbnQuaXNSZXF1aXJlZF0pLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFNob3cgdGhlIGNvbXBvbmVudDsgdHJpZ2dlcnMgdGhlIGVudGVyIG9yIGV4aXQgc3RhdGVzXG4gICAqL1xuICBpbjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEJ5IGRlZmF1bHQgdGhlIGNoaWxkIGNvbXBvbmVudCBpcyBtb3VudGVkIGltbWVkaWF0ZWx5IGFsb25nIHdpdGhcbiAgICogdGhlIHBhcmVudCBgVHJhbnNpdGlvbmAgY29tcG9uZW50LiBJZiB5b3Ugd2FudCB0byBcImxhenkgbW91bnRcIiB0aGUgY29tcG9uZW50IG9uIHRoZVxuICAgKiBmaXJzdCBgaW49e3RydWV9YCB5b3UgY2FuIHNldCBgbW91bnRPbkVudGVyYC4gQWZ0ZXIgdGhlIGZpcnN0IGVudGVyIHRyYW5zaXRpb24gdGhlIGNvbXBvbmVudCB3aWxsIHN0YXlcbiAgICogbW91bnRlZCwgZXZlbiBvbiBcImV4aXRlZFwiLCB1bmxlc3MgeW91IGFsc28gc3BlY2lmeSBgdW5tb3VudE9uRXhpdGAuXG4gICAqL1xuICBtb3VudE9uRW50ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBjaGlsZCBjb21wb25lbnQgc3RheXMgbW91bnRlZCBhZnRlciBpdCByZWFjaGVzIHRoZSBgJ2V4aXRlZCdgIHN0YXRlLlxuICAgKiBTZXQgYHVubW91bnRPbkV4aXRgIGlmIHlvdSdkIHByZWZlciB0byB1bm1vdW50IHRoZSBjb21wb25lbnQgYWZ0ZXIgaXQgZmluaXNoZXMgZXhpdGluZy5cbiAgICovXG4gIHVubW91bnRPbkV4aXQ6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBCeSBkZWZhdWx0IHRoZSBjaGlsZCBjb21wb25lbnQgZG9lcyBub3QgcGVyZm9ybSB0aGUgZW50ZXIgdHJhbnNpdGlvbiB3aGVuXG4gICAqIGl0IGZpcnN0IG1vdW50cywgcmVnYXJkbGVzcyBvZiB0aGUgdmFsdWUgb2YgYGluYC4gSWYgeW91IHdhbnQgdGhpc1xuICAgKiBiZWhhdmlvciwgc2V0IGJvdGggYGFwcGVhcmAgYW5kIGBpbmAgdG8gYHRydWVgLlxuICAgKlxuICAgKiA+ICoqTm90ZSoqOiB0aGVyZSBhcmUgbm8gc3BlY2lhbCBhcHBlYXIgc3RhdGVzIGxpa2UgYGFwcGVhcmluZ2AvYGFwcGVhcmVkYCwgdGhpcyBwcm9wXG4gICAqID4gb25seSBhZGRzIGFuIGFkZGl0aW9uYWwgZW50ZXIgdHJhbnNpdGlvbi4gSG93ZXZlciwgaW4gdGhlXG4gICAqID4gYDxDU1NUcmFuc2l0aW9uPmAgY29tcG9uZW50IHRoYXQgZmlyc3QgZW50ZXIgdHJhbnNpdGlvbiBkb2VzIHJlc3VsdCBpblxuICAgKiA+IGFkZGl0aW9uYWwgYC5hcHBlYXItKmAgY2xhc3NlcywgdGhhdCB3YXkgeW91IGNhbiBjaG9vc2UgdG8gc3R5bGUgaXRcbiAgICogPiBkaWZmZXJlbnRseS5cbiAgICovXG4gIGFwcGVhcjogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIEVuYWJsZSBvciBkaXNhYmxlIGVudGVyIHRyYW5zaXRpb25zLlxuICAgKi9cbiAgZW50ZXI6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBFbmFibGUgb3IgZGlzYWJsZSBleGl0IHRyYW5zaXRpb25zLlxuICAgKi9cbiAgZXhpdDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBkdXJhdGlvbiBvZiB0aGUgdHJhbnNpdGlvbiwgaW4gbWlsbGlzZWNvbmRzLlxuICAgKiBSZXF1aXJlZCB1bmxlc3MgYGFkZEVuZExpc3RlbmVyYCBpcyBwcm92aWRlZC5cbiAgICpcbiAgICogWW91IG1heSBzcGVjaWZ5IGEgc2luZ2xlIHRpbWVvdXQgZm9yIGFsbCB0cmFuc2l0aW9uczpcbiAgICpcbiAgICogYGBganN4XG4gICAqIHRpbWVvdXQ9ezUwMH1cbiAgICogYGBgXG4gICAqXG4gICAqIG9yIGluZGl2aWR1YWxseTpcbiAgICpcbiAgICogYGBganN4XG4gICAqIHRpbWVvdXQ9e3tcbiAgICogIGFwcGVhcjogNTAwLFxuICAgKiAgZW50ZXI6IDMwMCxcbiAgICogIGV4aXQ6IDUwMCxcbiAgICogfX1cbiAgICogYGBgXG4gICAqXG4gICAqIC0gYGFwcGVhcmAgZGVmYXVsdHMgdG8gdGhlIHZhbHVlIG9mIGBlbnRlcmBcbiAgICogLSBgZW50ZXJgIGRlZmF1bHRzIHRvIGAwYFxuICAgKiAtIGBleGl0YCBkZWZhdWx0cyB0byBgMGBcbiAgICpcbiAgICogQHR5cGUge251bWJlciB8IHsgZW50ZXI/OiBudW1iZXIsIGV4aXQ/OiBudW1iZXIsIGFwcGVhcj86IG51bWJlciB9fVxuICAgKi9cbiAgdGltZW91dDogZnVuY3Rpb24gdGltZW91dChwcm9wcykge1xuICAgIHZhciBwdCA9IHRpbWVvdXRzU2hhcGU7XG4gICAgaWYgKCFwcm9wcy5hZGRFbmRMaXN0ZW5lcikgcHQgPSBwdC5pc1JlcXVpcmVkO1xuXG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgfVxuXG4gICAgcmV0dXJuIHB0LmFwcGx5KHZvaWQgMCwgW3Byb3BzXS5jb25jYXQoYXJncykpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBBZGQgYSBjdXN0b20gdHJhbnNpdGlvbiBlbmQgdHJpZ2dlci4gQ2FsbGVkIHdpdGggdGhlIHRyYW5zaXRpb25pbmdcbiAgICogRE9NIG5vZGUgYW5kIGEgYGRvbmVgIGNhbGxiYWNrLiBBbGxvd3MgZm9yIG1vcmUgZmluZSBncmFpbmVkIHRyYW5zaXRpb24gZW5kXG4gICAqIGxvZ2ljLiBUaW1lb3V0cyBhcmUgc3RpbGwgdXNlZCBhcyBhIGZhbGxiYWNrIGlmIHByb3ZpZGVkLlxuICAgKlxuICAgKiAqKk5vdGUqKjogd2hlbiBgbm9kZVJlZmAgcHJvcCBpcyBwYXNzZWQsIGBub2RlYCBpcyBub3QgcGFzc2VkLlxuICAgKlxuICAgKiBgYGBqc3hcbiAgICogYWRkRW5kTGlzdGVuZXI9eyhub2RlLCBkb25lKSA9PiB7XG4gICAqICAgLy8gdXNlIHRoZSBjc3MgdHJhbnNpdGlvbmVuZCBldmVudCB0byBtYXJrIHRoZSBmaW5pc2ggb2YgYSB0cmFuc2l0aW9uXG4gICAqICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgZG9uZSwgZmFsc2UpO1xuICAgKiB9fVxuICAgKiBgYGBcbiAgICovXG4gIGFkZEVuZExpc3RlbmVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYmVmb3JlIHRoZSBcImVudGVyaW5nXCIgc3RhdHVzIGlzIGFwcGxpZWQuIEFuIGV4dHJhIHBhcmFtZXRlclxuICAgKiBgaXNBcHBlYXJpbmdgIGlzIHN1cHBsaWVkIHRvIGluZGljYXRlIGlmIHRoZSBlbnRlciBzdGFnZSBpcyBvY2N1cnJpbmcgb24gdGhlIGluaXRpYWwgbW91bnRcbiAgICpcbiAgICogKipOb3RlKio6IHdoZW4gYG5vZGVSZWZgIHByb3AgaXMgcGFzc2VkLCBgbm9kZWAgaXMgbm90IHBhc3NlZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQsIGlzQXBwZWFyaW5nOiBib29sKSAtPiB2b2lkXG4gICAqL1xuICBvbkVudGVyOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYWZ0ZXIgdGhlIFwiZW50ZXJpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC4gQW4gZXh0cmEgcGFyYW1ldGVyXG4gICAqIGBpc0FwcGVhcmluZ2AgaXMgc3VwcGxpZWQgdG8gaW5kaWNhdGUgaWYgdGhlIGVudGVyIHN0YWdlIGlzIG9jY3VycmluZyBvbiB0aGUgaW5pdGlhbCBtb3VudFxuICAgKlxuICAgKiAqKk5vdGUqKjogd2hlbiBgbm9kZVJlZmAgcHJvcCBpcyBwYXNzZWQsIGBub2RlYCBpcyBub3QgcGFzc2VkLlxuICAgKlxuICAgKiBAdHlwZSBGdW5jdGlvbihub2RlOiBIdG1sRWxlbWVudCwgaXNBcHBlYXJpbmc6IGJvb2wpXG4gICAqL1xuICBvbkVudGVyaW5nOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYWZ0ZXIgdGhlIFwiZW50ZXJlZFwiIHN0YXR1cyBpcyBhcHBsaWVkLiBBbiBleHRyYSBwYXJhbWV0ZXJcbiAgICogYGlzQXBwZWFyaW5nYCBpcyBzdXBwbGllZCB0byBpbmRpY2F0ZSBpZiB0aGUgZW50ZXIgc3RhZ2UgaXMgb2NjdXJyaW5nIG9uIHRoZSBpbml0aWFsIG1vdW50XG4gICAqXG4gICAqICoqTm90ZSoqOiB3aGVuIGBub2RlUmVmYCBwcm9wIGlzIHBhc3NlZCwgYG5vZGVgIGlzIG5vdCBwYXNzZWQuXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50LCBpc0FwcGVhcmluZzogYm9vbCkgLT4gdm9pZFxuICAgKi9cbiAgb25FbnRlcmVkOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogQ2FsbGJhY2sgZmlyZWQgYmVmb3JlIHRoZSBcImV4aXRpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC5cbiAgICpcbiAgICogKipOb3RlKio6IHdoZW4gYG5vZGVSZWZgIHByb3AgaXMgcGFzc2VkLCBgbm9kZWAgaXMgbm90IHBhc3NlZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQpIC0+IHZvaWRcbiAgICovXG4gIG9uRXhpdDogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGFmdGVyIHRoZSBcImV4aXRpbmdcIiBzdGF0dXMgaXMgYXBwbGllZC5cbiAgICpcbiAgICogKipOb3RlKio6IHdoZW4gYG5vZGVSZWZgIHByb3AgaXMgcGFzc2VkLCBgbm9kZWAgaXMgbm90IHBhc3NlZC5cbiAgICpcbiAgICogQHR5cGUgRnVuY3Rpb24obm9kZTogSHRtbEVsZW1lbnQpIC0+IHZvaWRcbiAgICovXG4gIG9uRXhpdGluZzogUHJvcFR5cGVzLmZ1bmMsXG5cbiAgLyoqXG4gICAqIENhbGxiYWNrIGZpcmVkIGFmdGVyIHRoZSBcImV4aXRlZFwiIHN0YXR1cyBpcyBhcHBsaWVkLlxuICAgKlxuICAgKiAqKk5vdGUqKjogd2hlbiBgbm9kZVJlZmAgcHJvcCBpcyBwYXNzZWQsIGBub2RlYCBpcyBub3QgcGFzc2VkXG4gICAqXG4gICAqIEB0eXBlIEZ1bmN0aW9uKG5vZGU6IEh0bWxFbGVtZW50KSAtPiB2b2lkXG4gICAqL1xuICBvbkV4aXRlZDogUHJvcFR5cGVzLmZ1bmNcbn0gOiB7fTsgLy8gTmFtZSB0aGUgZnVuY3Rpb24gc28gaXQgaXMgY2xlYXJlciBpbiB0aGUgZG9jdW1lbnRhdGlvblxuXG5mdW5jdGlvbiBub29wKCkge31cblxuVHJhbnNpdGlvbi5kZWZhdWx0UHJvcHMgPSB7XG4gIGluOiBmYWxzZSxcbiAgbW91bnRPbkVudGVyOiBmYWxzZSxcbiAgdW5tb3VudE9uRXhpdDogZmFsc2UsXG4gIGFwcGVhcjogZmFsc2UsXG4gIGVudGVyOiB0cnVlLFxuICBleGl0OiB0cnVlLFxuICBvbkVudGVyOiBub29wLFxuICBvbkVudGVyaW5nOiBub29wLFxuICBvbkVudGVyZWQ6IG5vb3AsXG4gIG9uRXhpdDogbm9vcCxcbiAgb25FeGl0aW5nOiBub29wLFxuICBvbkV4aXRlZDogbm9vcFxufTtcblRyYW5zaXRpb24uVU5NT1VOVEVEID0gVU5NT1VOVEVEO1xuVHJhbnNpdGlvbi5FWElURUQgPSBFWElURUQ7XG5UcmFuc2l0aW9uLkVOVEVSSU5HID0gRU5URVJJTkc7XG5UcmFuc2l0aW9uLkVOVEVSRUQgPSBFTlRFUkVEO1xuVHJhbnNpdGlvbi5FWElUSU5HID0gRVhJVElORztcbmV4cG9ydCBkZWZhdWx0IFRyYW5zaXRpb247IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcblxudmFyIF9mYWRlU3R5bGVzO1xuXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB0cmFuc2l0aW9uRW5kIGZyb20gJ2RvbS1oZWxwZXJzL3RyYW5zaXRpb25FbmQnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRyYW5zaXRpb24sIHsgRU5URVJFRCwgRU5URVJJTkcgfSBmcm9tICdyZWFjdC10cmFuc2l0aW9uLWdyb3VwL1RyYW5zaXRpb24nO1xuaW1wb3J0IHRyaWdnZXJCcm93c2VyUmVmbG93IGZyb20gJy4vdHJpZ2dlckJyb3dzZXJSZWZsb3cnO1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgaW46IGZhbHNlLFxuICB0aW1lb3V0OiAzMDAsXG4gIG1vdW50T25FbnRlcjogZmFsc2UsXG4gIHVubW91bnRPbkV4aXQ6IGZhbHNlLFxuICBhcHBlYXI6IGZhbHNlXG59O1xudmFyIGZhZGVTdHlsZXMgPSAoX2ZhZGVTdHlsZXMgPSB7fSwgX2ZhZGVTdHlsZXNbRU5URVJJTkddID0gJ3Nob3cnLCBfZmFkZVN0eWxlc1tFTlRFUkVEXSA9ICdzaG93JywgX2ZhZGVTdHlsZXMpO1xudmFyIEZhZGUgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCByZWYpIHtcbiAgdmFyIGNsYXNzTmFtZSA9IF9yZWYuY2xhc3NOYW1lLFxuICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfcmVmLCBbXCJjbGFzc05hbWVcIiwgXCJjaGlsZHJlblwiXSk7XG5cbiAgdmFyIGhhbmRsZUVudGVyID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKG5vZGUpIHtcbiAgICB0cmlnZ2VyQnJvd3NlclJlZmxvdyhub2RlKTtcbiAgICBpZiAocHJvcHMub25FbnRlcikgcHJvcHMub25FbnRlcihub2RlKTtcbiAgfSwgW3Byb3BzXSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2l0aW9uLCBfZXh0ZW5kcyh7XG4gICAgcmVmOiByZWYsXG4gICAgYWRkRW5kTGlzdGVuZXI6IHRyYW5zaXRpb25FbmRcbiAgfSwgcHJvcHMsIHtcbiAgICBvbkVudGVyOiBoYW5kbGVFbnRlclxuICB9KSwgZnVuY3Rpb24gKHN0YXR1cywgaW5uZXJQcm9wcykge1xuICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoY2hpbGRyZW4sIF9leHRlbmRzKHt9LCBpbm5lclByb3BzLCB7XG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZXMoJ2ZhZGUnLCBjbGFzc05hbWUsIGNoaWxkcmVuLnByb3BzLmNsYXNzTmFtZSwgZmFkZVN0eWxlc1tzdGF0dXNdKVxuICAgIH0pKTtcbiAgfSk7XG59KTtcbkZhZGUuZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuRmFkZS5kaXNwbGF5TmFtZSA9ICdGYWRlJztcbmV4cG9ydCBkZWZhdWx0IEZhZGU7IiwiLy8gcmVhZGluZyBhIGRpbWVuc2lvbiBwcm9wIHdpbGwgY2F1c2UgdGhlIGJyb3dzZXIgdG8gcmVjYWxjdWxhdGUsXG4vLyB3aGljaCB3aWxsIGxldCBvdXIgYW5pbWF0aW9ucyB3b3JrXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0cmlnZ2VyQnJvd3NlclJlZmxvdyhub2RlKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW51c2VkLWV4cHJlc3Npb25zXG4gIG5vZGUub2Zmc2V0SGVpZ2h0O1xufSIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG52YXIgVGhlbWVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7fSk7XG52YXIgQ29uc3VtZXIgPSBUaGVtZUNvbnRleHQuQ29uc3VtZXIsXG4gICAgUHJvdmlkZXIgPSBUaGVtZUNvbnRleHQuUHJvdmlkZXI7XG5cbmZ1bmN0aW9uIFRoZW1lUHJvdmlkZXIoX3JlZikge1xuICB2YXIgcHJlZml4ZXMgPSBfcmVmLnByZWZpeGVzLFxuICAgICAgY2hpbGRyZW4gPSBfcmVmLmNoaWxkcmVuO1xuICB2YXIgY29waWVkUHJlZml4ZXMgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gX2V4dGVuZHMoe30sIHByZWZpeGVzKTtcbiAgfSwgW3ByZWZpeGVzXSk7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQcm92aWRlciwge1xuICAgIHZhbHVlOiBjb3BpZWRQcmVmaXhlc1xuICB9LCBjaGlsZHJlbik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VCb290c3RyYXBQcmVmaXgocHJlZml4LCBkZWZhdWx0UHJlZml4KSB7XG4gIHZhciBwcmVmaXhlcyA9IHVzZUNvbnRleHQoVGhlbWVDb250ZXh0KTtcbiAgcmV0dXJuIHByZWZpeCB8fCBwcmVmaXhlc1tkZWZhdWx0UHJlZml4XSB8fCBkZWZhdWx0UHJlZml4O1xufVxuXG5mdW5jdGlvbiBjcmVhdGVCb290c3RyYXBDb21wb25lbnQoQ29tcG9uZW50LCBvcHRzKSB7XG4gIGlmICh0eXBlb2Ygb3B0cyA9PT0gJ3N0cmluZycpIG9wdHMgPSB7XG4gICAgcHJlZml4OiBvcHRzXG4gIH07XG4gIHZhciBpc0NsYXNzeSA9IENvbXBvbmVudC5wcm90b3R5cGUgJiYgQ29tcG9uZW50LnByb3RvdHlwZS5pc1JlYWN0Q29tcG9uZW50OyAvLyBJZiBpdCdzIGEgZnVuY3Rpb25hbCBjb21wb25lbnQgbWFrZSBzdXJlIHdlIGRvbid0IGJyZWFrIGl0IHdpdGggYSByZWZcblxuICB2YXIgX29wdHMgPSBvcHRzLFxuICAgICAgcHJlZml4ID0gX29wdHMucHJlZml4LFxuICAgICAgX29wdHMkZm9yd2FyZFJlZkFzID0gX29wdHMuZm9yd2FyZFJlZkFzLFxuICAgICAgZm9yd2FyZFJlZkFzID0gX29wdHMkZm9yd2FyZFJlZkFzID09PSB2b2lkIDAgPyBpc0NsYXNzeSA/ICdyZWYnIDogJ2lubmVyUmVmJyA6IF9vcHRzJGZvcndhcmRSZWZBcztcbiAgdmFyIFdyYXBwZWQgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmMiwgcmVmKSB7XG4gICAgdmFyIHByb3BzID0gX2V4dGVuZHMoe30sIF9yZWYyKTtcblxuICAgIHByb3BzW2ZvcndhcmRSZWZBc10gPSByZWY7XG4gICAgdmFyIGJzUHJlZml4ID0gdXNlQm9vdHN0cmFwUHJlZml4KHByb3BzLmJzUHJlZml4LCBwcmVmaXgpO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb21wb25lbnQsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgICAgYnNQcmVmaXg6IGJzUHJlZml4XG4gICAgfSkpO1xuICB9KTtcbiAgV3JhcHBlZC5kaXNwbGF5TmFtZSA9IFwiQm9vdHN0cmFwKFwiICsgKENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBDb21wb25lbnQubmFtZSkgKyBcIilcIjtcbiAgcmV0dXJuIFdyYXBwZWQ7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZUJvb3RzdHJhcENvbXBvbmVudCwgQ29uc3VtZXIgYXMgVGhlbWVDb25zdW1lciB9O1xuZXhwb3J0IGRlZmF1bHQgVGhlbWVQcm92aWRlcjsiLCJpbXBvcnQgX2V4dGVuZHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHNcIjtcbmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZVwiO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbnZhciBwcm9wVHlwZXMgPSB7XG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2xpY2s6IFByb3BUeXBlcy5mdW5jXG59O1xudmFyIGRlZmF1bHRQcm9wcyA9IHtcbiAgbGFiZWw6ICdDbG9zZSdcbn07XG52YXIgQ2xvc2VCdXR0b24gPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmLCByZWYpIHtcbiAgdmFyIGxhYmVsID0gX3JlZi5sYWJlbCxcbiAgICAgIG9uQ2xpY2sgPSBfcmVmLm9uQ2xpY2ssXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZSxcbiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wibGFiZWxcIiwgXCJvbkNsaWNrXCIsIFwiY2xhc3NOYW1lXCJdKTtcblxuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwgX2V4dGVuZHMoe1xuICAgIHJlZjogcmVmLFxuICAgIHR5cGU6IFwiYnV0dG9uXCIsXG4gICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCdjbG9zZScsIGNsYXNzTmFtZSksXG4gICAgb25DbGljazogb25DbGlja1xuICB9LCBwcm9wcyksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7XG4gICAgXCJhcmlhLWhpZGRlblwiOiBcInRydWVcIlxuICB9LCBcIlxceEQ3XCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwge1xuICAgIGNsYXNzTmFtZTogXCJzci1vbmx5XCJcbiAgfSwgbGFiZWwpKTtcbn0pO1xuQ2xvc2VCdXR0b24uZGlzcGxheU5hbWUgPSAnQ2xvc2VCdXR0b24nO1xuQ2xvc2VCdXR0b24ucHJvcFR5cGVzID0gcHJvcFR5cGVzO1xuQ2xvc2VCdXR0b24uZGVmYXVsdFByb3BzID0gZGVmYXVsdFByb3BzO1xuZXhwb3J0IGRlZmF1bHQgQ2xvc2VCdXR0b247IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsgLy8gVE9ETzogY2hlY2tcblxudmFyIFRvYXN0Q29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQoe1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWZ1bmN0aW9uXG4gIG9uQ2xvc2U6IGZ1bmN0aW9uIG9uQ2xvc2UoKSB7fVxufSk7XG5leHBvcnQgZGVmYXVsdCBUb2FzdENvbnRleHQ7IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlRXZlbnRDYWxsYmFjayBmcm9tICdAcmVzdGFydC9ob29rcy91c2VFdmVudENhbGxiYWNrJztcbmltcG9ydCB7IHVzZUJvb3RzdHJhcFByZWZpeCB9IGZyb20gJy4vVGhlbWVQcm92aWRlcic7XG5pbXBvcnQgQ2xvc2VCdXR0b24gZnJvbSAnLi9DbG9zZUJ1dHRvbic7XG5pbXBvcnQgVG9hc3RDb250ZXh0IGZyb20gJy4vVG9hc3RDb250ZXh0JztcbnZhciBkZWZhdWx0UHJvcHMgPSB7XG4gIGNsb3NlTGFiZWw6ICdDbG9zZScsXG4gIGNsb3NlQnV0dG9uOiB0cnVlXG59O1xudmFyIFRvYXN0SGVhZGVyID0gUmVhY3QuZm9yd2FyZFJlZihmdW5jdGlvbiAoX3JlZiwgcmVmKSB7XG4gIHZhciBic1ByZWZpeCA9IF9yZWYuYnNQcmVmaXgsXG4gICAgICBjbG9zZUxhYmVsID0gX3JlZi5jbG9zZUxhYmVsLFxuICAgICAgY2xvc2VCdXR0b24gPSBfcmVmLmNsb3NlQnV0dG9uLFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImJzUHJlZml4XCIsIFwiY2xvc2VMYWJlbFwiLCBcImNsb3NlQnV0dG9uXCIsIFwiY2xhc3NOYW1lXCIsIFwiY2hpbGRyZW5cIl0pO1xuXG4gIGJzUHJlZml4ID0gdXNlQm9vdHN0cmFwUHJlZml4KGJzUHJlZml4LCAndG9hc3QtaGVhZGVyJyk7XG4gIHZhciBjb250ZXh0ID0gdXNlQ29udGV4dChUb2FzdENvbnRleHQpO1xuICB2YXIgaGFuZGxlQ2xpY2sgPSB1c2VFdmVudENhbGxiYWNrKGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5vbkNsb3NlKSB7XG4gICAgICBjb250ZXh0Lm9uQ2xvc2UoZSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICByZWY6IHJlZlxuICB9LCBwcm9wcywge1xuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhic1ByZWZpeCwgY2xhc3NOYW1lKVxuICB9KSwgY2hpbGRyZW4sIGNsb3NlQnV0dG9uICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENsb3NlQnV0dG9uLCB7XG4gICAgbGFiZWw6IGNsb3NlTGFiZWwsXG4gICAgb25DbGljazogaGFuZGxlQ2xpY2ssXG4gICAgY2xhc3NOYW1lOiBcIm1sLTIgbWItMVwiLFxuICAgIFwiZGF0YS1kaXNtaXNzXCI6IFwidG9hc3RcIlxuICB9KSk7XG59KTtcblRvYXN0SGVhZGVyLmRpc3BsYXlOYW1lID0gJ1RvYXN0SGVhZGVyJztcblRvYXN0SGVhZGVyLmRlZmF1bHRQcm9wcyA9IGRlZmF1bHRQcm9wcztcbmV4cG9ydCBkZWZhdWx0IFRvYXN0SGVhZGVyOyIsInZhciBySHlwaGVuID0gLy0oLikvZztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNhbWVsaXplKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnJlcGxhY2Uockh5cGhlbiwgZnVuY3Rpb24gKF8sIGNocikge1xuICAgIHJldHVybiBjaHIudG9VcHBlckNhc2UoKTtcbiAgfSk7XG59IiwiaW1wb3J0IF9leHRlbmRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzXCI7XG5pbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2VcIjtcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IGNhbWVsaXplIGZyb20gJ2RvbS1oZWxwZXJzL2NhbWVsaXplJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VCb290c3RyYXBQcmVmaXggfSBmcm9tICcuL1RoZW1lUHJvdmlkZXInO1xuXG52YXIgcGFzY2FsQ2FzZSA9IGZ1bmN0aW9uIHBhc2NhbENhc2Uoc3RyKSB7XG4gIHJldHVybiBzdHJbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaXplKHN0cikuc2xpY2UoMSk7XG59O1xuXG4vLyBUT0RPOiBlbXN0cmljdGVuICYgZml4IHRoZSB0eXBpbmcgaGVyZSEgYGNyZWF0ZVdpdGhCc1ByZWZpeDxURWxlbWVudFR5cGU+Li4uYFxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlV2l0aEJzUHJlZml4KHByZWZpeCwgX3RlbXApIHtcbiAgdmFyIF9yZWYgPSBfdGVtcCA9PT0gdm9pZCAwID8ge30gOiBfdGVtcCxcbiAgICAgIF9yZWYkZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgZGlzcGxheU5hbWUgPSBfcmVmJGRpc3BsYXlOYW1lID09PSB2b2lkIDAgPyBwYXNjYWxDYXNlKHByZWZpeCkgOiBfcmVmJGRpc3BsYXlOYW1lLFxuICAgICAgQ29tcG9uZW50ID0gX3JlZi5Db21wb25lbnQsXG4gICAgICBkZWZhdWx0UHJvcHMgPSBfcmVmLmRlZmF1bHRQcm9wcztcblxuICB2YXIgQnNDb21wb25lbnQgPSBSZWFjdC5mb3J3YXJkUmVmKGZ1bmN0aW9uIChfcmVmMiwgcmVmKSB7XG4gICAgdmFyIGNsYXNzTmFtZSA9IF9yZWYyLmNsYXNzTmFtZSxcbiAgICAgICAgYnNQcmVmaXggPSBfcmVmMi5ic1ByZWZpeCxcbiAgICAgICAgX3JlZjIkYXMgPSBfcmVmMi5hcyxcbiAgICAgICAgVGFnID0gX3JlZjIkYXMgPT09IHZvaWQgMCA/IENvbXBvbmVudCB8fCAnZGl2JyA6IF9yZWYyJGFzLFxuICAgICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYyLCBbXCJjbGFzc05hbWVcIiwgXCJic1ByZWZpeFwiLCBcImFzXCJdKTtcblxuICAgIHZhciByZXNvbHZlZFByZWZpeCA9IHVzZUJvb3RzdHJhcFByZWZpeChic1ByZWZpeCwgcHJlZml4KTtcbiAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVGFnLCBfZXh0ZW5kcyh7XG4gICAgICByZWY6IHJlZixcbiAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsIHJlc29sdmVkUHJlZml4KVxuICAgIH0sIHByb3BzKSk7XG4gIH0pO1xuICBCc0NvbXBvbmVudC5kZWZhdWx0UHJvcHMgPSBkZWZhdWx0UHJvcHM7XG4gIEJzQ29tcG9uZW50LmRpc3BsYXlOYW1lID0gZGlzcGxheU5hbWU7XG4gIHJldHVybiBCc0NvbXBvbmVudDtcbn0iLCJpbXBvcnQgY3JlYXRlV2l0aEJzUHJlZml4IGZyb20gJy4vY3JlYXRlV2l0aEJzUHJlZml4JztcbmV4cG9ydCBkZWZhdWx0IGNyZWF0ZVdpdGhCc1ByZWZpeCgndG9hc3QtYm9keScpOyIsImltcG9ydCBfZXh0ZW5kcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kc1wiO1xuaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VNZW1vLCB1c2VSZWYsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgdXNlVGltZW91dCBmcm9tICdAcmVzdGFydC9ob29rcy91c2VUaW1lb3V0JztcbmltcG9ydCBGYWRlIGZyb20gJy4vRmFkZSc7XG5pbXBvcnQgVG9hc3RIZWFkZXIgZnJvbSAnLi9Ub2FzdEhlYWRlcic7XG5pbXBvcnQgVG9hc3RCb2R5IGZyb20gJy4vVG9hc3RCb2R5JztcbmltcG9ydCB7IHVzZUJvb3RzdHJhcFByZWZpeCB9IGZyb20gJy4vVGhlbWVQcm92aWRlcic7XG5pbXBvcnQgVG9hc3RDb250ZXh0IGZyb20gJy4vVG9hc3RDb250ZXh0JztcbnZhciBUb2FzdCA9IFJlYWN0LmZvcndhcmRSZWYoZnVuY3Rpb24gKF9yZWYsIHJlZikge1xuICB2YXIgYnNQcmVmaXggPSBfcmVmLmJzUHJlZml4LFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sXG4gICAgICBfcmVmJHRyYW5zaXRpb24gPSBfcmVmLnRyYW5zaXRpb24sXG4gICAgICBUcmFuc2l0aW9uID0gX3JlZiR0cmFuc2l0aW9uID09PSB2b2lkIDAgPyBGYWRlIDogX3JlZiR0cmFuc2l0aW9uLFxuICAgICAgX3JlZiRzaG93ID0gX3JlZi5zaG93LFxuICAgICAgc2hvdyA9IF9yZWYkc2hvdyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkc2hvdyxcbiAgICAgIF9yZWYkYW5pbWF0aW9uID0gX3JlZi5hbmltYXRpb24sXG4gICAgICBhbmltYXRpb24gPSBfcmVmJGFuaW1hdGlvbiA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9yZWYkYW5pbWF0aW9uLFxuICAgICAgX3JlZiRkZWxheSA9IF9yZWYuZGVsYXksXG4gICAgICBkZWxheSA9IF9yZWYkZGVsYXkgPT09IHZvaWQgMCA/IDMwMDAgOiBfcmVmJGRlbGF5LFxuICAgICAgX3JlZiRhdXRvaGlkZSA9IF9yZWYuYXV0b2hpZGUsXG4gICAgICBhdXRvaGlkZSA9IF9yZWYkYXV0b2hpZGUgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRhdXRvaGlkZSxcbiAgICAgIG9uQ2xvc2UgPSBfcmVmLm9uQ2xvc2UsXG4gICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcImJzUHJlZml4XCIsIFwiY2xhc3NOYW1lXCIsIFwiY2hpbGRyZW5cIiwgXCJ0cmFuc2l0aW9uXCIsIFwic2hvd1wiLCBcImFuaW1hdGlvblwiLCBcImRlbGF5XCIsIFwiYXV0b2hpZGVcIiwgXCJvbkNsb3NlXCJdKTtcblxuICBic1ByZWZpeCA9IHVzZUJvb3RzdHJhcFByZWZpeChic1ByZWZpeCwgJ3RvYXN0Jyk7IC8vIFdlIHVzZSByZWZzIGZvciB0aGVzZSwgYmVjYXVzZSB3ZSBkb24ndCB3YW50IHRvIHJlc3RhcnQgdGhlIGF1dG9oaWRlXG4gIC8vIHRpbWVyIGluIGNhc2UgdGhlc2UgdmFsdWVzIGNoYW5nZS5cblxuICB2YXIgZGVsYXlSZWYgPSB1c2VSZWYoZGVsYXkpO1xuICB2YXIgb25DbG9zZVJlZiA9IHVzZVJlZihvbkNsb3NlKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBkZWxheVJlZi5jdXJyZW50ID0gZGVsYXk7XG4gICAgb25DbG9zZVJlZi5jdXJyZW50ID0gb25DbG9zZTtcbiAgfSwgW2RlbGF5LCBvbkNsb3NlXSk7XG4gIHZhciBhdXRvaGlkZVRpbWVvdXQgPSB1c2VUaW1lb3V0KCk7XG4gIHZhciBhdXRvaGlkZVRvYXN0ID0gISEoYXV0b2hpZGUgJiYgc2hvdyk7XG4gIHZhciBhdXRvaGlkZUZ1bmMgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGF1dG9oaWRlVG9hc3QpIHtcbiAgICAgIG9uQ2xvc2VSZWYuY3VycmVudCA9PSBudWxsID8gdm9pZCAwIDogb25DbG9zZVJlZi5jdXJyZW50KCk7XG4gICAgfVxuICB9LCBbYXV0b2hpZGVUb2FzdF0pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIC8vIE9ubHkgcmVzZXQgdGltZXIgaWYgc2hvdyBvciBhdXRvaGlkZSBjaGFuZ2VzLlxuICAgIGF1dG9oaWRlVGltZW91dC5zZXQoYXV0b2hpZGVGdW5jLCBkZWxheVJlZi5jdXJyZW50KTtcbiAgfSwgW2F1dG9oaWRlVGltZW91dCwgYXV0b2hpZGVGdW5jXSk7XG4gIHZhciB0b2FzdENvbnRleHQgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgb25DbG9zZTogb25DbG9zZVxuICAgIH07XG4gIH0sIFtvbkNsb3NlXSk7XG4gIHZhciBoYXNBbmltYXRpb24gPSAhIShUcmFuc2l0aW9uICYmIGFuaW1hdGlvbik7XG4gIHZhciB0b2FzdCA9IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9leHRlbmRzKHt9LCBwcm9wcywge1xuICAgIHJlZjogcmVmLFxuICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lcyhic1ByZWZpeCwgY2xhc3NOYW1lLCAhaGFzQW5pbWF0aW9uICYmIChzaG93ID8gJ3Nob3cnIDogJ2hpZGUnKSksXG4gICAgcm9sZTogXCJhbGVydFwiLFxuICAgIFwiYXJpYS1saXZlXCI6IFwiYXNzZXJ0aXZlXCIsXG4gICAgXCJhcmlhLWF0b21pY1wiOiBcInRydWVcIlxuICB9KSwgY2hpbGRyZW4pO1xuICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVG9hc3RDb250ZXh0LlByb3ZpZGVyLCB7XG4gICAgdmFsdWU6IHRvYXN0Q29udGV4dFxuICB9LCBoYXNBbmltYXRpb24gJiYgVHJhbnNpdGlvbiA/IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFRyYW5zaXRpb24sIHtcbiAgICBpbjogc2hvdyxcbiAgICB1bm1vdW50T25FeGl0OiB0cnVlXG4gIH0sIHRvYXN0KSA6IHRvYXN0KTtcbn0pO1xuVG9hc3QuZGlzcGxheU5hbWUgPSAnVG9hc3QnO1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbihUb2FzdCwge1xuICBCb2R5OiBUb2FzdEJvZHksXG4gIEhlYWRlcjogVG9hc3RIZWFkZXJcbn0pOyIsImltcG9ydCBSZWFjdCwge3VzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrLCBtZW1vfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuaW1wb3J0ICogYXMgY29uc3RzIGZyb20gJy4vY29uc3RzJ1xyXG5pbXBvcnQge0J1dHRvbn0gZnJvbSBcIkBjb21tb24tY29tcG9uZW50cy9CdXR0b24vQnV0dG9uXCI7XHJcbmltcG9ydCB7VG9hc3R9IGZyb20gXCJyZWFjdC1ib290c3RyYXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0eWxlZChtZW1vKCh7Y2xhc3NOYW1lLCB0ZXh0VmFsdWUsIG9uU3VibWl0OiBfb25TdWJtaXQsIGVycm9yOiBvdXRlckVycm9yLCBjbGVhckVycm9yOiBjbGVhck91dGVyRXJyb3J9KSA9PiB7XHJcblxyXG4gICAgICAgIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9IHVzZVN0YXRlKHRleHRWYWx1ZSk7XHJcbiAgICAgICAgY29uc3QgW3Nob3dUb2FzdCwgc2V0U2hvd1RvYXN0XSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICAgICAgICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlKG51bGwpO1xyXG5cclxuICAgICAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZXJyb3IpIHNldFNob3dUb2FzdCh0cnVlKTtcclxuICAgICAgICAgICAgZWxzZSBzZXRTaG93VG9hc3QoZmFsc2UpO1xyXG4gICAgICAgIH0sIFtlcnJvcl0pO1xyXG5cclxuICAgICAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAob3V0ZXJFcnJvcikgc2V0RXJyb3Iob3V0ZXJFcnJvcik7XHJcbiAgICAgICAgfSwgW291dGVyRXJyb3JdKTtcclxuXHJcbiAgICAgICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICAgICAgc2V0VGV4dCh0ZXh0VmFsdWUpO1xyXG4gICAgICAgIH0sIFt0ZXh0VmFsdWVdKTtcclxuXHJcbiAgICAgICAgY29uc3QgY2xlYXJFcnJvciA9IHVzZUNhbGxiYWNrKCgpID0+IHtcclxuICAgICAgICAgICAgc2V0RXJyb3IobnVsbCk7XHJcbiAgICAgICAgICAgIGlmIChvdXRlckVycm9yKSBjbGVhck91dGVyRXJyb3IoKTtcclxuICAgICAgICB9LCBbc2V0RXJyb3IsIG91dGVyRXJyb3JdKTtcclxuXHJcbiAgICAgICAgY29uc3Qgb25TdWJtaXQgPSB1c2VDYWxsYmFjayhlID0+IHtcclxuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBjbGVhckVycm9yKCk7XHJcbiAgICAgICAgICAgIF9vblN1Ym1pdCh7bmFtZTogdGV4dH0pO1xyXG4gICAgICAgIH0sIFtzaG93VG9hc3QsIHNldFNob3dUb2FzdCwgX29uU3VibWl0LCB0ZXh0XSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG9uQ2hhbmdlID0gdXNlQ2FsbGJhY2soZSA9PiB7XHJcbiAgICAgICAgICAgIGNsZWFyRXJyb3IoKTtcclxuICAgICAgICAgICAgaWYgKC9eW2EtekEtWiBdKyQvLnRlc3QoZS50YXJnZXQudmFsdWUpIHx8IGUudGFyZ2V0LnZhbHVlID09PSAnJylcclxuICAgICAgICAgICAgICAgIHNldFRleHQoZS50YXJnZXQudmFsdWUpO1xyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBzZXRFcnJvcihjb25zdHMuT05MWV9FTkdMSVNIX0xFVFRFUlMpO1xyXG4gICAgICAgIH0sIFtzZXRUZXh0LCBzaG93VG9hc3QsIHNldFNob3dUb2FzdF0pO1xyXG5cclxuICAgICAgICByZXR1cm4gPGZvcm0gey4uLntjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCAnc2VhcmNoLWZvcm0nKSwgb25TdWJtaXR9fT5cclxuICAgICAgICAgICAgPGlucHV0IHsuLi57dmFsdWU6IHRleHQgfHwgXCJcIiwgb25DaGFuZ2V9fS8+XHJcbiAgICAgICAgICAgIDxCdXR0b24gY2xhc3NOYW1lPSdzZWFyY2gtYnV0dG9uJz57Y29uc3RzLlNFQVJDSF9CVVRUT059PC9CdXR0b24+XHJcbiAgICAgICAgICAgIDxUb2FzdCB7Li4ue3Nob3c6IHNob3dUb2FzdCwgb25DbG9zZTogY2xlYXJFcnJvciwgY2xhc3NOYW1lOiBcImZvcm0tdG9hc3RcIn19PlxyXG4gICAgICAgICAgICAgICAgPFRvYXN0LkhlYWRlcj57Y29uc3RzLlRPQVNUX0hFQURFUl9URVhUfTwvVG9hc3QuSGVhZGVyPlxyXG4gICAgICAgICAgICAgICAgPFRvYXN0LkJvZHk+e2Vycm9yfTwvVG9hc3QuQm9keT5cclxuICAgICAgICAgICAgPC9Ub2FzdD5cclxuICAgICAgICA8L2Zvcm0+XHJcbiAgICB9XHJcbikpXHJcbiAgICBgJHtzdHlsZXMuU2VhcmNoRm9ybX1gO1xyXG4iLCJleHBvcnQgY29uc3QgU0VBUkNIX0JVVFRPTiA9ICdHZXQgV2VhdGhlcic7XHJcbmV4cG9ydCBjb25zdCBPTkxZX0VOR0xJU0hfTEVUVEVSUyA9ICdPbmx5IGVuZ2xpc2ggbGV0dGVycyBhcmUgYWxsb3dlZC4nO1xyXG5leHBvcnQgY29uc3QgVE9BU1RfSEVBREVSX1RFWFQgPSBcIk9vcHMuLlwiO1xyXG4iLCJpbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXHJcbmltcG9ydCB7Z2V0Q29sb3J9IGZyb20gJ3N0eWxlcy9oZWxwZXInO1xyXG5pbXBvcnQge3RyYW5zcGFyZW50aXplfSBmcm9tICdwb2xpc2hlZCc7XHJcblxyXG5leHBvcnQgY29uc3QgV2VhdGhlciA9IGNzc2BcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZmxleDogMTtcclxuICAgIFxyXG4gICAgPiBoMiB7XHJcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICR7Z2V0Q29sb3IoJ3ByaW1hcnknKX07XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDVweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IC5jdXJyZW50LXdlYXRoZXItd3JhcHBlciB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2RhcmsnKX07XHJcbiAgICAgICAgbWFyZ2luOiAyMHB4IDEwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgICAgICBtaW4td2lkdGg6IDI1MHB4O1xyXG4gICAgICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCAkeyhwcm9wcykgPT4gdHJhbnNwYXJlbnRpemUoMC41LCBnZXRDb2xvcigncHJpbWFyeScpKHByb3BzKSl9O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkeyhwcm9wcykgPT4gdHJhbnNwYXJlbnRpemUoMC41LCBnZXRDb2xvcigncHJpbWFyeScpKHByb3BzKSl9O1xyXG4gICAgfSAgICBcclxuICAgIFxyXG5gO1xyXG4iLCJleHBvcnQgY29uc3QgZ2V0SW5pdENvbXBsZXRlZCA9ICh7d2VhdGhlcn0pID0+IHdlYXRoZXIuaW5pdENvbXBsZXRlZDtcclxuZXhwb3J0IGNvbnN0IGdldFdlYXRoZXJEYXRhID0gKHt3ZWF0aGVyfSkgPT4gd2VhdGhlci53ZWF0aGVyRGF0YTtcclxuZXhwb3J0IGNvbnN0IGdldEZvcm1FcnJvciA9ICh7d2VhdGhlcn0pID0+IHdlYXRoZXIuZm9ybUVycm9yO1xyXG4iLCJjb25zdCBCQVNFID0gXCJXRUFUSEVSL1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IElOSVQgPSBgJHtCQVNFfUlOSVRgO1xyXG5leHBvcnQgY29uc3QgU0VUX1dFQVRIRVJfREFUQSA9IGAke0JBU0V9U0VUX1dFQVRIRVJfREFUQWA7XHJcbmV4cG9ydCBjb25zdCBTRVRfRk9STV9FUlJPUiA9IGAke0JBU0V9U0VUX0ZPUk1fRVJST1JgO1xyXG5leHBvcnQgY29uc3QgU0VUX0lOSVRfQ09NUExFVEVEID0gYCR7QkFTRX1TRVRfSU5JVF9DT01QTEVURURgO1xyXG4iLCJleHBvcnQgY29uc3QgY3JlYXRlQWN0aW9uID0gdHlwZSA9PiBkYXRhID0+ICh7dHlwZSwgZGF0YX0pO1xyXG5leHBvcnQgY29uc3QgdXBkYXRlU3RhdGUgPSAoe3N0YXRlLCBkYXRhfSkgPT4gKHsuLi5zdGF0ZSwgLi4uZGF0YX0pO1xyXG4iLCJpbXBvcnQgKiBhcyB0eXBlcyBmcm9tICcuL3R5cGVzJztcclxuaW1wb3J0IHtjcmVhdGVBY3Rpb259IGZyb20gXCJzdG9yZS91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldEluaXREYXRhID0gY3JlYXRlQWN0aW9uKHR5cGVzLklOSVQpO1xyXG5leHBvcnQgY29uc3Qgc2V0SW5pdENvbXBsZXRlZCA9IGNyZWF0ZUFjdGlvbih0eXBlcy5TRVRfSU5JVF9DT01QTEVURUQpXHJcbmV4cG9ydCBjb25zdCBzZXRXZWF0aGVyRGF0YSA9IGNyZWF0ZUFjdGlvbih0eXBlcy5TRVRfV0VBVEhFUl9EQVRBKTtcclxuZXhwb3J0IGNvbnN0IHNldEZvcm1FcnJvciA9IGNyZWF0ZUFjdGlvbih0eXBlcy5TRVRfRk9STV9FUlJPUilcclxuIiwiaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuXHJcbmNvbnN0IEFQSV9LRVkgPSAnd3Y0Z3l0akFHU0UyeDFLSVZxQ3BrQVh1UkJaTGpodmonO1xyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBmZXRjaEN1cnJlbnRXZWF0aGVyID0gKHtsb2NhdGlvbktleX0pID0+XHJcbiAgICBheGlvcy5nZXQoYGh0dHBzOi8vZGF0YXNlcnZpY2UuYWNjdXdlYXRoZXIuY29tL2N1cnJlbnRjb25kaXRpb25zL3YxLyR7bG9jYXRpb25LZXl9YCxcclxuICAgICAgICB7cGFyYW1zOiB7YXBpa2V5OiBBUElfS0VZfX0pO1xyXG5cclxuZXhwb3J0IGNvbnN0IGZldGNoNURheXNGb3JlY2FzdCA9ICh7bG9jYXRpb25LZXl9KSA9PlxyXG4gICAgYXhpb3MuZ2V0KGBodHRwczovL2RhdGFzZXJ2aWNlLmFjY3V3ZWF0aGVyLmNvbS9mb3JlY2FzdHMvdjEvZGFpbHkvNWRheS8ke2xvY2F0aW9uS2V5fWAsXHJcbiAgICAgICAge3BhcmFtczoge2FwaWtleTogQVBJX0tFWX19KTtcclxuXHJcbmV4cG9ydCBjb25zdCBmZXRjaEF1dG9Db21wbGV0aW9uID0gYXN5bmMgKHt0ZXh0fSkgPT5cclxuICAgIGF4aW9zLmdldChcImh0dHBzOi8vZGF0YXNlcnZpY2UuYWNjdXdlYXRoZXIuY29tL2xvY2F0aW9ucy92MS9jaXRpZXMvYXV0b2NvbXBsZXRlXCIsXHJcbiAgICAgICAge3BhcmFtczoge2FwaWtleTogQVBJX0tFWSwgcTogdGV4dH19KTtcclxuXHJcbmV4cG9ydCBjb25zdCBmZXRjaExvY2F0aW9uQnlDb29yZHMgPSBhc3luYyAoe2Nvb3Jkc30pID0+XHJcbiAgICBheGlvcy5nZXQoXCJodHRwczovL2RhdGFzZXJ2aWNlLmFjY3V3ZWF0aGVyLmNvbS9sb2NhdGlvbnMvdjEvY2l0aWVzL2dlb3Bvc2l0aW9uL3NlYXJjaFwiLFxyXG4gICAgICAgIHtwYXJhbXM6IHthcGlrZXk6IEFQSV9LRVksIHE6IGNvb3Jkc319KTtcclxuIiwiY29uc3QgQkFTRSA9IFwiTEFZT1VUL1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IElOSVQgPSBgJHtCQVNFfUlOSVRgO1xyXG5leHBvcnQgY29uc3QgU0VUX0NJVFkgPSBgJHtCQVNFfVNFVF9DSVRZYDtcclxuZXhwb3J0IGNvbnN0IFNFVF9HTE9CQUxfRVJST1IgPSBgJHtCQVNFfVNFVF9HTE9CQUxfRVJST1JgO1xyXG5leHBvcnQgY29uc3QgU0VUX0ZBVk9SSVRFUyA9IGAke0JBU0V9U0VUX0ZBVk9SSVRFU2A7XHJcbiIsImltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4vdHlwZXMnO1xyXG5pbXBvcnQge2NyZWF0ZUFjdGlvbn0gZnJvbSAnc3RvcmUvdXRpbHMnXHJcblxyXG5leHBvcnQgY29uc3Qgc2V0SW5pdERhdGEgPSBjcmVhdGVBY3Rpb24odHlwZXMuSU5JVCk7XHJcbmV4cG9ydCBjb25zdCBzZXRDaXR5ID0gY3JlYXRlQWN0aW9uKHR5cGVzLlNFVF9DSVRZKTtcclxuZXhwb3J0IGNvbnN0IHNldEdsb2JhbEVycm9yID0gY3JlYXRlQWN0aW9uKHR5cGVzLlNFVF9HTE9CQUxfRVJST1IpO1xyXG5leHBvcnQgY29uc3Qgc2V0RmF2b3JpdGVzID0gY3JlYXRlQWN0aW9uKHR5cGVzLlNFVF9GQVZPUklURVMpXHJcblxyXG4iLCJpbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXHJcbmltcG9ydCB7Z2V0Q29sb3J9IGZyb20gXCJzdHlsZXMvaGVscGVyXCI7XHJcbmltcG9ydCB7dHJhbnNwYXJlbnRpemV9IGZyb20gJ3BvbGlzaGVkJztcclxuXHJcbmV4cG9ydCBjb25zdCBDdXJyZW50V2VhdGhlciA9IGNzc2BcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgbWFyZ2luOiAxMHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgbWluLXdpZHRoOiAyMDBweDtcclxuICAgIGhlaWdodDogYXV0bztcclxuICAgIFxyXG4gICAgPiAuaGVhZGVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICBcclxuICAgICAgICA6YmVmb3JlIHtcclxuICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgICAgZmxleDogMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgPiBoNCB7XHJcbiAgICAgICAgICAgIGZsZXg6IDY7IFxyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgICAgICAgICAgbWFyZ2luOiAwcHggMjBweDsgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgPiAuaWNvbi1hbGlnbmVyIHtcclxuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1zdGFydDtcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogM3B4O1xyXG4gICAgICAgICAgICBmbGV4OiAxO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+ICoge1xyXG4gICAgICAgIGZsZXg6IDEgMTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgPiAudGVtcGVyYXR1cmVzLXdyYXBwZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBib3JkZXItdG9wOiAycHggc29saWQgJHtwcm9wcyA9PiB0cmFuc3BhcmVudGl6ZSgwLjUsIGdldENvbG9yKCdiYWNrZ3JvdW5kJykocHJvcHMpKX07XHJcbiAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgICAgICBcclxuICAgICAgICA+IC50ZW1wZXJhdHVyZXMtaGVhZGluZyB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAwcHggNXB4O1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgPiAuZGVncmVlcy13cmFwcGVyIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDVweDtcclxuICAgICAgICBcclxuICAgICAgICAgICAgPiBkaXYge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luOiAwcHggMTBweDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9ICAgICAgICAgICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IGEge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIHdvcmQtc3BhY2luZzogLTAuNnB4O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcbiAgICB9XHJcbmA7XHJcbiIsImltcG9ydCBSZWFjdCwge3VzZU1lbW8sIHVzZUNhbGxiYWNrLCBtZW1vfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuaW1wb3J0IHtMb2FkZXIsIEZhdm9yaXRlSWNvbiwgRGVncmVlc30gZnJvbSAnQGNvbW1vbi1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgY29uc3RzIGZyb20gXCIuL2NvbnN0c1wiO1xyXG5pbXBvcnQge1BDTWVkaWFRdWVyeSwgTW9iaWxlTWVkaWFRdWVyeX0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcblxyXG5jb25zdCBMaW5rID0gKHt1cmx9KSA9PiB7XHJcbiAgICBjb25zdCBvbkNsaWNrID0gdXNlQ2FsbGJhY2soZSA9PiB7XHJcbiAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgd2luZG93Lm9wZW4odXJsKTtcclxuICAgIH0sIFt1cmxdKVxyXG5cclxuICAgIHJldHVybiA8YSB7Li4ue2hyZWY6IFwiXCIsIG9uQ2xpY2t9fT57Y29uc3RzLkxJTkt9PC9hPlxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3R5bGVkKG1lbW8oKHtjbGFzc05hbWUsIGlzRmF2b3JpdGUsIGRhdGEsIGNpdHksIG9uQ2xpY2s6IF9vbkNsaWNrLCBvbkZhdm9yaXRlSWNvbkNsaWNrZWR9KSA9PiB7XHJcblxyXG4gICAgY29uc3Qgb25DbGljayA9IHVzZUNhbGxiYWNrKCgpID0+IF9vbkNsaWNrICYmIF9vbkNsaWNrKGNpdHkpLCBbY2l0eV0pO1xyXG5cclxuICAgIGNvbnN0IG9uSWNvbkNsaWNrZWQgPSB1c2VDYWxsYmFjaygoe2lzRmF2b3JpdGV9KSA9PlxyXG4gICAgICAgICAgICBvbkZhdm9yaXRlSWNvbkNsaWNrZWQoe2tleTogY2l0eS5rZXksIGlzRmF2b3JpdGV9KVxyXG4gICAgICAgICwgW2NpdHkua2V5LCBvbkZhdm9yaXRlSWNvbkNsaWNrZWRdKTtcclxuXHJcbiAgICBjb25zdCB0ZW1wZXJhdHVyZXNDb250ZW50ID0gdXNlTWVtbygoKSA9PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0ndGVtcGVyYXR1cmVzLXdyYXBwZXInPlxyXG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSd0ZW1wZXJhdHVyZXMtaGVhZGluZyc+e2NvbnN0cy5URU1QRVJBVFVSRVNfSEVBRElOR308L3NwYW4+XHJcblxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RlZ3JlZXMtd3JhcHBlcic+XHJcbiAgICAgICAgICAgICAgICAgICAge2RhdGEgJiYgZGF0YS5UZW1wZXJhdHVyZSAmJiBPYmplY3Qua2V5cyhkYXRhLlRlbXBlcmF0dXJlKS5tYXAodGVtcFR5cGUgPT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPERlZ3JlZXMgey4uLntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogdGVtcFR5cGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiB0ZW1wVHlwZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBkYXRhLlRlbXBlcmF0dXJlW3RlbXBUeXBlXS5WYWx1ZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVuaXQ6IGRhdGEuVGVtcGVyYXR1cmVbdGVtcFR5cGVdLlVuaXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfX0vPlxyXG4gICAgICAgICAgICAgICAgICAgICl9XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICwgW2RhdGEgJiYgZGF0YS5UZW1wZXJhdHVyZV0pO1xyXG5cclxuXHJcbiAgICByZXR1cm4gPGRpdiB7Li4ue2NsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsICdjdXJyZW50LXdlYXRoZXInKSwgb25DbGlja319PlxyXG4gICAgICAgIHshZGF0YSA/XHJcbiAgICAgICAgICAgIDxMb2FkZXIvPiA6XHJcbiAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0naGVhZGVyJz5cclxuICAgICAgICAgICAgICAgICAgICA8aDQ+e2NpdHkubmFtZX08L2g0PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdpY29uLWFsaWduZXInPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8RmF2b3JpdGVJY29uIHsuLi57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrOiBvbkljb25DbGlja2VkLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNGYXZvcml0ZVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9fS8+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj57ZGF0YS5Jc0RheVRpbWUgPyBjb25zdHMuREFZX1RJTUUgOiBjb25zdHMuTklHSFRfVElNRX08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICA8c3Bhbj57ZGF0YS5XZWF0aGVyVGV4dH08L3NwYW4+XHJcbiAgICAgICAgICAgICAgICB7dGVtcGVyYXR1cmVzQ29udGVudH1cclxuICAgICAgICAgICAgICAgIDxQQ01lZGlhUXVlcnk+PExpbmsgdXJsPXtkYXRhLkxpbmt9Lz48L1BDTWVkaWFRdWVyeT5cclxuICAgICAgICAgICAgICAgIDxNb2JpbGVNZWRpYVF1ZXJ5PjxMaW5rIHVybD17ZGF0YS5Nb2JpbGVMaW5rfS8+PC9Nb2JpbGVNZWRpYVF1ZXJ5PlxyXG4gICAgICAgICAgICA8Lz59XHJcbiAgICA8L2Rpdj47XHJcblxyXG59KSlgJHtzdHlsZXMuQ3VycmVudFdlYXRoZXJ9YDtcclxuIiwiZXhwb3J0IGNvbnN0IERBWV9USU1FID0gXCJEYXkgVGltZVwiO1xyXG5leHBvcnQgY29uc3QgTklHSFRfVElNRSA9IFwiTmlnaHQgVGltZVwiO1xyXG5leHBvcnQgY29uc3QgVEVNUEVSQVRVUkVTX0hFQURJTkcgPSAnVGVtcGVyYXR1cmVzOidcclxuZXhwb3J0IGNvbnN0IExJTksgPSAnTGluayBUbyBSZXNvdXJjZSc7XHJcbiIsImltcG9ydCB7Y3NzfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcclxuaW1wb3J0IHtnZXRDb2xvciwgaXNNb2JpbGV9IGZyb20gJ3N0eWxlcy9oZWxwZXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZvcmVjYXN0ID0gY3NzYFxyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgbWluLXdpZHRoOiAyNDBweDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBcclxuICAgICR7aXNNb2JpbGUoY3NzYFxyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgcGFkZGluZzogMHB4IDEwcHg7XHJcbiAgICBgKX07XHJcbiAgICBcclxuICAgID4gLmZvcmVjYXN0LWhlYWRpbmcge1xyXG4gICAgICAgIG1hcmdpbjogMHB4IGF1dG8gMTdweCBhdXRvO1xyXG4gICAgICAgIHBhZGRpbmc6IDBweCA1cHg7XHJcbiAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAke2dldENvbG9yKCdwcmltYXJ5Jyl9O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IC5zdW1tYXJ5LXRleHQge1xyXG4gICAgICAgIG1hcmdpbjogMHB4IGF1dG8gMTVweCBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiBmaXQtY29udGVudDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweDtcclxuICAgICAgICBcclxuICAgICAgICA+IHNwYW4ge1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IC5kYWlseS1mb3JlY2FzdHMge1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJHtpc01vYmlsZShjc3NgXHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgYCl9O1xyXG4gICAgfVxyXG5gO1xyXG4iLCJpbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXHJcbmltcG9ydCB7Z2V0Q29sb3IsIGlzTW9iaWxlfSBmcm9tICdzdHlsZXMvaGVscGVyJztcclxuXHJcbmV4cG9ydCBjb25zdCBEYXkgPSBjc3NgXHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIHBhZGRpbmc6IDEwcHggNXB4O1xyXG4gICAgZmxleDogMSAwIDEyM3B4O1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAzcHggMXB4ICR7Z2V0Q29sb3IoJ3ByaW1hcnknKX07XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBtYXJnaW46IDBweCAxMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdkYXJrJyl9O1xyXG4gICAgXHJcbiAgICAke2lzTW9iaWxlKGNzc2BcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBtYXJnaW46IDEwcHggMHB4O1xyXG5cclxuICAgIGApfTtcclxuICAgIFxyXG4gICAgPiBkaXYge1xyXG4gICAgXHJcbiAgICAgICAgZmxleDogMSAxO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgXHJcbiAgICAgICAgPiAqIHtcclxuICAgICAgICAgICAgZmxleDogMSAwIDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IC5oZWFkZXIge1xyXG4gICAgICAgIFxyXG4gICAgICAgIG1hcmdpbjogMHB4IGF1dG8gOHB4IGF1dG8gIDtcclxuICAgICAgICBcclxuICAgICAgICA+IHNwYW4ge1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgICAgICAgICAgcGFkZGluZzogNXB4IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgIFxyXG4gICAgPiAuZGF5IHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2xpZ2h0Jyl9O1xyXG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAxMHB4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9O1xyXG4gICAgXHJcbiAgICA+IC5uaWdodCB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdsaWdodCcpfTtcclxuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMTBweDtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgfTsgXHJcbiAgICBcclxuICAgID4gLnJhbmdlIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIFxyXG4gICAgICAgID4gLmRhc2gge1xyXG4gICAgICAgICAgICBtYXJnaW46IDBweCA1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5gO1xyXG4iLCJleHBvcnQgY29uc3QgREFZU19UT19URVhUID0ge1xyXG4gICAgMDogXCJTYXR1cmRheVwiLFxyXG4gICAgMTpcIlN1bmRheVwiLFxyXG4gICAgMjogXCJNb25kYXlcIixcclxuICAgIDM6IFwiVHVlc2RheVwiLFxyXG4gICAgNDogXCJXZWRuZXNkYXlcIixcclxuICAgIDU6IFwiVGh1cnNkYXlcIixcclxuICAgIDY6IFwiRnJpZGF5XCJcclxufTtcclxuZXhwb3J0IGNvbnN0IERBU0ggPSAnLSc7XHJcbmV4cG9ydCBjb25zdCBEQVkgPSAnRGF5JztcclxuZXhwb3J0IGNvbnN0IE5JR0hUID0gJ05pZ2h0JztcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgKiBhcyBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xyXG5pbXBvcnQgKiBhcyBjb25zdHMgZnJvbSAnLi9jb25zdHMnXHJcbmltcG9ydCB7RGVncmVlc30gZnJvbSAnQGNvbW1vbi1jb21wb25lbnRzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgc3R5bGVkKCh7Y2xhc3NOYW1lLCBEYXRlOiBfZGF0ZSwgRGF5LCBOaWdodCwgVGVtcGVyYXR1cmV9KSA9PiB7XHJcbiAgICBjb25zdCBkYXRlVGV4dCA9IGNvbnN0cy5EQVlTX1RPX1RFWFRbbmV3IERhdGUoX2RhdGUpLmdldERheSgpXTtcclxuXHJcbiAgICByZXR1cm4gPGRpdiB7Li4ue2NsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsICdkYXknKX19PlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0naGVhZGVyJz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkYXRlJz57ZGF0ZVRleHR9PC9zcGFuPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGF5Jz5cclxuICAgICAgICAgICAgPHNwYW4+e2NvbnN0cy5EQVl9PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3Bhbj57Y29uc3RzLkRBU0h9PC9zcGFuPlxyXG4gICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9J3BocmFzZSc+e0RheS5JY29uUGhyYXNlfTwvc3Bhbj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J25pZ2h0Jz5cclxuICAgICAgICAgICAgPHNwYW4+e2NvbnN0cy5OSUdIVH08L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuPntjb25zdHMuREFTSH08L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT0ncGhyYXNlJz57TmlnaHQuSWNvblBocmFzZX08L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdyYW5nZSc+XHJcbiAgICAgICAgICAgIDxEZWdyZWVzIHsuLi57dmFsdWU6IFRlbXBlcmF0dXJlLk1pbmltdW0uVmFsdWUsIHVuaXQ6IFRlbXBlcmF0dXJlLk1pbmltdW0uVW5pdH19Lz5cclxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPSdkYXNoJz57Y29uc3RzLkRBU0h9PC9zcGFuPlxyXG4gICAgICAgICAgICA8RGVncmVlcyB7Li4ue3ZhbHVlOiBUZW1wZXJhdHVyZS5NYXhpbXVtLlZhbHVlLCB1bml0OiBUZW1wZXJhdHVyZS5NYXhpbXVtLlVuaXR9fS8+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgPC9kaXY+XHJcbn0pYCR7c3R5bGVzLkRheX1gO1xyXG5cclxuIiwiaW1wb3J0IFJlYWN0LCB7bWVtb30gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XHJcbmltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICcuL2NvbnN0cydcclxuaW1wb3J0IERheSBmcm9tIFwiLi9jb21wb25lbnRzL0RheS9EYXlcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0eWxlZChtZW1vKCh7Y2xhc3NOYW1lLCBkYXRhID0ge0hlYWRsaW5lOiB7fSwgRGFpbHlGb3JlY2FzdHM6IFtdfX0pID0+XHJcbiAgICA8ZGl2IHsuLi57Y2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ2ZvcmVjYXN0Jyl9fT5cclxuICAgICAgICA8aDMgY2xhc3NOYW1lPSdmb3JlY2FzdC1oZWFkaW5nJz57Y29uc3RzLkhFQURJTkd9PC9oMz5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nc3VtbWFyeS10ZXh0Jz48c3Bhbj57Y29uc3RzLlNVTU1BUll9PC9zcGFuPntkYXRhLkhlYWRsaW5lLlRleHR9IC48L2Rpdj5cclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGFpbHktZm9yZWNhc3RzJz5cclxuICAgICAgICAgICAge2RhdGEuRGFpbHlGb3JlY2FzdHMubWFwKChkYWlseUZvcmVjYXN0KSA9PlxyXG4gICAgICAgICAgICAgICAgPERheSB7Li4ue2tleTogZGFpbHlGb3JlY2FzdC5EYXRlLCAuLi5kYWlseUZvcmVjYXN0fX0vPil9XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuKSlgJHtzdHlsZXMuRm9yZWNhc3R9YDtcclxuIiwiZXhwb3J0IGNvbnN0IEhFQURJTkcgPSAnNSBEYXlzIEZvcmVjYXN0Oic7XHJcbmV4cG9ydCBjb25zdCBTVU1NQVJZID0gJ1N1bW1hcnk6ICc7XHJcbiIsImltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCB1c2VNZW1vLCBtZW1vfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBTZWFyY2hGb3JtIGZyb20gXCIuL2NvbXBvbmVudHMvU2VhcmNoRm9ybS9TZWFyY2hGb3JtXCI7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IHtjb25uZWN0fSBmcm9tICdyZWFjdC1yZWR1eCc7XHJcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XHJcbmltcG9ydCAqIGFzIHNlbGVjdG9ycyBmcm9tICdzdG9yZS9XZWF0aGVyL3NlbGVjdG9ycyc7XHJcbmltcG9ydCAqIGFzIG9wZXJhdGlvbnMgZnJvbSAnc3RvcmUvV2VhdGhlci9vcGVyYXRpb25zJztcclxuaW1wb3J0ICogYXMgY29uc3RzIGZyb20gJy4vY29uc3RzJztcclxuaW1wb3J0IEN1cnJlbnRXZWF0aGVyIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ3VycmVudFdlYXRoZXIvQ3VycmVudFdlYXRoZXInO1xyXG5pbXBvcnQgRm9yZWNhc3QgZnJvbSAnLi9jb21wb25lbnRzL0ZvcmVjYXN0L0ZvcmVjYXN0JztcclxuXHJcbmNvbnN0IFdlYXRoZXIgPSBzdHlsZWQobWVtbygoe2NsYXNzTmFtZSwgaW5pdENvbXBsZXRlZCwgaW5pdCwgY2l0eSwgZmluZFdlYXRoZXIsIHdlYXRoZXJEYXRhLCBvbkFkZEZhdm9yaXRlLCBvblJlbW92ZUZhdm9yaXRlLCBmYXZvcml0ZXMsIGZvcm1FcnJvciwgY2xlYXJGb3JtRXJyb3J9KSA9PiB7XHJcblxyXG4gICAgaWYgKCFpbml0Q29tcGxldGVkKSB0aHJvdyBpbml0KCk7XHJcblxyXG4gICAgY29uc3QgaXNGYXZvcml0ZSA9IHVzZU1lbW8oKCkgPT5cclxuICAgICAgICAgICAgZmF2b3JpdGVzLnNvbWUoKHtrZXl9KSA9PiBrZXkgPT09IGNpdHkua2V5KVxyXG4gICAgICAgICwgW2Zhdm9yaXRlcywgY2l0eS5rZXldKTtcclxuXHJcbiAgICBjb25zdCBvbkZhdm9yaXRlSWNvbkNsaWNrZWQgPSB1c2VDYWxsYmFjaygoe2lzRmF2b3JpdGV9KSA9PlxyXG4gICAgICAgICAgICBpc0Zhdm9yaXRlID9cclxuICAgICAgICAgICAgICAgIG9uUmVtb3ZlRmF2b3JpdGUoe2tleTogY2l0eS5rZXl9KSA6XHJcbiAgICAgICAgICAgICAgICBvbkFkZEZhdm9yaXRlKGNpdHkpXHJcbiAgICAgICAgLCBbY2l0eS5rZXldKTtcclxuXHJcbiAgICBjb25zdCBvbkZvcm1TdWJtaXQgPSB1c2VDYWxsYmFjaygoe25hbWV9KSA9PiBmaW5kV2VhdGhlcih7bmFtZX0pLCBbXSk7XHJcblxyXG4gICAgcmV0dXJuIDxkaXYgey4uLntjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCAnd2VhdGhlcicpfX0+XHJcbiAgICAgICAgPGgyPntjb25zdHMuSEVBRElOR308L2gyPlxyXG4gICAgICAgIDxTZWFyY2hGb3JtIHsuLi57dGV4dFZhbHVlOiBjaXR5Lm5hbWUsIG9uU3VibWl0OiBvbkZvcm1TdWJtaXQsIGVycm9yOiBmb3JtRXJyb3IsIGNsZWFyRXJyb3I6IGNsZWFyRm9ybUVycm9yfX0vPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjdXJyZW50LXdlYXRoZXItd3JhcHBlcic+XHJcbiAgICAgICAgICAgIDxoMz57Y29uc3RzLkNVUlJFTlRfV0VBVEhFUn08L2gzPlxyXG4gICAgICAgICAgICA8Q3VycmVudFdlYXRoZXIgey4uLntcclxuICAgICAgICAgICAgICAgIGNpdHksXHJcbiAgICAgICAgICAgICAgICBpc0Zhdm9yaXRlLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogd2VhdGhlckRhdGEuY3VycmVudCxcclxuICAgICAgICAgICAgICAgIG9uRmF2b3JpdGVJY29uQ2xpY2tlZFxyXG4gICAgICAgICAgICB9fS8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPEZvcmVjYXN0IHsuLi57ZGF0YTogd2VhdGhlckRhdGEuZm9yZWNhc3R9fS8+XHJcbiAgICA8L2Rpdj47XHJcblxyXG59KSlgJHtzdHlsZXMuV2VhdGhlcn1gO1xyXG5cclxuY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gc3RhdGUgPT4gKHtcclxuICAgIGluaXRDb21wbGV0ZWQ6IHNlbGVjdG9ycy5nZXRJbml0Q29tcGxldGVkKHN0YXRlKSxcclxuICAgIHdlYXRoZXJEYXRhOiBzZWxlY3RvcnMuZ2V0V2VhdGhlckRhdGEoc3RhdGUpLFxyXG4gICAgZm9ybUVycm9yOiBzZWxlY3RvcnMuZ2V0Rm9ybUVycm9yKHN0YXRlKSxcclxufSk7XHJcblxyXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSAoZGlzcGF0Y2gsIHtjaXR5fSkgPT4gKHtcclxuICAgIGluaXQ6ICgpID0+IGRpc3BhdGNoKG9wZXJhdGlvbnMuaW5pdCh7Y2l0eX0pKSxcclxuICAgIGZpbmRXZWF0aGVyOiBkYXRhID0+IGRpc3BhdGNoKG9wZXJhdGlvbnMuZmluZFdlYXRoZXIoZGF0YSkpLFxyXG4gICAgY2xlYXJGb3JtRXJyb3I6ICgpID0+IGRpc3BhdGNoKG9wZXJhdGlvbnMuY2xlYXJGb3JtRXJyb3IoKSksXHJcbn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoV2VhdGhlcik7XHJcbiIsImV4cG9ydCBjb25zdCBIRUFESU5HID0gJ1dlYXRoZXIgQnkgQ2l0eTonO1xyXG5leHBvcnQgY29uc3QgQ1VSUkVOVF9XRUFUSEVSID0gJ0N1cnJlbnQgV2VhdGhlcjonO1xyXG4iLCJpbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4vYWN0aW9ucyc7XHJcbmltcG9ydCAqIGFzIGhlbHBlcnMgZnJvbSAnc3RvcmUvaGVscGVycyc7XHJcbmltcG9ydCB7c2V0R2xvYmFsRXJyb3IsIHNldENpdHl9IGZyb20gJ3N0b3JlL0xheW91dC9hY3Rpb25zJztcclxuaW1wb3J0ICogYXMgY29uc3RzIGZyb20gJy4vY29uc3RzJztcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0ID0gKHtjaXR5fSkgPT4gYXN5bmMgKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBpZihjaXR5KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHtkYXRhOiBbY3VycmVudF19ID0gYXdhaXQgaGVscGVycy5mZXRjaEN1cnJlbnRXZWF0aGVyKHtsb2NhdGlvbktleTogY2l0eS5rZXl9KTtcclxuICAgICAgICAgICAgY29uc3Qge2RhdGE6IGZvcmVjYXN0fSA9IGF3YWl0IGhlbHBlcnMuZmV0Y2g1RGF5c0ZvcmVjYXN0KHtsb2NhdGlvbktleTogY2l0eS5rZXl9KTtcclxuXHJcbiAgICAgICAgICAgIGF3YWl0IGRpc3BhdGNoKGFjdGlvbnMuc2V0SW5pdERhdGEoe2luaXRDb21wbGV0ZWQ6IHRydWUsIHdlYXRoZXJEYXRhOiB7Y3VycmVudCwgZm9yZWNhc3R9fSkpO1xyXG4gICAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgYXdhaXQgZGlzcGF0Y2goc2V0R2xvYmFsRXJyb3Ioe2dsb2JhbEVycm9yOiBlcnJvciwgaW5pdENvbXBsZXRlZDogdHJ1ZX0pKTtcclxuICAgICAgICBhd2FpdCBkaXNwYXRjaChhY3Rpb25zLnNldEluaXRDb21wbGV0ZWQoe2luaXRDb21wbGV0ZWQ6IHRydWV9KSk7XHJcblxyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGZpbmRXZWF0aGVyID0gKHtuYW1lfSkgPT4gYXN5bmMgKGRpc3BhdGNoLCBnZXRTdGF0ZSkgPT4ge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB7ZGF0YTogY29tcGxldGlvbnNSZXNwb25zZX0gPSBhd2FpdCBoZWxwZXJzLmZldGNoQXV0b0NvbXBsZXRpb24oe3RleHQ6IG5hbWV9KTtcclxuXHJcbiAgICAgICAgLy8gSGFuZGxlcyBhbiBvY2Nhc2lvbiB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoIGZvciB0aGUgc2VhcmNoZWQgdGV4dC5cclxuICAgICAgICBpZiAoY29tcGxldGlvbnNSZXNwb25zZS5sZW5ndGggPT09IDApXHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBkaXNwYXRjaChhY3Rpb25zLnNldEZvcm1FcnJvcih7Zm9ybUVycm9yOiBjb25zdHMuTk9fQ0lUWV9FUlJPUn0pKTtcclxuXHJcbiAgICAgICAgY29uc3QgY2l0eSA9IHtcclxuICAgICAgICAgICAgbmFtZTogY29tcGxldGlvbnNSZXNwb25zZVswXVtcIkxvY2FsaXplZE5hbWVcIl0sXHJcbiAgICAgICAgICAgIGtleTogY29tcGxldGlvbnNSZXNwb25zZVswXVtcIktleVwiXVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGNvbnN0IHtkYXRhOiBbY3VycmVudF19ID0gYXdhaXQgaGVscGVycy5mZXRjaEN1cnJlbnRXZWF0aGVyKHtsb2NhdGlvbktleTogY2l0eS5rZXl9KTtcclxuICAgICAgICBjb25zdCB7ZGF0YTogZm9yZWNhc3R9ID0gYXdhaXQgaGVscGVycy5mZXRjaDVEYXlzRm9yZWNhc3Qoe2xvY2F0aW9uS2V5OiBjaXR5LmtleX0pO1xyXG5cclxuICAgICAgICBhd2FpdCBkaXNwYXRjaChzZXRDaXR5KHtjaXR5fSkpO1xyXG4gICAgICAgIGF3YWl0IGRpc3BhdGNoKGFjdGlvbnMuc2V0V2VhdGhlckRhdGEoe3dlYXRoZXJEYXRhOiB7Y3VycmVudCwgZm9yZWNhc3R9fSkpO1xyXG5cclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgYXdhaXQgZGlzcGF0Y2goc2V0R2xvYmFsRXJyb3Ioe2dsb2JhbEVycm9yOiBlcnJvcn0pKTtcclxuICAgIH1cclxuXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY2xlYXJGb3JtRXJyb3IgPSAoKSA9PiBhc3luYyAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcbiAgICBhd2FpdCBkaXNwYXRjaChhY3Rpb25zLnNldEZvcm1FcnJvcih7Zm9ybUVycm9yOiBudWxsfSkpO1xyXG59XHJcbiIsImV4cG9ydCBjb25zdCBOT19DSVRZX0VSUk9SID0gXCJUaGVyZSBpcyBubyBjaXR5IHRvIG1hdGNoLlwiXHJcbiIsImltcG9ydCB7Y3NzfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcclxuaW1wb3J0IHtnZXRDb2xvciwgaXNNb2JpbGV9IGZyb20gJ3N0eWxlcy9oZWxwZXInO1xyXG5pbXBvcnQge2Rhcmtlbn0gZnJvbSAncG9saXNoZWQnO1xyXG5cclxuZXhwb3J0IGNvbnN0IEZhdm9yaXRlcyA9IGNzc2BcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgXHJcbiAgICA+IGgyIHtcclxuICAgICAgICBwYWRkaW5nOiAwcHggMTBweDtcclxuICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgPiAuY29udGVudHtcclxuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBcclxuICAgICAgICAke2lzTW9iaWxlKGNzc2BcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBgKX07XHJcbiAgICAgICAgXHJcbiAgICAgICAgPiAuZmF2b3JpdGUtY2FyZCB7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICAgICAgbWluLWhlaWdodDogMjMwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDBweCAzcHggMXB4ICR7Z2V0Q29sb3IoJ3ByaW1hcnknKX07ICAgIFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2RhcmsnKX07XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCA1cHg7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7KHByb3BzKSA9PiBkYXJrZW4oMC4xLCBnZXRDb2xvcignYmFja2dyb3VuZCcsICdkYXJrJykocHJvcHMpKX07XHJcbiAgICAgICAgICAgICAgICBib3gtc2hhZG93OiAwcHggMHB4IDNweCAycHggJHtnZXRDb2xvcigncHJpbWFyeScpfTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICR7aXNNb2JpbGUoY3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7ICAgIFxyXG4gICAgICAgICAgICBgKX07XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH0gICAgXHJcbmA7XHJcbiIsImV4cG9ydCBjb25zdCBnZXRGYXZvcml0ZXNEYXRhID0gKHtmYXZvcml0ZXN9KSA9PiBmYXZvcml0ZXMuZmF2b3JpdGVzRGF0YTtcclxuIiwiY29uc3QgQkFTRSA9ICdGQVZPUklURVMvJ1xyXG5cclxuZXhwb3J0IGNvbnN0IFNFVF9GQVZPUklURVNfREFUQSA9IGAke0JBU0V9U0VUX0ZBVk9SSVRFU19EQVRBYDtcclxuIiwiaW1wb3J0ICogYXMgdHlwZXMgZnJvbSAnLi90eXBlcyc7XHJcbmltcG9ydCB7Y3JlYXRlQWN0aW9ufSBmcm9tIFwic3RvcmUvdXRpbHNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBzZXRGYXZvcml0ZXNEYXRhID0gY3JlYXRlQWN0aW9uKHR5cGVzLlNFVF9GQVZPUklURVNfREFUQSk7XHJcbiIsImltcG9ydCB7Y3NzfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcclxuaW1wb3J0IHtnZXRDb2xvcn0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcblxyXG5leHBvcnQgY29uc3QgTm9GYXZvcml0ZXMgPSBjc3NgXHJcbiAgICBmb250LXNpemU6IDMwcHg7XHJcbiAgICBjb2xvcjogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdkYXJrICcpfTtcclxuICAgIHBhZGRpbmc6IDMwcHg7XHJcbmA7XHJcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuaW1wb3J0ICogYXMgY29uc3RzIGZyb20gJy4vY29uc3RzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0eWxlZCgoe2NsYXNzTmFtZX0pID0+XHJcbiAgICA8ZGl2IHsuLi57Y2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ25vLWZhdm9yaXRlcycpfX0+XHJcbiAgICAgICAge2NvbnN0cy5OT19GQVZPUklURVN9XHJcbiAgICA8L2Rpdj5cclxuKWAke3N0eWxlcy5Ob0Zhdm9yaXRlc31gO1xyXG4iLCJleHBvcnQgY29uc3QgTk9fRkFWT1JJVEVTID0gYFlvdSBkb24ndCBoYXZlIGFueSBmYXZvcml0ZSBjaXRpZXMuIEdvIGFoZWFkIGFuZCBhZGQgc29tZS5gO1xyXG4iLCJleHBvcnQgY29uc3QgQkFTRV9VUkwgPSAnL3lvZ2V2LW1hbGNhLTAxLTEwLTIwMjAvJztcclxuZXhwb3J0IGNvbnN0IFdFQVRIRVJfUEFHRV9VUkwgPSBgJHtCQVNFX1VSTH13ZWF0aGVyYDtcclxuZXhwb3J0IGNvbnN0IEZBVk9SSVRFU19QQUdFX1VSTCA9IGAke0JBU0VfVVJMfWZhdm9yaXRlc2A7XHJcbiIsImltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlQ2FsbGJhY2ssIG1lbW99IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuaW1wb3J0ICogYXMgc2VsZWN0b3JzIGZyb20gJ3N0b3JlL0Zhdm9yaXRlcy9zZWxlY3RvcnMnO1xyXG5pbXBvcnQgKiBhcyBvcGVyYXRpb25zIGZyb20gJ3N0b3JlL0Zhdm9yaXRlcy9vcGVyYXRpb25zJztcclxuaW1wb3J0ICogYXMgY29uc3RzIGZyb20gJy4vY29uc3RzJztcclxuaW1wb3J0IE5vRmF2b3JpdGVzIGZyb20gXCIuL2NvbXBvbmVudHMvTm9GYXZvcml0ZXMvTm9GYXZvcml0ZXNcIjtcclxuaW1wb3J0IHtXRUFUSEVSX1BBR0VfVVJMfSBmcm9tICcuLi8uLi9jb25zdHMnO1xyXG5pbXBvcnQgQ3VycmVudFdlYXRoZXIgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9DdXJyZW50V2VhdGhlci9DdXJyZW50V2VhdGhlcic7XHJcblxyXG5cclxuY29uc3QgRmF2b3JpdGVzID0gc3R5bGVkKG1lbW8oKHtjbGFzc05hbWUsIG9uUmVtb3ZlRmF2b3JpdGUsIGZhdm9yaXRlcywgZmF2b3JpdGVzRGF0YSwgY2hlY2tGb3JEYXRhVXBkYXRlcywgbmF2aWdhdGUsIGZhdm9yaXRlQ2l0eUNsaWNrZWR9KSA9PiB7XHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBjaGVja0ZvckRhdGFVcGRhdGVzKHtleGlzdHM6IE9iamVjdC5rZXlzKGZhdm9yaXRlc0RhdGEpLCBhcmVFeGlzdHM6IGZhdm9yaXRlcy5tYXAoKHtrZXl9KSA9PiBrZXkpfSk7XHJcbiAgICB9LCBbZmF2b3JpdGVzLCBmYXZvcml0ZXNEYXRhXSk7XHJcblxyXG4gICAgY29uc3QgbmF2aWdhdGVUb1dlYXRoZXJQYWdlID0gdXNlQ2FsbGJhY2soKCkgPT4gbmF2aWdhdGUoV0VBVEhFUl9QQUdFX1VSTCksIFtuYXZpZ2F0ZV0pO1xyXG5cclxuICAgIGNvbnN0IG9uQ2FyZENsaWNrZWRIYW5kbGVyID0gdXNlQ2FsbGJhY2soY2l0eSA9PlxyXG4gICAgICAgICAgICBmYXZvcml0ZUNpdHlDbGlja2VkKHtuYXZpZ2F0ZVRvV2VhdGhlclBhZ2UsIGNpdHl9KVxyXG4gICAgICAgICwgW25hdmlnYXRlVG9XZWF0aGVyUGFnZV0pO1xyXG5cclxuICAgIHJldHVybiA8ZGl2IHsuLi57Y2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ2Zhdm9yaXRlcycpfX0+XHJcbiAgICAgICAgPGgyPntjb25zdHMuSEVBRElOR308L2gyPlxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdjb250ZW50Jz5cclxuICAgICAgICAgICAge2Zhdm9yaXRlcy5sZW5ndGggPT09IDAgP1xyXG4gICAgICAgICAgICAgICAgPE5vRmF2b3JpdGVzLz4gOiBmYXZvcml0ZXMubWFwKGNpdHkgPT5cclxuICAgICAgICAgICAgICAgICAgICA8Q3VycmVudFdlYXRoZXIgey4uLntcclxuICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBjaXR5LmtleSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogZmF2b3JpdGVzRGF0YVtjaXR5LmtleV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogXCJmYXZvcml0ZS1jYXJkXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNpdHksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IG9uQ2FyZENsaWNrZWRIYW5kbGVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhdm9yaXRlSWNvbkNsaWNrZWQ6IG9uUmVtb3ZlRmF2b3JpdGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzRmF2b3JpdGU6IHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9fS8+XHJcbiAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+O1xyXG59KSlgJHtzdHlsZXMuRmF2b3JpdGVzfWA7XHJcblxyXG5jb25zdCBtYXBTdGF0ZVRvUHJvcHMgPSBzdGF0ZSA9PiAoe1xyXG4gICAgZmF2b3JpdGVzRGF0YTogc2VsZWN0b3JzLmdldEZhdm9yaXRlc0RhdGEoc3RhdGUpXHJcbn0pO1xyXG5cclxuY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZGlzcGF0Y2ggPT4gKHtcclxuICAgIGNoZWNrRm9yRGF0YVVwZGF0ZXM6IGFyZ3MgPT4gZGlzcGF0Y2gob3BlcmF0aW9ucy5jaGVja0ZvckRhdGFVcGRhdGVzKGFyZ3MpKSxcclxuICAgIGZhdm9yaXRlQ2l0eUNsaWNrZWQ6IGFyZ3MgPT4gZGlzcGF0Y2gob3BlcmF0aW9ucy5mYXZvcml0ZUNpdHlDbGlja2VkKGFyZ3MpKVxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKEZhdm9yaXRlcyk7XHJcbiIsImV4cG9ydCBjb25zdCBIRUFESU5HID0gYEZhdm9yaXRlIENpdGllc2A7XHJcbiIsImltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSAnLi9hY3Rpb25zJztcclxuaW1wb3J0ICogYXMgaGVscGVycyBmcm9tICdzdG9yZS9oZWxwZXJzJztcclxuaW1wb3J0IHtzZXRHbG9iYWxFcnJvciwgc2V0Q2l0eX0gZnJvbSBcInN0b3JlL0xheW91dC9hY3Rpb25zXCI7XHJcbmltcG9ydCAqIGFzIHNlbGVjdG9ycyBmcm9tICcuL3NlbGVjdG9ycyc7XHJcblxyXG5leHBvcnQgY29uc3QgY2hlY2tGb3JEYXRhVXBkYXRlcyA9ICh7ZXhpc3RzLCBhcmVFeGlzdHN9KSA9PiBhc3luYyAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGtleXNUb0ZldGNoID0gYXJlRXhpc3RzLmZpbHRlcihrZXkgPT4gIWV4aXN0cy5pbmNsdWRlcyhrZXkpKTtcclxuICAgICAgICBjb25zdCBrZXlzVG9EZWxldGUgPSBleGlzdHMuZmlsdGVyKGtleSA9PiAhYXJlRXhpc3RzLmluY2x1ZGVzKGtleSkpO1xyXG5cclxuICAgICAgICBsZXQgZmF2b3JpdGVzRGF0YSA9IHNlbGVjdG9ycy5nZXRGYXZvcml0ZXNEYXRhKGdldFN0YXRlKCkpO1xyXG5cclxuICAgICAgICAvLyBEZWxldGUgdGhlIGRhdGEgb2YgcmVtb3ZlZCBmYXZvcml0ZXMuXHJcbiAgICAgICAgaWYgKGtleXNUb0RlbGV0ZS5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBmYXZvcml0ZXNEYXRhID0gT2JqZWN0LmtleXMoZmF2b3JpdGVzRGF0YSkucmVkdWNlKChhY2MsIGtleSkgPT5cclxuICAgICAgICAgICAgICAgICAgICBrZXlzVG9EZWxldGUuaW5jbHVkZXMoa2V5KSA/IGFjYyA6IHsuLi5hY2MsIFtrZXldOiBmYXZvcml0ZXNEYXRhW2tleV19XHJcbiAgICAgICAgICAgICAgICAsIHt9KTtcclxuXHJcbiAgICAgICAgLy8gRmV0Y2ggZGF0YSBvZiB0aGUgbmV3IGZhdm9yaXRlcyBhbmQgYXBwZW5kIGl0IHRvIHRoZSBmYXZvcml0ZXMgZGF0YSBvYmplY3QuXHJcbiAgICAgICAgaWYgKGtleXNUb0ZldGNoLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgY29uc3QgbmV3RmF2b3JpdGVzRGF0YSA9IHt9O1xyXG5cclxuICAgICAgICAgICAgZm9yIChsZXQga2V5IG9mIGtleXNUb0ZldGNoKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB7ZGF0YTogW2xvY2F0aW9uRGF0YV19ID0gYXdhaXQgaGVscGVycy5mZXRjaEN1cnJlbnRXZWF0aGVyKHtsb2NhdGlvbktleToga2V5fSk7XHJcbiAgICAgICAgICAgICAgICBuZXdGYXZvcml0ZXNEYXRhW2tleV0gPSBsb2NhdGlvbkRhdGE7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGZhdm9yaXRlc0RhdGEgPSB7Li4uZmF2b3JpdGVzRGF0YSwgLi4ubmV3RmF2b3JpdGVzRGF0YX07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBJZiB0aGVyZSB3YXMgYW55IGNoYW5nZXMgb24gZmF2b3JpdGVzIGRhdGEgb2JqZWN0LCBkaXNwYXRjaCB0aGUgY2hhbmdlc1xyXG4gICAgICAgIGlmIChrZXlzVG9GZXRjaC5sZW5ndGggPiAwIHx8IGtleXNUb0RlbGV0ZS5sZW5ndGggPiAwKVxyXG4gICAgICAgICAgICBhd2FpdCBkaXNwYXRjaChhY3Rpb25zLnNldEZhdm9yaXRlc0RhdGEoe2Zhdm9yaXRlc0RhdGF9KSk7XHJcblxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBhd2FpdCBkaXNwYXRjaChzZXRHbG9iYWxFcnJvcih7Z2xvYmFsRXJyb3I6IGVycm9yfSkpO1xyXG4gICAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGZhdm9yaXRlQ2l0eUNsaWNrZWQgPSAoe25hdmlnYXRlVG9XZWF0aGVyUGFnZSwgY2l0eX0pID0+IGFzeW5jIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuICAgIGF3YWl0IGRpc3BhdGNoKHNldENpdHkoe2NpdHl9KSk7XHJcbiAgICBuYXZpZ2F0ZVRvV2VhdGhlclBhZ2UoKTtcclxufVxyXG4iLCJpbXBvcnQge2Nzc30gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQge2lzTW9iaWxlLCBnZXRDb2xvcn0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcblxyXG5leHBvcnQgY29uc3QgSGVhZGVyID0gY3NzYFxyXG4gICAgei1pbmRleDogMTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgZmxleDogMCAwIDgwcHg7XHJcbiAgICBwYWRkaW5nOiAwcHggMTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYm94LXNoYWRvdzogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdsaWdodGVyJyl9IDBweCAycHggN3B4IDZweDtcclxuICAgIFxyXG4gICAgPiBoMiB7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJHtpc01vYmlsZShjc3NgXHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiBpbml0aWFsO1xyXG4gICAgICAgIGApfTtcclxuICAgIFxyXG4gICAgfVxyXG4gICAgXHJcbiAgICA+IC50aGVtZS10b2dnbGUtYmFzaWNzIHtcclxuICAgICAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICAgICAgd2lkdGg6IDQwcHg7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAtMC41cHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMzAwbXMsIGJveC1zaGFkb3cgMzAwbXM7XHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHRvcDogMTA4cHg7XHJcbiAgICAgICAgcmlnaHQ6IDUxcHg7XHJcbiAgICAgICAgXHJcbiAgICAgICAgJHtpc01vYmlsZShjc3NgXHJcbiAgICAgICAgICAgIHRvcDogMTMwcHg7XHJcbiAgICAgICAgICAgIHJpZ2h0OiAxOHB4O1xyXG4gICAgICAgIGApfTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgPiAudGhlbWUtdG9nZ2xlLWRhcmsge1xyXG4gICAgICAgIGJveC1zaGFkb3c6ICR7Z2V0Q29sb3IoJ2JhY2tncm91bmQnLCAnbGlnaHQnKX0gMXB4IDFweCA0cHggMnB4OyAgICAgICAgXHJcbiAgICAgICAgY29sb3I6IGluaXRpYWw7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdsaWdodGVyJyl9OyAgICBcclxuICAgIH1cclxuICAgIFxyXG4gICAgPiAudGhlbWUtdG9nZ2xlLWxpZ2h0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2RhcmtlcicpfTtcclxuICAgICAgICBjb2xvcjogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdsaWdodCcpfTtcclxuICAgICAgICBib3gtc2hhZG93OiAke2dldENvbG9yKCdiYWNrZ3JvdW5kJywgJ2RhcmtlcicpfSAxcHggMXB4IDRweCAycHg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICR7aXNNb2JpbGUoY3NzYFxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICBmbGV4OiAwIDAgMTEwcHg7XHJcbiAgICBgKX07XHJcbiAgICBcclxuICAgPiAubmF2aWdhdG9ycy13cmFwcGVyIHtcclxuICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICBwYWRkaW5nOiAxMHB4IDBweDtcclxuICAgIFxyXG4gICAgICAgID4gYSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4ICR7Z2V0Q29sb3IoJ2JhY2tncm91bmQnLCAnZGFyaycpfSBzb2xpZDtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdkYXJrJyl9IDBweCAwcHggMnB4IDJweDtcclxuICAgICAgICAgICAgY29sb3I6IGluaGVyaXQ7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMHB4IDEwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgID4gLmFjdGl2ZS10YWcge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2dldENvbG9yKCdwcmltYXJ5Jyl9O1xyXG4gICAgICAgICAgICBjb2xvcjogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdsaWdodCcpfTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogJHtnZXRDb2xvcigncHJpbWFyeScpfSAwcHggMHB4IDJweCAycHg7XHJcbiAgICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBcclxuICAgICAgICAke2lzTW9iaWxlKGNzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA+IGEge1xyXG4gICAgICAgICAgICAgICAgICAgIGZsZXgtZ3JvdzogMTsgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGApfTsgICAgIFxyXG4gICB9IFxyXG5cclxuYDtcclxuIiwiZXhwb3J0IGNvbnN0IEhFQURJTkcgPSAnSXMgSGVyb2xvIEF3ZXNvbWU/IDopJztcclxuZXhwb3J0IGNvbnN0IFdFQVRIRVIgPSAnV2VhdGhlcic7XHJcbmV4cG9ydCBjb25zdCBGQVZPUklURVMgPSAnRmF2b3JpdGVzJztcclxuZXhwb3J0IGNvbnN0IFRIRU1FX1RFWFRTID0ge1xyXG4gICAgZGFyazogXCJMaWdodFwiLFxyXG4gICAgbGlnaHQ6IFwiRGFya1wiXHJcbn07XHJcbmV4cG9ydCBjb25zdCBBQ1RJVkVfVEFHX0NMQVNTX05BTUUgPSAnYWN0aXZlLXRhZyc7XHJcbiIsImltcG9ydCBSZWFjdCwge21lbW99IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XHJcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xyXG5pbXBvcnQgKiBhcyBjb25zdHMgZnJvbSAnLi9jb25zdHMnO1xyXG5pbXBvcnQge0xpbmt9IGZyb20gJ0ByZWFjaC9yb3V0ZXInO1xyXG5pbXBvcnQgKiBhcyBsYXlvdXRDb25zdHMgZnJvbSAnLi4vLi4vY29uc3RzJztcclxuaW1wb3J0IHtXRUFUSEVSX1BBR0VfVVJMLCBGQVZPUklURVNfUEFHRV9VUkx9IGZyb20gJy4uLy4uL2NvbnN0cyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdHlsZWQobWVtbygoe2NsYXNzTmFtZSwgdG9nZ2xlVGhlbWUsIGN1cnJlbnRUaGVtZSwgcGF0aG5hbWV9KSA9PlxyXG4gICAgPGRpdiB7Li4ue2NsYXNzTmFtZTogY2xhc3NOYW1lcyhjbGFzc05hbWUsICdoZWFkZXInKX19PlxyXG4gICAgICAgIDxoMj57Y29uc3RzLkhFQURJTkd9PC9oMj5cclxuICAgICAgICA8c3BhbiB7Li4ue1xyXG4gICAgICAgICAgICBvbkNsaWNrOiB0b2dnbGVUaGVtZSxcclxuICAgICAgICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVzKCd0aGVtZS10b2dnbGUtYmFzaWNzJywgYHRoZW1lLXRvZ2dsZS0ke2N1cnJlbnRUaGVtZX1gKVxyXG4gICAgICAgIH19PlxyXG4gICAgICAgICAgICB7Y29uc3RzLlRIRU1FX1RFWFRTW2N1cnJlbnRUaGVtZV19XHJcbiAgICAgICAgPC9zcGFuPlxyXG4gICAgICAgIDxkaXYgey4uLntjbGFzc05hbWU6ICduYXZpZ2F0b3JzLXdyYXBwZXInfX0+XHJcbiAgICAgICAgICAgIDxMaW5rIHsuLi57XHJcbiAgICAgICAgICAgICAgICB0bzogbGF5b3V0Q29uc3RzLldFQVRIRVJfUEFHRV9VUkwsXHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU6IHBhdGhuYW1lID09PSBXRUFUSEVSX1BBR0VfVVJMID8gY29uc3RzLkFDVElWRV9UQUdfQ0xBU1NfTkFNRSA6IG51bGxcclxuICAgICAgICAgICAgfX0+e2NvbnN0cy5XRUFUSEVSfTwvTGluaz5cclxuICAgICAgICAgICAgPExpbmsgey4uLntcclxuICAgICAgICAgICAgICAgIHRvOiBsYXlvdXRDb25zdHMuRkFWT1JJVEVTX1BBR0VfVVJMLFxyXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBwYXRobmFtZSA9PT0gRkFWT1JJVEVTX1BBR0VfVVJMID8gY29uc3RzLkFDVElWRV9UQUdfQ0xBU1NfTkFNRSA6IG51bGxcclxuICAgICAgICAgICAgfX0+e2NvbnN0cy5GQVZPUklURVN9PC9MaW5rPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgPC9kaXY+KVxyXG4pYCR7c3R5bGVzLkhlYWRlcn1gO1xyXG4iLCJleHBvcnQgY29uc3QgZ2V0SW5pdENvbXBsZXRlZCA9ICh7bGF5b3V0fSkgPT4gbGF5b3V0LmluaXRDb21wbGV0ZWQ7XHJcbmV4cG9ydCBjb25zdCBnZXRDaXR5ID0gKHtsYXlvdXR9KSA9PiBsYXlvdXQuY2l0eTtcclxuZXhwb3J0IGNvbnN0IGdldEdsb2JhbEVycm9yID0gKHtsYXlvdXR9KSA9PiBsYXlvdXQuZ2xvYmFsRXJyb3I7XHJcbmV4cG9ydCBjb25zdCBnZXRGYXZvcml0ZXMgPSAoe2xheW91dH0pID0+IGxheW91dC5mYXZvcml0ZXM7XHJcbiIsImltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICcuL2NvbnN0cyc7XHJcblxyXG4vLyBDb252ZXJ0cyB0aGUgbG9jYWwgc3RvcmFnZSBkYXRhIGZyb20gc3RyaW5nIC0gJ2NpdHkxLWtleSNjaXR5MS1uYW1lL2NpdHkyLWtleSNjaXR5Mi1uYW1lJ1xyXG4vLyB0byBhbmQgYXJyYXkgLSBbWydjaXR5MS1rZXknLCdjaXR5MS1uYW1lJ11bJ2NpdHkyLWtleScsJ2NpdHkyLW5hbWUnXV1cclxuZXhwb3J0IGNvbnN0IGdldEZhdm9yaXRlcyA9ICgpID0+IHtcclxuICAgIGNvbnN0IGZhdm9yaXRlc1N0ciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKGNvbnN0cy5MT0NBTF9TVE9SQUdFX0ZBVk9SSVRFU19OQU1FKTtcclxuICAgIGlmIChmYXZvcml0ZXNTdHIpXHJcbiAgICAgICAgcmV0dXJuIGZhdm9yaXRlc1N0ci5zcGxpdCgnLycpLm1hcChjaXR5U3RyID0+IHtcclxuICAgICAgICAgICAgY29uc3QgW2tleSwgbmFtZV0gPSBjaXR5U3RyLnNwbGl0KFwiI1wiKTtcclxuICAgICAgICAgICAgcmV0dXJuIHtrZXksIG5hbWV9O1xyXG4gICAgICAgIH0pO1xyXG4gICAgZWxzZVxyXG4gICAgICAgIHJldHVybiBbXTtcclxuXHJcbn07XHJcblxyXG4vLyBDb252ZXJ0cyBhbiBhcnJheSAtIFtbJ2NpdHkxLWtleScsJ2NpdHkxLW5hbWUnXVsnY2l0eTIta2V5JywnY2l0eTItbmFtZSddXVxyXG4vLyB0byBhIHN0cmluZyAtICdjaXR5MS1rZXkjY2l0eTEtbmFtZS9jaXR5Mi1rZXkjY2l0eTItbmFtZScgYW5kIHNhdmVzIGl0IHRvIHRoZSBsb2NhbCBzdG9yYWdlLlxyXG4vLyBJZiB0aGVyZSBpcyBubyBpdGVtcyBpbiB0aGUgYXJyYXksIHJlbW92ZXMgdGhlIGl0ZW0gZnJvbSB0aGUgbG9jYWwgc3RvcmFnZS5cclxuZXhwb3J0IGNvbnN0IHNhdmVGYXZvcml0ZXMgPSBmYXZvcml0ZXMgPT5cclxuICAgIGZhdm9yaXRlcy5sZW5ndGggPT09IDAgP1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGNvbnN0cy5MT0NBTF9TVE9SQUdFX0ZBVk9SSVRFU19OQU1FKSA6XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oY29uc3RzLkxPQ0FMX1NUT1JBR0VfRkFWT1JJVEVTX05BTUUsIGZhdm9yaXRlcy5tYXAoKHtrZXksIG5hbWV9KSA9PiBgJHtrZXl9IyR7bmFtZX1gKS5qb2luKCcvJykpO1xyXG5cclxuIiwiZXhwb3J0IGNvbnN0IExPQ0FMX1NUT1JBR0VfRkFWT1JJVEVTX05BTUUgPSAnZmF2b3JpdGVzLXdlYXRoZXItbG9jYXRpb25zJztcclxuIiwiaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuL2FjdGlvbnMnO1xyXG5pbXBvcnQgKiBhcyBoZWxwZXJzIGZyb20gJ3N0b3JlL2hlbHBlcnMnO1xyXG5pbXBvcnQge3NldEdsb2JhbEVycm9yfSBmcm9tIFwic3RvcmUvTGF5b3V0L2FjdGlvbnNcIjtcclxuaW1wb3J0ICogYXMgdXRpbHMgZnJvbSBcInV0aWxzL2luZGV4XCI7XHJcbmltcG9ydCAqIGFzIHNlbGVjdG9ycyBmcm9tICcuL3NlbGVjdG9ycyc7XHJcblxyXG5jb25zdCBERUZBVUxUX0NJVFkgPSB7bmFtZTogXCJUZWwgQXZpdlwiLCBrZXk6ICcyMTU4NTQnfTtcclxuXHJcbmNvbnN0IGdldEN1cnJlbnRDaXR5ID0gKCkgPT5cclxuICAgIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBpZiAoIW5hdmlnYXRvci5nZW9sb2NhdGlvbikgcmVzb2x2ZShudWxsKTtcclxuXHJcbiAgICAgICAgY29uc3Qgc3VjY2Vzc0NhbGxiYWNrID0gYXN5bmMgKHtjb29yZHN9KSA9PiB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjb29yZHNUZXh0ID0gYCR7Y29vcmRzLmxhdGl0dWRlfSwke2Nvb3Jkcy5sb25naXR1ZGV9YDtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHtkYXRhOiBsb2NhdGlvbkRhdGF9ID0gYXdhaXQgaGVscGVycy5mZXRjaExvY2F0aW9uQnlDb29yZHMoe2Nvb3JkczogY29vcmRzVGV4dH0pO1xyXG5cclxuICAgICAgICAgICAgICAgIHJlc29sdmUoe2tleTogbG9jYXRpb25EYXRhLktleSwgbmFtZTogbG9jYXRpb25EYXRhLkxvY2FsaXplZE5hbWV9KTtcclxuXHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oc3VjY2Vzc0NhbGxiYWNrLCAoZXJyKSA9PiByZXNvbHZlKG51bGwpKTtcclxuICAgIH0pXHJcblxyXG5leHBvcnQgY29uc3QgaW5pdCA9ICgpID0+IGFzeW5jIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgY3VycmVudENpdHkgPSBhd2FpdCBnZXRDdXJyZW50Q2l0eSgpO1xyXG4gICAgICAgIGNvbnN0IGNpdHkgPSBjdXJyZW50Q2l0eSB8fCBERUZBVUxUX0NJVFk7XHJcbiAgICAgICAgY29uc3QgZmF2b3JpdGVzID0gdXRpbHMuZ2V0RmF2b3JpdGVzKCk7XHJcblxyXG4gICAgICAgIGF3YWl0IGRpc3BhdGNoKGFjdGlvbnMuc2V0SW5pdERhdGEoe2luaXRDb21wbGV0ZWQ6IHRydWUsIGNpdHksIGZhdm9yaXRlc30pKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcblxyXG4gICAgICAgIGF3YWl0IGRpc3BhdGNoKHNldEdsb2JhbEVycm9yKHtnbG9iYWxFcnJvcjogZXJyb3IsIGluaXRDb21wbGV0ZWQ6IHRydWV9KSk7XHJcbiAgICB9XHJcbn07XHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IGFkZEZhdm9yaXRlcyA9IChjaXR5KSA9PiBhc3luYyAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XHJcbiAgICBjb25zdCBwcmV2RmF2b3JpdGVzID0gc2VsZWN0b3JzLmdldEZhdm9yaXRlcyhnZXRTdGF0ZSgpKTtcclxuICAgIGNvbnN0IGZhdm9yaXRlcyA9IFsuLi5wcmV2RmF2b3JpdGVzLCBjaXR5XTtcclxuXHJcbiAgICB1dGlscy5zYXZlRmF2b3JpdGVzKGZhdm9yaXRlcyk7XHJcblxyXG4gICAgYXdhaXQgZGlzcGF0Y2goYWN0aW9ucy5zZXRGYXZvcml0ZXMoe2Zhdm9yaXRlc30pKTtcclxuXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZW1vdmVGYXZvcml0ZXMgPSAoe2tleTogX2tleX0pID0+IGFzeW5jIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcclxuICAgIGNvbnN0IHByZXZGYXZvcml0ZXMgPSBzZWxlY3RvcnMuZ2V0RmF2b3JpdGVzKGdldFN0YXRlKCkpXHJcbiAgICBjb25zdCBmYXZvcml0ZXMgPSBwcmV2RmF2b3JpdGVzLmZpbHRlcigoe2tleX0pID0+IGtleSAhPT0gX2tleSk7XHJcblxyXG4gICAgdXRpbHMuc2F2ZUZhdm9yaXRlcyhmYXZvcml0ZXMpO1xyXG5cclxuICAgIGF3YWl0IGRpc3BhdGNoKGFjdGlvbnMuc2V0RmF2b3JpdGVzKHtmYXZvcml0ZXN9KSk7XHJcbn1cclxuIiwiaW1wb3J0IHtjc3N9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IHtpc01vYmlsZSwgZ2V0Q29sb3J9IGZyb20gJ3N0eWxlcy9oZWxwZXInO1xyXG5cclxuZXhwb3J0IGNvbnN0IEVycm9yTW9kYWwgPSBjc3NgXHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRDb2xvcignYmFja2dyb3VuZCcsICdsaWdodGVyJyl9O1xyXG5cclxuICAgIFxyXG4gICAgLmJveCB7XHJcbiAgICAgICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggM3B4IDFweCAke2dldENvbG9yKCdkYW5nZXInKX07XHJcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICB3aWR0aDogNTAwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMTAwcHggMzBweDtcclxuICAgIFxyXG4gICAgICAgICR7aXNNb2JpbGUoY3NzYFxyXG4gICAgICAgICAgICBtYXJnaW46IGF1dG8gMTBweDtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDMwcHggNXB4O1xyXG4gICAgICAgIGApfTtcclxuICAgICAgICBcclxuICAgIH1cclxuICAgIFxyXG5cclxuYDtcclxuIiwiaW1wb3J0IFJlYWN0LCB7bWVtb30gZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XHJcbmltcG9ydCAqIGFzIGNvbnN0cyBmcm9tICcuL2NvbnN0cyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBzdHlsZWQobWVtbygoe2NsYXNzTmFtZSwgZ2xvYmFsRXJyb3J9KSA9PlxyXG4gICAgZ2xvYmFsRXJyb3IgP1xyXG4gICAgICAgIDxkaXYgey4uLntjbGFzc05hbWU6IGNsYXNzTmFtZXMoY2xhc3NOYW1lLCAnZXJyb3ItbW9kYWwnKX19PlxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYm94Jz5cclxuXHJcbiAgICAgICAgICAgICAgICA8aDE+e2NvbnN0cy5IRUFESU5HfTwvaDE+XHJcbiAgICAgICAgICAgICAgICA8aDM+e2NvbnN0cy5URVhUfTwvaDM+XHJcblxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj4gOiBudWxsKVxyXG4pYCR7c3R5bGVzLkVycm9yTW9kYWx9YDtcclxuIiwiZXhwb3J0IGNvbnN0IEhFQURJTkcgPSAnQW4gRXJyb3IgT2NjdXJyZWQuJztcclxuZXhwb3J0IGNvbnN0IFRFWFQgPSAnUGxlYXNlIHJlZnJlc2ggdGhlIHBhZ2UuJztcclxuIiwiaW1wb3J0IHtjc3N9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuXHJcbmV4cG9ydCBjb25zdCBQYWdlTm90Rm91bmQgPSBjc3NgXHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICB0b3A6IDA7XHJcbiAgICByaWdodDogMDtcclxuXHJcbiAgICA+IGltZyB7XHJcbiAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICBtYXgtaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogYXV0bztcclxuICAgIH1cclxuYDtcclxuIiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjQ0Zjk2OGI1YjM3YjUyMDI2OWIzNjkwNWY0ZGU2ZDcxLmpwZ1wiOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgKiBhcyBzdHlsZXMgZnJvbSAnLi9zdHlsZXMnO1xyXG5pbXBvcnQgbm90Rm91bmRJbWFnZSBmcm9tICcuL2Fzc2V0cy80MDQtZXJyb3ItcGFnZS1ub3QtZm91bmQuanBnJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHN0eWxlZCgoe2NsYXNzTmFtZX0pID0+XHJcbiAgICA8ZGl2IHsuLi57Y2xhc3NOYW1lfX0+XHJcbiAgICAgICAgPGltZyB7Li4ue3NyYzogbm90Rm91bmRJbWFnZX19Lz5cclxuICAgIDwvZGl2PlxyXG4pYCR7c3R5bGVzLlBhZ2VOb3RGb3VuZH1gO1xyXG4iLCJpbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcclxuaW1wb3J0IHtMb2FkZXJ9IGZyb20gJ0Bjb21tb24tY29tcG9uZW50cyc7XHJcbmltcG9ydCBSZWFjdCwge1N1c3BlbnNlLCB1c2VFZmZlY3R9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtSb3V0ZXJ9IGZyb20gJ0ByZWFjaC9yb3V0ZXInO1xyXG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0ICogYXMgc3R5bGVzIGZyb20gJy4vc3R5bGVzJztcclxuaW1wb3J0IFdlYXRoZXIgZnJvbSAnLi9jb250YWluZXJzL1dlYXRoZXIvV2VhdGhlcic7XHJcbmltcG9ydCBGYXZvcml0ZXMgZnJvbSAnLi9jb250YWluZXJzL0Zhdm9yaXRlcy9GYXZvcml0ZXMnO1xyXG5pbXBvcnQgSGVhZGVyIGZyb20gJy4vY29tcG9uZW50cy9IZWFkZXIvSGVhZGVyJztcclxuaW1wb3J0ICogYXMgc2VsZWN0b3JzIGZyb20gJ3N0b3JlL0xheW91dC9zZWxlY3RvcnMnO1xyXG5pbXBvcnQgKiBhcyBvcGVyYXRpb25zIGZyb20gXCJzdG9yZS9MYXlvdXQvb3BlcmF0aW9uc1wiO1xyXG5pbXBvcnQgKiBhcyBjb25zdHMgZnJvbSAnLi9jb25zdHMnO1xyXG5pbXBvcnQge2Nvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IEVycm9yTW9kYWwgZnJvbSAnLi9jb21wb25lbnRzL0Vycm9yTW9kYWwvRXJyb3JNb2RhbCc7XHJcbmltcG9ydCBQYWdlTm90Rm91bmQgZnJvbSAnLi9jb21wb25lbnRzL1BhZ2VOb3RGb3VuZC9QYWdlTm90Rm91bmQnO1xyXG5cclxuY29uc3QgTGF5b3V0ID0gc3R5bGVkKCh7Y2xhc3NOYW1lLCBpbml0LCBpbml0Q29tcGxldGVkLCB0b2dnbGVUaGVtZSwgY3VycmVudFRoZW1lLCBjaXR5LCBnbG9iYWxFcnJvciwgbG9jYXRpb24gPSB7fSwgbmF2aWdhdGUsIG9uQWRkRmF2b3JpdGUsIG9uUmVtb3ZlRmF2b3JpdGUsIGZhdm9yaXRlc30pID0+IHtcclxuXHJcbiAgICAgICAgaWYgKCFpbml0Q29tcGxldGVkKSB0aHJvdyBpbml0KCk7XHJcblxyXG4gICAgICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChsb2NhdGlvbi5wYXRobmFtZSA9PT0gY29uc3RzLkJBU0VfVVJMKSBuYXZpZ2F0ZShjb25zdHMuV0VBVEhFUl9QQUdFX1VSTCk7XHJcbiAgICAgICAgfSwgW2xvY2F0aW9uLnBhdGhuYW1lXSk7XHJcblxyXG4gICAgICAgIHJldHVybiA8ZGl2IHsuLi57Y2xhc3NOYW1lOiBjbGFzc05hbWVzKGNsYXNzTmFtZSwgJ2xheW91dCcpfX0+XHJcbiAgICAgICAgICAgIDxFcnJvck1vZGFsIHsuLi57Z2xvYmFsRXJyb3J9fS8+XHJcbiAgICAgICAgICAgIDxIZWFkZXIgey4uLntwYXRobmFtZTogbG9jYXRpb24ucGF0aG5hbWUsIHRvZ2dsZVRoZW1lLCBjdXJyZW50VGhlbWV9fS8+XHJcbiAgICAgICAgICAgIDxTdXNwZW5zZSBmYWxsYmFjaz17PExvYWRlci8+fT5cclxuICAgICAgICAgICAgICAgIDxSb3V0ZXIgey4uLntjbGFzc05hbWU6ICdyb3V0ZXInfX0+XHJcbiAgICAgICAgICAgICAgICAgICAgPFdlYXRoZXIgey4uLntwYXRoOiBjb25zdHMuV0VBVEhFUl9QQUdFX1VSTCwgY2l0eSwgZmF2b3JpdGVzLCBvbkFkZEZhdm9yaXRlLCBvblJlbW92ZUZhdm9yaXRlfX0vPlxyXG4gICAgICAgICAgICAgICAgICAgIDxGYXZvcml0ZXMgey4uLntwYXRoOiBjb25zdHMuRkFWT1JJVEVTX1BBR0VfVVJMLCBmYXZvcml0ZXMsIG9uUmVtb3ZlRmF2b3JpdGV9fS8+XHJcbiAgICAgICAgICAgICAgICAgICAgPFBhZ2VOb3RGb3VuZCBkZWZhdWx0Lz5cclxuICAgICAgICAgICAgICAgIDwvUm91dGVyPlxyXG4gICAgICAgICAgICA8L1N1c3BlbnNlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgfVxyXG4pYCR7c3R5bGVzLkxheW91dH1gO1xyXG5cclxuY29uc3QgTGF5b3V0V3JhcHBlciA9IHByb3BzID0+XHJcbiAgICA8U3VzcGVuc2UgZmFsbGJhY2s9ezxMb2FkZXIvPn0+XHJcbiAgICAgICAgPFJvdXRlcj5cclxuICAgICAgICAgICAgPExheW91dCB7Li4ue3BhdGg6ICcuLyonLCAuLi5wcm9wc319IGRlZmF1bHQvPlxyXG4gICAgICAgIDwvUm91dGVyPlxyXG4gICAgPC9TdXNwZW5zZT5cclxuXHJcbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+ICh7XHJcbiAgICBpbml0Q29tcGxldGVkOiBzZWxlY3RvcnMuZ2V0SW5pdENvbXBsZXRlZChzdGF0ZSksXHJcbiAgICBjaXR5OiBzZWxlY3RvcnMuZ2V0Q2l0eShzdGF0ZSksXHJcbiAgICBnbG9iYWxFcnJvcjogc2VsZWN0b3JzLmdldEdsb2JhbEVycm9yKHN0YXRlKSxcclxuICAgIGZhdm9yaXRlczogc2VsZWN0b3JzLmdldEZhdm9yaXRlcyhzdGF0ZSlcclxufSlcclxuXHJcbmNvbnN0IG1hcERpc3BhdGNoVG9Qcm9wcyA9IGRpc3BhdGNoID0+ICh7XHJcbiAgICBpbml0OiAoKSA9PiBkaXNwYXRjaChvcGVyYXRpb25zLmluaXQoKSksXHJcbiAgICBvblJlbW92ZUZhdm9yaXRlOiBkYXRhID0+IGRpc3BhdGNoKG9wZXJhdGlvbnMucmVtb3ZlRmF2b3JpdGVzKGRhdGEpKSxcclxuICAgIG9uQWRkRmF2b3JpdGU6IGRhdGEgPT4gZGlzcGF0Y2gob3BlcmF0aW9ucy5hZGRGYXZvcml0ZXMoZGF0YSkpLFxyXG59KVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTGF5b3V0V3JhcHBlcik7XHJcbiIsImltcG9ydCB7Y3JlYXRlR2xvYmFsU3R5bGV9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcclxuaW1wb3J0IHtnZXRDb2xvcn0gZnJvbSAnc3R5bGVzL2hlbHBlcic7XHJcblxyXG5leHBvcnQgY29uc3QgR2xvYmFsU3R5bGUgPSBjcmVhdGVHbG9iYWxTdHlsZWBcclxuICAgIGh0bWwsYm9keSB7XHJcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgKiB7XHJcbiAgICAgICAgY29sb3I6ICR7Z2V0Q29sb3IoJ3RleHQnKX07XHJcbiAgICB9XHJcbiAgICBcclxuICBcclxuICAgIGJvZHkge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0Q29sb3IoJ2JhY2tncm91bmQnKX07XHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdUaW5vcycsICdSb2JvdG8nLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7XHJcbiAgICB9IFxyXG4gICAgXHJcbiAgICAjYXBwIHtcclxuICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICBcclxuICAgICAgICA+ICoge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgZGl2IHtcclxuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDMwMG1zLCBib3gtc2hhZG93IDMwMG1zLCBjb2xvciAzMDBtcztcclxuICAgIH1cclxuICAgIFxyXG5gO1xyXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcblxyXG5jbGFzcyBFcnJvckJvdW5kYXJ5IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcclxuICAgIGNvbXBvbmVudERpZENhdGNoKGVycm9yLCBpbmZvKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcclxuICAgIH1cclxuXHJcbiAgICByZW5kZXIoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hpbGRyZW47XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IEVycm9yQm91bmRhcnk7XHJcbiIsImltcG9ydCBSZWFjdCwge3VzZUNhbGxiYWNrLCB1c2VTdGF0ZX0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7VGhlbWVQcm92aWRlcn0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xyXG5pbXBvcnQgdGhlbWUgZnJvbSAnc3R5bGVzL3RoZW1lJztcclxuaW1wb3J0IExheW91dCBmcm9tICcuL2NvbXBvbmVudHMvTGF5b3V0L0xheW91dCc7XHJcbmltcG9ydCAqIGFzIHN0eWxlcyBmcm9tICcuL3N0eWxlcyc7XHJcbmltcG9ydCB7TG9jYXRpb25Qcm92aWRlciwgY3JlYXRlSGlzdG9yeX0gZnJvbSBcIkByZWFjaC9yb3V0ZXJcIjtcclxuaW1wb3J0IEVycm9yQm91bmRhcnkgZnJvbSAnLi9jb21wb25lbnRzL0Vycm9yQm91bmRhcnkvRXJyb3JCb3VuZGFyeSc7XHJcblxyXG5jb25zdCBoaXN0b3J5ID0gY3JlYXRlSGlzdG9yeSh3aW5kb3cpO1xyXG5cclxuY29uc3QgdGhlbWVUeXBlcyA9IFtcImxpZ2h0XCIsIFwiZGFya1wiXTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcclxuXHJcbiAgICBjb25zdCBbY3VycmVudFRoZW1lLCBzZXRDdXJyZW50VGhlbWVdID0gdXNlU3RhdGUodGhlbWVUeXBlc1swXSk7XHJcblxyXG4gICAgY29uc3QgdG9nZ2xlVGhlbWUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XHJcbiAgICAgICAgc2V0Q3VycmVudFRoZW1lKGN1cnJlbnRUaGVtZSA9PT0gdGhlbWVUeXBlc1swXSA/IHRoZW1lVHlwZXNbMV0gOiB0aGVtZVR5cGVzWzBdKVxyXG4gICAgfSwgW2N1cnJlbnRUaGVtZSwgc2V0Q3VycmVudFRoZW1lXSk7XHJcblxyXG4gICAgcmV0dXJuIDw+XHJcbiAgICAgICAgPEVycm9yQm91bmRhcnk+XHJcbiAgICAgICAgICAgIDxUaGVtZVByb3ZpZGVyIHsuLi57dGhlbWU6IHRoZW1lW2N1cnJlbnRUaGVtZV19fT5cclxuICAgICAgICAgICAgICAgIDxMb2NhdGlvblByb3ZpZGVyIHsuLi57aGlzdG9yeX19PlxyXG4gICAgICAgICAgICAgICAgICAgIDxzdHlsZXMuR2xvYmFsU3R5bGUvPlxyXG4gICAgICAgICAgICAgICAgICAgIDxMYXlvdXQgey4uLnt0b2dnbGVUaGVtZSwgY3VycmVudFRoZW1lfX0vPlxyXG4gICAgICAgICAgICAgICAgPC9Mb2NhdGlvblByb3ZpZGVyPlxyXG4gICAgICAgICAgICA8L1RoZW1lUHJvdmlkZXI+XHJcbiAgICAgICAgPC9FcnJvckJvdW5kYXJ5PlxyXG4gICAgPC8+O1xyXG59XHJcblxyXG4iLCJmdW5jdGlvbiBjcmVhdGVUaHVua01pZGRsZXdhcmUoZXh0cmFBcmd1bWVudCkge1xuICByZXR1cm4gZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmLmRpc3BhdGNoLFxuICAgICAgICBnZXRTdGF0ZSA9IF9yZWYuZ2V0U3RhdGU7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChuZXh0KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHJldHVybiBhY3Rpb24oZGlzcGF0Y2gsIGdldFN0YXRlLCBleHRyYUFyZ3VtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7XG4gICAgICB9O1xuICAgIH07XG4gIH07XG59XG5cbnZhciB0aHVuayA9IGNyZWF0ZVRodW5rTWlkZGxld2FyZSgpO1xudGh1bmsud2l0aEV4dHJhQXJndW1lbnQgPSBjcmVhdGVUaHVua01pZGRsZXdhcmU7XG5cbmV4cG9ydCBkZWZhdWx0IHRodW5rOyIsImltcG9ydCAqIGFzIHR5cGVzIGZyb20gXCIuL3R5cGVzXCI7XHJcbmltcG9ydCB7dXBkYXRlU3RhdGV9IGZyb20gXCJzdG9yZS91dGlsc1wiO1xyXG5cclxuXHJcbmNvbnN0IElOSVRJQUxfU1RBVEUgPSB7XHJcbiAgICBnbG9iYWxFcnJvcjogbnVsbCxcclxuICAgIGNpdHk6IG51bGwsXHJcbiAgICBpbml0Q29tcGxldGVkOiBmYWxzZSxcclxuICAgIGZhdm9yaXRlczogW11cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChzdGF0ZSA9IElOSVRJQUxfU1RBVEUsIHt0eXBlLCBkYXRhfSkgPT4ge1xyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5TRVRfR0xPQkFMX0VSUk9SOlxyXG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlU3RhdGUoe3N0YXRlLCBkYXRhfSk7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5JTklUOlxyXG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlU3RhdGUoe3N0YXRlLCBkYXRhfSk7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5TRVRfQ0lUWTpcclxuICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZVN0YXRlKHtzdGF0ZSwgZGF0YX0pO1xyXG4gICAgICAgIGNhc2UgdHlwZXMuU0VUX0ZBVk9SSVRFUzpcclxuICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZVN0YXRlKHtzdGF0ZSwgZGF0YX0pO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgIH1cclxufTtcclxuXHJcbiIsImltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4vdHlwZXMnO1xyXG5pbXBvcnQge3VwZGF0ZVN0YXRlfSBmcm9tICdzdG9yZS91dGlscyc7XHJcblxyXG5jb25zdCBJTklUSUFMX1NUQVRFID0ge1xyXG4gICAgZmF2b3JpdGVzRGF0YToge31cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChzdGF0ZSA9IElOSVRJQUxfU1RBVEUsIHt0eXBlLCBkYXRhfSkgPT4ge1xyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5TRVRfRkFWT1JJVEVTX0RBVEE6XHJcbiAgICAgICAgICAgIHJldHVybiB1cGRhdGVTdGF0ZSh7c3RhdGUsIGRhdGF9KTtcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XHJcblxyXG4gICAgfVxyXG59O1xyXG5cclxuXHJcbiIsImltcG9ydCAqIGFzIHR5cGVzIGZyb20gJy4vdHlwZXMnO1xyXG5pbXBvcnQge3VwZGF0ZVN0YXRlfSBmcm9tICdzdG9yZS91dGlscyc7XHJcblxyXG5jb25zdCBJTklUSUFMX1NUQVRFID0ge1xyXG4gICAgaW5pdENvbXBsZXRlZDogZmFsc2UsXHJcbiAgICB3ZWF0aGVyRGF0YToge30sXHJcbiAgICBmb3JtRXJyb3I6IG51bGxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IChzdGF0ZSA9IElOSVRJQUxfU1RBVEUsIHt0eXBlLCBkYXRhfSkgPT4ge1xyXG4gICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5JTklUOlxyXG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlU3RhdGUoe3N0YXRlLCBkYXRhfSk7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5TRVRfV0VBVEhFUl9EQVRBOlxyXG4gICAgICAgICAgICByZXR1cm4gdXBkYXRlU3RhdGUoe3N0YXRlLCBkYXRhfSk7XHJcbiAgICAgICAgY2FzZSB0eXBlcy5TRVRfRk9STV9FUlJPUjpcclxuICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZVN0YXRlKHtzdGF0ZSwgZGF0YX0pO1xyXG4gICAgICAgICAgICBjYXNlIHR5cGVzLlNFVF9JTklUX0NPTVBMRVRFRDpcclxuICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZVN0YXRlKHtzdGF0ZSwgZGF0YX0pO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcclxuXHJcbiAgICB9XHJcbn07XHJcbiIsImltcG9ydCB7YXBwbHlNaWRkbGV3YXJlLCBjb21iaW5lUmVkdWNlcnMsIGNyZWF0ZVN0b3JlLCBjb21wb3NlfSBmcm9tICdyZWR1eCc7XHJcbmltcG9ydCB0aHVua01pZGRsZXdhcmUgZnJvbSBcInJlZHV4LXRodW5rXCI7XHJcbmltcG9ydCBsYXlvdXQgZnJvbSBcInN0b3JlL0xheW91dC9yZWR1Y2VyXCI7XHJcbmltcG9ydCBmYXZvcml0ZXMgZnJvbSBcInN0b3JlL0Zhdm9yaXRlcy9yZWR1Y2VyXCI7XHJcbmltcG9ydCB3ZWF0aGVyIGZyb20gXCJzdG9yZS9XZWF0aGVyL3JlZHVjZXJcIjtcclxuXHJcbmNvbnN0IHJvb3RSZWR1Y2VyID0gY29tYmluZVJlZHVjZXJzKHtcclxuICAgIGxheW91dCxcclxuICAgIGZhdm9yaXRlcyxcclxuICAgIHdlYXRoZXJcclxufSk7XHJcblxyXG5jb25zdCBjb21wb3NlRW5oYW5jZXJzID0gd2luZG93Ll9fUkVEVVhfREVWVE9PTFNfRVhURU5TSU9OX0NPTVBPU0VfXyB8fCBjb21wb3NlO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlU3RvcmUocm9vdFJlZHVjZXIsIGNvbXBvc2VFbmhhbmNlcnMoXHJcbiAgICBhcHBseU1pZGRsZXdhcmUodGh1bmtNaWRkbGV3YXJlKVxyXG4pKTtcclxuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ3JlYWN0LWRvbSc7XHJcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ3JlYWN0LXJlZHV4JztcclxuaW1wb3J0IEFwcCBmcm9tICcuL0FwcC9BcHAnO1xyXG5pbXBvcnQgc3RvcmUgZnJvbSAnc3RvcmUnO1xyXG5pbXBvcnQgJ2Jvb3RzdHJhcC9kaXN0L2Nzcy9ib290c3RyYXAubWluLmNzcyc7XHJcblxyXG5yZW5kZXIoXHJcbiAgICA8UHJvdmlkZXIgey4uLntzdG9yZX19PlxyXG4gICAgICAgIDxBcHAvPlxyXG4gICAgPC9Qcm92aWRlcj4sXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJyksXHJcbik7XHJcblxyXG5pZiAobW9kdWxlLmhvdClcclxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KCk7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=